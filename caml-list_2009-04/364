Return-Path: <mailinglists@tobias-elze.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.3 required=5.0 tests=AWL,NO_REAL_NAME 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 39D39BC37
	for <caml-list@yquem.inria.fr>; Wed, 29 Apr 2009 19:10:27 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Al0FAD8n+ElRqZLhd2dsb2JhbACBUIwVAYgOewEMCgkJEbkag3UF
X-IronPort-AV: E=Sophos;i="4.40,267,1238968800"; 
   d="scan'208";a="25377704"
Received: from em-p00-ob.rzone.de ([81.169.146.225])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 29 Apr 2009 19:10:07 +0200
X-RZG-CLASS-ID: em00
Received: from post.webmailer.de (bel.store [192.168.41.68])
	by snori-em-01.store (RZmta 18.31) with ESMTP id a018e8l3TEGZGo ;
	Wed, 29 Apr 2009 19:10:06 +0200 (MEST)
Received: (from httpd@localhost)
	by post.webmailer.de (8.13.7/8.13.6) id n3THA6c9025319;
	Wed, 29 Apr 2009 19:10:06 +0200 (MEST)
Date: Wed, 29 Apr 2009 19:10:06 +0200 (MEST)
Message-Id: <200904291710.n3THA6c9025319@post.webmailer.de>
To: caml-list@yquem.inria.fr
From: mailinglists@tobias-elze.de
Subject: Conflicts between threads and system calls on MacOS X?
Cc: mailinglists@tobias-elze.de
X-Priority: 3
X-Abuse: 389747 / 141.5.26.76
X-RZG-MBID: 15cHLgiPQLuzb8z136v2LGgwexnGUFDD7RDNfUYF6C7omKUx
MIME-Version: 1.0
Content-Type: text/plain; charset="ISO-8859-1"
Content-Transfer-Encoding: quoted-printable
X-Spam: no; 0.00; macos:01 macos:01 ocaml:01 ocaml:01 ocamlopt:01 -thread:01 cmxa:01 cmxa:01 threadtest:01 compilation:01 tobias:01 threads:01 threads:01 unix:01 unix:01 

Hello,

I observed a strange behavior on MacOS X, both with the native ocaml versio=
n and the macports version (latest stable ocaml version in both cases). Whe=
n I compile the following file test.ml:

=3D=3D=3D=3D

(*ocamlopt -thread unix.cmxa threads.cmxa -o threadtest test.ml*)

ignore (Unix.system "pwd > pwd.out");;
ignore (Thread.create (fun _ -> ()) 5);;

=3D=3D=3D=3D

the system call is NOT performed. However, without the last line and the sa=
me compilation commands it is working.
On Linux, it's working perfectly with the last line.

Did I do something wrong, or is it not possible to do system calls together=
 with using threads?

By the way, the same happens with Sys.command and with Unix.create_process.


Thanks a lot in advance for help,

Tobias

