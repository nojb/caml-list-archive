Return-Path: <garrigue@math.nagoya-u.ac.jp>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 0BD0EBBAF
	for <caml-list@yquem.inria.fr>; Mon,  6 Apr 2009 05:25:27 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAK8S2UmCNhAB/2dsb2JhbADHcYQPBg
X-IronPort-AV: E=Sophos;i="4.39,328,1235948400"; 
   d="scan'208";a="37923508"
Received: from kurims.kurims.kyoto-u.ac.jp ([130.54.16.1])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 06 Apr 2009 05:25:25 +0200
Received: from localhost (orion [130.54.16.5])
	by kurims.kurims.kyoto-u.ac.jp (8.13.8/8.13.8) with ESMTP id n363PJb0025816;
	Mon, 6 Apr 2009 12:25:19 +0900 (JST)
Date: Mon, 06 Apr 2009 12:25:06 +0900 (JST)
Message-Id: <20090406.122506.140703420.garrigue@math.nagoya-u.ac.jp>
To: rathereasy@gmail.com
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] A small question on polymorphic variants
From: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <f74178430904051445o4348b7feic5e6638f0ef7860e@mail.gmail.com>
References: <f74178430904051445o4348b7feic5e6638f0ef7860e@mail.gmail.com>
X-Mailer: Mew version 4.2 on Emacs 22.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; variants:01 subtype:01 coercions:01 coercions:01 subtyping:01 polymorphic:01 polymorphic:01 caml-list:01 constructor:01 substitution:01 variant:02 variant:02 covariant:02 garrigue:03 garrigue:03 

From: Jacques Le Normand <rathereasy@gmail.com>

> let a be a polymorphic variant type of the form  ([`C1 of t1 | `C2 of t2 |
> .. | `Cn of tn] as 'a)
> let b be a polymorphic variant type of the form ([`C1 of t1['b/'a] | `C2 of
> t2['b/'a] | ... | `Cn of tn['b/'a] | Cp of tp] as 'b)
> where ['b/'a] represents substitution. In other words, b has one more
> constructor than a. Is a always a subtype of b?

Yes, but only if 'a appears only in covariant positions inside
t1...tn. And you will need "double coercions" (i.e. coercions with
explicit source and target types) to enforce this subtyping.

Jacques Garrigue

