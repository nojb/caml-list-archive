Return-Path: <jeremie@dimino.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.3 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 5B2D0BBC4
	for <caml-list@yquem.inria.fr>; Thu,  2 Apr 2009 14:33:48 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAG1N1EnVuiYS/2dsb2JhbADQDgeDdQY
X-IronPort-AV: E=Sophos;i="4.39,314,1235948400"; 
   d="scan'208";a="37725232"
Received: from solaria.dimino.org ([213.186.38.18])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 02 Apr 2009 14:33:47 +0200
Received: from aurora (localhost.localdomain [127.0.0.1])
	by solaria.dimino.org (Postfix) with ESMTP id 3E8108004C;
	Thu,  2 Apr 2009 14:33:47 +0200 (CEST)
Received: by aurora (Postfix, from userid 1000)
	id 75B084476F; Thu,  2 Apr 2009 14:33:47 +0200 (CEST)
Subject: Re: [Caml-list] How to achieve this camlp4 syntax extension
From: =?ISO-8859-1?Q?J=E9r=E9mie?= Dimino <jeremie@dimino.org>
To: Conglun Yao <yaoconglun@gmail.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <f7b50d2a0904020442rb51fe54p496e6f2f2b665c3e@mail.gmail.com>
References: <f7b50d2a0904020442rb51fe54p496e6f2f2b665c3e@mail.gmail.com>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Date: Thu, 02 Apr 2009 14:33:47 +0200
Message-Id: <1238675627.26438.144.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.24.5 
X-Spam: no; 0.00; camlp:01 syntax:01 syntax:01 delimited:01 overloading:01 cheers:01 wrote:01 defines:01 caml-list:01 expression:02 module:03 module:03 let:03 extension:06 extension:06 

Conglun Yao wrote:
> I tried to achieve the following syntax extension, but failed.
>=20
> Add expression .[ ] after a module name, inside .[ ] I want to refer
> to the specified module, like
>=20
> let _ =3D M1.M2.[ here is my syntax,  using M1.M2 module ]

You should have a look at delimited overloading:

  http://pa-do.forge.ocamlcore.org/

It defines the same kind of syntax extension.

Cheers,
J=C3=A9r=C3=A9mie

