Return-Path: <psnively@mac.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id B0B72BB83
	for <caml-list@yquem.inria.fr>; Thu, 20 Jul 2006 18:41:01 +0200 (CEST)
Received: from smtpout.mac.com (smtpout.mac.com [17.250.248.173])
	by nez-perce.inria.fr (8.13.6/8.13.6) with ESMTP id k6KGf0YJ007961
	for <caml-list@yquem.inria.fr>; Thu, 20 Jul 2006 18:41:01 +0200
Received: from mac.com (smtpin07-en2 [10.13.10.152])
	by smtpout.mac.com (Xserve/8.12.11/smtpout03/MantshX 4.0) with ESMTP id k6KGeumk009726;
	Thu, 20 Jul 2006 09:40:56 -0700 (PDT)
Received: from [192.168.0.100] (dsl092-032-215.lax1.dsl.speakeasy.net [66.92.32.215])
	(authenticated bits=0)
	by mac.com (Xserve/smtpin07/MantshX 4.0) with ESMTP id k6KGejtT028101;
	Thu, 20 Jul 2006 09:40:55 -0700 (PDT)
In-Reply-To: <304169FE-8DD8-4765-9AF1-A943C5293EEB@gmail.com>
References: <304169FE-8DD8-4765-9AF1-A943C5293EEB@gmail.com>
Mime-Version: 1.0 (Apple Message framework v752.2)
X-Gpgmail-State: !signed
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Message-Id: <5A0AA3B4-3ECE-43D5-BBFF-147867A585E1@mac.com>
Cc: caml-list <caml-list@yquem.inria.fr>
Content-Transfer-Encoding: 7bit
From: Paul Snively <psnively@mac.com>
Subject: Re: [Caml-list] Cocoa bindings (again)
Date: Thu, 20 Jul 2006 09:40:44 -0700
To: Joel Reymont <joelr1@gmail.com>
X-Mailer: Apple Mail (2.752.2)
X-Miltered: at nez-perce with ID 44BFB21C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; bindings:01 bindings:01 parsing:01 henrikson:01 runtime:01 runtime:01 o'caml:01 iirc:01 parser:01 ffi:01 resolving:01 parser:01 annotations:01 o'caml:01 haskell:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3


On Jul 18, 2006, at 2:38 PM, Joel Reymont wrote:

> Folks,
>
> I would like to tinker with Cocoa bindings and try to move that  
> project forward.
>
> Where should I start from? I would like to take the route of  
> parsing Obj-C header files.
>
I agree that this is long overdue. A long time ago, Mike Hamburg,  
Jeff Henrikson, and I made noises about working on this, based on  
Mike's work on addressing the runtime side of it (he got so far as to  
have a somewhat under-performant but usable runtime library  
integrating O'Caml with the Objective C runtime based, IIRC, on  
Obj.magic) and Jeff pointed out that Frontc, the parser that he used  
in his Forklift FFI, had diverged from probably the best one for real- 
world use, which is embedded in CIL and intertwined in ways that make  
it a challenge to backport. Mike, Jeff, if you're reading this, is  
this a fair characterization of your efforts and thoughts?

In any case, I still believe that:

1) It's worth addressing whatever issues need addressing in Mike's work.
2) It's worth resolving what parser to use and, IMHO, how to evolve  
Forklift to support generating calls to and from Objective C via  
Mike's runtime work.
3) It's worth combining the two to provide the Forklift annotations  
to allow calling into and out of Cocoa on Mac OS X.
4) It's worth writing an FRP system for O'Caml a la Yampa for Haskell.
5) It's worth using said FRP system in conjunction with perhaps  
<http://ocaml-win32.sourceforge.net>, http://wwwfun.kurims.kyoto- 
u.ac.jp/soft/lsl/lablgtk.html, and our Cocoa bindings to create a  
truly cross-platform GUI environment for O'Caml.

Thoughts?

> 	Thanks, Joel
>
> --
> http://wagerlabs.com/

Best regards,
Paul

