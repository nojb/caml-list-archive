Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id D8483BBB7
	for <caml-list@yquem.inria.fr>; Wed, 26 Jul 2006 11:46:18 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k6Q9kIA5025578
	for <caml-list@yquem.inria.fr>; Wed, 26 Jul 2006 11:46:18 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA30925 for <caml-list@pauillac.inria.fr>; Wed, 26 Jul 2006 11:46:18 +0200 (MET DST)
Received: from [128.93.8.130] (macadam.inria.fr [128.93.8.130])
	by nez-perce.inria.fr (8.13.6/8.13.6) with ESMTP id k6Q9kHeQ018063
	for <caml-list@inria.fr>; Wed, 26 Jul 2006 11:46:17 +0200
Mime-Version: 1.0 (Apple Message framework v750)
In-Reply-To: <26EB47FDD566A7469FC862DAF373792F017112AD@kaiserslautern1.lmsintl.com>
References: <26EB47FDD566A7469FC862DAF373792F017112AD@kaiserslautern1.lmsintl.com>
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <537FA1A3-6DF3-439A-AA9E-F75B6D1BFF81@inria.fr>
Content-Transfer-Encoding: 7bit
From: Damien Doligez <damien.doligez@inria.fr>
Subject: Re: AW: [Caml-list] generic Hashtbl.to_array
Date: Wed, 26 Jul 2006 11:46:34 +0200
To: caml-list <caml-list@inria.fr>
X-Mailer: Apple Mail (2.750)
X-Miltered: at concorde with ID 44C739EA.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 44C739E9.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; damien:01 damien:01 hashtbl:01 hashtbl:01 iter:01 hash:01 2006:98 wrote:01 doligez:01 doligez:01 caml-list:01 guess:03 guess:03 raise:03 let:03 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3


On 2006-07-25, at 14:44, Christoph Bauer wrote:

>>
>> let to_array_4 t =
>>    let init = ref None in
>>    begin try Hashtbl.iter (fun k v -> init := Some (k,v);
>> raise Exit) t
>
> My guess: hashtbl has to loop over the first empty buckets.
> And this eats the cpu cycles.

I guess that's correct, since you're doing your tests with a
100000-sized hash table that contains only one entry. I wouldn't
call that a typical case.

-- Damien

