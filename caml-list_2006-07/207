Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id BE417BB83
	for <caml-list@yquem.inria.fr>; Fri, 21 Jul 2006 10:59:52 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.6/8.13.6) with ESMTP id k6L8xqR3029854
	for <caml-list@yquem.inria.fr>; Fri, 21 Jul 2006 10:59:52 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA17090 for <caml-list@pauillac.inria.fr>; Fri, 21 Jul 2006 10:59:51 +0200 (MET DST)
Received: from ext.lri.fr (ext.lri.fr [129.175.15.4])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k6L8xpH8014863
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Fri, 21 Jul 2006 10:59:51 +0200
Received: from smtp.lri.fr (serveur3-5 [129.175.3.5])
	by ext.lri.fr (Postfix) with ESMTP id EEDF8202163;
	Fri, 21 Jul 2006 10:59:48 +0200 (CEST)
Received: from pc9-152.lri.fr (pc9-152 [129.175.9.152])
	by smtp.lri.fr (Postfix) with ESMTP
	id 90904CED98; Fri, 21 Jul 2006 10:59:47 +0200 (CEST)
Received: from filliatr by pc9-152.lri.fr with local (Exim 4.60)
	(envelope-from <filliatr@pc9-152.lri.fr>)
	id 1G3qrQ-0001I6-Iq; Fri, 21 Jul 2006 10:59:52 +0200
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Message-ID: <17600.38792.566702.750339@pc9-152.lri.fr>
Date: Fri, 21 Jul 2006 10:59:52 +0200
To: "=?ISO-8859-1?Q?Tiago_Ant=E3o?=" <tiagoantao@gmail.com>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Logging
In-Reply-To: <6d941f120607200220p5f09b8cby15c2f1c1669abf6b@mail.gmail.com>
References: <6d941f120607200220p5f09b8cby15c2f1c1669abf6b@mail.gmail.com>
X-Mailer: VM 7.19 under Emacs 21.4.1
From: Jean-Christophe Filliatre <filliatr@lri.fr>
X-Virus-Scanned: by amavisd-new at lri.fr
X-Miltered: at nez-perce with ID 44C09788.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 44C09787.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; filliatre:01 filliatr:01 lri:01 debugging:01 debugging:01 fprintf:01 val:01 printf:01 datatypes:01 writes:01 caml-list:01 caml:02 caml:02 unit:03 flush:03 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3


Tiago Antão writes:
 > 
 > Are there any best practices/libraries regarding logging in CAML? My
 > main use for it will be debugging (I know there are debugging
 > facilities in CAML, but I am very used to using log as a debug tool -
 > think Log4J for instance)...

I'm also  using logging  as a  debug facility sometimes,  and I  use a
printf-like function for this purpose, as follows:

======================================================================
let log_ch = open_out "logfile"
let log = Format.formatter_of_out_channel log_ch
let () = at_exit (fun () -> Format.pp_print_flush log (); close_out log_ch)
let lprintf s = Format.fprintf log s
======================================================================

which provides a function lprintf of type

======================================================================
val lprintf : ('a, Format.formatter, unit) format -> 'a = <fun>
======================================================================

to be used like Format.printf.

This is surely not  the best way to do, and not  very powerful, but at
least  it is  convenient  to  use when  you  already have  Format-like
printers for your datatypes (using %a).

Hope this helps,
-- 
Jean-Christophe

