Return-Path: <andreas.biegert@googlemail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id BD1C6BB83
	for <caml-list@yquem.inria.fr>; Tue,  4 Jul 2006 18:55:23 +0200 (CEST)
Received: from nf-out-0910.google.com (nf-out-0910.google.com [64.233.182.190])
	by nez-perce.inria.fr (8.13.6/8.13.6) with ESMTP id k64GtOJe012280
	for <caml-list@yquem.inria.fr>; Tue, 4 Jul 2006 18:55:24 +0200
Received: by nf-out-0910.google.com with SMTP id k27so987431nfc
        for <caml-list@yquem.inria.fr>; Tue, 04 Jul 2006 09:55:23 -0700 (PDT)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=googlemail.com;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=F2ubiCFnWqZMdYfKjP1vC4bJ0V5wGENObn6CbJxAWC42r5cmIAkbmxjqUujC/MU4MrwniTcevgWgX7yVPLpd8arU6R+1quYaggH7YBBzJALlu5Vyr0kw2x2yW/nEWvjYEQmYFtqyjaC7IaNzFMJu2ia61MHH1aOduI9LCEygmdc=
Received: by 10.48.218.19 with SMTP id q19mr3464681nfg;
        Tue, 04 Jul 2006 09:55:23 -0700 (PDT)
Received: by 10.48.220.18 with HTTP; Tue, 4 Jul 2006 09:55:22 -0700 (PDT)
Message-ID: <fd0847170607040955k1d51f02ao8b35acdbe05a5c19@mail.gmail.com>
Date: Tue, 4 Jul 2006 18:55:22 +0200
From: "Andreas Biegert" <andreas.biegert@googlemail.com>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Package with multidimensional AND sparse matrices?
In-Reply-To: <200607041103.59059.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <fd0847170607031555y3cdeae8fl2e54b75bae052854@mail.gmail.com>
	 <fd0847170607040038u117d2594r38adcbdf1f00ec04@mail.gmail.com>
	 <fd0847170607040046q6c96c8e9w2d0a494948bb40db@mail.gmail.com>
	 <200607041103.59059.jon@ffconsultancy.com>
X-j-chkmail-Score: MSGID : 44AA9D7C.001 on nez-perce : j-chkmail score : X : 0/20 1
X-Miltered: at nez-perce with ID 44AA9D7C.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; matrices:01 computes:01 computes:01 alignment:01 sequences:01 computed:01 non-zero:01 non-zero:01 sequences:01 hashtables:01 matrices:01 hashtable:01 ocaml:01 beginner's:01 ocaml:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_BY_IP autolearn=disabled 
	version=3.0.3

Since the algorithm computes alignemnts in most casses the pattern of
access will be adjacent tuples, for example (i,j,k,l) (i,j,k-1,l-1)
etc. But it does not have to be that way. The only contstraint that
holds for sure is i<j<k<l.

2006/7/4, Jon Harrop <jon@ffconsultancy.com>:
> On Tuesday 04 July 2006 08:46, Andreas Biegert wrote:
> > Well, in short: the algorithm computes the optimal multiple alignment
> > of up to n protein sequences with maximum length L. The
> > straightforward and theoretically optimal approach to solve this
> > problem is by dynamic programming, therefore the time and space
> > complexity is O(L^n). I managed to come up with a pretty good
> > heuristic that lets me boil down the number of cells that need to be
> > computed giving me a complexitiy of O(L^2) instead of O(L^n), in fact
> > I can even manually adjust the number of nonzero entries in the
> > matrix. In the 2000*2000*2000*2000 matrix only at most 2000 cells will
> > be non-zero. Furthermore for all non-zero cells M(i,j,k,l) holds
> > i<j<k<l. The bad news is that performance is important since the
> > program has to run under 5min. An estimation of the time requirements
> > given the number of sequences n and masimum lengths L is:
> >
> > 24 * L^2 * T_x * 2^(n+1) - 1
> > with T_x being about 100ns
>
> Ok. What patterns of access will there be?
>
> > For n=4 and L=2000 I get just about 5min. Would it be a bad idea to
> > use Hashtables all the way instead of matrices?
>
> No, I don't think so. If you need more performance then you can always change
> things later. I'd concentrate on getting a working algorithm first.
>
> > Accessing elements in
> > a hashtable has O(1), right?
>
> Roughly, yes. :-)
>
> --
> Dr Jon D Harrop, Flying Frog Consultancy Ltd.
> Objective CAML for Scientists
> http://www.ffconsultancy.com/products/ocaml_for_scientists
>
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>

