Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 73719BBB7
	for <caml-list@yquem.inria.fr>; Wed, 26 Jul 2006 04:18:46 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k6Q2IjbQ016368
	for <caml-list@yquem.inria.fr>; Wed, 26 Jul 2006 04:18:45 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA25606 for <caml-list@pauillac.inria.fr>; Wed, 26 Jul 2006 04:18:45 +0200 (MET DST)
Received: from selenite.metnet.navy.mil (selenite.metnet.navy.mil [192.16.167.32])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k6Q2IgvD016348
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Wed, 26 Jul 2006 04:18:44 +0200
Received: (qmail 28804 invoked by uid 107); 26 Jul 2006 02:18:39 -0000
Received: from vwmetnet.metnet.navy.mil (192.16.167.21)
  by selenite.metnet.navy.mil with SMTP; 26 Jul 2006 02:18:39 -0000
Received: from Adric.metnet.fnmoc.navy.mil ([10.100.105.102])
 by vwmetnet.metnet.navy.mil (NAVGW 2.5.2.9) with SMTP id M2006072602302220234
 for <caml-list@inria.fr>; Wed, 26 Jul 2006 02:30:22 GMT
Received: by Adric.metnet.fnmoc.navy.mil (Postfix, from userid 760)
	id 4FF7DA9B1; Tue, 25 Jul 2006 19:16:15 -0700 (PDT)
To: caml-list@inria.fr
Subject: generic Hashtbl.to_array
Reply-To: oleg@pobox.com
Errors-To: oleg@okmij.org
From: oleg@pobox.com
Message-Id: <20060726021615.4FF7DA9B1@Adric.metnet.fnmoc.navy.mil>
Date: Tue, 25 Jul 2006 19:16:15 -0700 (PDT)
X-Miltered: at concorde with ID 44C6D105.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 44C6D102.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; hashtbl:01 oleg:01 hashtable:01 hashtbl:01 match:02 let:03 let:03 fold:06 fold:06 generic:08 fun:08 ignore:10 wonder:13 some:13 some:13 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=NO_REAL_NAME 
	autolearn=disabled version=3.0.3


I wonder about the following solution. At least it traverses the
hashtable exactly once (and it does not ignore the result of the
fold).


let to_array9 t =
  let Some (a,_) =
    Hashtbl.fold (fun k v seed ->
      match seed with
	Some (a,i) -> a.(i) <- (k,v); Some (a,i+1)
      | None -> let a =  Array.make (Hashtbl.length t) (k,v) in
                Some (a,1))
      t None
  in a
;;

