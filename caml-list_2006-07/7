Return-Path: <skaller@users.sourceforge.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 0DA1CBB83
	for <caml-list@yquem.inria.fr>; Mon,  3 Jul 2006 16:24:15 +0200 (CEST)
Received: from ash25e.internode.on.net (ash25e.internode.on.net [203.16.214.182])
	by nez-perce.inria.fr (8.13.6/8.13.6) with ESMTP id k63EODWl006238
	for <caml-list@yquem.inria.fr>; Mon, 3 Jul 2006 16:24:15 +0200
Received: from rosella (ppp28-237.lns1.syd6.internode.on.net [59.167.28.237])
	by ash25e.internode.on.net (8.13.6/8.13.5) with ESMTP id k63ENiec083100;
	Mon, 3 Jul 2006 23:53:46 +0930 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] Type from local module would escape its scope?
From: skaller <skaller@users.sourceforge.net>
To: Virgile Prevosto <virgile.prevosto@m4x.org>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <20060703155131.7031cffa@is003364.intra.cea.fr>
References: <069A1F65-E50C-4363-9CCA-C6CC9A453D09@vub.ac.be>
	 <20060703155131.7031cffa@is003364.intra.cea.fr>
Content-Type: text/plain
Date: Tue, 04 Jul 2006 00:23:44 +1000
Message-Id: <1151936624.5203.51.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 44A9288D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; pervasives:01 iirc:01 forall:01 2006:98 wrote:01 sourceforge:01 caml-list:01 variables:02 types:02 scope:03 module:03 unit:03 unit:03 explanation:03 generalized:04 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Mon, 2006-07-03 at 15:51 +0200, Virgile Prevosto wrote:

> Because "'a -> unit" does not mean the same thing in both cases. In the
> case of Pervasives.ignore, it is a type scheme 

[]

> IIRC arguments can not have a generalized type of the form
> "forall 'a, 'a -> unit", but methods and record fields support such
> types

Nice explanation! Interesting comparison of
type schema vs. type variables.

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

