Return-Path: <jm@gaillourdet.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 4AC22BB83
	for <caml-list@yquem.inria.fr>; Wed, 19 Jul 2006 10:09:36 +0200 (CEST)
Received: from m14s26.vip-server.net (m14s26.vip-server.net [193.138.181.188])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k6J89VDt010986
	for <caml-list@yquem.inria.fr>; Wed, 19 Jul 2006 10:09:36 +0200
Received: from [?Q???????????s?$IPv6:::1] (localhost [127.0.0.1])
	by m14s26.vip-server.net (Postfix) with ESMTP id F355C89039;
	Wed, 19 Jul 2006 09:59:21 +0200 (CEST)
In-Reply-To: <304169FE-8DD8-4765-9AF1-A943C5293EEB@gmail.com>
References: <304169FE-8DD8-4765-9AF1-A943C5293EEB@gmail.com>
Mime-Version: 1.0 (Apple Message framework v752.2)
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Message-Id: <345AE3A7-B1C3-495E-839F-BD343FF487C2@gaillourdet.net>
Cc: caml-list <caml-list@yquem.inria.fr>
Content-Transfer-Encoding: 7bit
From: Jean-Marie Gaillourdet <jm@gaillourdet.net>
Subject: Re: [Caml-list] Cocoa bindings (again)
Date: Wed, 19 Jul 2006 10:09:59 +0200
To: Joel Reymont <joelr1@gmail.com>
X-Pgp-Agent: GPGMail 1.1.2 (Tiger)
X-Mailer: Apple Mail (2.752.2)
X-Miltered: at concorde with ID 44BDE8BB.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; bindings:01 hash:01 bindings:01 parsing:01 swig:01 parsing:01 swig:01 ocaml:01 cocoa:98 cocoa:98 wrote:01 caml-list:01 darwin:04 pgp:05 pgp:05 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi,

On 18.07.2006, at 23:38, Joel Reymont wrote:

> Folks,
>
> I would like to tinker with Cocoa bindings and try to move that  
> project forward.
>
> Where should I start from? I would like to take the route of  
> parsing Obj-C header files.

The swig manual states that they support experimentally Objective-C  
parsing. Swig is a wrapper generator with an OCaml backend. So this  
might be a starting point :-)

Regards,
   Jean-Marie

PS: I don't have any experience with swig myself, therefore I don't  
claim that it is really good.
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.1 (Darwin)

iD8DBQFEvejdNIUNP/I5YOgRAlczAJ0VSNF58STHKC2TYTh20npVmTTLWQCfeUP+
ewIbhrUog9FVwuulMfA+evc=
=7pR1
-----END PGP SIGNATURE-----

