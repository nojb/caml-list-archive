Return-Path: <ivg@ieee.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 7692E80054
	for <caml-list@sympa.inria.fr>; Fri,  4 Nov 2016 18:41:32 +0100 (CET)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=ivg@ieee.org; spf=Pass smtp.mailfrom=ivg@ieee.org; spf=None smtp.helo=postmaster@mail-lf0-f47.google.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  ivg@ieee.org) identity=pra; client-ip=209.85.215.47;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ivg@ieee.org"; x-sender="ivg@ieee.org";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  ivg@ieee.org designates 209.85.215.47 as permitted sender)
  identity=mailfrom; client-ip=209.85.215.47;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ivg@ieee.org"; x-sender="ivg@ieee.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-lf0-f47.google.com) identity=helo;
  client-ip=209.85.215.47;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ivg@ieee.org";
  x-sender="postmaster@mail-lf0-f47.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AeJBFwR1k8/RL7o7MsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?segRKPad9pjvdHbS+e9qxAeQG96KsbQU2qGP6/iocFdDyK7JiGoFfp1IWk1Nou?=
 =?us-ascii?q?QttCtkPvS4D1bmJuXhdS0wEZcKflZk+3amLRodQ56mNBXsq3G/pQQfBg/4fVIs?=
 =?us-ascii?q?YL+kQMiC3o/uj7j60qaQSj0AvCC6b7J2IUf+hiTqne5Sv7FfLL0swADCuHpCdr?=
 =?us-ascii?q?ce72ppIVWOg0S0vZ/or9ZLuh5dsPM59sNGTb6yP+FhFeQZX3waNDUZ7cjquB+L?=
 =?us-ascii?q?YQyL53QRQC1CnhNNAgXDqh39Wpb+vznSt+xn2SDcM9egHp4uXjH3zrliTlfHjz?=
 =?us-ascii?q?sAKTU58X3Mwphxkq1zoR+sqlp42YGCM9LdD+Z3Yq6IJYBSfmFGRMsEEnUZWo4?=
 =?us-ascii?q?=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A8AgAUxxxYhi/XVdFdGgEBAQECAQEBA?=
 =?us-ascii?q?QgBAQEBFQEBAQECAQEBAQgBAQEBgwMBAQEBAT06fAeCeqE3gliJXYoZKoU/OgK?=
 =?us-ascii?q?CEAdCEQEBAQEBAQEBAQEBEgEBAQgLCwkdMIIzBAEVAQSCEAEBAwEMBggJHQEBN?=
 =?us-ascii?q?wEECwkCCy0KAgIiEgEFAQ4BDQYTGgiILggOkVePTYEyPzKKJw00Z4RJAQEFiCY?=
 =?us-ascii?q?BAQEBBgEBAQEBARkIEIYvg1CBBYQYXIJXglyIUJFYhjSDC4cBgW5OjU6HKYV4g?=
 =?us-ascii?q?kITHoERDyWBDYJtLCCCBCI0AQSFcYFOAQEB?=
X-IPAS-Result: =?us-ascii?q?A0A8AgAUxxxYhi/XVdFdGgEBAQECAQEBAQgBAQEBFQEBAQE?=
 =?us-ascii?q?CAQEBAQgBAQEBgwMBAQEBAT06fAeCeqE3gliJXYoZKoU/OgKCEAdCEQEBAQEBA?=
 =?us-ascii?q?QEBAQEBEgEBAQgLCwkdMIIzBAEVAQSCEAEBAwEMBggJHQEBNwEECwkCCy0KAgI?=
 =?us-ascii?q?iEgEFAQ4BDQYTGgiILggOkVePTYEyPzKKJw00Z4RJAQEFiCYBAQEBBgEBAQEBA?=
 =?us-ascii?q?RkIEIYvg1CBBYQYXIJXglyIUJFYhjSDC4cBgW5OjU6HKYV4gkITHoERDyWBDYJ?=
 =?us-ascii?q?tLCCCBCI0AQSFcYFOAQEB?=
X-IronPort-AV: E=Sophos;i="5.31,444,1473112800"; 
   d="scan'208,217";a="199269585"
Received: from mail-lf0-f47.google.com ([209.85.215.47])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 04 Nov 2016 18:41:29 +0100
Received: by mail-lf0-f47.google.com with SMTP id b81so69637804lfe.1
        for <caml-list@inria.fr>; Fri, 04 Nov 2016 10:41:29 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=ieee-org.20150623.gappssmtp.com; s=20150623;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=Wi/+grICxYVCqT4Gt2AyXjXV0iyhuVKDhLMa/b0UxjI=;
        b=asTvtqMhLGw5pkyrkMwxENqlUUjJJ8ZEfsat6jh+dfJX0dba7M9IfzOpLfSIyRYaUD
         /jA0rwe7stsJZ56GXuSYG6V/KRED8UpNtKokeorpWcIg/AMXmUv+qdkDo+ceavI5uOd4
         ExDpnDPHTGKh/RIY09TweFJnW6ImX1jexnMmsAI6x6uBql64eKs1F5KmDJ9VL9ipIH7H
         85GFUCMZES02nfr4wW4XkBmRVJ2RJkMUJ+CXD4oitOMGGE63sT42glng5K1F9TlzsseK
         HPipX1+nU6wHGg4k0a0Hvi6MZeKHi5PRS5P4QWgeAASqDDGQXteTa+C/UtnYzUKl8NjB
         DJOQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc;
        bh=Wi/+grICxYVCqT4Gt2AyXjXV0iyhuVKDhLMa/b0UxjI=;
        b=W02b7eMstq6YlV66DlEd8A0hd8XeZszmhhqbx2ViafGW37/mYfaSigIGm+hvuCVLg2
         z5+OwxmfydjMKn2i62/ad/fxyw9Ir9Vmx5UIFvl68yXEkWHdbOHl4NIWJcwe5QOKNfEt
         aIWsLma+yd5dF+d5lRVPmsVze7XvNKPwdNrvnvjplHOfQs9KQA7ce/oPoOnJygRcLrcx
         ojOBuvLB/ZuF428YpHvcwpSA1srz8IR2g1JdvFKV6G/FlPyYM93XsFPv1dsl0/okPew/
         rksUwCtPoaMXaVjj8ytEnjzZskYjNmZ7mn+389mKcJLREinYZloqVXGNsUfYXzDOFhBp
         xS0g==
X-Gm-Message-State: ABUngveoTtN9qvV0Yi5gKU0iRjzC6CUMzNS7JZgC/uwXiWYl7LBJmJHj67AgRICmHRnWRELrmmf9NWob4C9CGvfZ
X-Received: by 10.25.203.148 with SMTP id b142mr8417510lfg.145.1478281288315;
 Fri, 04 Nov 2016 10:41:28 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.114.28.34 with HTTP; Fri, 4 Nov 2016 10:41:27 -0700 (PDT)
In-Reply-To: <C8D95610-16A6-48B4-AB64-D88DE94A2669@inria.fr>
References: <C8D95610-16A6-48B4-AB64-D88DE94A2669@inria.fr>
From: Ivan Gotovchits <ivg@ieee.org>
Date: Fri, 4 Nov 2016 13:41:27 -0400
Message-ID: <CALdWJ+zWkD7xEhmnZ+q2=nPxS3SF6h0PBwMbGcCrRW8eOuBteA@mail.gmail.com>
To: Damien Doligez <damien.doligez@inria.fr>
Cc: caml users <caml-list@inria.fr>, caml announce <caml-announce@inria.fr>
Content-Type: multipart/alternative; boundary=94eb2c1a0770119ffd05407d2f0f
Subject: Re: [Caml-list] [caml-announce] OCaml version 4.04.0 is released.

--94eb2c1a0770119ffd05407d2f0f
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Great news, thank you!

Is flambda enabled by default in 4.04?

On Fri, Nov 4, 2016 at 1:29 PM, Damien Doligez <damien.doligez@inria.fr>
wrote:

> Dear OCaml users,
>
> We have the pleasure of celebrating the discovery of Tutankhamun's
> tomb by announcing the release of OCaml version 4.04.0.
> This is a major release with several new features (most notably,
> Spacetime). See the list of changes below.
>
> It is (or soon will be) available as an OPAM switch, or as a source
> download here: < http://caml.inria.fr/distrib/ocaml-4.04/ >
>
> Happy hacking,
>
> -- Damien Doligez for the OCaml team.
>
>
> OCaml 4.04.0:
> -------------
>
> (Changes that can break existing programs are marked with a "*")
>
> ### Language features:
>
> - PR#7233: Support GADT equations on non-local abstract types
>   (Jacques Garrigue)
>
> - GPR#187, GPR#578: Local opening of modules in a pattern.
>   Syntax: "M.(p)", "M.[p]","M.[| p |]", "M.{p}"
>   (Florian Angeletti, Jacques Garrigue, review by Alain Frisch)
>
> - GPR#301: local exception declarations "let exception ... in"
>   (Alain Frisch)
>
> - GPR#508: Allow shortcut for extension on semicolons: ;%foo
>   (Jeremie Dimino)
>
> - GPR#606: optimized representation for immutable records with a single
>   field, and concrete types with a single constructor with a single
> argument.
>   This is triggered with a [@@unboxed] attribute on the type definition.
>   Currently mutually recursive datatypes are not well supported, this
>   limitation should be lifted in the future (see MPR#7364).
>   (Damien Doligez)
>
> ### Compiler user-interface and warnings:
>
> * PR#6475, GPR#464: interpret all command-line options before compiling a=
ny
>   files, changes (improves) the semantics of repeated -o options or -o
>   combined with -c see the super-detailed commit message at
>   https://github.com/ocaml/ocaml/commit/da56cf6dfdc13c09905c2e07f1d484
> 9c8346eec8
>   (whitequark)
>
> - PR#7139: clarify the wording of Warning 38
>   (Unused exception or extension constructor)
>   (Gabriel Scherer)
>
> * PR#7147, GPR#475: add colors when reporting errors generated by ppx
> rewriters.
>   Remove the `Location.errorf_prefixed` function which is no longer
> relevant
>   (Simon Cruanes, J=C3=A9r=C3=A9mie Dimino)
>
> - PR#7169, GPR#501: clarify the wording of Warning 8
>   (Non-exhaustivity warning for pattern matching)
>   (Florian Angeletti, review and report by Gabriel Scherer)
>
> * GPR#591: Improve support for OCAMLPARAM: (i) do not use objects
>   files with -a, -pack, -shared; (ii) use "before" objects in the toplevel
>   (but not "after" objects); (iii) use -I dirs in the toplevel,
>   (iv) fix bug where -I dirs were ignored when using threads
>   (Marc Lasson, review by Damien Doligez and Alain Frisch)
>
> - GPR#648: New -plugin option for ocamlc and ocamlopt, to dynamically
> extend
>   the compilers at runtime.
>   (Fabrice Le Fessant)
>
> - GPR#684: Detect unused module declarations
>   (Alain Frisch)
>
> - GPR#706: Add a settable Env.Persistent_signature.load function so
>   that cmi files can be loaded from other sources. This can be used to
>   create self-contained toplevels.
>   (J=C3=A9r=C3=A9mie Dimino)
>
> ### Standard library:
>
> - GPR#473: Provide `Sys.backend_type` so that user can write
> backend-specific
>   code in some cases (for example,  code generator).
>   (Hongbo Zhang)
>
> - PR#6279, GPR#553: implement Set.map
>   (Gabriel Scherer)
>
> - PR#6820, GPR#560: Add Obj.reachable_words to compute the
>   "transitive" heap size of a value
>   (Alain Frisch, review by Mark Shinwell and Damien Doligez)
>
> - GPR#589: Add a non-allocating function to recover the number of
>   allocated minor words.
>   (Pierre Chambart, review by Damien Doligez and Gabriel Scherer)
>
> - GPR#626: String.split_on_char
>   (Alain Frisch)
>
> - GPR#669: Filename.extension and Filename.remove_extension
>   (Alain Frisch, request by Edgar Aroutiounian, review by Daniel Bunzli
>   and Damien Doligez)
>
> ### Code generation and optimizations:
>
> - PR#4747, GPR#328: Optimize Hashtbl by using in-place updates of its
>   internal bucket lists.  All operations run in constant stack size
>   and are usually faster, except Hashtbl.copy which can be much
>   slower
>   (Alain Frisch)
>
> * PR#6217, GPR#538: Optimize performance of record update:
>   no more performance cliff when { foo with t1 =3D ..; t2 =3D ...; ... }
>   hits 6 updated fields
>   (Olivier Nicole, review by Thomas Braibant and Pierre Chambart)
>
> - PR#7023, GPR#336: Better unboxing strategy
>   (Alain Frisch, Pierre Chambart)
>
> - PR#7244, GPR#840: Ocamlopt + flambda requires a lot of memory
>   to compile large array literal expressions
>   (Pierre Chambart, review by Mark Shinwell)
>
> - PR#7291, GPR#780: Handle specialisation of recursive function that does
>   not always preserve the arguments
>   (Pierre Chambart, Mark Shinwell, report by Simon Cruanes)
>
> - GPR#427: Obj.is_block is now an inlined OCaml function instead of a
>   C external.  This should be faster.
>   (Demi Obenour)
>
> - GPR#580: Optimize immutable float records
>   (Pierre Chambart, review by Mark Shinwell)
>
> - GPR#602: Do not generate dummy code to force module linking
>   (Pierre Chambart, reviewed by Jacques Garrigue)
>
> - PR#7328, GPR#702: Do not eliminate boxed int divisions by zero and
>   avoid checking twice if divisor is zero with flambda.
>   (Pierre Chambart, report by Jeremy Yallop)
>
> - GPR#703: Optimize some constant string operations when the "-safe-strin=
g"
>   configure time option is enabled.
>   (Pierre Chambart)
>
> - GPR#707: Load cross module information during a meet
>   (Pierre Chambart, report by Leo White, review by Mark Shinwell)
>
> - GPR#709: Share a few more equal switch branches
>   (Pierre Chambart, review by Gabriel Scherer)
>
> - GPR#712: Small improvements to type-based optimizations for array
>   and lazy
>   (Alain Frisch, review by Pierre Chambart)
>
> - GPR#714: Prevent warning 59 from triggering on Lazy of constants
>   (Pierre Chambart, review by Leo White)
>
> - GPR#723 Sort emitted functions according to source location
>   (Pierre Chambart, review by Mark Shinwell)
>
> - Lack of type normalization lead to missing simple compilation for "lazy
> x"
>   (Alain Frisch)
>
> ### Runtime system:
>
> - PR#7210, GPR#562: Allows to register finalisation function that are
>   called only when a value will never be reachable anymore. The
>   drawbacks compared to the existing one is that the finalisation
>   function is not called with the value as argument. These finalisers
>   are registered with `GC.finalise_last`
>   (Fran=C3=A7ois Bobot reviewed by Damien Doligez and Leo White)
>
> - GPR#590: Do not perform compaction if the real overhead is less than
> expected
>   (Thomas Braibant)
>
> ### Tools:
>
> - PR#7189: toplevel #show, follow chains of module aliases
>   (Gabriel Scherer, report by Daniel B=C3=BCnzli, review by Thomas Refis)
>
> - PR#7248: have ocamldep interpret -open arguments in left-to-right order
>   (Gabriel Scherer, report by Anton Bachin)
>
> - PR#7272, GPR#798: ocamldoc, missing line breaks in type_*.html files
>   (Florian Angeletti)
>
> - PR#7290: ocamldoc, improved support for inline records
>   (Florian Angeletti)
>
> - PR#7323, GPR#750: ensure "ocamllex -ml" works with -safe-string
>   (Hongbo Zhang)
>
> - PR#7350, GPR#806: ocamldoc, add viewport metadata to generated html pag=
es
>   (Florian Angeletti, request by Daniel B=C3=BCnzli)
>
> - GPR#452: Make the output of ocamldep more stable
>   (Alain Frisch)
>
> - GPR#548: empty documentation comments
>   (Florian Angeletti)
>
> - GPR#575: Add the -no-version option to the toplevel
>   (S=C3=A9bastien Hinderer)
>
> - GPR#598: Add a --strict option to ocamlyacc treat conflicts as errors
>   (this option is now used for the compiler's parser)
>   (Jeremy Yallop)
>
> - GPR#613: make ocamldoc use -open arguments
>   (Florian Angeletti)
>
> - GPR#718: ocamldoc, fix order of extensible variant constructors
>   (Florian Angeletti)
>
> ### Debugging and profiling:
>
> - GPR#585: Spacetime, a new memory profiler (Mark Shinwell, Leo White)
>
> ### Runtime system:
>
> - PR#7203, GPR#534: Add a new primitive caml_alloc_float_array to allocate
> an
>   array of floats
>   (Thomas Braibant)
>
> ### Manual and documentation:
>
> - PR#7007, PR#7311: document the existence of OCAMLPARAM and
>   ocaml_compiler_internal_params
>   (Damien Doligez, reports by Wim Lewis and Gabriel Scherer)
>
> - PR#7243: warn users against using WinZip to unpack the source archive
>   (Damien Doligez, report by Shayne Fletcher)
>
> - PR#7245, GPR#565: clarification to the wording and documentation
>   of Warning 52 (fragile constant pattern)
>   (Gabriel Scherer, William, Adrien Nader, Jacques Garrigue)
>
> - #PR7265, GPR#769: Restore 4.02.3 behaviour of Unix.fstat, if the
>   file descriptor doesn't wrap a regular file (win32unix only)
>   (Andreas Hauptmann, review by David Allsopp)
>
> - PR#7288: flatten : Avoid confusion
>   (Damien Doligez, report by user 'tormen')
>
> - PR#7355: Gc.finalise and lazy values
>   (Jeremy Yallop)
>
> - GPR#841: Document that [Store_field] must not be used to populate
>   arrays of values declared using [CAMLlocalN] (Mark Shinwell)
>
> ### Build system:
>
> - GPR#324: Compiler developers: Adding new primitives to the
>   standard runtime doesn't require anymore to run `make bootstrap`
>   (Fran=C3=A7ois Bobot)
>
> - GPR#384: Fix compilation using old Microsoft C Compilers not
>   supporting secure CRT functions (SDK Visual Studio 2005 compiler and
>   earlier) and standard 64-bit integer literals (Visual Studio .NET
>   2002 and earlier)
>   (David Allsopp)
>
> - GPR#507: More sharing between Unix and Windows makefiles
>   (whitequark, review by Alain Frisch)
>
> * GPR#512, GPR#587: Installed `ocamlc`, `ocamlopt`, and `ocamllex` are
>   now the native-code versions of the tools, if those versions were
>   built.
>   (Demi Obenour)
>
> - GPR#687: "./configure -safe-string" to get a system where
>   "-unsafe-string" is not allowed, thus giving stronger non-local
>   guarantees about immutability of strings
>   (Alain Frisch, review by Hezekiah M. Carty)
>
> ### Bug fixes:
>
> * PR#6505: Missed Type-error leads to a segfault upon record access.
>   (Jacques Garrigue, extra report by Stephen Dolan)
>   Proper fix required a more restrictive approach to recursive types:
>   mutually recursive types are seen as abstract types (i.e.
> non-contractive)
>   when checking the well-foundedness of the recursion.
>
> * PR#6752: Nominal types and scope escaping.
>   Revert to strict scope for non-generalizable type variables, cf. Mantis.
>   Note that this is actually stricter than the behavior before 4.03,
>   cf. PR#7313, meaning that you may sometimes need to add type annotations
>   to explicitly instantiate non-generalizable type variables.
>   (Jacques Garrigue, following discussion with Jeremy Yallop,
>    Nicolas Ojeda Bar and Alain Frisch)
>
> - PR#7112: Aliased arguments ignored for equality of module types
>   (Jacques Garrigue, report by Leo White)
>
> - PR#7134: compiler forcing aliases it shouldn't while reporting type
> errors
>   (Jacques Garrigue, report and suggestion by sliquister)
>
> - PR#7153: document that Unix.SOCK_SEQPACKET is not really usable.
>
> - PR#7165, GPR#494: uncaught exception on invalid lexer directive
>   (Gabriel Scherer, report by KC Sivaramakrishnan using afl-fuzz)
>
> - PR#7257, GPR#583: revert a 4.03 change of behavior on (Unix.sleep 0.),
>   it now calls (nano)sleep for 0 seconds as in (< 4.03) versions.
>   (Hannes Mehnert, review by Damien Doligez)
>
> - PR#7260: GADT + subtyping compile time crash
>   (Jacques Garrigue, report by Nicolas Ojeda Bar)
>
> - PR#7269: Segfault from conjunctive constraints in GADT
>   (Jacques Garrigue, report by Stephen Dolan)
>
> - PR#7276: Support more than FD_SETSIZE sockets in Windows' emulation
>   of select
>   (David Scott, review by Alain Frisch)
>
> * PR#7278: Prevent private inline records from being mutated
>   (Alain Frisch, report by Pierre Chambart)
>
> - PR#7284: Bug in mcomp_fields leads to segfault
>   (Jacques Garrigue, report by Leo White)
>
> - PR#7285: Relaxed value restriction broken with principal
>   (Jacques Garrigue, report by Leo White)
>
> - PR#7297: -strict-sequence turns off Warning 21
>   (Jacques Garrigue, report by Valentin Gatien-Baron)
>
> - PR#7299: remove access to OCaml heap inside blocking section in win32un=
ix
>   (David Allsopp, report by Andreas Hauptmann)
>
> - PR#7300: remove access to OCaml heap inside blocking in Unix.sleep on
> Windows
>   (David Allsopp)
>
> - PR#7305: -principal causes loop in type checker when compiling
>   (Jacques Garrigue, report by Anil Madhavapeddy, analysis by Leo White)
>
> - PR#7330: Missing exhaustivity check for extensible variant
>   (Jacques Garrigue, report by Elarnon *)
>
> - PR#7374: Contractiveness check unsound with constraints
>   (Jacques Garrigue, report by Leo White)
>
> - PR#7378: GADT constructors can be re-exposed with an incompatible type
>   (Jacques Garrigue, report by Alain Frisch)
>
> - PR#7389: Unsoundness in GADT exhaustiveness with existential variables
>   (Jacques Garrigue, report by Stephen Dolan)
>
> * GPR#533: Thread library: fixed [Thread.wait_signal] so that it
>   converts back the signal number returned by [sigwait] to an
>   OS-independent number
>   (J=C3=A9r=C3=A9mie Dimino)
>
> - GPR#600: (similar to GPR#555) ensure that register typing constraints a=
re
>   respected at N-way join points in the control flow graph
>   (Mark Shinwell)
>
> - GPR#672: Fix float_of_hex parser to correctly reject some invalid forms
>   (Bogdan T=C4=83t=C4=83roiu, review by Thomas Braibant and Alain Frisch)
>
> - GPR#700: Fix maximum weak bucket size
>   (Nicolas Ojeda Bar, review by Fran=C3=A7ois Bobot)
>
> - GPR#708 Allow more module aliases in strengthening (Leo White)
>
> - GPR#713, PR#7301: Fix wrong code generation involving lazy values in
> Flambda
>   mode
>   (Mark Shinwell, review by Pierre Chambart and Alain Frisch)
>
> - GPR#721: Fix infinite loop in flambda due to [@@specialise] annotations
>
> - GPR#779: Building native runtime on Windows could fail when bootstrappi=
ng
>   FlexDLL if there was also a system-installed flexlink
>   (David Allsopp, report Michael Soegtrop)
>
> - GPR#805, GPR#815, GPR#833: check for integer overflow in String.concat
>   (Jeremy Yallop,
>    review by Damien Doligez, Alain Frisch, Daniel B=C3=BCnzli, Fabrice Le
> Fessant)
>
> - GPR#810: check for integer overflow in Array.concat
>   (Jeremy Yallop)
>
> - GPR#814: fix the Buffer.add_substring bounds check to handle overflow
>   (Jeremy Yallop)
>
> - GPR#880: Fix [@@inline] with default parameters in flambda (Leo White)
>
> - GPR#525: fix build on OpenIndiana
>   (Sergey Avseyev, review by Damien Doligez)
>
> ### Internal/compiler-libs changes:
>
> - PR#7200, GPR#539: Improve, fix, and add test for parsing/pprintast.ml
>   (Runhang Li, David Sheets, Alain Frisch)
>
> - GPR#351: make driver/pparse.ml functions type-safe
>   (Gabriel Scherer, Dmitrii Kosarev, review by J=C3=A9r=C3=A9mie Dimino)
>
> - GPR#516: Improve Texp_record constructor representation, and
>   propagate updated record type information
>   (Pierre Chambart, review by Alain Frisch)
>
> - GPR#678: Graphics.close_graph crashes 64-bit Windows ports
> (re-implementation
>   of PR#3963)
>   (David Allsopp)
>
> - GPR#679: delay registration of docstring after the mapper is applied
>   (Hugo Heuzard, review by Leo White)
>
> - GPR#872: don't attach (**/**) comments to any particular node
>   (Thomas Refis, review by Leo White)
>
>

--94eb2c1a0770119ffd05407d2f0f
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Great news, thank you!<div><br></div><div>Is flambda=C2=A0=
enabled by default in 4.04?</div></div><div class=3D"gmail_extra"><br><div =
class=3D"gmail_quote">On Fri, Nov 4, 2016 at 1:29 PM, Damien Doligez <span =
dir=3D"ltr">&lt;<a href=3D"mailto:damien.doligez@inria.fr" target=3D"_blank=
">damien.doligez@inria.fr</a>&gt;</span> wrote:<br><blockquote class=3D"gma=
il_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-lef=
t:1ex">Dear OCaml users,<br>
<br>
We have the pleasure of celebrating the discovery of Tutankhamun&#39;s<br>
tomb by announcing the release of OCaml version 4.04.0.<br>
This is a major release with several new features (most notably,<br>
Spacetime). See the list of changes below.<br>
<br>
It is (or soon will be) available as an OPAM switch, or as a source<br>
download here: &lt; <a href=3D"http://caml.inria.fr/distrib/ocaml-4.04/" re=
l=3D"noreferrer" target=3D"_blank">http://caml.inria.fr/distrib/<wbr>ocaml-=
4.04/</a> &gt;<br>
<br>
Happy hacking,<br>
<br>
-- Damien Doligez for the OCaml team.<br>
<br>
<br>
OCaml 4.04.0:<br>
-------------<br>
<br>
(Changes that can break existing programs are marked with a &quot;*&quot;)<=
br>
<br>
### Language features:<br>
<br>
- PR#7233: Support GADT equations on non-local abstract types<br>
=C2=A0 (Jacques Garrigue)<br>
<br>
- GPR#187, GPR#578: Local opening of modules in a pattern.<br>
=C2=A0 Syntax: &quot;M.(p)&quot;, &quot;M.[p]&quot;,&quot;M.[| p |]&quot;, =
&quot;M.{p}&quot;<br>
=C2=A0 (Florian Angeletti, Jacques Garrigue, review by Alain Frisch)<br>
<br>
- GPR#301: local exception declarations &quot;let exception ... in&quot;<br>
=C2=A0 (Alain Frisch)<br>
<br>
- GPR#508: Allow shortcut for extension on semicolons: ;%foo<br>
=C2=A0 (Jeremie Dimino)<br>
<br>
- GPR#606: optimized representation for immutable records with a single<br>
=C2=A0 field, and concrete types with a single constructor with a single ar=
gument.<br>
=C2=A0 This is triggered with a [@@unboxed] attribute on the type definitio=
n.<br>
=C2=A0 Currently mutually recursive datatypes are not well supported, this<=
br>
=C2=A0 limitation should be lifted in the future (see MPR#7364).<br>
=C2=A0 (Damien Doligez)<br>
<br>
### Compiler user-interface and warnings:<br>
<br>
* PR#6475, GPR#464: interpret all command-line options before compiling any=
<br>
=C2=A0 files, changes (improves) the semantics of repeated -o options or -o=
<br>
=C2=A0 combined with -c see the super-detailed commit message at<br>
=C2=A0 <a href=3D"https://github.com/ocaml/ocaml/commit/da56cf6dfdc13c09905=
c2e07f1d4849c8346eec8" rel=3D"noreferrer" target=3D"_blank">https://github.=
com/ocaml/<wbr>ocaml/commit/<wbr>da56cf6dfdc13c09905c2e07f1d484<wbr>9c8346e=
ec8</a><br>
=C2=A0 (whitequark)<br>
<br>
- PR#7139: clarify the wording of Warning 38<br>
=C2=A0 (Unused exception or extension constructor)<br>
=C2=A0 (Gabriel Scherer)<br>
<br>
* PR#7147, GPR#475: add colors when reporting errors generated by ppx rewri=
ters.<br>
=C2=A0 Remove the `Location.errorf_prefixed` function which is no longer re=
levant<br>
=C2=A0 (Simon Cruanes, J=C3=A9r=C3=A9mie Dimino)<br>
<br>
- PR#7169, GPR#501: clarify the wording of Warning 8<br>
=C2=A0 (Non-exhaustivity warning for pattern matching)<br>
=C2=A0 (Florian Angeletti, review and report by Gabriel Scherer)<br>
<br>
* GPR#591: Improve support for OCAMLPARAM: (i) do not use objects<br>
=C2=A0 files with -a, -pack, -shared; (ii) use &quot;before&quot; objects i=
n the toplevel<br>
=C2=A0 (but not &quot;after&quot; objects); (iii) use -I dirs in the toplev=
el,<br>
=C2=A0 (iv) fix bug where -I dirs were ignored when using threads<br>
=C2=A0 (Marc Lasson, review by Damien Doligez and Alain Frisch)<br>
<br>
- GPR#648: New -plugin option for ocamlc and ocamlopt, to dynamically exten=
d<br>
=C2=A0 the compilers at runtime.<br>
=C2=A0 (Fabrice Le Fessant)<br>
<br>
- GPR#684: Detect unused module declarations<br>
=C2=A0 (Alain Frisch)<br>
<br>
- GPR#706: Add a settable Env.Persistent_signature.load function so<br>
=C2=A0 that cmi files can be loaded from other sources. This can be used to=
<br>
=C2=A0 create self-contained toplevels.<br>
=C2=A0 (J=C3=A9r=C3=A9mie Dimino)<br>
<br>
### Standard library:<br>
<br>
- GPR#473: Provide `Sys.backend_type` so that user can write backend-specif=
ic<br>
=C2=A0 code in some cases (for example,=C2=A0 code generator).<br>
=C2=A0 (Hongbo Zhang)<br>
<br>
- PR#6279, GPR#553: implement Set.map<br>
=C2=A0 (Gabriel Scherer)<br>
<br>
- PR#6820, GPR#560: Add Obj.reachable_words to compute the<br>
=C2=A0 &quot;transitive&quot; heap size of a value<br>
=C2=A0 (Alain Frisch, review by Mark Shinwell and Damien Doligez)<br>
<br>
- GPR#589: Add a non-allocating function to recover the number of<br>
=C2=A0 allocated minor words.<br>
=C2=A0 (Pierre Chambart, review by Damien Doligez and Gabriel Scherer)<br>
<br>
- GPR#626: String.split_on_char<br>
=C2=A0 (Alain Frisch)<br>
<br>
- GPR#669: Filename.extension and Filename.remove_extension<br>
=C2=A0 (Alain Frisch, request by Edgar Aroutiounian, review by Daniel Bunzl=
i<br>
=C2=A0 and Damien Doligez)<br>
<br>
### Code generation and optimizations:<br>
<br>
- PR#4747, GPR#328: Optimize Hashtbl by using in-place updates of its<br>
=C2=A0 internal bucket lists.=C2=A0 All operations run in constant stack si=
ze<br>
=C2=A0 and are usually faster, except Hashtbl.copy which can be much<br>
=C2=A0 slower<br>
=C2=A0 (Alain Frisch)<br>
<br>
* PR#6217, GPR#538: Optimize performance of record update:<br>
=C2=A0 no more performance cliff when { foo with t1 =3D ..; t2 =3D ...; ...=
 }<br>
=C2=A0 hits 6 updated fields<br>
=C2=A0 (Olivier Nicole, review by Thomas Braibant and Pierre Chambart)<br>
<br>
- PR#7023, GPR#336: Better unboxing strategy<br>
=C2=A0 (Alain Frisch, Pierre Chambart)<br>
<br>
- PR#7244, GPR#840: Ocamlopt + flambda requires a lot of memory<br>
=C2=A0 to compile large array literal expressions<br>
=C2=A0 (Pierre Chambart, review by Mark Shinwell)<br>
<br>
- PR#7291, GPR#780: Handle specialisation of recursive function that does<b=
r>
=C2=A0 not always preserve the arguments<br>
=C2=A0 (Pierre Chambart, Mark Shinwell, report by Simon Cruanes)<br>
<br>
- GPR#427: Obj.is_block is now an inlined OCaml function instead of a<br>
=C2=A0 C external.=C2=A0 This should be faster.<br>
=C2=A0 (Demi Obenour)<br>
<br>
- GPR#580: Optimize immutable float records<br>
=C2=A0 (Pierre Chambart, review by Mark Shinwell)<br>
<br>
- GPR#602: Do not generate dummy code to force module linking<br>
=C2=A0 (Pierre Chambart, reviewed by Jacques Garrigue)<br>
<br>
- PR#7328, GPR#702: Do not eliminate boxed int divisions by zero and<br>
=C2=A0 avoid checking twice if divisor is zero with flambda.<br>
=C2=A0 (Pierre Chambart, report by Jeremy Yallop)<br>
<br>
- GPR#703: Optimize some constant string operations when the &quot;-safe-st=
ring&quot;<br>
=C2=A0 configure time option is enabled.<br>
=C2=A0 (Pierre Chambart)<br>
<br>
- GPR#707: Load cross module information during a meet<br>
=C2=A0 (Pierre Chambart, report by Leo White, review by Mark Shinwell)<br>
<br>
- GPR#709: Share a few more equal switch branches<br>
=C2=A0 (Pierre Chambart, review by Gabriel Scherer)<br>
<br>
- GPR#712: Small improvements to type-based optimizations for array<br>
=C2=A0 and lazy<br>
=C2=A0 (Alain Frisch, review by Pierre Chambart)<br>
<br>
- GPR#714: Prevent warning 59 from triggering on Lazy of constants<br>
=C2=A0 (Pierre Chambart, review by Leo White)<br>
<br>
- GPR#723 Sort emitted functions according to source location<br>
=C2=A0 (Pierre Chambart, review by Mark Shinwell)<br>
<br>
- Lack of type normalization lead to missing simple compilation for &quot;l=
azy x&quot;<br>
=C2=A0 (Alain Frisch)<br>
<br>
### Runtime system:<br>
<br>
- PR#7210, GPR#562: Allows to register finalisation function that are<br>
=C2=A0 called only when a value will never be reachable anymore. The<br>
=C2=A0 drawbacks compared to the existing one is that the finalisation<br>
=C2=A0 function is not called with the value as argument. These finalisers<=
br>
=C2=A0 are registered with `GC.finalise_last`<br>
=C2=A0 (Fran=C3=A7ois Bobot reviewed by Damien Doligez and Leo White)<br>
<br>
- GPR#590: Do not perform compaction if the real overhead is less than expe=
cted<br>
=C2=A0 (Thomas Braibant)<br>
<br>
### Tools:<br>
<br>
- PR#7189: toplevel #show, follow chains of module aliases<br>
=C2=A0 (Gabriel Scherer, report by Daniel B=C3=BCnzli, review by Thomas Ref=
is)<br>
<br>
- PR#7248: have ocamldep interpret -open arguments in left-to-right order<b=
r>
=C2=A0 (Gabriel Scherer, report by Anton Bachin)<br>
<br>
- PR#7272, GPR#798: ocamldoc, missing line breaks in type_*.html files<br>
=C2=A0 (Florian Angeletti)<br>
<br>
- PR#7290: ocamldoc, improved support for inline records<br>
=C2=A0 (Florian Angeletti)<br>
<br>
- PR#7323, GPR#750: ensure &quot;ocamllex -ml&quot; works with -safe-string=
<br>
=C2=A0 (Hongbo Zhang)<br>
<br>
- PR#7350, GPR#806: ocamldoc, add viewport metadata to generated html pages=
<br>
=C2=A0 (Florian Angeletti, request by Daniel B=C3=BCnzli)<br>
<br>
- GPR#452: Make the output of ocamldep more stable<br>
=C2=A0 (Alain Frisch)<br>
<br>
- GPR#548: empty documentation comments<br>
=C2=A0 (Florian Angeletti)<br>
<br>
- GPR#575: Add the -no-version option to the toplevel<br>
=C2=A0 (S=C3=A9bastien Hinderer)<br>
<br>
- GPR#598: Add a --strict option to ocamlyacc treat conflicts as errors<br>
=C2=A0 (this option is now used for the compiler&#39;s parser)<br>
=C2=A0 (Jeremy Yallop)<br>
<br>
- GPR#613: make ocamldoc use -open arguments<br>
=C2=A0 (Florian Angeletti)<br>
<br>
- GPR#718: ocamldoc, fix order of extensible variant constructors<br>
=C2=A0 (Florian Angeletti)<br>
<br>
### Debugging and profiling:<br>
<br>
- GPR#585: Spacetime, a new memory profiler (Mark Shinwell, Leo White)<br>
<br>
### Runtime system:<br>
<br>
- PR#7203, GPR#534: Add a new primitive caml_alloc_float_array to allocate =
an<br>
=C2=A0 array of floats<br>
=C2=A0 (Thomas Braibant)<br>
<br>
### Manual and documentation:<br>
<br>
- PR#7007, PR#7311: document the existence of OCAMLPARAM and<br>
=C2=A0 ocaml_compiler_internal_params<br>
=C2=A0 (Damien Doligez, reports by Wim Lewis and Gabriel Scherer)<br>
<br>
- PR#7243: warn users against using WinZip to unpack the source archive<br>
=C2=A0 (Damien Doligez, report by Shayne Fletcher)<br>
<br>
- PR#7245, GPR#565: clarification to the wording and documentation<br>
=C2=A0 of Warning 52 (fragile constant pattern)<br>
=C2=A0 (Gabriel Scherer, William, Adrien Nader, Jacques Garrigue)<br>
<br>
- #PR7265, GPR#769: Restore 4.02.3 behaviour of Unix.fstat, if the<br>
=C2=A0 file descriptor doesn&#39;t wrap a regular file (win32unix only)<br>
=C2=A0 (Andreas Hauptmann, review by David Allsopp)<br>
<br>
- PR#7288: flatten : Avoid confusion<br>
=C2=A0 (Damien Doligez, report by user &#39;tormen&#39;)<br>
<br>
- PR#7355: Gc.finalise and lazy values<br>
=C2=A0 (Jeremy Yallop)<br>
<br>
- GPR#841: Document that [Store_field] must not be used to populate<br>
=C2=A0 arrays of values declared using [CAMLlocalN] (Mark Shinwell)<br>
<br>
### Build system:<br>
<br>
- GPR#324: Compiler developers: Adding new primitives to the<br>
=C2=A0 standard runtime doesn&#39;t require anymore to run `make bootstrap`=
<br>
=C2=A0 (Fran=C3=A7ois Bobot)<br>
<br>
- GPR#384: Fix compilation using old Microsoft C Compilers not<br>
=C2=A0 supporting secure CRT functions (SDK Visual Studio 2005 compiler and=
<br>
=C2=A0 earlier) and standard 64-bit integer literals (Visual Studio .NET<br>
=C2=A0 2002 and earlier)<br>
=C2=A0 (David Allsopp)<br>
<br>
- GPR#507: More sharing between Unix and Windows makefiles<br>
=C2=A0 (whitequark, review by Alain Frisch)<br>
<br>
* GPR#512, GPR#587: Installed `ocamlc`, `ocamlopt`, and `ocamllex` are<br>
=C2=A0 now the native-code versions of the tools, if those versions were<br>
=C2=A0 built.<br>
=C2=A0 (Demi Obenour)<br>
<br>
- GPR#687: &quot;./configure -safe-string&quot; to get a system where<br>
=C2=A0 &quot;-unsafe-string&quot; is not allowed, thus giving stronger non-=
local<br>
=C2=A0 guarantees about immutability of strings<br>
=C2=A0 (Alain Frisch, review by Hezekiah M. Carty)<br>
<br>
### Bug fixes:<br>
<br>
* PR#6505: Missed Type-error leads to a segfault upon record access.<br>
=C2=A0 (Jacques Garrigue, extra report by Stephen Dolan)<br>
=C2=A0 Proper fix required a more restrictive approach to recursive types:<=
br>
=C2=A0 mutually recursive types are seen as abstract types (i.e. non-contra=
ctive)<br>
=C2=A0 when checking the well-foundedness of the recursion.<br>
<br>
* PR#6752: Nominal types and scope escaping.<br>
=C2=A0 Revert to strict scope for non-generalizable type variables, cf. Man=
tis.<br>
=C2=A0 Note that this is actually stricter than the behavior before 4.03,<b=
r>
=C2=A0 cf. PR#7313, meaning that you may sometimes need to add type annotat=
ions<br>
=C2=A0 to explicitly instantiate non-generalizable type variables.<br>
=C2=A0 (Jacques Garrigue, following discussion with Jeremy Yallop,<br>
=C2=A0 =C2=A0Nicolas Ojeda Bar and Alain Frisch)<br>
<br>
- PR#7112: Aliased arguments ignored for equality of module types<br>
=C2=A0 (Jacques Garrigue, report by Leo White)<br>
<br>
- PR#7134: compiler forcing aliases it shouldn&#39;t while reporting type e=
rrors<br>
=C2=A0 (Jacques Garrigue, report and suggestion by sliquister)<br>
<br>
- PR#7153: document that Unix.SOCK_SEQPACKET is not really usable.<br>
<br>
- PR#7165, GPR#494: uncaught exception on invalid lexer directive<br>
=C2=A0 (Gabriel Scherer, report by KC Sivaramakrishnan using afl-fuzz)<br>
<br>
- PR#7257, GPR#583: revert a 4.03 change of behavior on (Unix.sleep 0.),<br>
=C2=A0 it now calls (nano)sleep for 0 seconds as in (&lt; 4.03) versions.<b=
r>
=C2=A0 (Hannes Mehnert, review by Damien Doligez)<br>
<br>
- PR#7260: GADT + subtyping compile time crash<br>
=C2=A0 (Jacques Garrigue, report by Nicolas Ojeda Bar)<br>
<br>
- PR#7269: Segfault from conjunctive constraints in GADT<br>
=C2=A0 (Jacques Garrigue, report by Stephen Dolan)<br>
<br>
- PR#7276: Support more than FD_SETSIZE sockets in Windows&#39; emulation<b=
r>
=C2=A0 of select<br>
=C2=A0 (David Scott, review by Alain Frisch)<br>
<br>
* PR#7278: Prevent private inline records from being mutated<br>
=C2=A0 (Alain Frisch, report by Pierre Chambart)<br>
<br>
- PR#7284: Bug in mcomp_fields leads to segfault<br>
=C2=A0 (Jacques Garrigue, report by Leo White)<br>
<br>
- PR#7285: Relaxed value restriction broken with principal<br>
=C2=A0 (Jacques Garrigue, report by Leo White)<br>
<br>
- PR#7297: -strict-sequence turns off Warning 21<br>
=C2=A0 (Jacques Garrigue, report by Valentin Gatien-Baron)<br>
<br>
- PR#7299: remove access to OCaml heap inside blocking section in win32unix=
<br>
=C2=A0 (David Allsopp, report by Andreas Hauptmann)<br>
<br>
- PR#7300: remove access to OCaml heap inside blocking in Unix.sleep on Win=
dows<br>
=C2=A0 (David Allsopp)<br>
<br>
- PR#7305: -principal causes loop in type checker when compiling<br>
=C2=A0 (Jacques Garrigue, report by Anil Madhavapeddy, analysis by Leo Whit=
e)<br>
<br>
- PR#7330: Missing exhaustivity check for extensible variant<br>
=C2=A0 (Jacques Garrigue, report by Elarnon *)<br>
<br>
- PR#7374: Contractiveness check unsound with constraints<br>
=C2=A0 (Jacques Garrigue, report by Leo White)<br>
<br>
- PR#7378: GADT constructors can be re-exposed with an incompatible type<br>
=C2=A0 (Jacques Garrigue, report by Alain Frisch)<br>
<br>
- PR#7389: Unsoundness in GADT exhaustiveness with existential variables<br>
=C2=A0 (Jacques Garrigue, report by Stephen Dolan)<br>
<br>
* GPR#533: Thread library: fixed [Thread.wait_signal] so that it<br>
=C2=A0 converts back the signal number returned by [sigwait] to an<br>
=C2=A0 OS-independent number<br>
=C2=A0 (J=C3=A9r=C3=A9mie Dimino)<br>
<br>
- GPR#600: (similar to GPR#555) ensure that register typing constraints are=
<br>
=C2=A0 respected at N-way join points in the control flow graph<br>
=C2=A0 (Mark Shinwell)<br>
<br>
- GPR#672: Fix float_of_hex parser to correctly reject some invalid forms<b=
r>
=C2=A0 (Bogdan T=C4=83t=C4=83roiu, review by Thomas Braibant and Alain Fris=
ch)<br>
<br>
- GPR#700: Fix maximum weak bucket size<br>
=C2=A0 (Nicolas Ojeda Bar, review by Fran=C3=A7ois Bobot)<br>
<br>
- GPR#708 Allow more module aliases in strengthening (Leo White)<br>
<br>
- GPR#713, PR#7301: Fix wrong code generation involving lazy values in Flam=
bda<br>
=C2=A0 mode<br>
=C2=A0 (Mark Shinwell, review by Pierre Chambart and Alain Frisch)<br>
<br>
- GPR#721: Fix infinite loop in flambda due to [@@specialise] annotations<b=
r>
<br>
- GPR#779: Building native runtime on Windows could fail when bootstrapping=
<br>
=C2=A0 FlexDLL if there was also a system-installed flexlink<br>
=C2=A0 (David Allsopp, report Michael Soegtrop)<br>
<br>
- GPR#805, GPR#815, GPR#833: check for integer overflow in String.concat<br>
=C2=A0 (Jeremy Yallop,<br>
=C2=A0 =C2=A0review by Damien Doligez, Alain Frisch, Daniel B=C3=BCnzli, Fa=
brice Le Fessant)<br>
<br>
- GPR#810: check for integer overflow in Array.concat<br>
=C2=A0 (Jeremy Yallop)<br>
<br>
- GPR#814: fix the Buffer.add_substring bounds check to handle overflow<br>
=C2=A0 (Jeremy Yallop)<br>
<br>
- GPR#880: Fix [@@inline] with default parameters in flambda (Leo White)<br>
<br>
- GPR#525: fix build on OpenIndiana<br>
=C2=A0 (Sergey Avseyev, review by Damien Doligez)<br>
<br>
### Internal/compiler-libs changes:<br>
<br>
- PR#7200, GPR#539: Improve, fix, and add test for parsing/<a href=3D"http:=
//pprintast.ml" rel=3D"noreferrer" target=3D"_blank">pprintast.ml</a><br>
=C2=A0 (Runhang Li, David Sheets, Alain Frisch)<br>
<br>
- GPR#351: make driver/<a href=3D"http://pparse.ml" rel=3D"noreferrer" targ=
et=3D"_blank">pparse.ml</a> functions type-safe<br>
=C2=A0 (Gabriel Scherer, Dmitrii Kosarev, review by J=C3=A9r=C3=A9mie Dimin=
o)<br>
<br>
- GPR#516: Improve Texp_record constructor representation, and<br>
=C2=A0 propagate updated record type information<br>
=C2=A0 (Pierre Chambart, review by Alain Frisch)<br>
<br>
- GPR#678: Graphics.close_graph crashes 64-bit Windows ports (re-implementa=
tion<br>
=C2=A0 of PR#3963)<br>
=C2=A0 (David Allsopp)<br>
<br>
- GPR#679: delay registration of docstring after the mapper is applied<br>
=C2=A0 (Hugo Heuzard, review by Leo White)<br>
<br>
- GPR#872: don&#39;t attach (**/**) comments to any particular node<br>
=C2=A0 (Thomas Refis, review by Leo White)<br>
<br>
</blockquote></div><br></div>

--94eb2c1a0770119ffd05407d2f0f--
