Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA02644; Mon, 25 Oct 2004 08:09:10 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA02990 for <caml-list@pauillac.inria.fr>; Mon, 25 Oct 2004 08:09:09 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i9P6976b015119
	for <caml-list@inria.fr>; Mon, 25 Oct 2004 08:09:08 +0200
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3p2-20030924/3.7W) with ESMTP id PAA17576;
	Mon, 25 Oct 2004 15:09:03 +0900 (JST)
Date: Mon, 25 Oct 2004 15:08:55 +0900 (JST)
Message-Id: <20041025.150855.13740131.garrigue@math.nagoya-u.ac.jp>
To: caml-list@davidb.org
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Announce: Schoca-0.2.3 released
From: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <20041025050127.GA3599@old.davidb.org>
References: <20041025025832.GA1582@old.davidb.org>
	<20041025.123834.26988978.garrigue@math.nagoya-u.ac.jp>
	<20041025050127.GA3599@old.davidb.org>
X-Mailer: Mew version 4.0.64 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 417C9883.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 jacques:01 caml-list:01 gpl:01 gpl:01 qpl:01 insists:01 derivative:01 lgpl:01 argued:01 qpl:01 gpled:01 incompatible:01 jacques:01 linked:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
Content-Length: 1508
Lines: 30

From: David Brown <caml-list@davidb.org>
> > On the other hand, there should be no problem loading manually a
> > GPL library in the toplevel, or building such a toplevel privately.
> > (At least I believe so, but questions of dynamic loading are the
> > muddiest part of the GPL and the QPL.)
> 
> The GPL only coveres distribution, not execution.  GPL code can be linked
> with even proprietary code as long as the result isn't distributed at all.

That's why I call it muddy. The FSF (who wrote the GPL) insists that
dynamic linking creates a derivative work, while in that case the
linking only occurs at execution. And this makes sense, because
otherwise the GPL would say nothing more than the LGPL.
Now, it could be argued that when you load code into the toplevel,
this is not the toplevel that is using the code (it has no dependency
on it). But this kind of argument can turn very subjective.

Note also that the above problem is between the GPL and the QPL, which
includes its own requirements.
If you distribute a small modification of a GPLed library that uses some
functions of the toplevel, but only when you link it with the
toplevel, then (incompatible) requirements of both the GPL and the QPL
will apply to this code. Confusing.

Jacques Garrigue

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

