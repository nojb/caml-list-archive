Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA10465; Fri, 22 Oct 2004 11:39:41 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA10510 for <caml-list@pauillac.inria.fr>; Fri, 22 Oct 2004 11:39:40 +0200 (MET DST)
Received: from eris.rz.uni-saarland.de (eris.rz.uni-saarland.de [134.96.7.8])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i9M9ddca013593
	for <caml-list@inria.fr>; Fri, 22 Oct 2004 11:39:40 +0200
Received: from cs.uni-sb.de (cs.uni-sb.de [134.96.254.254])
	by eris.rz.uni-saarland.de (8.12.10/8.12.10) with ESMTP id i9M9dcAT12415402
	for <caml-list@inria.fr>; Fri, 22 Oct 2004 11:39:38 +0200 (CST)
Received: from mail.cs.uni-sb.de (mail.cs.uni-sb.de [134.96.254.200])
	by cs.uni-sb.de (8.13.1/2004080400) with ESMTP id i9M9dcGf022758
	for <caml-list@inria.fr>; Fri, 22 Oct 2004 11:39:38 +0200 (CEST)
Received: from ps.uni-sb.de (grizzly.ps.uni-sb.de [134.96.186.68])
	by mail.cs.uni-sb.de (8.13.1/2004093000) with ESMTP id i9M9dbXJ009593
	for <caml-list@inria.fr>; Fri, 22 Oct 2004 11:39:37 +0200 (CEST)
X-Authentication-Warning: mail.cs.uni-sb.de: Host grizzly.ps.uni-sb.de [134.96.186.68] claimed to be ps.uni-sb.de
Received: from ps.uni-sb.de (groove.ps.uni-sb.de [134.96.186.172])
	by ps.uni-sb.de (8.12.10/8.12.10) with ESMTP id i9M9dZYq021300;
	Fri, 22 Oct 2004 11:39:35 +0200
Message-ID: <4178D557.9030401@ps.uni-sb.de>
Date: Fri, 22 Oct 2004 11:39:35 +0200
From: Andreas Rossberg <rossberg@ps.uni-sb.de>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.4.1) Gecko/20031114
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Polymorphism and the "for" loop
References: <Pine.SOL.4.44.0410211921030.29298-100000@blue1> <1098425963.7584.9.camel@pelican.wigram> <200410220838.49340.jon@jdh30.plus.com> <20041022080634.GA31350@old.davidb.org>
In-Reply-To: <20041022080634.GA31350@old.davidb.org>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-1.5.1 (eris.rz.uni-saarland.de [134.96.7.8]); Fri, 22 Oct 2004 11:39:38 +0200 (CEST)
X-AntiVirus: checked by AntiVir Milter 1.0.6; AVE 6.28.0.7; VDF 6.28.0.31
X-Miltered: at nez-perce with ID 4178D55B.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; rossberg:01 rossberg:01 uni-sb:01 caml-list:01 2004:99 rephrase:01 optimising:01 generalise:01 uni-sb:01 compiler:01 compilers:01 int:01 int:01 polymorphic:01 syntax:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
Content-Length: 1490
Lines: 47

On Fri, Oct 22, 2004 at 08:38:49AM +0100, Jon Harrop wrote:
>I've been wondering about this recently: how do the compilers store types 
>which contain "unit". For example, if we have a tree:
>
>type 'a 'b tree = Leaf of 'a | Node of 'b * 'a 'b tree * 'a 'b tree
>
>Does a "unit unit tree" take up less space than a "int int tree"?

No, because the representation must be the same. Otherwise polymorphic 
functions could not operate on both. (Besides, you got the syntax wrong. 
It's ('a,'b) tree.).

If you rephrase the question as

"Does

   type unit_tree = Leaf of unit | Node of unit * unit_tree * unit_tree

have a more efficient representation than

   type int_tree = Leaf of int | Node of int * int_tree * int_tree

?"

you _might_ find a different answer. But in fact you don't, the 
representation still is the same. And I believe it is right for the 
compiler not to bother optimising types like unit_tree, because they are 
not very useful.

>The reason I'm asking is that it might be nice to generalise data structures 
>as much as possible and then specialise them using "unit" arguments.

This definitely won't work.

Cheers,

	- Andreas

-- 
Andreas Rossberg, rossberg@ps.uni-sb.de

Let's get rid of those possible thingies!  -- TB

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

