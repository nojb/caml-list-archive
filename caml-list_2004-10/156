Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA08660; Fri, 15 Oct 2004 18:57:53 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA08653 for <caml-list@pauillac.inria.fr>; Fri, 15 Oct 2004 18:57:52 +0200 (MET DST)
From: pad@ryxa.irisa.fr
Received: from ryxa.irisa.fr (ryxa.irisa.fr [131.254.50.45])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i9FGvqTg008011
	for <caml-list@inria.fr>; Fri, 15 Oct 2004 18:57:52 +0200
Received: (from pad@localhost)
	by ryxa.irisa.fr (8.11.6/8.11.6) id i9FGvqt18876;
	Fri, 15 Oct 2004 18:57:52 +0200
Date: Fri, 15 Oct 2004 18:57:52 +0200
Message-Id: <200410151657.i9FGvqt18876@ryxa.irisa.fr>
To: caml-list@inria.fr
Subject: [Caml-list] a generic print (ugly hack)
Reply-to: padiolea@irisa.fr
X-Miltered: at nez-perce with ID 41700190.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; generic:01 generic:01 stdout:01 yellow:99 hacks:01 reusing:01 yoann:01 padioleau:01 int:01 int:01 toplevel:01 toplevel:01 float:02 o'caml:02 string:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
Content-Length: 1255
Lines: 40


the goal is to allow the programmer to write in his program for instance:

 let _ = print_string (generic_print [[1;3];[2;9;8];[3;4]] "int list list") in
 ...
 let _ = print_string (generic_print [1;3;2;9;8;3;4] "int list") in
 let v = ... (* big computation, big data structure *)
 let _ = print_string (generic_print v "(int * float * color) assoc") in
 ...
  

and to get on stdout:
 [[1; 3]; [2; 9; 8]; [3; 4]]
 [1; 3; 2; 9; 8; 3; 4]
 [(1, 2.02, Red); (2, 4.02, Yellow)];


the type of generic_print is
 'a -> string -> string

code:
 http://www.irisa.fr/prive/padiolea/hacks/generic_print.ml

the principle is that the toplevel of O'Caml know how to print value,
so by "reusing" the toplevel, our program can too.


It is slow, ugly, not robust,  but it can be helpful.
any suggestion or critics are welcome.


-- 
Yoann  Padioleau,  INSA de Rennes, France   
Opinions expressed here are only mine. Je n'écris qu'à titre personnel.
**____   Get Free. Be Smart.  Simply use Linux and Free Software.   ____**

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

