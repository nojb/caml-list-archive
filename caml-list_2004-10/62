Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA28086; Fri, 8 Oct 2004 08:54:46 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA23462 for <caml-list@pauillac.inria.fr>; Fri, 8 Oct 2004 08:54:44 +0200 (MET DST)
Received: from mail.davidb.org (adsl-64-172-240-129.dsl.sndg02.pacbell.net [64.172.240.129])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i986sg9b024461
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Fri, 8 Oct 2004 08:54:44 +0200
Received: from davidb by mail.davidb.org with local (Exim 4.41 #1 (Debian))
	id 1CFoeG-00085o-8A; Thu, 07 Oct 2004 23:54:40 -0700
Date: Thu, 7 Oct 2004 23:54:40 -0700
From: David Brown <caml-list@davidb.org>
To: Christophe Raffalli <Christophe.Raffalli@univ-savoie.fr>
Cc: "Harrison, John R" <johnh@ichips.intel.com>,
        caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Are you sure the new "=" of 3.08 is good ?
Message-ID: <20041008065440.GA30862@old.davidb.org>
References: <012676D607FCF54E986746512C22CE7D0FE7B6@orsmsx407> <41662A5D.8040600@univ-savoie.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <41662A5D.8040600@univ-savoie.fr>
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde with ID 416639B2.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 caml-list:01 2004:99 raffalli:01 rounding:01 christophe:01 0200,:01 dave:03 wrote:03 oct:03 08,:03 arguments:03 meaningful:04 meaningful:04 nan:04 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
Content-Length: 1122
Lines: 25

On Fri, Oct 08, 2004 at 07:49:17AM +0200, Christophe Raffalli wrote:
> 
> >You can perfectly well compute it, and the general consensus among the
> >floating-point community is that trig functions should do the best they
> >reasonably can even on huge arguments. Techniques for doing this kind
> >of reduction reasonably efficiently have been known for at least 20
> >years, e.g.
> 
> Yes you can perfectly compute sin 10e100.
> 
> But if x is the result of any computation (with rounding error), and x 
> is huge, sin x may be any value between -1 and 1. So the best value from 
> sin x is either 0 (your possible error is minimum) or nan.

sin 10e100 (1e101) isn't meaningful with any kind of floating point
precision I'm aware of.  Any numerical process that is attempting to take
the sin of a value like this has long since lost any meaningful digits out
of the number.

Dave

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

