Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA28838; Thu, 21 Oct 2004 10:51:13 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA16473 for <caml-list@pauillac.inria.fr>; Thu, 21 Oct 2004 10:51:11 +0200 (MET DST)
From: pad@ryxa.irisa.fr
Received: from ryxa.irisa.fr (ryxa.irisa.fr [131.254.50.45])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i9L8pBf1021133
	for <caml-list@inria.fr>; Thu, 21 Oct 2004 10:51:11 +0200
Received: (from pad@localhost)
	by ryxa.irisa.fr (8.11.6/8.11.6) id i9L8p9s30653;
	Thu, 21 Oct 2004 10:51:09 +0200
To: Vasili Galchin <vasiliocaml@yahoo.com>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml and Design Patterns
Reply-To: padiolea@irisa.fr
References: <20041020171301.35088.qmail@web53003.mail.yahoo.com>
Date: 21 Oct 2004 10:51:09 +0200
In-Reply-To: <20041020171301.35088.qmail@web53003.mail.yahoo.com>
Message-ID: <m33c084fpe.fsf@ryxa.irisa.fr>
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.2
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at concorde with ID 4177787F.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 htmlman:01 encode:01 ocaml:01 ocaml:01 caml:01 writes:01 o'caml:02 o'caml:02 abstract:03 irisa:04 builtin:04 functional:06 pattern:06 pattern:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
Content-Length: 1355
Lines: 36

Vasili Galchin <vasiliocaml@yahoo.com> writes:

> Hello,
>  
>      I am working on a C++ project (hey I have to make money ... I
>      personally hate the language) so I am using Design Patterns. In
>      the standard GoF book (Gang of Four design pattern book), the
>      authors say that some patterns already exist (builtin) in some
>      languages. 

yes, have a look at :
 http://www.norvig.com/design-patterns/


> What design patterns do you think would be useful if
>      I am using the OO features of OCaml (i.e. non-pure functional
>      features)?

I don't really understand the question because in theory all the design pattern are useful.
So abstract factory can be useful in O'Caml too.
Stragegy is useful too but easier in O'Caml since higher order function allow
to encode easily the strategy pattern.
There is discussion in the O'Caml manual about the observer pattern at:
 http://caml.inria.fr/ocaml/htmlman/manual007.html
 (section 5.3)

Hope it helps.


>  
> Thanks, vasili
> 
> 		
> ---------------------------------
> Do you Yahoo!?
> vote.yahoo.com - Register online to vote today!

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

