Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA19515; Fri, 8 Oct 2004 16:43:25 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA19500 for <caml-list@pauillac.inria.fr>; Fri, 8 Oct 2004 16:43:24 +0200 (MET DST)
Received: from alex.barettalocal.com (h213-255-109-130.albacom.net [213.255.109.130] (may be forged))
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i98EhN2H032483
	for <caml-list@inria.fr>; Fri, 8 Oct 2004 16:43:23 +0200
Received: from [127.0.0.1] (localhost.localdomain [127.0.0.1])
	by alex.barettalocal.com (Postfix) with ESMTP id 2F6C8F386A;
	Fri,  8 Oct 2004 16:44:52 +0200 (CEST)
Message-ID: <4166A7E3.6010908@baretta.com>
Date: Fri, 08 Oct 2004 16:44:51 +0200
From: Alex Baretta <alex@baretta.com>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.3) Gecko/20040913
X-Accept-Language: it, en-us, en
MIME-Version: 1.0
To: =?ISO-8859-1?Q?S=E9bastien_Furic?= <sebastien.furic@tni-software.com>
Cc: Luca Pascali <pasckosky2000@yahoo.it>, caml-list@inria.fr
Subject: Re: [Caml-list] Recursive lists
References: <41669437.3010201@yahoo.it> <41669EAA.7000509@tni-software.com>
In-Reply-To: <41669EAA.7000509@tni-software.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 8bit
X-Miltered: at concorde with ID 4166A78B.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; baretta:01 baretta:01 caml-list:01 furic:01 delivers:99 cyclic:01 ocaml:01 caml:01 equality:01 alex:01 alex:01 lazy:02 lazy:02 wrote:03 recursive:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
Content-Length: 905
Lines: 21

Sébastien Furic wrote:
> 
>  You can use lazy lists to solve the problem. A lazy list delivers its 
> elements on demand so you can manipulate infinite lists safely provided 
> you don't print their whole contents for instance...
>  See http://caml.inria.fr/archives/200304/msg00280.html to see how to 
> implement them (they're not present in the OCaml distribution).
> 
>  Sébastien.

Lazy lists or streams are not good enough in the general scenario. We 
don't need to exhaustively explore the cyclic data structures. The 
properties we are interested in can be proven in finite time by 
analyzing the list structure with the physical equality operator.

Alex

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

