Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA06830; Sun, 24 Oct 2004 19:35:54 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA07000 for <caml-list@pauillac.inria.fr>; Sun, 24 Oct 2004 19:35:53 +0200 (MET DST)
Received: from web53002.mail.yahoo.com (web53002.mail.yahoo.com [206.190.39.192])
	by concorde.inria.fr (8.13.0/8.13.0) with SMTP id i9OHZqRL022296
	for <caml-list@inria.fr>; Sun, 24 Oct 2004 19:35:53 +0200
Message-ID: <20041024173552.96205.qmail@web53002.mail.yahoo.com>
Received: from [136.1.1.101] by web53002.mail.yahoo.com via HTTP; Sun, 24 Oct 2004 10:35:52 PDT
Date: Sun, 24 Oct 2004 10:35:52 -0700 (PDT)
From: Vasili Galchin <vasiliocaml@yahoo.com>
Subject: [Caml-list] Patterns in ML vs OCaml ...
To: caml-list@inria.fr
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="0-1431047712-1098639352=:96154"
X-Miltered: at concorde with ID 417BE7F8.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.03; val:01 parms:01 W6:99 val:01 W28:99 W31:99 W28:99 W36:99 parms:01 ocaml:01 ocaml:01 hair:97 hair:97 nil:03 nil:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
Content-Length: 2824
Lines: 55

--0-1431047712-1098639352=:96154
Content-Type: text/plain; charset=us-ascii


Hello,
 
    I'm sorry this is a very elementary question (but I am pulling my hair out). With a function written in ML:
 
fun filter_list P []       = [] |
    filter_list P (h :: t) = let val ft = filter_list P t
                             in if P h then (h :: ft)
                                else ft
                             end;
 
OR
 
fun member (e, nil) = false |
    member (e , (h :: t)) = if (e=h) then true
                                     else member (e, t) ;


What is the preferred way to write in OCaml using pattern matching on parms??
 
Regards, Vasili


		
---------------------------------
Do you Yahoo!?
vote.yahoo.com - Register online to vote today!
--0-1431047712-1098639352=:96154
Content-Type: text/html; charset=us-ascii

<DIV><BR>
<BLOCKQUOTE class=replbq style="PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #1010ff 2px solid">
<DIV>Hello,</DIV>
<DIV>&nbsp;</DIV>
<DIV>&nbsp;&nbsp;&nbsp; I'm sorry this is a very elementary question (but I am pulling my hair out). With a function written in ML:</DIV>
<DIV>&nbsp;</DIV>
<DIV>fun filter_list P []&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = [] |<BR>&nbsp;&nbsp;&nbsp; filter_list P (h :: t) = let val ft = filter_list P t<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; in if P h then (h :: ft)<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else ft<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; end;</DIV>
<DIV>&nbsp;</DIV>
<DIV>OR</DIV>
<DIV>&nbsp;</DIV>
<DIV>fun member (e, nil) = false |<BR>&nbsp;&nbsp;&nbsp; member (e , (h :: t)) = if (e=h) then true<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; else member (e, t) ;<BR><BR></DIV>
<DIV>What is the preferred way to write in OCaml&nbsp;using pattern matching on parms??</DIV>
<DIV>&nbsp;</DIV>
<DIV>Regards, Vasili</DIV></BLOCKQUOTE></DIV><p>
		<hr size=1>Do you Yahoo!?<br><a
href="http://vote.yahoo.com">vote.yahoo.com</a> - Register online to vote today!
--0-1431047712-1098639352=:96154--

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

