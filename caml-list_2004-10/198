Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA19019; Wed, 20 Oct 2004 20:47:18 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA19080 for <caml-list@pauillac.inria.fr>; Wed, 20 Oct 2004 20:47:17 +0200 (MET DST)
Received: from mail.davidb.org (adsl-64-172-240-129.dsl.sndg02.pacbell.net [64.172.240.129])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i9KIlFHc012197
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Wed, 20 Oct 2004 20:47:17 +0200
Received: from davidb by mail.davidb.org with local (Exim 4.42 #1 (Debian))
	id 1CKLUQ-0006kH-BN; Wed, 20 Oct 2004 11:47:14 -0700
Date: Wed, 20 Oct 2004 11:47:14 -0700
From: David Brown <caml-list@davidb.org>
To: Richard Jones <rich@annexia.org>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml and Design Patterns
Message-ID: <20041020184714.GA25862@old.davidb.org>
References: <20041020171301.35088.qmail@web53003.mail.yahoo.com> <20041020173001.GA12744@annexia.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20041020173001.GA12744@annexia.org>
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde with ID 4176B2B3.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 caml-list:01 2004:99 terrible:01 idioms:01 recursion:01 ocaml:01 ocaml:01 constructs:02 dave:03 wrote:03 oct:03 suspect:05 bypass:05 uses:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
Content-Length: 1025
Lines: 23

On Wed, Oct 20, 2004 at 06:30:01PM +0100, Richard Jones wrote:

> Just my personal opinion, but I've seen a lot of terrible code written
> which uses "design patterns" ...  A lot of the patterns seem to exist
> solely to bypass problems with OO languages.

Design Patterns seem very similar to what is usually called idioms in other
languages.  They're just common constructs you learn for common tasks.  An
example in ocaml might be typical recursion for a loop.

However, the OO Design Patterns do seem more to be techniques used to
compensate for defects in the OO methodology, or specific languages.

I would suspect that when someone encounters a place to use a design
pattern in OCaml, the problem would much better be solved by using some
other feature of the language.

Dave

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

