Return-Path: <yotambarnoy@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 984617F860
	for <caml-list@sympa.inria.fr>; Wed,  5 Mar 2014 16:33:52 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  yotambarnoy@gmail.com) identity=pra; client-ip=209.85.216.54;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="yotambarnoy@gmail.com";
  x-sender="yotambarnoy@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  yotambarnoy@gmail.com designates 209.85.216.54 as permitted
  sender) identity=mailfrom; client-ip=209.85.216.54;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="yotambarnoy@gmail.com";
  x-sender="yotambarnoy@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qa0-f54.google.com) identity=helo;
  client-ip=209.85.216.54;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="yotambarnoy@gmail.com";
  x-sender="postmaster@mail-qa0-f54.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AroBALJCF1PRVdg2lGdsb2JhbABag0FXwQuBEAgWDgEBAQEHCwsJEiqCJQEBAQMBQAEbHQEDAQsGBQsiGSIBEQEFAQ4BDQYTCIdcAQMJCKFZjF+DDpUpChknDWSFaBEBBQyORQcKhC4EiUuOcoEyiScEhWAYKYR4Hg
X-IPAS-Result: AroBALJCF1PRVdg2lGdsb2JhbABag0FXwQuBEAgWDgEBAQEHCwsJEiqCJQEBAQMBQAEbHQEDAQsGBQsiGSIBEQEFAQ4BDQYTCIdcAQMJCKFZjF+DDpUpChknDWSFaBEBBQyORQcKhC4EiUuOcoEyiScEhWAYKYR4Hg
X-IronPort-AV: E=Sophos;i="4.97,593,1389740400"; 
   d="scan'208";a="61428209"
Received: from mail-qa0-f54.google.com ([209.85.216.54])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 05 Mar 2014 16:33:51 +0100
Received: by mail-qa0-f54.google.com with SMTP id w8so1136840qac.27
        for <caml-list@inria.fr>; Wed, 05 Mar 2014 07:33:50 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=Yy3/isUi7pIcM9fx9BStA/n8e1g/kqhxBaAlHamBFR4=;
        b=AB9/wMM7gb+xvU7apeaiQ8KKsebMAw/GNPbfQPNbAI/EbSqAMrqDivJEJfTUc3xXSZ
         keMuOm+8TdKJgxfnyUtNQrgm8qIxnpGm6Opx1vPX9+190k0kcs2ihhb7SNpmCUlQdWYq
         TddH3S0/M08PKtBWZORYBxlbscKrb/zunMLHZhku5fwSC+amwA1wCMkmfbTMrV/3rZC6
         VxBd8N7W5SUXKGreIOYbULIl4QrjUOY2bfDpwpoDGMA7oFRUBehEpaPR/UMCquHU5MLe
         N9cQd9+aoqbx6SwD3ioRufo3O2tMBDZhhST/3E1xjCn20bZKyB0+1n2Wc8GqfPhyoduG
         MAEQ==
X-Received: by 10.140.96.11 with SMTP id j11mr1746884qge.6.1394033630462; Wed,
 05 Mar 2014 07:33:50 -0800 (PST)
MIME-Version: 1.0
Received: by 10.224.106.137 with HTTP; Wed, 5 Mar 2014 07:33:30 -0800 (PST)
In-Reply-To: <20140305152430.GJ17955@emmental.inria.fr>
References: <000b01cf3885$6f1ef7a0$4d5ce6e0$@metastack.com> <20140305152430.GJ17955@emmental.inria.fr>
From: Yotam Barnoy <yotambarnoy@gmail.com>
Date: Wed, 5 Mar 2014 10:33:30 -0500
Message-ID: <CAN6ygO=c_RerWmVUZ9qiv_DrrdZsG6_ynjZ_WpWBbfSApW9rXQ@mail.gmail.com>
To: Simon Cruanes <simon.cruanes.2007@m4x.org>
Cc: David Allsopp <dra-news@metastack.com>, OCaml List <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a113a968459635e04f3ddbfce
Subject: Re: [Caml-list] Project hosting for new OCaml projects

--001a113a968459635e04f3ddbfce
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

The github issue has been discussed on the list recently. Basically, github
blows everything else away with its general ease of use, ease of obtaining
information (graphs etc), ease of contribution, and so on. The consensus
appears to be that the only thing it doesn't do extremely well is track
issues. For a small codebase, though, I think the built-in issue handling
is more than enough. If you want your code to be out there; to get eyeballs
looking at it; and to possibly get other people to contribute, github is
definitely the way to go IMO.

-Yotam


On Wed, Mar 5, 2014 at 10:24 AM, Simon Cruanes
<simon.cruanes.2007@m4x.org>wrote:

> Hi,
>
> First let me insist that this is only my personal view.
>
> Le Wed, 05 Mar 2014, David Allsopp a =E9crit :
> > I've got a bit of code in a library which seems worth putting online. I=
'm
> > trying to consolidate the steps that should be taken to accomplish that
> > (beyond simply putting a tarball online!) and wondering if anyone can
> > confirm if what I've come up with is the "best/obvious" course of actio=
n.
> > Indeed, are there already "idiot"'s guides for this - I couldn't see
> > anything like it on ocaml.org et al?
> >
> > So, this particular library is a pure OCaml library, which simplifies
> things
> > somewhat. At present it's built using GNU make and of course it is
> managed
> > using findlib.
> >
> > It seems that the following are worth doing:
> >
> > * Support OASIS (and in so doing, I believe that will migrate its build
> > system to ocamlbuild)
>
> oasis is very nice in that it centralizes, in a single _oasis file,
> everything about the project. In particular, it deals with the META file,
> building cmxa, cma, cmxs, etc. It can generate a "configure" and a
> Makefile (if you so wish), points to the documentation, the VCS
> repository, deals with several libraries (or sub-libraries, see how lwt
> does it for instance) and executables, etc.
>
> > * Support OPAM (which looks incredibly straightforward - being primarily
> a
> > Windows user, the OPAM typhoon has flowed past me thus far)
>
> Pretty simple indeed, 3 small files in the opam-repository and you're don=
e.
> Also the opam team is quite reactive and helpful with packaging
> problems.
>
> > * Put the SCM online somewhere; submit a pull request for
> opam-repository;
> > announce it
> >
> > So, apart from any obvious errors/omissions in those steps, I have two
> > questions:
> >
> > 1. What are the differences, politely, in terms of things you can and
> can't
> > do between using GitHub and the OCaml Forge for the project pages? The
> Forge
> > seems the obvious choice, even ignoring the offensive name of the other!
>
> I think the main advantages of github is that since many people use it,
> it's easier to fork/contribute to a project (which is simple because
> it's 1/ forking 2/ committing 3/ submitting a "pull request" that can be
> discussed online; the patch can be modified as needed, and everyone
> commenting the pull request can see it). Also, I prefer the UI, but
> some could disagree.
>
> The main issue is lock-in, and it requires an account, but so does the
> forge afaik.
>
> > 2. Given that, is there any benefit/different to hosting the git
> repository
> > on the Forge vs hosting it on github and simply linking to it from the
> > Forge?
>
> My advice, if you already have a github account, is to use it. Otherwise
> I can't tell.
>
> Cheers,
>
> --
> Simon
>
> http://weusepgp.info/
> key 49AA62B6
> fingerprint 949F EB87 8F06 59C6 D7D3  7D8D 4AC0 1D08 49AA 62B6
>

--001a113a968459635e04f3ddbfce
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>The github issue has been discussed on the list recen=
tly. Basically, github blows everything else away with its general ease of =
use, ease of obtaining information (graphs etc), ease of contribution, and =
so on. The consensus appears to be that the only thing it doesn&#39;t do ex=
tremely well is track issues. For a small codebase, though, I think the bui=
lt-in issue handling is more than enough. If you want your code to be out t=
here; to get eyeballs looking at it; and to possibly get other people to co=
ntribute, github is definitely the way to go IMO.<br>

<br></div>-Yotam<br></div><div class=3D"gmail_extra"><br><br><div class=3D"=
gmail_quote">On Wed, Mar 5, 2014 at 10:24 AM, Simon Cruanes <span dir=3D"lt=
r">&lt;<a href=3D"mailto:simon.cruanes.2007@m4x.org" target=3D"_blank">simo=
n.cruanes.2007@m4x.org</a>&gt;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex">Hi,<br>
<br>
First let me insist that this is only my personal view.<br>
<br>
Le Wed, 05 Mar 2014, David Allsopp a =E9crit :<br>
<div class=3D"">&gt; I&#39;ve got a bit of code in a library which seems wo=
rth putting online. I&#39;m<br>
&gt; trying to consolidate the steps that should be taken to accomplish tha=
t<br>
&gt; (beyond simply putting a tarball online!) and wondering if anyone can<=
br>
&gt; confirm if what I&#39;ve come up with is the &quot;best/obvious&quot; =
course of action.<br>
&gt; Indeed, are there already &quot;idiot&quot;&#39;s guides for this - I =
couldn&#39;t see<br>
&gt; anything like it on <a href=3D"http://ocaml.org" target=3D"_blank">oca=
ml.org</a> et al?<br>
&gt;<br>
&gt; So, this particular library is a pure OCaml library, which simplifies =
things<br>
&gt; somewhat. At present it&#39;s built using GNU make and of course it is=
 managed<br>
&gt; using findlib.<br>
&gt;<br>
&gt; It seems that the following are worth doing:<br>
&gt;<br>
&gt; * Support OASIS (and in so doing, I believe that will migrate its buil=
d<br>
&gt; system to ocamlbuild)<br>
<br>
</div>oasis is very nice in that it centralizes, in a single _oasis file,<b=
r>
everything about the project. In particular, it deals with the META file,<b=
r>
building cmxa, cma, cmxs, etc. It can generate a &quot;configure&quot; and =
a<br>
Makefile (if you so wish), points to the documentation, the VCS<br>
repository, deals with several libraries (or sub-libraries, see how lwt<br>
does it for instance) and executables, etc.<br>
<div class=3D""><br>
&gt; * Support OPAM (which looks incredibly straightforward - being primari=
ly a<br>
&gt; Windows user, the OPAM typhoon has flowed past me thus far)<br>
<br>
</div>Pretty simple indeed, 3 small files in the opam-repository and you&#3=
9;re done.<br>
Also the opam team is quite reactive and helpful with packaging<br>
problems.<br>
<div class=3D""><br>
&gt; * Put the SCM online somewhere; submit a pull request for opam-reposit=
ory;<br>
&gt; announce it<br>
&gt;<br>
&gt; So, apart from any obvious errors/omissions in those steps, I have two=
<br>
&gt; questions:<br>
&gt;<br>
&gt; 1. What are the differences, politely, in terms of things you can and =
can&#39;t<br>
&gt; do between using GitHub and the OCaml Forge for the project pages? The=
 Forge<br>
&gt; seems the obvious choice, even ignoring the offensive name of the othe=
r!<br>
<br>
</div>I think the main advantages of github is that since many people use i=
t,<br>
it&#39;s easier to fork/contribute to a project (which is simple because<br>
it&#39;s 1/ forking 2/ committing 3/ submitting a &quot;pull request&quot; =
that can be<br>
discussed online; the patch can be modified as needed, and everyone<br>
commenting the pull request can see it). Also, I prefer the UI, but<br>
some could disagree.<br>
<br>
The main issue is lock-in, and it requires an account, but so does the<br>
forge afaik.<br>
<div class=3D""><br>
&gt; 2. Given that, is there any benefit/different to hosting the git repos=
itory<br>
&gt; on the Forge vs hosting it on github and simply linking to it from the=
<br>
&gt; Forge?<br>
<br>
</div>My advice, if you already have a github account, is to use it. Otherw=
ise<br>
I can&#39;t tell.<br>
<br>
Cheers,<br>
<span class=3D"HOEnZb"><font color=3D"#888888"><br>
--<br>
Simon<br>
<br>
<a href=3D"http://weusepgp.info/" target=3D"_blank">http://weusepgp.info/</=
a><br>
key 49AA62B6<br>
fingerprint 949F EB87 8F06 59C6 D7D3 =A07D8D 4AC0 1D08 49AA 62B6<br>
</font></span></blockquote></div><br></div>

--001a113a968459635e04f3ddbfce--
