Return-Path: <rich.neswold@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 242777F890
	for <caml-list@sympa.inria.fr>; Sat, 15 Mar 2014 18:37:08 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  rich.neswold@gmail.com) identity=pra;
  client-ip=209.85.223.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rich.neswold@gmail.com";
  x-sender="rich.neswold@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  rich.neswold@gmail.com designates 209.85.223.173 as permitted
  sender) identity=mailfrom; client-ip=209.85.223.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rich.neswold@gmail.com";
  x-sender="rich.neswold@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ie0-f173.google.com) identity=helo;
  client-ip=209.85.223.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rich.neswold@gmail.com";
  x-sender="postmaster@mail-ie0-f173.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqsBAGmOJFPRVd+tlGdsb2JhbABZxy0WDgEBAQEHCwsJEiqCZgYBGx4DEhBeEQEFASKHdwEDEQWhboMNjF+DDpY9ChknDWSGVhEBBQyGaosdgRQEiVKOdIZMiXVBhHg
X-IPAS-Result: AqsBAGmOJFPRVd+tlGdsb2JhbABZxy0WDgEBAQEHCwsJEiqCZgYBGx4DEhBeEQEFASKHdwEDEQWhboMNjF+DDpY9ChknDWSGVhEBBQyGaosdgRQEiVKOdIZMiXVBhHg
X-IronPort-AV: E=Sophos;i="4.97,661,1389740400"; 
   d="scan'208";a="52719722"
Received: from mail-ie0-f173.google.com ([209.85.223.173])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 15 Mar 2014 18:37:07 +0100
Received: by mail-ie0-f173.google.com with SMTP id rl12so3933031iec.32
        for <caml-list@inria.fr>; Sat, 15 Mar 2014 10:37:05 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=subject:from:content-type:message-id:date:to
         :content-transfer-encoding:mime-version;
        bh=KYfvfnC6PGbUzw85jyT05d6tQKHzDjXQWINKyAW/oCo=;
        b=RLrcF9DDCLgDj3xYN01bQQ8l3NRMVCtMp5daz0fCUyjUubFl/TzxIwyhV1zNcVxYGJ
         uevELRllIm/Q1hd6uWAOh7xVW8Wku4zGGEyeigXN/W3YxsQqR7cRLJ/JiauOKDQ7kYVO
         XulmNOLn0Gz0xPH8ztAR6vK7RD+oK9dYyEppm7WkjhPRxSNXeM0SKJOrT2cENlM9nY/k
         Wb+ErzMtdZUf+X1MbIsPEFVjBGnRHib7fcckCQUHxZ/EFIsQdktGM1IGjTF34o+POW9X
         Bj+rhBTfNiC2DPRaV5bOEinpkG4RxqV6WDQMI/FmiHUsXHqdd5LStwZq0bnr8FrYWfWM
         ZpFQ==
X-Received: by 10.43.155.209 with SMTP id lj17mr51399icc.94.1394905025685;
        Sat, 15 Mar 2014 10:37:05 -0700 (PDT)
Received: from [192.168.1.161] (c-98-226-41-18.hsd1.il.comcast.net. [98.226.41.18])
        by mx.google.com with ESMTPSA id ix1sm4039021igc.15.2014.03.15.10.37.03
        for <caml-list@inria.fr>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Sat, 15 Mar 2014 10:37:04 -0700 (PDT)
From: Richard Neswold <rich.neswold@gmail.com>
Content-Type: text/plain;
	charset=us-ascii
X-Mailer: iPad Mail (11D167)
Message-Id: <1732E7D3-C154-4305-90C8-0CC292FE08CF@gmail.com>
Date: Sat, 15 Mar 2014 12:37:03 -0500
To: "caml-list@inria.fr" <caml-list@inria.fr>
Content-Transfer-Encoding: quoted-printable
Mime-Version: 1.0 (1.0)
Subject: [Caml-list] OpenGL and LWT

Hello,

What would be the appropriate way to use LWT and LabGL together?

My gut feeling would be to have the core model and logic to be LWT with a '=
detached' thread executing the OpenGL main loop. The thread would get event=
s through the reactive module and would update the display accordingly.

The problem is I'm still trying to wrap my head around LWT and I'm not sure=
 a detached thread can participate with the LWT environment it was spawned =
from. It appears the detached thread is supposed to do something and eventu=
ally return a value.

Is the correct approach to use a detached thread to make the individual Ope=
nGL calls?

Any recommendations or resources on the subject would be appreciated.

--
Rich=
