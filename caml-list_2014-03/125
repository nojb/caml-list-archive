Return-Path: <goswin-v-b@web.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id C48B77F890
	for <caml-list@sympa.inria.fr>; Tue, 25 Mar 2014 16:50:00 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  goswin-v-b@web.de) identity=pra; client-ip=212.227.17.12;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="goswin-v-b@web.de";
  x-sender="goswin-v-b@web.de"; x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  goswin-v-b@web.de) identity=mailfrom;
  client-ip=212.227.17.12;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="goswin-v-b@web.de";
  x-sender="goswin-v-b@web.de"; x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mout.web.de) identity=helo;
  client-ip=212.227.17.12;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="goswin-v-b@web.de";
  x-sender="postmaster@mout.web.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqgBAMWkMVPU4xEMnGdsb2JhbABZg0G9Z4VdgRsWDgEBAQEBBg0JCRQogiUBAQEEOk8LGAkMGQ8FKIgYARQECcc6H4dqF4xuggcKDIMOgRQEmEyBM4UDEo8a
X-IPAS-Result: AqgBAMWkMVPU4xEMnGdsb2JhbABZg0G9Z4VdgRsWDgEBAQEBBg0JCRQogiUBAQEEOk8LGAkMGQ8FKIgYARQECcc6H4dqF4xuggcKDIMOgRQEmEyBM4UDEo8a
X-IronPort-AV: E=Sophos;i="4.97,728,1389740400"; 
   d="scan'208";a="64679575"
Received: from mout.web.de ([212.227.17.12])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES128-SHA; 25 Mar 2014 16:50:00 +0100
Received: from frosties.localnet ([149.172.224.32]) by smtp.web.de (mrweb101)
 with ESMTPSA (Nemesis) id 0LcxtU-1Wshbr2qSO-00i8Xt for <caml-list@inria.fr>;
 Tue, 25 Mar 2014 16:49:59 +0100
Received: from mrvn by frosties.localnet with local (Exim 4.80)
	(envelope-from <goswin-v-b@web.de>)
	id 1WSTby-0005LQ-VY
	for caml-list@inria.fr; Tue, 25 Mar 2014 16:49:59 +0100
Date: Tue, 25 Mar 2014 16:49:58 +0100
From: Goswin von Brederlow <goswin-v-b@web.de>
To: caml-list@inria.fr
Message-ID: <20140325154958.GA20202@frosties>
References: <20140321222842.GA10374@annexia.org>
 <4C341FFE-FDF2-4EA3-B056-D4F658641E4C@math.nagoya-u.ac.jp>
 <20140322071508.GB10374@annexia.org>
 <CAPFanBFJ4uxZVDvevTbGFpLduG6nJmMxU=XsaKZjSzCoiF6y7A@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAPFanBFJ4uxZVDvevTbGFpLduG6nJmMxU=XsaKZjSzCoiF6y7A@mail.gmail.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
X-Provags-ID:  V03:K0:v+9FC1dgh5BDdZyd1L4Y5zgMEYMOQbHnM+wb24v9f/MV3R4U4eO
 75dIAIyB+tlGcE74obilfeItu5cAGhm9YmQwz5U0XDaDeBYDxUfZOqBwK+J3UdkfZZMMnm2
 W+hK1/njo9+P88zhzSZfpFsfgeAf2o/dv/lJjnNrkBffuDuggGMN3defrRP9UU4nTlEeQrY
 Oo5rr9zXo7M7Ctz7TLWZw==
Subject: Re: [Caml-list] Trivial compiler patches

On Sat, Mar 22, 2014 at 09:28:29AM +0100, Gabriel Scherer wrote:
> Alternatively you could have sent a
> pull-request against github/ocaml/ocaml (as part of the ongoing "patch
> review experiment" http://alan.petitepomme.net/cwn/2014.02.04.html#2
> ), but I think the workflow is not much quicker (though there are
> command-line tools to make it faster).

Everyone that has never done this before should take a look. Github
has a "help" link that teaches you various steps and makes even first
time use verry easy.

In short you do the following:

1) Point your browser at github.com, log in (create an account if you
   don't have one) and search for ocaml [1].
2) click "fork" to make your own copy of the ocaml repository
3) clone your own ocaml repository (on your local machine)
4) edit, compile, test
5) commit the changes (on your local machine)
6) push changes back to github (now everyone can see them)
7) back to your browser, update the page for your own ocaml repository
   to see your changes appear
8) click "pull request", review the diff and click "create pull request"
9) wait for the pull request to be accepted

I prefer to make a fresh branch for every pull request and have those
then merged into my master branch that I use locally. But that is up
to you. The github frontend keeps track of your pull requests and
tells you when it got merged and makes it easy to remove the pull
request branches once they are obsolete. The extra branch also makes
it easier to rebase patches in case they need to be updated.

I only recently made my first pull request via github and found it
amazingly simple and comfortable to use.

MfG
	Goswin

PS: you do 1-3 only once, 4-6 all the time as you develope your patch
and 8 once for every patch you want to submitt.

--

[1] https://github.com/ocaml/ocaml
