Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pB9NcAab032006
	for <caml-list@sympa-roc.inria.fr>; Sat, 10 Dec 2011 00:38:10 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjACAOKa4k7AbSoIe2dsb2JhbABDhDZQpXUiAQEWJgQhgXIBAQUMFw8BRhAJAgkRAiYCAhQYMYgcpDWRJxSBIIkoM2MEjTeHOJIp
X-IronPort-AV: E=Sophos;i="4.71,329,1320620400"; 
   d="scan'208";a="122807654"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 10 Dec 2011 00:38:05 +0100
X-Envelope-From: oliver@first.in-berlin.de
Received: from first (e178012209.adsl.alicedsl.de [85.178.12.209])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id pB9Nc3FW017161
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT);
	Sat, 10 Dec 2011 00:38:03 +0100
Received: by first (Postfix, from userid 1000)
	id 180351540359; Sat, 10 Dec 2011 00:38:03 +0100 (CET)
Date: Sat, 10 Dec 2011 00:38:03 +0100
From: oliver <oliver@first.in-berlin.de>
To: =?utf-8?B?VMO2csO2aw==?= Edwin <edwintorok@gmail.com>
Cc: caml-list@inria.fr
Message-ID: <20111209233802.GD9346@siouxsie>
References: <20111209065758.94306.qmail@eeoth.pair.com>
 <4EE1BE59.4020804@glondu.net>
 <CAPFanBEJOtQ5=VD8_-1T2xUPqpL5DvRFX+mtkEPV3LG_hrbUQg@mail.gmail.com>
 <A46ACDBE-9251-42BB-AC04-86FD5DD8593B@googlemail.com>
 <CAPFanBH93_q95md6fk5XENV26VfdKv17JwLSZjNwX8oVxAt6Uw@mail.gmail.com>
 <59A74C55-C12B-4C98-9496-2E83BE8A39F0@googlemail.com>
 <4EE21B89.2010306@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <4EE21B89.2010306@gmail.com>
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
Subject: Re: [Caml-list] Why NOT to compile OCaml via C

On Fri, Dec 09, 2011 at 04:30:33PM +0200, Török Edwin wrote:
[...]
> Is binary compatibility with a specific version of ocamlopt necessary?
> I think that ocaml-llvm could detect the mismatch and print an error, like you get for an ABI mismatch.
> 
> Sure it'd be nice to be able to try out ocaml-llvm without rebuilding all OCaml packages,
> but such a rebuilt is required when new OCaml releases come out anyway, as they are usually not ABI compatible with each-other.
[...]


If it produces the same output as OCaml does now,
why to investigate ocaml-llvm?

Maybe changing OCaml from non-optimizing to an optimizing compiler
would outperform any llvm attempts.

Mabye the core team alkready works on this... who knows? ;-)


Ciao,
   Oliver
