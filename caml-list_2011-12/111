Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pB89bJdY015835
	for <caml-list@sympa-roc.inria.fr>; Thu, 8 Dec 2011 10:37:19 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkQFAL6D4E7VuiYS/2dsb2JhbABDhDZQpV6BBYFyAQEEAQwXBFIFCwkCGgImAgIsKwaIGgKlUJE6FIEgiHGBFgSnEg
X-IronPort-AV: E=Sophos;i="4.71,319,1320620400"; 
   d="scan'208";a="134504121"
Received: from solaria.dimino.org ([213.186.38.18])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/ADH-AES256-SHA; 08 Dec 2011 10:37:13 +0100
Received: from arrakis (localhost.localdomain [127.0.0.1])
	by solaria.dimino.org (Postfix) with ESMTP id C943C80088;
	Thu,  8 Dec 2011 10:37:12 +0100 (CET)
Received: by arrakis (Postfix, from userid 1000)
	id C6A3C11F615; Thu,  8 Dec 2011 10:37:11 +0100 (CET)
Message-ID: <1323337031.32238.62.camel@arrakis>
From: =?ISO-8859-1?Q?J=E9r=E9mie?= Dimino <jeremie@dimino.org>
To: Martin Jambon <martin.jambon@ens-lyon.org>
Cc: caml-list@inria.fr
Date: Thu, 08 Dec 2011 10:37:11 +0100
In-Reply-To: <4EE06AEF.6030103@ens-lyon.org>
References: <1323271707.32238.17.camel@arrakis>
		 <4EE04A80.6090409@ens-lyon.org> <1323327163.3523.14.camel@aurora>
	 <4EE06AEF.6030103@ens-lyon.org>
Content-Type: text/plain; charset="UTF-8"
X-Mailer: Evolution 3.0.3-3 
Mime-Version: 1.0
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id pB89bJdY015835
Subject: Re: [Caml-list] Generic printer patch

Le mercredi 07 décembre 2011 à 23:44 -0800, Martin Jambon a écrit :
> What do you think of moving the project to GitHub so we could follow its
> progress and contribute more easily?

This projet is just a quick hack. If i do something more serious i will
consider creating a real project.

> For now, I would just like to report that so far it works just as I
> imagined, with the following bug:
> 
>   let f x = show x
> 
> results in a segfault when running bytecode and an Assert_failure while
> compiling with ocamlopt:
> 
> external show : 'a -> string = "%show"
> let f l = show l
> let () = print_endline (f ())
> 
> $ ocamlopt -o toto toto.ml
> Fatal error: exception Assert_failure("asmcomp/cmmgen.ml", 1682, 10)

Fixed. I sometimes generated "let rec ... in ..." without any bindings
which confused the compiler.

-- 
Jérémie


