Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pB8H34eb003674
	for <caml-list@sympa-roc.inria.fr>; Thu, 8 Dec 2011 18:03:04 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmgBAErt4E7ZSMDzimdsb2JhbABDqmciAQEBCgkNBxIFIoFyAQEEATo/BQsLGAklDwEEKCETiAcCtzqDd4dEBJoijHA
X-IronPort-AV: E=Sophos;i="4.71,320,1320620400"; 
   d="scan'208";a="134591690"
Received: from fmmailgate05.web.de ([217.72.192.243])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 08 Dec 2011 18:02:43 +0100
Received: from moweb001.kundenserver.de (moweb001.kundenserver.de [172.19.20.114])
	by fmmailgate05.web.de (Postfix) with ESMTP id 1668767BC6DB
	for <caml-list@inria.fr>; Thu,  8 Dec 2011 18:02:43 +0100 (CET)
Received: from frosties.localnet ([95.208.118.96]) by smtp.web.de (mrweb002)
 with ESMTPA (Nemesis) id 0MXpqx-1REXH43WGl-00Wmm6; Thu, 08 Dec 2011 18:02:42
 +0100
Received: from mrvn by frosties.localnet with local (Exim 4.77)
	(envelope-from <goswin-v-b@web.de>)
	id 1RYhMm-0003SX-9L; Thu, 08 Dec 2011 18:02:40 +0100
From: Goswin von Brederlow <goswin-v-b@web.de>
To: oliver <oliver@first.in-berlin.de>
Cc: Anil Madhavapeddy <anil@recoil.org>,
        William Le Ferrand <William.Le-Ferrand@polytechnique.edu>,
        Stephane Glondu <steph@glondu.net>, caml users <caml-list@inria.fr>
In-Reply-To: <20111208110343.GC2042@siouxsie> (oliver@first.in-berlin.de's
	message of "Thu, 8 Dec 2011 12:03:43 +0100")
References: <CAGS5m-=5CvbV+V9Bu4XVYaRj_jy0E4-u1Vg1oGgZLGRrA=89Lw@mail.gmail.com>
	<4EE05363.8080102@glondu.net>
	<CAGS5m-=jWf=Y=17qc3mCD4=qAT-U5bqqDoP4g4ABkiRx=6SJ8w@mail.gmail.com>
	<18AE17A3-A732-4F7D-954E-58C7A1D538B4@recoil.org>
	<20111208110343.GC2042@siouxsie>
User-Agent: Gnus/5.110009 (No Gnus v0.9) XEmacs/21.4.22 (linux, no MULE)
Date: Thu, 08 Dec 2011 18:02:40 +0100
Message-ID: <87d3bzdmj3.fsf@frosties.localnet>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Provags-ID:  V02:K0:mX74UuIx6w8296FrlR+36FUdBMsV9P1X+SsMHJLLmx4
 1yocWNtxbMFhd4ce19pSlyFc/TR7cWacUtnomR7CGPqrxkZqna
 PY7BsZwpylMOq2j3kKzGcpS1n++hn/ClF3L26cSsJbyfvT3moP
 LYX7BzxP8VS3SA+IYyaISk5zbEevlg1dPVdVc+EJ5+OLAhLAfm
 HCj6hWqCyu8NK4ZfMvWnQ==
Subject: Re: [Caml-list] Storing ocaml values outside ocaml's heap

oliver <oliver@first.in-berlin.de> writes:

> On Thu, Dec 08, 2011 at 09:04:50AM +0000, Anil Madhavapeddy wrote:
>> I think Ancient is exactly what you're looking for.
>> 
>> Just disable swap (which you should do anyway on a big modern server), and it
>> will let you keep in-memory, out-of-heap OCaml values that don't get scanned by
>> the GC.
> [...]
>
>
> Completely disabling swap can crash the system.

No it can't. Or at least that would be a serious bug.

With or without swap if you run out of memory the OOM killer activates
and your system goes down the drain. But it should never crash. Swap
just delays the inevitable.

> Better just fine tune it, so that it uses swapping less often.
>
> => on Linux swappiness can be set via /proc:   /proc/sys/vm/swappiness

What I saw is that often on a 16GB node people would start programs that
use up 15.99GB. As in try to maximize the memory they use. Now when some
other things run like a cron job the system would reach an OOM
situation. And that is where a little swap comes in handly.

So give the system 1GB swap so it can swap out enough of a 16GB batch
job to run cron and friends when they occasionally wake up. But nowhere
the amount the ancient swap = 2x ram rule would dictate.

MfG
        Goswin

