Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pBGEC2q9006839
	for <caml-list@sympa-roc.inria.fr>; Fri, 16 Dec 2011 15:12:02 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApYBAC5R607B/BfVlGdsb2JhbABEhQyjfYJsAQEBAQkLCQkUAyKBcgEBBAEjFUEFCwsOCgICBSECAg8COAENBg0BBwEBEAeHXwKnB5FmgS+JP4EWBJR2hU6MXw
X-IronPort-AV: E=Sophos;i="4.71,363,1320620400"; 
   d="scan'208";a="123660440"
Received: from msa04.smtpout.orange.fr (HELO msa.smtpout.orange.fr) ([193.252.23.213])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 16 Dec 2011 15:11:57 +0100
Received: from [192.168.1.105] ([83.199.22.116])
	by mwinf5d68 with ME
	id 9qBv1i0032WGtrF03qBvNv; Fri, 16 Dec 2011 15:11:56 +0100
Message-ID: <4EEB51AB.10200@frisch.fr>
Date: Fri, 16 Dec 2011 15:11:55 +0100
From: Alain Frisch <alain@frisch.fr>
User-Agent: Mozilla/5.0 (X11; Linux i686 on x86_64; rv:8.0) Gecko/20111105 Thunderbird/8.0
MIME-Version: 1.0
To: Gerd Stolpmann <info@gerd-stolpmann.de>
CC: Aleksey Nogin <nogin@metaprl.org>, caml-list@inria.fr
References: <4EDE33A0.6070004@gmail.com>  <CAFrFfuGcT4geLSKCC7MRzY_8PaP2fUuGJD33ewkEH=r+6a2fOQ@mail.gmail.com>  <1323760512.9833.9.camel@samsung>  <CAFrFfuH=JB8m_jwCZdMcdSCYp7G0dcX2Zxr5Ur1zDUb37vTX0g@mail.gmail.com>  <4EE711FB.5020602@frisch.fr>  <CAP5QFJnsannf42j+jzS4xTsc5HYKa9xXtcfyYOTZ4LYNHWedPw@mail.gmail.com>  <4EE83C26.7090108@frisch.fr> <1323867161.7750.27.camel@samsung>  <4EE8DC93.1000806@metaprl.org> <1323884194.7750.58.camel@samsung>  <4EEB3BF7.30401@frisch.fr> <1324041254.7750.99.camel@samsung>
In-Reply-To: <1324041254.7750.99.camel@samsung>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Subject: Re: [Caml-list] Some comments on recent discussions

On 12/16/2011 02:14 PM, Gerd Stolpmann wrote:
> Simple answer: There is a bootstrap problem: The existing Ocaml users
> are almost Unix-only. They do not care about Windows. In order to
> establish "Windows-typical problem solving" you need definitely more
> Windows users, but they will only come if you have a Windows-typical way
> of distribution.
>
> My thinking is that you can break this circle only if you go forward and
> try to make as many Unix-style solutions available under Windows as
> possible.

Honestly, I think this is the wrong approach.  The Windows-style of 
packaging (i.e. lack of packaging system) is very simple to implement: 
just ship zip files or Windows installers. It's less comfortable than 
powerful package systems as we're used to in the Unix world, but it is 
not an issue for Windows users.

> By the way, your plan includes Unix emulation, too, under point 3. It's
> only more hidden.

Yes, but Unix emulation exists and works not too badly. You can use 
Cygwin, or msys, etc.  I can see two reasons for reimplementing 
Unix-like tools, and none of them are good:

  - We want to control everything in order to have better options for
    creating nice packages for OCaml related stuff. This is a bad reason,
    because Windows users except binary package anyway, so the external
    tools needed during the build process don't have to be redistributed.
    The only external tools which are currently mandatory to use ocaml
    are an assembler and a linker, and some native libraries. Not
    a Unix shell, a "find" or a "ls" command.

  - Existing solutions are not build on strong technical foundations,
    and one thinks one can do better. Ok, but this has nothing to do
    with OCaml; this will necessarily represent a huge amount of
    work; and I don't see why people who don't really care about Windows
    would do a better job in a few months than people who've spent years
    of work on cygwin/msys/etc.


Can you explain what's wrong with my approach:

   * OCaml users have access to binary packages which can be trivially
     installed (zip files or installers) and are self-contained.

   * People in charge of creating these packages use existing Unix-like
     environment (cygwin/msys/...); and progressively, they
     publish "best practices" for the whole community in order to
     simplify their job (e.g. try to rely on ocamlbuild or omake instead
     of Makefiles; avoid relying on symbolic links; etc).



Alain
