Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pBV9CFfe011440
	for <caml-list@sympa-roc.inria.fr>; Sat, 31 Dec 2011 10:12:15 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjcBAF3R/k7RVaA2kGdsb2JhbABDnDCQHAgiAQEBAQkJDQcUBCGBcgEBAQQSAiwBGx0BAwwGBQs7HgQBEQEFARw7oCEKi2WCa4QvP4hxAgULiGqDGgSMZ4gbjX09g3s
X-IronPort-AV: E=Sophos;i="4.71,436,1320620400"; 
   d="scan'208";a="137352030"
Received: from mail-pw0-f54.google.com ([209.85.160.54])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 31 Dec 2011 10:12:10 +0100
Received: by pbcc3 with SMTP id c3so14618512pbc.27
        for <caml-list@inria.fr>; Sat, 31 Dec 2011 01:12:08 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:reply-to:in-reply-to:references:from:date:message-id
         :subject:to:cc:content-type;
        bh=0yaNW/c8li/VAx4rmNTx8ULFTT1ynBiVXyH0A+r3b7A=;
        b=JC4agBY0/EsZte4YFSztu9DT+OzHBm4+Axce0vzFsXHGT/otLeEQz/iryKoaBB94+V
         upO61lHBX1FI2dtERNlq93V9NFQZi/Bx21lS6R42FcqFrtnNY19NeVgtA5b5UIbEsfcV
         pfTlipHnG2QxLYc2T4zsjE8btzkMdPJxNg+8A=
Received: by 10.68.191.102 with SMTP id gx6mr80178289pbc.12.1325322728332;
 Sat, 31 Dec 2011 01:12:08 -0800 (PST)
MIME-Version: 1.0
Received: by 10.142.211.20 with HTTP; Sat, 31 Dec 2011 01:11:47 -0800 (PST)
Reply-To: david.baelde@ens-lyon.org
In-Reply-To: <96F225D0-B458-4E25-BE34-3976989984B2@ezabel.com>
References: <96F225D0-B458-4E25-BE34-3976989984B2@ezabel.com>
From: David Baelde <david.baelde@gmail.com>
Date: Sat, 31 Dec 2011 10:11:47 +0100
Message-ID: <CAFqqUFEO5Vxf0jWxSEbDjXY-qE_G2XsOA0uZj47jTt4NMkeBPA@mail.gmail.com>
To: orbitz@ezabel.com
Cc: Caml List <caml-list@inria.fr>
Content-Type: text/plain; charset=ISO-8859-1
Subject: Re: [Caml-list] Understanding usage by the runtime

Hi,

My thoughts are not so fresh on that topic but, seeing the figures, it
could very well be that your memory leak is on the C side. Memory
allocated using malloc in C to Caml bindings won't show up in the Gc
info.

By the way, if you're sure that the leak is on the OCaml side, you
might be interested in ocaml-memprof. It's a patch by Fabrice Le
Fessant to get precise info about what kind of object is allocated by
the Gc over time. We've been able to use it a while ago on liquidsoap,
after Samuel Mimram adapted it for Ocaml 3.10 (you can find the
updated patch on his page).

Hope this helps,

David
