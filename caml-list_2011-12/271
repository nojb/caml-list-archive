Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pBE63iAJ017349
	for <caml-list@sympa-roc.inria.fr>; Wed, 14 Dec 2011 07:03:44 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AtABAPw76E7UGyoDlGdsb2JhbABEqyciAQEBAQcCCwkJFAMigXIBAQQBOEABEAsYCRYPCQMCAQIBNwENBg0BBQIBAReHYQK2WoN1h34ElHKFTYxd
X-IronPort-AV: E=Sophos;i="4.71,350,1320620400"; 
   d="scan'208";a="135315402"
Received: from smtp3-g21.free.fr ([212.27.42.3])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 14 Dec 2011 07:03:34 +0100
Received: from [192.168.0.10] (unknown [78.192.0.38])
	by smtp3-g21.free.fr (Postfix) with ESMTP id B5AB7A6527;
	Wed, 14 Dec 2011 07:03:27 +0100 (CET)
Message-ID: <4EE83C26.7090108@frisch.fr>
Date: Wed, 14 Dec 2011 07:03:18 +0100
From: Alain Frisch <alain@frisch.fr>
User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:8.0) Gecko/20111105 Thunderbird/8.0
MIME-Version: 1.0
To: Adrien <camaradetux@gmail.com>
CC: Martin DeMello <martindemello@gmail.com>,
        Gerd Stolpmann <info@gerd-stolpmann.de>,
        Jonathan Protzenko <jonathan.protzenko@gmail.com>, caml-list@inria.fr
References: <4EDE33A0.6070004@gmail.com> <CAFrFfuGcT4geLSKCC7MRzY_8PaP2fUuGJD33ewkEH=r+6a2fOQ@mail.gmail.com> <1323760512.9833.9.camel@samsung> <CAFrFfuH=JB8m_jwCZdMcdSCYp7G0dcX2Zxr5Ur1zDUb37vTX0g@mail.gmail.com> <4EE711FB.5020602@frisch.fr> <CAP5QFJnsannf42j+jzS4xTsc5HYKa9xXtcfyYOTZ4LYNHWedPw@mail.gmail.com>
In-Reply-To: <CAP5QFJnsannf42j+jzS4xTsc5HYKa9xXtcfyYOTZ4LYNHWedPw@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Subject: Re: [Caml-list] Some comments on recent discussions

On 12/13/2011 10:53 AM, Adrien wrote:
> On 13/12/2011, Alain Frisch<alain@frisch.fr>  wrote:
>> As Xavier said, it would be great to find someone who'd like to join the
>> core dev team in order to improve support for Windows. Anyone interested?
>
> In my experience, OCaml is working mostly fine on Windows. I can see
> some issues but nothing huge. Do you have some examples?

It is very good to hear about some successful experiences with OCaml 
under Windows!

Needless to say, but at LexiFi we are also very happy with OCaml under 
Windows.


That said, the situation probably needs to be improved in order to 
attract a larger audience. Many users complain about not being able to 
install and use OCaml under Windows in reasonable amount of time.  And 
the binary packages for Windows tend to lack behind official releases of 
OCaml.

As a concrete problem, until a few days ago, the mingw port could not be 
used with recent versions of Cygwin without some small hacks (like 
copying manually /bin/gcc-3.exe into gcc.exe, and passing more 
directories to flexlink).  No big deal, but it can discourage beginners.

A more serious issue is the lack of support for ocamlfind, GODI, and 
many libraries around for Windows.  Also, ocamlbuild does not play very 
nicely with Windows. A related point: the assumption is generally made 
that OCaml developpers under Windows need to have a running Cygwin 
installation. This is a huge barrier to entry. It would take some time 
to address this, but there is really no reason why ocamlbuild, for 
instance, should rely on an external Unix-like shell
(I believe the only reason today is to rely on bash for quoting 
arguments!).  And it is not difficult to adapt the build system for most 
libraries to avoid any dependency on Unix-like tools (using either 
ocamlbuild or omake). It just takes time to do so (and to maintain the 
result).

For the native compiler, we need an external toolchain, but this is not 
a huge issue.  With some little amount of work, one could support a 
standalone msys/mingw (as opposed to mingw compilers packaged in 
Cygwin), and it would be interesting to come up with a minimal mingw 
distribution (only with a C compiler, assembler, etc, as required by 
ocamlopt) that could be packaged together with OCaml. On the MSVC side, 
everything needed for the MSVC port (C compiler, linker, assembler, 
supporting headers and libraries) is found in a single free download 
from Microsoft.

I can also mention that with some work, one could come up with a 
standalone version of ocamlopt that does not require any external tool 
to produce .cmxs plugins  (we have done that at LexiFi, by replacing the 
assembler code emitter with a direct binary code generator; and by 
extending flexdll to produce dlls without an external linker).  Getting 
rid of the external toolchain to produce standalone programs is more 
difficult: to create the .exe, one needs some libraries and object 
files; a solution could be to do the same as for bytecode, that is, 
having a generic driver which loads user code concatenated to it. But 
being able to generate .cmxs without any external tool already make it 
possible to distribute OCaml native applications (packaged with 
ocamlopt) that the users can extend with OCaml plugins.


 > I guess most
> of the work would be to move forward instead of being stuck in the
> current situation.

Can you elaborate?  What are the most important issues in the current 
situation?


Alain
