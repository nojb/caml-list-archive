Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pBNA7flW003736
	for <caml-list@sympa-roc.inria.fr>; Fri, 23 Dec 2011 11:07:41 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ak8CAPhR9E5KfVK2i2dsb2JhbABEm2mIHAGIKAgiAQEBCgsLBxIGIYFyAQEBAwESAhNHCwULCwQHGiEiEgEFAQoSBhMSEIdYCJoqCpxmg32IEgSCWpIojX09gkyBLw
X-IronPort-AV: E=Sophos;i="4.71,398,1320620400"; 
   d="scan'208";a="136587787"
Received: from mail-we0-f182.google.com ([74.125.82.182])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 23 Dec 2011 11:07:35 +0100
Received: by werb13 with SMTP id b13so7235074wer.27
        for <caml-list@inria.fr>; Fri, 23 Dec 2011 02:07:35 -0800 (PST)
MIME-Version: 1.0
Received: by 10.216.136.155 with SMTP id w27mr9990784wei.8.1324634855512; Fri,
 23 Dec 2011 02:07:35 -0800 (PST)
Received: by 10.180.97.201 with HTTP; Fri, 23 Dec 2011 02:07:35 -0800 (PST)
In-Reply-To: <4EF43C29.9090409@rktmb.org>
References: <4EF43C29.9090409@rktmb.org>
Date: Fri, 23 Dec 2011 11:07:35 +0100
Message-ID: <CACyk+CLz1SUo9QqAK+3id2A7J9VyR=aWBaAnZXFLiiYNPbdK8Q@mail.gmail.com>
From: Martin Koch <mak@issuu.com>
To: Mihamina Rakotomandimby <mihamina@rktmb.org>
Cc: caml-list@inria.fr
Content-Type: multipart/alternative; boundary=0016e6d99c230519c304b4bf96e5
Subject: Re: [Caml-list] polymorphism in general


--0016e6d99c230519c304b4bf96e5
Content-Type: text/plain; charset=ISO-8859-1

A function is polymorphic if it accepts _arguments_ with different types
(the return value is not considered). Thus

# let f x = x + 1;;
val f : int -> int = <fun>

is not polymorphic; it only accepts an integer.

Your function, on the other hand, is polymorphic. It accepts a two-tuple,
where any type may appear on either position, e.g.

# let f (a,b) = "hi there";;
val f : 'a * 'b -> string = <fun>

So I can use f on both, say a string and a bool pair, or an int and an
empty list.

# f("Blue Stilton", false);;
- : string = "hi there"
# f(42, []);;
- : string = "hi there"

/Martin

On Fri, Dec 23, 2011 at 9:30 AM, Mihamina Rakotomandimby <mihamina@rktmb.org
> wrote:

> Hello,
>
> I have a question about polymorphism in general.
>
> Let's take this example:
>  val polymorph1 : 'a * 'b -> string = <fun>
>
> Is it polymorph?
> I have a doubt because the result is always a "string", not something
> related to either "'a" or "'b".
>
> So another way to ask the question: is polymorphism only qualified by the
> parameter?
>
> Thank you for your help.
>
> --
> RMA.
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/**wws/info/caml-list<https://sympa-roc.inria.fr/wws/info/caml-list>
> Beginner's list: http://groups.yahoo.com/group/**ocaml_beginners<http://groups.yahoo.com/group/ocaml_beginners>
> Bug reports: http://caml.inria.fr/bin/caml-**bugs<http://caml.inria.fr/bin/caml-bugs>
>
>

--0016e6d99c230519c304b4bf96e5
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

A function is polymorphic if it accepts _arguments_ with different types (t=
he return value is not considered). Thus<div><div><br></div><div><font clas=
s=3D"Apple-style-span" face=3D"&#39;courier new&#39;, monospace"># let f x =
=3D x + 1;;</font></div>
<div><font class=3D"Apple-style-span" face=3D"&#39;courier new&#39;, monosp=
ace">val f : int -&gt; int =3D &lt;fun&gt;</font></div></div><div><br></div=
><div>is not polymorphic; it only accepts an integer.</div><div><br></div><=
div>
Your function, on the other hand, is polymorphic. It accepts a two-tuple, w=
here any type may appear on either position, e.g.=A0</div><div><br></div><d=
iv><font class=3D"Apple-style-span" face=3D"&#39;courier new&#39;, monospac=
e"># let f (a,b) =3D &quot;hi there&quot;;;</font></div>
<div><font class=3D"Apple-style-span" face=3D"&#39;courier new&#39;, monosp=
ace">val f : &#39;a * &#39;b -&gt; string =3D &lt;fun&gt;</font></div><div>=
<br></div><div>So I can use f on both, say a string and a bool pair, or an =
int and an empty list.</div>
<div><br></div><div><div><font class=3D"Apple-style-span" face=3D"&#39;cour=
ier new&#39;, monospace"># f(&quot;Blue Stilton&quot;, false);;</font></div=
><div><font class=3D"Apple-style-span" face=3D"&#39;courier new&#39;, monos=
pace">- : string =3D &quot;hi there&quot;</font></div>
<div><font class=3D"Apple-style-span" face=3D"&#39;courier new&#39;, monosp=
ace"># f(42, []);;</font></div><div><font class=3D"Apple-style-span" face=
=3D"&#39;courier new&#39;, monospace">- : string =3D &quot;hi there&quot;</=
font></div>
</div><div><br></div><div>/Martin=A0</div><div><br></div><div><div class=3D=
"gmail_quote">On Fri, Dec 23, 2011 at 9:30 AM, Mihamina Rakotomandimby <spa=
n dir=3D"ltr">&lt;<a href=3D"mailto:mihamina@rktmb.org">mihamina@rktmb.org<=
/a>&gt;</span> wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex">Hello,<br>
<br>
I have a question about polymorphism in general.<br>
<br>
Let&#39;s take this example:<br>
=A0val polymorph1 : &#39;a * &#39;b -&gt; string =3D &lt;fun&gt;<br>
<br>
Is it polymorph?<br>
I have a doubt because the result is always a &quot;string&quot;, not somet=
hing related to either &quot;&#39;a&quot; or &quot;&#39;b&quot;.<br>
<br>
So another way to ask the question: is polymorphism only qualified by the p=
arameter?<br>
<br>
Thank you for your help.<br>
<br>
-- <br>
RMA.<br><font color=3D"#888888">
<br>
-- <br>
Caml-list mailing list. =A0Subscription management and archives:<br>
<a href=3D"https://sympa-roc.inria.fr/wws/info/caml-list" target=3D"_blank"=
>https://sympa-roc.inria.fr/<u></u>wws/info/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/<u></u>ocaml_beginners<=
/a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-<u></u>bugs</a><br>
<br>
</font></blockquote></div><br></div>

--0016e6d99c230519c304b4bf96e5--
