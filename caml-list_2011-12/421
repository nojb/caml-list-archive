Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pBOAGvwR002882
	for <caml-list@sympa-roc.inria.fr>; Sat, 24 Dec 2011 11:17:00 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgcCADym9U7AbSoIe2dsb2JhbABDhQ+kU4JYIgEBFiYEIYFyAQEEASMPAUYFCwsJDwICJgICFBgxiA0CpiGRNBOBHIlKM2MEjUeHOpI2
X-IronPort-AV: E=Sophos;i="4.71,403,1320620400"; 
   d="scan'208";a="124538882"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 24 Dec 2011 11:17:00 +0100
X-Envelope-From: oliver@first.in-berlin.de
Received: from first (e178031165.adsl.alicedsl.de [85.178.31.165])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id pBOAGxIM003772
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT);
	Sat, 24 Dec 2011 11:16:59 +0100
Received: by first (Postfix, from userid 1000)
	id F2278154036A; Sat, 24 Dec 2011 11:16:58 +0100 (CET)
Date: Sat, 24 Dec 2011 11:16:58 +0100
From: oliver <oliver@first.in-berlin.de>
To: =?utf-8?B?U3TDqXBoYW5l?= Glondu <steph@glondu.net>
Cc: caml-list@inria.fr
Message-ID: <20111224101658.GD1858@siouxsie>
References: <4EF4C1B4.30408@inria.fr>
 <20111223184046.GA5565@siouxsie>
 <4EF592AA.8050203@glondu.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <4EF592AA.8050203@glondu.net>
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
Subject: Re: [Caml-list] try ocaml website

On Sat, Dec 24, 2011 at 09:51:54AM +0100, Stéphane Glondu wrote:
> Le 23/12/2011 19:40, oliver a écrit :
> > From the js_of_ocaml page it looks like it's based on Ocsigen.
> > Maybe it's time to explore it. :-)
> 
> It's the other way around: Ocsigen is based on js_of_ocaml.

??


> The examples
> on [1] (and Try OCaml AFAICT) don't need Ocsigen.

That it can be stand-alone, independent of Ocsigen, does not mean that
it is the base of Ocsigen.
From what I read it's rather that there are two components which might or moght
not work together, each undependently of the other.


[...]
> If you want to write a full client-server application with both sides
> written in OCaml and a clean integration, then Ocsigen is for you :-)
[...]

Yes, that was the most impressive thing I read about Ocsigen/js_of_ocaml,
that client and server stuff can be developed together.

To develop each side independently of the other all to often creates
inconsitencies and annoyance.

Also that OCaml is the base for it, of course is a big plus.

Is there also something like Python's Django for this project,
or planned at least?
Django is a Python-based Webframework that also integrates usage of databases.
And there are good reasons to have access to a databases in Web-applications.

So, such stuff would be needed too.


Ciao,
   Oliver
