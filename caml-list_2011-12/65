Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pB71msgJ026900
	for <caml-list@sympa-roc.inria.fr>; Wed, 7 Dec 2011 02:48:54 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AskCADTF3k5KfVI0imdsb2JhbABDmjE0hFWDDgGFHIFegRcIIgEBAQoJDRkGIYFyAQEBAwESAiwBGxILAQMBCwYFCwMXISEBAREBBQEKEgYTEgIHB4dlCJhpCotkgmuEOj2IcQIFCoNoh0AEgluFU4w4imaDBj2EFQ
X-IronPort-AV: E=Sophos;i="4.71,310,1320620400"; 
   d="scan'208";a="134249395"
Received: from mail-ww0-f52.google.com ([74.125.82.52])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 07 Dec 2011 02:48:48 +0100
Received: by wgbdr12 with SMTP id dr12so156392wgb.9
        for <caml-list@inria.fr>; Tue, 06 Dec 2011 17:48:48 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=gHXQ53XtgT5ipcz3OU2neRFWU7Bcb4wZzr+TsRzIKsA=;
        b=B10ym+tHAd/P/n0r8GN/hFEUGRvLwuXlebWTWbuKY+jrcLkZOUYhHqGaBth5rdQBVF
         Hu7IpLDRuLADKrOKJmamZled77dzQMMcHW/IkMDczwvlfrZmVHwqrDJy/Ioyz398sLz4
         JajnfcSgwSI50O4xxdSRLttSjA6DS+Tv5/sj8=
Received: by 10.180.18.165 with SMTP id x5mr20659484wid.24.1323222527487; Tue,
 06 Dec 2011 17:48:47 -0800 (PST)
MIME-Version: 1.0
Received: by 10.216.54.19 with HTTP; Tue, 6 Dec 2011 17:48:26 -0800 (PST)
In-Reply-To: <CAPzAKVCshB8mfN4t7i_LRiSMwHJk1vWoioHPz5u_2AWOTtwr9w@mail.gmail.com>
References: <4EDE33A0.6070004@gmail.com> <4EDE568C.9040803@lexifi.com> <CAPzAKVCshB8mfN4t7i_LRiSMwHJk1vWoioHPz5u_2AWOTtwr9w@mail.gmail.com>
From: Ashish Agarwal <agarwal1975@gmail.com>
Date: Tue, 6 Dec 2011 20:48:26 -0500
Message-ID: <CAMu2m2+hxNgB+KvWGX5AFs8fUeoVxfAo-mQuDyaB8UqBXm-dGA@mail.gmail.com>
To: Paolo Donadeo <p.donadeo@gmail.com>
Cc: OCaml mailing list <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=f46d040fa000b5aeba04b376c04e
Subject: Re: [Caml-list] Some comments on recent discussions


--f46d040fa000b5aeba04b376c04e
Content-Type: text/plain; charset=ISO-8859-1

A "standard library" does not imply "big" or that it is part of the
standard distribution. Both Batteries and Core would make fine standard
libraries. Neither is very big and both are independent of the standard
distribution. But having 5 different standard libraries is annoying
precisely because the library covers just basic concepts. We don't need 5
APIs for string functions. They are all easy to learn independently but a
pain if you have to know them all. A beginner won't bother taking the time
to do a google search and find which one to use; before that they'll use
another language.

I also think the debate about github, ocamlforge, etc is fruitless. People
have different preferences and who knows what new tools will be developed a
couple years from now. Instead of arguing about which one is best, we
should accept that we will not agree on this. And why do we need to? We can
aggregate the information from multiple sources and present it in a uniform
way on a community website.


On Tue, Dec 6, 2011 at 7:18 PM, Paolo Donadeo <p.donadeo@gmail.com> wrote:

> I just want to add some erratic thoughts summoned by the recent
> <strike>flame</strike>... discussion about "the state of the OCaml
> union". For this reason I'm not pretending to be coherent or to have
> an answer to each and every problem, I'm not John Wayne and I'll never
> be.
>
> OCaml community is basically composed by computer professionals that
> have very few time to spend on the geek social networks (reddit,
> stackoverflow, ...) to write how this language is beautiful, how it is
> so "pure" (or "impure"), and so on. I write software in OCaml, and
> this software is working right now in a production environment.
> Nothing even comparable with Jane St. or LexiFy or Mylife, but I have
> my customers and if something stops working, they complain A LOT ;-)
>
> This pragmatical attitude of the OCaml community is not accidental and
> is the clear expression of a language that *is* pragmatical.
>
> And this attitude is the main reason why, in my very honest opinion,
> the OCaml language haven't a hype comparable to, say, Haskell. Is this
> bad? Are we frustrated because nobody writes on "Wired" about OCaml?
> I'm not.
>
> What I like in OCaml is that it's really stable, fast and in the last
> years many key tools have been added to the tool chain. As an
> engineer, I think that ocamlbuild + oasis (only an example) are MORE
> valuable than first class modules and GADTs. Which, in turn, are not
> "minor improvements" at all, and I don't see this supposed immobility
> of the language.
>
> The standard library problem: the core library is small, ugly, useless
> and more. The standard library provided by INRIA can't even send
> email, make a POST, or talk with a web service. Ok, but what exactly
> can you do with the C, or C++ standard library? I *like* the elegant
> simplicity of the standard library and, when something is missing I
> can: 1) write my own solution or 2) search for library by other OCaml
> developers. What's wrong with Google searching for a good library? Why
> many people seems to advocate a unique library "to rule them all"? And
> why this huge library should enter in the standard distribution? Why
> many people complain about the poor visibility of the community, but
> refuses to use ocamlcore.org (thanks Sylvain forever!) only because
> GitHub has a nicer web2.0 interface? Yes, I like GitHub, but I think
> we *ALL* should host our projects, at least the main web pages on
> OCamlCore, to minimize the scatter.
>
> There are many specialized library for almost everything in OCaml, and
> 2/3 big "standard libraries" (Batteries, Core, ExtLib?). Why can't we
> simply choose one of these excellent libraries? I like
> <ads>Batteries</ads> but there is NOTHING wrong with Core, and I hope
> both of them will remain OUT of the standard distribution forever.
> Why? Because the standard library is small and virtually bug-free or,
> better said, it tends to be so, because it's *rare* that a new feature
> is added, and this is *good*. It's like the basic building blocks of
> Lego: if you want gears or you need a pulley, buy Lego Technic ;-)
>
> Another example: reactive programming. Not using Google (I swear!) I
> can remember LWT, react, Ocamlnet (in part...) and froc. Is this
> situation to be considered harmful? I appreciate this wide range of
> approaches to the same problem, it's the sign of a vital community.
>
> I'm too seasoned as a programmer and I already experienced the
> <irony>huge benefits</irony> of big standard libraries: the
> Magnificent Java Standard Library, BOOST, the ACE framework, and many
> others, all excellent examples of what a serial killer can design with
> a cohort of programmers and a beautiful programming language ;-)
>
> I don't say there are no problems, and everything is fine. But if I
> have do point at a problem, especially for newcomers, I would say that
> we need a book, an up to date book, written in good English and
> published by O'Relly.
>
> But this is a very hard issue to be solved, no GitHub (R) (TM) in help
> here ;-)
>
>
> --
> Paolo
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/wws/info/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>

--f46d040fa000b5aeba04b376c04e
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div>A &quot;standard library&quot; does not imply &quot;big&quot; or that =
it is part of the standard distribution. Both Batteries and Core would make=
 fine standard libraries. Neither is very big and both are independent of t=
he standard distribution. But having 5 different standard libraries is anno=
ying precisely because the library covers just basic concepts. We don&#39;t=
 need 5 APIs for string functions. They are all easy to learn independently=
 but a pain if you have to know them all. A beginner won&#39;t bother takin=
g the time to do a google search and find which one to use; before that the=
y&#39;ll use another language.</div>

<div><br></div><div>I also think the debate about github, ocamlforge, etc i=
s fruitless. People have different preferences and who knows what new tools=
 will be developed a couple years from now. Instead of arguing about which =
one is best, we should accept that we will not agree on this. And why do we=
 need to? We can aggregate the information from multiple sources and presen=
t it in a uniform way on a community website.</div>

<div><br></div><br><div class=3D"gmail_quote">On Tue, Dec 6, 2011 at 7:18 P=
M, Paolo Donadeo <span dir=3D"ltr">&lt;<a href=3D"mailto:p.donadeo@gmail.co=
m">p.donadeo@gmail.com</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_=
quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1=
ex;">

I just want to add some erratic thoughts summoned by the recent<br>
&lt;strike&gt;flame&lt;/strike&gt;... discussion about &quot;the state of t=
he OCaml<br>
union&quot;. For this reason I&#39;m not pretending to be coherent or to ha=
ve<br>
an answer to each and every problem, I&#39;m not John Wayne and I&#39;ll ne=
ver<br>
be.<br>
<br>
OCaml community is basically composed by computer professionals that<br>
have very few time to spend on the geek social networks (reddit,<br>
stackoverflow, ...) to write how this language is beautiful, how it is<br>
so &quot;pure&quot; (or &quot;impure&quot;), and so on. I write software in=
 OCaml, and<br>
this software is working right now in a production environment.<br>
Nothing even comparable with Jane St. or LexiFy or Mylife, but I have<br>
my customers and if something stops working, they complain A LOT ;-)<br>
<br>
This pragmatical attitude of the OCaml community is not accidental and<br>
is the clear expression of a language that *is* pragmatical.<br>
<br>
And this attitude is the main reason why, in my very honest opinion,<br>
the OCaml language haven&#39;t a hype comparable to, say, Haskell. Is this<=
br>
bad? Are we frustrated because nobody writes on &quot;Wired&quot; about OCa=
ml?<br>
I&#39;m not.<br>
<br>
What I like in OCaml is that it&#39;s really stable, fast and in the last<b=
r>
years many key tools have been added to the tool chain. As an<br>
engineer, I think that ocamlbuild + oasis (only an example) are MORE<br>
valuable than first class modules and GADTs. Which, in turn, are not<br>
&quot;minor improvements&quot; at all, and I don&#39;t see this supposed im=
mobility<br>
of the language.<br>
<br>
The standard library problem: the core library is small, ugly, useless<br>
and more. The standard library provided by INRIA can&#39;t even send<br>
email, make a POST, or talk with a web service. Ok, but what exactly<br>
can you do with the C, or C++ standard library? I *like* the elegant<br>
simplicity of the standard library and, when something is missing I<br>
can: 1) write my own solution or 2) search for library by other OCaml<br>
developers. What&#39;s wrong with Google searching for a good library? Why<=
br>
many people seems to advocate a unique library &quot;to rule them all&quot;=
? And<br>
why this huge library should enter in the standard distribution? Why<br>
many people complain about the poor visibility of the community, but<br>
refuses to use <a href=3D"http://ocamlcore.org" target=3D"_blank">ocamlcore=
.org</a> (thanks Sylvain forever!) only because<br>
GitHub has a nicer web2.0 interface? Yes, I like GitHub, but I think<br>
we *ALL* should host our projects, at least the main web pages on<br>
OCamlCore, to minimize the scatter.<br>
<br>
There are many specialized library for almost everything in OCaml, and<br>
2/3 big &quot;standard libraries&quot; (Batteries, Core, ExtLib?). Why can&=
#39;t we<br>
simply choose one of these excellent libraries? I like<br>
&lt;ads&gt;Batteries&lt;/ads&gt; but there is NOTHING wrong with Core, and =
I hope<br>
both of them will remain OUT of the standard distribution forever.<br>
Why? Because the standard library is small and virtually bug-free or,<br>
better said, it tends to be so, because it&#39;s *rare* that a new feature<=
br>
is added, and this is *good*. It&#39;s like the basic building blocks of<br>
Lego: if you want gears or you need a pulley, buy Lego Technic ;-)<br>
<br>
Another example: reactive programming. Not using Google (I swear!) I<br>
can remember LWT, react, Ocamlnet (in part...) and froc. Is this<br>
situation to be considered harmful? I appreciate this wide range of<br>
approaches to the same problem, it&#39;s the sign of a vital community.<br>
<br>
I&#39;m too seasoned as a programmer and I already experienced the<br>
&lt;irony&gt;huge benefits&lt;/irony&gt; of big standard libraries: the<br>
Magnificent Java Standard Library, BOOST, the ACE framework, and many<br>
others, all excellent examples of what a serial killer can design with<br>
a cohort of programmers and a beautiful programming language ;-)<br>
<br>
I don&#39;t say there are no problems, and everything is fine. But if I<br>
have do point at a problem, especially for newcomers, I would say that<br>
we need a book, an up to date book, written in good English and<br>
published by O&#39;Relly.<br>
<br>
But this is a very hard issue to be solved, no GitHub (R) (TM) in help here=
 ;-)<br>
<span class=3D"HOEnZb"><font color=3D"#888888"><br>
<br>
--<br>
Paolo<br>
</font></span><div class=3D"HOEnZb"><div class=3D"h5"><br>
--<br>
Caml-list mailing list. =A0Subscription management and archives:<br>
<a href=3D"https://sympa-roc.inria.fr/wws/info/caml-list" target=3D"_blank"=
>https://sympa-roc.inria.fr/wws/info/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
<br>
</div></div></blockquote></div><br>

--f46d040fa000b5aeba04b376c04e--
