Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pBEFSDco005542
	for <caml-list@sympa-roc.inria.fr>; Wed, 14 Dec 2011 16:28:13 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AiYBAKe/6E7U4367kGdsb2JhbABDhQijBIEpgXIiAQEBAQkJDQcUAyKBcgEBBSNNCRALGAICJgICSQENBhMbh2GlPpIEgS+CSoZ6gRYEjQ6NM4xe
X-IronPort-AV: E=Sophos;i="4.71,352,1320620400"; 
   d="scan'208";a="123359071"
Received: from moutng.kundenserver.de ([212.227.126.187])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 14 Dec 2011 16:28:07 +0100
Received: from office1.lan.sumadev.de (dslb-188-097-012-119.pools.arcor-ip.net [188.97.12.119])
	by mrelayeu.kundenserver.de (node=mreu3) with ESMTP (Nemesis)
	id 0LrUzJ-1QaGqr3KqT-0138DY; Wed, 14 Dec 2011 16:28:01 +0100
Received: from [192.168.178.11] (546BF816.cm-12-4d.dynamic.ziggo.nl [84.107.248.22])
	by office1.lan.sumadev.de (Postfix) with ESMTPSA id 37316C00C7;
	Wed, 14 Dec 2011 16:28:00 +0100 (CET)
From: Gerd Stolpmann <info@gerd-stolpmann.de>
To: Adrien <camaradetux@gmail.com>
Cc: Alain Frisch <alain@frisch.fr>,
        Jonathan Protzenko
 <jonathan.protzenko@gmail.com>,
        Martin DeMello <martindemello@gmail.com>,
        Gerd Stolpmann <info@gerd-stolpmann.de>, caml-list@inria.fr
In-Reply-To: <CAP5QFJn7kUZg1+uGzEocRxSg-QmV7Ve0y0QMRFTnWXsHdQ12ow@mail.gmail.com>
References: <4EDE33A0.6070004@gmail.com>
	 <CAFrFfuGcT4geLSKCC7MRzY_8PaP2fUuGJD33ewkEH=r+6a2fOQ@mail.gmail.com>
	 <1323760512.9833.9.camel@samsung>
	 <CAFrFfuH=JB8m_jwCZdMcdSCYp7G0dcX2Zxr5Ur1zDUb37vTX0g@mail.gmail.com>
	 <4EE711FB.5020602@frisch.fr>
	 <CAP5QFJnsannf42j+jzS4xTsc5HYKa9xXtcfyYOTZ4LYNHWedPw@mail.gmail.com>
	 <4EE83C26.7090108@frisch.fr> <4EE86D90.6080409@gmail.com>
	 <4EE87976.4030604@frisch.fr>
	 <CAP5QFJn7kUZg1+uGzEocRxSg-QmV7Ve0y0QMRFTnWXsHdQ12ow@mail.gmail.com>
Content-Type: text/plain; charset="UTF-8"
Date: Wed, 14 Dec 2011 16:27:58 +0100
Message-ID: <1323876479.7750.36.camel@samsung>
Mime-Version: 1.0
X-Mailer: Evolution 2.32.2 
Content-Transfer-Encoding: 7bit
X-Provags-ID: V02:K0:VxXsmPlFrn3xgPhDifrW4l/aKovZJjLkLiFbzUeaJLb
 jA4W0ObPHz9Qt0lC/5SeAb9AH6Z4c2DnvcOGu1/LAJsUFVKQsS
 HLKb9M62KREMoPuDcmJhleZvC+uvdS9SXIGohHeUYCTXMz/EEX
 K6pPWoD00sML2tBmDgCzcGfKueFqpbdCJleK1vHUoyYhGIAj6X
 1X+Da1JhSwZknxkHu4njr3l99pWVBtQ2oT2xF3D9zDp5HWTuzQ
 9bTMGOKRCVpbXgAaFxvhU4W1kIJFbz2vgrgVtBq0Hk3muqDDVA
 2RJ7306jGsMbJakv8w1/ueBSGhDnTWoV7hn63dg7VgKk+vmFtd
 47Vvlca+oPiG+yXZsSPKwN1TTK8xK3L3f6MdZ19XH
Subject: Re: [Caml-list] Some comments on recent discussions

Am Mittwoch, den 14.12.2011, 14:37 +0100 schrieb Adrien:
> On 14/12/2011, Alain Frisch <alain@frisch.fr> wrote:
> > On 12/13/2011 10:53 AM, Adrien wrote:
> >> On 13/12/2011, Alain Frisch<alain@frisch.fr>  wrote:
> >>> As Xavier said, it would be great to find someone who'd like to join the
> >>> core dev team in order to improve support for Windows. Anyone interested?
> >>
> >> In my experience, OCaml is working mostly fine on Windows. I can see
> >> some issues but nothing huge. Do you have some examples?
> >
> > It is very good to hear about some successful experiences with OCaml
> > under Windows!
> >
> > Needless to say, but at LexiFi we are also very happy with OCaml under
> > Windows.
> >
> >
> > That said, the situation probably needs to be improved in order to
> > attract a larger audience. Many users complain about not being able to
> > install and use OCaml under Windows in reasonable amount of time.  And
> > the binary packages for Windows tend to lack behind official releases of
> > OCaml.
> 
> As far as I'm concerned, I managed to do it in a few hours last summer (less
> than a morning) but: I'm used to digging in the system (cygwin, msys,
> slackware) and packaging (godi, slackware, yypkg), and I've been lucky to
> have to use libraries that used oasis. That's quite a lot of conditions for
> most cases but, still, it's usually not terribly difficult.
> 
> I'd also like to mention the #ocaml IRC channel of freenode: IRC is a good
> communication medium for such things imho.
> 
> > As a concrete problem, until a few days ago, the mingw port could not be
> > used with recent versions of Cygwin without some small hacks (like
> > copying manually /bin/gcc-3.exe into gcc.exe, and passing more
> > directories to flexlink).  No big deal, but it can discourage beginners.
> 
> Actually, I think that you should have used the "/etc/alternatives"
> symlinks: /usr/bin/gcc points to /etc/alternatives/FOO and you can make this
> FOO symlink point to the /usr/bin/BAR binary that you want.

There are no (usable) symlinks in Windows. Cygwin includes an emulation,
but it is not understood by win32 programs, and hence this mechanism is
unavailable for ocamlc/opt and flexlink.

Gerd


>I've never considered /etc/alternatives to be a good solution however (feels
> like spaghetti code).
> 
> > A more serious issue is the lack of support for ocamlfind, GODI, and
> > many libraries around for Windows.  Also, ocamlbuild does not play very
> > nicely with Windows. A related point: the assumption is generally made
> > that OCaml developpers under Windows need to have a running Cygwin
> > installation. This is a huge barrier to entry. It would take some time
> > to address this, but there is really no reason why ocamlbuild, for
> > instance, should rely on an external Unix-like shell
> > (I believe the only reason today is to rely on bash for quoting
> > arguments!).  And it is not difficult to adapt the build system for most
> > libraries to avoid any dependency on Unix-like tools (using either
> > ocamlbuild or omake). It just takes time to do so (and to maintain the
> > result).
> 
> Last time I had to setup an ocaml install of windows, I pondered trying to
> remove the dependency on bash or at least make it sh. I think that apart
> from that, it was possible to use ocamlbuild inside cmd.exe directly.
> 
> As for the build systems, I'd advise everyone to use OASIS instead of custom
> systems: it's not perfect on windows but for cairo2 and archimedes, I think
> I only had to change paths from backward-slashes to forward-slashes in
> setup.data (or the other way round) (took 15 seconds).
> 
> > For the native compiler, we need an external toolchain, but this is not
> > a huge issue.  With some little amount of work, one could support a
> > standalone msys/mingw (as opposed to mingw compilers packaged in
> > Cygwin), and it would be interesting to come up with a minimal mingw
> > distribution (only with a C compiler, assembler, etc, as required by
> > ocamlopt) that could be packaged together with OCaml. On the MSVC side,
> > everything needed for the MSVC port (C compiler, linker, assembler,
> > supporting headers and libraries) is found in a single free download
> > from Microsoft.
> 
> I've never really liked bundles or SDKs. They tend to be big, incompatible
> with others and almost impossible to upgrade.
> That's the reason I've started yypkg and while it has been mostly dormant
> for almost a year, I will be able to spend a notable amount of time on it
> and on the packages for it in a few weeks.
> 
> That reminds me that the mingw-w64 team has created a tool named "gendef" to
> enable the use of gcc-compiled libraries with msvc.
> 
> > I can also mention that with some work, one could come up with a
> > standalone version of ocamlopt that does not require any external tool
> > to produce .cmxs plugins  (we have done that at LexiFi, by replacing the
> > assembler code emitter with a direct binary code generator; and by
> > extending flexdll to produce dlls without an external linker).  Getting
> > rid of the external toolchain to produce standalone programs is more
> > difficult: to create the .exe, one needs some libraries and object
> > files; a solution could be to do the same as for bytecode, that is,
> > having a generic driver which loads user code concatenated to it. But
> > being able to generate .cmxs without any external tool already make it
> > possible to distribute OCaml native applications (packaged with
> > ocamlopt) that the users can extend with OCaml plugins.
> 
> I don't think it would be possible to live without a C toolchain simply
> because we use C libraries all the time. It would be useful it it were
> easier than getting C libraries but a tool like yypkg (or anything else)
> is a closer goal with broader benefits.
> 
> I'm quite interested in the ability to create .cmxs files without a C
> compiler and can already picture me using it. I've also noticed Benedikt's
> ocamlnat work. Would it be usable to script native-code applications?
> Maybe with less requirements?
> 
> >  > I guess most
> >> of the work would be to move forward instead of being stuck in the
> >> current situation.
> >
> > Can you elaborate?  What are the most important issues in the current
> > situation?
> 
> I haven't been completely clear: I think the current situation is mostly
> fine but I fear that it doesn't evolve anymore and doesn't react to changes
> on windows or doesn't get some improvements that would be unixy-only.
> 
> Regards,
> Adrien Nader
> 


