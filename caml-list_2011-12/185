Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pBABZ8Vq013186
	for <caml-list@sympa-roc.inria.fr>; Sat, 10 Dec 2011 12:35:08 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhkBAJJD405UXeb0mWdsb2JhbABDhQeldSIBAQEBAQgLCwcUJYFyAQEEAQgCGVYFCAMCCRgCAiYCAhk+AgQeBYd4AqN+kSqBNIkjgRYEjHkpmXY
X-IronPort-AV: E=Sophos;i="4.71,331,1320620400"; 
   d="scan'208";a="122841721"
Received: from avasout03.plus.net ([84.93.230.244])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 10 Dec 2011 12:35:02 +0100
Received: from WinEight ([87.112.3.248])
	by avasout03 with smtp
	id 7Pb01i0015M3mNF01Pb1dD; Sat, 10 Dec 2011 11:35:01 +0000
X-CM-Score: 0.00
X-CNFS-Analysis: v=2.0 cv=DvLUCRD+ c=1 sm=1 a=GjnyKHSvfo4njrfFNrGbAg==:17
 a=TWHSnBdYtN4A:10 a=Xub9RBUEA-sA:10 a=IkcTkHD0fZMA:10
 a=ORzdK94V0tC3zvsiEikA:9 a=B0wZ3t3M8VPskdF7c-kA:7 a=QEXdDO2ut3YA:10
 a=GjnyKHSvfo4njrfFNrGbAg==:117
From: "Jon Harrop" <jon@ffconsultancy.com>
To: "=?utf-8?Q?'St=C3=A9phane_Glondu'?=" <steph@glondu.net>
Cc: <caml-list@inria.fr>, <caml@inria.fr>
References: <20111209065758.94306.qmail@eeoth.pair.com> <4EE1BE59.4020804@glondu.net>
In-Reply-To: <4EE1BE59.4020804@glondu.net>
Date: Sat, 10 Dec 2011 11:34:57 -0000
Message-ID: <019501ccb72f$bfb1fac0$3f15f040$@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="utf-8"
X-Mailer: Microsoft Outlook 14.0
Thread-Index: AQIw+NBbhAgKoNrvtF96AEheUupImgHtuEa+lPz/KAA=
Content-Language: en-gb
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id pBABZ8Vq013186
Subject: RE: [Caml-list] Why NOT to compile OCaml via C

StÃ©phane Glondu wrote:
> C sure is not a good target language, but assembly is not either.
> The assembly backends of ocamlopt (and GHC... there is no support at all on
> some Debian ports) look like a maintenance burden that their authors obviously
> cannot cope with. I find the idea of making ocamlopt a GCC (or
> LLVM) frontend the most sensible and constructive one I've seen in these
> discussions.

Perhaps because OCaml already has an efficient cross-platform bytecode interpreter.

> However, one barrier is the licensing: QPL is incompatible with almost any
> license (even QT does no longer use it!). Has it ever been considered to switch
> the "public" license to e.g. GPLv3 (which looks constraining enough, and
> compatible with GCC)?

Don't forget the CAML Consortium are selling OCaml under less restrictive licences.

Cheers,
Jon.



