Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pBCCw2LJ028505
	for <caml-list@sympa-roc.inria.fr>; Mon, 12 Dec 2011 13:58:02 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApEBAEj55U7U4366kWdsb2JhbAA5CppIkDUiAQEBAQkLCwcUAyKBcgEBBAFrAwsFCwUGGA0hRRIGEwkIAQIKh2oCBrQog3iEPIM5BIx5ExUBmXc
X-IronPort-AV: E=Sophos;i="4.71,338,1320620400"; 
   d="scan'208";a="123018801"
Received: from moutng.kundenserver.de ([212.227.126.186])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 12 Dec 2011 13:57:56 +0100
Received: from office1.lan.sumadev.de (dslb-084-059-073-218.pools.arcor-ip.net [84.59.73.218])
	by mrelayeu.kundenserver.de (node=mreu3) with ESMTP (Nemesis)
	id 0MdjtQ-1RNtgk49Do-00Ph9K; Mon, 12 Dec 2011 13:57:55 +0100
Received: from gps.dynxs.de (localhost [127.0.0.1])
	by office1.lan.sumadev.de (Postfix) with ESMTP id 421DBC00C7;
	Mon, 12 Dec 2011 13:57:54 +0100 (CET)
Received: from 84.233.128.147
        (SquirrelMail authenticated user gerd)
        by gps.dynxs.de with HTTP;
        Mon, 12 Dec 2011 13:57:54 +0100
Message-ID: <82a7826f381811151a663d034e2c5df0.squirrel@gps.dynxs.de>
In-Reply-To: <BE8D4F57-3467-48D9-A0E3-34E8F0F3C7FA@googlemail.com>
References: <55531934-37A5-4CC5-AB67-20CE4CCE8269@googlemail.com>
    <4EE37070.4010702@inria.fr>
    <E0A4049F-718C-483E-A05D-82E41A177D17@googlemail.com>
    <4EE5D593.9060708@inria.fr>
    <BE8D4F57-3467-48D9-A0E3-34E8F0F3C7FA@googlemail.com>
Date: Mon, 12 Dec 2011 13:57:54 +0100
From: "Gerd Stolpmann" <info@gerd-stolpmann.de>
To: "Benedikt Meurer" <benedikt.meurer@googlemail.com>
Cc: "Xavier Leroy" <xavier.leroy@inria.fr>, "caml users" <caml-list@inria.fr>
User-Agent: SquirrelMail/1.4.21
MIME-Version: 1.0
Content-Type: text/plain;charset=iso-8859-1
X-Priority: 3 (Normal)
Importance: Normal
X-Provags-ID: V02:K0:PKoC2LMZAFmKJm0i1c16k6gb1qqyb33mEgVQHmHDk/P
 CXaWArEttI/aMBa23ygnBmphWjM9+T39jbaPotIEArZUGEVz80
 8VmRfUakCSGo1Hp84wER91vyZSxEJdBmaoWcRUYv7XeD99ifXS
 847xn2AipBREkGX/2PEHkhGaFIS4llRE4z0acv83DO9vSn9cGX
 gelwdbxD4VJ22c2SVD8TY8fVyG4wWdOP+kZ7vZ2m4ITOfHV61m
 DByiW22FGhyNlfSPBDBfplb7t/cprzgQeE/KCSbkiyD9tadaju
 EwFq5UnqEYEKg6xWRGGkgq4019AOsvztQwSrJGC5Q6PRtGQcbh
 XyW7rSh08tgjzHnFm1LpDNGj0pRGfvVjxXHelcqb2Z6g4gwywg
 p32aj8U/PKUMQ==
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id pBCCw2LJ028505
Subject: Re: [Caml-list] OCaml maintenance status / community fork (again)


>
> On Dec 12, 2011, at 11:21 , Xavier Leroy wrote:
>
>> - It complicates the lives of OCaml users, packagers, and 3rd-party
>>  library developers: what version should they use?  what will be the
>>  basis for the packagers's distribution-specific patches?  what
>>  happens if a library is compatible with one version but not the
>>  other?  what if the community effort runs out of steam in a few years?
>
> If we can adopt the eglibc model, then the community thing will be the
> version shipped by distributions, i.e. the community thing is the OCaml
> for distributions/packagers, not an alternative to the official version.
> That way we do no longer need to maintain specific patches / versions for
> Debian, Red Hat, MacPorts, etc. This ensures that versions are compatible
> across different distributions (because they do no longer need to maintain
> their own set of patches).

Most distribution patches are really distribution-specific. I don't think
that there will be any savings.

IMHO, you have to convince the distributions whether they want to ship a
community version of ocaml or keep the original version.

> I think of the community thing as:
>
> (a) A single place for patches, while waiting for the next official OCaml
> release.

IF the community version is just a place for testing new patches this
would be for sure a good thing. The ocaml distributions could ship this in
special "testing" repositories. This way the patches would see broader
testing before the inclusion into the core repo. There would be certainly
some users who are willing to accept the additional risks of using a
testing distro.

IF this is just meant for smuggling in patches the core team does not
like, I don't see the value of it. The community should not work against
them.

> (b) A common ground for experimenting with new features. As you already
> noted, feedback and adoption for experimental stuff hidden within the SVN
> repository wasn't all that great, so maybe we can change it this way (esp.
> since it would be coordinated with the distributions/packagers to some
> degree).

I think the problem is that you can only easily build core ocaml this way,
but you normally need more packages for testing (e.g. run your program).
GODI has support for building ocaml from any SVN branch, but there is
close to zero documentation how this works.

>> - It means additional efforts with some duplication.  The
>>  synchronization between the "community" and the "reference" code
>>  bases will take work.  From the core team's standpoint, that's about
>>  as much work as dealing with individual suggestions and
>>  contributions.  At the same time, the community team will spend
>>  non-negligible time organizing and administering itself, at least
>>  initially.

Xavier, I would not see this as negatively (but I am also not fully
convinced). If the community makes good suggestions, it could save a lot
of development work. Granted, the time needed for communication will be
higher - e.g. for setting quality standards, for explaining future
directions etc, but in total this could nevertheless be a win. The biggest
plus could be to attract new members for the core team, and to generally
increase the expertise about ocaml internals in the community.

Of course, if the community does not care about quality etc., and just
includes everything, there is no win.

Gerd

> The community team (namely the packagers in this case) already spend this
> time, as already noted by others (i.e. Stephane). And even if that's the
> same effort for the core team (I doubt that, since if nothing else, you'll
> at least have a single tested patch set to review, instead of a bunch of
> independent, incompatible, and probably untested patches), then there's at
> least the win for the community.
>
> I shouldn't have used the term "fork" initially, this is misleading. Don't
> get me wrong. Don't think of my proposal as a "OpenBSD vs. NetBSD" thing
> with a whole new project.
>
>>> Why not accept a model similar to i.e. the NetBSD project, with a
>>> lot of committers (experts in their own areas) and 2-3 people to
>>> keep an eye on the overall direction?
>>
>> Except for the "lot of committers" part, this is pretty much how the
>> core Caml team has been working, and there is definitely room for more
>> contributors.  As I mentioned earlier, there are a number of areas
>> where we're lacking manpower, e.g. Windows-related stuff and tools
>> such as the debugger or Camlp4, but many other areas of the system
>> would benefit from more contributors too.  Smaller contributions
>> are most welcome as well, such as commenting on the PRs, testing
>> changes, new features and release candidates, PR triaging, helping to
>> identify the top little things to be resolved by the next release,
>> etc.
>>
>> That's a much more low-key approach, but one that is more likely to
>> succeed.  Volunteers are welcome to contact us as caml@inria.fr.
>
> I can help with the low-level compiler and runtime stuff, others have
> already expressed their intention to help with Camlp4, etc. You'll receive
> an email.
>
>> - Xavier Leroy
>
>
> Benedikt
>
>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/wws/info/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>
>


-- 
Gerd Stolpmann, Darmstadt, Germany    gerd@gerd-stolpmann.de
Creator of GODI and camlcity.org.
Contact details:        http://www.camlcity.org/contact.html
Company homepage:       http://www.gerd-stolpmann.de
*** Searching for new projects! Need consulting for system
*** programming in Ocaml? Gerd Stolpmann can help you.


