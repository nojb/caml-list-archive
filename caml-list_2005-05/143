Return-Path: <jon@ffconsultancy.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 376ADBCAC
	for <caml-list@yquem.inria.fr>; Tue, 24 May 2005 19:33:11 +0200 (CEST)
Received: from pih-relay04.plus.net (pih-relay04.plus.net [212.159.14.131])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j4OHXAJO024898
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 24 May 2005 19:33:11 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by pih-relay04.plus.net with esmtp (Exim) id 1DadHA-0004RJ-55
	for caml-list@yquem.inria.fr; Tue, 24 May 2005 18:33:08 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] JIT ?
Date: Tue, 24 May 2005 18:32:31 +0100
User-Agent: KMail/1.7.2
References: <20050524141102.GA32331@furbychan.cocan.org> <20050524131153.P45033@bowser.eecs.harvard.edu>
In-Reply-To: <20050524131153.P45033@bowser.eecs.harvard.edu>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200505241832.31486.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 42936556.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocamlrun:01 bytecode:01 compilation:01 ocamlopt:01 ocamlc:01 ocamlopt:01 ocaml:01 bytecode:01 ocamlc:01 basile:01 compiler:01 ocaml:01 frog:98 wrote:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Tuesday 24 May 2005 18:13, Christopher Alexander Stein wrote:
> Can the ocamlrun bytecode interpreter do just-in-time compilation
> or is ocamlopt the way to go for performance instead of ocamlc?

ocamlopt is the way to go for performance.

ocaml JIT compiles to bytecode which is then interpreted. ocamlc compiled to 
bytecode which is interpreted. ocamlopt compiles straight to native code and 
typically produces programs which are several times faster.

Basile Starynkevitch wrote a real JIT compiler for OCaml (compiling to native 
code on-the-fly) called ocamljit:

  http://cristal.inria.fr/~starynke/ocamljit.html

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

