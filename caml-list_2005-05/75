Return-Path: <jon@ffconsultancy.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id B85BBBCAB
	for <caml-list@yquem.inria.fr>; Sat, 14 May 2005 15:29:24 +0200 (CEST)
Received: from pih-relay06.plus.net (pih-relay06.plus.net [212.159.14.133])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j4EDTOHu012066
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Sat, 14 May 2005 15:29:24 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by pih-relay06.plus.net with esmtp (Exim) id 1DWwhn-0000Uw-PZ
	for caml-list@yquem.inria.fr; Sat, 14 May 2005 14:29:23 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list <caml-list@yquem.inria.fr>
Subject: Re: [Caml-list] AMD64 segfault
Date: Sat, 14 May 2005 14:29:05 +0100
User-Agent: KMail/1.7.1
References: <1115937349.17251.8.camel@pelican.wigram> <200505130233.27713.jon@ffconsultancy.com> <1116044057.17482.1010.camel@pelican.wigram>
In-Reply-To: <1116044057.17482.1010.camel@pelican.wigram>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200505141429.06249.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 4285FD34.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 segfault:01 stack:01 segfault:01 stack:01 segfaults:01 ocamlopt:01 ocaml:01 frog:98 wrote:01 wrote:01 overflows:01 floats:01 data:02 caml:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Saturday 14 May 2005 05:14, skaller wrote:
> On Fri, 2005-05-13 at 11:33, Jon Harrop wrote:
> > Yes, the stack overflows much more quickly on AMD64 for me (pure64 Debian
> > vs stock x86 Debian) and also causes a segfault instead of throwing
> > Stack_overflow. I've no idea why.
>
> Addresses are 64 bits instead of 32.

That doesn't explain why it segfaults rather than throwing Stack_overflow.

Also, does ocamlopt put non-address data on the stack (e.g. floats)?

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

