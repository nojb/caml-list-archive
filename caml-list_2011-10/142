Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p9QKN6Ft003285
	for <caml-list@sympa-roc.inria.fr>; Wed, 26 Oct 2011 22:23:06 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AngBAJFrqE7RVdK2mGdsb2JhbABCDqk4CCIBAQEBAQgJDQcUJYFuAQEBBBICLAEbHQEDDAYFCwMKLiIBEQEFARwGEyKHZpd3CotQgmCFRD2IcAIFCohgBJQKjTM9gzg4
X-IronPort-AV: E=Sophos;i="4.69,411,1315173600"; 
   d="scan'208";a="126245594"
Received: from mail-iy0-f182.google.com ([209.85.210.182])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 26 Oct 2011 22:23:00 +0200
Received: by iaky10 with SMTP id y10so4095523iak.27
        for <caml-list@inria.fr>; Wed, 26 Oct 2011 13:22:59 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=n+j22mxGY16Nqpotkjy47mBj/MvsTCMzhY5W0COVwKA=;
        b=Y6xWfIWCL+mtQaNkDev5lk6qWjuQjyX7FzUBv/TYb819Au3AGWziAR15cnIJfW1331
         R0tV7F0TNrey+IT20EWm+BcpDR9dxLXfv11ffYavl62J6PPtbhSB2RiGceEpR9rkW8ca
         CTyIWyxGCImSym5kz3QRnTG9B/vsH5SRfCk+E=
MIME-Version: 1.0
Received: by 10.231.42.74 with SMTP id r10mr2428154ibe.72.1319660579582; Wed,
 26 Oct 2011 13:22:59 -0700 (PDT)
Received: by 10.231.12.5 with HTTP; Wed, 26 Oct 2011 13:22:59 -0700 (PDT)
In-Reply-To: <201110262007.p9QK7CMd028545@outgoing.mit.edu>
References: <201110262007.p9QK7CMd028545@outgoing.mit.edu>
Date: Wed, 26 Oct 2011 21:22:59 +0100
Message-ID: <CAAxsn=H0dT7fEAgi5cKjx9oXZbKAZmFeM2ApSE2vsQq9y+9Hdg@mail.gmail.com>
From: Jeremy Yallop <yallop@gmail.com>
To: John Carr <jfc@mit.edu>
Cc: caml-list@inria.fr
Content-Type: text/plain; charset=ISO-8859-1
Subject: Re: [Caml-list] Defeating the value restriction

On 26 October 2011 21:07, John Carr <jfc@mit.edu> wrote:
> Can I rewrite this function to have the type I requested
> instead of failing type checking?

Yes: see "How to write a function with polymorphic arguments?" in the Caml FAQ:

http://caml.inria.fr/resources/doc/faq/core.en.html#polymorphic-arguments
