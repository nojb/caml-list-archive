Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p9QBJ92t016433
	for <caml-list@sympa-roc.inria.fr>; Wed, 26 Oct 2011 13:19:09 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgEHAO/rp07V+6tl/2dsb2JhbABCmjqOf4EFgW4BAQQBOkQLC0YUKIg0ArRhiAlhBKVr
X-IronPort-AV: E=Sophos;i="4.69,408,1315173600"; 
   d="scan'208";a="126073188"
Received: from eneide.happyleptic.org ([213.251.171.101])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/AES256-SHA; 26 Oct 2011 13:19:03 +0200
Received: from extranet.securactive.org ([82.234.213.170] helo=ccellier.rd.securactive.lan)
	by eneide.happyleptic.org with esmtp (Exim 4.72)
	(envelope-from <rixed@happyleptic.org>)
	id 1RJ1ZX-00040Q-RJ
	for caml-list@inria.fr; Wed, 26 Oct 2011 13:23:03 +0200
Received: from rixed by ccellier.rd.securactive.lan with local (Exim 4.72)
	(envelope-from <rixed@happyleptic.org>)
	id 1RJ1Va-0005gu-5w
	for caml-list@inria.fr; Wed, 26 Oct 2011 13:18:58 +0200
Date: Wed, 26 Oct 2011 13:18:58 +0200
From: rixed@happyleptic.org
To: caml-list@inria.fr
Message-ID: <20111026111858.GA21504@ccellier.rd.securactive.lan>
References: <CADKNfhLnqCKHsb1PbKfxWKjNw4v00bFJrGrm0WkU1aDhA107eA@mail.gmail.com>
 <1319614400.18639.148.camel@thinkpad>
 <CADKNfhLVRw8=+F07dj7HwJtfTr6JK9w7epoq=mZ5UubJ1LJ5Ug@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CADKNfhLVRw8=+F07dj7HwJtfTr6JK9w7epoq=mZ5UubJ1LJ5Ug@mail.gmail.com>
User-Agent: Mutt/1.5.20 (2009-06-14)
Subject: Re: [Caml-list] [ANN] Async, a monadic concurrency library

> As an aside, we use lots of OCaml libraries developed outside our walls:
> RES, PCRE, Lacaml, Postgres bindings and OUnit and xml-light, to name some
> off the top of my head.

What if someday you want to use an external library that uses lwt ?
Will it be possible to mix the two ?
Since this kind of monadic library can easily impose its behavior on all
other library around (if for nothing else than the exception mechanism
to use), I have the feeling that for us mere users choosing between lwt
and async is to choose between two large sets of incompatible libraries,
am I wrong ?

