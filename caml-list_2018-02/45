Return-Path: <tim@ryanleonard.us>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id B97618239C
	for <caml-list@sympa.inria.fr>; Wed, 14 Feb 2018 05:32:51 +0100 (CET)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=tim@ryanleonard.us; spf=None smtp.mailfrom=tim@ryanleonard.us; spf=None smtp.helo=postmaster@mail-yw0-f172.google.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  tim@ryanleonard.us) identity=pra; client-ip=209.85.161.172;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="tim@ryanleonard.us";
  x-sender="tim@ryanleonard.us"; x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  tim@ryanleonard.us) identity=mailfrom;
  client-ip=209.85.161.172;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="tim@ryanleonard.us";
  x-sender="tim@ryanleonard.us"; x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-yw0-f172.google.com) identity=helo;
  client-ip=209.85.161.172;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="tim@ryanleonard.us";
  x-sender="postmaster@mail-yw0-f172.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3A1tUOVBBi8U7264EDINnxUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPv8r8bcNUDSrc9gkEXOFd2Cra4c0qyO6+jJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglUmTaxe69+IAmrpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Qiqp4bt1RxD0iS?=
 =?us-ascii?q?cHLz85/3/Risxsl6JQvRatqwViz4LIfI2ZMfxzdb7fc9wHX2pMRt1RWSxCDIyg?=
 =?us-ascii?q?YIQBAfcPMuRGoYnzoFUDtgGxCRWpBO71yj9Emn370Ksn2OohCwHG2wkgEsoQvn?=
 =?us-ascii?q?TVqdX+KaEcXv6yzKnO1zrDde5Z0ir65YbWcxAhpOqBU6xxccrUz0cgCQTFjlOK?=
 =?us-ascii?q?poz/IjyZzPkNs3OC4udmSOmhiHYnphlvrjSzwsogkIrEi4IPxlzZ9Ch13Zw5Kc?=
 =?us-ascii?q?C6RUJledKpEptduzuHO4Z4Tc4uWXxktSggxrEYpZK2ejUBxo49yB7FcfOHdpCF?=
 =?us-ascii?q?4hL9W+aVJjd1nHdld6i+hxa26EShyuP9WtWt3FZEsyZIkMfAumoC1xzU7ciHRf?=
 =?us-ascii?q?998Vm71TmT0ADT7/lIIUEylaXFN54s2qA8moYXvEjZHSL7mF/6gLKXe0k54OSk?=
 =?us-ascii?q?9ubqbqv+qp+ZLYB0iwX+Mqo0msy4BOQ1KhQOX2me+emnzr3i/Vf2QLNOjvIola?=
 =?us-ascii?q?nZtorVJd4GqaKjHg9VyZ4v6wyjADe+zNQYgX4HIUpZdx2diojpP0jCIPT5Dfek?=
 =?us-ascii?q?n1ShiyxrxvDDPr35GJrBNHnDkLH7fbZ88UFQ0gQzzcoMr65TX5YKKff3Emr4td?=
 =?us-ascii?q?jZCBBxFw2v366zA9x40sYaWHmTKq6fKqLb91GSsLEBOe6JMbMUvX7ZJv8j7uTi?=
 =?us-ascii?q?xSsFmFo1Qais+ZYQbnmiErJ7OBPKMjLXnt4dHDJS7UIFR+vwhQjHCGYLPifgb+?=
 =?us-ascii?q?cH/jg+TbmeI8LGT4GpjqaG2X7lTIdHb2ZCB1eKGG3kMZifCa9VNHCiZ/R5mzlB?=
 =?us-ascii?q?boCPDpc73Ejw5hXrwrxjI+3S8zcU84/4hoAsur/j0Coq/DkxNPyzlmGAS2YuwD?=
 =?us-ascii?q?ENTj4ymbFg+QlzkwjZl6d/hPNcGJpY4PYbCgo=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DNAgCMu4NahqyhVdFcHAEBAQQBAQoBA?=
 =?us-ascii?q?YQogSiDZZhKggKBF4d/iGeHFANmiCUZBgU0FAECAQEBAQEBAQEBEgEBAQgLCwg?=
 =?us-ascii?q?oL4I4JAGCRgEBBAEjBBkBATgECwEKBBQnAwICIRMBBQELEQYTih0DDQijRECLK?=
 =?us-ascii?q?W6BbTqDCwEBBYFvgkENgTKCEwwBHQgJAQiEb4IVVIMUgwWCa4VOMYI0k2iQFjU?=
 =?us-ascii?q?JgUaPNJE1EYgIjkqGAYMgAgQCBAUCBhQlgRc2R4ErTTVAKgGCGz+CB4JPWgGOB?=
 =?us-ascii?q?QEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DNAgCMu4NahqyhVdFcHAEBAQQBAQoBAYQogSiDZZhKggK?=
 =?us-ascii?q?BF4d/iGeHFANmiCUZBgU0FAECAQEBAQEBAQEBEgEBAQgLCwgoL4I4JAGCRgEBB?=
 =?us-ascii?q?AEjBBkBATgECwEKBBQnAwICIRMBBQELEQYTih0DDQijRECLKW6BbTqDCwEBBYF?=
 =?us-ascii?q?vgkENgTKCEwwBHQgJAQiEb4IVVIMUgwWCa4VOMYI0k2iQFjUJgUaPNJE1EYgIj?=
 =?us-ascii?q?kqGAYMgAgQCBAUCBhQlgRc2R4ErTTVAKgGCGz+CB4JPWgGOBQEBAQ?=
X-IronPort-AV: E=Sophos;i="5.46,510,1511823600"; 
   d="scan'208,217";a="313458776"
Received: from mail-yw0-f172.google.com ([209.85.161.172])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 14 Feb 2018 05:32:47 +0100
Received: by mail-yw0-f172.google.com with SMTP id v139so13934294ywg.4
        for <caml-list@inria.fr>; Tue, 13 Feb 2018 20:32:47 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=ryanleonard-us.20150623.gappssmtp.com; s=20150623;
        h=sender:from:message-id:mime-version:date:subject:in-reply-to:to
         :references;
        bh=X/fx1B5b4xoAlRzG+yDoimkzs3Xq1UPrHcWwGl5Pp5o=;
        b=tStyAAtyuYdw+aOZY6MIMRAciu5ecOQmU/GNSan10xXW20AdbWK8LOH8CeZ3X+qpGE
         cBHYcpuKd6/3fBJOrhUyEcw9j5rQxhlyXjB98p66LBq7EfUc6zVCB3yK3JYfwGLSH62P
         KWtdPtt3tfaw7H0AmXLpoopAszbCb5MjU10uj7EqU8s453W9dT4Dviz5UCWMOtf6T+iL
         Ti5Yi84sXry0ZWUWxz7Rn3brQ9p3zyprHlB11Y2djQj9vrAOTPxIcZqyXQOp1xI/dzsw
         yuzK9B/2jFY2+jn3TWeFVsslMPU2E0dqbbkLuG6WnsW6LYAhcgb7s4k+H5AnP7aYQZE0
         sMLg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:sender:from:message-id:mime-version:date:subject
         :in-reply-to:to:references;
        bh=X/fx1B5b4xoAlRzG+yDoimkzs3Xq1UPrHcWwGl5Pp5o=;
        b=e8+9ye1M0m7mGRK3cXW6EK3JxIhBmbcZppJoPNXienlGB2n9XhOBl9kymrPjgpJA92
         YssL8whtCLHZqKiWl2zObooGpquhVu5mRKSVVxFc1FJVSyF9F5Cm8oi8OKAMwVJ4kJzG
         jdkuImBayYxtDUWNFxs+Z2odCa0lcERYn+VrhumP2XjPfVApIFOwW/iEuPtZ9J/M9KNF
         imVK0NBtxIIP1sW6WP5abeth8da5LNBkFiXHSn4uv8XOqCqBzZRx4MXAgQibGxSXIMIy
         2sUQv6sx2HI+0hRsR2IDsqTle09YIbkua3aksEQTa/J2mkIRdPeo23u+Ip0vrEQpIn5O
         Yo0g==
X-Gm-Message-State: APf1xPDjCPO9DctzXNIaVmrbnbeh0ZATS8Kzv1kYdgfQzevFpvfirbIx
	UJrhuvBE0ULlIkf+PkL7j+7qyr9Mwbg=
X-Google-Smtp-Source: AH8x227MXBnxCNMXGzUZUkE3CK3PJEvwkmdy+qpgO4xbcR5pq4IbTrBoDQsUpRhrqzGfBEUALya9ow==
X-Received: by 10.37.155.7 with SMTP id y7mr2422233ybn.518.1518582765672;
        Tue, 13 Feb 2018 20:32:45 -0800 (PST)
Received: from [10.0.1.3] ([75.134.13.20])
        by smtp.gmail.com with ESMTPSA id o3sm4809711ywf.60.2018.02.13.20.32.44
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Tue, 13 Feb 2018 20:32:44 -0800 (PST)
Sender: Tim Leonard <tim@ryanleonard.us>
From: Tim Leonard <Tim@TimLeonard.us>
Message-Id: <541FB585-B037-4BDF-AC9F-30E47EA1D181@TimLeonard.us>
Content-Type: multipart/alternative;
	boundary="Apple-Mail=_54CB7518-00C0-4B20-B54C-DEEF5730F13A"
Mime-Version: 1.0 (Mac OS X Mail 11.2 \(3445.5.20\))
Date: Tue, 13 Feb 2018 23:32:43 -0500
In-Reply-To: <CAJbYVJK3JdFEeq63s65viKes8c5PvLnjMpdWrD8eFXWAMyPq-g@mail.gmail.com>
To: Ocaml Mailing List <caml-list@inria.fr>
References: <21BC6EDE-DB27-460B-A4D5-BBD583C9E899@TimLeonard.us>
 <CAJbYVJK3JdFEeq63s65viKes8c5PvLnjMpdWrD8eFXWAMyPq-g@mail.gmail.com>
X-Mailer: Apple Mail (2.3445.5.20)
Subject: Re: [Caml-list] a question about syntax


--Apple-Mail=_54CB7518-00C0-4B20-B54C-DEEF5730F13A
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=utf-8

Thank you, Yawar. I=E2=80=99m familiar with using semicolon for sequencing,=
 but it hadn=E2=80=99t occurred to me that it might be interpreted that way=
 here, and that explains the failure perfectly.

Tim

> On Feb 13, 2018, at 11:12 PM, Yawar Amin <yawar.amin@gmail.com> wrote:
>=20
> Hi,
>=20
> On Tue, Feb 13, 2018 at 10:31 PM, Tim Leonard <Tim@timleonard.us <mailto:=
Tim@timleonard.us>> wrote:
> [...]
> type my_record =3D { field1 : bool; field2 : int };;
>=20
> let f x =3D { field1 =3D   match x with _ -> true  ; field2 =3D 2 };; (* =
this fails *)
>=20
> This fails because OCaml overloads ';' in a few different ways, significa=
ntly: (1) as a field separator in a record, and (2) as a sequencing operato=
r between two expressions. In case of ambiguity OCaml parses as the latter,=
 but you really meant the former.
>=20
> (2) 'sequencing operator' means that something like:
>=20
> let x =3D print_endline "Hi!"; 1
>=20
> ... will evaluate whatever is on the left of the ';', throw away its valu=
e (in this case 'unit'), then evaluate whatever is on the right of the ';' =
and return its value as the final value of the compound expression.
>=20
> Regards,
>=20
> Yawar


--Apple-Mail=_54CB7518-00C0-4B20-B54C-DEEF5730F13A
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=utf-8

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3Dutf-8"></head><body style=3D"word-wrap: break-word; -webkit-nbsp-mode: s=
pace; line-break: after-white-space;" class=3D"">Thank you, Yawar. I=E2=80=
=99m familiar with using semicolon for sequencing, but it hadn=E2=80=99t oc=
curred to me that it might be interpreted that way here, and that explains =
the failure perfectly.<div class=3D""><br class=3D""></div><div class=3D"">=
Tim<br class=3D""><div><br class=3D""><blockquote type=3D"cite" class=3D"">=
<div class=3D"">On Feb 13, 2018, at 11:12 PM, Yawar Amin &lt;<a href=3D"mai=
lto:yawar.amin@gmail.com" class=3D"">yawar.amin@gmail.com</a>&gt; wrote:</d=
iv><br class=3D"Apple-interchange-newline"><div class=3D""><div dir=3D"ltr"=
 class=3D"">Hi,<br class=3D""><div class=3D""><div class=3D"gmail_extra"><b=
r class=3D""><div class=3D"gmail_quote">On Tue, Feb 13, 2018 at 10:31 PM, T=
im Leonard <span dir=3D"ltr" class=3D"">&lt;<a href=3D"mailto:Tim@timleonar=
d.us" target=3D"_blank" class=3D"">Tim@timleonard.us</a>&gt;</span> wrote:<=
br class=3D""><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;=
border-left:1px #ccc solid;padding-left:1ex">[...]<br class=3D"">
type my_record =3D { field1 : bool; field2 : int };;<br class=3D"">
<br class=3D"">
let f x =3D { field1 =3D&nbsp; &nbsp;match x with _ -&gt; true&nbsp; ; fiel=
d2 =3D 2 };; (* this fails *)<br class=3D""></blockquote><div class=3D""><b=
r class=3D""></div><div class=3D"">This fails because OCaml overloads ';' i=
n a few different ways, significantly: (1) as a field separator in a record=
, and (2) as a sequencing operator between two expressions. In case of ambi=
guity OCaml parses as the latter, but you really meant the former.<br class=
=3D""><br class=3D""></div><div class=3D"">(2) 'sequencing operator' means =
that something like:<br class=3D""><br class=3D""></div><div class=3D""><sp=
an style=3D"font-family:monospace,monospace" class=3D"">let x =3D print_end=
line "Hi!"; 1</span><br class=3D""><br class=3D""></div><div class=3D"">...=
 will evaluate whatever is on the left of the ';', throw away its value (in=
 this case 'unit'), then evaluate whatever is on the right of the ';' and r=
eturn <i class=3D"">its</i> value as the final value of the compound expres=
sion.<br class=3D""><br class=3D""></div><div class=3D"">Regards,<br class=
=3D""><br class=3D""></div><div class=3D"">Yawar<br class=3D""></div></div>=
</div></div></div>
</div></blockquote></div><br class=3D""></div></body></html>=

--Apple-Mail=_54CB7518-00C0-4B20-B54C-DEEF5730F13A--
