Return-Path: <alain.frisch@lexifi.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 7A4DA7EEB9
	for <caml-list@sympa.inria.fr>; Mon, 26 Oct 2015 10:41:08 +0100 (CET)
IronPort-PHdr: 9a23:OWZGLRNUPijWzOcV3vEl6mtUPXoX/o7sNwtQ0KIMzox0Kfv+rarrMEGX3/hxlliBBdydsKIZzbOP+Pi+EUU7or+/81k6OKRWUBEEjchE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i760zceF13FOBZvIaytQ8iJ35nxjrn5o8ObSj4LrQT+SIs6FA+xowTVu5teqqpZAYF19CH0pGBVcf9d32JiKAHbtR/94sCt4MwrqHwI6LoJvvRNWqTifqk+UacQTHF/azh0t4XXskzvRBWO6jM1VmENlQJQS1zJ9hi/WJruqQP/u/Z0wzWTNs6wRrcxD3DqpZxsRRD0kiAfc3Yc8WrXg8F0xuoPpROqpxVyx8jPZ4yaKOB5Zovce88XQSxKWcMHE2QLCYq5a84LDvEdFedetYj04VUU51PqDgCpAKbryyRUrn7wx6wzleo7R1LoxgslSvsKuXXS5PvvNbwZUajhxa3BzDOFYelXwjz9wIzFYhEvoLeHWrcmIpmZ8lUmCw6Q1gbYkofiJT7Ak71V62U=
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=alain.frisch@lexifi.com; spf=None smtp.mailfrom=alain.frisch@lexifi.com; spf=None smtp.helo=postmaster@mx30.yaziba.net
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  alain.frisch@lexifi.com) identity=pra;
  client-ip=82.138.71.21;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="alain.frisch@lexifi.com";
  x-sender="alain.frisch@lexifi.com";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  alain.frisch@lexifi.com) identity=mailfrom;
  client-ip=82.138.71.21;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="alain.frisch@lexifi.com";
  x-sender="alain.frisch@lexifi.com";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mx30.yaziba.net) identity=helo;
  client-ip=82.138.71.21;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="alain.frisch@lexifi.com";
  x-sender="postmaster@mx30.yaziba.net";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0ClAAAX9C1WnBVHilJdw0WBWoNGglcCgSY6EgEBAQEBAQEBEAEBAQEBCAsJCSEugiuCCAEBBDhAEQsOCgkWBAsJAwIBAgE3AQ0GAQwIAQGIMMQjAQEIAQEBAR+Gd4R+hRSELgEEljaNIokZkxQCKAeCWx2BQIgJAQEB
X-IPAS-Result: A0ClAAAX9C1WnBVHilJdw0WBWoNGglcCgSY6EgEBAQEBAQEBEAEBAQEBCAsJCSEugiuCCAEBBDhAEQsOCgkWBAsJAwIBAgE3AQ0GAQwIAQGIMMQjAQEIAQEBAR+Gd4R+hRSELgEEljaNIokZkxQCKAeCWx2BQIgJAQEB
X-IronPort-AV: E=Sophos;i="5.20,200,1444687200"; 
   d="scan'208";a="184442677"
Received: from mx30.yaziba.net ([82.138.71.21])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/ADH-AES256-SHA; 26 Oct 2015 10:41:08 +0100
Received: from mta10.int.yaziba.net (unknown [217.117.151.14])
	by mx30.yaziba.net (mx10.yaziba.net) with ESMTP id 8FD2E1A7582;
	Mon, 26 Oct 2015 10:41:07 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by mta10.int.yaziba.net (Postfix) with ESMTP id B59CDCA683;
	Mon, 26 Oct 2015 10:41:07 +0100 (CET)
X-Virus-Scanned: amavisd-new at mta10.int.yaziba.net
Received: from mta10.int.yaziba.net ([127.0.0.1])
	by localhost (mta10.int.yaziba.net [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id jNdB7dQ-zBHN; Mon, 26 Oct 2015 10:41:07 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by mta10.int.yaziba.net (Postfix) with ESMTP id 910C71389C2;
	Mon, 26 Oct 2015 10:41:07 +0100 (CET)
X-Virus-Scanned: amavisd-new at mta10.int.yaziba.net
Received: from mta10.int.yaziba.net ([127.0.0.1])
	by localhost (mta10.int.yaziba.net [127.0.0.1]) (amavisd-new, port 10026)
	with ESMTP id FFuZ1tpNWbNd; Mon, 26 Oct 2015 10:41:07 +0100 (CET)
Received: from [10.0.210.125] (unknown [185.23.92.144])
	by mta10.int.yaziba.net (Postfix) with ESMTPSA id F15F4CA683;
	Mon, 26 Oct 2015 10:41:06 +0100 (CET)
To: David Allsopp <dra-news@metastack.com>,
 "Soegtrop, Michael" <michael.soegtrop@intel.com>,
 "caml-list@inria.fr" <caml-list@inria.fr>
References: <0F7D3B1B3C4B894D824F5B822E3E5A172CE331EE@IRSMSX102.ger.corp.intel.com>
 <562B75D7.1000900@frisch.fr>
 <E51C5B015DBD1348A1D85763337FB6D9E9FB7041@Remus.metastack.local>
From: Alain Frisch <alain.frisch@lexifi.com>
Message-ID: <562DF538.3040306@lexifi.com>
Date: Mon, 26 Oct 2015 10:41:12 +0100
User-Agent: Mozilla/5.0 (Windows NT 6.3; WOW64; rv:38.0) Gecko/20100101
 Thunderbird/38.3.0
MIME-Version: 1.0
In-Reply-To: <E51C5B015DBD1348A1D85763337FB6D9E9FB7041@Remus.metastack.local>
Content-Type: text/plain; charset=windows-1252; format=flowed
Content-Transfer-Encoding: 7bit
X-DRWEB-SCAN: ok
X-VRSPAM-SCORE: -100
X-VRSPAM-STATE: legit
X-VRSPAM-CAUSE: gggruggvucftvghtrhhoucdtuddrfeekhedruddugddthecutefuodetggdotefrucfrrhhofhhilhgvmecuggftfghnshhusghstghrihgsvgdpjgetkgfkueetnecuuegrihhlohhuthemuceftddtnecusecvtfgvtghiphhivghnthhsucdlqddutddtmdenucfjughrpefuvfhfhffkffgfgggjtgfgsehtjegrtddtfeehnecuhfhrohhmpeetlhgrihhnucfhrhhishgthhcuoegrlhgrihhnrdhfrhhishgthheslhgvgihifhhirdgtohhmqeenucfrrghrrghmpehmohguvgepshhmthhpohhuth
X-VRSPAM-EXTCAUSE: mhhouggvpehsmhhtphhouhht
Subject: Re: [Caml-list] flexdll circular dependency on ocamlc: Impossible
 to built ocaml for mingw without using some prebuilt binaries?

On 24/10/2015 14:51, David Allsopp wrote:
> Alain Frisch wrote:
>> On 24/10/2015 11:50, Soegtrop, Michael wrote:
>>> Also I wonder why flexdll/flexlink is required. The documentation of
>>> flexdll states:
>>>
>>> Windows DLL cannot refer to symbols defined in the main application or
>>> in previously loaded DLLs.
>>>
>>> In my experience this is not true. At least when using MSVC one can
>>> declare functions in the main executable as DLL-export. Then when
>>> linking the main executable an import library is created in the same
>>> way as when building a DLL by the linker. The DLL can then link to
>>> this import library and can access the functions  in the main
>> executable.
>>
>> Dynlink follows a different model: dynlinked units are not tied to a
>> specific main executable.  A myplugin.cmxs can be dynamically linked by
>> any application that provides the required interfaces.
>
> Wouldn't that still be true with the .def/.a approach, though?

I don't see how this would work without changing the compilation model.
Would you generate an import library for each .cmi file?

Also keep in mind that currently, dynlinked code can access directly 
data symbols from the main program (not just function calls that can 
more easily go through an import library).


Alain
