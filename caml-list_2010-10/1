Return-Path: <sylvain@le-gall.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id E3E1FBBAF
	for <caml-list@yquem.inria.fr>; Fri,  1 Oct 2010 00:09:56 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aj0CAFunpExQDPKEkWdsb2JhbACUKwEBgSOMeAEBAQEJCwoHEQMftWWRWYVEBI1G
X-IronPort-AV: E=Sophos;i="4.57,261,1283724000"; 
   d="scan'208";a="59610586"
Received: from smtp10.smtpout.orange.fr (HELO smtp.smtpout.orange.fr) ([80.12.242.132])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 01 Oct 2010 00:09:56 +0200
Received: from giga ([90.2.24.83])
	by mwinf5d19 with ME
	id DA9u1f0051na56a03A9uT3; Fri, 01 Oct 2010 00:09:55 +0200
Received: from yocto.gallu.homelinux.org ([192.168.2.2])
	by giga with smtp (Exim 4.69)
	(envelope-from <sylvain@le-gall.net>)
	id 1P1RK5-0003Ip-SE; Fri, 01 Oct 2010 00:09:54 +0200
Received: by yocto.gallu.homelinux.org (sSMTP sendmail emulation); Fri, 01 Oct 2010 00:09:53 +0200
Date: Fri, 01 Oct 2010 00:09:53 +0200
From: Sylvain Le Gall <sylvain@le-gall.net>
To: caml-list@inria.fr
Subject: [ANN] ocaml-expect v0.0.2: Expect-like framework
Message-Id: <E1P1RK5-0003Ip-SE@giga>
X-Spam: no; 0.00; le-gall:01 stderr:01 pcre:01 findlib:01 pcre:01 dynamically:01 define:02 expression:02 match:02 suffix:02 generated:05 timeout:05 manual:06 prefix:08 cgi:90 

This is a simple implementation of `expect` to help building unitary testing
of interactive program.

It helps to receive question and send answers from an interactive process.
You can match the question using a regular expression (Str). You can also
use a timeout to ensure that the process answer in time.

See the [Expect manual](http://expect.nist.gov/) for more information and
example.

Changes:
* Add a ~fmatch to expect, to dynamically define expect results
* Allow to pass environment and redirect stderr to spawn
* Add `Suffix/`Prefix/`Contains tests
* Separate Str, add Pcre, create findlib packages expect.str and 
  expect.pcre

Homepage:
http://forge.ocamlcore.org/projects/ocaml-expect/

Get source code:
$ darcs get http://darcs.ocamlcore.org/repos/ocaml-expect

Browse source code:
http://darcs.ocamlcore.org/cgi-bin/darcsweb.cgi?r=ocaml-expect;a=summary


[Generated by 'OASIS announce']

