Return-Path: <rich@annexia.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 2D89CBBAF
	for <caml-list@yquem.inria.fr>; Mon, 25 Oct 2010 09:49:59 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlQGAIbTxExQRFuwWWdsb2JhbAChXQsBFhUENrpBhUgE
X-IronPort-AV: E=Sophos;i="4.58,235,1286143200"; 
   d="scan'208";a="75976407"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 25 Oct 2010 09:49:58 +0200
Received: from rich by furbychan.cocan.org with local (Exim 4.63)
	(envelope-from <rich@annexia.org>)
	id 1PAHoY-0006kY-E0; Mon, 25 Oct 2010 08:49:54 +0100
Date: Mon, 25 Oct 2010 08:49:54 +0100
To: Markus Mottl <markus.mottl@gmail.com>
Cc: =?iso-8859-1?Q?J=E9r=E9mie?= Dimino <jeremie@dimino.org>,
	Jon Harrop <jon@ffconsultancy.com>, caml-list@yquem.inria.fr,
	Anil Madhavapeddy <anil@recoil.org>
Subject: Re: [Caml-list] Asynchronous IO programming in OCaml
Message-ID: <20101025074954.GA25619@annexia.org>
References: <044101cb7367$10f94b30$32ebe190$@com> <AANLkTikgf2qF4y=o+S8PYUxZoCrCG-TRcovUq8uB=y7k@mail.gmail.com> <A7C6ED92-10BA-444B-A381-FC6AB7666932@recoil.org> <20101024225037.GA8999@aurora> <AANLkTin-JsN0JgFYzZHNT1C_wmwXzCgfV-+8XeQqMk4O@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <AANLkTin-JsN0JgFYzZHNT1C_wmwXzCgfV-+8XeQqMk4O@mail.gmail.com>
User-Agent: Mutt/1.5.13 (2006-08-11)
From: Richard Jones <rich@annexia.org>
X-Spam: no; 0.00; ocaml:01 markus:01 mottl:01 descriptors:01 50,:98 wrote:01 wrote:01 caml-list:01 slightly:03 asynchronous:03 programming:03 experiments:03 benchmark:04 depends:04 probably:07 

On Sun, Oct 24, 2010 at 11:42:45PM -0400, Markus Mottl wrote:
> On Sun, Oct 24, 2010 at 18:50, Jérémie Dimino <jeremie@dimino.org> wrote:
> > I made an implementation of lwt using libev [1]. I tested it with
> > ocsigen and ab but the result was always a bit better with select than
> > with epoll. That is why i did not replace select by libev in the main
> > branch. In fact i never found the source of any benchmark comparing
> > select to epoll on the web.
> 
> The performance of select was also usually slightly better in my
> experiments than with epoll for at least a few tens of descriptors.
> It really depends on what your requirements are.  If you are facing
> hundreds or even thousands of connections, you'll probably want to
> consider epoll.  select does not scale well.

I think if you really had 10,000 clients per server you'd probably
want to consider your whole architecture.  Putting nginx or a very
cut-down Apache on the front and memcached between the webserver and
the database.

Rich.

-- 
Richard Jones
Red Hat

