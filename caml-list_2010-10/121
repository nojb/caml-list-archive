Return-Path: <ds.caml@sol42.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id DA4ACBBAF
	for <caml-list@yquem.inria.fr>; Mon, 25 Oct 2010 17:58:08 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AiEBAEJFxUzZdAAilGdsb2JhbACTao10FgEBAQkLCAkRAx+9KYVIBIpNgxw
X-IronPort-AV: E=Sophos;i="4.58,236,1286143200"; 
   d="scan'208";a="76202799"
Received: from correo2.acens.net ([217.116.0.34])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 25 Oct 2010 17:58:08 +0200
Received: (qmail 18721 invoked from network); 25 Oct 2010 15:58:07 -0000
Received: from unknown (HELO minimax.lan) (dsolaz.sistelcom.com@[89.131.196.58])
          (envelope-sender <ds.caml@sol42.com>)
          by correo2.acens.net (qmail-ldap-1.03) with SMTP
          for <caml-list@yquem.inria.fr>; 25 Oct 2010 15:58:07 -0000
Content-Type: text/plain; charset=iso-8859-1
Mime-Version: 1.0 (Apple Message framework v1081)
Subject: Re: [Caml-list] Asynchronous IO programming in OCaml
From: DS <ds.caml@sol42.com>
In-Reply-To: <20101025111022.GA32282@aurora>
Date: Mon, 25 Oct 2010 17:58:33 +0200
Content-Transfer-Encoding: quoted-printable
Message-Id: <8BDBF836-44C2-4CA1-BE2D-8D1D2656C2B1@sol42.com>
References: <044101cb7367$10f94b30$32ebe190$@com> <AANLkTikgf2qF4y=o+S8PYUxZoCrCG-TRcovUq8uB=y7k@mail.gmail.com> <A7C6ED92-10BA-444B-A381-FC6AB7666932@recoil.org> <20101024225037.GA8999@aurora> <87y69mk6jm.fsf@frosties.localdomain> <20101025111022.GA32282@aurora>
To: caml-list@yquem.inria.fr
X-Mailer: Apple Mail (2.1081)
X-Spam: no; 0.00; ocaml:01 afaik:01 iirc:01 ocaml:01 42.:98 10,:98 wrote:01 unix:01 caml-list:01 functions:01 caml:02 kernel:02 irix:02 module:03 module:03 

On 25 Oct 2010, at 13:10, J=E9r=E9mie Dimino wrote:
> AFAIK libaio is linux-specific

If we are talking about aio_read() and company, these functions are =
available on at least FreeBSD, Irix, Solaris and Mac OS X too.  I looked =
into this some years back and while I would say it is standard unix =
stuff, I do recall finding a few slight differences between platforms.  =
FreeBSD required loading a kernel module (aio.ko IIRC) to use this, and =
if it wasn't loaded the program would just die horribly.

It can be wrapped as an OCaml module, but expect to put many #ifdef's in =
your C code.

Regards.
-DS=

