Return-Path: <info@gerd-stolpmann.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 844D28240C
	for <caml-list@sympa.inria.fr>; Mon, 26 Mar 2018 14:04:03 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=info@gerd-stolpmann.de; spf=None smtp.mailfrom=info@gerd-stolpmann.de; spf=None smtp.helo=postmaster@mout.kundenserver.de
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  info@gerd-stolpmann.de) identity=pra;
  client-ip=217.72.192.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="info@gerd-stolpmann.de";
  x-sender="info@gerd-stolpmann.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  info@gerd-stolpmann.de) identity=mailfrom;
  client-ip=217.72.192.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="info@gerd-stolpmann.de";
  x-sender="info@gerd-stolpmann.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mout.kundenserver.de) identity=helo;
  client-ip=217.72.192.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="info@gerd-stolpmann.de";
  x-sender="postmaster@mout.kundenserver.de";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3A1sKTVxY+9MtqEbqUWRWHFpT/LSx+4OfEezUN459i?=
 =?us-ascii?q?sYplN5qZrs65bnLW6fgltlLVR4KTs6sC17KN9fi4EUU7or+5+EgYd5JNUxJXwe?=
 =?us-ascii?q?43pCcHRPC/NEvgMfTxZDY7FskRHHVs/nW8LFQHUJ2mPw6arXK99yMdFQviPgRp?=
 =?us-ascii?q?OOv1BpTSj8Oq3Oyu5pHfeQpFiCazbL9oMBm6sRjau9ULj4dlNqs/0AbCrGFSe+?=
 =?us-ascii?q?RRy2NoJFaTkAj568yt4pNt8Dletuw4+cJYXqr0Y6o3TbpDDDQ7KG81/9HktQPC?=
 =?us-ascii?q?TQSU+HQRVHgdnwdSDAjE6BH6WYrxsjf/u+Fg1iSWIdH6QLYpUjm58axlVAHnhz?=
 =?us-ascii?q?sGNz4h8WHYlMpwjL5AoBm8oxBz2pPYbJ2JOPZ7eK7WYNEUSndbXstJSiJPHI28?=
 =?us-ascii?q?YYsMAeQPM+lXoIvyqEcVoBuxGQWhHuThxiNGi3L026AxzuQvERvB3AwlB98AsW?=
 =?us-ascii?q?rbrM/oO6wPTO610K7IzTHbb/NTwzj97o7IeQ0mrPGNW7Jwf83RxFIgFwzblFWf?=
 =?us-ascii?q?tJXpPyiJ1uQKt2ib9+9gWvipi24hsQ1+vyagy94qh4LUiIwVzVXE+j94wIYzPd?=
 =?us-ascii?q?C4R1B0YcS5H5dJrCGaK4x2Qsc6Q2Ftoik6zLsGtYSmcycU0Jgo2wTQa/mDc4eU?=
 =?us-ascii?q?4xLjSOaQLS1/hHJ/d7KygQu5/0u4yuDkSMW4zVRHojBHn9XSrHwByhje5tadRv?=
 =?us-ascii?q?Z/8UqtwTWC2gDJ5u1ZIk05m7DXJp8lz7Iqi5YesFnPEynrk0vslqCWbF8r+u2w?=
 =?us-ascii?q?5uTnfLrmopicOpdxigH5L6QuhtazAeclMggIQmeU5+K81Kb98k3jXrVFkOc2nr?=
 =?us-ascii?q?PEv5/EPcgbp6i5DBFJ0os79RqzEjWr3M4akHUZNl5JZRaKg5bzN1zML/30FfK/?=
 =?us-ascii?q?jE6tkDdvyfDGJLrhApDVI3jClrfhc7F95lVTyAUt19BQ+otYCqodIPL0Xk/xrN?=
 =?us-ascii?q?nYAQU/Mwyy2eroFcty2psEWW2TGq+ZLL/SsViQ6+0zOeaMYYsVtC/5K/gk/P7u?=
 =?us-ascii?q?kWQ0mUQdfKmsxZsYcmq0HvVgI0WDYHrjmM0NEWkQvll2cOu/oVmLV3ZobHa3Xr?=
 =?us-ascii?q?4grmUyDIugS5zIRoWsnKCpxCC/D4FbbWBAC0mRHDHvbYrSH78jZTieavR9lTgc?=
 =?us-ascii?q?ULGnTcd11Begsyf1xqBra/HI/SkAsJvl0p556ruAuws18GlbAt6Rm1qRSGVsm2?=
 =?us-ascii?q?oOQXdi3aZxpmRyx02PlLNkhPhAENVV4bVFX1FpZtbn0+VmBoWqCUr6ddCTRQPj?=
 =?us-ascii?q?G43+WGBjfpcK29YLJn1FNZCnhxHH0TCtBuZExbOGHpBx6b7b22D0LsB7jXrLhv?=
 =?us-ascii?q?F40wsWB/BXPGjjvZZRshDJDteYwUqUjarvbrgb2DbI/WGFi2aD7hkBDVxAFJ7d?=
 =?us-ascii?q?VHVaXXP46NT04kSYFe2rDqk7dAhcz8KPLLBHcMPklxNKSaW7NQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BmAABt4bhahkrASNleGgEBAQEBAgEBA?=
 =?us-ascii?q?QEIAQEBAYQicCiDXJUPgUsIIQ+BApJRggYIAx+EZgKDfBkGBjEXAQIBAQEBAQE?=
 =?us-ascii?q?BAQESAQEBCAsLCCgvgjgkAYJIAQEBAwEjMiQFCwkCGCoCAlcGAQwGAgEBBYR9D?=
 =?us-ascii?q?AEKj0qbOIIghFiDZYILD4U+ghpUgUCBLgyCWYMICwOBaYJ1glQDhxAXkBgIc0Y?=
 =?us-ascii?q?DgXeBUYY0ZYIOh0GEfo92gSUdAYIITSQUOoJDCYImjiNtAZAGAQE?=
X-IPAS-Result: =?us-ascii?q?A0BmAABt4bhahkrASNleGgEBAQEBAgEBAQEIAQEBAYQicCi?=
 =?us-ascii?q?DXJUPgUsIIQ+BApJRggYIAx+EZgKDfBkGBjEXAQIBAQEBAQEBAQESAQEBCAsLC?=
 =?us-ascii?q?CgvgjgkAYJIAQEBAwEjMiQFCwkCGCoCAlcGAQwGAgEBBYR9DAEKj0qbOIIghFi?=
 =?us-ascii?q?DZYILD4U+ghpUgUCBLgyCWYMICwOBaYJ1glQDhxAXkBgIc0YDgXeBUYY0ZYIOh?=
 =?us-ascii?q?0GEfo92gSUdAYIITSQUOoJDCYImjiNtAZAGAQE?=
X-IronPort-AV: E=Sophos;i="5.48,364,1517871600"; 
   d="asc'?scan'208";a="319977311"
Received: from mout.kundenserver.de ([217.72.192.74])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES128-GCM-SHA256; 26 Mar 2018 14:03:29 +0200
Received: from office1.lan.sumadev.de ([85.183.69.161]) by
 mrelayeu.kundenserver.de (mreue103 [212.227.15.183]) with ESMTPSA (Nemesis)
 id 0LfY1R-1eBxkH3R5l-00p4Jo; Mon, 26 Mar 2018 14:03:28 +0200
Received: from gerdbook.fritz.box (unknown [192.168.65.10])
	by office1.lan.sumadev.de (Postfix) with ESMTPSA id 12B1BDC05D;
	Mon, 26 Mar 2018 14:03:28 +0200 (CEST)
To: Alan Schmitt <alan.schmitt@polytechnique.org>,
 Gerd Stolpmann <info@gerd-stolpmann.de>
Cc: OCaml Mailing List <caml-list@inria.fr>
References: <m2po3x8by0.fsf@polytechnique.org>
 <9a905c88-7201-baaf-7b13-ac892807f876@gerd-stolpmann.de>
 <m2zi2vidkj.fsf@polytechnique.org>
From: Gerd Stolpmann <info@gerd-stolpmann.de>
Message-ID: <218ae452-5704-79f5-dc4b-11d4278f20d9@gerd-stolpmann.de>
Date: Mon, 26 Mar 2018 14:04:37 +0200
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.13; rv:52.0)
 Gecko/20100101 Thunderbird/52.6.0
MIME-Version: 1.0
In-Reply-To: <m2zi2vidkj.fsf@polytechnique.org>
Content-Type: multipart/signed; micalg=pgp-sha256;
 protocol="application/pgp-signature";
 boundary="Fe86ln4qiAJWQAMt5z5Bcj4HITjEKx2TT"
X-Provags-ID: V03:K0:PQD/xIvwwFUqeDnPcSL08eaBjdTFRXTtkOO4Zj0oqg8LyCBtaZJ
 hUgSETitMS3t/nJN2581LVRwx8rX1VScBLyWE+qVq9G55qJ7DsfpZFFJfHw3f/3aqe58570
 X27qFz71hjx49gT2b0OWhw+9gYH5cnpTHmB6+SREqf9NTPAOfZZ2QwCORRoTjKLC5fp4msK
 CaclqLkoqWVyFP8/31u0A==
X-UI-Out-Filterresults: notjunk:1;V01:K0:H0qwtd21g9g=:00ZyXgbhfjGXpVYfOIKP9i
 JsDJjj6t6ZPK4qFIIU6heWZf+gYM7wy7Lp12RcA+v1uH+gkQefSZXweuSu4FpH9+keqETBQhN
 Fd/a8VOq8eqY4Isy12fO+OxrTZSzoYQTqOLLKwxBuxrG/uh2kDBphDzg+thuXcEgtlYOz7Eo9
 sJOhYgp4bqbAVxmJCZtNxDDUr9UZjBHhmrhG9LMuOuF5aR9qqarvG964rXQEZUu5Yn++GA6gU
 3fwivGuR8cp0vEQt8yYZqoE0sTs5sQZX3/cmO46JKti7cK1pu4qEZxumseKU949/0h3Gsa5pi
 mSLNk3Fan54+hIPXr2F0vILLjhcOXI/UFZN0t+xnzqirjPplZyloLRDCiboZPW9247vVX/PYp
 looTaAaTwuHpAayHXh0sPT/RBxvLAabO4UCIadodhuHQMSt2kPhyHZqXQne9DpECAgzobq3ro
 ZrVLpsnY4lWmGWn2l3JICYEbWG4SBChWSD4oOL43jz3E/5UZvKc3+qFEblruPmNo8rkNeqPdt
 EhRFvOiJQsSWMiC7Kv1UOLoIhGg3qvf+eWYfcqS7HiyQif3j43Sxh6Bhu/93Hnfm1ZVxhMvIG
 4/a1tuG1NLFrjRtGRz0ydK1Tn4SATIlSeAJQn0c34R6cK9TPj2vlGmrPJqyo0Wij5vOV0d1Q+
 Ji8YcyN4ageBtqrGhvLbyK++5MQ7sfR2nparTP/Ph3HKBtmJ75gBsBqp7uXSqblNFAkbojM+J
 wq+4yyZrDmtfPOApCu+q1BID4Ia6LoWxSmVZXA==
Subject: Re: [Caml-list] ocamlnet question: get with arbitrary header

This is an OpenPGP/MIME signed message (RFC 4880 and 3156)
--Fe86ln4qiAJWQAMt5z5Bcj4HITjEKx2TT
Content-Type: multipart/mixed; boundary="U870iJE41SyqF1qgy1lmLCTxLOiZEGv8k";
 protected-headers="v1"
From: Gerd Stolpmann <gerd@gerd-stolpmann.de>
To: Alan Schmitt <alan.schmitt@polytechnique.org>,
 Gerd Stolpmann <info@gerd-stolpmann.de>
Cc: OCaml Mailing List <caml-list@inria.fr>
Message-ID: <218ae452-5704-79f5-dc4b-11d4278f20d9@gerd-stolpmann.de>
Subject: Re: [Caml-list] ocamlnet question: get with arbitrary header
References: <m2po3x8by0.fsf@polytechnique.org>
 <9a905c88-7201-baaf-7b13-ac892807f876@gerd-stolpmann.de>
 <m2zi2vidkj.fsf@polytechnique.org>
In-Reply-To: <m2zi2vidkj.fsf@polytechnique.org>

--U870iJE41SyqF1qgy1lmLCTxLOiZEGv8k
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
Content-Language: en-US



On 26.03.18 07:57, Alan Schmitt wrote:
> Hello Gerd,
>
> On 2018-03-22 20:55, Gerd Stolpmann <info@gerd-stolpmann.de> writes:
>
>> No, with the Convenience module you cannot do it. It's really meant for
>> super-simple stuff only.
>>
>> But you can do:
>>
>> let pipeline =3D new Nethttp.pipeline in
>> let call =3D new Nethttp_client.get url in
>> call # set_request_header (new Netmime.basic_mime_header
>> ["Authorization", ...]);
>> pipeline # add call;
>> pipeline # run()
>>
>> then check for call # response_* values. You can reuse the pipeline
>> across calls.
> Thank you for the tip. The API I'm interacting with also uses the PATCH
> method, is there support for it in ocamlnet?


Well, you would have to create your own class for that, e.g. there is
for GET:

class get_call =3D object(self) =C2=A0 inherit generic_call =C2=A0 method p=
rivate
fixup_request() =3D () =C2=A0 method private def_request_method =3D "GET" =
=C2=A0
method private def_is_idempotent =3D true =C2=A0 method private
def_has_req_body =3D false =C2=A0 method private def_has_resp_body =3D true=
 =C2=A0
method private def_empty_path_replacement =3D "/" end

class get the_query =3D =C2=A0 object (self) =C2=A0=C2=A0=C2=A0 inherit get=
_call =C2=A0=C2=A0=C2=A0
initializer =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 self # set_request_uri the_query=
 =C2=A0 end


For PATCH you'd have to define something along these lines. For other
examples like POST see the source code.

Gerd

> Best,
>
> Alan
>

--=20
------------------------------------------------------------
Gerd Stolpmann, Darmstadt, Germany    gerd@gerd-stolpmann.de
My OCaml site:          http://www.camlcity.org
Contact details:        http://www.camlcity.org/contact.html
Company homepage:       http://www.gerd-stolpmann.de
------------------------------------------------------------



--U870iJE41SyqF1qgy1lmLCTxLOiZEGv8k--

--Fe86ln4qiAJWQAMt5z5Bcj4HITjEKx2TT
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----

iQEzBAEBCAAdFiEEDD3jJ6xcCmoYHoi4Bozhv1ksHlMFAlq44dYACgkQBozhv1ks
HlMJwAf8DFr8tJ4DrsyPuk6IHTWCO4CMER5P12oLXFTA7k5k6cw3zWoBAafN781T
aCfkDc45ZPAgO42MWx3fXL/Aq+OYsHrUiD9eh9StKlPV/5UJ29jfgEkd5D3AK2xb
H4ZBT6T+gZizx+tHhofkJxL7iolZQ40/hiqFqJsp0qbwu1C7M+ZPXiu7/3oC5M1E
IF1xuobUqyNTwUGreUbi0XC9sNZbjkCSGBSTe9gQb7aN8EnOVpQ4KkolJSccZaDS
6L6A3cnQVQNq2Oi2NkZKUz+DHzFI4HqGlHV0+fe3i6KwiDwSb+zDuhYV+atMvYx+
frjg3kURTYRAKDb+TSNr8PwsglprAw==
=zZhG
-----END PGP SIGNATURE-----

--Fe86ln4qiAJWQAMt5z5Bcj4HITjEKx2TT--
