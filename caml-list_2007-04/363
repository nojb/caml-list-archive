Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 38181BC6B
	for <caml-list@yquem.inria.fr>; Sat, 28 Apr 2007 23:21:15 +0200 (CEST)
Received: from pih-relay06.plus.net (pih-relay06.plus.net [212.159.14.133])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l3SLLElw011712
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Sat, 28 Apr 2007 23:21:15 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay06.plus.net with esmtp (Exim) id 1HhuLy-0004NR-Bm
	for caml-list@yquem.inria.fr; Sat, 28 Apr 2007 22:21:14 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] menhir
Date: Sat, 28 Apr 2007 22:15:28 +0100
User-Agent: KMail/1.9.5
References: <1177756336.11923.18.camel@rosella.wigram> <20070428165058.GA31584@yquem.inria.fr> <f8560b80704281247y44d44765h624cda8a94bc88f5@mail.gmail.com>
In-Reply-To: <f8560b80704281247y44d44765h624cda8a94bc88f5@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200704282215.28300.jon@ffconsultancy.com>
X-Miltered: at discorde with ID 4633BACA.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; markus:01 mottl:01 compiler:01 compiler:01 ocamlopt:01 stack:01 recursive:01 recursive:01 rewriting:01 ocaml:01 fsharp:01 frog:98 compilers:01 wrote:01 caml-list:01 

On Saturday 28 April 2007 20:47, Markus Mottl wrote:
> I think it wouldn't be difficult to update the compiler to use more
> efficient data structures, but it would certainly be a hell lot of
> work...

I've had a quick look at this before. Some of our compiler compilers were 
causing ocamlopt to stack overflow and the problem turned out to be a pair of 
mutually recursive functions in different modules of the type checkers that 
were not tail recursive. I couldn't see an easy solution without rewriting 
the whole thing in CPS.

Perhaps a program to convert OCaml code into CPS style would be useful?

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
The F#.NET Journal
http://www.ffconsultancy.com/products/fsharp_journal/?e

