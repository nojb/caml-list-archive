Return-Path: <Don.Syme@microsoft.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.7 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE,
	SPF_SOFTFAIL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id E05E2BC0A
	for <caml-list@yquem.inria.fr>; Wed,  4 Apr 2007 10:46:02 +0200 (CEST)
Received: from smtp-dub.microsoft.com (smtp-dub.microsoft.com [213.199.138.181])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l348k2j7026103
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO)
	for <caml-list@inria.fr>; Wed, 4 Apr 2007 10:46:02 +0200
Received: from DUB-EXHUB-C303.europe.corp.microsoft.com (65.53.213.93) by
 DUB-EXGWY-E802.partners.extranet.microsoft.com (10.251.129.2) with Microsoft
 SMTP Server (TLS) id 8.1.85.3; Wed, 4 Apr 2007 09:46:01 +0100
Received: from EA-EXMSG-C315.europe.corp.microsoft.com ([65.53.221.65]) by
 DUB-EXHUB-C303.europe.corp.microsoft.com ([65.53.213.93]) with mapi; Wed, 4
 Apr 2007 09:46:01 +0100
From: Don Syme <Don.Syme@microsoft.com>
To: Stefan Monnier <monnier@iro.umontreal.ca>,
	"caml-list@inria.fr" <caml-list@inria.fr>
Date: Wed, 4 Apr 2007 09:45:59 +0100
Subject: RE: [Caml-list] Re: How important are circular lists/recursive
 objects?
Thread-Topic: [Caml-list] Re: How important are circular lists/recursive
 objects?
Thread-Index: Acd2bNchdXpG58aATnCreUBK+avoNAAKDXkw
Message-ID: <7E24A64DB2F6F34E8C6002C4EB23449708715BD807@EA-EXMSG-C315.europe.corp.microsoft.com>
References: <Pine.LNX.4.64.0704021949590.5725@localhost>
 <jwv4pnwkdai.fsf-monnier+gmane.comp.lang.caml.inria@gnu.org>
In-Reply-To: <jwv4pnwkdai.fsf-monnier+gmane.comp.lang.caml.inria@gnu.org>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
acceptlanguage: en-US
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0
X-Miltered: at concorde with ID 461365CA.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; syme:01 syme:01 recursive:01 initializing:01 entcs:01 recursive:01 extensively:01 cheers:01 sml:01 ocaml's:01 beginner's:01 ocaml:01 bug:01 beginners:01 abstract:01 


Hi Stefan,

You might like to read my paper "Initializing Mutually Referential Abstract=
 Objects", http://dx.doi.org/10.1016/j.entcs.2005.11.038, where I argue tha=
t this is a serious limitation, and argue the case for an alternative.  Int=
erestingly Scala is considering using the kind of recursive initialization =
I propose in the paper, though much more extensively than I originally prop=
osed.

Cheers & best wishes,
Don


-----Original Message-----
From: caml-list-bounces@yquem.inria.fr [mailto:caml-list-bounces@yquem.inri=
a.fr] On Behalf Of Stefan Monnier
Sent: 04 April 2007 05:53
To: caml-list@inria.fr
Subject: [Caml-list] Re: How important are circular lists/recursive objects=
?

> The question is: if this behavior was completely outlawed, and either you
> couldn't build up circular lists/recursive data structures of this type a=
t
> all, or had to call special functions (List.circularize, say), to create
> them, would this be a signifigant problem?  Does anyone actually use this
> construct, and if so, for what?

This is the case in SML: you need to go through a `ref' cell in order to
create a cycle.  This has very rarely been presented as
a serious limitation.  OCaml's trick is occasionally useful, but I don't
think anybody would lose her sleep over it.


        Stefan


_______________________________________________
Caml-list mailing list. Subscription management:
http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
Archives: http://caml.inria.fr
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
Bug reports: http://caml.inria.fr/bin/caml-bugs

