Return-Path: <john.r.harrison@intel.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL,HTML_MESSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id C606EBC69
	for <caml-list@yquem.inria.fr>; Wed, 11 Apr 2007 00:08:25 +0200 (CEST)
Received: from mga03.intel.com (mga03.intel.com [143.182.124.21])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l3AM8NIx001986
	for <caml-list@inria.fr>; Wed, 11 Apr 2007 00:08:24 +0200
Received: from azsmga001.ch.intel.com ([10.2.17.19])
  by mga03.intel.com with ESMTP; 10 Apr 2007 15:08:23 -0700
Received: from orsmsx335.jf.intel.com ([10.22.226.40])
  by azsmga001.ch.intel.com with ESMTP; 10 Apr 2007 15:08:22 -0700
X-ExtLoop1: 1
X-IronPort-AV: i="4.14,391,1170662400"; 
   d="scan'208,217"; a="211297056:sNHT34839945"
Received: from orsmsx419.amr.corp.intel.com ([10.22.226.88]) by orsmsx335.jf.intel.com with Microsoft SMTPSVC(6.0.3790.1830);
	 Tue, 10 Apr 2007 15:08:21 -0700
X-MimeOLE: Produced By Microsoft Exchange V6.5
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----_=_NextPart_001_01C77BBC.C095C5C8"
Subject: Saving the OCaml interpreter state
Date: Tue, 10 Apr 2007 15:08:21 -0700
Message-ID: <509223F0BF55E74FA1247D17207E7A0C014E5063@orsmsx419.amr.corp.intel.com>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: Saving the OCaml interpreter state
Thread-Index: Acd7vMBO83saaeTHQJWTuyi3XFgIWA==
From: "Harrison, John R" <john.r.harrison@intel.com>
To: "OCaml" <caml-list@inria.fr>
X-OriginalArrivalTime: 10 Apr 2007 22:08:21.0896 (UTC) FILETIME=[C09D7080:01C77BBC]
X-j-chkmail-Score: MSGID : 461C0AD7.000 on concorde : j-chkmail score : XX : 5/20 0 0.000 -> 2
X-Miltered: at concorde with ID 461C0AD7.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 sml:01 bindings:01 ocaml:01 sml:01 bindings:01 iym:98 loops:02 loops:02 poly:02 poly:02 functional:02 functional:02 objects:02 objects:02 

This is a multi-part message in MIME format.

------_=_NextPart_001_01C77BBC.C095C5C8
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable

I think I asked roughly this question several years ago, but I would
appreciate

a reminder.

=20

In several read-eval-print loops for functional languages (e.g. Poly,
SML/NJ,

various LISPs), it's possible to save and restore the current state so
you can

start up again in an environment with all the same objects and name
bindings

present. OCaml does not currently allow this. How hard would it be to
modify

OCaml to support save/restore of sessions? At the moment I'm forced into

OS-specific checkpointing of processes.

=20

John.

=20


------_=_NextPart_001_01C77BBC.C095C5C8
Content-Type: text/html;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable

<html xmlns:o=3D"urn:schemas-microsoft-com:office:office" =
xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<META HTTP-EQUIV=3D"Content-Type" CONTENT=3D"text/html; =
charset=3Dus-ascii">
<meta name=3DGenerator content=3D"Microsoft Word 11 (filtered medium)">
<style>
<!--
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
span.EmailStyle17
	{mso-style-type:personal-compose;
	font-family:Arial;
	color:windowtext;}
@page Section1
	{size:8.5in 11.0in;
	margin:1.0in 1.25in 1.0in 1.25in;}
div.Section1
	{page:Section1;}
-->
</style>

</head>

<body lang=3DEN-US link=3Dblue vlink=3Dpurple>

<div class=3DSection1>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'>I think I asked roughly this question several years =
ago, but
I would appreciate<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'>a reminder.<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'>In several read-eval-print loops for functional =
languages
(e.g. Poly, SML/NJ,<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'>various LISPs), it&#8217;s possible to save and =
restore the
current state so you can<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'>start up again in an environment with all the same =
objects
and name bindings<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'>present. OCaml does not currently allow this. How =
hard would
it be to modify<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'>OCaml to support save/restore of sessions? At the =
moment I&#8217;m
forced into<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'>OS-specific checkpointing of =
processes.<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'>John.<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 face=3DArial><span =
style=3D'font-size:10.0pt;
font-family:Arial'><o:p>&nbsp;</o:p></span></font></p>

</div>

</body>

</html>

------_=_NextPart_001_01C77BBC.C095C5C8--

