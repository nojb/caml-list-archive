Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id ED366BC69
	for <caml-list@yquem.inria.fr>; Tue, 10 Apr 2007 07:52:53 +0200 (CEST)
Received: from ipmail01.adl2.internode.on.net (ipmail01.adl2.internode.on.net [203.16.214.140])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l3A5qodA010435
	for <caml-list@inria.fr>; Tue, 10 Apr 2007 07:52:53 +0200
X-IronPort-AV: E=Sophos;i="4.14,388,1170595800"; 
   d="scan'208";a="112650975"
Received: from ppp8-148.lns1.syd7.internode.on.net (HELO [192.168.1.201]) ([59.167.8.148])
  by ipmail01.adl2.internode.on.net with ESMTP; 10 Apr 2007 15:22:47 +0930
Subject: Re: [Caml-list] crash under macos x but not win32
From: skaller <skaller@users.sourceforge.net>
To: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
Cc: shawjef3@msu.edu, caml-list@inria.fr
In-Reply-To: <20070410.131533.92584169.garrigue@math.nagoya-u.ac.jp>
References: <E1Hb45K-0007eN-K8@sys29.mail.msu.edu>
	 <20070410.100759.08076654.garrigue@math.nagoya-u.ac.jp>
	 <E1Hb7TL-0003FH-Ab@sys29.mail.msu.edu>
	 <20070410.131533.92584169.garrigue@math.nagoya-u.ac.jp>
Content-Type: text/plain
Date: Tue, 10 Apr 2007 15:52:44 +1000
Message-Id: <1176184364.6164.67.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.8.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 461B2632.003 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; macos:01 threads:01 ocaml:01 merging:01 guis:01 gtk:01 offerings:98 sourceforge:01 wrote:01 caml-list:01 garrigue:03 jacques:03 problem:05 tcl:05 extension:05 

On Tue, 2007-04-10 at 13:15 +0900, Jacques Garrigue wrote:

> By the way, the polling is needed in order to have threads running
> while using the Tk main loop. One could also do the opposite, polling
> for Tk events while running an ocaml main loop...

This the classic control inversion problem, when two top level
architectures both demand to run the event loop. From memory,
Tcl is very good in this area, since it is actually designed to 
support event loop merging, which of course was dictated by the
need to handle GUIs as an extension.

More recent offerings such as Gtk seem to have taken a massive
backwards step.

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

