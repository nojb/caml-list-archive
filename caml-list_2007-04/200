Return-Path: <daniel.buenzli@epfl.ch>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.8 required=5.0 tests=AWL,SPF_SOFTFAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 5C910BC69
	for <caml-list@yquem.inria.fr>; Fri, 13 Apr 2007 22:27:38 +0200 (CEST)
Received: from mail13.bluewin.ch (mail13.bluewin.ch [195.186.18.62])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l3DKRZD5016418
	for <caml-list@yquem.inria.fr>; Fri, 13 Apr 2007 22:27:38 +0200
Received: from [10.0.1.2] (85.2.82.220) by mail13.bluewin.ch (Bluewin 7.3.121)
        id 45F50C4A008F967A for caml-list@yquem.inria.fr; Fri, 13 Apr 2007 20:27:34 +0000
Mime-Version: 1.0 (Apple Message framework v752.2)
In-Reply-To: <1176493128.22788.101.camel@localhost.localdomain>
References: <509223F0BF55E74FA1247D17207E7A0C0151BA6B@orsmsx419.amr.corp.intel.com> <1176493128.22788.101.camel@localhost.localdomain>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
Message-Id: <4A6A4BE3-E1D5-427A-8C7B-E64C86DA6B58@epfl.ch>
Content-Transfer-Encoding: quoted-printable
From: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@epfl.ch>
Subject: Re: [Caml-list] Saving the OCaml interpreter state
Date: Fri, 13 Apr 2007 22:27:42 +0200
To: caml-list@yquem.inria.fr
X-Mailer: Apple Mail (2.752.2)
X-Miltered: at discorde with ID 461FE7B8.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; bunzli:01 buenzli:01 ocaml:01 gerd:01 stolpmann:01 ledit:01 ledit:01 ocaml:01 val:01 val:01 parsed:01 caml-list:01 short:01 int:01 int:01 


Le 13 avr. 07 =E0 21:38, Gerd Stolpmann a =E9crit :

> What we don't have is a convenient way to create
> sessions. Maybe we can add that by recording the interactively =20
> submitted
> definitions, and replaying them later.

You are right, record expressions that were _correctly_ parsed. ledit =20=

falls short of this goal :

> > ledit -h session1 ocaml
>         Objective Caml version 3.09.3
>
> # let x =3D 3;;
> val x : int =3D 3
> #^D
> > ledit -h session2 ocaml
>         Objective Caml version 3.09.3
>
> # #use "session1";;
> val x : int =3D 3

The problem is when you type malformed expressions, they are also =20
recorded (ledit cannot know they are malformed) and #using the =20
session breaks, you need to clean it before.

Your proposal seems a good and reasonable feature wish.

Best,

Daniel

