Return-Path: <rich@annexia.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id F0E2BBC69
	for <caml-list@yquem.inria.fr>; Mon, 23 Apr 2007 10:10:08 +0200 (CEST)
Received: from furbychan.cocan.org (furbychan.cocan.org [80.68.91.176])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l3N8A8aL022078
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@yquem.inria.fr>; Mon, 23 Apr 2007 10:10:08 +0200
Received: from rich by furbychan.cocan.org with local (Exim 3.35 #1 (Debian))
	id 1HftcY-00054I-00; Mon, 23 Apr 2007 09:10:02 +0100
Date: Mon, 23 Apr 2007 09:10:02 +0100
To: Jason Ganetsky <jason.ganetsky@gmail.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Re: Multiprocessor support in OCaml
Message-ID: <20070423081002.GA18553@furbychan.cocan.org>
References: <ab351c020704220042x6e139375wa97393247ccc4867@mail.gmail.com> <87vefo71t7.fsf@pps.jussieu.fr> <ab351c020704221052v50ce66b6maec299889a2c1f1f@mail.gmail.com> <ab351c020704221052q7c924c27j86bb32c270a069c3@mail.gmail.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <ab351c020704221052q7c924c27j86bb32c270a069c3@mail.gmail.com>
User-Agent: Mutt/1.5.9i
From: Richard Jones <rich@annexia.org>
X-Miltered: at concorde with ID 462C69E0.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 workload:01 read-only:01 read-only:01 wrote:01 caml-list:01 data:02 data:02 library:03 fork:05 linux:06 red:92 file:08 load:08 i'm:09 

On 4/22/07, Jason Ganetsky <jason.ganetsky@gmail.com> wrote:
>
>Well, the solution I'm going for now is to load all my data up, call
>Gc.Compact(), and then fork off child processes. The workload that I'm
>parallelizing is read-only... so I think this will work well with Linux
>copy-on-write forking.

You might also want to look at the Ancient library
(http://merjis.com/developers/ancient) which will allow you to share
data read-only between unrelated processes, backed by a file.

Rich.

-- 
Richard Jones
Red Hat

