Return-Path: <jason.ganetsky@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.4 required=5.0 tests=HTML_MESSAGE,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 989ECBC69
	for <caml-list@yquem.inria.fr>; Sun, 22 Apr 2007 19:52:46 +0200 (CEST)
Received: from an-out-0708.google.com (an-out-0708.google.com [209.85.132.242])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l3MHqhpA012221
	for <caml-list@yquem.inria.fr>; Sun, 22 Apr 2007 19:52:44 +0200
Received: by an-out-0708.google.com with SMTP id c24so1602128ana
        for <caml-list@yquem.inria.fr>; Sun, 22 Apr 2007 10:52:42 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
        b=UzM1mHTDpbP5nmvbBpOjCyZNNmOI2jvGxnK1HdTJ5aU7ZtS8yPbjHmNsnO/AzvYVWggyhBkaviNStpGSsKoDiJLtyIspWzBe8t4flqKNSW2p2YwDecKDh/VlzycRGoFg6DVhOJvzg9JZXtke5DpDspc4hnmsGkgHvIT3GzZI5UA=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
        b=R7PQelV7TeGs/Kk7E2kJeODcuaXomVDP0/YcBjWrPhVioTwgsRICRbyNyCXedox+XDfst9mU3dgGWolab1Xx5oBLKdlmSVSOn+ZzZDcNa/Yseho/HTWRCzUIybti5AExLRZ0xy4x2AplOY83M+0iDzzbFUmb5d7nGfGvROn5AEA=
Received: by 10.114.185.8 with SMTP id i8mr2174478waf.1177264361081;
        Sun, 22 Apr 2007 10:52:41 -0700 (PDT)
Received: by 10.114.158.16 with HTTP; Sun, 22 Apr 2007 10:52:41 -0700 (PDT)
Message-ID: <ab351c020704221052q7c924c27j86bb32c270a069c3@mail.gmail.com>
Date: Sun, 22 Apr 2007 13:52:41 -0400
From: "Jason Ganetsky" <jason.ganetsky@gmail.com>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Re: Multiprocessor support in OCaml
In-Reply-To: <ab351c020704221052v50ce66b6maec299889a2c1f1f@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_2587_10081463.1177264361023"
References: <ab351c020704220042x6e139375wa97393247ccc4867@mail.gmail.com>
	 <87vefo71t7.fsf@pps.jussieu.fr>
	 <ab351c020704221052v50ce66b6maec299889a2c1f1f@mail.gmail.com>
X-j-chkmail-Score: MSGID : 462BA0EB.000 on discorde : j-chkmail score : XX : 0/20 2 0.000 -> 2
X-Miltered: at discorde with ID 462BA0EB.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 workload:01 read-only:01 speedup:01 ocaml:01 threads:01 sml:01 beginner's:01 bug:01 workload:01 read-only:01 speedup:01 threads:01 sml:01 beginner's:01 

------=_Part_2587_10081463.1177264361023
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On 4/22/07, Jason Ganetsky <jason.ganetsky@gmail.com> wrote:
>
> Well, the solution I'm going for now is to load all my data up, call
> Gc.Compact(), and then fork off child processes. The workload that I'm
> parallelizing is read-only... so I think this will work well with Linux
> copy-on-write forking.
>
> On 4/22/07, Zheng Li <li@pps.jussieu.fr> wrote:
> >
> >
> > Hi,
> >
> > I'm working on a process back-end of STM library. It's now supported by
> > Google
> > SOC and expected to release after the summer (and maybe earlier). With
> > it, you
> > will be able to do shared-memory (supposing that's the style your want)
> > parallel programming based on processes, which in turn gives you
> > speedup.
> >
> > If interested, you can have a taste first through the (vm)thread
> > back-end
> > currently available (check my homepage below), though it won't really
> > speed up
> > your program because of the well-known global lock of OCaml threads.
> >
> > "Jason Ganetsky" <jason.ganetsky@gmail.com> writes:
> > > Hi all,
> > > I'm new to this list, and new to OCaml (although, have some experience
> > with
> > > SML).Anyway, I have recently written an OCaml thread pool
> > implementation, on
> > > top of the Thread and Event modules. I did this for the purpose of
> > exploiting
> > > an SMP system I have, and was a disappointed to read today that OCaml
> > doesn't
> > > support multiprocessor systems.
> > >
> > > -Jason
> >
> > --
> > Zheng Li
> > http://www.pps.jussieu.fr/~li <http://www.pps.jussieu.fr/%7Eli>
> >
> > _______________________________________________
> > Caml-list mailing list. Subscription management:
> > http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> > Archives: http://caml.inria.fr
> > Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> > Bug reports: http://caml.inria.fr/bin/caml-bugs
> >
>
>

------=_Part_2587_10081463.1177264361023
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

<br><br><div><span class="gmail_quote">On 4/22/07, <b class="gmail_sendername">Jason Ganetsky</b> &lt;<a href="mailto:jason.ganetsky@gmail.com">jason.ganetsky@gmail.com</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
Well, the solution I&#39;m going for now is to load all my data up, call Gc.Compact(), and then fork off child processes. The workload that I&#39;m parallelizing is read-only... so I think this will work well with Linux copy-on-write forking.
<div><span class="e" id="q_1121a6c271ba11d2_1"><br><br><div><span class="gmail_quote">On 4/22/07, <b class="gmail_sendername">Zheng Li</b> &lt;<a href="mailto:li@pps.jussieu.fr" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">
li@pps.jussieu.fr</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<br>Hi,<br><br>I&#39;m working on a process back-end of STM library. It&#39;s now supported by Google<br>SOC and expected to release after the summer (and maybe earlier). With it, you<br>will be able to do shared-memory (supposing that&#39;s the style your want)
<br>parallel programming based on processes, which in turn gives you speedup.<br><br>If interested, you can have a taste first through the (vm)thread back-end<br>currently available (check my homepage below), though it won&#39;t really speed up
<br>your program because of the well-known global lock of OCaml threads.<br><br>&quot;Jason Ganetsky&quot; &lt;<a href="mailto:jason.ganetsky@gmail.com" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">
jason.ganetsky@gmail.com</a>&gt; writes:<br>&gt; Hi all,<br>&gt; I&#39;m new to this list, and new to OCaml (although, have some experience with
<br>&gt; SML).Anyway, I have recently written an OCaml thread pool implementation, on<br>&gt; top of the Thread and Event modules. I did this for the purpose of exploiting<br>&gt; an SMP system I have, and was a disappointed to read today that OCaml doesn&#39;t
<br>&gt; support multiprocessor systems.<br>&gt;<br>&gt; -Jason<br><br>--<br>Zheng Li<br><a href="http://www.pps.jussieu.fr/%7Eli" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://www.pps.jussieu.fr/~li
</a><br><br>_______________________________________________<br>
Caml-list mailing list. Subscription management:<br><a href="http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
</a><br>Archives: <a href="http://caml.inria.fr" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">
http://caml.inria.fr</a><br>Beginner&#39;s list: <a href="http://groups.yahoo.com/group/ocaml_beginners" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://groups.yahoo.com/group/ocaml_beginners
</a><br>Bug reports: <a href="http://caml.inria.fr/bin/caml-bugs" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://caml.inria.fr/bin/caml-bugs
</a><br></blockquote></div><br>
</span></div></blockquote></div><br>

------=_Part_2587_10081463.1177264361023--

