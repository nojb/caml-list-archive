Return-Path: <Xavier.Leroy@inria.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id C84E9BC69
	for <caml-list@yquem.inria.fr>; Sun, 22 Apr 2007 12:10:58 +0200 (CEST)
Received: from smtp6-g19.free.fr (smtp6-g19.free.fr [212.27.42.36])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l3MAAwsj028567
	for <caml-list@inria.fr>; Sun, 22 Apr 2007 12:10:58 +0200
Received: from [192.168.1.2] (che78-2-82-237-71-191.fbx.proxad.net [82.237.71.191])
	by smtp6-g19.free.fr (Postfix) with ESMTP id 2D1286D70D;
	Sun, 22 Apr 2007 12:10:58 +0200 (CEST)
Message-ID: <462B34B1.50805@inria.fr>
Date: Sun, 22 Apr 2007 12:10:57 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
User-Agent: Mozilla Thunderbird 1.0.2 (X11/20050317)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Sam Steingold <sds@gnu.org>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] backtrace output: feature request
References: <4626413C.1030606@gnu.org>
In-Reply-To: <4626413C.1030606@gnu.org>
X-Enigmail-Version: 0.91.0.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 462B34B2.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; backtrace:01 stack:01 stack:01 backtrace:01 toplevel:01 caml-list:01 functions:01 executables:01 exceptions:01 natively:01 argument:02 data:02 data:02 caml:02 caml:02 

> it appears that starting with 3.10 stack traces for natively compiled
> executables will be available. thanks!
> one thing that I would love to see is being able to redirect this output:
> so that I can log both errors and their stack traces in a file for later
> examination, but still continue running.

I agree it would be nice, and this feature is on my "to do" list.  It
takes a bit of work to make the backtrace data available from Caml, though,
so don't expect this for 3.10.

> how do I get backtraces on exceptions in then top-level?
> I want to see something like:
> h called g on line 1
> g called f on line 1
> f raised invalid_argument on line 1

Currently, you cannot.  Conceivably, this would be the same mechanism
as outlined above (i.e. making backtrace data available from Caml).
However, you'd get a backtrace in terms of file names and line
numbers, which don't make that much sense for toplevel definitions.
Functions names don't really exist in compiled code.

- Xavier Leroy

