Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA13281; Fri, 19 Sep 2003 13:48:49 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA15523 for <caml-list@pauillac.inria.fr>; Fri, 19 Sep 2003 13:48:48 +0200 (MET DST)
Received: from mail.exomi.com (mail.exomi.com [217.169.64.72])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h8JBmlj00024
	for <caml-list@pauillac.inria.fr>; Fri, 19 Sep 2003 13:48:47 +0200 (MET DST)
Received: from oxy.exomi.com (oxy.exomi.com [10.0.20.56])
	by mail.exomi.com (Postfix) with ESMTP
	id C853C5D03; Fri, 19 Sep 2003 14:48:46 +0300 (EEST)
Received: by oxy.exomi.com (Postfix, from userid 501)
	id 41ED84128CE; Fri, 19 Sep 2003 14:48:45 +0300 (EEST)
Date: Fri, 19 Sep 2003 14:48:45 +0300
From: Ville-Pertti Keinonen <will@exomi.com>
To: Mattias Waldau <mattias.waldau@abc.se>
Cc: caml-list@pauillac.inria.fr
Subject: Re: [Caml-list] Commercial application written in O'Caml: ExcelEverywhere
Message-ID: <20030919114845.GA916@exomi.com>
Mail-Followup-To: Mattias Waldau <mattias.waldau@abc.se>,
	caml-list@pauillac.inria.fr
References: <Pine.LNX.4.43.0309190852070.21578-100000@pc8-119.lri.fr> <3F6AB7CB.6020505@abc.se>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <3F6AB7CB.6020505@abc.se>
User-Agent: Mutt/1.4.1i
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 mattias:01 waldau:01 disadvantage:01 -bits:01 camomile:01 sourceforge:01 unicode:01 unicode:01 bigarray:01 -bit:01 -bit:01 ocaml:01 byte:01 int:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, Sep 19, 2003 at 10:01:15AM +0200, Mattias Waldau wrote:

> Disadvantage
> - 8-bits strings.
>   UNICODE is needed and the standard for .NET, Java, Ruby...

8-bit strings can be used to represent Unicode just fine.  Better,
in fact, than the 16-bit wide characters found in some places, since
they support encoding up to 31 bits per character and don't have
byte order issues.  And for places where you need O(1) indexing, a
suitable Bigarray (or even just an int array) can be used as an
alternate string representation.

I think Unicode support should be a matter of library functionality,
not native string representation.  There is at least one Unicode
library available for OCaml (camomile.sourceforge.net).

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

