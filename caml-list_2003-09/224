Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA15542; Fri, 19 Sep 2003 16:52:56 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA17731 for <caml-list@pauillac.inria.fr>; Fri, 19 Sep 2003 16:52:55 +0200 (MET DST)
Received: from aomori.annexia.org (annexia.force9.co.uk [212.56.101.183])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h8JEqs503625
	for <caml-list@inria.fr>; Fri, 19 Sep 2003 16:52:54 +0200 (MET DST)
Received: from rich by aomori.annexia.org with local (Exim 3.36 #1 (Debian))
	id 1A0McO-00017v-00; Fri, 19 Sep 2003 15:52:20 +0100
Date: Fri, 19 Sep 2003 15:52:20 +0100
To: katre <katre@henchmonkey.org>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Subclasses and pattern matching
Message-ID: <20030919145220.GD4205@redhat.com>
References: <20030919142156.GA30187@henchmonkey.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20030919142156.GA30187@henchmonkey.org>
User-Agent: Mutt/1.5.4i
From: Richard Jones <rich@annexia.org>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 nums:01 endline:01 endline:01 nums:01 freshmeat:01 vectors:01 hashes:01 funcs:01 allocator:01 ltd:98 int:01 int:01 lib:01 lib:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Possibly I'm being dumb here, but wouldn't it be better to use
a union type, eg:

type num = Int of int | Float of float

type list_of_nums = num list

let print_num = function
    Int i -> print_endline (string_of_int i)
  | Float f -> print_endline (string_of_float f)

let print_nums = List.iter print_num

Rich.

-- 
Richard Jones. http://www.annexia.org/ http://freshmeat.net/users/rwmj
Merjis Ltd. http://www.merjis.com/ - all your business data are belong to you.
C2LIB is a library of basic Perl/STL-like types for C. Vectors, hashes,
trees, string funcs, pool allocator: http://www.annexia.org/freeware/c2lib/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

