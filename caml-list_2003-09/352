Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id GAA17070; Tue, 30 Sep 2003 06:42:46 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id GAA25541 for <caml-list@pauillac.inria.fr>; Tue, 30 Sep 2003 06:42:45 +0200 (MET DST)
Received: from intmail.imperium.ph ([202.175.240.154])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h8U4gh511845
	for <caml-list@inria.fr>; Tue, 30 Sep 2003 06:42:43 +0200 (MET DST)
Received: from morgoth.imperium.ph (unknown [192.168.1.35])
	by intmail.imperium.ph (Postfix) with SMTP id 9014B46AB8
	for <caml-list@inria.fr>; Tue, 30 Sep 2003 12:42:41 +0800 (PHT)
Received: by morgoth.imperium.ph (sSMTP sendmail emulation); Tue, 30 Sep 2003 12:45:14 +0800
Date: Tue, 30 Sep 2003 12:45:14 +0800
From: "Rafael 'Dido' Sevilla" <dido@imperium.ph>
To: caml-list@inria.fr
Subject: Re: [Caml-list] debugging ocamlyacc grammars
Message-ID: <20030930044514.GA13863@imperium.ph>
References: <20030929045320.GD11211@imperium.ph> <r77pthjn2rn.fsf@brouilly.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <r77pthjn2rn.fsf@brouilly.inria.fr>
X-Operating-System: Linux morgoth 2.4.20-gentoo-r5
User-Agent: Mutt/1.5.4i
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; rafael:01 'dido':01 dido:01 caml-list:01 debugging:01 foo:01 bison:01 tokens:01 debug:01 0200,:01 sep:01 parser:02 parser:02 stack:02 wrote:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, Sep 29, 2003 at 03:27:24PM +0200, James Leifer wrote:
> Do you mean the parser.output file produced when you use the -v
> option?
> 
>     ocamlyacc -v foo.mly
> 

No.  I mean that once the parser is *already running*, you get a
complete trace of the entire action of the parser for some particular
input.  What states it enters as it reads particular input tokens, the
contents of its stack as it enters and leaves states, and so on.  This
is possible with Bison and Yacc, and I've used it before to debug
grammars written with those tools.  I read nothing in Ocamlyacc's (very
meager) documentation that indicates how one should do this or if it is
even possible at all.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

