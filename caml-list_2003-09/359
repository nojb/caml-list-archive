Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA02334; Tue, 30 Sep 2003 10:45:46 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA26397 for <caml-list@pauillac.inria.fr>; Tue, 30 Sep 2003 10:45:45 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h8U8jEH22154;
	Tue, 30 Sep 2003 10:45:14 +0200 (MET DST)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA01493; Tue, 30 Sep 2003 10:45:13 +0200 (MET DST)
From: Pierre Weis <pierre.weis@inria.fr>
Message-Id: <200309300845.KAA01493@pauillac.inria.fr>
Subject: Re: [Caml-list] Printf question
In-Reply-To: <20030930080357.GA15744@redhat.com> from Richard Jones at "Sep 30, 103 09:03:57 am"
To: rich@annexia.org (Richard Jones)
Date: Tue, 30 Sep 2003 10:45:13 +0200 (MET DST)
Cc: caml-list@inria.fr
X-Mailer: ELM [version 2.4ME+ PL28 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; pierre:01 weis:01 pierre:01 weis:01 caml-list:01 printf:01 bug:01 sth:99 dbh:99 sth:99 foo:01 3.07:01 dbh:99 foo:01 exhibit:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> On Tue, Sep 30, 2003 at 12:36:59AM +0200, Pierre Weis wrote:
> > What do you mean by ``not type safe at all'' ?
> 
> Well it's not a bug in the compiler.
> 
> Here's an example which isn't type safe:
> 
> let sth = dbh#prepare "select name from employees where id = %a" in
> sth#execute string_conversion "foo";
> 
> To avoid going over the same ground again, here's my original posting
> in this thread:
> 
> http://caml.inria.fr/archives/200309/msg00294.html
> 
> Rich.

I'm sorry to confess I do not understand the example. BTW my fresh Caml
compiler has the same problem :(

        Objective Caml version 3.07

# let sth = dbh#prepare "select name from employees where id = %a" in
  sth#execute string_conversion "foo";
  ;;
Unbound value dbh

Could you give us a self contained example that would run into the
current version and exhibit the ``isn't type safe'' property ?

(To me a type safety problem is of prime importance, and I would fill
better when I understand yours :)

Pierre Weis

INRIA, Projet Cristal, Pierre.Weis@inria.fr, http://pauillac.inria.fr/~weis/


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

