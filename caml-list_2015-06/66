Return-Path: <asai@is.ocha.ac.jp>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 42E7B7EEEF
	for <caml-list@sympa.inria.fr>; Fri, 12 Jun 2015 07:27:50 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  asai@is.ocha.ac.jp) identity=pra; client-ip=133.65.64.10;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="asai@is.ocha.ac.jp";
  x-sender="asai@is.ocha.ac.jp"; x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  asai@is.ocha.ac.jp designates 133.65.64.10 as permitted
  sender) identity=mailfrom; client-ip=133.65.64.10;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="asai@is.ocha.ac.jp";
  x-sender="asai@is.ocha.ac.jp"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@web.is.ocha.ac.jp) identity=helo;
  client-ip=133.65.64.10;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="asai@is.ocha.ac.jp";
  x-sender="postmaster@web.is.ocha.ac.jp";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0BDAwC9bHpVlwpAQYVcy1JMAQEBAQEBEgEBAQEBCBYHT0EFg3UoOUI0BSABBQFXiAwBBaEcgzE+MasGhToKkFyDAYEWBYxlkiYBjUuIbTWBFYQsgycBAQE
X-IPAS-Result: A0BDAwC9bHpVlwpAQYVcy1JMAQEBAQEBEgEBAQEBCBYHT0EFg3UoOUI0BSABBQFXiAwBBaEcgzE+MasGhToKkFyDAYEWBYxlkiYBjUuIbTWBFYQsgycBAQE
X-IronPort-AV: E=Sophos;i="5.13,600,1427752800"; 
   d="scan'208";a="164711409"
Received: from web.is.ocha.ac.jp ([133.65.64.10])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 12 Jun 2015 07:27:48 +0200
Received: from mail-pa0-f47.google.com (mail-pa0-f47.google.com [209.85.220.47])
	by web.is.ocha.ac.jp (Postfix) with ESMTP id 0FD5C9967F9
	for <caml-list@inria.fr>; Fri, 12 Jun 2015 14:27:45 +0900 (JST)
Received: by payr10 with SMTP id r10so16054230pay.1
        for <caml-list@inria.fr>; Thu, 11 Jun 2015 22:27:44 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:date:from:to:subject:message-id:mime-version
         :content-type:content-disposition:user-agent;
        bh=Hos0ZHo8O8ZAaSFi55Lgvpc/e2SY7L59dSnLb9jdZgo=;
        b=AEkX5bYxnu35W89JrpmbWnmJY7XmVOiprrfKccxApsEqNZJCbAPBzZJQd76Kz/hcYP
         p9mxjF3Q723kLlp5M0Xtd/OEKW1hCO4HvX4vH6zu2I/2CXAkyW7hCYRPe+VBdjcXDgsB
         KZThxVXfnnY1KZt+NrsCvyZPG+rEMYIHtyAeOjgU39Q3m66T31on59B2BmhD78n/jOU0
         YrGEu3OaTYWYZnAdLtCvKhqAT5y7BE43TuC+5dnDLGYNycNYiY+uGIm1GyI9HjBVid4n
         35UeDdnZQIrWw/LczCuGd2ftxj94fdrc8T0/C6i8pMRb7OecMuBMAIf7B4Rip0j2fGCb
         8Lnw==
X-Gm-Message-State: ALoCoQkfEmuApZgdpYjrHRtny0/1L72yDv6KbQS7Ouih7aDbfi64bNvmCA692cPkNGBHphvB0ydVPeb4oYkjzQE3ojAu1C9JwsoduCAT7Z5vJQl1AKmjq00OHVrlrur3AWAdlvTativv
X-Received: by 10.68.190.8 with SMTP id gm8mr20242590pbc.30.1434086864681;
        Thu, 11 Jun 2015 22:27:44 -0700 (PDT)
X-Received: by 10.68.190.8 with SMTP id gm8mr20242588pbc.30.1434086864626;
        Thu, 11 Jun 2015 22:27:44 -0700 (PDT)
Received: from localhost ([133.65.65.2])
        by mx.google.com with ESMTPSA id ol3sm2247292pbb.70.2015.06.11.22.27.43
        (version=TLSv1.1 cipher=RC4-SHA bits=128/128);
        Thu, 11 Jun 2015 22:27:43 -0700 (PDT)
Date: Fri, 12 Jun 2015 14:27:38 +0900
From: Kenichi Asai <asai@is.ocha.ac.jp>
To: caml-list@inria.fr
Message-ID: <20150612052738.GA3684@pllab.is.ocha.ac.jp>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.13 (2006-08-11)
Subject: [Caml-list] Marshall.from_channel and segmentation fault

The OCaml manual for the Marshall module says:

> (Marshal.from_channel chan : type).  Anything can happen at run-time
> if the object in the file does not belong to the given type.

and this "Anything" contains segmentation fault.  Is it difficult to
avoid this segmentation fault and, e.g., raise an exception instead?

Sincerely,

-- 
Kenichi Asai
