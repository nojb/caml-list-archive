Return-Path: <mmatalka@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 2AA807EEBF
	for <caml-list@sympa.inria.fr>; Thu, 18 Jun 2015 23:59:33 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  mmatalka@gmail.com) identity=pra; client-ip=209.85.212.177;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="mmatalka@gmail.com";
  x-sender="mmatalka@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  mmatalka@gmail.com designates 209.85.212.177 as permitted
  sender) identity=mailfrom; client-ip=209.85.212.177;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="mmatalka@gmail.com";
  x-sender="mmatalka@gmail.com"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-wi0-f177.google.com) identity=helo;
  client-ip=209.85.212.177;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="mmatalka@gmail.com";
  x-sender="postmaster@mail-wi0-f177.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0BcAgCMPoNVlLHUVdFcgmaBUA2tMZgtAoE/TAEBAQEBARIBAQEBBwsLCR8whCMBAQMBEi4BGx0BAwELBgULFiUPAQQNAhEBBQEiEyKHdwEDCggBBKRVPjGNKoJ5iy4KGScNV4UOAQEBAQEBAQMBAQEBAQEWAQUOizeCTYI5B4QrBZNwiWqBYZEPhU01gRWEH2+CSAEBAQ
X-IPAS-Result: A0BcAgCMPoNVlLHUVdFcgmaBUA2tMZgtAoE/TAEBAQEBARIBAQEBBwsLCR8whCMBAQMBEi4BGx0BAwELBgULFiUPAQQNAhEBBQEiEyKHdwEDCggBBKRVPjGNKoJ5iy4KGScNV4UOAQEBAQEBAQMBAQEBAQEWAQUOizeCTYI5B4QrBZNwiWqBYZEPhU01gRWEH2+CSAEBAQ
X-IronPort-AV: E=Sophos;i="5.13,641,1427752800"; 
   d="scan'208";a="166104678"
Received: from mail-wi0-f177.google.com ([209.85.212.177])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 18 Jun 2015 23:59:32 +0200
Received: by wicnd19 with SMTP id nd19so2328892wic.1
        for <caml-list@inria.fr>; Thu, 18 Jun 2015 14:59:32 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=from:to:cc:subject:references:date:in-reply-to:message-id
         :user-agent:mime-version:content-type;
        bh=XSQl0lkUDriORf8vloDF17B/m2Cc23RPvazkytH1XiU=;
        b=zMdK0yeXC1JiKmRtI2EMPILox3shw8phXAimzWhneYRnym/DiUpds49I1qMxnoILy8
         QGBru38iFTHZ75IWHqc26eiCgw5sCnJAeNkbmR1nPaeAmBm6uYsAy08sXasmmYaB67P2
         8RiJctOnJSX2dHIQUPDYReDBz0Yf40+nP3HO2axglS8T206xeBZ3xX0s8lc5OBPc38Bc
         ELjk5FSRJ9KS+gCUPSQa+5wl9/Y17RhhUgKpbVQ4zNIxGduzEQ2BTkDEpPBaZQIsyIGK
         YbFNi9UOVN4WrRN0CKGlcqc4eQ1RPXEJ4Thb6mxeRe6eqwidwfI59pEG6TcmR4CBHMXg
         bVtQ==
X-Received: by 10.180.103.194 with SMTP id fy2mr333914wib.55.1434664772658;
        Thu, 18 Jun 2015 14:59:32 -0700 (PDT)
Received: from localhost ([2a01:7e00::f03c:91ff:fe70:2696])
        by mx.google.com with ESMTPSA id z9sm770630wiv.9.2015.06.18.14.59.30
        (version=TLSv1.2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 18 Jun 2015 14:59:31 -0700 (PDT)
From: Malcolm Matalka <mmatalka@gmail.com>
To: Kenneth Adam Miller <kennethadammiller@gmail.com>
Cc: caml users <caml-list@inria.fr>
References: <CAK7rcp8-tBP1=kGK2fGHWnppUrkRe+U7vSEScRg4nL-qCgtfNg@mail.gmail.com>
Date: Thu, 18 Jun 2015 21:59:29 +0000
In-Reply-To: <CAK7rcp8-tBP1=kGK2fGHWnppUrkRe+U7vSEScRg4nL-qCgtfNg@mail.gmail.com>
	(Kenneth Adam Miller's message of "Thu, 18 Jun 2015 15:44:32 -0400")
Message-ID: <877fr0lltq.fsf@gmail.com>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/24.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
Subject: Re: [Caml-list] Compilation semantics for static garbage collection

Kenneth Adam Miller <kennethadammiller@gmail.com> writes:

> I was thinking that while rust is new, some of what it is pioneering is
> really interesting, especially with the way it deals with ownership being a
> type. Rust doesn't have a GC, yet it rules out leakage and remains fast. It
> also manages concurrency safety very well.
>
> The stipulations put on types in the ocaml language are pretty strict, and
> the GC is transparent to the user. What is the possibility that there could
> ever be a version of ocaml that makes use of something like ownership or
> some typing mechanism to determine more at compile time, to facilitate the
> removal or reduction of the GC?

From my understanding, Rust is just doing linear typing.  There is an ML
variant called LinearML from Anil that implements this, but it's a toy.
This could be added to Ocaml, but I think it's really unclear how it
would interact with the rest of the language.
