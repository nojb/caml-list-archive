Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA09082 for caml-redistribution@pauillac.inria.fr; Fri, 18 Feb 2000 00:37:22 +0100 (MET)
Resent-Message-Id: <200002172337.AAA09082@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA28044 for <caml-list@pauillac.inria.fr>; Thu, 17 Feb 2000 09:20:37 +0100 (MET)
Received: from ruby (krusty74.zip.com.au [61.8.16.74])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id JAA28058
	for <caml-list@inria.fr>; Thu, 17 Feb 2000 09:20:31 +0100 (MET)
Received: from maxtal.com.au (IDENT:root@localhost [127.0.0.1])
	by ruby (8.9.3/8.9.3) with ESMTP id TAA28298;
	Thu, 17 Feb 2000 19:05:42 +1100
Sender: root@ruby
Message-ID: <38ABABD5.54E632C3@maxtal.com.au>
Date: Thu, 17 Feb 2000 19:05:41 +1100
From: skaller <skaller@maxtal.com.au>
Organization: Maxtal
X-Mailer: Mozilla 4.51 [en] (X11; I; Linux 2.2.12 i586)
X-Accept-Language: en
MIME-Version: 1.0
To: Claude Marche <Claude.Marche@lri.fr>
CC: caml-list@inria.fr
Subject: Re: Portability of applications written in OCAML
References: <14505.19990.196972.627775@sun-demons>
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Resent-From: weis@pauillac.inria.fr
Resent-Date: Fri, 18 Feb 2000 00:37:22 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

Claude Marche wrote:
> Pour résumer mon propos, voici donc les questions que je me pose :
[]
> another application doing the same thing but easier to install.

 
> If this is technically feasible, I would like to know people who are
> interested in using this for distribution of their own application in
> bytecode form. 

> Any comments, remarks and suggestions will be welcome. My goal is be
> able to distribute as widely as possible an application written in
> Ocaml, avoiding remarks like ``I'm interested in this application but
> I cannot compile Ocaml sources, and you do not offer a suitable binary
> for my configuration », and I would be glad to hear any suggestion for
> achieving this goal.

I believe one fundamental obstacle to configuring ocaml is the lack of
dynamic loading.
Ideally, it should be possible for ocamlopt to build 'extensions' to the
bytecode
interpreter, efficively doing '-custom' linkage at load time.

The reason this is necessary is that if you have multiple ocaml
applications,
you may not want a special 'run time' for each one: each application
might
use the core, and a single separate extension module. 

I have no idea how to implement this. However, one of the things that
you can do -- albiet clumbsily -- in python, is generate C code,
run the compiler, and then load the resulting shared library as a python
extension module.

-- 
John (Max) Skaller, mailto:skaller@maxtal.com.au
10/1 Toxteth Rd Glebe NSW 2037 Australia voice: 61-2-9660-0850
homepage: http://www.maxtal.com.au/~skaller
download: ftp://ftp.cs.usyd.edu/au/jskaller


