Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA14930 for caml-redistribution@pauillac.inria.fr; Wed, 23 Feb 2000 18:52:52 +0100 (MET)
Resent-Message-Id: <200002231752.SAA14930@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA08924 for <caml-list@pauillac.inria.fr>; Wed, 23 Feb 2000 10:22:19 +0100 (MET)
Received: from dpt-info.u-strasbg.fr (dpt-info.u-strasbg.fr [130.79.6.1])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id KAA12479
	for <caml-list@inria.fr>; Wed, 23 Feb 2000 10:22:18 +0100 (MET)
Received: from lambda.u-strasbg.fr (lambda.u-strasbg.fr [130.79.75.49])
	by dpt-info.u-strasbg.fr (8.9.3/8.9.3) with ESMTP id KAA28724;
	Wed, 23 Feb 2000 10:21:41 +0100
Received: from luther by lambda.u-strasbg.fr with local (Exim 3.12 #1 (Debian))
	id 12NY2I-0006Su-00; Wed, 23 Feb 2000 10:24:46 +0100
Date: Wed, 23 Feb 2000 10:24:46 +0100
From: Sven LUTHER <luther@dpt-info.u-strasbg.fr>
To: William Chesters <williamc@paneris.org>
Cc: caml-list@inria.fr
Subject: Re: Preferred GUI Toolkit for O'Caml 3?
Message-ID: <20000223102446.A24835@dpt-info.u-strasbg.fr>
Reply-To: luther@dpt-info.u-strasbg.fr
Mail-Followup-To: William Chesters <williamc@paneris.org>,
	caml-list@inria.fr
References: <14509.20226.13985.265187@heplix4.ikp.physik.tu-darmstadt.de> <6830.951153768@saul.cis.upenn.edu> <200002221141.LAA08806@toy.william.bogus>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
User-Agent: Mutt/1.0.1i
In-Reply-To: <200002221141.LAA08806@toy.william.bogus>; from williamc@paneris.org on Tue, Feb 22, 2000 at 11:41:06AM +0000
Resent-From: weis@pauillac.inria.fr
Resent-Date: Wed, 23 Feb 2000 18:52:52 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

On Tue, Feb 22, 2000 at 11:41:06AM +0000, William Chesters wrote:
> Benjamin C. Pierce writes:
>  > We in the Unison group are also about to embark on a major UI redesign
>  > and have been wondering which toolkit to use.  Besides Thorsten's
>  > points, there are two more that are critical concerns for us:
>  > 
>  >    * seamless portability (Unix and Win32)
>  >    * ability to build statically linked binaries (this is a pretty
>  >      big drawback to the Tk-based solutions)
>  > 
>  > Comments on these points as well as the others would be very useful. 
> 
> There's always QT.  It's nice to work with (at least in C++), very
> widely used and comprehensive (because of KDE), and was written from
> the start to be cross-platform (X & Win).  NB it is uncontroversially
> free these days.

But there are no ocaml bindings of it today, so unless someone write some,
they don't are a candidate for an ocaml programmer.

Sure you can always write your interface in C++, and then write binding to
call ocaml function in the callbacks, but it is so nicer to write all
entirely in ocaml. passing ocaml functions as data to callbacks is very nice
to do a lot of thing that would be more complicated using other languages.

What would be nicest would be a toolkit entirely written in ocaml, but i guess
we will not have such a thing in a long time.

One of the advantages of gtk+ (no qt/gtk+ flamewar please) is that it was
designed from the start to support multiple languages binding, in particular
functional ones also, altough they thought mostly of lisp like stuff, wanting
to link with guile.

Friendly,

Sven LUTHER



