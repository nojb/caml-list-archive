Return-Path: <vyskocil@unice.fr>
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA20691 for <caml-redistribution@pauillac.inria.fr>; Wed, 23 Feb 2000 19:20:59 +0100 (MET)
Received: from mailhub1.isdnet.net (mailhub1.isdnet.net [195.154.209.21])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id TAA20604
	for <caml-redistribution@pauillac.inria.fr>; Wed, 23 Feb 2000 19:21:00 +0100 (MET)
Received: from unice.fr (gw.rightvision.com [195.154.98.66])
	by mailhub1.isdnet.net (8.9.3/8.9.3) with ESMTP id TAA22756;
	Wed, 23 Feb 2000 19:20:52 +0100 (CET)
Sender: vyskocil@mailhub1.isdnet.net
Message-ID: <38B42593.1CB24227@unice.fr>
Date: Wed, 23 Feb 2000 19:23:15 +0100
From: Vyskocil Vladimir <vyskocil@unice.fr>
Reply-To: vyskocil@unice.fr
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12-20 i586)
X-Accept-Language: en
MIME-Version: 1.0
To: "Benjamin C. Pierce" <bcpierce@saul.cis.upenn.edu>,
        caml-redistribution@pauillac.inria.fr
Subject: OCaml and Tcl/Tk statically linked
References: <12079.951243339@saul.cis.upenn.edu>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

"Benjamin C. Pierce" wrote:
> 
> Answering my own question...
> 
>   I've been told that statically linking Tk applications is not
>   possible.  If you can tell me how to do it (ideally on both Unix and
>   Windows) I'd be delighted to know: this is one of our biggest problems
>   with distributing Unison at the moment.
> 
> >From talking to some more experts, the situation appears to be this:
> Tk can be statically linked, but this doesn't help with portability
> because when it starts the first thing it does is reads some Tcl
> scripts.  So in any case you can't distribute a complete all-in-one
> executable: users will have to install (the right version of) Tk to
> run your program.

I've build a tool which has TK statically linked and all the script part
put in it : I've put all tcl lib files into one (or more) C strings and
evalued them by a TCL interpret in the init part of the application (it
was done in a small C piece of code linked with OCaml),  it works very
well ! 

-- 
Vyskocil Vladimir
vyskocil@unice.fr


