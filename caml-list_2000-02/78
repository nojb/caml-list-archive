Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA14586 for caml-redistribution@pauillac.inria.fr; Tue, 22 Feb 2000 15:03:42 +0100 (MET)
Resent-Message-Id: <200002221403.PAA14586@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA26673 for <caml-list@pauillac.inria.fr>; Tue, 22 Feb 2000 12:04:24 +0100 (MET)
Received: from indigo.recherche.enac.fr (indigo.recherche.enac.fr [195.220.158.66])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id MAA08219
	for <caml-list@inria.fr>; Tue, 22 Feb 2000 12:04:22 +0100 (MET)
Received: from rouge.recherche.enac.fr (root@rouge.recherche.enac.fr [195.220.158.70]) by indigo.recherche.enac.fr (8.8.6 (PHNE_14041)/8.6.11) with ESMTP id MAA13072; Tue, 22 Feb 2000 12:04:22 +0100 (MET)
Received: from recherche.enac.fr (alliot@localhost [127.0.0.1]) by rouge.recherche.enac.fr (8.9.3/8.6.11) with ESMTP id MAA12295; Tue, 22 Feb 2000 12:04:22 +0100
X-Authentication-Warning: rouge.recherche.enac.fr: Host alliot@localhost [127.0.0.1] claimed to be recherche.enac.fr
Sender: alliot@recherche.enac.fr
Message-ID: <38B26D35.51250236@recherche.enac.fr>
Date: Tue, 22 Feb 2000 12:04:22 +0100
From: jean-marc alliot <alliot@recherche.enac.fr>
Organization: Laboratoire d'Optimisation Globale
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12 i686)
X-Accept-Language: fr-FR
MIME-Version: 1.0
To: ohl@hep.tu-darmstadt.de
CC: caml-list@inria.fr
Subject: Re: Preferred GUI Toolkit for O'Caml 3?
References: <14509.20226.13985.265187@heplix4.ikp.physik.tu-darmstadt.de>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Resent-From: weis@pauillac.inria.fr
Resent-Date: Tue, 22 Feb 2000 15:03:42 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

Hi,

I just have a PhD student who has been working on writing GUIs  with OCAML for
the last months. You might be interested by our experience.

I think first that you can forget ocamltk. It is superseded by LablTk, and the
optional argument feature of OCaml3 is extremely pleasant to use in this
context.

We haven't tested mlgtk. We choosed lablgtk as it is developped by Jacques
Garrigue. It was, for us, a guarantee of good integration with the language.
But mlgtk is probably excellent also.

Our personal opinion would be:
1) If you have no performance problems, labltk is extremely simple to use.
2) Lablgtk is much more efficient and more complex. There might be still some
bugs (?), and you need to invest LOT of your time to learn to do what you want
to do. GTK documentation is quite sparse, and lablgtk documentation is even
sparser. But it is really fast and extremely rich. We have developped a  quite
complex GUI (complete representation of french airspace with ATC sectors etc).
It was painful because of the lack of documentation, but the result is
completely satisfactory regarding performance, and nice to see...



JMA



