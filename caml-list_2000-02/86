Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA21123 for caml-redistribution@pauillac.inria.fr; Tue, 22 Feb 2000 18:53:23 +0100 (MET)
Resent-Message-Id: <200002221753.SAA21123@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA00381 for <caml-list@pauillac.inria.fr>; Tue, 22 Feb 2000 15:45:00 +0100 (MET)
Received: from mail5.svr.pol.co.uk (mail5.svr.pol.co.uk [195.92.193.20])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id PAA13926
	for <caml-list@inria.fr>; Tue, 22 Feb 2000 15:44:54 +0100 (MET)
Received: from modem-179.fluvoxamine.dialup.pol.co.uk ([62.136.207.179] helo=toy.william.bogus)
	by mail5.svr.pol.co.uk with esmtp (Exim 3.13 #0)
	id 12NGYW-0003F6-00
	for caml-list@inria.fr; Tue, 22 Feb 2000 14:44:53 +0000
Received: (from williamc@localhost)
	by toy.william.bogus (8.8.7/8.8.7) id LAA08806;
	Tue, 22 Feb 2000 11:41:06 GMT
Date: Tue, 22 Feb 2000 11:41:06 GMT
Message-Id: <200002221141.LAA08806@toy.william.bogus>
From: William Chesters <williamc@paneris.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
To: caml-list@inria.fr
Subject: Re: Preferred GUI Toolkit for O'Caml 3? 
In-Reply-To: <6830.951153768@saul.cis.upenn.edu>
References: <14509.20226.13985.265187@heplix4.ikp.physik.tu-darmstadt.de>
	<6830.951153768@saul.cis.upenn.edu>
X-Mailer: VM 6.34 under Emacs 20.2.1
Resent-From: weis@pauillac.inria.fr
Resent-Date: Tue, 22 Feb 2000 18:53:23 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

Benjamin C. Pierce writes:
 > We in the Unison group are also about to embark on a major UI redesign
 > and have been wondering which toolkit to use.  Besides Thorsten's
 > points, there are two more that are critical concerns for us:
 > 
 >    * seamless portability (Unix and Win32)
 >    * ability to build statically linked binaries (this is a pretty
 >      big drawback to the Tk-based solutions)
 > 
 > Comments on these points as well as the others would be very useful. 

There's always QT.  It's nice to work with (at least in C++), very
widely used and comprehensive (because of KDE), and was written from
the start to be cross-platform (X & Win).  NB it is uncontroversially
free these days.


