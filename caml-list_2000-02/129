Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA23721 for caml-redistribution@pauillac.inria.fr; Tue, 29 Feb 2000 00:05:54 +0100 (MET)
Resent-Message-Id: <200002282305.AAA23721@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA08802 for <caml-list@pauillac.inria.fr>; Sat, 26 Feb 2000 07:10:27 +0100 (MET)
Received: from www.nextsolution.co.jp (www.nextsolution.co.jp [202.33.212.2])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id HAA27116
	for <caml-list@inria.fr>; Sat, 26 Feb 2000 07:10:24 +0100 (MET)
Received: from sparc1.nextsolution.co.jp (sparc1 [202.235.80.1])
	by www.nextsolution.co.jp (8.9.3/3.7W) with SMTP id PAA20699;
	Sat, 26 Feb 2000 15:07:06 +0900 (JST)
Received: from sparc1.nextsolution.co.jp by sparc1.nextsolution.co.jp (SMI-8.6/SMI-SVR4)
	id PAA01942; Sat, 26 Feb 2000 15:10:57 +0900
From: "Frank A. Christoph" <christo@nextsolution.co.jp>
To: "Claudio Sacerdoti Coen" <sacerdot@students.cs.unibo.it>,
        <caml-list@inria.fr>
Subject: RE: symbol managment in Caml
Date: Sat, 26 Feb 2000 15:13:25 +0900
Message-ID: <000101bf8020$973365a0$0150ebca@nextsolution.co.jp>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook 8.5, Build 4.71.2173.0
In-Reply-To: <20000225181006.A18284@students.cs.unibo.it>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600
Resent-From: weis@pauillac.inria.fr
Resent-Date: Tue, 29 Feb 2000 00:05:54 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

[re: hashing identifiers]
>  I have had the same problem and I was about to write the
>  new function when I stopped: the time taken by the hash
>  function was not worth the extra coding.

Even if it takes more, or as much, time as comparing identifiers directly,
there is still an advantage to interning strings: you can share their
representations. Of course, if you don't expect much sharing, or you don't
expect to allocate many identifiers during any single run, it may still not
be worht it.

--fac


