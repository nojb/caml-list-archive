Return-Path: <petchema@concept-micro.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id B9EE6BC6B
	for <caml-list@yquem.inria.fr>; Tue,  5 Jun 2007 00:44:21 +0200 (CEST)
Received: from ns.graphicgalerie.com (ns.graphicgalerie.com [88.191.26.11])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l54MiLDs001403
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 5 Jun 2007 00:44:21 +0200
Received: from polo.concept-micro.com (ABordeaux-103-1-3-141.w80-15.abo.wanadoo.fr [80.15.128.141])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by ns.graphicgalerie.com (Postfix) with ESMTP id 9A8EEE1C001
	for <caml-list@yquem.inria.fr>; Tue,  5 Jun 2007 00:44:16 +0200 (CEST)
Date: Tue, 5 Jun 2007 00:44:13 +0200
From: Pierre =?ISO-8859-15?B?RXRjaGVtYe906Q==?= <petchema@concept-micro.com>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Comparison of OCaml and MLton for numerics
Message-Id: <20070605004413.5987faf5.petchema@concept-micro.com>
In-Reply-To: <1180980488.6220.18.camel@rosella.wigram>
References: <5195a210705302250u6a9e5adey4ed857480f9e5cd8@mail.gmail.com>
	<200706011813.48515.jon@ffconsultancy.com>
	<46641BC1.9090305@cs.umd.edu>
	<200706041539.03286.jon@ffconsultancy.com>
	<1180980488.6220.18.camel@rosella.wigram>
Organization: Concept Micro 33 SARL
X-Mailer: Sylpheed version 2.3.0beta5 (GTK+ 2.8.20; i486-pc-linux-gnu)
X-TRP: honey@concept-micro.com
X-Face: "1<D_YW=(Z@$kl':M7Gci`gAa"U.$bCElfWd@{578%xR_9MHE`RMTfG%f.dMf^xIS("~Dw$
 sCx~,%u0+T^YTq]o
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-15
Content-Transfer-Encoding: 8bit
X-Miltered: at concorde with ID 466495C5.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 0100,:01 arrays:01 amortized:01 ocaml:01 sdu:01 sourceforge:01 sourceforge:01 wrote:01 wrote:01 caml-list:01 binary:01 pierre:02 implemented:02 tree:02 

Le Tue, 05 Jun 2007 04:08:08 +1000, skaller <skaller@users.sourceforge.net> a écrit :

> On Mon, 2007-06-04 at 15:39 +0100, Jon Harrop wrote:
> 
> > A functional array implemented as a balanced binary tree needs the number of 
> > elements (size) of a sub tree just to index into the tree. 
> 
> It might be worth considering a functional version of Judy arrays:
> 
> http://judy.sourceforge.net/

The VList looks interesting too: O(1) operations (amortized), and
functional; Someone even already wrote a pure OCaml implementation:

http://www.imada.sdu.dk/~bardur/personal/45-programs/

