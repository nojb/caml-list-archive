Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id E5997BC0A
	for <caml-list@yquem.inria.fr>; Tue,  5 Jun 2007 12:37:25 +0200 (CEST)
Received: from pih-relay05.plus.net (pih-relay05.plus.net [212.159.14.132])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l55AbP0t026798
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 5 Jun 2007 12:37:25 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay05.plus.net with esmtp (Exim) id 1HvWPg-0005j1-5M
	for caml-list@yquem.inria.fr; Tue, 05 Jun 2007 11:37:22 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Comparison of OCaml and MLton for numerics
Date: Tue, 5 Jun 2007 11:30:57 +0100
User-Agent: KMail/1.9.7
References: <5195a210705302250u6a9e5adey4ed857480f9e5cd8@mail.gmail.com> <20070605004413.5987faf5.petchema@concept-micro.com> <200706050242.15644.jon@ffconsultancy.com>
In-Reply-To: <200706050242.15644.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Message-Id: <200706051130.57778.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 46653CE5.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 amortized:01 ocaml:01 arrays:01 frog:98 wrote:01 wrote:01 caml-list:01 binary:01 pierre:02 functional:02 functional:02 balanced:04 comparison:04 probably:07 

On Tuesday 05 June 2007 02:42:15 Jon Harrop wrote:
> On Monday 04 June 2007 23:44:13 Pierre Etchema=EFt=E9 wrote:
> > The VList looks interesting too: O(1) operations (amortized), and
> > functional; Someone even already wrote a pure OCaml implementation:
>
> Looks like a skip list with arrays instead of trees.

Incidentally, I should probably explain that I like the idea of a functiona=
l=20
array based upon balanced binary trees because it allows fast concatenation=
=20
and subarrays.

=2D-=20
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
OCaml for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists/?e

