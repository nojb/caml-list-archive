Return-Path: <tf@functionality.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 1A991BC6B
	for <caml-list@yquem.inria.fr>; Fri, 29 Jun 2007 12:55:31 +0200 (CEST)
Received: from moutng.kundenserver.de (moutng.kundenserver.de [212.227.126.186])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5TAtUte007226
	for <caml-list@yquem.inria.fr>; Fri, 29 Jun 2007 12:55:30 +0200
Received: from [141.84.136.30] (helo=[152.78.96.56])
	by mrelayeu.kundenserver.de (node=mrelayeu5) with ESMTP (Nemesis),
	id 0ML25U-1I4E8P2h0v-0006J5; Fri, 29 Jun 2007 12:55:29 +0200
Message-ID: <4684E534.3020900@functionality.de>
Date: Fri, 29 Jun 2007 11:55:48 +0100
From: Thomas Fischbacher <tf@functionality.de>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.12) Gecko/20060607 Debian/1.7.12-1.2
X-Accept-Language: en
MIME-Version: 1.0
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] The Implicit Accumulator: a design pattern using
 optional arguments
References: <200706271314.35134.jon@ffconsultancy.com>	<20070628172029.GA6796@feanor> <46843252.60608@functionality.de> <200706290210.19621.jon@ffconsultancy.com>
In-Reply-To: <200706290210.19621.jon@ffconsultancy.com>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Provags-ID: V01U2FsdGVkX1+OnkSJPmgLGZnoSdA3TfvSYVNbA2Q6hJCd2Og
 S8sfs7XiR3/ruTjkyPjO2MJgGI05DzUft13hkrYTnf3JUNVPYG
 rqZP5NCd6kkmz+mQ8mMNw==
X-Miltered: at concorde with ID 4684E522.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; evidently:01 oleg:01 ocaml:01 wrote:01 caml-list:01 implicit:03 pattern:04 hack:05 accumulator:05 arguments:07 optional:09 top:89 kind:13 isn't:14 but:14 

Jon Harrop wrote:

> Is this the kind of thing you're after:
> 
>   http://okmij.org/ftp/ML/#dynvar

Wait a second...

Evidently, you can do tricks like that once you have some handle on the
continuation (this is how Oleg does it). But as far as I can see, this
will require Delimcc. Isn't that a bytecode-only thing, and also a
non-officially-supported hack on top of the OCaml system?

-- 
best regards,
Thomas Fischbacher
tf@functionality.de

