Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 4E0EDBC69
	for <caml-list@yquem.inria.fr>; Sat,  2 Jun 2007 01:33:58 +0200 (CEST)
Received: from ipmail03.adl2.internode.on.net (ipmail03.adl2.internode.on.net [203.16.214.135])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l51NXufT008092
	for <caml-list@yquem.inria.fr>; Sat, 2 Jun 2007 01:33:57 +0200
X-IronPort-AV: E=Sophos;i="4.16,374,1175437800"; 
   d="scan'208";a="97812287"
Received: from ppp9-14.lns1.syd7.internode.on.net (HELO [192.168.1.201]) ([59.167.9.14])
  by ipmail03.adl2.internode.on.net with ESMTP; 02 Jun 2007 09:03:55 +0930
Subject: Re: [Caml-list] Comparison of OCaml and MLton for numerics
From: skaller <skaller@users.sourceforge.net>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <200706011752.04504.jon@ffconsultancy.com>
References: <5195a210705302250u6a9e5adey4ed857480f9e5cd8@mail.gmail.com>
	 <3d13dcfc0706010449k53f1c364gfd4db47c7c258725@mail.gmail.com>
	 <1180708903.4140.23.camel@rosella.wigram>
	 <200706011752.04504.jon@ffconsultancy.com>
Content-Type: text/plain
Date: Sat, 02 Jun 2007 09:33:53 +1000
Message-Id: <1180740833.5142.29.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 4660ACE4.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 0100,:01 optimising:01 compiler:01 compiler:01 ocaml:01 prototyping:01 compilation:01 sourceforge:01 wrote:01 wrote:01 preprocessor:01 caml-list:01 optimizing:02 comparison:04 

On Fri, 2007-06-01 at 17:52 +0100, Jon Harrop wrote:
> On Friday 01 June 2007 15:41:43 skaller wrote:
> > Paying 4 times more dollars for a CPU that is twice as fast is a
> > very expensive solution compared to an optimising compiler ..
> 
> Much more cost effective to implement more effective compiler features in 
> house. All you need is the author of an excellent whole-program optimizing 
> compiler for some related language.

Or you could make an SML->Ocaml preprocessor .. allowing
rapid prototyping with Ocaml and production compilation with
another tool.

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

