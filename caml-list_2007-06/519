Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 66AE6BC6B
	for <caml-list@yquem.inria.fr>; Wed, 27 Jun 2007 20:11:56 +0200 (CEST)
Received: from pih-relay04.plus.net (pih-relay04.plus.net [212.159.14.131])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5RIBtLU020036
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Wed, 27 Jun 2007 20:11:56 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay04.plus.net with esmtp (Exim) id 1I3bzf-00019b-Br
	for caml-list@yquem.inria.fr; Wed, 27 Jun 2007 19:11:55 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] The Implicit Accumulator: a design pattern using optional arguments
Date: Wed, 27 Jun 2007 19:06:07 +0100
User-Agent: KMail/1.9.7
References: <200706271314.35134.jon@ffconsultancy.com> <46828488.3000006@SmokejumperIT.com> <200706271548.l5RFmiS04436@virtutech.se>
In-Reply-To: <200706271548.l5RFmiS04436@virtutech.se>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Message-Id: <200706271906.07626.jon@ffconsultancy.com>
X-Miltered: at discorde with ID 4682A86B.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; mattias:01 ocaml:01 compiler:01 arrays:01 variants:01 ocaml:01 frog:98 polymorphic:01 wrote:01 caml-list:01 strings:01 strings:01 match:02 slightly:03 implicit:03 

On Wednesday 27 June 2007 16:48:44 Mattias Engdeg=E5rd wrote:
> The cost is a slightly clumsier use of symbols as strings (Symbol.str),
> but my feeling is that the extra safety is worth it.

That is exactly what I did. Also, you cannot pattern match over the Sym.t b=
ut=20
I believe the OCaml compiler doesn't optimize pattern matches over strings=
=20
anyway.

Incidentally, can we add this to the list of wanted optimizations: O(log n)=
=20
matching of strings, arrays and polymorphic variants.

=2D-=20
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
The OCaml Journal
http://www.ffconsultancy.com/products/ocaml_journal/?e

