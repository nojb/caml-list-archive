Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id D2EFABC6C
	for <caml-list@yquem.inria.fr>; Wed, 27 Jun 2007 19:54:12 +0200 (CEST)
Received: from ptb-relay03.plus.net (ptb-relay03.plus.net [212.159.14.214])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5RHsCDf008323
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Wed, 27 Jun 2007 19:54:12 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay03.plus.net with esmtp (Exim) id 1I3biV-00085l-1T
	for caml-list@yquem.inria.fr; Wed, 27 Jun 2007 18:54:12 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Book about functional design patterns
Date: Wed, 27 Jun 2007 18:48:19 +0100
User-Agent: KMail/1.9.7
References: <200706271314.35134.jon@ffconsultancy.com> <F2BC247F-45B1-4BD3-A006-D214D635ABC6@lrde.epita.fr> <20070627191633.73ab011a@kerneis.info>
In-Reply-To: <20070627191633.73ab011a@kerneis.info>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200706271848.20039.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 4682A444.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; amortized:01 ocaml:01 ocaml:01 frog:98 wrote:01 caml-list:01 lazy:02 data:02 data:02 purely:02 structures:02 structures:02 functional:02 functional:02 hints:04 

On Wednesday 27 June 2007 18:16:33 Gabriel Kerneis wrote:
> _Purely functional data structures_ by Chris Osaki might interest you.
> It's a very good book, covering lazy evaluation and persistent
> amortized data structures (among other things). Moreover, it does
> insist on optimizations (often left as exercises to the reader, with
> enough hints to be easy to figure out).

That is certainly an excellent book and is recommended reading for any 
OCamler, but it isn't specific to the OCaml language and doesn't cover many 
of the things that I would consider to be OCaml design patterns (like the one 
I just posted).

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
The OCaml Journal
http://www.ffconsultancy.com/products/ocaml_journal/?e

