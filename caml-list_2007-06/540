Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 65BF2BC6B
	for <caml-list@yquem.inria.fr>; Thu, 28 Jun 2007 01:03:42 +0200 (CEST)
Received: from ptb-relay01.plus.net (ptb-relay01.plus.net [212.159.14.212])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5RN3dep006359
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Thu, 28 Jun 2007 01:03:42 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay01.plus.net with esmtp (Exim) id 1I3gXz-0002EY-IB
	for caml-list@yquem.inria.fr; Thu, 28 Jun 2007 00:03:39 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] The Implicit Accumulator: a design pattern using optional arguments
Date: Wed, 27 Jun 2007 23:57:53 +0100
User-Agent: KMail/1.9.7
References: <200706271314.35134.jon@ffconsultancy.com> <200706271906.07626.jon@ffconsultancy.com> <4682AD06.9080008@janestcapital.com>
In-Reply-To: <4682AD06.9080008@janestcapital.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200706272357.53682.jon@ffconsultancy.com>
X-Miltered: at discorde with ID 4682ECCB.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocamllex:01 bytecode:01 compiler:01 invokes:01 bytecode:01 stack:01 ocaml:01 ocaml:01 frog:98 wrote:01 caml-list:01 dynamic:03 implicit:03 pattern:04 accumulator:05 

On Wednesday 27 June 2007 19:31:34 you wrote:
> In other words, something like ocamllex, except dynamic.

Am I right in remembering that Str uses a regexp->bytecode compiler that 
invokes an interpreter written in C?

If so, assuming you can represent it in the current bytecode maybe you can 
implement this with the current tool stack?

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
The OCaml Journal
http://www.ffconsultancy.com/products/ocaml_journal/?e

