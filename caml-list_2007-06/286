Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 3E9BEBC0A
	for <caml-list@yquem.inria.fr>; Sat, 16 Jun 2007 19:59:41 +0200 (CEST)
Received: from ipmail03.adl2.internode.on.net (ipmail03.adl2.internode.on.net [203.16.214.135])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5GHxcK6013622
	for <caml-list@yquem.inria.fr>; Sat, 16 Jun 2007 19:59:40 +0200
X-IronPort-AV: E=Sophos;i="4.16,430,1175437800"; 
   d="scan'208";a="103856225"
Received: from ppp2-129.lns1.syd7.internode.on.net (HELO [192.168.1.201]) ([59.167.2.129])
  by ipmail03.adl2.internode.on.net with ESMTP; 17 Jun 2007 03:29:37 +0930
Subject: Re: [Caml-list] Dynamic linking
From: skaller <skaller@users.sourceforge.net>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <200706161833.32255.jon@ffconsultancy.com>
References: <4672B855.7040103@inria.fr> <4672C3BB.3040106@janestcapital.com>
	 <4672D954.7080208@inria.fr>  <200706161833.32255.jon@ffconsultancy.com>
Content-Type: text/plain
Date: Sun, 17 Jun 2007 03:59:33 +1000
Message-Id: <1182016773.553.64.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 4674250A.005 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; 0100,:01 frisch:01 toplevel:01 ocaml's:01 native-code:01 toplevel:01 ledit:01 emacs:01 emacs:01 sourceforge:01 wrote:01 wrote:01 typing:01 caml-list:01 natively:01 

On Sat, 2007-06-16 at 18:33 +0100, Jon Harrop wrote:
> On Friday 15 June 2007 19:24:20 Alain Frisch wrote:
> > Except for the native toplevel which will probably not be included.
> 
> The native top-level is the bit that interests me the most, as this combines 
> interactivity with OCaml's superb native-code performance.

I do not understand how the toplevel is even remotely useful:
it isn't "interactive" in any real sense of the word.

Natively you can't even edit lines, it's very lame.
Even with ledit, what you can do is very limited.

I fail to see how this is any better than preparing
a file and compiling it -- that way you get a proper
editor. If you're using emacs or some other souped up
editor it works much like an interactive IDE anyhow,
only better..

So exactly what is the advantage of the top level?

Yes, I use it occasionally for testing 1-2 line
fragments, mainly the typing, but i just can't
envisage how a ray tracer could be use productively
in such an environment, as compared to just making
a suitable file and compiling and running it.

It IS a bit of a pain, setting up the build environment
to do that, but I can't imagine it's that hard to automate
with something like emacs, or one of the make systems.


-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

