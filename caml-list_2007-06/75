Return-Path: <oliver@first.in-berlin.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id EA35ABC0A;
	Mon,  4 Jun 2007 15:58:01 +0200 (CEST)
Received: from einhorn.in-berlin.de (einhorn.in-berlin.de [192.109.42.8])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l54Dw0XE026003
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL);
	Mon, 4 Jun 2007 15:58:01 +0200
X-Envelope-From: oliver@first.in-berlin.de
Received: from first (dslb-088-073-120-196.pools.arcor-ip.net [88.73.120.196])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id l54Dvvoj014035;
	Mon, 4 Jun 2007 15:57:58 +0200
Received: by first (Postfix, from userid 501)
	id 256F43D3192; Mon,  4 Jun 2007 15:57:44 +0200 (CEST)
Date: Mon, 4 Jun 2007 15:57:43 +0200
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@inria.fr
Cc: Yaron Minsky <yminsky@cs.cornell.edu>,
	skaller <skaller@users.sourceforge.net>,
	Luc Maranget <luc.maranget@inria.fr>
Subject: Re: [Caml-list] JoCaml Released.
Message-ID: <20070604135743.GA340@first.in-berlin.de>
References: <20070604085744.GA4654@yquem.inria.fr> <891bd3390706040513r398a8415r4d790c6040ed200@mail.gmail.com> <1180960734.11351.135.camel@rosella.wigram>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1180960734.11351.135.camel@rosella.wigram>
User-Agent: Mutt/1.5.6i
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
X-Miltered: at discorde with ID 46641A69.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; bandel:01 in-berlin:01 jocaml:01 yaron:01 minsky:01 jocaml:01 ocaml:01 syntax:01 implements:01 lambda:01 wrote:01 wrote:01 oliver:01 oliver:01 caml-list:01 

On Mon, Jun 04, 2007 at 10:38:54PM +1000, skaller wrote:
> On Mon, 2007-06-04 at 08:13 -0400, Yaron Minsky wrote:
> > A couple of questions:
> >       * Why is it that JoCaml is a full OCaml distribution as opposed
> >         to just a set of libraries plus a syntax extension. 
> 
> JoCaml implements the join calculus, which subsumes lambda
> calculus.. so you have asked the wrong question.
[...]

Is the join calcuclus a monocontextural calculus (as I assume)?

How can the join calculus (and distributed processes) be expressed
using Gotthard Guenthers polycontextural logic?

Is there any research on this topic?

As far as I know only polycontextural logic can express
parallel, distributed systems (and selfreference) in a complete/total way.
So, when join calculus is monocontextural (which it is, if it uses
the math we all have learned) it will be a subsystem
of what can be expressed with polycontextural logic.

It would be fine to have some explanations here, on what
the join calculus is capable of.


Ciao,
   Oliver

