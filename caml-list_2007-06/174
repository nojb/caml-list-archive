Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id F0F29BC0A
	for <caml-list@yquem.inria.fr>; Fri,  8 Jun 2007 12:32:56 +0200 (CEST)
Received: from ipmail03.adl2.internode.on.net (ipmail03.adl2.internode.on.net [203.16.214.135])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l58AWsKE016718
	for <caml-list@inria.fr>; Fri, 8 Jun 2007 12:32:56 +0200
X-IronPort-AV: E=Sophos;i="4.16,399,1175437800"; 
   d="scan'208";a="100741274"
Received: from ppp2-129.lns1.syd7.internode.on.net (HELO [192.168.1.201]) ([59.167.2.129])
  by ipmail03.adl2.internode.on.net with ESMTP; 08 Jun 2007 20:02:53 +0930
Subject: Re: [Caml-list] Labelling trees
From: skaller <skaller@users.sourceforge.net>
To: Till Varoquaux <till.varoquaux@gmail.com>
Cc: David Teller <David.Teller@univ-orleans.fr>,
	OCaml <caml-list@inria.fr>
In-Reply-To: <9d3ec8300706080252g788deda5q1ee66a2e2873e6a1@mail.gmail.com>
References: <1181158983.9266.12.camel@Blefuscu>
	 <1181178046.6546.54.camel@rosella.wigram>
	 <9d3ec8300706070726o3ed62650ob73c832fdfa92617@mail.gmail.com>
	 <1181257757.15201.27.camel@rosella.wigram>
	 <9d3ec8300706080252g788deda5q1ee66a2e2873e6a1@mail.gmail.com>
Content-Type: text/plain
Date: Fri, 08 Jun 2007 20:32:52 +1000
Message-Id: <1181298772.6125.4.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 46693056.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; 0200,:01 0200,:01 hash:01 hashing:01 hashing:01 parametrized:01 hashtable:01 sourceforge:01 sourceforge:01 wrote:01 wrote:01 caml-list:01 data:02 fri:05 thu:05 

On Fri, 2007-06-08 at 11:52 +0200, Till Varoquaux wrote:
> On 6/8/07, skaller <skaller@users.sourceforge.net> wrote:
> > On Thu, 2007-06-07 at 16:26 +0200, Till Varoquaux wrote:
> 
> > True, but the hash required would be unstable.
> >
> > Hashing or comparing using the value of a term as a key
> > is no good. It's too slow.
> 
> Hashing doesn't read the whole structure, it can be parametrized to
> read less data. Do you really see a performance boost using addresses
> instead?

I have no idea because you can't.. what I did see when i tried
map terms to values (using hashtable) .. was a slowdown ;(

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

