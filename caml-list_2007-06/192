Return-Path: <av1474@comtv.ru>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.6 required=5.0 tests=AWL,SUBJ_ALL_CAPS 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 70E01BC69
	for <caml-list@yquem.inria.fr>; Sun, 10 Jun 2007 14:27:18 +0200 (CEST)
Received: from comtv.ru (comtv.ru [217.10.32.17])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5ACRHsI000999
	for <caml-list@inria.fr>; Sun, 10 Jun 2007 14:27:18 +0200
X-UCL: actv
Received: from av1474.oops ([10.0.66.9] verified)
  by comtv.ru (CommuniGate Pro SMTP 4.1.8)
  with ESMTP-TLS id 48737440 for caml-list@inria.fr; Sun, 10 Jun 2007 16:27:15 +0400
Date: Sun, 10 Jun 2007 16:25:03 +0400 (MSD)
From: malc <av1474@comtv.ru>
X-X-Sender: malc@linmac.oyster.ru
To: caml-list@inria.fr
Subject: [ANNOUNCE]: APC 1.0
Message-ID: <Pine.LNX.4.64.0706101602300.2750@linmac.oyster.ru>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed
X-j-chkmail-Score: MSGID : 466BEE25.002 on concorde : j-chkmail score : X : 0/20 1 0.000 -> 1
X-Miltered: at concorde with ID 466BEE25.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; malc:01 malc:01 ocaml:01 1.0:98 vale:98 kernel:01 kernel:01 native:02 seems:03 seems:03 readme:03 solaris:04 problem:05 i'd:05 extension:05 

Hello,

At http://www.boblycat.org/~malc/apc/ you will find CPU load monitor
written in OCaml (sans some C glue).

New things since last announcement include:

The site was updated with a bit more sane documentation along with
few links to Linux kernel mailing list discussions on the subject that
would explain why sometimes native accounting can not be trusted (since
2.6.21 you can find a summary in Documentation/cpu-load.txt) There's
also a small test application that showcases the problem.

Ports to:
  Windows NT
  Mac OS X (only UP/PPC tested)
  Solaris (only X86 tested).

While Solaris' CPU accounting seems accurate the same can not be said
about Mac OS X and NT. With a help of third party application one can
even begin to trust the accounting on NT (consult README.windows). So
Mac OS X is in the most dire state at the moment. I'd imagine that
writing XNU/X86 kernel extension to do more or less what's done under
NT/X86 would be rather easy (alas i don't have access to this kind of
system), XNU/PPC it seems would require completely different approach.

Any help with NT, XNU would be greatly appreciated.

-- 
vale

