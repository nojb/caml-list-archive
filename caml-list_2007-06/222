Return-Path: <jeremy.yallop@ed.ac.uk>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id DB856BC0A
	for <caml-list@yquem.inria.fr>; Wed, 13 Jun 2007 14:24:30 +0200 (CEST)
Received: from bdmail1.accesst.com (pop.bulldoghome.com [83.245.1.230])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5DCOUtN002108
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Wed, 13 Jun 2007 14:24:30 +0200
Received: from host-84-9-232-186.bulldogdsl.com ([84.9.232.186] helo=[192.168.123.191])
	by bdmail1.accesst.com with esmtpa (Exim 4.50)
	id 1HyRoo-0002cw-K0
	for caml-list@inria.fr; Wed, 13 Jun 2007 13:19:22 +0100
Message-ID: <466FE042.10000@ed.ac.uk>
Date: Wed, 13 Jun 2007 13:17:06 +0100
From: Jeremy Yallop <jeremy.yallop@ed.ac.uk>
User-Agent: Mozilla-Thunderbird 2.0.0.0 (X11/20070601)
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: [Caml-list] camlp4 3.10 and ints
References: <20070613114043.GA14594@furbychan.cocan.org>
In-Reply-To: <20070613114043.GA14594@furbychan.cocan.org>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 466FE1FE.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; camlp:01 camlp:01 integers:01 integers:01 wrote:01 integer:01 caml-list:01 ints:01 int:01 int:01 string:02 string:02 seems:03 mistaken:04 3.09:08 

Richard Jones wrote:
> $int:...$ expects a string instead of an int.  I can live with this,
> but it seems a bit strange, and unless I'm mistaken is different from
> what camlp4 <= 3.09 did.

The old camlp4 did this as well.  The new one has an extra feature, 
though: there's an antiquotation

    $`int:...$

which expects an int.

> Secondly, I get the error 'Failure: "Integer literal exceeds the range
> of representable integers of type int"' if I try to pass a string
> containing any int32 or int64 literal, eg. $int:"0x3ffL"$, even ones
> which obviously do not exceed the range of representable integers.

For int32 and int64 there are antiquotations $int32:...$, $`int3:...$, etc.

Jeremy.

