Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 39A26BC6C
	for <caml-list@yquem.inria.fr>; Mon, 25 Jun 2007 18:03:59 +0200 (CEST)
Received: from ptb-relay02.plus.net (ptb-relay02.plus.net [212.159.14.213])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5PG3wu6009548
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Mon, 25 Jun 2007 18:03:59 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay02.plus.net with esmtp (Exim) id 1I2r2i-0002Se-Op
	for caml-list@yquem.inria.fr; Mon, 25 Jun 2007 17:03:57 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Function inlining and functor
Date: Mon, 25 Jun 2007 16:58:04 +0100
User-Agent: KMail/1.9.7
References: <B7781FA7-8E67-48C0-8F3B-09AB58EF3E4E@lrde.epita.fr> <467FE228.5040907@starynkevitch.net> <09C0AA9F-2021-49B5-89EB-B525A1757446@lrde.epita.fr>
In-Reply-To: <09C0AA9F-2021-49B5-89EB-B525A1757446@lrde.epita.fr>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Message-Id: <200706251658.04780.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 467FE76E.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; inlining:01 functor:01 functor:01 compilation:01 ocaml:01 compiler:01 ocaml:01 frog:98 wrote:01 inline:01 caml-list:01 missing:07 missing:07 function:08 function:08 

On Monday 25 June 2007 16:50:03 Qu=F4c Peyrot wrote:
> But in the functor example, what is missing during the compilation to
> be able to inline it?

The thing that is missing is the code in the OCaml compiler than inlines th=
ese=20
function calls. :-)

This was one of the demands on the "what optimizations would we like" list=
=20
that was discussed here recently.

=2D-=20
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
The OCaml Journal
http://www.ffconsultancy.com/products/ocaml_journal/?e

