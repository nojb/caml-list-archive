Return-Path: <olsongt@verizon.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: ***
X-Spam-Status: No, score=3.0 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE,
	DNS_FROM_RFC_POST,NO_REAL_NAME,SPF_NEUTRAL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 92AE6BC6B
	for <caml-list@yquem.inria.fr>; Thu, 28 Jun 2007 19:10:34 +0200 (CEST)
Received: from vms044pub.verizon.net (vms044pub.verizon.net [206.46.252.44])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5SHAXsB002723
	for <caml-list@yquem.inria.fr>; Thu, 28 Jun 2007 19:10:34 +0200
Received: from vms171.mailsrvcs.net ([192.168.1.2])
 by vms044.mailsrvcs.net (Sun Java System Messaging Server 6.2-6.01 (built Apr
 3 2006)) with ESMTPA id <0JKC003J2VPCNBV0@vms044.mailsrvcs.net> for
 caml-list@yquem.inria.fr; Thu, 28 Jun 2007 12:10:25 -0500 (CDT)
Received: from 66.212.151.230 ([66.212.151.230])
 by vms171.mailsrvcs.net (Verizon Webmail) with HTTP; Thu,
 28 Jun 2007 12:10:23 -0500 (CDT)
Date: Thu, 28 Jun 2007 12:10:23 -0500 (CDT)
From: <olsongt@verizon.net>
Subject: Re: Re: [Caml-list] Waiting for float time
X-Originating-IP: [66.212.151.230]
To: caml-list@yquem.inria.fr
Message-id: <2314909.6276031183050624963.JavaMail.root@vms171.mailsrvcs.net>
MIME-version: 1.0
Content-type: text/plain; charset=UTF-8
Content-transfer-encoding: 7bit
X-Miltered: at concorde with ID 4683EB89.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 work-around:01 verizon:98 folklore:98 unix:01 unix:01 caml-list:01 float:03 let:03 hack:05 reasoning:07 useful:08 i'm:09 maybe:10 issue:13 


>>  Sorry if I'm not a unix guru, but the fact is that I did not find the
>>  Unix.select solution.
> My point was: it's not an OCaml-related issue (which obviously is not
> the answer you expect).

But it is an OCaml related issue.  Pretty-much any language out there
will let you do a sub-second sleep.  The 'select' technique is a hack
(or work-around, I'll be polite).  I imagine anyone who knew the
answer knew it via folklore, that is someone else told them about it,
they didn't all figure it out on their own via intuitive reasoning.  That's how I found out about it.

Maybe a "Tricks & Tips" section on ocaml-tutorial would be useful.

