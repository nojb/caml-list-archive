Return-Path: <Alain.Frisch@inria.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 90DA7BC0A
	for <caml-list@yquem.inria.fr>; Wed, 13 Jun 2007 18:30:19 +0200 (CEST)
Received: from [128.93.11.101] (buzet.inria.fr [128.93.11.101])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5DGU4iO018207;
	Wed, 13 Jun 2007 18:30:05 +0200
Message-ID: <46701AFB.40403@inria.fr>
Date: Wed, 13 Jun 2007 18:27:39 +0200
From: Alain Frisch <Alain.Frisch@inria.fr>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: skaller <skaller@users.sourceforge.net>
Cc: caml-list@yquem.inria.fr,
	felix-impl <felix-impl@lists.sourceforge.net>,
	Rhythmic Fistman <rfistman@gmail.com>,
	Emmanuel Onzon <emmanuel.onzon@ens-lyon.fr>
Subject: Re: [Caml-list] cywgin stack overflow
References: <1181720072.23474.13.camel@rosella.wigram>	<1181738340.6135.6.camel@rosella.wigram>	<Pine.GSO.4.63.0706130858580.23164@access1.cims.nyu.edu>	<1181743209.6135.13.camel@rosella.wigram> <1181744198.6141.3.camel@rosella.wigram>
In-Reply-To: <1181744198.6141.3.camel@rosella.wigram>
X-Enigmail-Version: 0.95.1
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 46701B8C.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; frisch:01 frisch:01 stack:01 ocamlopt:01 ocamlopt:01 stack:01 ocaml:01 cygwin:01 mingw:01 segfault:01 wrote:01 caml-list:01 msvc:01 alain:01 alain:01 

skaller wrote:
> ocamlopt.opt: fails without message
> ocamlopt: fails with Stack overflow message

FYI, OCaml does not implement stack detection under Cygwin in native
code (contrary to MSVC and Mingw ports), so the difference of behavior
between ocamlopt and ocamlopt.opt is not suprising.  (I guess you get
the equivalent of a segfault with ocamlopt.opt, but maybe nothing is
printed.)

-- Alain

