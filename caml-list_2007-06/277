Return-Path: <Alain.Frisch@inria.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 355EFBC0A
	for <caml-list@yquem.inria.fr>; Sat, 16 Jun 2007 09:30:17 +0200 (CEST)
Received: from smtp3-g19.free.fr (smtp3-g19.free.fr [212.27.42.29])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5G7UGKN027723
	for <caml-list@yquem.inria.fr>; Sat, 16 Jun 2007 09:30:17 +0200
Received: from [192.168.0.1] (rke75-3-82-229-183-156.fbx.proxad.net [82.229.183.156])
	by smtp3-g19.free.fr (Postfix) with ESMTP id 99C205A0AF;
	Sat, 16 Jun 2007 09:30:16 +0200 (CEST)
Message-ID: <46739188.5060605@inria.fr>
Date: Sat, 16 Jun 2007 09:30:16 +0200
From: Alain Frisch <Alain.Frisch@inria.fr>
User-Agent: Thunderbird 2.0.0.4 (X11/20070604)
MIME-Version: 1.0
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Not really a bug but...
References: <200706160117.45971.jon@ffconsultancy.com>
In-Reply-To: <200706160117.45971.jon@ffconsultancy.com>
X-Enigmail-Version: 0.95.1
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 46739188.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; frisch:01 frisch:01 bug:01 semantics:01 literals:01 camlp:01 syntax:01 foobar:01 foobar:01 literals:01 abstractions:01 wrote:01 caml-list:01 immutable:01 strings:01 

Jon Harrop wrote:
> Any chance of changing the semantics of string literals so they aren't static?

A simple Camlp4 syntax extension is enough to turn any literal "foobar"
into String.copy "foobar". (Except it doesn't work because of format
strings.)  If it were done automatically, there would be a penalty for
the common case of immutable strings; to avoid it, you'd need to lift
constant literals out of abstractions, which is not very nice.

-- Alain

