Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id B79B2BC69
	for <caml-list@yquem.inria.fr>; Fri,  1 Jun 2007 16:41:51 +0200 (CEST)
Received: from ipmail03.adl2.internode.on.net (ipmail03.adl2.internode.on.net [203.16.214.135])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l51EfnfB001608
	for <caml-list@yquem.inria.fr>; Fri, 1 Jun 2007 16:41:50 +0200
X-IronPort-AV: E=Sophos;i="4.16,373,1175437800"; 
   d="scan'208";a="97706343"
Received: from ppp9-14.lns1.syd7.internode.on.net (HELO [192.168.1.201]) ([59.167.9.14])
  by ipmail03.adl2.internode.on.net with ESMTP; 02 Jun 2007 00:11:48 +0930
Subject: Re: [Caml-list] Comparison of OCaml and MLton for numerics
From: skaller <skaller@users.sourceforge.net>
To: David MENTRE <dmentre@linux-france.org>
Cc: Yaron Minsky <yminsky@cs.cornell.edu>,
	Alain Frisch <Alain.Frisch@inria.fr>, caml-list@yquem.inria.fr
In-Reply-To: <3d13dcfc0706010449k53f1c364gfd4db47c7c258725@mail.gmail.com>
References: <5195a210705302250u6a9e5adey4ed857480f9e5cd8@mail.gmail.com>
	 <200705311008.16662.jon@ffconsultancy.com>
	 <5195a210705310222p6aa8482fr70e7bf2b2b631b72@mail.gmail.com>
	 <200705311127.28639.jon@ffconsultancy.com> <465F3E8C.10404@inria.fr>
	 <1180660974.15528.126.camel@rosella.wigram> <465FAF0B.5060700@inria.fr>
	 <891bd3390706010429g2ac722bfmc6932b15393a62b9@mail.gmail.com>
	 <3d13dcfc0706010449k53f1c364gfd4db47c7c258725@mail.gmail.com>
Content-Type: text/plain
Date: Sat, 02 Jun 2007 00:41:43 +1000
Message-Id: <1180708903.4140.23.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4660302D.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 0200,:01 yaron:01 minsky:01 yminsky:01 functors:01 ocaml:01 optimising:01 compiler:01 overnight:98 sourceforge:01 wrote:01 caml-list:01 cornell:01 modules:02 

On Fri, 2007-06-01 at 13:49 +0200, David MENTRE wrote:
> Hello,
> 
> 2007/6/1, Yaron Minsky <yminsky@cs.cornell.edu>:
> > In other words,
> > factoring out with functors and modules is good style, but OCaml penalizes
> > you for it.
> 
> A naive and somewhat provocative question: is the performance penalty
> a real issue in your production code or just a known overhead that is
> easily solved by having a more powerful computer? 

Many calculations such as financial option pricing have 
performance exponential in lookahead time. These calculations are run 
regularly with varying parameters.

Being able to run the calculations with twice the number of 
parameter values in an overnight run is valuable, and gives
the finance house an edge over their competitors.

Paying 4 times more dollars for a CPU that is twice as fast is a 
very expensive solution compared to an optimising compiler ..
and if you paid this money you'd be even MORE inclined to want
to use optimised software to get best use out of your investment.

So, in my opinion .. yes, performance matters, and faster CPUs
don't really help. However the choice of a good language like
Ocaml is also made on the basis of programmer performance,
not just run time performance (otherwise Jane St would be writing
everything in assembler .. :)

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

