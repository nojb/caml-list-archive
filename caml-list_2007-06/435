Return-Path: <chojin@lrde.epita.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id B2E14BC6C
	for <caml-list@yquem.inria.fr>; Mon, 25 Jun 2007 17:50:05 +0200 (CEST)
Received: from smtp24.orange.fr (smtp24.orange.fr [193.252.22.26])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l5PFo5mV022323
	for <caml-list@yquem.inria.fr>; Mon, 25 Jun 2007 17:50:05 +0200
Received: from me-wanadoo.net (localhost [127.0.0.1])
	by mwinf2421.orange.fr (SMTP Server) with ESMTP id 388851C00086
	for <caml-list@yquem.inria.fr>; Mon, 25 Jun 2007 17:50:05 +0200 (CEST)
Received: from [192.168.1.162] (ALagny-153-1-15-87.w83-200.abo.wanadoo.fr [83.200.126.87])
	by mwinf2421.orange.fr (SMTP Server) with ESMTP id 0E2901C0008C
	for <caml-list@yquem.inria.fr>; Mon, 25 Jun 2007 17:50:05 +0200 (CEST)
X-ME-UUID: 20070625155005581.0E2901C0008C@mwinf2421.orange.fr
Mime-Version: 1.0 (Apple Message framework v752.2)
In-Reply-To: <467FE228.5040907@starynkevitch.net>
References: <B7781FA7-8E67-48C0-8F3B-09AB58EF3E4E@lrde.epita.fr>	<200706251622.21625.jon@ffconsultancy.com> <3C66712F-1267-42A5-9D08-BBB9D5D579B1@gmail.com> <467FE228.5040907@starynkevitch.net>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
Message-Id: <09C0AA9F-2021-49B5-89EB-B525A1757446@lrde.epita.fr>
Content-Transfer-Encoding: quoted-printable
From: =?ISO-8859-1?Q?Qu=F4c_Peyrot?= <chojin@lrde.epita.fr>
Subject: Re: [Caml-list] Function inlining and functor
Date: Mon, 25 Jun 2007 17:50:03 +0200
To: caml-list@yquem.inria.fr
X-Mailer: Apple Mail (2.752.2)
X-Miltered: at discorde with ID 467FE42D.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; lrde:01 inlining:01 functor:01 basile:01 metaocaml:01 metaocaml:01 ocaml:01 abstraction:01 runtime:01 functor:01 compilation:01 2007,:98 wrote:01 wrote:01 inline:01 


On Jun 25, 2007, at 5:41 PM, Basile STARYNKEVITCH wrote:

> Joel Reymont wrote:
>> How would MetaOCaml help here?
>
> You can generate code with MetaOcaml; in ordinary Ocaml (even =20
> fonctors) only function abstraction & application happens (without =20
> any code generation at "runtime").

But in the functor example, what is missing during the compilation to =20=

be able to inline it?

--=20
Best Regards,
Qu=F4c



