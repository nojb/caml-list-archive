Return-Path: <Julien.Signoles@cea.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.8 required=5.0 tests=AWL,SPF_SOFTFAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id C5ACDBC37
	for <caml-list@yquem.inria.fr>; Fri,  4 Sep 2009 14:49:56 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlUCANipoEqEpqxqmWdsb2JhbACbPwEBAQEBCAsKBxO9JIQbBYFY
X-IronPort-AV: E=Sophos;i="4.44,332,1249250400"; 
   d="scan'208";a="46022239"
Received: from cirse-out.extra.cea.fr ([132.166.172.106])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 04 Sep 2009 14:49:54 +0200
Received: from pisaure.intra.cea.fr (pisaure.intra.cea.fr [132.166.88.21])
	by cirse.extra.cea.fr (8.14.2/8.14.2/CEAnet-Internet-out-2.0) with ESMTP id n84CnrM3020770
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <caml-list@inria.fr>; Fri, 4 Sep 2009 14:49:53 +0200
Received: from muguet2.intra.cea.fr (muguet2.intra.cea.fr [132.166.192.7])
	by pisaure.intra.cea.fr (8.14.2/8.14.2) with ESMTP id n84CnrGX030833
	for <caml-list@inria.fr>; Fri, 4 Sep 2009 14:49:53 +0200
	(envelope-from Julien.Signoles@cea.fr)
Received: from [132.166.132.51] (is010215.intra.cea.fr [132.166.132.51])
	by muguet2.intra.cea.fr (8.13.8/8.13.8/CEAnet-Intranet-out-1.1) with ESMTP id n84CnqmU026778
	for <caml-list@inria.fr>; Fri, 4 Sep 2009 14:49:53 +0200
Message-ID: <4AA10CF0.7070403@cea.fr>
Date: Fri, 04 Sep 2009 14:49:52 +0200
From: Julien Signoles <Julien.Signoles@cea.fr>
User-Agent: Thunderbird 2.0.0.23 (X11/20090817)
MIME-Version: 1.0
To: caml list <caml-list@inria.fr>
Subject: Why don't use batteries
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; signoles:01 signoles:01 dependencies:01 camlp:01 camlp:01 stdlib:01 1.0:98 1.0:98 thank's:98 compile:01 experimental:01 naming:01 homogeneous:01 homogeneous:01 cea:01 

Hello,

Here are my personal reasons:

2) It's not 1.0 yet, I'll try it then
Changing "try" by "have another look at" ;-)

3) It makes my executables too big
Yes, even if it seems to be improved in a close future.

4) It's too hard to install (dependencies, godi failures)
Yes: pretty sure that it's not an issue for me but one for users of my 
own libraries/tools.

5) It's difficult to compile against
See point 4.

6) It doesn't work on my platform
See point 4.

7) It uses camlp4
Yes. I'm not a camlp4's fan (mostly for the same reasons that I'm not a 
batteries' fan and also because it's look like another dsl I prefer to 
don't use whenever possible).

8) Other (please explain)

8a) Not mature enough, so not usable for developing (what I would like 
to be) mature libraries/tools. I'm even not sure that "not yet 1.0" are 
the key point here since maturity is not just a question of naming: the 
latest Jane Street's core library is 0.5.3, I'm pretty sure it is mature 
enough and I'm pretty sure that batteries 1.5.3 will not be... I hope 
I'm wrong for the last part of the last sentence.

8b) I'd like to see what is stable, what is experimental, especially for 
big libraries like batteries.

8c) Not homogeneous enough.

8d) Not clear enough for me what is the targeted audience: seem to be 
first for students, now for any developers but still with a dedicated 
focus for students (hum, maybe not after all?).

8e) My point of view is that the Jane Street's core library looks like 
what I would like to have as an extension of the caml stdlib: mature 
enough, well tested, documented enough, homogeneous (with excellent 
conventions), easy to use, not too big, big enough to provide useful 
features.

Well guys, sorry: I'm quite critical with batteries here... But 
hopefully batteries will be improved in the future. I know that 
designing and implementing such a library is a very hard and 
time-consuming task. So thank's for your work and for doing your best 
for the caml community.

--
Julien

