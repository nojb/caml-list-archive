Return-Path: <kcheung@math.carleton.ca>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=DNS_FROM_RFC_ABUSE,
	NO_REAL_NAME autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id A906ABBAF
	for <caml-list@yquem.inria.fr>; Sat, 26 Sep 2009 02:46:07 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAKoBvUqGdRUV/2dsb2JhbADXf4QeBQ
X-IronPort-AV: E=Sophos;i="4.44,454,1249250400"; 
   d="scan'208";a="33561012"
Received: from pegasus.math.carleton.ca ([134.117.21.21])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 26 Sep 2009 02:45:53 +0200
Received: from pegasus.carleton.ca (pegasus.carleton.ca [127.0.0.1])
	by pegasus.math.carleton.ca (Postfix) with ESMTP id 646957FCB31
	for <caml-list@yquem.inria.fr>; Fri, 25 Sep 2009 20:45:50 -0400 (EDT)
Received: from 70.26.44.194
        (SquirrelMail authenticated user kcheung)
        by pegasus.carleton.ca with HTTP;
        Fri, 25 Sep 2009 20:45:50 -0400 (EDT)
Message-ID: <60914.70.26.44.194.1253925950.squirrel@pegasus.carleton.ca>
In-Reply-To: <4ABD51BA.4010008@gmail.com>
References: <D221B09D-9309-4CCF-90E4-CCEDF595BFE2@lip6.fr>
    <200909241252.24209.jon@ffconsultancy.com>
    <20090924123940.GA16175@usha.takhisis.invalid>
    <200909241409.56894.jon@ffconsultancy.com> <4ABCDC24.2040806@inria.fr>
    <4ABD51BA.4010008@gmail.com>
Date: Fri, 25 Sep 2009 20:45:50 -0400 (EDT)
Subject: Re: [Caml-list] OC4MC : OCaml for Multicore architectures
From: kcheung@math.carleton.ca
To: caml-list@yquem.inria.fr
User-Agent: SquirrelMail/1.4.8-4.0.1.el4
MIME-Version: 1.0
Content-Type: text/plain;charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Priority: 3 (Normal)
Importance: Normal
X-Spam: no; 0.00; ocaml:01 python's:01 hashtables:01 predictable:01 predictable:01 carleton:98 caml-list:01 off-topic:02 naive:03 perhaps:05 encouraging:10 question:13 should:13 case:13 add:14 

> I will add that we did not made this experiment to beat F# or python's
> hashtables, so I will not comment on that here. The point about
> performance is that it should be *predictable*.

Perhaps an off-topic and naive question:
What does it take to beat F# and still
have predictable performance?

In any case, OC4MC is very encouraging.
Congrats to the team!


