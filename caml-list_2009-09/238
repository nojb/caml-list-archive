Return-Path: <pierre.weis@inria.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.5 required=5.0 tests=AWL,NO_REAL_NAME 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 46942BC54
	for <caml-list@yquem.inria.fr>; Thu, 24 Sep 2009 09:37:09 +0200 (CEST)
From: pierre.weis@inria.fr
X-IronPort-AV: E=Sophos;i="4.44,444,1249250400"; 
   d="scan'208";a="36714843"
Received: from yquem.inria.fr ([128.93.8.37])
  by mail1-relais-roc.national.inria.fr with ESMTP; 24 Sep 2009 09:37:09 +0200
Received: by yquem.inria.fr (Postfix, from userid 24253)
	id 29726BC54; Thu, 24 Sep 2009 09:37:09 +0200 (CEST)
To: caml-list@inria.fr
Subject: New release 2.21 of htmlc
Message-Id: <20090924073709.29726BC54@yquem.inria.fr>
Date: Thu, 24 Sep 2009 09:37:09 +0200 (CEST)
X-Spam: no; 0.00; weis:01 programmatic:01 semantics:01 factorize:01 bug:01 syntax:01 compiler:01 bazar-ocaml:01 weis:01 semantique:01 definie:01 clairs:01 communes:01 definie:01 d'appliquer:01 

[Version française ci-dessous]

Htmlc, a general purpose text file generator with a programmatic approach in
the spirit of functional programming. (http://htmlc.inria.fr/)

I am pleased to announce the 2.21 version of Htmlc, a convenient tool to
generate and manage text files of any kind, in particular computer programs
or documentation.

Htmlc can act as a fast general purpose preprocessor for all of your text
files. Being reliable and having a clean semantics, Htmlc always behaves as
expected and produces the results you wanted :)

As its name indicates, Htmlc greatly helps to create and modify a set of WEB
pages in order to maintain the common look of those pages and factorize the
repetive parts of their HTML code.

This version is a development and bug fix release and documentation has been
improved.

Htmlc expanses on the fly ``$id'' variables written in the source document:
the binding for $id could be written in the document or in an Htmlc
environment source file (and guess what ? the syntax to define id is
 ``let id = value;;'',
so that environment files for Htmlc are valid Caml implementation files :).

Htmlc let you define and then apply functions to produce new text or edit the
text source at hand. You can define the functions either directly in the text
being processed or in an external standalone file, loaded on request.  Try
"htmlc -print_env" to figure out the initial environment when processing
begins.

Htmlc allows the automatic insertion of the result of arbitrary Unix commands
into the generated pages.

Htmlc encourages the usage of simple HTML templates that lowerize the burden
of writing the HTML pages.

Htmlc is also very convenient to produce the final HTML page result of a CGI
program from static templates and execution environments created on the fly
by the CGI.

Htmlc is still evolving from its initial satus of SSI static resolver to the
plain HTML page compiler we are all dreaming of. So, please, don't hesitate
to send your constructive remarks and contributions !

Htmlc home page is http://htmlc.inria.fr/
Htmlc source files can also be uploaded via nonymous ftp at
ftp://ftp.inria.fr/INRIA/cristal/caml-light/bazar-ocaml/htmlc-2.21.0.tgz

Enjoy.

Pierre Weis.

[Version française]

Htmlc : un générateur de fichiers texte d'usage général avec une approche
programmatoire à la manière de la programmation fonctionnelle.
(http://htmlc.inria.fr/)

J'ai le plaisir d'annoncer la sortie de la version 2.21 de Htmlc, un outil de
génération et de manipulation de fichiers textes en tout genre, y compris les
programmes ou les fichiers de configuration ou de documentation.

Par exemple, Htmlc peut servir de préprocesseur généraliste rapide pour tous
vos fichiers textes. À la fois souple et muni d'une sémantique clairement
définie, Htmlc produit des résultats clairs et sans surprise :)

Comme son nom l'indique, Htmlc est aussi adapté à la création et à la
maintenance d'un ensemble de pages Web: il permet sans effort de maintenir
l'unité d'aspect et de mettre en facteur les parties communes de vos sites
Web.

Htmlc permet aussi l'insertion de la sortie d'une commande Unix arbitraire
dans les pages engendrées.

Htmlc substitue à la volée les variables ``$id'' rencontrées dans le code
source: la liaison pour $id peut être écrite dans le document en cours de
traitement ou bien définie dans un fichier d'environnement spécial pour Htmlc
qu'on charge à la volée.

Htmlc vous permet de définir et d'appliquer des fonctions pour produire ou
éditer le texte en cours de traitement. Vous pouvez définir ces fonctions
soit directement dans le texte en cours d'édition, soit dans des fichiers
indépendants et chargés à la demande.
Tapez la commande "htmlc -print_env" pour connaître l'environnement initial
au lancement de l'éditeur.

Htmlc encourage donc la définition et l'utilisation de modèles pour définir
les textes qui dépendent d'un environnement de définition qui en fixe les
parties paramétrées mais statiquement inconnues.

Htmlc est également très pratique pour produire la page de réponse HTML d'un
programme CGI, à partir d'un modèle de réponse et d'un d'environnement
produit à la volée par le CGI.

Htmlc est bien sûr toujours en plein développement (ce n'était au départ
qu'un outil de résolution statique des SSI) et n'attend que vos remarques
constructives et vos contributions pour croître et embellir!

Cette version corrige des erreurs et la documentation est améliorée (en
particulier la page de manuel Unix a été revue et corrigée).

La page Web de Htmlc est http://htmlc.inria.fr/

Les fichiers sources de Htmlc sont disponibles sur le site du logiciel ou par
ftp anonyme à l'adresse:
ftp://ftp.inria.fr/INRIA/cristal/caml-light/bazar-ocaml/htmlc-2.21.0.tgz

Amusez-vous bien avec Htmlc.

Pierre Weis.

