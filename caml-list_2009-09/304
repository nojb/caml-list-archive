Return-Path: <kcheung@math.carleton.ca>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=DNS_FROM_RFC_ABUSE,
	NO_REAL_NAME autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 79E45BBAF
	for <caml-list@yquem.inria.fr>; Sat, 26 Sep 2009 15:51:25 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAJu5vUqGdRUV/2dsb2JhbADVQIQeBQ
X-IronPort-AV: E=Sophos;i="4.44,456,1249250400"; 
   d="scan'208";a="33584882"
Received: from pegasus.math.carleton.ca ([134.117.21.21])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 26 Sep 2009 15:51:24 +0200
Received: from pegasus.carleton.ca (pegasus.carleton.ca [127.0.0.1])
	by pegasus.math.carleton.ca (Postfix) with ESMTP id BB5777FCB31
	for <caml-list@yquem.inria.fr>; Sat, 26 Sep 2009 09:51:21 -0400 (EDT)
Received: from 70.26.46.86
        (SquirrelMail authenticated user kcheung)
        by pegasus.carleton.ca with HTTP;
        Sat, 26 Sep 2009 09:51:21 -0400 (EDT)
Message-ID: <60263.70.26.46.86.1253973081.squirrel@pegasus.carleton.ca>
In-Reply-To: <200909260253.36868.jon@ffconsultancy.com>
References: <D221B09D-9309-4CCF-90E4-CCEDF595BFE2@lip6.fr>
    <4ABD51BA.4010008@gmail.com>
    <60914.70.26.44.194.1253925950.squirrel@pegasus.carleton.ca>
    <200909260253.36868.jon@ffconsultancy.com>
Date: Sat, 26 Sep 2009 09:51:21 -0400 (EDT)
Subject: Re: [Caml-list] OC4MC : OCaml for Multicore architectures
From: kcheung@math.carleton.ca
To: caml-list@yquem.inria.fr
User-Agent: SquirrelMail/1.4.8-4.0.1.el4
MIME-Version: 1.0
Content-Type: text/plain;charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Priority: 3 (Normal)
Importance: Normal
X-Spam: no; 0.00; ocaml:01 predictable:01 predictable:01 compiler:01 ocaml:01 carleton:98 2009:98 carleton:98 analog:98 wrote:01 compiles:01 caml-list:01 off-topic:02 naive:03 library:03 

> On Saturday 26 September 2009 01:45:50 kcheung@math.carleton.ca wrote:
>> Perhaps an off-topic and naive question: What does it take to beat F#
>> and
>> still have predictable performance?
>
> Provided you're talking abouts today's machines and don't care about pause
> times, HLVM with a parallel GC (not unlike the oc4mc one) and a task
> library
> would beat F# and still have predictable performance.

If I understand correctly, HLVM is an
analog of Microsoft's CLR.  So theoretically,
one can build a compiler for ocaml that
compiles to HLVM.  Would that make ocaml
beat F#?

Kevin.

