Return-Path: <mrchebas@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: **
X-Spam-Status: No, score=2.8 required=5.0 tests=DNS_FROM_RFC_POST,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 32241BBAF
	for <caml-list@yquem.inria.fr>; Wed,  9 Sep 2009 21:00:26 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjYBAIeYp0rRVdvfkGdsb2JhbACSBoh8PwEBAQEJCQwHEwOxWIEnkFwBAwIEhBQF
X-IronPort-AV: E=Sophos;i="4.44,359,1249250400"; 
   d="tgz'50?ml'50?mli'50?scan'50,208,49,50";a="46271543"
Received: from mail-ew0-f223.google.com ([209.85.219.223])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 09 Sep 2009 21:00:05 +0200
Received: by ewy23 with SMTP id 23so1183197ewy.26
        for <caml-list@inria.fr>; Wed, 09 Sep 2009 12:00:05 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:date:message-id:subject
         :from:to:content-type;
        bh=mRiouzyZCqMoM1QFxiJEN5Yhp6aBhc0EyXpeZwRJD3I=;
        b=jukY8w5QensAxMCvZRZI8YD4c5MliaFQx7CrWaCHwD2+i8Lt4agWXCiNNv3h2So+o+
         XIkmXPjUdVGXA5eEiN7Kp4t1bpDPg9BIm9KWICfPjB+7fQOOTurvhOuhCuIrYlgUAtC3
         4bBythltqaDFDNglefJ8HMo6P0aBhaoP9EyLM=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:date:message-id:subject:from:to:content-type;
        b=cThq7k/roJp4ITKjTGjLnuHkbnxEA+4jwz8/uSwZhrZ7WXAi/d3aJKw0nPFIipx5sj
         9+PWcX64fKnEo1bxyJYy4yGMM8D/Y8L3kjLYvpecuIY0rSrhBPkQKV8U5D0KBslf2h7R
         hORrlSfidfP0dWy4IeCPVQFQ/ljCk2wNAvaxU=
MIME-Version: 1.0
Received: by 10.211.131.19 with SMTP id i19mr605022ebn.34.1252522804955; Wed, 
	09 Sep 2009 12:00:04 -0700 (PDT)
Date: Wed, 9 Sep 2009 21:00:04 +0200
Message-ID: <4b39c80a0909091200v7ae57950q4775d4b4ed4a51b3@mail.gmail.com>
Subject: Partially hiding modules in packages
From: Alexey Rodriguez <mrchebas@gmail.com>
To: OCaml List <caml-list@inria.fr>
Content-Type: multipart/mixed; boundary=001636c59a38dccae3047329b0f5
X-Spam: no; 0.00; ocaml:01 ocaml:01 foo:01 mli:01 foo:01 sig:01 val:01 val:01 sig:01 -for-pack:01 foobar:01 -pack:01 haskell:01 foobar:01 mli:01 
X-Attachments: type="application/x-gzip" name="packages.tgz" name="packages.tgz" 

--001636c59a38dccae3047329b0f5
Content-Type: text/plain; charset=ISO-8859-1

Dear list,

My question is about how to hide modules (or parts thereof) in
an ocaml package from the outside world (users of the package).

I am trying to build an ocaml package with internal functionality
(types and functions)
that I do not want to expose. I have two modules in the package implemented by
foo.ml and bar.ml. The structure of each .mli looks like this:

> module Foo = sig
>   type t
>   val make : t
>   val change : t -> t
>
>   (* Internal, not to be exposed. *)
>   val unsafe_change : t -> t
> end

> module Bar = sig
>   type t
>   val combine : t -> Foo.t -> t (* uses unsafe_change *)
> end

As you see Foo exports unsafe_change because Bar needs it.
I compile both modules using "-for-pack Foobar" and build them using
the "-pack" option.
However, now I want to hide "Foo.unsafe_change" from the package
"export list" (if there
is such a thing) so that main.ml cannot call it. I see the following options:

* Merge foo.ml and bar.ml so that unsafe_change does not need to be exposed.
  I don't like this, the modules could be very large.
* Split Foo into Foo_internal and Foo, and somehow keep Foo_internal
  invisible. I don't know how to do this. I would use "exposed-modules" in
  Cabal which is a package manager for Haskell.
* Add the file foobar.mli which contains the signatures of Foo and Bar
but hiding
  Foo.unsafe_change. I think it could work, but I would have to repeat
much of the Foo
  and Bar interfaces. I tried this but it didn't work, ocaml complains
as follows:

> Error: The implementation (obtained by packing)
>        does not match the interface foobar.mli:
>        The field `Foo' is required but not provided

  I am attaching a tarball of this attempt in case someone knows what
went wrong.
  The example is a bit different from the example in the email.

So the question is:

  What solution do you follow when you want to hide (part of) a module
in a package?
  Keep in mind that the hidden parts should still be exposed to the
modules inside
  the package.

A related question is how to expose the representation Foo.t so that
Bar can manipulate it
directly, but at the same time keep it hidden from users of the
package. The following easy
hack works. Create foo_type.mli with the definition of the type t:

> type t = int

and redefine Foo as follows:

> module Foo = sig
>   type t = Foo_type.t
>   val make : t
>   val change : t -> t
>
>   (* Internal, not to be exposed. *)
>   val unsafe_change : t -> t
> end

Now "t" is visible for Bar to use but we still have to hide it from
the outside world. How do
we do it? Well, just use "-pack" on foo.cmx and bar.cmx. We can omit
Foo_types because it has
no .cmx. As a consequence Foo.t becomes abstract. This probably works
by accident and maybe it
is not a good idea to rely on this trick.

I would appreciate if you can share your experiences and perhaps point
to some ocaml library
that does module or partial module hiding so I can use it as an example.

Thank you!

Cheers,

Alexey

--001636c59a38dccae3047329b0f5
Content-Type: application/x-gzip; name="packages.tgz"
Content-Disposition: attachment; filename="packages.tgz"
Content-Transfer-Encoding: base64
X-Attachment-Id: f_fzefqg5i0

H4sIABv7p0oAA+2XXYvTQBSGc9v5FYd1hVbpmknzAYv1RlYQXFzECy+EErOTGjbJhDar7b/3zEfS
tLTUCxNdPA9tJj1zembK9H1nUsXJQ7wU61dOf7hIFASmDU3rer5pDQ7nXsCjKPA913G5hy8Hgh7n
1PK4ruMVgBPnYiO2p/MwLU2HmNCwVM36p1JeFXkvY6gFDn3/5PpzL7LrH7hhEOH6z/jMd8DtZTYH
/Ofrz+ptJQAXf1HDHLKyZiwXNd5kdRbnGOL6cyHvs3QLGwxs4KUNrr/Lnzq0rldZuVzIdIEFYMMY
+9s/i/hNDvSf9THGWf3P+E7/0Uzp34tC0v8QdPTP2A9UfKP8axtUMat+G4Lpm06fNoFOj/ECcoAn
Qlf/3+JVLxZwVv+hZ/Uf8jAKlP4jtAHS/wCgtB9zAdoFcCPPlqwbeSeljQJ0jQLgmFWY6AlDEOW9
fpMx/FO0+i/irOzpAeCs/nm7/3M31Pr3Qpf0PwSyEqWSufJ+bMzpfwFzFPMd6rZOryrdwMXz9dfy
AsZa3mN7IrAOMJmQrJ8orf5v4weRZrnoYYxz+g95tNv/PX3+9wM6/w8CewZvP97evf9w82kuk7jI
ZVVj7ObL53lS4JP8fmfCTAf6hNov9C6vnCMpsub2cowpE7DbCRtdjpsSk+MpMJX6lrFdsbYwHkfZ
yAwN0wQuX7dZpohObAqqW/zy/phT9Q9XY+wPvvuarrhXDud0vBTOIZUrU9F4ps03NZqJH866CbEk
F3F5zUarAl5gttTXjb5meJXkogRBEARBEARBEARBEMQf5hc68+RrACgAAA==
--001636c59a38dccae3047329b0f5--

