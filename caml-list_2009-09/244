Return-Path: <rixed@happyleptic.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.6 required=5.0 tests=NO_REAL_NAME 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id D76C2BBAF
	for <caml-list@yquem.inria.fr>; Thu, 24 Sep 2009 12:01:35 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AugBALTgukrUGyoFkWdsb2JhbACbAAEBAQEJCwoHEwO6M4QbBYFY
X-IronPort-AV: E=Sophos;i="4.44,444,1249250400"; 
   d="scan'208";a="34897197"
Received: from smtp5-g21.free.fr ([212.27.42.5])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 24 Sep 2009 12:00:38 +0200
Received: from smtp5-g21.free.fr (localhost [127.0.0.1])
	by smtp5-g21.free.fr (Postfix) with ESMTP id C74FFD48037
	for <caml-list@yquem.inria.fr>; Thu, 24 Sep 2009 12:00:33 +0200 (CEST)
Received: from yeeloong (happyleptic.org [82.67.194.89])
	by smtp5-g21.free.fr (Postfix) with SMTP id E17F2D481AF
	for <caml-list@yquem.inria.fr>; Thu, 24 Sep 2009 12:00:29 +0200 (CEST)
Received: by yeeloong (sSMTP sendmail emulation); Thu, 24 Sep 2009 12:00:24 +0200
Date: Thu, 24 Sep 2009 12:00:24 +0200
From: rixed@happyleptic.org
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] OC4MC : OCaml for Multicore architectures
Message-ID: <20090924100024.GC1996@yeeloong>
References: <D221B09D-9309-4CCF-90E4-CCEDF595BFE2@lip6.fr>
 <200909240105.18288.jon@ffconsultancy.com>
 <4d1b2df20909231701l2248f7f7w841b1d5ece9aa62e@mail.gmail.com>
 <200909240247.17560.jon@ffconsultancy.com>
 <20090924094943.GA14407@annexia.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20090924094943.GA14407@annexia.org>
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Spam: no; 0.00; ocaml:01 caml-list:01 surprising:01 slower:02 threaded:03 variable:06 haven't:09 obvious:10 environment:10 10%:87 question:13 isn't:13 paper:14 edu:15 running:15 

> > Wow! 2.6x faster on 2 cores is good. ;-)
> 
> Isn't that impossible?  Or is the multicore GC better than the single
> threaded one?  (Sorry if this is a stupid or obvious question)

There are so many factors that makes the running time unpredictable that
nothing is surprising any more. Haven't you read this paper [1] about the
length of an environment variable causing a program to be 10% faster or
slower ? :)

[1]: http://www-plan.cs.colorado.edu/diwan/asplos09.pdf

