Return-Path: <nick@mykola.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id A7522BBAF
	for <caml-list@yquem.inria.fr>; Wed, 23 Sep 2009 20:15:16 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnMbAPwCuko+lQkY/2dsb2JhbACBUZIHxBCEGwWBWGOEUQ
X-IronPort-AV: E=Sophos;i="4.44,439,1249250400"; 
   d="scan'208";a="36688183"
Received: from colo9-24.users.colocall.net (HELO dragon.mykola.org) ([62.149.9.24])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 23 Sep 2009 20:15:16 +0200
Received: from [192.168.0.167] ([217.20.182.45])
	(authenticated bits=0)
	by dragon.mykola.org (8.14.3/8.14.3) with ESMTP id n8NIFD1J011178
	(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=NO)
	for <caml-list@yquem.inria.fr>; Wed, 23 Sep 2009 21:15:14 +0300 (EEST)
	(envelope-from nick@mykola.org)
Message-Id: <46ACB6F9-FFAE-4C9C-9E46-21CA2E93434C@mykola.org>
From: Mykola Stryebkov <nick@mykola.org>
To: caml-list@yquem.inria.fr
Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (Apple Message framework v936)
Subject: Generation of Java code from OCaml
Date: Wed, 23 Sep 2009 21:15:08 +0300
X-Mailer: Apple Mail (2.936)
X-Spam: no; 0.00; ocaml:01 ocaml:01 lib:01 pubkey:01 blog:98 blog:98 bce:98 arbitrary:02 structures:02 structures:02 generates:07 approach:08 generation:12 similar:12 nick:16 

Hi,

I need to generate arbitrary text (more specifically, Java code) from  
Ocaml structures, pretty similar to how json-static lib generates  
ocaml code from ocaml structures.

Which approach would you recommend?
Is it possible to use ocamlp4 for it?

-- 
Mykola Stryebkov
Blog: http://mykola.org/blog/
Public key: http://mykola.org/pubkey.txt
fpr: 0226 54EE C1FF 8636 36EF  2AC9 BCE9 CFC7 9CF4 6747





