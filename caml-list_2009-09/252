Return-Path: <rixed@happyleptic.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.6 required=5.0 tests=NO_REAL_NAME 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 5694ABBAF
	for <caml-list@yquem.inria.fr>; Thu, 24 Sep 2009 14:11:40 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AugBAPn+ukrUGyoFkWdsb2JhbACbAQEBAQEJCwoHEwO6foQbBQ
X-IronPort-AV: E=Sophos;i="4.44,445,1249250400"; 
   d="scan'208";a="36735378"
Received: from smtp5-g21.free.fr ([212.27.42.5])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 24 Sep 2009 14:11:39 +0200
Received: from smtp5-g21.free.fr (localhost [127.0.0.1])
	by smtp5-g21.free.fr (Postfix) with ESMTP id C18CED48002
	for <caml-list@yquem.inria.fr>; Thu, 24 Sep 2009 14:11:34 +0200 (CEST)
Received: from yeeloong (happyleptic.org [82.67.194.89])
	by smtp5-g21.free.fr (Postfix) with SMTP id A7B0ED480DE
	for <caml-list@yquem.inria.fr>; Thu, 24 Sep 2009 14:11:30 +0200 (CEST)
Received: by yeeloong (sSMTP sendmail emulation); Thu, 24 Sep 2009 14:11:24 +0200
Date: Thu, 24 Sep 2009 14:11:24 +0200
From: rixed@happyleptic.org
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] OC4MC : OCaml for Multicore architectures
Message-ID: <20090924121124.GA11289@yeeloong>
References: <D221B09D-9309-4CCF-90E4-CCEDF595BFE2@lip6.fr>
 <200909240247.17560.jon@ffconsultancy.com>
 <60112.70.26.45.183.1253786457.squirrel@pegasus.carleton.ca>
 <200909241252.24209.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200909241252.24209.jon@ffconsultancy.com>
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Spam: no; 0.00; ocaml:01 ocaml:01 parallelism:01 caml-list:01 machines:12 programmers:13 expected:15 use:16 write:17 subtle:20 efficiently:22 that:23 the:27 programs:29 first:29 

> Until now, OCaml sucked at parallelism. (...) OCaml programmers
> can write OCaml programs that use multicore machines efficiently
> for the first time.

Subtle and strongly argumented, as expected.

