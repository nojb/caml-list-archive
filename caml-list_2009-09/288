Return-Path: <hmf@inescporto.pt>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.5 required=5.0 tests=AWL,SPF_SOFTFAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id C1179BBAF
	for <caml-list@yquem.inria.fr>; Fri, 25 Sep 2009 09:32:39 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aj0BABAPvErVhjEXkGdsb2JhbACbAQEBAQEJCQwHEwO7HIQcBQ
X-IronPort-AV: E=Sophos;i="4.44,450,1249250400"; 
   d="scan'208";a="34955804"
Received: from ihsmtp01voda.lis.interhost.com (HELO ihsmtp01cons.lis.interhost.com) ([213.134.49.23])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 25 Sep 2009 09:32:39 +0200
Received: from [192.168.1.64] ([77.54.228.130]) by ihsmtp01cons.lis.interhost.com with Microsoft SMTPSVC(6.0.3790.3959);
	 Fri, 25 Sep 2009 08:28:57 +0100
Message-ID: <4ABC720A.7060706@inescporto.pt>
Date: Fri, 25 Sep 2009 08:32:26 +0100
From: Hugo Ferreira <hmf@inescporto.pt>
User-Agent: Thunderbird 2.0.0.23 (X11/20090817)
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] OC4MC : OCaml for Multicore architectures
References: <200909241409.56894.jon@ffconsultancy.com>	<20090924164933.GA5637@annexia.org>	<200909242209.50565.jon@ffconsultancy.com> <20090925.130721.70227045.garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <20090925.130721.70227045.garrigue@math.nagoya-u.ac.jp>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 25 Sep 2009 07:28:57.0188 (UTC) FILETIME=[D7C33240:01CA3DB1]
X-Spam: no; 0.00; ocaml:01 ocaml:01 speedup:01 speedup:01 bounded:01 wrote:01 tracing:01 caml-list:01 algorithm:01 linear:02 algorithmic:02 commenting:02 garrigue:03 jacques:03 programming:03 

Hello,

In tried not getting into this discussion but I could not resist
commenting on the following:

Jacques Garrigue wrote:
 >...
 > ... There are applications for that (ray tracing is
 > one), but this is not the kind of needs most people have.
 >...

As with most technology people will or will not use something
according to their perceived effort/pleasure to learn/use
something and the advantages it is supposed to bring.

Put it another way; if parallel/concurrent programming could be
easily used with a minimum of effort then I believe "most people"
would use it simply because it is available.

In other words the (ready) availability of (multi-core PCs and)
parallel computing support (in Ocaml) will certainly influence the
number of people that will take advantage of it simply because it
is available (confer with e-mails on this thread).

 >...
 > If I tell you that you just have to modify a bit your program to get a
 > near linear speedup, then it looks great. But in practice it is rather
 > having to rethink completely your algorithm, to eventually get a
 > speedup bounded by bandwidth, and starting from a point lower than the
 > original single thread program.
 >...

Rethinking our application/algorithmic structure may not be a real
deterrent. An application does not require parallel/concurrent
processing everywhere. It is really a question of identifying where
and when this is useful. Much like selecting the most "appropriate" 
data-structure for any application. It's not an all or nothing
proposition.

My 2 cents.

Regards,
Hugo F.

