Return-Path: <imai@nagoya-u.jp>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 3675CBBAF
	for <caml-list@yquem.inria.fr>; Mon,  7 Sep 2009 12:35:07 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEALN+pEqFBgEp/2dsb2JhbADYWIQYBYI4
X-IronPort-AV: E=Sophos;i="4.44,345,1249250400"; 
   d="scan'208";a="35608727"
Received: from mail1.nagoya-u.jp ([133.6.1.41])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 07 Sep 2009 12:35:06 +0200
Received: from [10.154.0.176] (unknown [133.6.51.25])
	by mail1.nagoya-u.jp (Postfix) with ESMTP id DC8FF80097;
	Mon,  7 Sep 2009 19:35:01 +0900 (JST)
Message-Id: <12A4FE30-2968-4EBA-9497-9DC0E719C982@nagoya-u.jp>
From: Keigo IMAI <imai@nagoya-u.jp>
To: caml-list@yquem.inria.fr
Content-Type: text/plain; charset=ISO-2022-JP; format=flowed; delsp=yes
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (Apple Message framework v936)
Subject: OCaml on Android
Date: Mon, 7 Sep 2009 19:35:01 +0900
Cc: Keigo Imai <keigo.imai@gmail.com>
X-Mailer: Apple Mail (2.936)
X-Spam: no; 0.00; ocaml:01 o'caml:01 o'caml:01 ocaml-:01 cheers:01 functions:01 caml:02 unison:02 shell:04 nagoya-u:04 modify:05 anyway:05 xavier:06 inria:06 porting:06 

Hi list,

I built an O'Caml cross-compiler for Google Android!

The porting step is available at
http://sites.google.com/site/keigoattic/ocaml-on-android

The example shows that Unison is invoked from android's shell.
(Since Android app works on java VM, we cannot build Android application
diretly with O'Caml yet. But anyway, it works!)

The patch itself is not so big, and nothing special (removing  
reference to
unsupported functions, modify 'ar' to '$(AR)', and so on), so I  
encourage you
to extend it for your use, such as adapting it to O'Jacare or OCaml- 
Java.

Acknowledgements:
ARM-EABI with software floating-point support[1] saved much time.
Many thanks to Xavier!

  [1] http://caml.inria.fr/mantis/view.php?id=3746

Cheers,
  - Keigo IMAI


