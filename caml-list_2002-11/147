Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA25004; Tue, 12 Nov 2002 10:17:19 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA25000 for <caml-list@pauillac.inria.fr>; Tue, 12 Nov 2002 10:17:18 +0100 (MET)
Received: from mail.eecs.harvard.edu (bowser.eecs.harvard.edu [140.247.60.24])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id gAC9HHX16551
	for <caml-list@inria.fr>; Tue, 12 Nov 2002 10:17:17 +0100 (MET)
Received: by mail.eecs.harvard.edu (Postfix, from userid 32018)
	id 4358C54C5ED; Tue, 12 Nov 2002 04:17:16 -0500 (EST)
Received: from localhost (localhost [127.0.0.1])
	by mail.eecs.harvard.edu (Postfix) with ESMTP
	id 40FE154C543; Tue, 12 Nov 2002 04:17:16 -0500 (EST)
Date: Tue, 12 Nov 2002 04:17:16 -0500 (EST)
From: Lex Stein <stein@eecs.harvard.edu>
To: jehenrik <jehenrik@yahoo.com>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] custom toplevel under darwin
In-Reply-To: <2A4CA3C7-F610-11D6-901A-00039375801A@yahoo.com>
Message-ID: <Pine.BSF.4.44.0211120414070.35146-100000@bowser.eecs.harvard.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Try:

ocamlmktop -custom inspect.o intro_runtime.ml -o top

This works for me Ocaml 3.06 / OS X 10.2 with the inspect.c example from
the O'Reilly book.

Does it work for you ? If not, what are the error messages ?

Lex

On Tue, 12 Nov 2002, jehenrik wrote:

> Are custom toplevels supposed to work under darwin with ocaml 3.06?  I
> have a simple .cpp file from the OReily book:
>
>
> inspect.c:
>
> #include <stdio.h>
> #include <caml/mlvalues.h>
>
> extern "C" value inspect (value v)
> {
>    if (Is_long(v))
>      printf ("integer (%ld) : %ld", (long) v, Long_val(v));
>    else if (Is_block(v))
>      printf ("v is a pointer");
>    else
>      printf ("v is neither an integer nor a pointer (???)");
>    printf("   ");
>    fflush(stdout) ;
>    return v ;
> }
>
>
>
>
> and a simple .ml file, intro_runtime.ml:
>
> external inspect1 : 'a -> 'a = "inspect" ;;
> inspect1 123;;
>
>
>
> As a standalone program this works fine:
>
> ocamlc -custom inspect.o intro_runtime.ml -o intro_runtime # this works
>
>
> But this way of making a toplevel, along with all the variations I can
> think of, doesn't:
>
> ocamlmktop -custom inspect.o  -o intro_runtime
>
>
> # external inspect1 : 'a -> 'a = "inspect" ;;
> external inspect1 : 'a -> 'a = "inspect"
> # inspect1;;
> The external function `inspect' is not available
> # inspect1 123;;
> The external function `inspect' is not available
>
>
>
> If this functionality is not ported, I would appreciate it if somebody
> could pass that on to me.
>
>
> Jeff Henrikson
>
> -------------------
> To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
> Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

