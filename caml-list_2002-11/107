Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA27758; Fri, 8 Nov 2002 20:28:40 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA28450 for <caml-list@pauillac.inria.fr>; Fri, 8 Nov 2002 20:28:38 +0100 (MET)
Received: from mx01.nexgo.de (mx01.nexgo.de [151.189.8.96])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id gA8JSaD05162
	for <caml-list@inria.fr>; Fri, 8 Nov 2002 20:28:38 +0100 (MET)
Received: from diebuntekuh.de (dialin-212-144-185-061.arcor-ip.net [212.144.185.61])
	by mx01.nexgo.de (Postfix) with ESMTP id 21F8A3C2D8
	for <caml-list@inria.fr>; Fri,  8 Nov 2002 20:28:35 +0100 (CET)
Received: by diebuntekuh.de (Postfix, from userid 500)
	id CEBD62CB2; Fri,  8 Nov 2002 20:33:40 +0100 (CET)
To: caml-list@inria.fr
Subject:  Re: [Caml-list] wxWindows interface
From: Christoph Bauer <c_bauer@informatik.uni-kl.de>
Date: 08 Nov 2002 20:33:39 +0100
Message-ID: <m3d6pfrh4c.fsf@diebuntekuh.de>
Lines: 29
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.2
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi,

> Hi!
> 
> Can anybody tell me, that is it possible to define ocaml interface to
> wxWindows?
> The problem is, that wxWindows heavily uses classes, and I don't know
> how to interface objects with C/C++...
> 

Just a idea, maybe a stupid one. wxPython is created by a set of swig
interface files (*.i) and swig has a ocaml backend. So maybe it's not too
hard to port wxPython to ocaml. But I don't nothing about internal stuff,
e.g. how wxPython deals with the gc problem and I never tried to use swig.

If this works, we can look for cheap corba bindings...

> I think the main advantage of porting wxWindows can be better windows
> support (GTK is not so stable on Windows, and wxWindows has native
> Look'n'Feel)


regards,
Christoph

-- 
proc self {} {foreach c [split [info body self] ""] d {14 -7 0 0 4 -67 4 73 11
69 24 -83 -15 6 -4 -84 78 20 11 -78 -1 -1 79 19 -8 4} { binary scan $c c c
if {[catch {append r [format %c [expr $c+$d]]}]} {return $r};}};puts [self]
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

