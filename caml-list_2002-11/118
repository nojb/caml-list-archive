Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA03873; Sat, 9 Nov 2002 03:55:01 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA03823 for <caml-list@pauillac.inria.fr>; Sat, 9 Nov 2002 03:54:59 +0100 (MET)
Received: from grace.speakeasy.org (grace.speakeasy.org [216.254.0.2])
	by concorde.inria.fr (8.11.1/8.11.1) with SMTP id gA92sw527378
	for <caml-list@inria.fr>; Sat, 9 Nov 2002 03:54:58 +0100 (MET)
Received: (qmail 14684 invoked by uid 36130); 9 Nov 2002 02:54:56 -0000
Received: from localhost (sendmail-bs@127.0.0.1)
  by localhost with SMTP; 9 Nov 2002 02:54:56 -0000
Date: Fri, 8 Nov 2002 18:54:56 -0800 (PST)
From: brogoff@speakeasy.net
To: "caml-list@inria.fr" <caml-list@inria.fr>
Subject: Re: [Caml-list] What are Classes for in O'Caml?
In-Reply-To: <200211081445.29249.mwohlwend@web.de>
Message-ID: <Pine.LNX.4.44.0211081844090.11956-100000@grace.speakeasy.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 8 Nov 2002, Michael Wohlwend wrote:
> I got to ocaml two weeks ago and the first thing I realized was that due the 
> the functional programming style and the module system the need for 
> oo-programming is much lower than with imperative style languages (at least 
> for me).

I tend to use the class system to ameliorate the annoying limitations of 
OCaml records. You know, no overloaded field labels, functions can't be 
polymorphic over a set of labels, that kind of thing. I'd be thrilled if 
I could have all of this stuff in a record system and get pattern matching 
back.

> Has somone found a *best* solution (for his tasks) to combine them (classes 
> und modules) or is it really just a matter of taste?

In addition to the O'Reilly book and Xavier's talk slides, take a gander at 
Didier Remy's APPSEM notes, where he discusses this issue in detail, and 
provides pointers to a symbolic algebra program which uses modules and 
classes together. 

-- Brian


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

