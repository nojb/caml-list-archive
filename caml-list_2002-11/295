Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA04455; Mon, 25 Nov 2002 19:50:57 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA03979 for caml-list@pauillac.inria.fr; Mon, 25 Nov 2002 19:50:55 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA19187 for <caml-list@pauillac.inria.fr>; Mon, 25 Nov 2002 13:26:46 +0100 (MET)
Received: from izanagi.macs.hw.ac.uk (izanagi.macs.hw.ac.uk [137.195.13.5])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id gAPCQj111194
	for <caml-list@inria.fr>; Mon, 25 Nov 2002 13:26:45 +0100 (MET)
Received: from lxultra2 ([137.195.27.42] ident=exim)
	by izanagi.macs.hw.ac.uk with esmtp (Exim 4.10)
	id 18GIJF-00053U-00; Mon, 25 Nov 2002 12:25:53 +0000
Received: from haack (helo=localhost)
	by lxultra2 with local-esmtp (Exim 3.22 #1)
	id 18GIJ7-0002HS-00; Mon, 25 Nov 2002 12:25:45 +0000
Date: Mon, 25 Nov 2002 12:25:45 +0000 (GMT)
From: Christian Haack <haack@macs.hw.ac.uk>
X-X-Sender: haack@lxultra2
To: ultra@macs.hw.ac.uk, DSG Login <dsg@macs.hw.ac.uk>,
        <church-announce@church-project.org>, <amast@cs.utwente.nl>,
        <caml-list@inria.fr>, <comp-lang-ml@cs.cmu.edu>, <compilers@iecc.com>,
        <eapls@jiscmail.ac.uk>, <haskell@haskell.org>, <types@cis.upenn.edu>,
        <unification@sics.se>
Subject: [Caml-list] Web Demonstration of Type Error Slicing
Message-ID: <Pine.LNX.4.44.0211251216220.1616-100000@lxultra2>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Previous methods have generally identified the location of a type
error as a particular program point or the program subtree rooted at
that point.  In the paper "Type Error Slicing in Implicitly Typed
Higher-Order Languages" by two of us (Haack and Wells), we present a
new approach that treats the location of a type error as a minimal set
of program points which are necessary for the type error and presents
this "location" as a slice of the program.  Connected to this paper,
we have implemented type error slicing for a subset of core Standard
ML.

We have prepared a web interface that allows you to experiment with
our implementation using just your web browser.  This interface is now
available at:

  http://www.cee.hw.ac.uk/ultra/compositional-analysis/type-error-slicing/

-- 
Sebastien Carlier, Christian Haack, and Joe Wells
Members of the ULTRA group and the Church Project
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

