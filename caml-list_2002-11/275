Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA25932; Sun, 24 Nov 2002 18:43:06 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA26017 for <caml-list@pauillac.inria.fr>; Sun, 24 Nov 2002 18:43:05 +0100 (MET)
Received: from relay.pair.com (relay1.pair.com [209.68.1.20])
	by nez-perce.inria.fr (8.11.1/8.11.1) with SMTP id gAOHh4119222
	for <caml-list@inria.fr>; Sun, 24 Nov 2002 18:43:05 +0100 (MET)
Received: (qmail 14705 invoked from network); 24 Nov 2002 17:43:02 -0000
Received: from arda.pair.com (HELO compaqreview.d6.com) (209.68.1.133)
  by relay1.pair.com with SMTP; 24 Nov 2002 17:43:02 -0000
X-pair-Authenticated: 209.68.1.133
Message-Id: <4.3.2.7.2.20021124093204.039731b8@localhost>
X-Sender: checker@localhost
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Sun, 24 Nov 2002 09:41:47 -0800
To: Sven Luther <luther@dpt-info.u-strasbg.fr>, Lauri Alanko <la@iki.fi>
From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] Why systhreads?
Cc: caml-list@inria.fr
In-Reply-To: <20021124073653.GA960@iliana>
References: <20021123090806.GA633@la.iki.fi>
 <20021123090806.GA633@la.iki.fi>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


>I don't really know about windows (which is a pain to use ocaml on
>anyway) but on unix, you can choose at compile time to use either
>systhreads or ocamlthreads.

For bytecode or for native?  His question was about native.

On a related note, now that the first CPUs with HyperThreading are 
shipping, is there any plan to multithread the GC so caml programs can take 
advantage of HT?  I can understand why it was not a high priority to 
support real threads for multiprocessor machines when that was the only way 
to get parallelism with threads, but once HT is ubiquitous, it has the 
potential to make it worth the trouble to thread a regular application to 
increase performance.  I don't think this is a high priority now, because 
there's 0% penetration of HT right now, but hopefully there's some plan for 
the future.

I guess the question is, is a multithreaded GC an open research problem, or 
is there a known good solution and it just hasn't gotten to the top of the 
priority list yet?

Chris


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

