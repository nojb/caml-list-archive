Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA16535; Thu, 14 Nov 2002 19:32:21 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA16605 for <caml-list@pauillac.inria.fr>; Thu, 14 Nov 2002 19:32:20 +0100 (MET)
Received: from relay.pair.com (relay1.pair.com [209.68.1.20])
	by concorde.inria.fr (8.11.1/8.11.1) with SMTP id gAEIWJX25411
	for <caml-list@inria.fr>; Thu, 14 Nov 2002 19:32:19 +0100 (MET)
Received: (qmail 92621 invoked from network); 14 Nov 2002 18:32:17 -0000
Received: from arda.pair.com (HELO compaqreview.d6.com) (209.68.1.133)
  by relay1.pair.com with SMTP; 14 Nov 2002 18:32:17 -0000
X-pair-Authenticated: 209.68.1.133
Message-Id: <4.3.2.7.2.20021114102309.041f3dd8@localhost>
X-Sender: checker@localhost
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Thu, 14 Nov 2002 10:31:37 -0800
To: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] labels and optional arguments in 3.06
Cc: caml-list@inria.fr
In-Reply-To: <20021114172307R.garrigue@kurims.kyoto-u.ac.jp>
References: <4.3.2.7.2.20021113204718.031fa750@localhost>
 <4.3.2.7.2.20021113184428.030a3a38@localhost>
 <20021114123418O.garrigue@kurims.kyoto-u.ac.jp>
 <4.3.2.7.2.20021113204718.031fa750@localhost>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


>This problem
>only appears when you have labelled arguments AND optional arguments
>AND you don't want to label the labelled arguments in your function
>application.

I would restate this (to conveniently make it sound less radical/more 
radical in my favor :).  If you are using labels primarily for 
documentation, but you rarely if ever apply them on calls, and then you 
want to use optional arguments, you are suddenly forced to always use 
labels on those calls.  This could force you to label zillions of calls in 
your huge codebase when you add an optional argument to a label-documented 
function, but wait, that goes completely against the intent of optional 
arguments (that you don't know they're there unless you care)!  Therefor, 
one is incented to not use labels at all.

There, that sounds better/worse, doesn't it?  :)

>A fully symmetric definition is much harder to obtain, and to
>implement.

If it's really hard to make it symmetric, then I wouldn't bother.  It's not 
worth it if it doesn't "just work" in all cases (except cases with 
duplicate labels).

Bummer,
Chris

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

