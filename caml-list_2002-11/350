Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA15688; Fri, 29 Nov 2002 09:43:15 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA15606 for <caml-list@pauillac.inria.fr>; Fri, 29 Nov 2002 09:43:14 +0100 (MET)
Received: from lri.lri.fr (lri.lri.fr [129.175.15.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id gAT8hD113512
	for <caml-list@inria.fr>; Fri, 29 Nov 2002 09:43:13 +0100 (MET)
Received: from pc8-123 (mail@pc8-123 [129.175.8.123])
          by lri.lri.fr (8.11.6/jtpda-5.3.2) with ESMTP id gAT8RER17446
          ; Fri, 29 Nov 2002 09:27:14 +0100 (MET)
Received: from filliatr by pc8-123 with local (Exim 3.35 #1 (Debian))
	id 18HgUU-0006tc-00; Fri, 29 Nov 2002 09:27:14 +0100
From: Jean-Christophe Filliatre <Jean-Christophe.Filliatre@lri.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Message-ID: <15847.9442.38046.871632@lri.lri.fr>
Date: Fri, 29 Nov 2002 09:27:14 +0100
To: "mattwb" <mattwb@alve.com>
Cc: <caml-list@inria.fr>
Subject: Re: [Caml-list] module/signature pattern concerns
In-Reply-To: <003a01c29703$e1e2fa00$fdeef5d1@unknown427igcj>
References: <003a01c29703$e1e2fa00$fdeef5d1@unknown427igcj>
X-Mailer: VM 6.93 under Emacs 20.7.2
Reply-To: Jean-Christophe.Filliatre@lri.fr (Jean-Christophe Filliatre)
X-MailScanner: Found to be clean
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


mattwb writes:
 > 
 > My concern is that I will take a significant performance hit by using
 > functors
 > so much and using so many layers.  I haven't noticed this problem in any of
 > the code that I have written, but I am slightly paranoid that, at a much
 > larger
 > scale, this would become an issue.

An  ocaml  defunctorizer, developped  by  Julien  Signoles,  is to  be
released soon.  Using it,  you'll get an  equivalent code  without any
functor anymore. I guess it'll ease your paranoia...

Moreover,  the first  benchmarks with  this defunctorizer  proved that
using  many functors  does  not  have necessarily  a  (bad) impact  on
performance. So you can really stop being paranoid :-)

-- 
Jean-Christophe Filliâtre (http://www.lri.fr/~filliatr)

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

