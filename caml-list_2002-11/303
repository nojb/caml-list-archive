Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id HAA17326; Tue, 26 Nov 2002 07:49:09 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA17398 for <caml-list@pauillac.inria.fr>; Tue, 26 Nov 2002 07:49:08 +0100 (MET)
Received: from mel-rto3.wanadoo.fr (smtp-out-3.wanadoo.fr [193.252.19.233])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id gAQ6n8X14984
	for <caml-list@inria.fr>; Tue, 26 Nov 2002 07:49:08 +0100 (MET)
Received: from mel-rta9.wanadoo.fr (193.252.19.69) by mel-rto3.wanadoo.fr (6.5.007)
        id 3DDA12BC00453329; Tue, 26 Nov 2002 07:49:02 +0100
Received: from iliana (80.14.205.45) by mel-rta9.wanadoo.fr (6.5.007)
        id 3DD3EB7600603F46; Tue, 26 Nov 2002 07:49:02 +0100
Received: from luther by iliana with local (Exim 3.36 #1 (Debian))
	id 18GZWn-0000Jf-00; Tue, 26 Nov 2002 07:49:01 +0100
Date: Tue, 26 Nov 2002 07:49:01 +0100
To: Chris Hecker <checker@d6.com>
Cc: james woodyatt <jhw@wetware.com>, Blair Zajac <blair@orcaware.com>,
        The Trade <caml-list@inria.fr>
Subject: Re: [Caml-list] Why systhreads?
Message-ID: <20021126064901.GB1126@iliana>
References: <3DE2736D.F4FCC064@orcaware.com> <4.3.2.7.2.20021125134858.037b4ef8@localhost>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <4.3.2.7.2.20021125134858.037b4ef8@localhost>
User-Agent: Mutt/1.4i
From: Sven Luther <luther@dpt-info.u-strasbg.fr>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, Nov 25, 2002 at 02:20:11PM -0800, Chris Hecker wrote:
> 
> >If you want your application to parallelize well, the winning design 
> >pattern seems to be message passing between distributed memory processes.
> 
> I was going to let it drop after the "lecture" (which should be put in a 
> faq or something), but come on, this is a silly generalization.  I have 
> colleagues who have gotten very large speedups from hyperthreading on 
> commercial applications, not demos.  The point is, it's "free" for Intel to 
> put it in, and your app is waiting on cache misses and pipeline stalls 
> anyway, so you might as well do something with those cycles.  Now you can 
> get extra work done during those times in C, but you won't be able to in 
> caml, and that's a bummer.  It's not a showstopper, since you can always 
> call out to C, but it is yet another thing in the list of features that 
> aren't natively exploitable in caml.  Of course there's a cost to enabling 
> this in caml, and it may be that there's no good way to do it or that it's 
> not worth it cost/benefit-wise, but saying "you don't want to do it anyway" 
> is just apologist.
> 
> Xavier saying 1.5x is not worth it is really strange to me; most 
> performance sensitive programmers I know would kill their mother to get 
> 1.5x.  I wonder what factor would be worth it for Xavier?

I think he said that the 1.5x would not cover the cost of adding smp
support in the first place. Apart from the fact that the added cost will
also be incurred by the single processor people, and, well HT technology
is all fine, but there will be some time before it is widely available.
Maybe then this issue will come up again, and another response will be
made.

Friendly,

Sven Luther
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

