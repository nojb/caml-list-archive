Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA29174; Mon, 4 Nov 2002 08:48:04 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA28637 for caml-list@pauillac.inria.fr; Mon, 4 Nov 2002 08:48:03 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA06038 for <caml-list@pauillac.inria.fr>; Sun, 3 Nov 2002 16:13:00 +0100 (MET)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from kraid.nerim.net (kraid.nerim.net [62.4.16.95])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id gA3FD0518418
	for <caml-list@inria.fr>; Sun, 3 Nov 2002 16:13:00 +0100 (MET)
Received: from chinon (jmarant.net1.nerim.net [62.212.105.6])
	by kraid.nerim.net (Postfix) with ESMTP id 7A42940E2D
	for <caml-list@inria.fr>; Sun,  3 Nov 2002 16:03:17 +0100 (CET)
Received: by chinon (Postfix, from userid 1000)
	id 5B92B818256; Sun,  3 Nov 2002 16:13:15 +0100 (CET)
To: caml-list@inria.fr
Subject: Re: [Caml-list] Open types and methods
References: <87bs57eyib.fsf@marant.org>
	<15813.2219.186024.594555@karryall.dnsalias.org>
From: jmarant@nerim.net (=?iso-8859-1?q?J=E9r=F4me?= Marant)
Date: Sun, 03 Nov 2002 16:13:15 +0100
In-Reply-To: <15813.2219.186024.594555@karryall.dnsalias.org> (Olivier
 Andrieu's message of "Sun, 3 Nov 2002 12:29:47 +0100")
Message-ID: <87znsqit4k.fsf@marant.org>
Lines: 29
User-Agent: Gnus/5.090007 (Oort Gnus v0.07) Emacs/21.2 (i386-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Olivier Andrieu <andrieu@ijm.jussieu.fr> writes:

>  Jérôme Marant [Sunday 3 November 2002] :
>  >
>  > 
>  > Hi,
>  > 
>  >   I know that I cannot use open types as method parameter types,
>  >   like:
>  > 
>  >   method foo (w : #mother) = ....
>  > 
>  >   So, how can I pass to a method an object of a given class or
>  >   of its inherited classes, i.e. how to work this limitation
>  >   around?
>
> Polymorphic methods ?
>
> method foo : 'a. (#mother as 'a) -> ... = fun w -> ...

  I'll have a look at this. Thanks.

  Cheers,

-- 
Jérôme Marant

http://marant.org
              
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

