Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA05818; Tue, 26 Nov 2002 20:23:41 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA05668 for <caml-list@pauillac.inria.fr>; Tue, 26 Nov 2002 20:23:39 +0100 (MET)
Received: from EXCHVS2.cs.cornell.edu (exchclu-node2.cs.cornell.edu [128.84.97.24])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id gAQJNc124072;
	Tue, 26 Nov 2002 20:23:38 +0100 (MET)
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
X-MimeOLE: Produced By Microsoft Exchange V6.0.6249.0
Subject: RE: [Caml-list] Why systhreads?
Date: Tue, 26 Nov 2002 14:23:34 -0500
Message-ID: <FB4F95390166B14C90E4DD950D69D6E2042309@EXCHVS2.cs.cornell.edu>
Thread-Topic: [Caml-list] Why systhreads?
Thread-Index: AcKVK3y0YQ7jq/TKT5SdJk52mLbVCwAVYZfA
From: "Gregory Morrisett" <jgm@CS.Cornell.EDU>
To: "Xavier Leroy" <xavier.leroy@inria.fr>, "Blair Zajac" <blair@orcaware.com>
Cc: <caml-list@inria.fr>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

>Factors of 10 are always nice :-)  Just kidding.  What I meant is the
>following: assume making the Caml runtime system thread-safe=20
>entails a 25% slowdown on program execution.  (This can easily=20
>happen if e.g. we have to lock a mutex at each heap=20
>allocation.) =20

I would assume that allocation (in the nursery) is done
via a pointer bump, and that it would be easy enough to
have separate nurseries for threads.  Then the only=20
synchronization that's needed is for GC.  At least, that's
how we did it with SML/NJ.

-Greg
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

