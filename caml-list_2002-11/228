Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id BAA00674; Mon, 18 Nov 2002 01:00:45 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA00670 for <caml-list@pauillac.inria.fr>; Mon, 18 Nov 2002 01:00:45 +0100 (MET)
Received: from favie.faith.gr.jp (favie.faith.gr.jp [61.127.175.250])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id gAI00g120133
	for <caml-list@inria.fr>; Mon, 18 Nov 2002 01:00:43 +0100 (MET)
Received: from localhost (dhcp7.faith.gr.jp [192.168.1.17])
	by favie.faith.gr.jp (8.9.3/8.9.3) with ESMTP id JAA01113;
	Mon, 18 Nov 2002 09:00:33 +0900
To: zack@cs.unibo.it
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] native code toplevel
In-Reply-To: <20021117102036.GD5205@lordsoth.takhisis.org>
References: <200211161432.gAGEWo124537@nez-perce.inria.fr>
	<Pine.LNX.4.44.0211170212430.1945-100000@home.oyster.ru>
	<20021117102036.GD5205@lordsoth.takhisis.org>
X-Mailer: Mew version 1.94.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20021118085958W.garrigue@kurims.kyoto-u.ac.jp>
Date: Mon, 18 Nov 2002 08:59:58 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 24
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Stefano Zacchiroli <zack@cs.unibo.it>
> On Sun, Nov 17, 2002 at 02:16:57AM +0300, malc wrote:
> > b) Ocaml has no way to dynamically load .cmx or .cmxa
> 
> We have lived for a long time with ocamlmktop, we can also live with
> building of native code toplevels.

I have a strong feeling that what people are really asking for is the
ability to mix bytecode and native code.

The real difficulty with a native code toplevel is not to build the
toplevel itself, but the fact that every line you input to the
toplevel is a small program which must be dynamically compiled, linked
and run. With bytecode this is easy (a bit of meta glue), but with
pure native code this would be complicated and slow.  The ideal would
be to use native code libraries inside a toplevel compiling to
bytecode.

IIRC Fabrice le Feissant had some way to do it, by writing a bytecode
interpreter in ocaml itself, but I don't know how hard it would be to
adapt the toplevel to this approach (knowing that there is a fair bit
of magic in the way the toplevel links with itself).

Jacques Garrigue
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

