Return-Path: <anthony.tavener@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id DD6877FACD
	for <caml-list@sympa.inria.fr>; Sun, 28 Sep 2014 21:45:43 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  anthony.tavener@gmail.com) identity=pra;
  client-ip=209.85.220.174;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="anthony.tavener@gmail.com";
  x-sender="anthony.tavener@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  anthony.tavener@gmail.com designates 209.85.220.174 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.220.174;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="anthony.tavener@gmail.com";
  x-sender="anthony.tavener@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-vc0-f174.google.com) identity=helo;
  client-ip=209.85.220.174;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="anthony.tavener@gmail.com";
  x-sender="postmaster@mail-vc0-f174.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AtYBAONjKFTRVdyum2dsb2JhbABggkiBGU0Ogn3HD4dTAnMIFgERAQEBAQEGCwsJFCyEBAEBAwESEQQZARsdAQMBCwYFCzcCAiEBAREBBQEcBhMiiAcBAwkIDZ0yboswgXKDEIg3ChknDWeGOQERAQEEDo1ggiwEB4J4gVMFhluEdIcbgzWCPoI7ghCPFYRWGCmFMx4vAYJJAQEB
X-IPAS-Result: AtYBAONjKFTRVdyum2dsb2JhbABggkiBGU0Ogn3HD4dTAnMIFgERAQEBAQEGCwsJFCyEBAEBAwESEQQZARsdAQMBCwYFCzcCAiEBAREBBQEcBhMiiAcBAwkIDZ0yboswgXKDEIg3ChknDWeGOQERAQEEDo1ggiwEB4J4gVMFhluEdIcbgzWCPoI7ghCPFYRWGCmFMx4vAYJJAQEB
X-IronPort-AV: E=Sophos;i="5.04,615,1406584800"; 
   d="scan'208";a="98299060"
Received: from mail-vc0-f174.google.com ([209.85.220.174])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 28 Sep 2014 21:45:43 +0200
Received: by mail-vc0-f174.google.com with SMTP id hy4so739821vcb.19
        for <caml-list@inria.fr>; Sun, 28 Sep 2014 12:45:41 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=aUM88z3CiLw8jhP8xV+T6BTWzKOinwJNHNaQhTdozTM=;
        b=WNzqKt8Z8Fnq3qkDeBuJwO0ZwaIfQ6iqQ/c6a0gfgdE/1PrS0mgm7OkL7e4xzOftpw
         WeXNS28X5EX7RqWzZ6FbZfgKU1RDWhC+qocuYFhrKOKABTlJg3plQacT6Jp25B8jtizY
         EFtsWuV3Y7R+F/axr2hcqc1fUh16VmAt+WymijV4kYG6TzXGIa5eC2JJ1bN7XMWonu95
         CWdh4z4YnJwj4QfLPsnUcTnOm8Rfl9cc8OrJXOE+gt+wuiGMV7wpjxlUedZgYRes89m3
         K+tQ9A+Pwke1LIQtzSCc3gaVJA8U3T5I7WXv+3d8GV4oz1PMu/rfS5h7oSflbubVIurJ
         dqpQ==
MIME-Version: 1.0
X-Received: by 10.52.141.45 with SMTP id rl13mr1623149vdb.49.1411933541760;
 Sun, 28 Sep 2014 12:45:41 -0700 (PDT)
Received: by 10.220.159.133 with HTTP; Sun, 28 Sep 2014 12:45:41 -0700 (PDT)
In-Reply-To: <CAEQMQo=bZnk2+GRD1RpW_W-2GVrugVPgMCguwAYSYj7dqY3A_g@mail.gmail.com>
References: <CAEQMQo=bZnk2+GRD1RpW_W-2GVrugVPgMCguwAYSYj7dqY3A_g@mail.gmail.com>
Date: Sun, 28 Sep 2014 13:45:41 -0600
Message-ID: <CAN=ouMSbJNEWeJ=1XG1nqRSS=c3WMFvHMQF+jDOh9rDyz62dJQ@mail.gmail.com>
From: Anthony Tavener <anthony.tavener@gmail.com>
To: Shuai Wang <wangshuai901@gmail.com>
Cc: "caml-list@inria.fr" <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=bcaec51ba1b934046f05042565ae
Subject: Re: [Caml-list] Why List.map does not be implemented
 tail-recursively?

--bcaec51ba1b934046f05042565ae
Content-Type: text/plain; charset=UTF-8

(Oh, Gabriel beat me to the punch, but I'll add my reply anyway.)

The standard library is a fairly minimal library of basic features. Not a
high-level full-featured library which helps you make good choices. :)

However, the documentation (in .mli files) is fairly clear about what is
tail-recursive or not. And there is rev_map:

val rev_map : ('a -> 'b) -> 'a list -> 'b list
(** [List.rev_map f l] gives the same result as
   {!List.rev}[ (]{!List.map}[ f l)], but is tail-recursive and
   more efficient. *)


On Sun, Sep 28, 2014 at 1:31 PM, Shuai Wang <wangshuai901@gmail.com> wrote:

> Hello list,
>
>
> I am working on some stack_overflow exception in our recent project
> written in OCaml
> and eventually it turns out that this exception is thrown by List.map
> function.
>
> By seeing the source code of OCaml's List module
> <https://code.ohloh.net/file?fid=P5Us_txNCMHIhpdfML6OZ8QN4Zs&cid=Jigg8RAfQdg&s=ocaml%20list.ml&pp=0&fp=305967&fe=ml&ff=1&filterChecked=true&mp=1&ml=1&me=1&md=1#L3>,
> it seems that map function
> does not be implemented tail-recursively:
>
> let rec map f = function
>     [] -> []
>   | a::l -> let r = f a in r :: map f l
>
>
>
> So my question is:
>
> *Why would OCaml's implementation List.map like this?  *
>
> In my humble option, it definitely should be written in a tail-recursive
> way,
> and it not, stack_overflow would be unavoidable.
> For example in order to handle the exception,
> I abandon the code using List.map and rewrite it into a tail-recursive
> help function.
>
> Best,
> Shuai
>

--bcaec51ba1b934046f05042565ae
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div style>(Oh, Gabriel beat me to the punch, but I&#39;ll=
 add my reply anyway.)</div><div style><br></div>The standard library is a =
fairly minimal library of basic features. Not a high-level full-featured li=
brary which helps you make good choices. :)<div><br></div><div style>Howeve=
r, the documentation (in .mli files) is fairly clear about what is tail-rec=
ursive or not. And there is rev_map:</div><div style><br></div><div><div>va=
l rev_map : (&#39;a -&gt; &#39;b) -&gt; &#39;a list -&gt; &#39;b list</div>=
<div>(** [List.rev_map f l] gives the same result as</div><div>=C2=A0 =C2=
=A0{!List.rev}[ (]{!List.map}[ f l)], but is tail-recursive and</div><div>=
=C2=A0 =C2=A0more efficient. *)</div><div><br></div></div></div><div class=
=3D"gmail_extra"><br><div class=3D"gmail_quote">On Sun, Sep 28, 2014 at 1:3=
1 PM, Shuai Wang <span dir=3D"ltr">&lt;<a href=3D"mailto:wangshuai901@gmail=
.com" target=3D"_blank">wangshuai901@gmail.com</a>&gt;</span> wrote:<br><bl=
ockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #=
ccc solid;padding-left:1ex"><div class=3D"HOEnZb"><div class=3D"h5"><div di=
r=3D"ltr"><span style=3D"font-family:arial,sans-serif;font-size:13px">Hello=
 list,</span><div style=3D"font-family:arial,sans-serif;font-size:13px"><br=
></div><div style=3D"font-family:arial,sans-serif;font-size:13px"><br></div=
><div style=3D"font-family:arial,sans-serif;font-size:13px">I am working on=
 some stack_overflow exception in our recent project written in OCaml</div>=
<div style=3D"font-family:arial,sans-serif;font-size:13px">and eventually i=
t turns out that this exception is thrown by List.map function.</div><div s=
tyle=3D"font-family:arial,sans-serif;font-size:13px"><br></div><div style=
=3D"font-family:arial,sans-serif;font-size:13px">By seeing the source code =
of OCaml&#39;s=C2=A0<a href=3D"https://code.ohloh.net/file?fid=3DP5Us_txNCM=
HIhpdfML6OZ8QN4Zs&amp;cid=3DJigg8RAfQdg&amp;s=3Docaml%20list.ml&amp;pp=3D0&=
amp;fp=3D305967&amp;fe=3Dml&amp;ff=3D1&amp;filterChecked=3Dtrue&amp;mp=3D1&=
amp;ml=3D1&amp;me=3D1&amp;md=3D1#L3" target=3D"_blank">List module</a>, it =
seems that map function=C2=A0</div><div style=3D"font-family:arial,sans-ser=
if;font-size:13px">does not be implemented tail-recursively:=C2=A0</div><di=
v style=3D"font-family:arial,sans-serif;font-size:13px"><br></div><div styl=
e=3D"font-family:arial,sans-serif;font-size:13px"><pre style=3D"white-space=
:pre-wrap;margin-top:0px;margin-bottom:0px;padding:0px;list-style:none;colo=
r:rgb(0,0,0);font-size:12px;line-height:14.399999618530273px"><a title=3D"S=
earch for references of &quot;let&quot;" style=3D"color:black;margin:0px;pa=
dding-top:0px;padding-right:0px;padding-left:0px;list-style:none;outline:no=
ne">let</a> <a title=3D"Search for references of &quot;rec&quot;" style=3D"=
color:black;margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;l=
ist-style:none;outline:none">rec</a> <a title=3D"Search for references of &=
quot;map&quot;" style=3D"color:black;margin:0px;padding-top:0px;padding-rig=
ht:0px;padding-left:0px;list-style:none;outline:none">map</a> <a title=3D"S=
earch for references of &quot;f&quot;" style=3D"color:black;margin:0px;padd=
ing-top:0px;padding-right:0px;padding-left:0px;list-style:none;outline:none=
">f</a> =3D <a title=3D"Search for references of &quot;function&quot;" styl=
e=3D"color:black;margin:0px;padding-top:0px;padding-right:0px;padding-left:=
0px;list-style:none;outline:none">function</a>
    [] -&gt; []
  | <a title=3D"Search for references of &quot;a&quot;" style=3D"color:blac=
k;margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:=
none;outline:none">a</a>::<a title=3D"Search for references of &quot;l&quot=
;" style=3D"color:black;margin:0px;padding-top:0px;padding-right:0px;paddin=
g-left:0px;list-style:none;outline:none">l</a> -&gt; <a title=3D"Search for=
 references of &quot;let&quot;" style=3D"color:black;margin:0px;padding-top=
:0px;padding-right:0px;padding-left:0px;list-style:none;outline:none">let</=
a> <a title=3D"Search for references of &quot;r&quot;" style=3D"color:black=
;margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:n=
one;outline:none">r</a> =3D <a title=3D"Search for references of &quot;f&qu=
ot;" style=3D"color:black;margin:0px;padding-top:0px;padding-right:0px;padd=
ing-left:0px;list-style:none;outline:none">f</a> <a title=3D"Search for ref=
erences of &quot;a&quot;" style=3D"color:black;margin:0px;padding-top:0px;p=
adding-right:0px;padding-left:0px;list-style:none;outline:none">a</a> <a ti=
tle=3D"Search for references of &quot;in&quot;" style=3D"color:black;margin=
:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:none;out=
line:none">in</a> <a title=3D"Search for references of &quot;r&quot;" style=
=3D"color:black;margin:0px;padding-top:0px;padding-right:0px;padding-left:0=
px;list-style:none;outline:none">r</a> :: <a title=3D"Search for references=
 of &quot;map&quot;" style=3D"color:black;margin:0px;padding-top:0px;paddin=
g-right:0px;padding-left:0px;list-style:none;outline:none">map</a> <a title=
=3D"Search for references of &quot;f&quot;" style=3D"color:black;margin:0px=
;padding-top:0px;padding-right:0px;padding-left:0px;list-style:none;outline=
:none">f</a> <a title=3D"Search for references of &quot;l&quot;" style=3D"c=
olor:black;margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;li=
st-style:none;outline:none">l</a>
</pre></div><div style=3D"font-family:arial,sans-serif;font-size:13px"><a t=
itle=3D"Search for references of &quot;l&quot;" style=3D"color:black;margin=
:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:none;out=
line:none"><br></a></div><div style=3D"font-family:arial,sans-serif;font-si=
ze:13px"><a title=3D"Search for references of &quot;l&quot;" style=3D"color=
:black;margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-s=
tyle:none;outline:none"><br></a></div><div style=3D"font-family:arial,sans-=
serif;font-size:13px"><a title=3D"Search for references of &quot;l&quot;" s=
tyle=3D"color:black;margin:0px;padding-top:0px;padding-right:0px;padding-le=
ft:0px;list-style:none;outline:none">So my question is:=C2=A0</a></div><div=
 style=3D"font-family:arial,sans-serif;font-size:13px"><a title=3D"Search f=
or references of &quot;l&quot;" style=3D"color:black;margin:0px;padding-top=
:0px;padding-right:0px;padding-left:0px;list-style:none;outline:none"><b><b=
r></b></a></div><div style=3D"font-family:arial,sans-serif;font-size:13px">=
<a title=3D"Search for references of &quot;l&quot;" style=3D"color:black;ma=
rgin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:none=
;outline:none"><b>Why would OCaml&#39;s implementation List.map like this? =
=C2=A0</b></a></div><div style=3D"font-family:arial,sans-serif;font-size:13=
px"><a title=3D"Search for references of &quot;l&quot;" style=3D"color:blac=
k;margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:=
none;outline:none"><br></a></div><div style=3D"font-family:arial,sans-serif=
;font-size:13px"><a title=3D"Search for references of &quot;l&quot;" style=
=3D"color:black;margin:0px;padding-top:0px;padding-right:0px;padding-left:0=
px;list-style:none;outline:none">In my humble option, it definitely should =
be written in a tail-recursive way,</a></div><div style=3D"font-family:aria=
l,sans-serif;font-size:13px"><a title=3D"Search for references of &quot;l&q=
uot;" style=3D"color:black;margin:0px;padding-top:0px;padding-right:0px;pad=
ding-left:0px;list-style:none;outline:none">and it not, stack_overflow woul=
d be unavoidable.=C2=A0</a></div><div style=3D"font-family:arial,sans-serif=
;font-size:13px"><a title=3D"Search for references of &quot;l&quot;" style=
=3D"color:black;margin:0px;padding-top:0px;padding-right:0px;padding-left:0=
px;list-style:none;outline:none">For example in order to=C2=A0</a><a title=
=3D"Search for references of &quot;l&quot;" style=3D"color:black;margin:0px=
;padding-top:0px;padding-right:0px;padding-left:0px;list-style:none;outline=
:none">handle the exception,=C2=A0</a></div><div style=3D"font-family:arial=
,sans-serif;font-size:13px"><a title=3D"Search for references of &quot;l&qu=
ot;" style=3D"color:black;margin:0px;padding-top:0px;padding-right:0px;padd=
ing-left:0px;list-style:none;outline:none">I abandon the code using List.ma=
p and rewrite it=C2=A0</a><a title=3D"Search for references of &quot;l&quot=
;" style=3D"color:black;margin:0px;padding-top:0px;padding-right:0px;paddin=
g-left:0px;list-style:none;outline:none">into a tail-recursive help functio=
n.=C2=A0</a></div><div style=3D"font-family:arial,sans-serif;font-size:13px=
"><a title=3D"Search for references of &quot;l&quot;" style=3D"color:black;=
margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:no=
ne;outline:none"><br></a></div><div style=3D"font-family:arial,sans-serif;f=
ont-size:13px"><a title=3D"Search for references of &quot;l&quot;" style=3D=
"color:black;margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;=
list-style:none;outline:none">Best,</a></div><div style=3D"font-family:aria=
l,sans-serif;font-size:13px"><a title=3D"Search for references of &quot;l&q=
uot;" style=3D"color:black;margin:0px;padding-top:0px;padding-right:0px;pad=
ding-left:0px;list-style:none;outline:none">Shuai</a></div></div>
</div></div></blockquote></div><br></div>

--bcaec51ba1b934046f05042565ae--
