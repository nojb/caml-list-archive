Return-Path: <anthony.tavener@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id C6CDB7FACE
	for <caml-list@sympa.inria.fr>; Thu, 25 Sep 2014 17:57:59 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  anthony.tavener@gmail.com) identity=pra;
  client-ip=209.85.220.169;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="anthony.tavener@gmail.com";
  x-sender="anthony.tavener@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  anthony.tavener@gmail.com designates 209.85.220.169 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.220.169;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="anthony.tavener@gmail.com";
  x-sender="anthony.tavener@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-vc0-f169.google.com) identity=helo;
  client-ip=209.85.220.169;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="anthony.tavener@gmail.com";
  x-sender="postmaster@mail-vc0-f169.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjsCABg7JFTRVdypm2dsb2JhbABgg2FNCgSCfbYoj1iBbYdOAnwIFgERAQEBAQEGCwsJFCyEBAEBAwESER0BGxILAQMBCwYFBAcaHQICIQEBEQEFAQoSBhMIChCIBwEDCQgNn0ZuizCBcoMQiSEKGScDCmaGFgERAQUOjWCBWFQEB4J4gVMFhRMFhjSDfIMdgzWCPoI7ghCBYo0thFUYKYUzHi+BBoFEAQEB
X-IPAS-Result: AjsCABg7JFTRVdypm2dsb2JhbABgg2FNCgSCfbYoj1iBbYdOAnwIFgERAQEBAQEGCwsJFCyEBAEBAwESER0BGxILAQMBCwYFBAcaHQICIQEBEQEFAQoSBhMIChCIBwEDCQgNn0ZuizCBcoMQiSEKGScDCmaGFgERAQUOjWCBWFQEB4J4gVMFhRMFhjSDfIMdgzWCPoI7ghCBYo0thFUYKYUzHi+BBoFEAQEB
X-IronPort-AV: E=Sophos;i="5.04,598,1406584800"; 
   d="scan'208";a="80906203"
Received: from mail-vc0-f169.google.com ([209.85.220.169])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 25 Sep 2014 17:57:58 +0200
Received: by mail-vc0-f169.google.com with SMTP id id10so7146969vcb.28
        for <caml-list@inria.fr>; Thu, 25 Sep 2014 08:57:57 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=JrvBWqKo7OtO5R8O1d3dgqm1YpnV7d+ENsE36sYrd4M=;
        b=X8cib+nMrgrYM2zCPG87AVR/k7Vm5j+WqIkZNbVl+MJFGkEbI4MWuHoX5fJpTrSvr8
         lWJU1k1V06caTn3XnguT6Vm9ZL8U++FPBuBLgQ/CAkgXZrAWPxhW9ZJ6AgTQNft5ObAR
         TrRNDEwcPfH079gB+nD3t/O7zmst/OwwmNLf5HA/TwkXvlouR/FL6Rk1vsSvcHhU1Lp4
         qPkWPz56V54u9PfEwxsPGkew0PvuNHKNRGXPBqSiAgsl281yhDl520EAwWsRBsGNy1AB
         FAwDBhBr8hEzAumyilQAlR6NYPYJdZCt+omX2OskOClMlGpH+lOArQgAQdHMn0jVz0VY
         vqNg==
MIME-Version: 1.0
X-Received: by 10.52.145.234 with SMTP id sx10mr636633vdb.79.1411660677658;
 Thu, 25 Sep 2014 08:57:57 -0700 (PDT)
Received: by 10.220.159.141 with HTTP; Thu, 25 Sep 2014 08:57:57 -0700 (PDT)
In-Reply-To: <CALdQWQ4we0DKwu9DghSbNJeQ8o+dhwoEd6ke6WDCsTy0OCADoA@mail.gmail.com>
References: <CALdQWQ4we0DKwu9DghSbNJeQ8o+dhwoEd6ke6WDCsTy0OCADoA@mail.gmail.com>
Date: Thu, 25 Sep 2014 09:57:57 -0600
Message-ID: <CAN=ouMRLuWWhT4XHSoNX1dzC99_wZVFq6A4fEm0Yappyiv391Q@mail.gmail.com>
From: Anthony Tavener <anthony.tavener@gmail.com>
To: Yoriyuki Yamagata <yoriyuki.y@gmail.com>
Cc: Caml List <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=bcaec51a70ae3c3d550503e5ddf5
Subject: Re: [Caml-list] Succinct data structures

--bcaec51a70ae3c3d550503e5ddf5
Content-Type: text/plain; charset=UTF-8

I'd never heard of these terms before. After some searching and finding
papers
which describe what LOUDS (level order unary degree sequence) is, I realize
I
use these (in a trivial form). I used the term "hierarchical bitfield", and
over the years I've tried searching for the technique using various terms --
with no success. I must say I never would have guessed "level order unary
degree sequence". :)

So, thank you for finally providing a name, and a means to find other work
using this structure. My uses are in games: succinctly representing
hierarchical data in a manner which I can do fast bitmatches.
Unfortunately, I
don't have a nice library for building and working with these
datastructures,
as my uses are fairly limited: trees that can be encoded within 64 bits.

Hopefully someone out there knows of a library in OCaml, but if not, the
"bitstring" library might be a useful building block... or, of course, the
option of binding to a C library.

Good luck! Sorry I couldn't be more helpful, while you've helped me by
asking
a question.


On Thu, Sep 25, 2014 at 6:48 AM, Yoriyuki Yamagata <yoriyuki.y@gmail.com>
wrote:

> Hi, list,
>
> Does anyone try to implement succinct data structures, such as
> compressed suffix array or LOUDS in OCaml?  The search does not show
> anything.
>
> --
> Yoriyuki Yamagata
> http://yoriyuki.info/
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>

--bcaec51a70ae3c3d550503e5ddf5
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>I&#39;d never heard of these terms before. After some=
 searching and finding papers</div><div>which describe what LOUDS (level or=
der unary degree sequence) is, I realize I</div><div>use these (in a trivia=
l form). I used the term &quot;hierarchical bitfield&quot;, and</div><div>o=
ver the years I&#39;ve tried searching for the technique using various term=
s --</div><div>with no success. I must say I never would have guessed &quot=
;level order unary</div><div>degree sequence&quot;. :)</div><div><br></div>=
<div>So, thank you for finally providing a name, and a means to find other =
work</div><div>using this structure. My uses are in games: succinctly repre=
senting</div><div>hierarchical data in a manner which I can do fast bitmatc=
hes. Unfortunately, I</div><div>don&#39;t have a nice library for building =
and working with these datastructures,</div><div>as my uses are fairly limi=
ted: trees that can be encoded within 64 bits.</div><div><br></div><div>Hop=
efully someone out there knows of a library in OCaml, but if not, the</div>=
<div>&quot;bitstring&quot; library might be a useful building block... or, =
of course, the</div><div>option of binding to a C library.</div><div><br></=
div><div>Good luck! Sorry I couldn&#39;t be more helpful, while you&#39;ve =
helped me by asking</div><div>a question.</div><div><br></div></div><div cl=
ass=3D"gmail_extra"><br><div class=3D"gmail_quote">On Thu, Sep 25, 2014 at =
6:48 AM, Yoriyuki Yamagata <span dir=3D"ltr">&lt;<a href=3D"mailto:yoriyuki=
.y@gmail.com" target=3D"_blank">yoriyuki.y@gmail.com</a>&gt;</span> wrote:<=
br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left=
:1px #ccc solid;padding-left:1ex">Hi, list,<br>
<br>
Does anyone try to implement succinct data structures, such as<br>
compressed suffix array or LOUDS in OCaml?=C2=A0 The search does not show<b=
r>
anything.<br>
<span class=3D"HOEnZb"><font color=3D"#888888"><br>
--<br>
Yoriyuki Yamagata<br>
<a href=3D"http://yoriyuki.info/" target=3D"_blank">http://yoriyuki.info/</=
a><br>
<br>
--<br>
Caml-list mailing list.=C2=A0 Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" target=3D"_blank">ht=
tps://sympa.inria.fr/sympa/arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
</font></span></blockquote></div><br></div>

--bcaec51a70ae3c3d550503e5ddf5--
