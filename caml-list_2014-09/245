Return-Path: <wangshuai901@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 499B37FACD
	for <caml-list@sympa.inria.fr>; Sun, 28 Sep 2014 21:28:25 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  wangshuai901@gmail.com) identity=pra;
  client-ip=209.85.217.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="wangshuai901@gmail.com";
  x-sender="wangshuai901@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  wangshuai901@gmail.com designates 209.85.217.173 as permitted
  sender) identity=mailfrom; client-ip=209.85.217.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="wangshuai901@gmail.com";
  x-sender="wangshuai901@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-lb0-f173.google.com) identity=helo;
  client-ip=209.85.217.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="wangshuai901@gmail.com";
  x-sender="postmaster@mail-lb0-f173.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AtUBAM1gKFTRVdmtm2dsb2JhbABggkiBGVuCfccPh1N1CBYBEQEBAQEBBgsLCRQshBwRBBkBGx4DEhA3AiQBEQEFAVeIBwEDEQ2aF4MdboswgXKDEIg2ChknDWeGSwEBBA6QDCGCYoFTBYZbj0SCPoRLk2sYKYUwIS8BgkkBAQE
X-IPAS-Result: AtUBAM1gKFTRVdmtm2dsb2JhbABggkiBGVuCfccPh1N1CBYBEQEBAQEBBgsLCRQshBwRBBkBGx4DEhA3AiQBEQEFAVeIBwEDEQ2aF4MdboswgXKDEIg2ChknDWeGSwEBBA6QDCGCYoFTBYZbj0SCPoRLk2sYKYUwIS8BgkkBAQE
X-IronPort-AV: E=Sophos;i="5.04,615,1406584800"; 
   d="scan'208";a="81188523"
Received: from mail-lb0-f173.google.com ([209.85.217.173])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 28 Sep 2014 21:28:24 +0200
Received: by mail-lb0-f173.google.com with SMTP id 10so14907534lbg.4
        for <caml-list@inria.fr>; Sun, 28 Sep 2014 12:28:23 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:date:message-id:subject:from:to:content-type;
        bh=gH4Q2Bj/z9uGhC4vr0oD9G6ZEl5nkG/ZjCRz9seTROU=;
        b=ITkQnn3x4ct1pcb3AAsd6F4E67+7wKD4nc7I6ik7tOVW3zKWAGIL1dHDrkoMuTCqRx
         DGoLunI0t1DPQn8L/OU05YKPNX/gtAZ/0sLhIiCoyWCtv0AToEzFhnClnuz+sjX1tAbN
         s7EQKDeffYzme+DheObk1o/5zOeXkiHl+lwOAc5ac1vhisl3vGBDfYsz0ahtmU8bFMMi
         O7CzpKEifNY0NLosrNRxJt2nh7J+VxvZrVglezqR884eMo1tjzcpZsNGh8OiBf2alhDV
         O2ewSbb8Ucv/4CjSefE2KB4amz0aETrh/g1iFSjF+yeK5xgsYBoYuIav8mtMB9dk71uG
         YEVw==
MIME-Version: 1.0
X-Received: by 10.112.13.10 with SMTP id d10mr32735911lbc.10.1411932503579;
 Sun, 28 Sep 2014 12:28:23 -0700 (PDT)
Received: by 10.114.59.101 with HTTP; Sun, 28 Sep 2014 12:28:23 -0700 (PDT)
Date: Sun, 28 Sep 2014 15:28:23 -0400
Message-ID: <CAEQMQonxc3uAHb=6GfYRk4nYTOcx2nHs+ObHZ4P2Rz8mPbdJow@mail.gmail.com>
From: Shuai Wang <wangshuai901@gmail.com>
To: caml-list@inria.fr
Content-Type: multipart/alternative; boundary=001a11c3a11a52a36a0504252712
Subject: [Caml-list] Why List.map does not be implemented tail-recursively?

--001a11c3a11a52a36a0504252712
Content-Type: text/plain; charset=UTF-8

Hello list,


I am working on some stack_overflow exception in our recent project written
in OCaml
and eventually it turns out that this exception is thrown by List.map
function.

By seeing the source code of OCaml's List module
<https://code.ohloh.net/file?fid=P5Us_txNCMHIhpdfML6OZ8QN4Zs&cid=Jigg8RAfQdg&s=ocaml%20list.ml&pp=0&fp=305967&fe=ml&ff=1&filterChecked=true&mp=1&ml=1&me=1&md=1#L3>,
it seems that map function
does not be implemented tail-recursively:

let rec map f = function
    [] -> []
  | a::l -> let r = f a in r :: map f l



So my question is:

*Why would OCaml's implementation List.map like this?  *

In my humble option, it definitely should be written in a tail-recursive
way,
and it not, stack_overflow would be unavoidable.
For example in order to handle the exception,
I abandon the code using List.map and rewrite it into a tail-recursive help
function.

Best,
Shuai

--001a11c3a11a52a36a0504252712
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hello list,<div><br></div><div><br></div><div>I am working=
 on some stack_overflow exception in our recent project written in OCaml</d=
iv><div>and eventually it turns out that this exception is thrown by List.m=
ap function.</div><div><br></div><div>By seeing the source code of OCaml&#3=
9;s <a href=3D"https://code.ohloh.net/file?fid=3DP5Us_txNCMHIhpdfML6OZ8QN4Z=
s&amp;cid=3DJigg8RAfQdg&amp;s=3Docaml%20list.ml&amp;pp=3D0&amp;fp=3D305967&=
amp;fe=3Dml&amp;ff=3D1&amp;filterChecked=3Dtrue&amp;mp=3D1&amp;ml=3D1&amp;m=
e=3D1&amp;md=3D1#L3" target=3D"_blank">List module</a>, it seems that map f=
unction=C2=A0</div><div>does not be implemented tail-recursively:=C2=A0</di=
v><div><br></div><div><pre style=3D"margin-top:0px;margin-bottom:0px;paddin=
g:0px;list-style:none;color:rgb(0,0,0);font-size:12px;line-height:14.399999=
618530273px"><a title=3D"Search for references of &quot;let&quot;" style=3D=
"margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:n=
one;color:black;outline:none">let</a> <a title=3D"Search for references of =
&quot;rec&quot;" style=3D"margin:0px;padding-top:0px;padding-right:0px;padd=
ing-left:0px;list-style:none;color:black;outline:none">rec</a> <a title=3D"=
Search for references of &quot;map&quot;" style=3D"margin:0px;padding-top:0=
px;padding-right:0px;padding-left:0px;list-style:none;color:black;outline:n=
one">map</a> <a title=3D"Search for references of &quot;f&quot;" style=3D"m=
argin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:non=
e;color:black;outline:none">f</a> =3D <a title=3D"Search for references of =
&quot;function&quot;" style=3D"margin:0px;padding-top:0px;padding-right:0px=
;padding-left:0px;list-style:none;color:black;outline:none">function</a>
    [] -&gt; []
  | <a title=3D"Search for references of &quot;a&quot;" style=3D"margin:0px=
;padding-top:0px;padding-right:0px;padding-left:0px;list-style:none;color:b=
lack;outline:none">a</a>::<a title=3D"Search for references of &quot;l&quot=
;" style=3D"margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;l=
ist-style:none;color:black;outline:none">l</a> -&gt; <a title=3D"Search for=
 references of &quot;let&quot;" style=3D"margin:0px;padding-top:0px;padding=
-right:0px;padding-left:0px;list-style:none;color:black;outline:none">let</=
a> <a title=3D"Search for references of &quot;r&quot;" style=3D"margin:0px;=
padding-top:0px;padding-right:0px;padding-left:0px;list-style:none;color:bl=
ack;outline:none">r</a> =3D <a title=3D"Search for references of &quot;f&qu=
ot;" style=3D"margin:0px;padding-top:0px;padding-right:0px;padding-left:0px=
;list-style:none;color:black;outline:none">f</a> <a title=3D"Search for ref=
erences of &quot;a&quot;" style=3D"margin:0px;padding-top:0px;padding-right=
:0px;padding-left:0px;list-style:none;color:black;outline:none">a</a> <a ti=
tle=3D"Search for references of &quot;in&quot;" style=3D"margin:0px;padding=
-top:0px;padding-right:0px;padding-left:0px;list-style:none;color:black;out=
line:none">in</a> <a title=3D"Search for references of &quot;r&quot;" style=
=3D"margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-styl=
e:none;color:black;outline:none">r</a> :: <a title=3D"Search for references=
 of &quot;map&quot;" style=3D"margin:0px;padding-top:0px;padding-right:0px;=
padding-left:0px;list-style:none;color:black;outline:none">map</a> <a title=
=3D"Search for references of &quot;f&quot;" style=3D"margin:0px;padding-top=
:0px;padding-right:0px;padding-left:0px;list-style:none;color:black;outline=
:none">f</a> <a title=3D"Search for references of &quot;l&quot;" style=3D"m=
argin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:non=
e;color:black;outline:none">l</a>
</pre></div><div><a title=3D"Search for references of &quot;l&quot;" style=
=3D"margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-styl=
e:none;color:black;outline:none"><br></a></div><div><a title=3D"Search for =
references of &quot;l&quot;" style=3D"margin:0px;padding-top:0px;padding-ri=
ght:0px;padding-left:0px;list-style:none;color:black;outline:none"><br></a>=
</div><div><a title=3D"Search for references of &quot;l&quot;" style=3D"mar=
gin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:none;=
color:black;outline:none">So my question is:=C2=A0</a></div><div><a title=
=3D"Search for references of &quot;l&quot;" style=3D"margin:0px;padding-top=
:0px;padding-right:0px;padding-left:0px;list-style:none;color:black;outline=
:none"><b><br></b></a></div><div><a title=3D"Search for references of &quot=
;l&quot;" style=3D"margin:0px;padding-top:0px;padding-right:0px;padding-lef=
t:0px;list-style:none;color:black;outline:none"><b>Why would OCaml&#39;s im=
plementation List.map like this? =C2=A0</b></a></div><div><a title=3D"Searc=
h for references of &quot;l&quot;" style=3D"margin:0px;padding-top:0px;padd=
ing-right:0px;padding-left:0px;list-style:none;color:black;outline:none"><b=
r></a></div><div><a title=3D"Search for references of &quot;l&quot;" style=
=3D"margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-styl=
e:none;color:black;outline:none">In my humble option, it definitely should =
be written in a tail-recursive way,</a></div><div><a title=3D"Search for re=
ferences of &quot;l&quot;" style=3D"margin:0px;padding-top:0px;padding-righ=
t:0px;padding-left:0px;list-style:none;color:black;outline:none">and it not=
, stack_overflow would be unavoidable.=C2=A0</a></div><div><a title=3D"Sear=
ch for references of &quot;l&quot;" style=3D"margin:0px;padding-top:0px;pad=
ding-right:0px;padding-left:0px;list-style:none;color:black;outline:none">F=
or example in order to=C2=A0</a><a title=3D"Search for references of &quot;=
l&quot;" style=3D"margin:0px;padding-top:0px;padding-right:0px;padding-left=
:0px;list-style:none;color:black;outline:none">handle the exception,=C2=A0<=
/a></div><div><a title=3D"Search for references of &quot;l&quot;" style=3D"=
margin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:no=
ne;color:black;outline:none">I abandon the code using List.map and rewrite =
it=C2=A0</a><a title=3D"Search for references of &quot;l&quot;" style=3D"ma=
rgin:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:none=
;color:black;outline:none">into a tail-recursive help function.=C2=A0</a></=
div><div><a title=3D"Search for references of &quot;l&quot;" style=3D"margi=
n:0px;padding-top:0px;padding-right:0px;padding-left:0px;list-style:none;co=
lor:black;outline:none"><br></a></div><div><a title=3D"Search for reference=
s of &quot;l&quot;" style=3D"margin:0px;padding-top:0px;padding-right:0px;p=
adding-left:0px;list-style:none;color:black;outline:none">Best,</a></div><d=
iv><a title=3D"Search for references of &quot;l&quot;" style=3D"margin:0px;=
padding-top:0px;padding-right:0px;padding-left:0px;list-style:none;color:bl=
ack;outline:none">Shuai</a></div><div><a title=3D"Search for references of =
&quot;l&quot;" style=3D"margin:0px;padding-top:0px;padding-right:0px;paddin=
g-left:0px;list-style:none;color:black;outline:none"><br></a></div><div><a =
title=3D"Search for references of &quot;l&quot;" style=3D"margin:0px;paddin=
g-top:0px;padding-right:0px;padding-left:0px;list-style:none;color:black;ou=
tline:none"><br></a></div></div>

--001a11c3a11a52a36a0504252712--
