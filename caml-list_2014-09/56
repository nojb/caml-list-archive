Return-Path: <besognet.remy@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 6EF9A7F75C
	for <caml-list@sympa.inria.fr>; Sun,  7 Sep 2014 11:55:51 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  besognet.remy@gmail.com) identity=pra;
  client-ip=209.85.217.177;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="besognet.remy@gmail.com";
  x-sender="besognet.remy@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  besognet.remy@gmail.com designates 209.85.217.177 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.217.177;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="besognet.remy@gmail.com";
  x-sender="besognet.remy@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-lb0-f177.google.com) identity=helo;
  client-ip=209.85.217.177;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="besognet.remy@gmail.com";
  x-sender="postmaster@mail-lb0-f177.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AiIDAEErDFTRVdmxm2dsb2JhbAAYQYJHgRlXBIJ4sEeUPoFph0x8CBYQAQEBAQEGCwsJFCqEBAEBAwESEQQZAS0LAQMBCwEFAwILGh0CAiISAQUBChIGEwgKEIgMAwkIDYpFLZAqa4swhQKIbCcDCoZaAREBBQ6PO4MEgVMFhQoFkGGHAoFfkVsYKYFsgQ2CGjwvAYJOAQEB
X-IPAS-Result: AiIDAEErDFTRVdmxm2dsb2JhbAAYQYJHgRlXBIJ4sEeUPoFph0x8CBYQAQEBAQEGCwsJFCqEBAEBAwESEQQZAS0LAQMBCwEFAwILGh0CAiISAQUBChIGEwgKEIgMAwkIDYpFLZAqa4swhQKIbCcDCoZaAREBBQ6PO4MEgVMFhQoFkGGHAoFfkVsYKYFsgQ2CGjwvAYJOAQEB
X-IronPort-AV: E=Sophos;i="5.04,481,1406584800"; 
   d="scan'208";a="93379096"
Received: from mail-lb0-f177.google.com ([209.85.217.177])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 07 Sep 2014 11:55:50 +0200
Received: by mail-lb0-f177.google.com with SMTP id l4so2812524lbv.8
        for <caml-list@inria.fr>; Sun, 07 Sep 2014 02:55:49 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:from:date:message-id
         :subject:to:cc:content-type;
        bh=MaoLtDPas4bHLsZqCyLz3SCVnXF/3o8uHjdIuaWkiNo=;
        b=ZdnAHBVT3aRF4mzk4GLzHNTSofKO0+kCl/UXPUp16x9WuB8GIVNpLJkmNjN4Um35Ig
         t81lksGUXRO4+Kk6otcgWXcI6QPIh3yCiM4A5ARxV4PSlCjbd9XYOrqniWOmgCNm+3FG
         n3e+1O1HRuK9JCvCsyl0nl86BiL6sOCyTjztrwFCQeMRndSfwrSGu2JNnUyDHL2LRPCx
         aQYJUk9mZ9j6/ShJYeX8fMqi5DJ/dhWYHb46De5+QKfGX8/DkO1GDuTsyJYBduXtKVha
         kJ3g4KSmWRrJ1Guf2E+5gJt/+ID4upRVntNDd189Vm4xMzLXTq+52rQs/xxNuCkDE+at
         zdFQ==
X-Received: by 10.152.42.209 with SMTP id q17mr22252691lal.13.1410083749635;
 Sun, 07 Sep 2014 02:55:49 -0700 (PDT)
MIME-Version: 1.0
Sender: besognet.remy@gmail.com
Received: by 10.112.74.234 with HTTP; Sun, 7 Sep 2014 02:55:29 -0700 (PDT)
In-Reply-To: <91F16B653D20446DA42F7B673FD5509D@PCdejd>
References: <91F16B653D20446DA42F7B673FD5509D@PCdejd>
From: =?UTF-8?Q?R=C3=A9my_Besognet?= <remy.el-sibaie@lip6.fr>
Date: Sun, 7 Sep 2014 10:55:29 +0100
X-Google-Sender-Auth: pWAs4LcxcGLLgll0aTJngjuAZh4
Message-ID: <CAKAHPK2S5zaYGZzVzaRE6tKsywBXxNzMzE4Sf59385dh95kwdg@mail.gmail.com>
To: Jean-Denis Eiden <jean-denis.eiden@orange.fr>
Cc: caml-list@inria.fr
Content-Type: multipart/alternative; boundary=001a11c34b6c002b89050276b545
Subject: Re: [Caml-list] listes qui bouclent

--001a11c34b6c002b89050276b545
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Bonjour,

Il me semble que seules les valeurs fonctionnelles sont autoris=C3=A9es =C3=
=A0 droite
d'un let-rec.
La seule exception est un constructeur de type

Effectivement, le "::" n'est pas un v=C3=A9ritable op=C3=A9rateur, mais bie=
n un
constructeur de type.

Prenons le type :

type 'a t =3D Empty | List of  'a * 'a t

Si on fait :

let cyclique n =3D let rec liste =3D List (1, liste) in liste;;

=C3=A7a passe parce que List est bien un constructeur de type. Or dans :

let cyclique n =3D let rec liste =3D (rep=C3=A8te n) @ liste in liste;;

l'op=C3=A9rateur @ n'est pas un constructeur, mais bien un appel de fonctio=
n qui
lie le nom liste =C3=A0 l'appel et c'est pr=C3=A9cis=C3=A9ment ce que le co=
mpilateur ne
veut pas. Parce qu'il veut que la construction d'une valeur r=C3=A9cursif q=
ui
n'est ppas une fonction soit statique.

Tu as le d=C3=A9tail dans le manuel d'Ocaml :
http://caml.inria.fr/pub/docs/manual-ocaml/extn.html#s%3aletrecvalues

Cordialement,



Le 7 septembre 2014 10:31, Jean-Denis Eiden <jean-denis.eiden@orange.fr> a
=C3=A9crit :

> Bonjour =C3=A0 tous,
>
> CaML light permet la construction suivante :
>
> #let rec liste =3D 0::1::2::3::liste;;
> liste : int list =3D
> [0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; =
0;
>  1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; =
1;
>  2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; =
2;
>  3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2;
>  ...]
>
> Cela =C3=A9tant, j'aimerais pouvoir faire la m=C3=AAme chose en param=C3=
=A9trant la
> p=C3=A9riode ; par exemple, j'aimerais cr=C3=A9er [ 0 ; 1 ; 2 ; ... ; n-1=
 ; 0 ; 1 ; 2
> ; ... ] :
>
> #let rep=C3=A8te n =3D let aux =3D ref [] in for i =3D n-1 downto 0 do au=
x:=3D
> i::(!aux) done; !aux;;
> rep=C3=A8te : int -> int list =3D <fun>
>
> #let cyclique n =3D let aux =3D rep=C3=A8te n in let rec liste =3D aux @ =
liste in
> liste;;
>
> Mais l=C3=A0 :
>
> let cyclique n =3D let rec liste =3D (rep=C3=A8te n) @ liste in liste;;
>
>>                                           ^^^^^^^
>>
> Ce genre d'expressions n'est pas autoris=C3=A9 comme membre droit d'un "l=
et
> rec".
>
> Est-ce seulement un probl=C3=A8me de syntaxe ou bien y a-t-il impossibili=
t=C3=A9
> absolue, la taille de la liste servant de p=C3=A9riode devant =C3=AAtre c=
onnue =C3=A0 la
> compilation ?
>
> Cordialement, Jean-Denis Eiden
>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>



--=20
*R=C3=A9my El Siba=C3=AFeEquipe APR, LIP6/IRILL, Universit=C3=A9 Pierre et =
Marie Curie*

--001a11c34b6c002b89050276b545
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>Bonjour,</div><div><br></div>Il me semble que seules =
les valeurs fonctionnelles sont autoris=C3=A9es =C3=A0 droite d&#39;un let-=
rec.<div>La seule exception est un constructeur de type</div><div><br></div=
><div>Effectivement, le &quot;::&quot; n&#39;est pas un v=C3=A9ritable op=
=C3=A9rateur, mais bien un constructeur de type.</div><div><br></div><div>P=
renons le type :=C2=A0</div><div><br></div><div><font face=3D"courier new, =
monospace">type &#39;a t =3D Empty | List of =C2=A0&#39;a * &#39;a t</font>=
</div><div><br></div><div>Si on fait :=C2=A0</div><div><br></div><div><span=
 style=3D"font-size:13px"><font face=3D"courier new, monospace">let cycliqu=
e n =3D let rec liste =3D <font color=3D"#ff0000">List (1, liste)</font> in=
 liste;;</font></span><br></div><div><span style=3D"font-family:arial,sans-=
serif;font-size:13px"><br></span></div><div><span style=3D"font-family:aria=
l,sans-serif;font-size:13px">=C3=A7a passe parce que List est bien un const=
ructeur de type. Or dans :=C2=A0</span></div><div><span style=3D"font-famil=
y:arial,sans-serif;font-size:13px"><br></span></div><div><span style=3D"fon=
t-size:13px"><font face=3D"courier new, monospace">let cyclique n =3D let r=
ec liste =3D (rep=C3=A8te n) @ liste in liste;;</font></span><span style=3D=
"font-family:arial,sans-serif;font-size:13px"><br></span></div><div><span s=
tyle=3D"font-family:arial,sans-serif;font-size:13px"><br></span></div><div>=
<font face=3D"arial, sans-serif">l&#39;op=C3=A9rateur @ n&#39;est pas un co=
nstructeur, mais bien un appel de fonction qui lie le nom liste =C3=A0 l&#3=
9;appel et c&#39;est pr=C3=A9cis=C3=A9ment ce que le compilateur ne veut pa=
s. Parce qu&#39;il veut que la construction d&#39;une valeur r=C3=A9cursif =
qui n&#39;est ppas une fonction soit statique.</font></div><div><font face=
=3D"arial, sans-serif"><br></font></div><div><span style=3D"font-family:ari=
al,sans-serif;font-size:13px">Tu as le d=C3=A9tail dans le manuel d&#39;Oca=
ml :=C2=A0</span><font face=3D"arial, sans-serif"><a href=3D"http://caml.in=
ria.fr/pub/docs/manual-ocaml/extn.html#s%3aletrecvalues">http://caml.inria.=
fr/pub/docs/manual-ocaml/extn.html#s%3aletrecvalues</a></font></div><div><s=
pan style=3D"font-family:arial,sans-serif;font-size:13px"><br></span></div>=
<div><font face=3D"arial, sans-serif">Cordialement,</font></div><div><span =
style=3D"font-family:arial,sans-serif;font-size:13px"><br></span></div></di=
v><div class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">Le 7 septem=
bre 2014 10:31, Jean-Denis Eiden <span dir=3D"ltr">&lt;<a href=3D"mailto:je=
an-denis.eiden@orange.fr" target=3D"_blank">jean-denis.eiden@orange.fr</a>&=
gt;</span> a =C3=A9crit :<br><blockquote class=3D"gmail_quote" style=3D"mar=
gin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Bonjour =C3=A0 =
tous,<br>
<br>
CaML light permet la construction suivante :<br>
<br>
#let rec liste =3D 0::1::2::3::liste;;<br>
liste : int list =3D<br>
[0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0;=
<br>
=C2=A01; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; =
0; 1;<br>
=C2=A02; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; =
1; 2;<br>
=C2=A03; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; 2; 3; 0; 1; =
2;<br>
=C2=A0...]<br>
<br>
Cela =C3=A9tant, j&#39;aimerais pouvoir faire la m=C3=AAme chose en param=
=C3=A9trant la p=C3=A9riode ; par exemple, j&#39;aimerais cr=C3=A9er [ 0 ; =
1 ; 2 ; ... ; n-1 ; 0 ; 1 ; 2 ; ... ] :<br>
<br>
#let rep=C3=A8te n =3D let aux =3D ref [] in for i =3D n-1 downto 0 do aux:=
=3D i::(!aux) done; !aux;;<br>
rep=C3=A8te : int -&gt; int list =3D &lt;fun&gt;<br>
<br>
#let cyclique n =3D let aux =3D rep=C3=A8te n in let rec liste =3D aux @ li=
ste in liste;;<br>
<br>
Mais l=C3=A0 :<br>
<br>
let cyclique n =3D let rec liste =3D (rep=C3=A8te n) @ liste in liste;;<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex">
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ^=
^^^^^^<br>
</blockquote>
Ce genre d&#39;expressions n&#39;est pas autoris=C3=A9 comme membre droit d=
&#39;un &quot;let rec&quot;.<br>
<br>
Est-ce seulement un probl=C3=A8me de syntaxe ou bien y a-t-il impossibilit=
=C3=A9 absolue, la taille de la liste servant de p=C3=A9riode devant =C3=AA=
tre connue =C3=A0 la compilation ?<br>
<br>
Cordialement, Jean-Denis Eiden<span class=3D"HOEnZb"><font color=3D"#888888=
"><br>
<br>
<br>
-- <br>
Caml-list mailing list.=C2=A0 Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" target=3D"_blank">ht=
tps://sympa.inria.fr/sympa/<u></u>arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/<u></u>ocaml_beginners<=
/a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-<u></u>bugs</a><br>
</font></span></blockquote></div><br><br clear=3D"all"><div><br></div>-- <b=
r><div dir=3D"ltr"><i><span style=3D"font-style:normal"><i>R=C3=A9my El Sib=
a=C3=AFe</i><div><i>Equipe APR, LIP6/IRILL, Universit=C3=A9 Pierre et Marie=
 Curie</i></div></span></i></div>
</div>

--001a11c34b6c002b89050276b545--
