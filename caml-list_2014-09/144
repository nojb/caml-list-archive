Return-Path: <rixed@happyleptic.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id CCE5B7F75C
	for <caml-list@sympa.inria.fr>; Sat, 13 Sep 2014 14:22:21 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  rixed@happyleptic.org) identity=pra; client-ip=5.135.156.187;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="rixed@happyleptic.org";
  x-sender="rixed@happyleptic.org";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  rixed@happyleptic.org) identity=mailfrom;
  client-ip=5.135.156.187;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="rixed@happyleptic.org";
  x-sender="rixed@happyleptic.org";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@pim.happyleptic.org) identity=helo;
  client-ip=5.135.156.187;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="rixed@happyleptic.org";
  x-sender="postmaster@pim.happyleptic.org";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgYIAP41FFQFh5y7/2dsb2JhbABfgw1kA9EwAQt+FniEBAEBBDo/EAshExIPBSghJ4guAbwbARePTQcugwCBHQEEnQeVQINgO4J5AQEB
X-IPAS-Result: AgYIAP41FFQFh5y7/2dsb2JhbABfgw1kA9EwAQt+FniEBAEBBDo/EAshExIPBSghJ4guAbwbARePTQcugwCBHQEEnQeVQINgO4J5AQEB
X-IronPort-AV: E=Sophos;i="5.04,517,1406584800"; 
   d="scan'208";a="94521011"
Received: from pim.happyleptic.org ([5.135.156.187])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES128-SHA; 13 Sep 2014 14:22:21 +0200
Received: from rixed by pim.happyleptic.org with local (Exim 4.80)
	(envelope-from <rixed@happyleptic.org>)
	id 1XSmLM-0002Vj-83; Sat, 13 Sep 2014 14:22:20 +0200
Date: Sat, 13 Sep 2014 14:22:20 +0200
From: rixed@happyleptic.org
To: Yotam Barnoy <yotambarnoy@gmail.com>
Cc: Ocaml Mailing List <caml-list@inria.fr>
Message-ID: <20140913122220.GC9341@pim.happyleptic.org>
References: <CAN6ygO=P_QTa6Wk0=Wx=0XLwhGOP=16eGaGiacA5N60nRjApDQ@mail.gmail.com>
 <5410522E.3050207@inria.fr>
 <1410359012.3003.34.camel@thinkpad>
 <54106B6D.4040607@gmail.com>
 <CAN6ygOndvw0McYKsB20LtFAdZED-CnzEEZ9qc7PJAXRPBdDWAQ@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAN6ygOndvw0McYKsB20LtFAdZED-CnzEEZ9qc7PJAXRPBdDWAQ@mail.gmail.com>
User-Agent: Mutt/1.5.21 (2010-09-15)
Subject: Re: [Caml-list] One build system to rule them all?

Ok, here are my requirements:

- be able to compile any language (personal favorites: OCaml, C)
- be able to run a preprocessor (personal favorites: a tool to filter OCaml v4
  only library functions or variants)
- be able to build the preprocessor
- be able to generate the code (personal favorite: literate programming)
- be able to build the tools that generates the code (personal favorite: ibid)
- be able to generate the data from other input files (personal favorite: true-type
  fonts generated from description)
- be able to build the tools that does that (of course)
- be able to generate the doc
- be able to run some tool on some source files and check some property (personal
  favorite: a tool to check circular dependencies)
- be able to build the tools that perform those checks
- be able to use custom ld script to link to exotic environments (personal favorite:
  phones)
- be reasonably portable to unix like environments
- don't trap users into using only one language or one tool.

Well this is a never ending list, unless you realize that it all sums up to:

- be able to run any command to change one set of input files to some output file
- be declarative as much as possible

I don't believe there can be anything between generic make-like tools and
community centered tools that simplify but one use case.
<insert fish vs fishing allegory here>.


