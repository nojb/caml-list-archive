Return-Path: <gabriel.scherer@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 1AF207F75C
	for <caml-list@sympa.inria.fr>; Wed, 10 Sep 2014 22:16:30 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  gabriel.scherer@gmail.com) identity=pra;
  client-ip=209.85.214.177;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  gabriel.scherer@gmail.com designates 209.85.214.177 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.214.177;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ob0-f177.google.com) identity=helo;
  client-ip=209.85.214.177;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="postmaster@mail-ob0-f177.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkIBAKCwEFTRVdaxm2dsb2JhbABfg2BbgnixITKEApAKgWuHSwGBCggWEAEBAQEBBgsLCRQqhAMBAQECAQESBgsdARsSCwEDAQsGBQsNDR0CAiEBAREBBQEKEgYTEhCICwEDCQgNnVFrizCBcoMQiHkKGScDCmaFcgERAQUOjRKBVVQEB4J5gVMFhQsFjTqDL4RzghCBX40dhEsYKYJ5ghs7L4EGgUkBAQE
X-IPAS-Result: AkIBAKCwEFTRVdaxm2dsb2JhbABfg2BbgnixITKEApAKgWuHSwGBCggWEAEBAQEBBgsLCRQqhAMBAQECAQESBgsdARsSCwEDAQsGBQsNDR0CAiEBAREBBQEKEgYTEhCICwEDCQgNnVFrizCBcoMQiHkKGScDCmaFcgERAQUOjRKBVVQEB4J5gVMFhQsFjTqDL4RzghCBX40dhEsYKYJ5ghs7L4EGgUkBAQE
X-IronPort-AV: E=Sophos;i="5.04,501,1406584800"; 
   d="scan'208";a="78487588"
Received: from mail-ob0-f177.google.com ([209.85.214.177])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 10 Sep 2014 22:16:28 +0200
Received: by mail-ob0-f177.google.com with SMTP id wp4so648253obc.36
        for <caml-list@inria.fr>; Wed, 10 Sep 2014 13:16:27 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=8SlvZhSEUOqjJOJTYBfYFe4tVZCLUXjyj8srli2pY/s=;
        b=l9YsXG7jWARRMVELblpNfedl0SSim7EvS2oO1+02pqlBBVbbIl5yoeDJJaMBElyl/M
         9oP5ADZXsgWqBeRG7KW+oTugBg0ZLm0yw2GhE7PGnVv2rdsHhAbPts71Fy77agJJB6Os
         V9JbRjCWdcwT6QVOSM4XN3cmhnsUYqdwDOSwKFlS87liXUVxNbrpnPnTQJIo/I6MYKzI
         mSR+7NpvngHXPA8TqhfEyR+mGTXT6h/1eGk+HUEU9TbDfnQKY8Zl8pxle9TL12TE3b4E
         S0EJcBY7VZGqyiwK9Oif1azeH/xBIDgvTg4JB5YvidUXZYHI/XSgvORO5eWhpD2Od6n2
         TBRA==
X-Received: by 10.60.45.7 with SMTP id i7mr22895474oem.2.1410380187330; Wed,
 10 Sep 2014 13:16:27 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.76.141.165 with HTTP; Wed, 10 Sep 2014 13:15:47 -0700 (PDT)
In-Reply-To: <CALScVYmeFnrGGgv_-19xiZbbRs58Qw=-wm+OK4vyxosxhx7GZQ@mail.gmail.com>
References: <CAN6ygO=P_QTa6Wk0=Wx=0XLwhGOP=16eGaGiacA5N60nRjApDQ@mail.gmail.com>
 <5410522E.3050207@inria.fr> <1410359012.3003.34.camel@thinkpad>
 <54106B6D.4040607@gmail.com> <CAN6ygOndvw0McYKsB20LtFAdZED-CnzEEZ9qc7PJAXRPBdDWAQ@mail.gmail.com>
 <fc40822c9abe3097105f2cc221fd73c4@whitequark.org> <CALScVYmeFnrGGgv_-19xiZbbRs58Qw=-wm+OK4vyxosxhx7GZQ@mail.gmail.com>
From: Gabriel Scherer <gabriel.scherer@gmail.com>
Date: Wed, 10 Sep 2014 22:15:47 +0200
Message-ID: <CAPFanBH0vR-8cY39bWCPprPDVJWkVwn1W1cWX9dw6YeZ1Xa-kw@mail.gmail.com>
To: Sebastien Mondet <sebastien.mondet@gmail.com>
Cc: Ocaml Mailing List <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=089e0149cb921074160502bbba56
Subject: Re: [Caml-list] One build system to rule them all?

--089e0149cb921074160502bbba56
Content-Type: text/plain; charset=UTF-8

I'm not convinced by the starting point of this discussion. Why would we
need a consensus on a single build system? It seems to me that build
systems are fine as per-project choices; I don't lose much if some other
project uses another build system. The libraries I rely on may use any
build system they like, it doesn't affect my own work.


Of course there is also a question of the workforce supporting any given
build system. OCamlbuild for example could certainly do with more people
improving the tool; but it seems highly unclear that developers working
today on tool X would contribute on tool Y if X didn't exist.

(Fragmentation of, say, standard libraries seem more problematic as it
tends to create separate ecosystems.)


PS:

> if ocamlbuild were spun out of the compiler, could it be enhanced to
cover all the main use-cases so (almost) everyone would be happy with it

OCamlbuild accepts patches today (through caml-list, mantis, or as github
pull requests). There is no reason to wait for the "spinning out" to
contribute.

On Wed, Sep 10, 2014 at 9:56 PM, Sebastien Mondet <
sebastien.mondet@gmail.com> wrote:

>
>
> On Wed, Sep 10, 2014 at 3:16 PM, Peter Zotov <whitequark@whitequark.org>
> wrote:
>
>> On 2014-09-10 22:59, Yotam Barnoy wrote:
>>
>>> ocp-build actually looks very interesting. The manual (which is here:
>>> http://github.com/OCamlPro/ocp-build/blob/master/docs/
>>> user-manual/user-manual.pdf?raw=true
>>> [2]) is incomplete, but contains a nice survey of the existing build
>>> tools, and motivation for making ocp-build. Has anyone had experience
>>> with ocp-build? Opam seems to be using it, but they also use a
>>> makefile (why?) with a bunch of shell commands inside (which is
>>> precisely the problem from my perspective). ocp-build is supposedly
>>> compatible with Windows, too.
>>>
>>
>> Every single time I had to use ocp-build, it broke in an odd and hard to
>> fix way. It was so bad that eventually I just ported the ocp-build-using
>> projects (ocp-index and its dependencies) to OASIS. Most worryingly it has
>> some strange requirement to ship bytecode, which ties it to a released
>> OCaml
>> version; no other buildsystem needs that.
>>
>>
> Yes ocp-build is broken for many corner cases, I've been trying to push it
> to its maximum; look at that ugly shell script:
> https://github.com/hammerlab/ketrew/blob/master/please.sh that even has
> to create a yojson library out of the one in ~/.opam to please ocp-build's
> assumptions.
>
> Also, like every build system based on flat files (oasis, obuild), it is
> fundamentally broken. You'll always need a programming language to extended
> your build (adding targets, like build documentation/websites, special
> tests, .merlin files, code generation...).
>
> - omake did that with yet another obscure and weird language (I guess the
> goal was to "look" like `make` but with even more broken string escaping).
> - ocamlbuild and jenga picked the right language.
>     - ocamlbuild's API is very limited, there is not even a clear way to
> replace all the crazy small files required everywhere (_tags, mllib, ...)
> with function calls within a myocamlbuild.ml plugin. It is also painfully
> slow.
>     - Jenga is not for "normal" projects. It takes half-an-hour to build
> jenga itself, and it's dependency tree is not very portable. The API is
> very convoluted even for simple projects.
>
> Look at https://github.com/samoht/assemblage/ certainly going to in the
> right direction.
>
>
>
>
>
>
>> --
>> Peter Zotov
>>
>>
>> --
>> Caml-list mailing list.  Subscription management and archives:
>> https://sympa.inria.fr/sympa/arc/caml-list
>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>> Bug reports: http://caml.inria.fr/bin/caml-bugs
>>
>
>

--089e0149cb921074160502bbba56
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div><div>I&#39;m not convinced by the starting point of t=
his discussion. Why would we need a consensus on a single build system? It =
seems to me that build systems are fine as per-project choices; I don&#39;t=
 lose much if some other project uses another build system. The libraries I=
 rely on may use any build system they like, it doesn&#39;t affect my own w=
ork.<br><br><br></div>Of course there is also a question of the workforce s=
upporting any given build system. OCamlbuild for example could certainly do=
 with more people improving the tool; but it seems highly unclear that deve=
lopers working today on tool X would contribute on tool Y if X didn&#39;t e=
xist.<br><br></div><div>(Fragmentation of, say, standard libraries seem mor=
e problematic as it tends to create separate ecosystems.)<br></div><div><br=
><br>PS:<br><br>&gt; if ocamlbuild were spun out of the compiler, could it =
be enhanced to=20
cover all the main use-cases so (almost) everyone would be happy with it<br=
><br></div>OCamlbuild accepts  patches today  (through caml-list, mantis, o=
r as github pull requests). There is no reason to wait for the &quot;spinni=
ng out&quot;  to contribute.<br><div><div><div><div></div></div></div></div=
><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On Wed, Sep 10, =
2014 at 9:56 PM, Sebastien Mondet <span dir=3D"ltr">&lt;<a href=3D"mailto:s=
ebastien.mondet@gmail.com" target=3D"_blank">sebastien.mondet@gmail.com</a>=
&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0=
 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr"><br><=
div class=3D"gmail_extra"><br><div class=3D"gmail_quote"><span class=3D"">O=
n Wed, Sep 10, 2014 at 3:16 PM, Peter Zotov <span dir=3D"ltr">&lt;<a href=
=3D"mailto:whitequark@whitequark.org" target=3D"_blank">whitequark@whitequa=
rk.org</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"=
margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-lef=
t:1ex"><span>On 2014-09-10 22:59, Yotam Barnoy wrote:<br>
</span><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;=
border-left:1px solid rgb(204,204,204);padding-left:1ex"><span>
ocp-build actually looks very interesting. The manual (which is here:<br>
<a href=3D"http://github.com/OCamlPro/ocp-build/blob/master/docs/user-manua=
l/user-manual.pdf?raw=3Dtrue" target=3D"_blank">http://github.com/OCamlPro/=
<u></u>ocp-build/blob/master/docs/<u></u>user-manual/user-manual.pdf?<u></u=
>raw=3Dtrue</a><br></span>
[2]) is incomplete, but contains a nice survey of the existing build<span><=
br>
tools, and motivation for making ocp-build. Has anyone had experience<br>
with ocp-build? Opam seems to be using it, but they also use a<br>
makefile (why?) with a bunch of shell commands inside (which is<br>
precisely the problem from my perspective). ocp-build is supposedly<br>
compatible with Windows, too.<br>
</span></blockquote>
<br>
Every single time I had to use ocp-build, it broke in an odd and hard to<br>
fix way. It was so bad that eventually I just ported the ocp-build-using<br>
projects (ocp-index and its dependencies) to OASIS. Most worryingly it has<=
br>
some strange requirement to ship bytecode, which ties it to a released OCam=
l<br>
version; no other buildsystem needs that.<span><font color=3D"#888888"><br>
<br></font></span></blockquote></span><div><br>Yes ocp-build is broken for =
many corner cases, I&#39;ve been trying to push=20
it to its maximum; look at that ugly shell script:=20
<a href=3D"https://github.com/hammerlab/ketrew/blob/master/please.sh" targe=
t=3D"_blank">https://github.com/hammerlab/ketrew/blob/master/please.sh</a> =
that even has=20
to create a yojson library out of the one in ~/.opam to please ocp-build&#3=
9;s assumptions.<br><br></div><div>Also, like every build system based on f=
lat files (oasis, obuild), it is fundamentally broken. You&#39;ll always ne=
ed a programming language to extended your build (adding targets, like buil=
d documentation/websites, special tests, .merlin files, code generation...)=
.<br></div><div><br></div><div>- omake did that with yet another obscure an=
d weird language (I guess the goal was to &quot;look&quot; like `make` but =
with even more broken string escaping).<br></div><div>- ocamlbuild and jeng=
a picked the right language.<br></div><div>=C2=A0=C2=A0=C2=A0 - ocamlbuild&=
#39;s API is very limited, there is not even a clear way to replace all the=
 crazy small files required everywhere (_tags, mllib, ...) with function ca=
lls within a <a href=3D"http://myocamlbuild.ml" target=3D"_blank">myocamlbu=
ild.ml</a> plugin. It is also painfully slow.<br></div><div>=C2=A0=C2=A0=C2=
=A0 - Jenga is not for &quot;normal&quot; projects. It takes half-an-hour t=
o build jenga itself, and it&#39;s dependency tree is not very portable. Th=
e API is very convoluted even for simple projects.<br><br></div><div>Look a=
t <a href=3D"https://github.com/samoht/assemblage/" target=3D"_blank">https=
://github.com/samoht/assemblage/</a> certainly going to in the right direct=
ion.<br><br><br></div><span class=3D""><div><br><br>=C2=A0</div><blockquote=
 class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px so=
lid rgb(204,204,204);padding-left:1ex"><span><font color=3D"#888888">
-- <br>
Peter Zotov</font></span><div><div><br>
<br>
-- <br>
Caml-list mailing list.=C2=A0 Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" target=3D"_blank">ht=
tps://sympa.inria.fr/sympa/<u></u>arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/<u></u>ocaml_beginners<=
/a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-<u></u>bugs</a><br>
</div></div></blockquote></span></div><br></div></div>
</blockquote></div><br></div></div>

--089e0149cb921074160502bbba56--
