Return-Path: <rossberg@mpi-sws.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 6C9387EE25
	for <caml-list@sympa.inria.fr>; Sun, 27 Oct 2013 13:16:20 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  rossberg@mpi-sws.org) identity=pra; client-ip=139.19.1.49;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rossberg@mpi-sws.org";
  x-sender="rossberg@mpi-sws.org";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  rossberg@mpi-sws.org designates 139.19.1.49 as permitted
  sender) identity=mailfrom; client-ip=139.19.1.49;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rossberg@mpi-sws.org";
  x-sender="rossberg@mpi-sws.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@hera.mpi-klsb.mpg.de) identity=helo;
  client-ip=139.19.1.49;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rossberg@mpi-sws.org";
  x-sender="postmaster@hera.mpi-klsb.mpg.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AowDAN0CbVKLEwExhGdsb2JhbABZrlCUIoEyDgEBAQoHBAkJFCiCJQEBBAFAAQE3AQQLCw4KLlcGE4gBBgSkXIRTAQWOKQaPIjMHgx+BDa07
X-IPAS-Result: AowDAN0CbVKLEwExhGdsb2JhbABZrlCUIoEyDgEBAQoHBAkJFCiCJQEBBAFAAQE3AQQLCw4KLlcGE4gBBgSkXIRTAQWOKQaPIjMHgx+BDa07
X-IronPort-AV: E=Sophos;i="4.93,580,1378850400"; 
   d="scan'208";a="32074258"
Received: from infao0809.mpi-klsb.mpg.de (HELO hera.mpi-klsb.mpg.de) ([139.19.1.49])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES256-SHA; 27 Oct 2013 13:16:20 +0100
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=mpi-sws.org; s=mail200803;
	h=To:References:Message-Id:Content-Transfer-Encoding:Cc:Date:In-Reply-To:From:Content-Type:Mime-Version:Subject; bh=3MUB49SQY/Ft8sSPz5AwYmWuytTBJwxAwwEo7A2ZRGg=;
	b=qpr8Qpps50sUBPHH7N+5TSdLiZWbgLd74dLpyruqdqnRbksvc/N6NpAfmybiDPZKlq4kxkA0TJGGywKf74C1koIT2AkrTWMj6Z/l7qbOf5ciYCXQJb0P2y8vJs283n2taBaA454kkYUO32RUBySi2gaopFifvXtk84/ZQvUEKdk=;
Received: from zak.mpi-klsb.mpg.de ([139.19.1.29]:48362)
	by hera.mpi-klsb.mpg.de (envelope-from <rossberg@mpi-sws.org>) 
	with esmtp (Exim 4.72) id 1VaPGS-0003qH-Tu; Sun, 27 Oct 2013 13:16:19 +0100
Received: from mnch-5d856b49.pool.mediaways.net ([93.133.107.73]:54404 helo=[192.168.178.44])
	by zak.mpi-klsb.mpg.de (envelope-from <rossberg@mpi-sws.org>) 
	with esmtpsa (TLS1.0:RSA_AES_128_CBC_SHA1:16)
	(Exim 4.72) id 1VaPGS-00070h-GH; Sun, 27 Oct 2013 13:16:16 +0100
Mime-Version: 1.0 (Mac OS X Mail 6.6 \(1510\))
Content-Type: text/plain; charset=iso-8859-1
From: Andreas Rossberg <rossberg@mpi-sws.org>
In-Reply-To: <CACLX4jSUaC3vzXH1JZz8V0YEpM1uC+yMsmUv=HNasavgwyeE+w@mail.gmail.com>
Date: Sun, 27 Oct 2013 13:16:14 +0100
Cc: OCaML List Mailing <caml-list@inria.fr>
Content-Transfer-Encoding: quoted-printable
Message-Id: <66AB5484-8BFC-4A1C-ADAC-99C75716B054@mpi-sws.org>
References: <BLU0-SMTP16AA624460C082145DF676A30C0@phx.gbl> <97627FCD-30E1-45AD-A72B-CD423170C0AC@math.nagoya-u.ac.jp> <FAB38C63-E179-41F0-8912-F7B90AF30C83@mpi-sws.org> <20131025082911.GB23798@voyager> <878uxhd62p.fsf@golf.niidar.ru> <CAPFanBEjtVg6NZEL0pMQJU5S9Zw2c0Wb4Ff2pWsYatnquhjROQ@mail.gmail.com> <526A7F33.6040203@mpi-sws.org> <CACLX4jSUaC3vzXH1JZz8V0YEpM1uC+yMsmUv=HNasavgwyeE+w@mail.gmail.com>
To: Yaron Minsky <yminsky@janestreet.com>
X-Mailer: Apple Mail (2.1510)
X-MPI-Local-Sender: true
Subject: Re: [Caml-list] Equality between abstract type definitions

On Oct 25, 2013, at 22:32 , Yaron Minsky <yminsky@janestreet.com> wrote:
> Changing the semantics of this will, I think, break a _lot_ of code.

Interesting. Do you have specific examples in mind?

> For what it's worth, I suspect that most people who are surprised by
> this are people who were trained on Standard ML.  At Jane Street we've
> had a lot of people learn the language, and the complaints I've heard
> about this feature are, I think, mostly from that group.

Maybe, but it's not my impression that this is true for most people I see a=
sking related questions here on the list or on SO.

> I also don't find Andreas suggestion particularly intuitive.  I would
> have guessed that (x: '_a) would constrain x to be a weakly
> polymorphic value, which is at odds with the proposal.

Now, _that_ is something I would only expect from programmers trained on SM=
L -- ancient SML'90 to be precise. ;)

Note how OCaml already uses '_a for a sort of flexible variable in its outp=
ut.

/Andreas

