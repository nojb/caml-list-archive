Return-Path: <5764c029b688c1c0d24a2e97cd764f@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id A800D7EE42
	for <caml-list@sympa.inria.fr>; Thu, 24 Oct 2013 15:47:38 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  5764c029b688c1c0d24a2e97cd764f@gmail.com) identity=pra;
  client-ip=74.125.83.48;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="5764c029b688c1c0d24a2e97cd764f@gmail.com";
  x-sender="5764c029b688c1c0d24a2e97cd764f@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  5764c029b688c1c0d24a2e97cd764f@gmail.com designates
  74.125.83.48 as permitted sender) identity=mailfrom;
  client-ip=74.125.83.48;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="5764c029b688c1c0d24a2e97cd764f@gmail.com";
  x-sender="5764c029b688c1c0d24a2e97cd764f@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ee0-f48.google.com) identity=helo;
  client-ip=74.125.83.48;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="5764c029b688c1c0d24a2e97cd764f@gmail.com";
  x-sender="postmaster@mail-ee0-f48.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnAFAJwkaVJKfVMwm2dsb2JhbABZghsEwWYWDgEBAQEBBgsLCRQoglMRCAEbHAIDEhAWFhgDAgECARERAQUBFhkIAodwAQMPBAGYRIMEjFaDCoQ1ChknDWSJAQEFDI9ehBYDmAqGO4lgQYRQ
X-IPAS-Result: AnAFAJwkaVJKfVMwm2dsb2JhbABZghsEwWYWDgEBAQEBBgsLCRQoglMRCAEbHAIDEhAWFhgDAgECARERAQUBFhkIAodwAQMPBAGYRIMEjFaDCoQ1ChknDWSJAQEFDI9ehBYDmAqGO4lgQYRQ
X-IronPort-AV: E=Sophos;i="4.93,562,1378850400"; 
   d="scan'208";a="31724122"
Received: from mail-ee0-f48.google.com ([74.125.83.48])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 24 Oct 2013 15:47:38 +0200
Received: by mail-ee0-f48.google.com with SMTP id e50so1127919eek.21
        for <caml-list@inria.fr>; Thu, 24 Oct 2013 06:47:37 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:subject
         :content-type:content-transfer-encoding;
        bh=SeurCZtqs8MX3Eh+GiquQ4UXKtKupW3sANCrad1938E=;
        b=Pjf+hJGzT2HulMXG/vpJWIyf1EGrje5hegPQFPajp/RPxKVrABlaBAkjvQRc8kcoq/
         lbwfyZnK4cAdZWm7kyqaApYRbRfD7xhlA+tXgNwXWs2b7rI2PHGYen/aA1ZrsR4UqlmU
         irXc0SEXtDwYP2n+C20sTklldSwECc3tWkUjnNdZ2QF0J6b8/TD6bmY5ZUAEkPd5zl2w
         dFJxWpkvCs4nsSrSJQ4SgRkg750pKZFj0oWATE/aV2WG8ahrU2DYP/pCE6qmAc90+iXB
         r68zlcJSnqhfpDF3Oi75xxdfaF6au4CH7qNP3aO6x1rLXj5ssYf7cSmruOOjWhk87BZO
         S8Mg==
X-Received: by 10.15.94.201 with SMTP id bb49mr2596453eeb.23.1382622457801;
        Thu, 24 Oct 2013 06:47:37 -0700 (PDT)
Received: from [172.27.6.175] ([213.106.240.92])
        by mx.google.com with ESMTPSA id z12sm4654179eev.6.2013.10.24.06.47.37
        for <caml-list@inria.fr>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Thu, 24 Oct 2013 06:47:37 -0700 (PDT)
Message-ID: <52692507.7040202@gmail.com>
Date: Thu, 24 Oct 2013 14:47:51 +0100
From: Matej Kosik <5764c029b688c1c0d24a2e97cd764f@gmail.com>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:17.0) Gecko/20131005 Icedove/17.0.9
MIME-Version: 1.0
To: caml-list@inria.fr
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Subject: [Caml-list] strange compiler's tolerance

Hi,

Today I noticed a strange compiler's tolerance.
The compiler will not protest here:

   type foo = Bar | Baz

   ;;

   match Bar with
     | Bar _ -> ()
     | Baz -> ()

Why doesn't the compiler protest that I used wildcard after "Bar" constructor?
(It does protest if I put any other pattern except for the wildcard).

This slightly breaks the logic. Doesn't it?
