Return-Path: <wdraxinger.maillist@draxit.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 711FA7EE4B
	for <caml-list@sympa.inria.fr>; Sat,  5 Oct 2013 02:23:31 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  wdraxinger.maillist@draxit.de) identity=pra;
  client-ip=88.198.66.69;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="wdraxinger.maillist@draxit.de";
  x-sender="wdraxinger.maillist@draxit.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  wdraxinger.maillist@draxit.de) identity=mailfrom;
  client-ip=88.198.66.69;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="wdraxinger.maillist@draxit.de";
  x-sender="wdraxinger.maillist@draxit.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail.draxit.de) identity=helo;
  client-ip=88.198.66.69;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="wdraxinger.maillist@draxit.de";
  x-sender="postmaster@mail.draxit.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ap4EALVbT1JYxkJF/2dsb2JhbABZxTKBLHSCJgEFOj8QCxARExIPSBmICrxJj1EHFoQNA5gAAZF/gyY
X-IPAS-Result: Ap4EALVbT1JYxkJF/2dsb2JhbABZxTKBLHSCJgEFOj8QCxARExIPSBmICrxJj1EHFoQNA5gAAZF/gyY
X-IronPort-AV: E=Sophos;i="4.90,1036,1371074400"; 
   d="scan'208";a="29170181"
Received: from a.ns.draxit.de (HELO mail.draxit.de) ([88.198.66.69])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/ADH-AES256-SHA; 05 Oct 2013 02:23:16 +0200
Received: from narfi.yggdrasil.draxit.de (ppp-93-104-55-129.dynamic.mnet-online.de [93.104.55.129])
	(using SSLv3 with cipher DHE-RSA-AES128-SHA (128/128 bits))
	(No client certificate requested)
	by mail.draxit.de (Postfix) with ESMTPSA id BB0041C0A5;
	Sat,  5 Oct 2013 02:23:12 +0200 (CEST)
Date: Sat, 5 Oct 2013 02:25:37 +0200
From: Wolfgang Draxinger <wdraxinger.maillist@draxit.de>
To: caml-list@inria.fr
Cc: Francis Dupont <Francis.Dupont@fdupont.fr>
Message-ID: <20131005022537.20edf93e@narfi.yggdrasil.draxit.de>
In-Reply-To: <201310041544.r94FiR1h085910@givry.fdupont.fr>
References: <20131004014649.2b4e7750@narfi.yggdrasil.draxit.de>
	<201310041544.r94FiR1h085910@givry.fdupont.fr>
Organization: DraxIT
X-Mailer: Claws Mail 3.8.1 (GTK+ 2.24.17; x86_64-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Subject: Re: [Caml-list] Current state of threading parallelism?

On Fri, 04 Oct 2013 17:44:27 +0200
Francis Dupont <Francis.Dupont@fdupont.fr> wrote:

> => yes, this is the official way (no shared memory, no fine grain
> locking, etc). Note this was the way followed by Python too for
> the same reasons (to make the intepreter multi-threaded was considered
> as too hard for the expected best result, i.e., ~4 time maximum speed
> up).

Well, there are certain problems that can be largely parallelized in a
way that performance scales well with the number of cores. Those
problems usually also perform in constant memory (of course this is all
mutable state then, so not really pure). I'm thinking of problems that
could be put as well on GPUs here, like signal decomposition, error
diffusion models, stuff like that.

> => I can't see where a LLVM backend really helps for multi-core/multi-
> processor parallelism... IMHO the best / most reasonable thing you can
> do to handle multi-core/multi-processor parallelism is a set of
> communicating independent OCaml instances (one per process). The model
> is well understood and scales.

I consider the LLVM backend exciting, because it promises to increase
the range of architectures that can be targeted natively. Me mentioning
it had nothing to do with parallelism.


Wolfgang
