Return-Path: <berenger@riken.jp>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 1E40C7EE4B
	for <caml-list@sympa.inria.fr>; Mon,  7 Oct 2013 10:45:03 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  berenger@riken.jp) identity=pra; client-ip=134.160.33.162;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="berenger@riken.jp"; x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  berenger@riken.jp designates 134.160.33.162 as permitted
  sender) identity=mailfrom; client-ip=134.160.33.162;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="berenger@riken.jp"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  postmaster@postman.riken.jp designates 134.160.33.162 as
  permitted sender) identity=helo; client-ip=134.160.33.162;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="postmaster@postman.riken.jp";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ah4BAKhzUlKGoCGinGdsb2JhbABZwjKCeYEuDgEBAQEBCAsJCRQogiUBAQUnEUARCxgJFg8JAwIBAgFFEwgBAYgCukGPWBaEDQOJN45KhjaOfQ
X-IPAS-Result: Ah4BAKhzUlKGoCGinGdsb2JhbABZwjKCeYEuDgEBAQEBCAsJCRQogiUBAQUnEUARCxgJFg8JAwIBAgFFEwgBAYgCukGPWBaEDQOJN45KhjaOfQ
X-IronPort-AV: E=Sophos;i="4.90,1048,1371074400"; 
   d="scan'208";a="35847582"
Received: from postman2.riken.jp (HELO postman.riken.jp) ([134.160.33.162])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 07 Oct 2013 10:45:00 +0200
Received: from postman.riken.jp (postman2.riken.jp [127.0.0.1])
	by postman.riken.jp (Postfix) with SMTP id 70D151260485
	for <caml-list@inria.fr>; Mon,  7 Oct 2013 17:44:58 +0900 (JST)
Received: from [172.27.98.103] (rikad98.riken.jp [134.160.214.98])
	by postman.riken.jp (Postfix) with ESMTPA id 4AD921270051
	for <caml-list@inria.fr>; Mon,  7 Oct 2013 17:44:58 +0900 (JST)
Message-ID: <52527452.8010202@riken.jp>
Date: Mon, 07 Oct 2013 17:44:02 +0900
From: Francois Berenger <berenger@riken.jp>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:24.0) Gecko/20100101 Thunderbird/24.0
MIME-Version: 1.0
To: caml-list@inria.fr
References: <20131007083549.GA22920@emmental.inria.fr>
In-Reply-To: <20131007083549.GA22920@emmental.inria.fr>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-PMX-Version: 6.0.0.2142326, Antispam-Engine: 2.7.2.2107409, Antispam-Data: 2013.10.7.83614
Subject: Re: [Caml-list] [ANN] QCheck 0.1

On 10/07/2013 05:35 PM, Simon Cruanes wrote:
> Hello,
>
> I'm happy to announce the first release of a small QuickCheck
> implementation for OCaml, named `QCheck`. It consists in writing
> invariants as function t -> bool for some type t, and then checking that
> the invariant holds on randomly generated instances of t.
>
> QCheck is designed so that writing tests is as easy as possible[1],
> especially for Arbitrary instances (the part where you generate random
> values of a type) where it provides many combinators.

Is it supported by qtest?

I.e. can some qtest tests in comments use this QCheck library?

Best regards,
Francois Berenger.

