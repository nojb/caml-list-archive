Return-Path: <of12343@my.bristol.ac.uk>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 3CDEA7EE25
	for <caml-list@sympa.inria.fr>; Tue, 29 Oct 2013 13:14:22 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  of12343@my.bristol.ac.uk) identity=pra;
  client-ip=209.85.212.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="of12343@my.bristol.ac.uk";
  x-sender="of12343@my.bristol.ac.uk";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  of12343@my.bristol.ac.uk) identity=mailfrom;
  client-ip=209.85.212.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="of12343@my.bristol.ac.uk";
  x-sender="of12343@my.bristol.ac.uk";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-wi0-f173.google.com) identity=helo;
  client-ip=209.85.212.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="of12343@my.bristol.ac.uk";
  x-sender="postmaster@mail-wi0-f173.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ah4DADCmb1LRVdStlGdsb2JhbABZgkN8wAaBJRYOAQEBAQcLCwkSKoIlAQEEAW0RCxIKAwECAS40AQUBEgIIGYgBBgQBCJpLlV+JFI1zGYEqDRGDGYENA55GiWBBhFE
X-IPAS-Result: Ah4DADCmb1LRVdStlGdsb2JhbABZgkN8wAaBJRYOAQEBAQcLCwkSKoIlAQEEAW0RCxIKAwECAS40AQUBEgIIGYgBBgQBCJpLlV+JFI1zGYEqDRGDGYENA55GiWBBhFE
X-IronPort-AV: E=Sophos;i="4.93,593,1378850400"; 
   d="scan'208,217";a="32411183"
Received: from mail-wi0-f173.google.com ([209.85.212.173])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 29 Oct 2013 13:14:21 +0100
Received: by mail-wi0-f173.google.com with SMTP id ey11so5070215wid.12
        for <caml-list@inria.fr>; Tue, 29 Oct 2013 05:14:21 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:from:content-type:subject:date:references:to
         :message-id:mime-version;
        bh=dTFiPqngSLvTSJx0LHGZJKgZJdB/+SKcYqo4gdgT6mM=;
        b=DqBCy9DQScztzERPD4cuLf+Pue2QTAzeWj43ICE5rSnSNE5IvuF2C6wwsAiQFQHQk7
         d4mwMFs4ZcWEs+RtCOO9j2G+H13zBtZAsRY6qLvQzTQFHswGMCQNZKz+G5K41hnOWDfn
         OQGkT3PGhT7D/Or2sHXyE4u8m1b0yHHzt1KQGW9Rs0TQJlvctk0BNiGoo1b3SN/xu4GK
         3HZju5uFrriIiQkLv6WNBrrnIhKzYZM8sV4hYZVeF73VwwFUPkO/Nwl5Ni/O1iygLZ1b
         weeWwsTBE7gOKsjOOiyOHW8QWiVZr54x0tVVgZmv+MrYZNMEIMhTU6XQUo+M+YPONvZr
         3i/g==
X-Gm-Message-State: ALoCoQkND8b4j92RcwuoguZnJK/4WW9x7eaHYkwFeX9FVVTT4OeIhPJWHe17EDIUqfNjoaNjeDfv
X-Received: by 10.180.160.178 with SMTP id xl18mr13323346wib.61.1383048860926;
        Tue, 29 Oct 2013 05:14:20 -0700 (PDT)
Received: from [172.20.10.8] (94.197.120.47.threembb.co.uk. [94.197.120.47])
        by mx.google.com with ESMTPSA id q3sm4281119wib.5.2013.10.29.05.14.18
        for <caml-list@inria.fr>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Tue, 29 Oct 2013 05:14:20 -0700 (PDT)
From: Ollie Frolovs <of12343@my.bristol.ac.uk>
Content-Type: multipart/alternative; boundary="Apple-Mail=_9D648094-2E98-4CB8-90C7-541C477C7056"
Date: Tue, 29 Oct 2013 12:14:16 +0000
References: <229046A9-C077-462E-903F-D3827D34B9A7@my.bristol.ac.uk>
To: caml-list@inria.fr
Message-Id: <D1163CAE-7A48-4543-94B3-06768310EB02@my.bristol.ac.uk>
Mime-Version: 1.0 (Mac OS X Mail 7.0 \(1816\))
X-Mailer: Apple Mail (2.1816)
Subject: [Caml-list] Fwd: Using Uri with Google Distance Matrix API


--Apple-Mail=_9D648094-2E98-4CB8-90C7-541C477C7056
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=windows-1252

This is just a follow-up to say that i had used a workaround suggested by D=
avid Sheets to resolve my issue with Uri.
The Google Distance Matrix API service works when Uri replaces the pipe cha=
racters with %7C.
Since creating a request to API involves a rather inconvenient concatenatin=
g of the arguments, i have made a suggestion to https://github.com/avsm/oca=
ml-uri/issues/28 that an optional ~sep argument is introduced to Uri functi=
ons, like the one in Jane Street=92s Core.String.concat.

Many thanks, Ollie

Begin forwarded message:

> From: Ollie Frolovs <of12343@my.bristol.ac.uk>
> Subject: Re: [Caml-list] Using Uri with Google Distance Matrix API
> Date: 29 October 2013 11:51:13 GMT
> To: David Sheets <sheets@alum.mit.edu>
>=20
>=20
> On 28 Oct 2013, at 22:26, David Sheets <sheets@alum.mit.edu> wrote:
>=20
>> On Mon, Oct 28, 2013 at 9:58 PM, O Frolovs
>> <ollie.frolovs.2012@my.bristol.ac.uk> wrote:
>>> Hello
>>=20
>> Hi Ollie,
> Hi David
>=20
>>=20
>>> I'm learning OCaml and currently trying to use it for my project at uni.
>>>=20
>>> Specifically, i=92m trying to use Uri [1] to create a Google Distance
>>> Matrix request and i find it a bit awkward since the API uses pipe
>>> character "|" for separating parameter values but Uri uses commas ","
>>> and i could not find a way to override it:
>>=20
>> Unfortunately, the Google Distance Matrix API does not conform to the
>> Internet Standard for URIs. Specifically, the pipe character "|" is
>> not allowed in a well-formed URI. I'm not sure why Google has decided
>> to use this character out of the very many separators available to
>> them.
>=20
> This is very odd, indeed.
>=20
>>=20
>>> utop # open Core.Std;;
>>> utop # #require "uri";;
>>>=20
>>> utop # let x =3D Uri.of_string "http://www.github.com/";;
>>> val x : Uri.t =3D <abstr>
>>>=20
>>> utop # let y =3D Uri.add_query_param x ("origins", ["Bristol";
>>> "Cambridge"; "Plymouth"; "London"]);;
>>> val y : Uri.t =3D <abstr>
>>>=20
>>> utop # Uri.to_string y;;
>>> - : string =3D "http://www.github.com/?origins=3DBristol,Cambridge,Plym=
outh,London"
>>>=20
>>> This is not what the API expects.
>>>=20
>>> I also tried concatenating the origins values before passing it to Uri
>>> but as you can see below, Uri performed character escape on pipe
>>> characters. So besides not looking elegant, it did not work:
>>>=20
>>> utop # String.concat ~sep:"|" ["Bristol"; "Cambridge"; "Plymouth"; "Lon=
don"];;
>>> - : string =3D "Bristol|Cambridge|Plymouth|London"
>>>=20
>>> utop # let y =3D Uri.add_query_param x ("origins", [c]);;
>>> val y : Uri.t =3D <abstr>
>>>=20
>>> utop # Uri.to_string y;;
>>> - : string =3D "http://www.github.com/?origins=3DBristol%7CCambridge%7C=
Plymouth%7CLondon"
>>>=20
>>> I am wondering
>>>=20
>>> (a) if there is a way to make Uri do what i want, that is to use pipe
>>> character to separate the origins values.
>>=20
>> I do not believe there is a way to accomplish this in Uri 1.3.8. Have
>> you tried submitting the percent-encoded query string to the API to
>> see if Google properly interprets the escaping of invalid characters?
>>=20
> I just tried this and it worked! Thanks for the suggestion.
>=20
>> Uri is designed to take as input any string and produce as output only
>> those strings that are conformant to RFC 3986.
>>=20
>>> (b) why Uri does not have an optional ~sep parameter, like Jane
>>> Street's Core.String.concat does?
>>=20
>> No one has implemented it yet. :-) There has been discussion about
>> significantly changing this API feature for 1.4 as well.
>>=20
>> If you are not manipulating the URIs heavily and are not in need of
>> input sanitation, using Uri may not be necessary unless another
>> library requires input of Uri.t values.
> I am using LWT and Cohttp which i believe requires Uri.t.=20
> So i am very happy the escaping worked with the API :)
>=20
>> If none of this helps you, please create an issue at
>> <https://github.com/mirage/ocaml-uri/issues?state=3Dopen> and we may end
>> up adding something to help you in the next revision (could be later
>> this week depending on how persuasive you are and how extensive the
>> feature).
> I will. I think the question here is how =91real-world=92 the Uri library=
 wants to be.
> As an example =96 I do not know much about JSON yet, but i would expect
> JSON libraries to make compromises to work with the real web services.
> Otherwise, what good is the library if it only works with carefully chosen
> artificial examples, RFC-compliant or not.
>=20
>> Hope this helps,
> It helped a lot, thanks again! :)
>=20
> Regards,
> Ollie


--Apple-Mail=_9D648094-2E98-4CB8-90C7-541C477C7056
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=windows-1252

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html charset=
=3Dwindows-1252"></head><body style=3D"word-wrap: break-word; -webkit-nbsp-=
mode: space; -webkit-line-break: after-white-space;">This is just a follow-=
up to say that i had used a workaround suggested by David Sheets to resolve=
 my issue with Uri.<div>The Google Distance Matrix API service works when U=
ri replaces the pipe characters with %7C.</div><div>Since creating a reques=
t to API involves a rather inconvenient concatenating of the arguments, i h=
ave made a suggestion to&nbsp;<a href=3D"https://github.com/avsm/ocaml-uri/=
issues/28">https://github.com/avsm/ocaml-uri/issues/28</a> that an optional=
 ~sep argument is introduced to Uri functions, like the one in Jane Street=
=92s Core.String.concat.<br><div><br></div><div>Many thanks, Ollie</div><di=
v><br><div>Begin forwarded message:</div><br class=3D"Apple-interchange-new=
line"><blockquote type=3D"cite"><div style=3D"margin-top: 0px; margin-right=
: 0px; margin-bottom: 0px; margin-left: 0px;"><span style=3D"font-family:'H=
elvetica'; color:rgba(0, 0, 0, 1.0);"><b>From: </b></span><span style=3D"fo=
nt-family:'Helvetica';">Ollie Frolovs &lt;<a href=3D"mailto:of12343@my.bris=
tol.ac.uk">of12343@my.bristol.ac.uk</a>&gt;<br></span></div><div style=3D"m=
argin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px;"><=
span style=3D"font-family:'Helvetica'; color:rgba(0, 0, 0, 1.0);"><b>Subjec=
t: </b></span><span style=3D"font-family:'Helvetica';"><b>Re: [Caml-list] U=
sing Uri with Google Distance Matrix API</b><br></span></div><div style=3D"=
margin-top: 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px;">=
<span style=3D"font-family:'Helvetica'; color:rgba(0, 0, 0, 1.0);"><b>Date:=
 </b></span><span style=3D"font-family:'Helvetica';">29 October 2013 11:51:=
13 GMT<br></span></div><div style=3D"margin-top: 0px; margin-right: 0px; ma=
rgin-bottom: 0px; margin-left: 0px;"><span style=3D"font-family:'Helvetica'=
; color:rgba(0, 0, 0, 1.0);"><b>To: </b></span><span style=3D"font-family:'=
Helvetica';">David Sheets &lt;<a href=3D"mailto:sheets@alum.mit.edu">sheets=
@alum.mit.edu</a>&gt;<br></span></div><br><div><div style=3D"font-family: H=
elvetica; font-size: 12px; font-style: normal; font-variant: normal; font-w=
eight: normal; letter-spacing: normal; line-height: normal; orphans: auto; =
text-align: start; text-indent: 0px; text-transform: none; white-space: nor=
mal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><div=
><br class=3D"Apple-interchange-newline">On 28 Oct 2013, at 22:26, David Sh=
eets &lt;<a href=3D"mailto:sheets@alum.mit.edu">sheets@alum.mit.edu</a>&gt;=
 wrote:</div><br class=3D"Apple-interchange-newline"><blockquote type=3D"ci=
te"><div style=3D"font-size: 12px; font-style: normal; font-variant: normal=
; font-weight: normal; letter-spacing: normal; line-height: normal; orphans=
: auto; text-align: start; text-indent: 0px; text-transform: none; white-sp=
ace: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0p=
x;">On Mon, Oct 28, 2013 at 9:58 PM, O Frolovs<br>&lt;<a href=3D"mailto:oll=
ie.frolovs.2012@my.bristol.ac.uk">ollie.frolovs.2012@my.bristol.ac.uk</a>&g=
t; wrote:<br><blockquote type=3D"cite">Hello<br></blockquote><br>Hi Ollie,<=
br></div></blockquote><div>Hi David</div><div><br></div><blockquote type=3D=
"cite"><div style=3D"font-size: 12px; font-style: normal; font-variant: nor=
mal; font-weight: normal; letter-spacing: normal; line-height: normal; orph=
ans: auto; text-align: start; text-indent: 0px; text-transform: none; white=
-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width:=
 0px;"><br><blockquote type=3D"cite">I'm learning OCaml and currently tryin=
g to use it for my project at uni.<br><br>Specifically, i=92m trying to use=
 Uri [1] to create a Google Distance<br>Matrix request and i find it a bit =
awkward since the API uses pipe<br>character "|" for separating parameter v=
alues but Uri uses commas ","<br>and i could not find a way to override it:=
<br></blockquote><br>Unfortunately, the Google Distance Matrix API does not=
 conform to the<br>Internet Standard for URIs. Specifically, the pipe chara=
cter "|" is<br>not allowed in a well-formed URI. I'm not sure why Google ha=
s decided<br>to use this character out of the very many separators availabl=
e to<br>them.<br></div></blockquote><div><br></div>This is very odd, indeed=
.</div><div style=3D"font-family: Helvetica; font-size: 12px; font-style: n=
ormal; font-variant: normal; font-weight: normal; letter-spacing: normal; l=
ine-height: normal; orphans: auto; text-align: start; text-indent: 0px; tex=
t-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -w=
ebkit-text-stroke-width: 0px;"><br><blockquote type=3D"cite"><div style=3D"=
font-size: 12px; font-style: normal; font-variant: normal; font-weight: nor=
mal; letter-spacing: normal; line-height: normal; orphans: auto; text-align=
: start; text-indent: 0px; text-transform: none; white-space: normal; widow=
s: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><br><blockquot=
e type=3D"cite">utop # open Core.Std;;<br>utop # #require "uri";;<br><br>ut=
op # let x =3D Uri.of_string "<a href=3D"http://www.github.com/">http://www=
.github.com/</a>";;<br>val x : Uri.t =3D &lt;abstr&gt;<br><br>utop # let y =
=3D Uri.add_query_param x ("origins", ["Bristol";<br>"Cambridge"; "Plymouth=
"; "London"]);;<br>val y : Uri.t =3D &lt;abstr&gt;<br><br>utop # Uri.to_str=
ing y;;<br>- : string =3D "<a href=3D"http://www.github.com/?origins=3DBris=
tol,Cambridge,Plymouth,London">http://www.github.com/?origins=3DBristol,Cam=
bridge,Plymouth,London</a>"<br><br>This is not what the API expects.<br><br=
>I also tried concatenating the origins values before passing it to Uri<br>=
but as you can see below, Uri performed character escape on pipe<br>charact=
ers. So besides not looking elegant, it did not work:<br><br>utop # String.=
concat ~sep:"|" ["Bristol"; "Cambridge"; "Plymouth"; "London"];;<br>- : str=
ing =3D "Bristol|Cambridge|Plymouth|London"<br><br>utop # let y =3D Uri.add=
_query_param x ("origins", [c]);;<br>val y : Uri.t =3D &lt;abstr&gt;<br><br=
>utop # Uri.to_string y;;<br>- : string =3D "<a href=3D"http://www.github.c=
om/?origins=3DBristol%7CCambridge%7CPlymouth%7CLondon">http://www.github.co=
m/?origins=3DBristol%7CCambridge%7CPlymouth%7CLondon</a>"<br><br>I am wonde=
ring<br><br>(a) if there is a way to make Uri do what i want, that is to us=
e pipe<br>character to separate the origins values.<br></blockquote><br>I d=
o not believe there is a way to accomplish this in Uri 1.3.8. Have<br>you t=
ried submitting the percent-encoded query string to the API to<br>see if Go=
ogle properly interprets the escaping of invalid characters?<br><br></div><=
/blockquote><div>I just tried this and it worked! Thanks for the suggestion=
.</div><br><blockquote type=3D"cite"><div style=3D"font-size: 12px; font-st=
yle: normal; font-variant: normal; font-weight: normal; letter-spacing: nor=
mal; line-height: normal; orphans: auto; text-align: start; text-indent: 0p=
x; text-transform: none; white-space: normal; widows: auto; word-spacing: 0=
px; -webkit-text-stroke-width: 0px;">Uri is designed to take as input any s=
tring and produce as output only<br>those strings that are conformant to RF=
C 3986.<br><br><blockquote type=3D"cite">(b) why Uri does not have an optio=
nal ~sep parameter, like Jane<br>Street's Core.String.concat does?<br></blo=
ckquote><br>No one has implemented it yet. :-) There has been discussion ab=
out<br>significantly changing this API feature for 1.4 as well.<br><br>If y=
ou are not manipulating the URIs heavily and are not in need of<br>input sa=
nitation, using Uri may not be necessary unless another<br>library requires=
 input of Uri.t values.<br></div></blockquote>I am using LWT and Cohttp whi=
ch i believe requires Uri.t.&nbsp;</div><div style=3D"font-family: Helvetic=
a; font-size: 12px; font-style: normal; font-variant: normal; font-weight: =
normal; letter-spacing: normal; line-height: normal; orphans: auto; text-al=
ign: start; text-indent: 0px; text-transform: none; white-space: normal; wi=
dows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;">So i am ver=
y happy the escaping worked with the API :)</div><div style=3D"font-family:=
 Helvetica; font-size: 12px; font-style: normal; font-variant: normal; font=
-weight: normal; letter-spacing: normal; line-height: normal; orphans: auto=
; text-align: start; text-indent: 0px; text-transform: none; white-space: n=
ormal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><b=
r><blockquote type=3D"cite"><div style=3D"font-size: 12px; font-style: norm=
al; font-variant: normal; font-weight: normal; letter-spacing: normal; line=
-height: normal; orphans: auto; text-align: start; text-indent: 0px; text-t=
ransform: none; white-space: normal; widows: auto; word-spacing: 0px; -webk=
it-text-stroke-width: 0px;">If none of this helps you, please create an iss=
ue at<br>&lt;<a href=3D"https://github.com/mirage/ocaml-uri/issues?state=3D=
open">https://github.com/mirage/ocaml-uri/issues?state=3Dopen</a>&gt; and w=
e may end<br>up adding something to help you in the next revision (could be=
 later<br>this week depending on how persuasive you are and how extensive t=
he<br>feature).<br></div></blockquote>I will. I think the question here is =
how =91real-world=92 the Uri library wants to be.</div><div style=3D"font-f=
amily: Helvetica; font-size: 12px; font-style: normal; font-variant: normal=
; font-weight: normal; letter-spacing: normal; line-height: normal; orphans=
: auto; text-align: start; text-indent: 0px; text-transform: none; white-sp=
ace: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: 0p=
x;">As an example =96 I do not know much about JSON yet, but i would expect=
</div><div style=3D"font-family: Helvetica; font-size: 12px; font-style: no=
rmal; font-variant: normal; font-weight: normal; letter-spacing: normal; li=
ne-height: normal; orphans: auto; text-align: start; text-indent: 0px; text=
-transform: none; white-space: normal; widows: auto; word-spacing: 0px; -we=
bkit-text-stroke-width: 0px;">JSON libraries to make compromises to work wi=
th the real web services.</div><div style=3D"font-family: Helvetica; font-s=
ize: 12px; font-style: normal; font-variant: normal; font-weight: normal; l=
etter-spacing: normal; line-height: normal; orphans: auto; text-align: star=
t; text-indent: 0px; text-transform: none; white-space: normal; widows: aut=
o; word-spacing: 0px; -webkit-text-stroke-width: 0px;">Otherwise, what good=
 is the library if it only works with carefully chosen</div><div style=3D"f=
ont-family: Helvetica; font-size: 12px; font-style: normal; font-variant: n=
ormal; font-weight: normal; letter-spacing: normal; line-height: normal; or=
phans: auto; text-align: start; text-indent: 0px; text-transform: none; whi=
te-space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-widt=
h: 0px;">artificial examples, RFC-compliant or not.</div><div style=3D"font=
-family: Helvetica; font-size: 12px; font-style: normal; font-variant: norm=
al; font-weight: normal; letter-spacing: normal; line-height: normal; orpha=
ns: auto; text-align: start; text-indent: 0px; text-transform: none; white-=
space: normal; widows: auto; word-spacing: 0px; -webkit-text-stroke-width: =
0px;"><br><blockquote type=3D"cite"><div style=3D"font-size: 12px; font-sty=
le: normal; font-variant: normal; font-weight: normal; letter-spacing: norm=
al; line-height: normal; orphans: auto; text-align: start; text-indent: 0px=
; text-transform: none; white-space: normal; widows: auto; word-spacing: 0p=
x; -webkit-text-stroke-width: 0px;">Hope this helps,</div></blockquote>It h=
elped a lot, thanks again! :)</div><div style=3D"font-family: Helvetica; fo=
nt-size: 12px; font-style: normal; font-variant: normal; font-weight: norma=
l; letter-spacing: normal; line-height: normal; orphans: auto; text-align: =
start; text-indent: 0px; text-transform: none; white-space: normal; widows:=
 auto; word-spacing: 0px; -webkit-text-stroke-width: 0px;"><br></div><div s=
tyle=3D"font-family: Helvetica; font-size: 12px; font-style: normal; font-v=
ariant: normal; font-weight: normal; letter-spacing: normal; line-height: n=
ormal; orphans: auto; text-align: start; text-indent: 0px; text-transform: =
none; white-space: normal; widows: auto; word-spacing: 0px; -webkit-text-st=
roke-width: 0px;">Regards,</div><div style=3D"font-family: Helvetica; font-=
size: 12px; font-style: normal; font-variant: normal; font-weight: normal; =
letter-spacing: normal; line-height: normal; orphans: auto; text-align: sta=
rt; text-indent: 0px; text-transform: none; white-space: normal; widows: au=
to; word-spacing: 0px; -webkit-text-stroke-width: 0px;">Ollie</div></div></=
blockquote></div><br></div></body></html>=

--Apple-Mail=_9D648094-2E98-4CB8-90C7-541C477C7056--
