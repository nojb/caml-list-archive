Return-Path: <berenger@riken.jp>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 7DF147EE4B
	for <caml-list@sympa.inria.fr>; Sat,  5 Oct 2013 05:58:04 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  berenger@riken.jp) identity=pra; client-ip=134.160.33.161;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="berenger@riken.jp"; x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  berenger@riken.jp designates 134.160.33.161 as permitted
  sender) identity=mailfrom; client-ip=134.160.33.161;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="berenger@riken.jp"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  postmaster@postman.riken.jp designates 134.160.33.161 as
  permitted sender) identity=helo; client-ip=134.160.33.161;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="postmaster@postman.riken.jp";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ap0BAGGNT1KGoCGhnGdsb2JhbABZgz/BbIEsDgEBAQEBCAsJCRQogiUBAQU4QBELEAgJFg8JAwIBAgFFEwYCAQGIAQG8WI9YFoQNA4k3jkqMTIFnhn8
X-IPAS-Result: Ap0BAGGNT1KGoCGhnGdsb2JhbABZgz/BbIEsDgEBAQEBCAsJCRQogiUBAQU4QBELEAgJFg8JAwIBAgFFEwYCAQGIAQG8WI9YFoQNA4k3jkqMTIFnhn8
X-IronPort-AV: E=Sophos;i="4.90,1037,1371074400"; 
   d="scan'208";a="35662236"
Received: from postman1.riken.jp (HELO postman.riken.jp) ([134.160.33.161])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 05 Oct 2013 05:58:01 +0200
Received: from postman.riken.jp (postman1.riken.jp [127.0.0.1])
	by postman.riken.jp (Postfix) with SMTP id 2242E2588001
	for <caml-list@inria.fr>; Sat,  5 Oct 2013 12:58:00 +0900 (JST)
Received: from fbrs-iMac.local (usr013.bb802-01.ual.im.wakwak.ne.jp [219.121.104.207])
	by postman.riken.jp (Postfix) with ESMTPA id 4BF9C32A0085
	for <caml-list@inria.fr>; Sat,  5 Oct 2013 12:57:59 +0900 (JST)
Message-ID: <524F8E46.1000405@riken.jp>
Date: Sat, 05 Oct 2013 12:57:58 +0900
From: Francois Berenger <berenger@riken.jp>
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.7; rv:17.0) Gecko/20130801 Thunderbird/17.0.8
MIME-Version: 1.0
To: caml-list@inria.fr
References: <20131004014649.2b4e7750@narfi.yggdrasil.draxit.de> <201310041544.r94FiR1h085910@givry.fdupont.fr> <20131005022537.20edf93e@narfi.yggdrasil.draxit.de> <CAAFfW_o7prPb_CibBFXqcRDwb==vdMRJDweP84po=gXpB8Y3zg@mail.gmail.com>
In-Reply-To: <CAAFfW_o7prPb_CibBFXqcRDwb==vdMRJDweP84po=gXpB8Y3zg@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-PMX-Version: 6.0.0.2142326, Antispam-Engine: 2.7.2.2107409, Antispam-Data: 2013.10.5.35115
Subject: Re: [Caml-list] Current state of threading parallelism?

On 10/5/13 10:25 AM, Philippe Wang wrote:
> On Sat, Oct 5, 2013 at 1:25 AM, Wolfgang Draxinger
> <wdraxinger.maillist@draxit.de> wrote:
>> On Fri, 04 Oct 2013 17:44:27 +0200
>> Francis Dupont <Francis.Dupont@fdupont.fr> wrote:
>>
>>> => yes, this is the official way (no shared memory, no fine grain
>>> locking, etc). Note this was the way followed by Python too for
>>> the same reasons (to make the intepreter multi-threaded was considered
>>> as too hard for the expected best result, i.e., ~4 time maximum speed
>>> up).
>>
>> Well, there are certain problems that can be largely parallelized in a
>> way that performance scales well with the number of cores. Those
>> problems usually also perform in constant memory (of course this is all
>> mutable state then, so not really pure). I'm thinking of problems that
>> could be put as well on GPUs here, like signal decomposition, error
>> diffusion models, stuff like that.
>
> You might want to get a look at SPOC:
> http://www.algo-prog.info/spoc/

Have someone used SPOC in production or is it just a prototype?

