Return-Path: <David.Teller@ens-lyon.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=AWL,RCVD_IN_BL_SPAMCOP_NET 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 6608ABC69
	for <caml-list@yquem.inria.fr>; Thu, 22 Feb 2007 17:17:06 +0100 (CET)
Received: from dedibox1.ambre.net (dedibox1.ambre.net [88.191.29.66])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l1MGH5d5024959
	for <caml-list@yquem.inria.fr>; Thu, 22 Feb 2007 17:17:06 +0100
Received: from [81.185.99.54] (unknown [81.185.99.54])
	by dedibox1.ambre.net (Postfix) with ESMTP id 0FC0EC40014;
	Thu, 22 Feb 2007 17:17:02 +0100 (CET)
Message-ID: <45DDC1CB.2090401@ens-lyon.org>
Date: Thu, 22 Feb 2007 17:16:11 +0100
From: David Teller <David.Teller@ens-lyon.org>
User-Agent: Thunderbird 1.5.0.9 (Windows/20061207)
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Cc: frederic.gava@wanadoo.fr
Subject: Re: [Caml-list] Feature request : Tuples vs. records
References: <7639252.205431172158497978.JavaMail.www@wwinf2216>
In-Reply-To: <7639252.205431172158497978.JavaMail.www@wwinf2216>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit
X-Miltered: at discorde with ID 45DDC201.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ens-lyon:01 gava:01 unboxed:01 cheers:01 syntactic:01 caml-list:01 tuples:01 tuples:01 tuple:02 shorter:02 essentially:02 float:03 float:03 frederic:03 let:03 

Frederic GAVA a Ã©crit :
> Hi David,
>
> Another difference is that (If I remember) record of float are unboxed and not tuple of float. But perhaps it could be done.
>   
I assume that's not a real difficulty. I might be wrong.
> Also, I do understand the true difference between write
> {x=1;y=2} (9 caracters) and (~x:1,~y:2) (11 caracters) except syntaxic one (I thinks that = is simpler that : which is more for type)
>
>
>   

I grant you that it is syntactically shorter. So we can keep it as a 
syntactic shortcut.

I'm more concerned about having to
* declare every record type I use -- that looks to me clumsy and Java-like
* differenciate between records and tuples during pattern-matching
* having to learn/teach two different implementations of what is 
essentially the same concept
* having to learn/teach that third meaning of operator = (the first one 
being comparison between values and the second one being its use in let 
x = ...).


Cheers,
 David

