Return-Path: <ls-ocaml-2006@m-e-leypold.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.7 required=5.0 tests=AWL,NO_REAL_NAME 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id D6F75BC69
	for <caml-list@yquem.inria.fr>; Fri,  9 Feb 2007 11:26:52 +0100 (CET)
Received: from server2.thinkcrime.de (server2.thinkcrime.de [213.133.110.149])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l19AQqRQ009485
	for <caml-list@yquem.inria.fr>; Fri, 9 Feb 2007 11:26:52 +0100
Received: from hod-sarge-2005-10.lan.m-e-leypold.de (dslb-088-072-219-206.pools.arcor-ip.net [88.72.219.206])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by server2.thinkcrime.de (Postfix) with ESMTP id 40DFB488032
	for <caml-list@yquem.inria.fr>; Fri,  9 Feb 2007 11:26:53 +0100 (CET)
Received: by hod-sarge-2005-10.lan.m-e-leypold.de (Postfix, from userid 1003)
	id 75132376C1; Fri,  9 Feb 2007 11:32:02 +0100 (CET)
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Multiplication of matrix in C and OCaml
References: <45CAF3E2.7020807@univ-paris12.fr> <45CAFF5A.2020607@inria.fr>
	<45CB3ED0.9040200@univ-paris12.fr>
	<20070209.115842.106265091.garrigue@math.nagoya-u.ac.jp>
	<rkhctvbsz9.fsf@hod.lan.m-e-leypold.de>
From: ls-ocaml-developer-2006@m-e-leypold.de
Date: Fri, 09 Feb 2007 11:32:02 +0100
In-Reply-To: <rkhctvbsz9.fsf@hod.lan.m-e-leypold.de> (ls-ocaml-developer's
 message of "Fri, 09 Feb 2007 10:06:18 +0100")
Message-ID: <rqirebaafx.fsf@hod.lan.m-e-leypold.de>
User-Agent: Some cool user agent (SCUG)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at discorde with ID 45CC4C6C.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 matrices:01 caml-list:01 writes:01 output:02 correction:04 problem:05 problem:05 i'd:05 subtract:07 file:08 file:08 constant:10 constant:10 contribution:11 


ls-ocaml-developer-2006@m-e-leypold.de writes:

> optimizations. I'd feel better if the code is benchmarked in a way
> that the result of the multiplication is output to a file and to
> subtract the constant contribution of that to the run time that the
> time is measured for various problem sizes (number of matrices). 

Correction: ... the constant contribution of writing the result to a
file should be subtracted from the run time by measuring with various
problem sizes.

Hope that is understandable now.


