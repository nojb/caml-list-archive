Return-Path: <kknowles@soe.ucsc.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 590C8BC0B
	for <caml-list@yquem.inria.fr>; Sun,  4 Feb 2007 17:36:45 +0100 (CET)
Received: from smtp.tlkhosting.net (ash.frap.net [64.62.168.130])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l14GahXi026001
	for <caml-list@inria.fr>; Sun, 4 Feb 2007 17:36:45 +0100
Received: from localhost (fsh-cpe-52-173.resnet.ucsc.edu [169.233.52.173])
	by smtp.tlkhosting.net (Postfix) with ESMTP id E290C10980E9;
	Sun,  4 Feb 2007 08:36:48 -0800 (PST)
Date: Sun, 4 Feb 2007 08:35:39 -0800
From: Kenn Knowles <kknowles@soe.ucsc.edu>
To: David MENTRE <dmentre@linux-france.org>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Design-by-contract and Type inference?
Message-ID: <20070204163539.GA26650@tallman.ucsc.edu>
References: <20070201050431.E278AAB40@Adric.metnet.fnmoc.navy.mil> <87fy9lhql7.fsf@linux-france.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <87fy9lhql7.fsf@linux-france.org>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Miltered: at discorde with ID 45C60B9B.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; inference:01 0100,:01 inference:01 ocaml:01 esop:01 booktitle:01 esop:01 low-level:01 necula:01 booktitle:01 knowles:98 soe:98 citations:98 kenneth:98 knowles:98 

On Sun, Feb 04, 2007 at 04:47:48PM +0100, David MENTRE wrote:
> Does anybody know if there is research on design-by-contract (as used in
> Eiffel or Spark) and type inference (as used in OCaml)?

I happen to have recently done a little something in this area, though not in an
object-oriented setting.  Other than the citations in my related work section,
there is a presentation adjacent to mine at ESOP that does some inference in a
dependent type system (cited below).

@inproceedings{
   title = "Type Reconstruction for General Refinement Types",
   author =  "Kenneth Knowles and Cormac Flanagan",
   booktitle = "ESOP",
   year = 2007,
   url = "http://kenn.frap.net/publications/knowles-flanagan.esop.07.type.pdf"
}

@inproceedings{
   title = "Dependent Types for Low-Level Programming",
   author = "Jeremy Condit and Matthew Harren and Zachary Anderson and David Gay and George C. Necula",
   booktitle = "ESOP",
   year = "2007"
}

Hope these help,

- Kenn

