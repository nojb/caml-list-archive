Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id F2A92BC69
	for <caml-list@yquem.inria.fr>; Thu, 22 Feb 2007 00:23:29 +0100 (CET)
Received: from ipmail02.adl2.internode.on.net (ipmail02.adl2.internode.on.net [203.16.214.141])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l1LNNROK025420
	for <caml-list@yquem.inria.fr>; Thu, 22 Feb 2007 00:23:28 +0100
Received: from ppp19-199.lns2.syd7.internode.on.net (HELO rosella) ([59.167.19.199])
  by ipmail02.adl2.internode.on.net with ESMTP; 22 Feb 2007 09:50:50 +1030
X-IronPort-AV: i="4.14,203,1170595800"; 
   d="scan'208"; a="87959238:sNHT8901226516"
Subject: Re: [Caml-list] warning on value shadowing
From: skaller <skaller@users.sourceforge.net>
To: David Allsopp <dra-news@metastack.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <00f301c7560b$84b8c8c0$6a7ba8c0@treble>
References: <20070221223151.97901BC76@yquem.inria.fr>
	 <00f301c7560b$84b8c8c0$6a7ba8c0@treble>
Content-Type: text/plain
Date: Thu, 22 Feb 2007 10:20:47 +1100
Message-Id: <1172100047.25438.9.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 45DCD46F.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; pervasives:01 foo:01 modular:01 sourceforge:01 wrote:01 imho:01 clearer:01 caml-list:01 renaming:02 module:03 module:03 wed:06 john:09 felix:09 felix:09 

On Wed, 2007-02-21 at 22:56 +0000, David Allsopp wrote:

> IMHO Pervasives is the only module that should be opened --- renaming a
> module with "module Foo = SomeVeryLongModuleNameYouDontWantToTypeLots" is
> better (makes clearer code) than "open ... ". But that's just another
> opinion...

I open every module I use as a matter of principle.
This makes the body code independent of modular refactoring.

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

