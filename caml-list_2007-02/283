Return-Path: <David.Teller@ens-lyon.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.7 required=5.0 tests=AWL,RCVD_IN_BL_SPAMCOP_NET 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 7AD14BC6B
	for <caml-list@yquem.inria.fr>; Thu, 22 Feb 2007 14:55:34 +0100 (CET)
Received: from dedibox1.ambre.net (dedibox1.ambre.net [88.191.29.66])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l1MDtYLV018416
	for <caml-list@yquem.inria.fr>; Thu, 22 Feb 2007 14:55:34 +0100
Received: from [81.185.99.54] (unknown [81.185.99.54])
	by dedibox1.ambre.net (Postfix) with ESMTP id CE84EC4000B
	for <caml-list@yquem.inria.fr>; Thu, 22 Feb 2007 14:55:33 +0100 (CET)
Message-ID: <45DDA0BF.2000807@ens-lyon.org>
Date: Thu, 22 Feb 2007 14:55:11 +0100
From: David Teller <David.Teller@ens-lyon.org>
User-Agent: Thunderbird 1.5.0.9 (Windows/20061207)
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Feature request : Tuples vs. records
References: <45DD6F8C.7080508@ens-lyon.org> <45DD73A8.3040703@fmf.uni-lj.si> <1172148077.5345.18.camel@rosella.wigram>
In-Reply-To: <1172148077.5345.18.camel@rosella.wigram>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 8bit
X-Miltered: at discorde with ID 45DDA0D6.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ens-lyon:01 ocaml's:01 cheers:01 0100,:01 andrej:01 ocaml:01 structurally:01 wrote:01 abstract:01 syntactic:01 typing:01 typing:01 caml-list:01 tuples:01 tuples:01 

Yes, that's actually the only real difference I see between records and 
tuples. I have the feeling that every other difference is just syntactic 
sugar.

Now, unless I'm mistaken, OCaml's design is mostly towards structural 
typing. Usually, when one wants nominal typing, one resorts to abstract 
types safely hidden in modules. From this point of view, nominal typing 
of records is therefore somewhat surprising.

Am I getting something wrong ?

Cheers,
 David

skaller a écrit :
> On Thu, 2007-02-22 at 11:42 +0100, Andrej Bauer wrote:
>   
> There's another difference in Ocaml: records
> are nominally typed, tuples are structurally typed.
>   

