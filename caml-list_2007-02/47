Return-Path: <ls-ocaml-2006@m-e-leypold.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.9 required=5.0 tests=AWL,NO_REAL_NAME 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id E4EFBBC68
	for <caml-list@yquem.inria.fr>; Sun,  4 Feb 2007 11:41:58 +0100 (CET)
Received: from server2.thinkcrime.de (server2.thinkcrime.de [213.133.110.149])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l14Afwcn023270
	for <caml-list@yquem.inria.fr>; Sun, 4 Feb 2007 11:41:58 +0100
Received: from hod-sarge-2005-10.lan.m-e-leypold.de (dslb-088-072-198-057.pools.arcor-ip.net [88.72.198.57])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by server2.thinkcrime.de (Postfix) with ESMTP id EFE98488016
	for <caml-list@yquem.inria.fr>; Sun,  4 Feb 2007 11:41:56 +0100 (CET)
Received: by hod-sarge-2005-10.lan.m-e-leypold.de (Postfix, from userid 1003)
	id 4C29C376C1; Sun,  4 Feb 2007 11:46:55 +0100 (CET)
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Exception Unix_error problem in toplevel
References: <20070202011014.GA27655@telus.net>
	<3564akdaob.fsf@hod.lan.m-e-leypold.de>
	<20070203022956.GC29434@telus.net>
	<feirejcpxt.fsf@hod.lan.m-e-leypold.de>
	<20070204004610.GB30621@telus.net>
Organization: Leypold, Software-Dienstleistungen und -Beratung
From: ls-ocaml-developer-2006@m-e-leypold.de
Date: Sun, 04 Feb 2007 11:46:55 +0100
In-Reply-To: <20070204004610.GB30621@telus.net> (Bob Williams's message of
 "Sat, 3 Feb 2007 16:46:10 -0800")
Message-ID: <ylsldmurmo.fsf@hod.lan.m-e-leypold.de>
User-Agent: Some cool user agent (SCUG)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at discorde with ID 45C5B876.003 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; toplevel:01 0100,:01 bug:01 toplevel:01 ocaml:01 exn:01 ocaml:01 compiler:01 statically:01 exn:01 raq:01 markus:01 markus:01 bug:01 byte:01 



Bob Williams <a6b37331@telus.net> writes:

> On Sat, Feb 03, 2007 at 02:48:30PM +0100, ls-ocaml-developer-2006@m-e-leypold.de wrote:
>> 
>> Bob Williams <a6b37331@telus.net> writes:
>> 
>> > Now to the possible bug in toplevel.  According to section 6.8.2 of
>> > the OCaml manual,
>> >
>> > 	exception Unix_error of ...
>> >
>> > simply declares another variant of the built-in variant type "exn".  I
>> > haven't looked into the implementation of OCaml, but I assume the
>> > compiler statically assigns a tag number to every variant of a normal
>> > variant type.  For exn, however, the tag numbers must be assigned at
>> > load time or run time.
>> >
>> > And that is the problem I stumbled over.  The second copy of
>> 
>> Oh cool. :-). There should be RAQ (rarely asked questions + obscure
>> problems). This should go into it :-).
>> 
>> Regards -- Markus
>
> They are all obscure, Markus.  A careful developer finds and fixes
> most of the obvious bugs; the ones left over are nearly always
> unusual.
>
> I did something stupid to trigger the exception-renumbering bug, but


But if I understood it right, it's not a bug, but rather a user
error. There is AFAIR a FAQ for a similar situation if people
interactively load byte code files several times and define functions
in between. Your problem is similar, only that you're not redefining
functions but rather execptions.

I also think redefining an exception should not trigger an error or
warning message.

Rather reloading a byte code file of the same name and at the same
time having still loaded byte code files that refer to another version
of the first byte code file -- this should trigger an error or a
warning. Reloading a byte code file to which no other definitions
refer is not a problem and indeed wanted when you do debugging.

> there are valid circumstances under which the bug could bite somebody
> else.  So it should probably be fixed.


> I know almost nothing about OCaml's implementation, so any patch I
> contribute will probably hurt more than it will help.  But if nobody
> volunteers to fix the bug, I hereby threaten to do it myself.  :)

Regards -- Markus

