Return-Path: <fernando@cc.gatech.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 57938BC0A
	for <caml-list@yquem.inria.fr>; Mon, 19 Feb 2007 21:51:34 +0100 (CET)
Received: from sark4.cc.gatech.edu (sark4.cc.gatech.edu [130.207.7.19])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l1JKpX5L025512
	for <caml-list@inria.fr>; Mon, 19 Feb 2007 21:51:33 +0100
Received: from gaia.cc.gatech.edu (gaia.cc.gatech.edu [130.207.3.8])
	by sark4.cc.gatech.edu (8.13.6/8.12.8) with ESMTP id l1JKpQge028996;
	Mon, 19 Feb 2007 15:51:27 -0500 (EST)
Received: (from fernando@localhost)
	by gaia.cc.gatech.edu (8.13.6/8.12.8) id l1JKpOXa012217;
	Mon, 19 Feb 2007 15:51:24 -0500 (EST)
Date: Mon, 19 Feb 2007 15:51:24 -0500
From: Fernando Alegre <fernando@cc.gatech.edu>
To: Andrej.Bauer@andrej.com
Cc: caml-list@inria.fr
Subject: Re: RE : [Caml-list] empty type
Message-ID: <20070219205124.GA12113@gaia.cc.gatech.edu>
References: <000001c75431$8ab2e8e0$c09ec781@mathiasens> <45D9CA6E.8020008@fmf.uni-lj.si>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <45D9CA6E.8020008@fmf.uni-lj.si>
User-Agent: Mutt/1.4.2.1i
X-Miltered: at concorde with ID 45DA0DD5.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; 0100,:01 andrej:01 redefined:01 andrej:01 beginner's:01 ocaml:01 bug:01 mathias:98 beginners:01 wrote:01 wrote:01 constructor:01 constructor:01 caml-list:01 caml-list:01 


How about this:

# type t = () of int;;
type t = () of int
# begin end;;
The constructor () expects 1 argument(s),
but is here applied to 0 argument(s)

Fernando

On Mon, Feb 19, 2007 at 05:03:58PM +0100, Andrej Bauer wrote:
> Mathias Kende wrote:
> >It's not a type, but just a valid name for a constructor that can be
> >redefined if necessary (although one surely does not want to do so).
> 
> Way cool:
> 
> # type t = () of int * int ;;
> type t = () of int * int
> # () (3, 4) ;;
> - : t = () (3, 4)
> 
> Andrej
> 
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs

