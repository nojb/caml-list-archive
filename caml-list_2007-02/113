Return-Path: <info@gerd-stolpmann.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id DC1ECBC69
	for <caml-list@yquem.inria.fr>; Fri,  9 Feb 2007 15:23:08 +0100 (CET)
Received: from moutng.kundenserver.de (moutng.kundenserver.de [212.227.126.188])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l19EN8ie010538
	for <caml-list@yquem.inria.fr>; Fri, 9 Feb 2007 15:23:08 +0100
Received: from [84.59.111.141] (helo=gate.lan.gerd-stolpmann.de)
	by mrelayeu.kundenserver.de (node=mrelayeu0) with ESMTP (Nemesis),
	id 0MKwh2-1HFWeT1r4C-0004dB; Fri, 09 Feb 2007 15:23:04 +0100
Received: from flakew.lan.gerd-stolpmann.de (fw.lan.gerd-stolpmann.de [192.168.1.1])
	by gate.lan.gerd-stolpmann.de (Postfix) with ESMTP id DE424C14F;
	Fri,  9 Feb 2007 15:23:00 +0100 (CET)
Subject: Re: [Caml-list] Multiplication of matrix in C and OCaml
From: Gerd Stolpmann <info@gerd-stolpmann.de>
To: Brian Hurt <bhurt@janestcapital.com>
Cc: ls-ocaml-developer-2006@m-e-leypold.de, caml-list@yquem.inria.fr
In-Reply-To: <45CC7C40.7000103@janestcapital.com>
References: <45CAF3E2.7020807@univ-paris12.fr> <45CAFF5A.2020607@inria.fr>
	 <45CB3ED0.9040200@univ-paris12.fr>
	 <20070209.115842.106265091.garrigue@math.nagoya-u.ac.jp>
	 <rkhctvbsz9.fsf@hod.lan.m-e-leypold.de>
	 <45CC7C40.7000103@janestcapital.com>
Content-Type: text/plain
Date: Fri, 09 Feb 2007 15:23:00 +0100
Message-Id: <1171030980.29886.48.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.1 
Content-Transfer-Encoding: 7bit
X-Provags-ID: kundenserver.de abuse@kundenserver.de login:a6865a839c0178d9aa0ce41878507ea2
X-Provags-ID2: V01U2FsdGVkX18srfu8Y8GheVOw9I/OtBKn7fZR5SAOJYj+RC+3N+jghf6l2t4Iz1/ndAMbG64XQoqz8ExUsPtpRJyF4da47pG5rBY0/jbgR2H+6MeiFlqG/MDtCGrDSFGZ
X-Miltered: at concorde with ID 45CC83CC.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 gerd:01 stolpmann:01 ocaml:01 gettimeofday:01 o'caml:01 gettimeofday:01 gerd:01 stolpmann:01 viktoriastr:01 64293:01 darmstadt:01 6151:01 6151:01 unix:01 

Am Freitag, den 09.02.2007, 08:50 -0500 schrieb Brian Hurt:
> For the C side, I recommend using clock() to time the runs.
> ...
> In Ocaml, Unix.gettimeofday can be used similiarly:

Ahem, don't understand why you suggest two different methods for C and
Ocaml. First, there is Unix.times in O'Caml that also returns the
process time like clock(). Second - believe it or not - there is also
gettimeofday in C.

Personally, I recommend to rely on gettimeofday, i.e. the wall clock
time of the system, on an otherwise idle system. That's the time that
finally counts, and the way the process time is accumulated by the
kernel is somewhat dubious (but may be useful to check whether the
system was really idle during the benchmark).

Gerd
-- 
------------------------------------------------------------
Gerd Stolpmann * Viktoriastr. 45 * 64293 Darmstadt * Germany 
gerd@gerd-stolpmann.de          http://www.gerd-stolpmann.de
Phone: +49-6151-153855                  Fax: +49-6151-997714
------------------------------------------------------------

