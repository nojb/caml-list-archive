Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id A30F6BC6E
	for <caml-list@yquem.inria.fr>; Sat, 24 Feb 2007 01:38:40 +0100 (CET)
Received: from ptb-relay01.plus.net (ptb-relay01.plus.net [212.159.14.212])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l1O0ce7b009901
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Sat, 24 Feb 2007 01:38:40 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay01.plus.net with esmtp (Exim) id 1HKkvv-0005lu-Cd
	for caml-list@yquem.inria.fr; Sat, 24 Feb 2007 00:38:39 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Case-insensitive lexing
Date: Sat, 24 Feb 2007 00:32:18 +0000
User-Agent: KMail/1.9.5
References: <23E977DC-77FF-44A2-8675-5EAA8F61505F@gmail.com> <200702232300.08359.jon@ffconsultancy.com> <c1490a380702231539u1ed67a97p5c2bf730fab7eaf@mail.gmail.com>
In-Reply-To: <c1490a380702231539u1ed67a97p5c2bf730fab7eaf@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200702240032.19129.jon@ffconsultancy.com>
X-Miltered: at discorde with ID 45DF8910.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; lexing:01 ocaml:01 ocaml:01 frog:98 equality:01 wrote:01 caml-list:01 strings:01 strings:01 linear:02 string:02 seems:03 seems:03 dispatch:03 pattern:04 

On Friday 23 February 2007 23:39, you wrote:
> Because, at least what I think, comparing strings using a hash-table is way
> faster than comparing them using pattern-matching.

I had always assumed that OCaml would build an optimal dispatch table when 
pattern matching over strings but it seems you are quite right: it does the 
worst possible linear string equality tests, not even O(log n) comparisons.

That seems like a great shame to me. Can someone implement this?

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
OCaml for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

