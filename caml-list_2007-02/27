Return-Path: <mailinglists@tobias-elze.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 74937BC0B
	for <caml-list@yquem.inria.fr>; Fri,  2 Feb 2007 15:36:29 +0100 (CET)
Received: from em-p07-ob.rzone.de (em-p07-ob.rzone.de [81.169.146.246])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l12EaS2C014356
	for <caml-list@yquem.inria.fr>; Fri, 2 Feb 2007 15:36:29 +0100
Received: from post.webmailer.de (teg.store [192.168.40.117])
	by mad-em-03.store (RZmta 4.4) with ESMTP id D04a4cj11LkDXR
	for <caml-list@yquem.inria.fr>; Fri, 2 Feb 2007 15:36:28 +0100 (MET)
Received: (from httpd@localhost)
	by post.webmailer.de (8.13.6/8.13.6) id l12EaSSN017982
	for caml-list@yquem.inria.fr; Fri, 2 Feb 2007 15:36:28 +0100 (MET)
Date: Fri, 2 Feb 2007 15:36:28 +0100 (MET)
Message-Id: <200702021436.l12EaSSN017982@post.webmailer.de>
X-Authentication-Warning: teg.store: httpd set sender to mailinglists@tobias-elze.de using -f
To: caml-list@yquem.inria.fr
From: "Tobias Elze" <mailinglists@tobias-elze.de>
Subject: ocamlgsl natively with MingW
X-Priority: 3
X-Abuse: 389747 / 141.5.26.93
X-RZG-MBID: 15cHLgiPQLuz
MIME-Version: 1.0
Content-Type: text/plain; charset="ISO-8859-1"
Content-Transfer-Encoding: quoted-printable
X-Miltered: at concorde with ID 45C34C6C.003 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; tobias:01 mingw:01 mingw:01 andrieu:01 makefile:01 gsl:01 gsl:01 statically:01 ocamlopt:01 -static:01 dependencies:01 statically:01 ocamlopt:01 -cclib:01 -wl:01 

Almost one year after my last message on this list where I asked for help c=
ompiling ocamlgsl with MingW, I succeeded. I want to thank Olivier Andrieu =
and Ulrich Steinmetz for their support and to provide the necessary steps h=
ere (since some of them are not obvious at all):

First of all, it seems not to be possible to link ocamlgsl dynamically. So =
when compiling it, remove the line DYNAMIC_LINKING=3D... from the Makefile.

After this, I was able to compile the library and could even generate nativ=
e binaries of my programs which used it. However, whenever functions from G=
sl_rnd where called, I received lots of compile warnings, and in many cases=
 the compiled binaries were not working (crashing or doing nothing).

The solution was to link the gsl library _statically_ to my binaries. This =
could be done by adding the following arguments to ocamlopt: -ccopt -static=
. However, this links _every_ C library you use to your binary, and you may=
 end up in lots of "undefined reference" errors, since all libraries that a=
re required by your C libraries have to be linked as well, and you may have=
 to spend hours or days with resolving dependencies and receive a giant exe=
cutable.

To prevent this, I suggest not to use this global "static" flag but to link=
 _only_ the gsl library statically and all other libraries dynamically. For=
 this, one has to link gsl at the right position in the ocamlopt arguments.=
 Here is a way that is working:

ocamlopt (...other options...) -cclib -Wl,-lmlgsl,-dn,-lgsl,-dy,-lgslcblas =
(...)

Finally, one has to link the pthread library by

-cclib -lpthread

With these tricks I succeeded, and even Gsl_rng is working.

Best regards,

Tobias.

