Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA10333 for caml-redistribution@pauillac.inria.fr; Mon, 8 Mar 1999 09:00:36 +0100 (MET)
Resent-Message-Id: <199903080800.JAA10333@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA28996 for <caml-list@pauillac.inria.fr>; Sat, 6 Mar 1999 02:17:12 +0100 (MET)
Received: from pegasus.azstarnet.com (pegasus.azstarnet.com [169.197.56.194])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id CAA04703
	for <caml-list@inria.fr>; Sat, 6 Mar 1999 02:17:09 +0100 (MET)
Received: from dylan (dialup17ip055.tus.azstarnet.com [169.197.38.55])
	by pegasus.azstarnet.com (8.9.1a/8.9.1a) with SMTP id SAA12917
	for <caml-list@inria.fr>; Fri, 5 Mar 1999 18:16:52 -0700 (MST)
X-Sent-via: StarNet http://www.azstarnet.com/
Message-ID: <000b01be676f$375fd250$210148bf@dylan>
From: "David McClain" <dmcclain@azstarnet.com>
To: "Liste CAML" <caml-list@inria.fr>
Subject: Speedup from 2.01 to 2.02
Date: Fri, 5 Mar 1999 18:18:15 -0700
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 4.72.3110.5
X-MimeOLE: Produced By Microsoft MimeOLE V4.72.3110.3
Resent-From: weis@pauillac.inria.fr
Resent-Date: Mon, 8 Mar 1999 09:00:36 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

I have just recompiled my BlurFit routine under OcamlOpt 2.02. This version
is a completely new and far more sophisticated version than the one I
developed in December in only 3 days. However, its timing is still dominated
by large numeric array operations, and I would expect no increase in
performce for those inner tight loops.

The non-numeric overhead has been measured at 0.28 sec/iteration under
OCamlOpt 2.01 and 0.6 sec/iteration for the numeric operations.

Under OcamlOpt 2.02 the same program executes in 0.85 sec/iteration, for an
apparent speedup of roughly 10% in the non-numeric OCAML overhead code.

I think this is very good indeed. But I am posting this for the benefit of
the developers who may be interested in how their changes affect real-life
programs. I would be interested to hear from others regarding the speed
improvements.

David McClain
Sr. Scientist
Raytheon Missile Systems Co.
Tucson, AZ
http://www.azstarnet.com/~dmcclain/homepage.htm


