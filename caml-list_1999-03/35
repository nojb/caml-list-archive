Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA31249 for caml-redistribution; Mon, 8 Mar 1999 16:10:17 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA21979 for <caml-list@pauillac.inria.fr>; Mon, 8 Mar 1999 09:38:16 +0100 (MET)
Received: from talbot.inria.fr (talbot.inria.fr [128.93.8.119])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id JAA11452;
	Mon, 8 Mar 1999 09:38:13 +0100 (MET)
Received: (from lefessan@localhost)
	by talbot.inria.fr (8.8.7/8.8.7) id JAA14106;
	Fri, 5 Mar 1999 09:27:13 +0100
From: Fabrice Le Fessant <lefessan@talbot.inria.fr>
Message-ID: <14047.38235.411205.802057@talbot.inria.fr>
Date: Fri, 5 Mar 1999 09:27:07 +0100 (CET)
To: Hugh Sasse <hgs@dmu.ac.uk>
Cc: caml-list@inria.fr
Subject: Re: ocaml not native.
References: <Pine.GSU.4.04.9903041603210.26819-100000@helios.dmu.ac.uk>
X-Mailer: VM 6.62 under Emacs 19.34.1
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=iso-8859-1
Sender: weis



> ocamlopt builds successfully on my systems.  Is there a reason why
> the installation doesn't rebuild ocaml to be native code, when it can?
> Is there a good reason not to attempt this myself?

  This is a really interesting question. In fact, ocaml can't be
compiled in native code since it needs an interpreter to run the bytecode
it generates. However, the bytecode interpreter can't be integrated in
the native code system (for now ...).

  A few months ago, I wrote a Dynlink library which can be integrated
in native programs (now part of the Efuns package (see homepage)).
I think it would be very interesting if, instead of using its own
linker and interpreter, the toplevel could use the general Dynlink
system. Then, any program (bytecode or native) would be able to
integrate a toplevel evaluation loop for deeper interaction with the user.



- Fabrice

Homepage: http://pauillac.inria.fr/~lefessan



