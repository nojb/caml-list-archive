Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA09243 for caml-redistribution; Wed, 10 Mar 1999 10:20:45 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA15690 for <caml-list@pauillac.inria.fr>; Wed, 10 Mar 1999 09:15:30 +0100 (MET)
Received: from p-biset.issy.cnet.fr (p-biset.issy.cnet.fr [139.100.0.33])
	by nez-perce.inria.fr (8.8.7/8.8.7) with SMTP id JAA15916
	for <caml-list@inria.fr>; Wed, 10 Mar 1999 09:15:28 +0100 (MET)
Received: from l-mhs1.lannion.cnet.fr ([161.104.1.59]) by p-biset.issy.cnet.fr with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2232.9)
	id GGMKPWD3; Wed, 10 Mar 1999 09:11:41 +0100
Received: from lsun605.lannion.cnet.fr ([161.104.14.39]) by l-mhs1.lannion.cnet.fr with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2232.9)
	id ZNBGSX9W; Wed, 10 Mar 1999 09:19:47 +0100
Received: by lsun605.lannion.cnet.fr (SMI-8.6/SMI-SVR4)
	id JAA11939; Wed, 10 Mar 1999 09:15:27 +0100
Message-ID: <19990310091527.17113@lsun605>
Date: Wed, 10 Mar 1999 09:15:27 +0100
From: "Pierre CREGUT - FT.BD/CNET/DTL/MSV" <pierre.cregut@cnet.francetelecom.fr>
To: caml-list@inria.fr
Subject: controler la taille du tas
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Mailer: Mutt 0.88e
Sender: weis

Y a t'il un moyen (même détourné) pour imposer que la taille du tas d'un 
programme CAML ne passe jamais en dessous d'un certain seuil. 
Je veux que même si la mémoire est inutilisée, le GC ne la relache pas 
(sinon, une solution au problème est d'allouer un tableau global de la taille 
du seuil voulu, mais ca n'a pas grand intérêt).

Ce que je cherche a faire, c'est m'assurer que même si une autre application
(gloutonne) sature la mémoire, elle ne parviendra pas à empêcher le programme
CAML de fonctionner si je connais ses besoins en mémoire et si j'ai pris 
la précaution de lui allouer suffisemment d'espace.

Pierre Crégut

(En fait il manque un parametre dans le type Gc.control. Une solution
 est peut être de mettre major_heap_increment a la valeur du seuil, mais 
 c'est une solution brutale si l'estimation est fausse.)

===[translation]===

Is there a way (even a weird one) to enforce that the size of the heap of 
a Caml program will never shrink under a given threshold ? I want 
that the garbage collector takes all the memory allocated and 
does not release it even if it is unused.

I want to be sure that even if another program tries to control all the 
available memory, it will not manage to strangle my Caml application
if I know the worst memory requirements of the CAML program.


-- 
Pierre Cregut - pierre.cregut@cnet.francetelecom.fr - +33 2 96 05 16 28
FT.CNET - DTL/MSV - 2 avenue Pierre Marzin - 22307 Lannion Cedex - France



