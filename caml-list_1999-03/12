Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA18794 for caml-redistribution; Thu, 4 Mar 1999 19:57:20 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA03743 for <caml-list@pauillac.inria.fr>; Thu, 4 Mar 1999 17:33:59 +0100 (MET)
Received: from macondo.dmu.ac.uk (macondo.dmu.ac.uk [146.227.1.4])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id RAA29552
	for <caml-list@inria.fr>; Thu, 4 Mar 1999 17:33:57 +0100 (MET)
Received: from helios.dmu.ac.uk (hgs@helios.dmu.ac.uk [146.227.1.1])
	by macondo.dmu.ac.uk (8.8.8/8.8.8) with ESMTP id QAA18898
	for <caml-list@inria.fr>; Thu, 4 Mar 1999 16:42:41 GMT
Received: from localhost (hgs@localhost)
	by helios.dmu.ac.uk (8.9.1/8.9.1) with ESMTP id QAA00294
	for <caml-list@inria.fr>; Thu, 4 Mar 1999 16:31:11 GMT
X-Authentication-Warning: helios.dmu.ac.uk: hgs owned process doing -bs
Date: Thu, 4 Mar 1999 16:31:10 +0000 (GMT)
From: Hugh Sasse <hgs@dmu.ac.uk>
To: caml-list@inria.fr
Subject: ocaml not native.
Message-ID: <Pine.GSU.4.04.9903041603210.26819-100000@helios.dmu.ac.uk>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: weis

In htmlman/node9.html it says:

In script mode, the first line of the script is ignored if it starts with
#!. Thus, it is theoretically possible to
   make the script itself executable and put as first line
#!/usr/local/bin/ocaml, thus calling the
   toplevel system automatically when the script is run. However, ocaml
itself is a #! script on most
   installations of Objective Caml, and Unix kernels usually do not handle
nested #! scripts.

ocamlopt builds successfully on my systems.  Is there a reason why
the installation doesn't rebuild ocaml to be native code, when it can?
Is there a good reason not to attempt this myself?

(From/De http://babelfish.altavista.com/cgi-bin/translate? :

    Dans htmlman/node9.html il indique: 

      **time-out** dans sequence type mode, premier ligne
       sequence type ignorer si demarrer avec #!.
     ainsi, theorique possible pour faire sequence type
       soi-meme executable et mettre comme d'abord
     ligne #!/usr/local/bin/ocaml, ainsi appeler toplevel
       systeme automatique quand sequence type
     exicuter. Cependant, l'ocaml lui-mjme est a #! siquence
       type sur la plupart des installations de
     Caml objectif, et les grains d'Unix habituellement ne
       manipulent pas embonte #! des sequences type.

     constructions d'ocamlopt avec succes sur mes systemes.
      Y a-t-il une raison pour laquelle
    l'installation ne reconstruit pas l'ocaml pour etre
      code indigene, quand elle peut? Y a-t-il une
    bonne raison de ne pas essayer ceci moi-meme? 
)
 Desole, mon Pine ne supportera pas des accents. 

	Thank you/merci,
	Hugh
	hgs@dmu.ac.uk



