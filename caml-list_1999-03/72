Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA05125 for caml-redistribution; Fri, 12 Mar 1999 18:13:15 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA10672 for <caml-list@pauillac.inria.fr>; Fri, 12 Mar 1999 16:42:33 +0100 (MET)
Received: from talbot.inria.fr (talbot.inria.fr [128.93.8.119])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id QAA10613
	for <caml-list@inria.fr>; Fri, 12 Mar 1999 16:42:32 +0100 (MET)
Received: (from lefessan@localhost)
	by talbot.inria.fr (8.8.7/8.8.7) id QAA09109;
	Fri, 12 Mar 1999 16:42:29 +0100
From: Fabrice Le Fessant <fabrice.le_fessant@inria.fr>
Message-ID: <14057.13797.583838.363164@talbot.inria.fr>
Date: Fri, 12 Mar 1999 16:42:29 +0100 (CET)
To: caml-list@inria.fr
Subject: Contrib: toplevel for native code
X-Mailer: VM 6.62 under Emacs 19.34.1
Reply-To: fabrice.le_fessant@inria.fr
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=iso-8859-1
Sender: weis


I have integrated a new library "toplevel" in the Efuns package version 0.06.
This new library can be used in any bytecode or native program to
evaluate ocaml expressions (strings terminated with ;;) in the same
manner as with a toplevel.  Look at the interface in
toplevel/dyneval.mli. An example can be found  in gwml/main.ml
with a function that reads on stdin, looks for ";;",
sends the command to Dyneval.eval and prints the result (using
Utils.printexn (in common/) when it is an exception).

As a consequence, GwML has a new option -talk to
enable the user to enter ocaml expressions on stdin. For
example, you can enter "Stdconfig.auto_raise := false;;" on the
toplevel to suppress the auto-raise.

------------------------------------------------------------------------
Here is a list of other changes since version 005:

GwML:
=====
* New option -talk: Enter ocaml expressions on stdin to be evaluated by Gwml
   (like a toplevel) (* only if build with toplevel library  *)
* Virtual: The pager view is modified when windows are moved/resized/unmapped.
* Stdconfig: 
  - Placement policies can now be specified with add_placement.
  - Special placement policy "near_mouse" for several popup windows (Netscape,etc).
* Several bug fixed by Jerome Vouillon:
  - size_hints are now correctly read and updated.
  - window size updated on client demand.
  - no setInputFocus when destination window is not visible
  - XV bug partially fixed

Xlib:
=====
* XGraphics: Added new update styles (do not update the screen immediatly.
   Wait for explicit refresh request (either total, or clipped)) with
   two new functions XGraphics.set_update_style and XGraphics.update
   (look at demo/pacman.ml for an example)
* Xpm: new function "createMLStringFromPixmapData" to
  convert a pixmap data into a caml syntax string
  (to integrate Pixmaps in ocaml sources).
* Time bug (32 bits truncated to 31) fixed.
* New Demo files in efuns/demo:
   - "pacman" game (using the XGraphics module) from Sylvain Conchon.
   - "xpm2ml" to translate .xpm files to .ml files (directly usable with
       Xpm.createPixmapFromData).

-----------------------------------------------------------------------
Sources: 
  http://pauillac.inria.fr/para/cdrom/prog/unix/efuns/efuns-006.src.tar.gz

Efuns page:
  http://pauillac.inria.fr/para/cdrom/prog/unix/efuns



- Fabrice LE FESSANT

Homepage: http://pauillac.inria.fr/~lefessan



