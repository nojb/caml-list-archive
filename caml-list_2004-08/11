Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id FAA16112; Mon, 2 Aug 2004 05:11:22 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id FAA14374 for <caml-list@pauillac.inria.fr>; Mon, 2 Aug 2004 05:11:21 +0200 (MET DST)
Received: from outbound28-2.lax.untd.com (outbound28-2.lax.untd.com [64.136.28.160])
	by concorde.inria.fr (8.12.10/8.12.10) with SMTP id i723BJSH011847
	for <caml-list@inria.fr>; Mon, 2 Aug 2004 05:11:19 +0200
Received: from outbound28-2.lax.untd.com (smtp01.lax.untd.com [10.130.24.121])
	by smtpout04.lax.untd.com with SMTP id AABAS5NGMARAN5WS
	for <caml-list@inria.fr> (sender <vanevery@indiegamedesign.com>);
	Sun,  1 Aug 2004 20:11:07 -0700 (PDT)
Received: (qmail 28841 invoked from network); 2 Aug 2004 03:10:07 -0000
Received: from unknown (HELO vangogh) (66.42.36.193)
  by smtp01.lax.untd.com with SMTP; 2 Aug 2004 03:10:07 -0000
From: "Brandon J. Van Every" <vanevery@indiegamedesign.com>
To: "caml" <caml-list@inria.fr>
Subject: RE: [Caml-list] Wish List for Large Mutable Objects
Date: Sun, 1 Aug 2004 20:20:38 -0700
Message-ID: <OOEALCJCKEBJBIJHCNJDOEPNHFAB.vanevery@indiegamedesign.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.6604 (9.0.2911.0)
In-Reply-To: <002101c47839$c9c55bc0$0201a8c0@dylan>
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
Importance: Normal
X-ContentStamp: 16:8:4248931187
X-UNTD-OriginStamp: CI84cOLHFqh7Zd2QWkwvEFvwyO3T/pIsFsCrOjjLH86xTBlUBVl/XansXPhL/S/+
X-Miltered: at concorde with ID 410DB0D7.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; brandon:99 caml-list:01 mcclain:01 offsets:01 pointers:01 tweak:01 acquisitions:99 unboxed:01 caml-list:01 bayesian:01 crap:01 crap:01 unboxed:01 arrays:01 arrays:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

David McClain wrote:
>
> I have a perfectly good running VM as user process library
> running right now
> in C++ that allows for mixed array files, arbitrary offsets
> into the file
> for various array pointers, and this is all transparent to
> the user just as I indicated in my wish list for OCaml.

But it doesn't do scatter-gather DMA.  A user process only grants so
much control, and you seem to want an awful lot of control.  Hence my
suggestion that you tweak an OS.

> In more than 20 years of scientific data access and analysis
> I have only
> seen uniform arrays, one per file, generated by neophytes. In
> just about
> every case I can remember; NetCDF, HDF, FITS, RIF Wave Files,
> MPEG, etc., these are all compound object files.

Us neophytes call them 'file formats'.  They aren't arrays.  I think
we'll be at loggerheads until we agree what an 'array' is.

> The trouble with the simple minded
> approach of one array per file is that most data acquisitions
> will then end
> up with dozens of component data files and it becomes a
> tracking nightmare
> to keep them all coordinated. Not so if you permit compound
> document files.

What does this have to do with Bigarray?  Bigarray provides uniform
basic types in unboxed consecutive memory locations, ala C or Fortran.
That's the entire point, to communicate with arrays as C and Fortran do
them.  Why are you expecting it to be something exceedingly different?

> With a language as rich and wonderful as OCaml, I really
> can't understand your hostility

I haven't spoken with hostility.  I gather you're somewhat attached to
your problems, to view my comments as hostility.

> to useful additions to the language.

Clearly, you think your ideas are useful to you.  Whether others think
they're useful to them, remains to be seen.

> If you don't want to
> play, you don't have to join my sandbox -- find another.

You've lost me here.  Are you saying that if you hear feedback you don't
like, that those giving the feedback should leave caml-list or just be
quiet?


Cheers,                         www.indiegamedesign.com
Brand*n Van Every               S*attle, WA

Praise Be to the caml-list Bayesian filter! It blesseth
my postings, it is evil crap!  evil crap!  Bigarray!
Unboxed overhead group!  Wondering!  chant chant chant...


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

