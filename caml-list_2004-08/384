Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA24276; Wed, 25 Aug 2004 17:21:19 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA25578 for <caml-list@pauillac.inria.fr>; Wed, 25 Aug 2004 17:21:18 +0200 (MET DST)
Received: from mproxy.gmail.com (rproxy.gmail.com [64.233.170.205])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i7PFLIVH025116
	for <caml-list@inria.fr>; Wed, 25 Aug 2004 17:21:18 +0200
Received: by mproxy.gmail.com with SMTP id 73so96221rnk
        for <caml-list@inria.fr>; Wed, 25 Aug 2004 08:21:17 -0700 (PDT)
Received: by 10.38.72.72 with SMTP id u72mr1992211rna;
        Wed, 25 Aug 2004 08:21:17 -0700 (PDT)
Received: by 10.38.92.20 with HTTP; Wed, 25 Aug 2004 08:21:17 -0700 (PDT)
Message-ID: <4d029f7e0408250821401c9fb2@mail.gmail.com>
Date: Wed, 25 Aug 2004 11:21:17 -0400
From: Lars Nilsson <chamaeleon@gmail.com>
Reply-To: Lars Nilsson <chamaeleon@gmail.com>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Alternative Bytecodes for OCaml
In-Reply-To: <1093446345.15255.565.camel@pelican.wigram>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
References: <200408250926.28629.jgoerzen@complete.org> <1093446345.15255.565.camel@pelican.wigram>
X-Miltered: at nez-perce with ID 412CAE6E.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 bytecodes:01 2004:99 sourceforge:01 2004:99 python:01 python:01 interfacing:01 deployed:01 ocaml:01 ocaml:01 jvm:01 jvm:01 compile:02 wrote:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On 26 Aug 2004 01:05:45 +1000, skaller <skaller@users.sourceforge.net> wrote:
> On Thu, 2004-08-26 at 00:26, John Goerzen wrote:
> 
> > I come to OCaml from a Python background, and one of the most
> > interesting bits of technology for Python is Jython[1].
> 
> Curious though why you'd want to... interfacing to C
> I can understand. But why bother with the JVM or Java?

Gain [easy] access to Java libraries? Also, with Java possibly being
deployed more widely than Python (looking at users of software, not
developers). It might in some cases make sense to target the JVM
instead of requiring an installation of Python. This makes Scala[1] at
least mildly interesting if one wants to experiment with functional
programming and be able to deploy to a wide user-base. Some may also
be intrigued by compile once run everywhere (no need for anyone to
pick this statement to pieces).

Lars Nilsson

[1] http://scala.epfl.ch/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

