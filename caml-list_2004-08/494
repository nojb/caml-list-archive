Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA15693; Sun, 29 Aug 2004 14:09:51 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA17216 for <caml-list@pauillac.inria.fr>; Sun, 29 Aug 2004 14:09:50 +0200 (MET DST)
Received: from mail4.speakeasy.net (mail4.speakeasy.net [216.254.0.204])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i7TC9mfM013964
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Sun, 29 Aug 2004 14:09:50 +0200
Received: (qmail 31160 invoked from network); 29 Aug 2004 12:09:47 -0000
Received: from dsl081-145-152.chi1.dsl.speakeasy.net (HELO firebird) ([64.81.145.152])
          (envelope-sender <ayerkes@speakeasy.net>)
          by mail4.speakeasy.net (qmail-ldap-1.03) with SMTP
          for <caml-list@inria.fr>; 29 Aug 2004 12:09:46 -0000
Date: Sun, 29 Aug 2004 07:17:32 -0500
From: art yerkes <ayerkes@speakeasy.net>
To: caml-list@inria.fr
Subject: Re: [Caml-list] reading bytes into c-defined structs
Message-Id: <20040829071732.05eb6452.ayerkes@speakeasy.net>
In-Reply-To: <83f59968040828163251fb39f5@mail.gmail.com>
References: <d61254fb040828160030af52fd@mail.gmail.com>
	<83f59968040828163251fb39f5@mail.gmail.com>
X-Mailer: Sylpheed version 0.9.10 (GTK+ 1.2.10; i686-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4131C78C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; yerkes:01 ayerkes:01 caml-list:01 structs:01 swig:01 structs:01 closures:01 iterating:01 camlp:01 -like:01 speakeasy:01 preprocessor:02 bytes:02 objects:02 converts:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

SWIG converts C structs into object like closures automatically.  These
objects support introspection, so it's easy to do things like iterating
the fields and the like.

There's also a camlp4 preprocessor which supports C++-like access to
object members.
-- 
Hey, Adam Smith, keep your invisible hands to yourself!

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

