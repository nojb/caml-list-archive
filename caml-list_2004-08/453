Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA11158; Fri, 27 Aug 2004 22:40:11 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA11334 for <caml-list@pauillac.inria.fr>; Fri, 27 Aug 2004 22:40:10 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i7RKe5Gi023232
	for <caml-list@inria.fr>; Fri, 27 Aug 2004 22:40:08 +0200
Received: from [192.168.1.200] (ppp212-216.lns2.syd3.internode.on.net [203.122.212.216])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i7RKds4Y038670;
	Sat, 28 Aug 2004 06:09:55 +0930 (CST)
Subject: Re: [Caml-list] Alternative Bytecodes for OCaml
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: John Goerzen <jgoerzen@complete.org>
Cc: caml-list <caml-list@inria.fr>, Nicolas Cannasse <warplayer@free.fr>
In-Reply-To: <200408271349.25317.jgoerzen@complete.org>
References: <200408250926.28629.jgoerzen@complete.org>
	 <200408271255.43586.jgoerzen@complete.org>
	 <1093631836.15255.1424.camel@pelican.wigram>
	 <200408271349.25317.jgoerzen@complete.org>
Content-Type: text/plain
Message-Id: <1093639193.15255.1543.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 28 Aug 2004 06:39:54 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 412F9C25.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 bytecodes:01 sourceforge:01 2004:99 2004:99 higher-level:01 governing:99 posix:01 python:01 apis:01 9660:01 glebe:01 ocaml:01 ocaml:01 interfaces:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sat, 2004-08-28 at 04:49, John Goerzen wrote:
> On Friday 27 August 2004 01:37 pm, skaller wrote:
> > The way to get a library of important utilities
> > for Ocaml is to (a) make interfaces to C and (b) write the code
> > in Ocaml.
> 
> Why is C so much better?  It's actually pretty darn difficult to 
> interface to C from a higher-level language.

Two reasons. One: C is the portable interface
to almost all operating systems -- there are
ISO Standards governing compliance (both for C and Posix)
and interface specs from people like Microsoft.

Two: there are a lot of libraries written
in C with C interfaces, which are either
compliant with some standard or open source.

In particular most programming languages, 
such as Python, have C level APIs.

So binding to C does really have a particular importance.
Ocaml already has reasonable facilities to do it
(including documentation)

> And (b) is sometimes just NOT an option, either because of time 
> constraints or because you don't know what the original code does to 
> start with.

I agree. But an off-the-shelf guarranteed interface to
Java isn't currently available either. Where should you
put your energy?

> That's way too easy: JDBC.  (Not because OcamlDBI sucks but because so 
> many databases have JDBC available.)

Surely enhancing OcamlDBI is a viable option?

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

