Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA02743; Sat, 28 Aug 2004 11:50:38 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA00795 for <caml-list@pauillac.inria.fr>; Sat, 28 Aug 2004 11:50:37 +0200 (MET DST)
Received: from qrnik.knm.org.pl (paf87.warszawa.sdi.tpnet.pl [217.96.225.87])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i7S9oZAq001871
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@inria.fr>; Sat, 28 Aug 2004 11:50:36 +0200
Received: from qrnik ([192.168.0.1] ident=qrczak)
	by qrnik.knm.org.pl with esmtp (Exim 3.36 #1)
	id 1C0zr1-000854-00
	for caml-list@inria.fr; Sat, 28 Aug 2004 11:50:35 +0200
Subject: Re: [Caml-list] Alternative Bytecodes for OCaml
From: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>
To: caml-list <caml-list@inria.fr>
In-Reply-To: <1093685746.16212.21.camel@qrnik>
References: <200408250926.28629.jgoerzen@complete.org>
	 <200408271349.25317.jgoerzen@complete.org>
	 <1093639193.15255.1543.camel@pelican.wigram>
	 <200408271556.44476.jgoerzen@complete.org>
	 <1093652716.15255.1636.camel@pelican.wigram>
	 <1093685746.16212.21.camel@qrnik>
Content-Type: text/plain; charset=ISO-8859-2
Date: Sat, 28 Aug 2004 11:50:34 +0200
Message-Id: <1093686634.16212.24.camel@qrnik>
Mime-Version: 1.0
X-Mailer: Evolution 1.5.9.2 
Content-Transfer-Encoding: quoted-printable
X-Miltered: at concorde with ID 4130556B.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 bytecodes:01 marcin:01 'qrczak':01 kowalczyk:01 qrczak:01 marcin:01 'qrczak':01 kowalczyk:01 doable:01 generically:01 qrczak:01 ocaml:01 0200,:01 knm:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

W li=B6cie z sob, 28-08-2004, godz. 11:35 +0200, Marcin 'Qrczak' Kowalczyk
napisa=B3:

> Exceptions are also doable, in such a way that they are wrapped and
> unwrapped automatically.

I meant: except in C++, which doesn't provide a way to generically wrap
an exception of an unknown type in an object of a known representation.

--=20
   __("<         Marcin Kowalczyk
   \__/       qrczak@knm.org.pl
    ^^     http://qrnik.knm.org.pl/~qrczak/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

