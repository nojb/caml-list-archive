Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA16123; Fri, 13 Aug 2004 16:58:37 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA16465 for <caml-list@pauillac.inria.fr>; Fri, 13 Aug 2004 16:58:36 +0200 (MET DST)
Received: from petasus.isw.intel.com (petasus.isw.intel.com [192.55.37.196])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i7DEwYmL025660
	for <caml-list@inria.fr>; Fri, 13 Aug 2004 16:58:35 +0200
Received: from swsmsxvs01.isw.intel.com (swsmsxvs01.isw.intel.com [172.28.130.22])
	by petasus.isw.intel.com (8.12.9-20030918-01/8.12.9/d: small-solo.mc,v 1.9 2004/01/09 01:01:53 root Exp $) with SMTP id i7DEw8Nd001460;
	Fri, 13 Aug 2004 14:58:34 GMT
Received: from swsmsx331.ger.corp.intel.com ([172.28.130.50])
 by swsmsxvs01.isw.intel.com (SAVSMTP 3.1.2.35) with SMTP id M2004081315583014208
 ; Fri, 13 Aug 2004 15:58:32 +0100
Received: from swsmsx402.ger.corp.intel.com ([172.28.130.26]) by swsmsx331.ger.corp.intel.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Fri, 13 Aug 2004 15:58:31 +0100
X-MimeOLE: Produced By Microsoft Exchange V6.0.6487.1
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
Subject: RE: AW: [Caml-list] The tag bit
Date: Fri, 13 Aug 2004 15:58:30 +0100
Message-ID: <78B55F0E8771CC4B8F6995AB83AF655205113A32@swsmsx402.ger.corp.intel.com>
Thread-Topic: AW: [Caml-list] The tag bit
Thread-Index: AcSBQue39S6w5soVQEGP3YIO466TWQAAjv9Q
From: "Ennals, Robert" <robert.ennals@intel.com>
To: "T. Kurt Bond" <tkb@tkb.mpl.com>, <caml-list@inria.fr>
X-OriginalArrivalTime: 13 Aug 2004 14:58:31.0317 (UTC) FILETIME=[FF89E450:01C48145]
X-Miltered: at nez-perce with ID 411CD71A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 pointers:01 pointers:01 rubbish:01 owner-caml-:01 2004:99 rossberg:01 caml-list:01 rossberg:01 inherently:01 incompatible:01 compacting:01 generational:01 compacting:01 1989:99 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Do mostly copying collectors actually solve the problem Andreas was
discussing?

My impression was that mostly copying collectors are only really useful
when the vast majority of pointers are tagged. If all pointers into a
block are tagged, then the block is copied (just as it would be in a
copying collector); however if there are some ambiguous pointers into a
block (e.g. from within some C code you have linked to) then that block
is "pinned" into position, and must remain pinned until there are no
ambiguous pointers into it.

Thus, my impression was the mostly copying collection is great if one
has a language that uses tagged pointers, but wishes it to share GC-ed
objects with a language that doesn't understand tags, but that it
wouldn't really buy you anything in a situation where nothing was tagged
(which is what I think people were proposing).


Of course, I may be talking complete rubbish here - this isn't really my
field. Please feel free to tell me that I've completely misunderstood
everything.


-Rob

> -----Original Message-----
> From: owner-caml-list@pauillac.inria.fr [mailto:owner-caml-
> list@pauillac.inria.fr] On Behalf Of T. Kurt Bond
> Sent: 13 August 2004 15:33
> To: Andreas Rossberg
> Cc: caml-list@inria.fr
> Subject: Re: AW: [Caml-list] The tag bit
>=20
> Andreas Rossberg writes:
> > AFAIK, a conservative collector is not allowed to move anything.
Hence
> > it is inherently incompatible with compacting and generational GC,
like
> > used in OCaml (and highly desirable).
>=20
> Joel F. Bartlett's 1988 paper "Compacting garbage collection with
> ambiguous roots" describes a conservative "mostly copying" compacting
> GC scheme; his 1989 paper "Mostly-Copying Garbage Collection Picks Up
> Generations and C++" descibes a generation variation.  Frederick Smith
> and Greg Morrisett's 1997 paper "Mostly-Copying Collection: A Viable
> Alternative to Conservative Mark-Sweep" describes an improved variant
> that they compared with the BDW by using both with the TIL/C ML
> compiler.  Giuseppe Attardi, Tito Flagella, and Pietro Iglio describe
> a GC in their 1998 paper "A Customisable Memory Management Framework
> for C++" that uses mostly copying GC for the default heap.
>=20
> --
> T. Kurt Bond, tkb@tkb.mpl.com
>=20
> -------------------
> To unsubscribe, mail caml-list-request@inria.fr Archives:
> http://caml.inria.fr
> Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ:
> http://caml.inria.fr/FAQ/
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

