Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA19043; Fri, 13 Aug 2004 17:40:07 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA17430 for <caml-list@pauillac.inria.fr>; Fri, 13 Aug 2004 17:40:06 +0200 (MET DST)
Received: from asmtp-a063f35.pas.sa.earthlink.net (asmtp-a063f35.pas.sa.earthlink.net [207.217.120.220])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i7DFe5mL030317
	for <caml-list@inria.fr>; Fri, 13 Aug 2004 17:40:06 +0200
Received: from 65-103-213-184.tcsn.qwest.net ([65.103.213.184] helo=dylan)
	by asmtp-a063f35.pas.sa.earthlink.net with asmtp (Exim 4.34)
	id 1BveA0-0006ya-TN
	for caml-list@inria.fr; Fri, 13 Aug 2004 08:40:05 -0700
Message-ID: <005101c4814c$0445d700$0401000a@dylan>
From: "David McClain" <dmcclain1@mindspring.com>
To: "caml" <caml-list@inria.fr>
Subject: [Caml-list] CFG Parsers
Date: Fri, 13 Aug 2004 08:41:31 -0700
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1437
X-MIMEOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
X-ELNK-Trace: 7a0ab3eafc8cf994b22988ad1c62733440683398e744b8a488658d3f20c936f0c2cdce9e96c45e12387f7b89c61deb1d350badd9bab72f9c350badd9bab72f9c
X-Originating-IP: 65.103.213.184
X-Miltered: at nez-perce with ID 411CE0D5.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; mcclain:01 dmcclain:01 criticism:01 plea:01 mismatch:01 blind:99 spears:99 mcclain:01 compiler:01 ought:01 parser:02 backward:02 parsers:03 grammar:05 seems:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

With all due respect, it appears that I need to reframe my thinking about
these YACC parser builders and go backward in time by about 30-40 years. Now
that I'm getting the hang of what it is doing, it looks strongly reminiscent
of the style of programming we did back on old IBM 360's.

I do notice that YACC becomes very sensitive to slight perturbations in the
grammar. This is not meant as a criticism of YACC, but rather a plea for
some more modern thinking in compiler generators. Perhaps the GLC tool will
do better here.

The problem seems to be the impedance mismatch between the way humans are
led to think when viewing the "structured" YACC input clauses, and the more
or less blind way the computer is actually using that information. I see
that being a master of removing reduce/reduce conflicts seems to be a rite
of passage. But surely there has to be a better way to approach these kinds
of problems. Just because my ancestors used to hunt with spears doesn't mean
I still ought to do so.

David McClain
Senior Corporate Scientist
Avisere, Inc.

+1.520.390.7738 (USA)
david.mcclain@avisere.com



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

