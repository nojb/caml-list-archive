Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA21617; Tue, 3 Aug 2004 15:01:10 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA22415 for <caml-list@pauillac.inria.fr>; Tue, 3 Aug 2004 15:01:09 +0200 (MET DST)
Received: from psyche.kaba.or.jp (psyche.kaba.or.jp [202.249.19.1])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i73D17EV026652
	for <caml-list@inria.fr>; Tue, 3 Aug 2004 15:01:08 +0200
Received: from mail.kaba.or.jp (cascade.kaba.or.jp [202.249.19.34])
	by psyche.kaba.or.jp (Postfix) with ESMTP
	id 2EB6922A1E; Tue,  3 Aug 2004 22:01:06 +0900 (JST)
Received: from localhost (crossbill.kaba.or.jp [202.249.19.22])
	by mail.kaba.or.jp (Postfix) with ESMTP
	id F345749A6D; Tue,  3 Aug 2004 22:01:05 +0900 (JST)
Date: Tue, 03 Aug 2004 22:01:05 +0900 (JST)
Message-Id: <20040803.220105.74746445.keiko@kaba.or.jp>
To: rossberg@ps.uni-sb.de
Cc: caml-list@inria.fr, keiko@kaba.or.jp
Subject: Re: [Caml-list] using arguments insides functors
From: nakata keiko <keiko@kaba.or.jp>
In-Reply-To: <410F8852.30001@ps.uni-sb.de>
References: <20040803.205025.104127434.keiko@kaba.or.jp>
	<410F8852.30001@ps.uni-sb.de>
X-Mailer: Mew version 3.3 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 410F8C93.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 functors:01 elt:01 struct:01 functor:01 elt:01 sig:01 sig:01 modules:02 module:03 module:03 arguments:03 abstract:03 outer:04 mean:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> Because "include" only applies to modules that are structures, since it 
> is meant to copy its fields to the current scope. In your example 
> however, Elt has some abstract module type T, so it does not meet that 
> requirement. What should the include mean if you applied the outer F like
> 
>    F (struct module type T = functor (X : sig end) -> sig end end)
> 
> ? And how could you express the result type of F without knowing the 
> structure of Elt?
> 
> Cheers,
> 
> 	- Andreas
> 
Mm-hm, I see.
Thank you.

Keiko

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

