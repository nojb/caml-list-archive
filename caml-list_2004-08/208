Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA03848; Fri, 13 Aug 2004 10:52:39 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA03459 for <caml-list@pauillac.inria.fr>; Fri, 13 Aug 2004 10:52:38 +0200 (MET DST)
Received: from mail.mera.ru (ns.mera.ru [195.98.57.161])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i7D8qbmL019391
	for <caml-list@inria.fr>; Fri, 13 Aug 2004 10:52:37 +0200
Received: from drweb by mail.mera.ru with drweb-scanned (Exim 4.34; FreeBSD)
	id 1BvXnh-000OSH-7L
	for caml-list@inria.fr; Fri, 13 Aug 2004 12:52:37 +0400
Received: from mp5-sd6.merann.ru ([10.10.1.113])
	by mail.mera.ru with esmtp (Exim 4.34; FreeBSD)
	id 1BvXnh-000OSB-21
	for caml-list@inria.fr; Fri, 13 Aug 2004 12:52:37 +0400
Message-ID: <411C8154.9050402@kittown.com>
Date: Fri, 13 Aug 2004 12:52:36 +0400
From: Mikhail Fedotov <mikhail@kittown.com>
User-Agent: Mozilla Thunderbird 0.7 (Windows/20040616)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml <caml-list@inria.fr>
Subject: Re: [Caml-list] OCaml growing pains
References: <OOEALCJCKEBJBIJHCNJDEEGCHGAB.vanevery@indiegamedesign.com>
In-Reply-To: <OOEALCJCKEBJBIJHCNJDEEGCHGAB.vanevery@indiegamedesign.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 411C8155.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 brandon:99 langauge:01 fork:01 python:01 python:01 analogy:01 blind:99 newbies:01 curse:01 rusty:01 newbies:01 newbie:01 caml-list:01 bayesian:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Brandon J. Van Every wrote:

>Mikhail Fedotov wrote:
>  
>
>>Good points below, but it seems you are loosing a major one:
>>you *never* can promote/advance
>>the langauge while going *against* its authors. (You can fork if of
>>course, but then you'll be on your own.)
>>    
>>
>
>I doubt the historical evidence supports your claim.
>
Conflicts are always forcing good/competent people to go away - go away 
from the conference,
go away from the site. Lowering quality of discussions. If only I'd get 
a buck for each such evidence...

> <>For instance, I seem to recall people who have disagreed with Guido 
> Van Rossum
> about the direction Python should take, who just went off and did 
> stuff, and whose
> work is now considered important to the Python community. 

You are doing exactly that I've said before - express good point in the 
beginning but going
in the wrong direction. I doubt  there is an analogy to the case with 
python (can not say for sure until
checked it myself), except when you are talking about technical details. 
And when you are talking
about those details, you are talking about something that do not know 
well with people who wrote
it and know from the top to the bottom.

>Authority figures *could* provide organizational resources
>

They simply might not have them.

>>In addition, when all feedback from major players that you
>>are receiving is negative, it means
>>that you are going in the wrong direction and for some reason fail to
>>change it into the right one.
>>    
>>
>
>I don't think so.
>

Symptoms match. The key method to find the blind spot is to formulate 
verifiable criteria
to ensure the correctness of your own statements and if the choice of 
topics to discuss is right.
The same about the desision to start the discussion at all.

As I've said, I've lost a lot of time on discussions like yours. 
Patterns are very clear and common.

>biz-focused mailing lists are indeed better for the growth discussions.
>I'm just not ready to start such a list yet.
>
I can not imagine its audience. Web pages with success stories and 
remarks about problems
solved should do the trick, and success stories are already there.

>I was ready to start an OCaml Games mailing list, so I did so.
>
Is there much of professional game developers, and they really want to 
share their
*confidential* technology ? I doubt it will be ever anything other than 
newbies list.

>I was ready to start ML S*attle, so I did so.
>
But even with starting it you've managed to bump into spam filter. :)

That's the curse I've been talking about - without good criterias to
verify that you are going in the right direction,  you are loosing
ability not to bump into things when you are finally trying to start
something, things that most normal people do not bump into.
Game list has questionable audience,  meeeting announce
bumps into the filter, your concerns about language features
bump into the luck of your experience with the language, and
you've even managed to go into conflict with Xavier when
he is not in position to address your questions in the manner
they are asked (i.e. completely wrong person for conflict,
such conflict is as pointles as it can be).

>>The most obvious is http://www.ocaml.org - it does not seem to be
>>maintened anymore ( no mention
>>of 3.08 release), so *maybe* you have the chance to become the
>>maintainer if you ask the
>>right people.  Then you'll be able to show that you can do. :)
>>    
>>
>
>You put a smiley, so maybe you don't mean this so seriously.
>

I just believe that you are spending so much time in those duscissions 
that you've
become so *rusty* that a lot of *newbies* can compete with you in any 
good thing
you might want to do, even if you are not a newbie yourself. There is 
one hell of
symptoms in your messages.

It is like being on a drug.

>Praise Be to the caml-list Bayesian filter! It blesseth
>my postings, it is evil crap!  evil crap!  Bigarray!
>Unboxed overhead group!  Wondering!  chant chant chant...
>
>// return an array of 100 packed tuples
>temps
>  int $[tvar0][2*100]; // what the c function needs
>  value $[tvar1]; // one int
>  value $[tvar2]; // one tuple
>  int $[tvar3] // loop control var
>oncePre
>eachPre
>  $[cvar0]=&($[tvar0][0]);
>eachPost
>  $[lvar0] = alloc(2*100, 0 /*NB: zero-tagged block*/ );
>  for(int $[tvar3]=0;$[tvar3]<100;$[tvar3]++) {
>    $[tvar2] = alloc_tuple(2);
>    $[tvar1] = Val_int($[cvar0][0+2*$[tvar3]]);
>    Store_field($[tvar2],0,$[tvar1]);
>    $[tvar1] = Val_int($[cvar0][1]);
>    Store_field($[tvar2],1,$[tvar1+2*$[tvar3]]);
>    Array_store($[lvar0],$[tvar3],$[tvar0]);
>  }
>oncePost
>  
>

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

