Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id BAA17115; Sat, 28 Aug 2004 01:38:43 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA18040 for <caml-list@pauillac.inria.fr>; Sat, 28 Aug 2004 01:38:42 +0200 (MET DST)
Received: from smtp.mbg.ocn.ne.jp (mbg.ocn.ne.jp [210.190.142.181])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i7RNcfhO003749
	for <caml-list@inria.fr>; Sat, 28 Aug 2004 01:38:42 +0200
Received: from localhost (p2126-adsau07doujib4-acca.osaka.ocn.ne.jp [220.106.229.126])
	by smtp.mbg.ocn.ne.jp (Postfix) with ESMTP
	id 72DBF7047; Sat, 28 Aug 2004 08:38:40 +0900 (JST)
Date: Sat, 28 Aug 2004 08:38:35 +0900 (JST)
Message-Id: <20040828.083835.21913928.yoriyuki@mbg.ocn.ne.jp>
To: rich@annexia.org
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Alternative Bytecodes for OCaml
From: Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp>
In-Reply-To: <20040827221801.GB1545@annexia.org>
References: <004f01c48c19$9950d8e0$0100a8c0@warp>
	<412F9059.2080808@orcaware.com>
	<20040827221801.GB1545@annexia.org>
X-Mailer: Mew version 3.3 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 412FC601.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 bytecodes:01 yamagata:01 yoriyuki:01 yoriyuki:01 caml-list:01 bytecodes:01 2004:99 faq:01 pdd:99 pdd:99 yamagata:01 compiler:01 ocaml:01 ocaml:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Richard Jones <rich@annexia.org>
Subject: Re: [Caml-list] Alternative Bytecodes for OCaml
Date: Fri, 27 Aug 2004 23:18:01 +0100

> More about Parrot & garbage collection,
> although I'm still not sure if Parrot will do "proper" GC, or use
> reference counting:

I only have looked documents in http://www.parrotcode.org, but they
indicates it will not use ref-counting.

"You're not using reference counting. Why not?" in
http://www.parrotcode.org/faq/

The doc is somewhat vague, but Parrot seems to use conservative
mark&sweep GC.  http://www.parrotcode.org/docs/pdd/pdd09_gc.html

There are a lot of people in academia in this list.  Maybe
OCaml->Parrot compiler is a good project for undergraduates?

--
Yamagata Yoriyuki

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

