Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA21117; Wed, 4 Aug 2004 20:01:08 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA20499 for <caml-list@pauillac.inria.fr>; Wed, 4 Aug 2004 20:01:07 +0200 (MET DST)
Received: from mproxy.gmail.com (rproxy.gmail.com [64.233.170.196])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i74I15RM002128
	for <caml-list@pauillac.inria.fr>; Wed, 4 Aug 2004 20:01:06 +0200
Received: by mproxy.gmail.com with SMTP id 75so191501rnl
        for <caml-list@pauillac.inria.fr>; Wed, 04 Aug 2004 11:01:05 -0700 (PDT)
Received: by 10.38.59.33 with SMTP id h33mr16351rna;
        Wed, 04 Aug 2004 11:01:05 -0700 (PDT)
Message-ID: <d849ad2a040804110123475503@mail.gmail.com>
Date: Wed, 4 Aug 2004 14:01:05 -0400
From: John Prevost <j.prevost@gmail.com>
To: caml-list@pauillac.inria.fr
Subject: Re: [Caml-list] Conditional Modules
In-Reply-To: <252D4C5C-E63B-11D8-B25A-000A958FF2FE@wetware.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
References: <CB81EC67-E626-11D8-97DB-000A95C61840@comlab.ox.ac.uk> <252D4C5C-E63B-11D8-B25A-000A958FF2FE@wetware.com>
X-Miltered: at concorde with ID 41112461.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; prevost:01 prevost:01 caml-list:01 2004:99 woodyatt:01 jhw:01 wetware:01 val:01 val:01 0700,:01 sig:01 sig:01 modules:02 objects:02 module:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 4 Aug 2004 10:24:30 -0700, james woodyatt <jhw@wetware.com> wrote:
> This is one of those cases where using classes and objects is the right
> way to go.
> 
>         class type c = object ... end
>         class c1 : c
>         class c2 : c
> 
>         module M: sig val c: c end
>         module A(sig val c: c end): sig ... end

Maybe, maybe not.  This creates a different set of issues--like not
being able to define a type as a member of a class.  It all depends on
what you want to do.

John.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

