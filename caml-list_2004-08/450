Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA05952; Fri, 27 Aug 2004 20:37:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA06556 for <caml-list@pauillac.inria.fr>; Fri, 27 Aug 2004 20:37:32 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i7RIbUQm005728
	for <caml-list@inria.fr>; Fri, 27 Aug 2004 20:37:31 +0200
Received: from [192.168.1.200] (ppp212-216.lns2.syd3.internode.on.net [203.122.212.216])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i7RIbH4Y015310;
	Sat, 28 Aug 2004 04:07:17 +0930 (CST)
Subject: Re: [Caml-list] Alternative Bytecodes for OCaml
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: John Goerzen <jgoerzen@complete.org>
Cc: caml-list <caml-list@inria.fr>, Nicolas Cannasse <warplayer@free.fr>
In-Reply-To: <200408271255.43586.jgoerzen@complete.org>
References: <200408250926.28629.jgoerzen@complete.org>
	 <003701c48ab9$e324f750$0100a8c0@warp>
	 <200408271255.43586.jgoerzen@complete.org>
Content-Type: text/plain
Message-Id: <1093631836.15255.1424.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 28 Aug 2004 04:37:16 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 412F7F6A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 bytecodes:01 sourceforge:01 2004:99 python:01 9660:01 glebe:01 ocaml:01 ocaml:01 interfaces:01 nsw:01 snail:02 fewer:02 modules:02 modules:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sat, 2004-08-28 at 03:55, John Goerzen wrote:

> One of the classic, common, and often still valid arguments against 
> functional languages is that there are far fewer modules available for 
> them than for a l
> anguage like Perl, Python, or Java.  I'm talking about text-processing, 
> network interaction, etc.  

The way to get a library of important utilities
for Ocaml is to (a) make interfaces to C and (b) write the code
in Ocaml.

The main argument for interoperability isn't to get commonly
available modules from other languages -- its to get access
to *custom* code written for other systems.

Apart from Swing .. well what common Java library
would be remotely interesting in Ocaml?

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

