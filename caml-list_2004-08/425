Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA32254; Thu, 26 Aug 2004 23:15:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA00093 for <caml-list@pauillac.inria.fr>; Thu, 26 Aug 2004 23:15:32 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i7QLFUOx011470
	for <caml-list@inria.fr>; Thu, 26 Aug 2004 23:15:31 +0200
Received: from [192.168.1.200] (ppp212-216.lns2.syd3.internode.on.net [203.122.212.216])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i7QLFHHY005797;
	Fri, 27 Aug 2004 06:45:18 +0930 (CST)
Subject: Re: [Caml-list] Re: bytecode and native code at once
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Paul Snively <psnively@mac.com>
Cc: mikel <mikel@evins.net>, caml-list <caml-list@inria.fr>
In-Reply-To: <A1073C78-F782-11D8-95A4-000A27DEEC20@mac.com>
References: <OOEALCJCKEBJBIJHCNJDOEBLHHAB.vanevery@indiegamedesign.com>
	 <1093514139.15255.692.camel@pelican.wigram> <cgl10m$oav$1@sea.gmane.org>
	 <A1073C78-F782-11D8-95A4-000A27DEEC20@mac.com>
Content-Type: text/plain
Message-Id: <1093554916.15255.908.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 27 Aug 2004 07:15:17 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 412E52F2.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 asmdynlink:01 dynlink:01 fallback:01 metaocaml:01 metaocaml:01 ideally:01 acceptor:01 acceptor:01 sparse:01 sparse:01 optimise:01 orderings:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 2004-08-27 at 03:09, Paul Snively wrote:

> Is there some reason that asmdynlink, which is part of the Caml 
> Development Kit, doesn't address this?

Its not part of the standard system, requires a patch,
isn't maintained so probably won't work with 1.08:
I also don't know if it's processor specific. 

Its big advantage was compatibility with the bytecode
Dynlink mechanism, which allowed one to fallback to
all-bytecode.

> I also think that once MetaOCaml gets its native compiler done that it 
> will help answer the question as well, among others. I find MetaOCaml 
> very exciting!

Hmm .. I suspect MetaOcaml has the following problem.
Ideally what we need is a functional method of taking
some parameterised program and sending it arbitrary
constraints, which it then uses to specialise itself,
or verify consistency.

Meta-Ocaml requires you to predict in advance what
the next constraint will be, and write an acceptor
for it which generates an acceptor for the next constraint.

EG: you'd like to say 'do X with a linear operator' and then
tell it:

1) dimensions, diagonal, sparse, values
2) sparse, dimensions, diagonal, values

and have the program optimise itself with both orderings.
MetaOcaml seems to let you do (1), or (2), but not
both with the same program?

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

