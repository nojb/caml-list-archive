Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA10372; Thu, 26 Aug 2004 00:11:22 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA11847 for <caml-list@pauillac.inria.fr>; Thu, 26 Aug 2004 00:11:21 +0200 (MET DST)
Received: from smtp.mbg.ocn.ne.jp (mbg.ocn.ne.jp [210.190.142.181])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i7PMBKPj004097
	for <caml-list@inria.fr>; Thu, 26 Aug 2004 00:11:21 +0200
Received: from localhost (p42178-adsau08doujib4-acca.osaka.ocn.ne.jp [222.145.242.178])
	by smtp.mbg.ocn.ne.jp (Postfix) with ESMTP
	id 0B261728C; Thu, 26 Aug 2004 07:11:18 +0900 (JST)
Date: Thu, 26 Aug 2004 07:10:59 +0900 (JST)
Message-Id: <20040826.071059.48814499.yoriyuki@mbg.ocn.ne.jp>
To: jgoerzen@complete.org
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Alternative Bytecodes for OCaml
From: Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp>
In-Reply-To: <200408250926.28629.jgoerzen@complete.org>
References: <200408250926.28629.jgoerzen@complete.org>
X-Mailer: Mew version 3.3 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 412D0E88.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 bytecodes:01 yamagata:01 yoriyuki:01 yoriyuki:01 caml-list:01 bytecodes:01 2004:99 200102:01 yamagata:01 ocaml:01 ocaml:01 caml:01 jvm:01 bytecode:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: John Goerzen <jgoerzen@complete.org>
Subject: [Caml-list] Alternative Bytecodes for OCaml
Date: Wed, 25 Aug 2004 09:26:28 -0500

> So one of the things I've been thinking about lately is integrating 
> OCaml with either Java or the .NET CLI in a manner similar to Jython.  
> I've done some googling on the topic and it seems nobody is working on 
> this yet.  I just wanted to check and see if that's true.

The conclusion of the F#, and several SML-to-Java bytecode projects is
that JVM and .NET are too restricted to OO paradigm, I remember. 
See the thread begins http://caml.inria.fr/archives/200102/msg00048.html

On the other hand, Perl6's Parrot seems not restricted to OO, so it
would be promising.  Does anyone tried Parrot?

--
Yamagata Yoriyuki

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

