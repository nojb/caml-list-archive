Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA27169; Fri, 27 Aug 2004 15:36:31 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA26948 for <caml-list@pauillac.inria.fr>; Fri, 27 Aug 2004 15:36:29 +0200 (MET DST)
Received: from herd.plethora.net (herd.plethora.net [205.166.146.1])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i7RDaQsv012409
	for <caml-list@inria.fr>; Fri, 27 Aug 2004 15:36:27 +0200
Received: from bhurt.plethora.net (bhurt.plethora.net [205.166.146.49])
	by herd.plethora.net (8.11.6/8.10.1) with ESMTP id i7RDZtB20861;
	Fri, 27 Aug 2004 08:35:55 -0500 (CDT)
Date: Fri, 27 Aug 2004 08:44:38 -0500 (CDT)
From: Brian Hurt <bhurt@spnz.org>
X-X-Sender: bhurt@localhost.localdomain
To: John Goerzen <jgoerzen@complete.org>
cc: Nicolas Cannasse <warplayer@free.fr>,
        Michal Moskal <malekith@pld-linux.org>, <caml-list@inria.fr>
Subject: Re: [Caml-list] Alternative Bytecodes for OCaml
In-Reply-To: <200408270809.28272.jgoerzen@complete.org>
Message-ID: <Pine.LNX.4.44.0408270840330.5809-100000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Miltered: at nez-perce with ID 412F38DA.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 bytecodes:01 prey:99 python:01 python:01 advocating:01 ocaml:01 ocaml:01 compile:02 native:02 native:02 wrote:03 productivity:03 arguments:03 redirect:95 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 27 Aug 2004, John Goerzen wrote:

> No arguments here, but I would like to expand a but on the performance 
> issue.  I have every reason to believe you are right about it, but one 
> important thing to remember is that it may not matter to many.  In 
> other words, let's not fall prey to premature optimization.
> 
> In my experience, my OCaml code is three to five times faster than my 
> Python code.  Yet my Python code is still perfectly usable and I'm fine 
> with its speed.
> 
> While there are plenty of places where every last bit of performance is 
> vital, there are also plenty of places (I dare say even more) where 
> it's simply not an important consideration, and things like developer 
> productivity, bug-free code, or ease of distribution really shine.
> 

Bravo.  Especially consider I don't think anyone is advocating Ocaml give 
up it's native compilation abilities.  If speed really is important, 
compile to native.

-- 
"Usenet is like a herd of performing elephants with diarrhea -- massive,
difficult to redirect, awe-inspiring, entertaining, and a source of
mind-boggling amounts of excrement when you least expect it."
                                - Gene Spafford 
Brian

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

