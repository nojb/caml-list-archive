Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA07973; Mon, 2 Aug 2004 17:35:08 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA08950 for <caml-list@pauillac.inria.fr>; Mon, 2 Aug 2004 17:35:07 +0200 (MET DST)
Received: from narury.org ([193.65.56.227])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i72FZ6EV027415
	for <caml-list@inria.fr>; Mon, 2 Aug 2004 17:35:06 +0200
Received: (from xm@localhost)
	by narury.org (8.11.6/8.9.3) id i72FYj626750
	for caml-list@inria.fr; Mon, 2 Aug 2004 18:34:45 +0300
Date: Mon, 2 Aug 2004 18:34:45 +0300
From: Jere Sanisalo <xm@xmunkki.org>
To: OCaml <caml-list@inria.fr>
Subject: Re: [Caml-list] "noalloc" + enter/leave blocking section - safe?
Message-ID: <20040802183445.A25192@xmunkki.org>
Reply-To: xm@xmunkki.org
References: <20040802104349.GA6997@fichte.ai.univie.ac.at> <20040802151502.GA10950@fichte.ai.univie.ac.at>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5.1i
In-Reply-To: <20040802151502.GA10950@fichte.ai.univie.ac.at>; from markus@oefai.at on Mon, Aug 02, 2004 at 05:15:02PM +0200
X-Miltered: at nez-perce with ID 410E5F2A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 noalloc:01 2004:99 foo:01 foo:01 stub:01 noalloc:01 ocaml:01 blocking:01 0200,:01 mottl:02 native:02 external:03 unit:03 directive:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, Aug 02, 2004 at 05:15:02PM +0200, Markus Mottl wrote:
>---------------------------------------------------------------------------
>external foo : 'a -> unit = "foo_stub" "noalloc"

Hmm, I wasn't aware that there was a "noalloc" directive. What does it
specifically declare? Does it make ocaml call the natives in a more
efficient manner (and of course the function must not allocate anything)?
Are there any other directives I should be aware of?

And according to the documents the "noalloc" should really be the name of
the native function? Am I really missing something here?

-- 
Jere Sanisalo [xm@xmunkki.org] - http://www.xmunkki.org/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

