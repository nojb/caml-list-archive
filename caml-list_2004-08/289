Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA27917; Mon, 16 Aug 2004 23:26:25 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA25983 for <caml-list@pauillac.inria.fr>; Mon, 16 Aug 2004 23:26:24 +0200 (MET DST)
Received: from mail.libertysurf.net (mail.libertysurf.net [213.36.80.91])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i7GLQNmL003681
	for <caml-list@inria.fr>; Mon, 16 Aug 2004 23:26:23 +0200
Received: from [83.154.87.208] (83.154.87.208) by mail.libertysurf.net (6.5.036)
        id 411EEE69003E999A; Mon, 16 Aug 2004 23:26:23 +0200
Message-ID: <41212700.9070004@libertysurf.fr>
Date: Mon, 16 Aug 2004 23:28:32 +0200
From: Matthieu Dubuget <matthieu.dubuget@libertysurf.fr>
Reply-To: matthieu.dubuget@libertysurf.fr
User-Agent: Mozilla Thunderbird 0.7.3 (X11/20040805)
X-Accept-Language: fr-fr, fr, en-us
MIME-Version: 1.0
To: caml list <caml-list@inria.fr>
CC: Shishir Ramam <sramam@gmail.com>
Subject: Re: [Caml-list] CamlIdl possible issue
References: <83f5996804081612462c7d239b@mail.gmail.com>
In-Reply-To: <83f5996804081612462c7d239b@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: quoted-printable
X-Miltered: at nez-perce with ID 4121267F.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; matthieu:01 dubuget:01 matthieu:01 dubuget:01 caml-list:01 bug:01 ecrit:01 ocaml:01 camlidl:01 imho:01 explanation:04 wondering:04 functions:05 seems:05 seems:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Shishir Ramam a =E9crit :
> It seems that the special casing of the single element is not the best =
of
> things for my application, since any reference to the element x will ha=
ve to be
> modified in the Ocaml program depending on whether SOME_VAR is defined =
or not.=20
>=20
> IMHO this seems like a bug. Was wondering if there is some other explan=
ation=20
> for this.

According to the documentation, this is a design choice.

>=20
> Thanks in advance for any help.

If this problem appears not two often you can avoid it by adding your=20
own ml2c and c2ml functions using the attributes ml2c and c2ml.

I hope this helps.

Salutations

Matthieu Dubuget

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

