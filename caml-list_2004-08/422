Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA22519; Thu, 26 Aug 2004 19:31:17 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA23545 for <caml-list@pauillac.inria.fr>; Thu, 26 Aug 2004 19:31:16 +0200 (MET DST)
Received: from postfix.evins.net (adsl-63-203-37-41.dsl.snfc21.pacbell.net [63.203.37.41])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i7QHVFV7027720
	for <caml-list@inria.fr>; Thu, 26 Aug 2004 19:31:15 +0200
Received: from [127.0.0.1] (localhost [127.0.0.1])
	by postfix.evins.net (Postfix) with ESMTP
	id 134F035EE0E; Thu, 26 Aug 2004 10:31:13 -0700 (PDT)
In-Reply-To: <A1073C78-F782-11D8-95A4-000A27DEEC20@mac.com>
References: <OOEALCJCKEBJBIJHCNJDOEBLHHAB.vanevery@indiegamedesign.com> <1093514139.15255.692.camel@pelican.wigram> <cgl10m$oav$1@sea.gmane.org> <A1073C78-F782-11D8-95A4-000A27DEEC20@mac.com>
Mime-Version: 1.0 (Apple Message framework v619)
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <B9B58E08-F785-11D8-A069-000A958E5B06@evins.net>
Content-Transfer-Encoding: 7bit
Cc: mikel evins <mikel@evins.net>, caml-list@inria.fr
From: mikel evins <mikel@evins.net>
Subject: Re: [Caml-list] Re: bytecode and native code at once
Date: Thu, 26 Aug 2004 10:31:12 -0700
To: Paul Snively <psnively@mac.com>
X-Mailer: Apple Mail (2.619)
X-Miltered: at concorde with ID 412E1E63.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 hash:01 doable:01 coexist:01 runtime:01 closures:01 asmdynlink:01 metaocaml:01 metaocaml:01 compiler:01 compiler:01 ocaml:01 ocaml:01 caml:01 bytecode:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


On Aug 26, 2004, at 10:09 AM, Paul Snively wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Hi Mikel!

Hiya, Paul! What are you up to? (Interesting to see your name floating 
around the Ocaml lists).

>
> On Aug 26, 2004, at 8:52 AM, mikel wrote:
>
>> It's doable in principle. For example, the old MacScheme compiler 
>> used parameters to tune compilation on a per-function basis; low 
>> optimization settings resulted in generation of bytecode; high 
>> optimization settings resulted in generation of native code. Both 
>> types of function could coexist in the same runtime, with the 
>> different kinds of closures represented by different appliable types.
>>
>> I don't know what implications such a scheme might have for type 
>> safety in Ocaml.
>>
> Is there some reason that asmdynlink, which is part of the Caml 
> Development Kit, doesn't address this?

I don't know. All I was saying is that I knew nothing about it, because 
I had devoted no attention to the issue.

>
> I also think that once MetaOCaml gets its native compiler done that it 
> will help answer the question as well, among others. I find MetaOCaml 
> very exciting!

Yeah, I heard the same thing from Adam Megacz. I suppose I oughta check 
it out.

--me

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

