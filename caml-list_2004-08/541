Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA23607; Tue, 31 Aug 2004 21:20:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA24394 for <caml-list@pauillac.inria.fr>; Tue, 31 Aug 2004 21:20:33 +0200 (MET DST)
Received: from outbound28-2.lax.untd.com (outbound28-2.lax.untd.com [64.136.28.160])
	by nez-perce.inria.fr (8.13.0/8.13.0) with SMTP id i7VJKWNh028683
	for <caml-list@inria.fr>; Tue, 31 Aug 2004 21:20:33 +0200
Received: from outbound28-2.lax.untd.com (smtp04.lax.untd.com [10.130.24.124])
	by smtpout04.lax.untd.com with SMTP id AABAVKV5FA3X7SQA
	for <caml-list@inria.fr> (sender <vanevery@indiegamedesign.com>);
	Tue, 31 Aug 2004 12:20:05 -0700 (PDT)
Received: (qmail 25438 invoked from network); 31 Aug 2004 19:19:58 -0000
Received: from unknown (HELO vangogh) (66.52.250.185)
  by smtp04.lax.untd.com with SMTP; 31 Aug 2004 19:19:58 -0000
From: "Brandon J. Van Every" <vanevery@indiegamedesign.com>
To: "caml" <caml-list@inria.fr>
Subject: RE: [Caml-list] Cross-compiling OCaml
Date: Tue, 31 Aug 2004 12:30:54 -0700
Message-ID: <OOEALCJCKEBJBIJHCNJDKEHGHHAB.vanevery@indiegamedesign.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.6604 (9.0.2911.0)
In-Reply-To: <200408310841.18106.jgoerzen@complete.org>
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
Importance: Normal
X-ContentStamp: 17:8:2013388714
X-MAIL-INFO: 5dc7ce5f1e7a9bb37b570e6e0a57ee67072fbf7b2abf7f1b8f8f7f471f434e2f2ebf4edebebbe383bacbfb33e32ebb6a9fafefeaaf37cff7f73777d3abaa9fdbafaa6e6b93defa9ab3dac3dedb93474f1773ee8f8f4ebf1f4b4ea74b5a4b3be3873beb0b5f7a7a0b8eb3fee76e47ebe7bb2ef7f7aaafd31aaadf1a4a1a3adeca
X-UNTD-OriginStamp: CI84cOLHFqh7Zd2QWkwvEFvwyO3T/pIsFsCrOjjLH84ARY9od+cAqFUKe3n3Gamu
X-Miltered: at nez-perce with ID 4134CF80.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; brandon:99 caml-list:01 brandon:99 objecting:01 binaries:01 ocamlopt:01 persist:01 stupid:01 doomed:01 python:01 bourne:01 ocaml's:01 python:01 seamlessly:01 wiki:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

John Goerzen wrote:
> Brandon J. Van Every wrote:
> >
> > I'm just objecting to the statement that Linux cross-compilation
> > support [for Windows] "would indeed be a great great additional
> > functionality."
>
> Well, let's look at that, because I believe you are missing the point.
>
> Who ever said that cross-compilation support would only
> involve running
> a compiler on x86 Linux to target x86 Windows?

Ken Rose originally said:
>
> Is there any support for cross-compilation of OCaml?  In
> particular, I'd
> like to build Windows binaries on my x86 Linux box, preferrably with
> ocamlopt.

If you want to make other points about other kinds of cross-compilation,
that's great, but it doesn't mean I'm "missing the point."  We've been
talking about the utility of cross-compilation from Linux to Windows.

> > I think the reason you should care is because Windows is a big
> > platform with a lot of users.  If you want to see the use of OCaml
>
> Why should that make us care?  Why must you persist in measuring the
> success or failure of everything on pure user count?  I would
> say that
> is a pretty damn poor way to measure success, if not a completely
> stupid one.

So you want the future of OCaml to look like the present of Lisp then?
Those who don't study history are doomed to repeat it.

> In that case, please explain the popularity of Perl, Python,
> sed, awk,
> Tcl, and Bourne shell.  All of which have had for a long time, or
> continue to have, roughly the same level of support for Windows as
> OCaml does.  Or less.

I don't agree with your characterization of OCaml's Windows support as
being "equal to" these other languages.  Python, in particular, can be
pretty seamlessly cross-platform.  At any rate, feel free to hop over to
http://wiki.cocan.org/ocaml_alliance, skip down to the "Shallower
learning-curve for Windows" section, and start enlightening us.

> I think that offering a simple tarball with the source is just fine.

I'd try to explain the importance of source control, multiple
contributors, active mailing lists, site indexing, explanatory webpages,
a user base, etc., but I did that already, so this is sounding like a
lost cause.


Cheers,                         www.indiegamedesign.com
Brand*n Van Every               S*attle, WA

Praise Be to the caml-list Bayesian filter! It blesseth
my postings, it is evil crap!  evil crap!  Bigarray!
Unboxed overhead group!  Wondering!  chant chant chant...

Is my technical content showing?

// return an array of 100 packed tuples
temps
  int $[tvar0][2*100]; // what the c function needs
  value $[tvar1]; // one int
  value $[tvar2]; // one tuple
  int $[tvar3] // loop control var
oncePre
eachPre
  $[cvar0]=&($[tvar0][0]);
eachPost
  $[lvar0] = alloc(2*100, 0 /*NB: zero-tagged block*/ );
  for(int $[tvar3]=0;$[tvar3]<100;$[tvar3]++) {
    $[tvar2] = alloc_tuple(2);
    $[tvar1] = Val_int($[cvar0][0+2*$[tvar3]]);
    Store_field($[tvar2],0,$[tvar1]);
    $[tvar1] = Val_int($[cvar0][1]);
    Store_field($[tvar2],1,$[tvar1+2*$[tvar3]]);
    Array_store($[lvar0],$[tvar3],$[tvar0]);
  }
oncePost

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

