Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id HAA18389; Mon, 2 Aug 2004 07:04:20 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA18478 for <caml-list@pauillac.inria.fr>; Mon, 2 Aug 2004 07:04:19 +0200 (MET DST)
Received: from outbound28-2.lax.untd.com (outbound28-2.lax.untd.com [64.136.28.160])
	by concorde.inria.fr (8.12.10/8.12.10) with SMTP id i7254HSH022985
	for <caml-list@inria.fr>; Mon, 2 Aug 2004 07:04:18 +0200
Received: from outbound28-2.lax.untd.com (smtp04.lax.untd.com [10.130.24.124])
	by smtpout01.lax.untd.com with SMTP id AABAS5U3XAPJPRPS
	for <caml-list@inria.fr> (sender <vanevery@indiegamedesign.com>);
	Sun,  1 Aug 2004 22:03:49 -0700 (PDT)
Received: (qmail 29709 invoked from network); 2 Aug 2004 05:03:44 -0000
Received: from unknown (HELO vangogh) (66.52.248.184)
  by smtp04.lax.untd.com with SMTP; 2 Aug 2004 05:03:44 -0000
From: "Brandon J. Van Every" <vanevery@indiegamedesign.com>
To: "caml" <caml-list@inria.fr>
Subject: RE: [Caml-list] Wish List for Large Mutable Objects
Date: Sun, 1 Aug 2004 22:14:15 -0700
Message-ID: <OOEALCJCKEBJBIJHCNJDGEPPHFAB.vanevery@indiegamedesign.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.6604 (9.0.2911.0)
In-Reply-To: <004301c47841$561ff9c0$0201a8c0@dylan>
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
Importance: Normal
X-ContentStamp: 12:6:3643969851
X-UNTD-OriginStamp: CI84cOLHFqh7Zd2QWkwvEFvwyO3T/pIsFsCrOjjLH87kAcZHMWvKCM5zQaubrrmG
X-Miltered: at concorde with ID 410DCB51.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; brandon:99 caml-list:01 mcclain:01 internals:01 api:01 caml-list:01 bayesian:01 crap:01 crap:01 unboxed:01 kernel:01 bigarray:01 hierarchies:01 mutable:01 objects:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

David McClain wrote:
>
> How is it you claim to speak for my C++ manager about scatter
> gather?

I used to write 3d device drivers for a living.  I was never much for
the 'nasty innards' of OS internals, preferring to concentrate on ASM
loop optimizations for 3d graphics.  That said, Scatter-Gather DMA is
generally a property of a memory controller, i.e. a chipset on a
motherboard.  I seriously doubt you have user mode access to such memory
controllers.  If you do, point me at the API for it.  I'm happy to stand
corrected, but as far as I know, scatter-gather DMA is kernel mode stuff
on all common architectures.

There is the outside possibility that you mean something different by
'scatter-gather' than a device driver writer means by 'scatter-gather'.
A similar loggerhead to what an 'array' is.

A third possibility is you have written a library that assumes
scatter-gather DMA is happening under the hood somehow, but doesn't
explicitly control it in any way.  To which I say, memory controllers
are different.  In the absence of a query interface to determine their
capabilities, I don't see how you'd rigorously control algorithmic
performance.  Maybe you do not regard rigor as so important - memory
cache hierarchies sorta work without anyone doing anything explicit,
after all.  But I would say, without rigor, you probably won't end up
with anything.  Just an idea that something should be fast under some
circumstances, rather than any proven, repeatable reality.

For clarity, these aren't personal comments.  This is just my
understanding of scatter-gather DMA vs. whatever your understanding is.


Cheers,                         www.indiegamedesign.com
Brand*n Van Every               S*attle, WA

Praise Be to the caml-list Bayesian filter! It blesseth
my postings, it is evil crap!  evil crap!  Bigarray!
Unboxed overhead group!  Wondering!  chant chant chant...

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

