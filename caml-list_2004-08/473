Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA32135; Sat, 28 Aug 2004 09:48:30 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA27721 for <caml-list@pauillac.inria.fr>; Sat, 28 Aug 2004 09:48:29 +0200 (MET DST)
Received: from mproxy.gmail.com (mproxy.gmail.com [216.239.56.241])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i7S7mST4012397
	for <caml-list@inria.fr>; Sat, 28 Aug 2004 09:48:28 +0200
Received: by mproxy.gmail.com with SMTP id q44so3032cwc
        for <caml-list@inria.fr>; Sat, 28 Aug 2004 00:48:27 -0700 (PDT)
Received: by 10.11.99.62 with SMTP id w62mr3618cwb;
        Sat, 28 Aug 2004 00:48:27 -0700 (PDT)
Received: by 10.11.118.37 with HTTP; Sat, 28 Aug 2004 00:48:27 -0700 (PDT)
Message-ID: <3467e32e040828004855f9b8f6@mail.gmail.com>
Date: Sat, 28 Aug 2004 10:48:27 +0300
From: Radu-Mihail Obada <radu.obada@gmail.com>
Reply-To: Radu-Mihail Obada <radu.obada@gmail.com>
To: caml-list@inria.fr
Subject: Re: [Caml-list] C++ Throws
In-Reply-To: <20040828045515.GA23863@old.davidb.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
References: <Pine.LNX.4.44.0408271818480.5809-100000@localhost.localdomain> <000901c48c93$9bc9eec0$0201000a@dylan> <1093657249.15255.1712.camel@pelican.wigram> <001201c48cb5$73239ee0$0401000a@dylan> <20040828045515.GA23863@old.davidb.org>
X-Miltered: at nez-perce with ID 413038CC.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 abort:01 off-topic:01 handler:01 exception:02 exception:02 uncaught:02 indeed:06 maybe:06 type:07 type:07 throws:07 matches:08 actually:11 but:16 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I may be a little (maybe even a little more?) off-topic here, but just
to make things clear: C++' exception handling mechanism indeed calls
abort() when there is no exception handler that matches the current
exception type (C++ type substition rules considered).
(Actually, a C++ implementation is required to call terminate() for an
uncaught exception, among other things.).
Just my 2 cents.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

