Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA30914; Wed, 25 Aug 2004 18:49:45 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA31958 for <caml-list@pauillac.inria.fr>; Wed, 25 Aug 2004 18:49:43 +0200 (MET DST)
Received: from will.iki.fi (will.iki.fi [217.169.64.20])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i7PGnh7e025840
	for <caml-list@inria.fr>; Wed, 25 Aug 2004 18:49:43 +0200
Received: from [10.129.39.131] (b212-54-19-171.elisa-laajakaista.fi [212.54.19.171])
	by will.iki.fi (Postfix) with ESMTP id 8E32B14;
	Wed, 25 Aug 2004 19:49:38 +0300 (EEST)
Message-ID: <412CC320.1080102@exomi.com>
Date: Wed, 25 Aug 2004 19:49:36 +0300
From: Ville-Pertti Keinonen <will@exomi.com>
User-Agent: Mozilla Thunderbird 0.7.1 (X11/20040708)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: John Goerzen <jgoerzen@complete.org>
Cc: caml-list@inria.fr, Jason Smith <jns28@student.canterbury.ac.nz>,
        skaller@users.sourceforge.net
Subject: Re: [Caml-list] Alternative Bytecodes for OCaml
References: <200408250926.28629.jgoerzen@complete.org> <1093446345.15255.565.camel@pelican.wigram> <00af01c48ab7$66986c50$b509b584@Praxis> <200408251052.27094.jgoerzen@complete.org>
In-Reply-To: <200408251052.27094.jgoerzen@complete.org>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 412CC327.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 bytecodes:01 python:01 python:01 runnable:01 poof:99 natively:01 natively:01 pre-compiled:01 ocaml:01 ocaml:01 garbage:01 jvm:01 jvm:01 compile:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

John Goerzen wrote:

>>2. You now can run python on every platform that supports a Java
>>Virtual Machine
>>    
>>
>
>Yes, this is a key benefit, and would apply to both Python and OCaml.
>
>Let's say you've got an Python program and you'd like to make it easily 
>runnable for as many people as possible.  You know that most of them 
>have a JVM available.  So you could just distribute a .JAR file and 
>poof -- instant app.  Runs on OS X, Windows, Linux, BSD, etc.
>
>Now, s/Python/OCaml/ and perhaps s/JVM/.NET/.  You get the idea.
>
Whaat?

I use far more platforms that don't have Java available (at least a 
decent version thereof) than platforms that don't support Python and OCaml.

In fact, name a single platform that has a complete, up-to-date Java 
implementation available but doesn't have Python or OCaml available.  
I'll name one that has Python and OCaml but not Java, which I'm using 
right now to write this - FreeBSD/amd64 (ok, an i386 FreeBSD native or 
Linux emulated JDK might work in compatibility mode, but Python and 
OCaml are both amd64 native on this machine).

The other reasons for targeting JVM or .NET are valid (I can add one - 
in the case of Python, getting a non-reference-counting garbage 
collector might be a significant advantage), but every time I hear 
someone arguing in favor of Java for portability, I think of the many 
times I've been able to natively compile all C programs I might need but 
have had to give up on using Java programs...

Sure, it may be that a JRE is already installed for most of your users, 
but this isn't really relevant when the alternative could be natively 
pre-compiled (having one distribution file for all architectures is a 
pretty minimal advantage), and I regularly run into programs written in 
Java that are platform-specific and are shipped with their own copy of a 
JRE...  Sometimes because of the specific version required, sometimes 
for no reason, sometimes because the official JREs have bugs that the 
vendor had to fix themselves to get their software to work.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

