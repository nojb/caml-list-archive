Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id FAA15027; Mon, 2 Aug 2004 05:31:21 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id FAA15084 for <caml-list@pauillac.inria.fr>; Mon, 2 Aug 2004 05:31:19 +0200 (MET DST)
Received: from invasion.mail.pas.earthlink.net (invasion.mail.pas.earthlink.net [207.217.120.254])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i723VIEV014455
	for <caml-list@inria.fr>; Mon, 2 Aug 2004 05:31:18 +0200
Received: from 168-103-58-16.tcsn.qwest.net ([168.103.58.16] helo=dylan)
	by invasion.mail.pas.earthlink.net with asmtp (Exim 4.34)
	id 1BrTXh-0000el-W7; Sun, 01 Aug 2004 20:31:18 -0700
Message-ID: <004301c47841$561ff9c0$0201a8c0@dylan>
From: "David McClain" <dmcclain1@mindspring.com>
To: "Brandon J. Van Every" <vanevery@indiegamedesign.com>,
        "caml" <caml-list@inria.fr>
References: <OOEALCJCKEBJBIJHCNJDOEPNHFAB.vanevery@indiegamedesign.com>
Subject: Re: [Caml-list] Wish List for Large Mutable Objects
Date: Sun, 1 Aug 2004 20:32:22 -0700
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1437
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
X-ELNK-Trace: 7a0ab3eafc8cf994b22988ad1c62733440683398e744b8a4b1732378f0d6a597cefc93e9467cc50b350badd9bab72f9c350badd9bab72f9c350badd9bab72f9c
X-Originating-IP: 168.103.58.16
X-Miltered: at nez-perce with ID 410DB586.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; mcclain:01 dmcclain:01 caml-list:01 sister:99 inferred:01 generic:01 mcclain:01 brandon:99 caml-list:01 2004:99 offsets:01 pointers:01 tweak:01 acquisitions:99 unboxed:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

... I'm open to reasoned feedback, of course. Yours seemed overtly hostile
to me, as though you were somehow protecting the virtue of your young
sister, OCaml, against inferred accostations.

How is it you claim to speak for my C++ manager about scatter gather? It
appears that you have some real boundary issues here, and this probably
needs to be taken offline...

I was actually addressing most of my comments to the language designers
themselves, without referring to them by name. I am perfectly capable of
adding such primitives to the core language myself. But I was offering some
useful insight into the way that scientists view the universe, as contrasted
with conventional programming language design. If the language would choose
to implement some of these additions it could become more immediately
attractive to the audience in my corner of the universe. That's all....

I see, after thinking some time about the Array1, Array2, etc., versus
Generic Arrays, that Xavier et al needed to protect the typability of their
language, and so they made a concession to the masses in restricting the
convenient x.{ix1, ix2}, etc. syntax to the more common uses. In any event,
handling arbitrary arrays, I'm unlikely to use this syntax anyway,
preferring the more general Get/Set primitives on computed index lists. So,
in this case, I have answered my own question, and I'm not really losing
anything by their choice.

David McClain
Senior Corporate Scientist
Avisere, Inc.

+1.520.390.7738 (USA)
david.mcclain@avisere.com



----- Original Message ----- 
From: "Brandon J. Van Every" <vanevery@indiegamedesign.com>
To: "caml" <caml-list@inria.fr>
Sent: Sunday, August 01, 2004 20:20
Subject: RE: [Caml-list] Wish List for Large Mutable Objects


> David McClain wrote:
> >
> > I have a perfectly good running VM as user process library
> > running right now
> > in C++ that allows for mixed array files, arbitrary offsets
> > into the file
> > for various array pointers, and this is all transparent to
> > the user just as I indicated in my wish list for OCaml.
>
> But it doesn't do scatter-gather DMA.  A user process only grants so
> much control, and you seem to want an awful lot of control.  Hence my
> suggestion that you tweak an OS.
>
> > In more than 20 years of scientific data access and analysis
> > I have only
> > seen uniform arrays, one per file, generated by neophytes. In
> > just about
> > every case I can remember; NetCDF, HDF, FITS, RIF Wave Files,
> > MPEG, etc., these are all compound object files.
>
> Us neophytes call them 'file formats'.  They aren't arrays.  I think
> we'll be at loggerheads until we agree what an 'array' is.
>
> > The trouble with the simple minded
> > approach of one array per file is that most data acquisitions
> > will then end
> > up with dozens of component data files and it becomes a
> > tracking nightmare
> > to keep them all coordinated. Not so if you permit compound
> > document files.
>
> What does this have to do with Bigarray?  Bigarray provides uniform
> basic types in unboxed consecutive memory locations, ala C or Fortran.
> That's the entire point, to communicate with arrays as C and Fortran do
> them.  Why are you expecting it to be something exceedingly different?
>
> > With a language as rich and wonderful as OCaml, I really
> > can't understand your hostility
>
> I haven't spoken with hostility.  I gather you're somewhat attached to
> your problems, to view my comments as hostility.
>
> > to useful additions to the language.
>
> Clearly, you think your ideas are useful to you.  Whether others think
> they're useful to them, remains to be seen.
>
> > If you don't want to
> > play, you don't have to join my sandbox -- find another.
>
> You've lost me here.  Are you saying that if you hear feedback you don't
> like, that those giving the feedback should leave caml-list or just be
> quiet?
>
>
> Cheers,                         www.indiegamedesign.com
> Brand*n Van Every               S*attle, WA
>
> Praise Be to the caml-list Bayesian filter! It blesseth
> my postings, it is evil crap!  evil crap!  Bigarray!
> Unboxed overhead group!  Wondering!  chant chant chant...
>
>
> -------------------
> To unsubscribe, mail caml-list-request@inria.fr Archives:
http://caml.inria.fr
> Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ:
http://caml.inria.fr/FAQ/
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

