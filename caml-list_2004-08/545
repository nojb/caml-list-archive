Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA30577; Tue, 31 Aug 2004 22:57:21 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA30573 for <caml-list@pauillac.inria.fr>; Tue, 31 Aug 2004 22:57:20 +0200 (MET DST)
Received: from outbound28-2.lax.untd.com (outbound28-2.lax.untd.com [64.136.28.160])
	by nez-perce.inria.fr (8.13.0/8.13.0) with SMTP id i7VKvIr7004788
	for <caml-list@inria.fr>; Tue, 31 Aug 2004 22:57:19 +0200
Received: from outbound28-2.lax.untd.com (smtp02.lax.untd.com [10.130.24.122])
	by smtpout04.lax.untd.com with SMTP id AABAVK3TCAXRJL6J
	for <caml-list@inria.fr> (sender <vanevery@indiegamedesign.com>);
	Tue, 31 Aug 2004 13:57:06 -0700 (PDT)
Received: (qmail 8230 invoked from network); 31 Aug 2004 20:56:26 -0000
Received: from unknown (HELO vangogh) (66.52.250.185)
  by smtp02.lax.untd.com with SMTP; 31 Aug 2004 20:56:26 -0000
From: "Brandon J. Van Every" <vanevery@indiegamedesign.com>
To: "caml" <caml-list@inria.fr>
Subject: [Caml-list] OCaml's critical mass
Date: Tue, 31 Aug 2004 14:07:21 -0700
Message-ID: <OOEALCJCKEBJBIJHCNJDCEHKHHAB.vanevery@indiegamedesign.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.6604 (9.0.2911.0)
In-Reply-To: <Pine.LNX.4.58.0408311030450.27999@shell2.speakeasy.net>
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
Importance: Normal
X-ContentStamp: 14:7:707078646
X-MAIL-INFO: 06017160290479610d15203069212df9041169493014f5b44009a98d4db4898979393591a120b054fd541db0949150b5f9a5a5d0d1a16dc51d44ddc0ddc444bd999d41c434cd44192d449dc580e4a029a055051059a0a990e9e0e02131313989e1b53909b550b51db0a4ed9914a1dd94f4ddd16d44d13494c594b131e1ed30542009cd2031b4f9b550dd50891d911450052434999955e9bde074496974f0612df004490d
X-UNTD-OriginStamp: CI84cOLHFqh7Zd2QWkwvEFvwyO3T/pIsFsCrOjjLH86oyW6hmeg5v/d79E+mdV/J
X-Miltered: at nez-perce with ID 4134E62F.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; brandon:99 ocaml's:01 brogoff:01 inverted:01 priorities:01 wiki:01 cultures:99 caml-list:01 bayesian:01 crap:01 crap:01 unboxed:01 alloc:01 alloc:01 val:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

brogoff wrote:
>
> I think that you might be happier using Clean than OCaml. The
> Clean team has
> inverted priorities (with regards to OSes they support) from
> the OCaml team.
> For them, Windows support and then Mac support are first, and
> Unix is a second
> class citizen. There are even some (very primitive) game
> libraries for Clean.

Yes, I suppose Clean is an exit strategy in the worst case.  So are some
of the Schemes, and Felix.  But my current attitude is "OCaml, until it
fails me."  It hasn't failed me yet.  I see much being organized that
needs to be organized, for example http://wiki.cocan.org .  OCaml has
significantly more critical mass than these other offerings.

> I think it's a good thing for OCaml that Unix support comes
> first, for many
> reasons, not the least important of which is that the Unix
> community does tend
> to have more of a programmer oriented, "can do" mindset, IMO.

Here's an article on the conflicting cultures.
http://www.joelonsoftware.com/articles/Biculturalism.html


Cheers,                         www.indiegamedesign.com
Brand*n Van Every               S*attle, WA

Praise Be to the caml-list Bayesian filter! It blesseth
my postings, it is evil crap!  evil crap!  Bigarray!
Unboxed overhead group!  Wondering!  chant chant chant...

Is my technical content showing?

// return an array of 100 packed tuples
temps
  int $[tvar0][2*100]; // what the c function needs
  value $[tvar1]; // one int
  value $[tvar2]; // one tuple
  int $[tvar3] // loop control var
oncePre
eachPre
  $[cvar0]=&($[tvar0][0]);
eachPost
  $[lvar0] = alloc(2*100, 0 /*NB: zero-tagged block*/ );
  for(int $[tvar3]=0;$[tvar3]<100;$[tvar3]++) {
    $[tvar2] = alloc_tuple(2);
    $[tvar1] = Val_int($[cvar0][0+2*$[tvar3]]);
    Store_field($[tvar2],0,$[tvar1]);
    $[tvar1] = Val_int($[cvar0][1]);
    Store_field($[tvar2],1,$[tvar1+2*$[tvar3]]);
    Array_store($[lvar0],$[tvar3],$[tvar0]);
  }
oncePost

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

