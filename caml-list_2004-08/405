Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA15990; Thu, 26 Aug 2004 02:13:28 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA14682 for <caml-list@pauillac.inria.fr>; Thu, 26 Aug 2004 02:13:25 +0200 (MET DST)
Received: from glockenspiel.complete.org (glockenspiel.complete.org [69.10.152.57])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i7Q0DM3Z015767
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Thu, 26 Aug 2004 02:13:24 +0200
Received: from localhost (localhost [127.0.0.1])
	by glockenspiel.complete.org (Postfix) with ESMTP
	id 36F2720F; Wed, 25 Aug 2004 19:13:26 -0500 (CDT)
Received: from glockenspiel.complete.org ([127.0.0.1])
	by localhost (glockenspiel [127.0.0.1]) (amavisd-new, port 10025)
	with ESMTP id 28941-02; Wed, 25 Aug 2004 19:13:22 -0500 (CDT)
Received: from erwin.complete.org (user20.moundridge.ks.dtnspeed.net [12.149.180.20])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(Client CN "erwin.complete.org", Issuer "John Goerzen -- Root CA" (verified OK))
	by glockenspiel.complete.org (Postfix) with ESMTP
	id 3D96E161; Wed, 25 Aug 2004 19:13:22 -0500 (CDT)
Received: from heinrich.complete.org (heinrich.lan.complete.org [10.200.0.15])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(Client CN "christoph.complete.org", Issuer "John Goerzen -- Root CA" (verified OK))
	by erwin.complete.org (Postfix) with ESMTP id 64E292C5;
	Wed, 25 Aug 2004 19:09:02 -0500 (CDT)
Received: by heinrich.complete.org (Postfix, from userid 1000)
	id 48203A48A; Wed, 25 Aug 2004 19:09:03 -0500 (CDT)
From: John Goerzen <jgoerzen@complete.org>
To: Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp>
Subject: Re: [Caml-list] Alternative Bytecodes for OCaml
Date: Wed, 25 Aug 2004 19:09:02 -0500
User-Agent: KMail/1.7
Cc: caml-list@inria.fr
References: <200408250926.28629.jgoerzen@complete.org> <20040826.071059.48814499.yoriyuki@mbg.ocn.ne.jp>
In-Reply-To: <20040826.071059.48814499.yoriyuki@mbg.ocn.ne.jp>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200408251909.03050.jgoerzen@complete.org>
X-Virus-Scanned: by amavisd-new-20030616-p9 (Debian) at complete.org
X-Miltered: at concorde with ID 412D2B22.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 bytecodes:01 2004:99 yamagata:01 yoriyuki:01 200102:01 python:01 stumbling:01 recursion:01 haskell:01 hugs:01 camlp:01 ocamlopt:01 volumes:99 slower:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wednesday 25 August 2004 5:10 pm, Yamagata Yoriyuki wrote:
> The conclusion of the F#, and several SML-to-Java bytecode projects
> is that JVM and .NET are too restricted to OO paradigm, I remember.
> See the thread begins
> http://caml.inria.fr/archives/200102/msg00048.html

I'm not sure I buy that.  For one, Python already exists for both, and I 
believe it implements all the stumbling blocks commonly mentioned here 
save for tail recursion optimization.  Secondly, there are functional 
languages existing for .NET: Nemerle, SML, Haskell (via both ghc and 
Hugs), Scheme, Lisp.  I hardly think that one could claim that either 
VM is too limited to make an implementation.  We even have preliminary 
OCaml interpreters for Java, and the Nemerle language is *very* similar 
to OCaml.  The syntax is different, but from what I've seen, the 
language is similar enough that it should be possible to make a camlp4 
printer to output in Nemerle.

An *efficient* implementation is another matter, but one I'm not highly 
concerned about.  Those that are going to be doing sophisticated 
numerical analysis can stick with ocamlopt.

Most of my programs are non-interactive and execute in less than 1 
second even if given huge volumes of data.  I don't really care if 
they're 10 times slower.  The development time saved having to write 
Yet Another Glue or more libraries is far more valuable.

-- John

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

