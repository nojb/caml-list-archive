Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 94B83BC8C
	for <caml-list@yquem.inria.fr>; Sun, 16 Jan 2005 07:15:28 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j0G6FR3l026831
	for <caml-list@yquem.inria.fr>; Sun, 16 Jan 2005 07:15:28 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA01089 for <caml-list@pauillac.inria.fr>; Sun, 16 Jan 2005 07:15:27 +0100 (MET)
Received: from [127.0.0.1] (buzet.inria.fr [128.93.11.101])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j0G6FONo015756;
	Sun, 16 Jan 2005 07:15:25 +0100
Message-ID: <41EA0625.5090907@inria.fr>
Date: Sun, 16 Jan 2005 07:13:57 +0100
From: Alain Frisch <Alain.Frisch@inria.fr>
User-Agent: Mozilla Thunderbird 0.9 (X11/20041124)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Anastasia Gornostaeva <ermine@ermine.pp.ru>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] ulex+ocamlyacc
References: <20050115203822.GA62797@ermine.home>
In-Reply-To: <20050115203822.GA62797@ermine.home>
X-Enigmail-Version: 0.89.0.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=KOI8-R; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 41EA067F.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 41EA067C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; frisch:01 frisch:01 caml-list:01 ocamlyacc:01 wrote:01 ocamlyacc:01 cduce:01 mll:01 parsing:01 parser:01 lexer:01 token:01 lexbuf:01 lexing:01 parser:01 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

Anastasia Gornostaeva wrote:
> Hello.
> 
> How I can combinate ocamlyacc and ulex (http://www.cduce.org/download/)
> instead of *.mll?

As long as you don't use the symbol_start-like functions from Parsing, you
can do something like:

  Parser.main (fun _ -> Lexer.token lexbuf) (Lexing.from_string "dummy")

(The ocamlyacc generated parser don't really use themselves the lexbuf 
argument...)

Hope this helps.

-- Alain

