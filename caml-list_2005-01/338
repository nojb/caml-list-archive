Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 2BE8EBC8A
	for <caml-list@yquem.inria.fr>; Sun, 30 Jan 2005 11:19:46 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j0UAJjQP008724
	for <caml-list@yquem.inria.fr>; Sun, 30 Jan 2005 11:19:46 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA13837 for <caml-list@pauillac.inria.fr>; Sun, 30 Jan 2005 11:19:45 +0100 (MET)
Received: from yquem.inria.fr (yquem.inria.fr [128.93.8.37])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j0UAJjjZ008721
	for <caml-list@inria.fr>; Sun, 30 Jan 2005 11:19:45 +0100
Received: by yquem.inria.fr (Postfix, from userid 18180)
	id 48743BC8A; Sun, 30 Jan 2005 11:19:45 +0100 (CET)
Date: Sun, 30 Jan 2005 11:19:45 +0100
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: OCaml <caml-list@inria.fr>
Subject: Re: [Caml-list] C-threads & callbacks
Message-ID: <20050130101945.GC4213@yquem.inria.fr>
References: <20050120182313.GB4919@quant3.janestcapital.quant>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20050120182313.GB4919@quant3.janestcapital.quant>
User-Agent: Mutt/1.3.28i
X-Miltered: at nez-perce with ID 41FCB4C1.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 41FCB4C1.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 interfacing:01 threads:01 ocaml-code:01 ocaml-code:01 runtime:01 threading:01 callbacks:01 callbacks:01 thread:02 seems:03 library:03 library:03 feasible:04 inria:05 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

> I'm currently interfacing a 3rd-party library that spawns threads
> to execute callbacks.  I would like those callbacks to be handled by
> OCaml-code, but have run into some issues here.
> 
> As it seems, it is not possible to run OCaml-code linked with thread
> support while letting C-threads perform callbacks.  This has already
> been a topic on the list a while ago.

Correct.  This is still on my "to do" list.  It sounds feasible but
requires some intervention in the runtime system and the threading
library, so it's not something that can be done on the side by
3rd-party code.

- Xavier Leroy

