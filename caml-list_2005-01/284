Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id B4B7EBB91
	for <caml-list@yquem.inria.fr>; Thu, 27 Jan 2005 20:39:19 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j0RJdJYh010705
	for <caml-list@yquem.inria.fr>; Thu, 27 Jan 2005 20:39:19 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA05356 for <caml-list@pauillac.inria.fr>; Thu, 27 Jan 2005 20:39:18 +0100 (MET)
Received: from cgpsrv2.cis.mcmaster.ca (univmail.CIS.McMaster.CA [130.113.64.46])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j0RJdI7e010697
	for <caml-list@inria.fr>; Thu, 27 Jan 2005 20:39:18 +0100
Received: from [130.113.68.27] (account carette@univmail.cis.mcmaster.ca HELO pccarettej)
  by cgpsrv2.cis.mcmaster.ca (CommuniGate Pro SMTP 4.1.8)
  with ESMTP id 80790374; Thu, 27 Jan 2005 14:39:17 -0500
Reply-To: <carette@mcmaster.ca>
From: "Jacques Carette" <carette@mcmaster.ca>
To: "'Vincenzo Ciancia'" <vincenzo_yahoo_addressguard-gmane@yahoo.it>,
	<caml-list@inria.fr>
Subject: RE: [Caml-list] Re: '_a
Date: Thu, 27 Jan 2005 14:39:32 -0500
Organization: McMaster University
Message-ID: <004b01c504a7$eca011d0$1b447182@cas.mcmaster.ca>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="US-ASCII"
Content-Transfer-Encoding: quoted-printable
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.6626
In-Reply-To: <ctasuo$uvk$1@sea.gmane.org>
x-mimeole: Produced By Microsoft MimeOLE V6.00.2900.2180
Importance: Normal
X-Miltered: at concorde with ID 41F94367.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 41F94366.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 inference:01 optionally:01 exceptions:01 exceptions:01 functions:01 jacques:01 jacques:01 guess:02 variables:02 mcmaster:02 inferred:02 reflecting:07 possibility:08 function:08 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

> What about the possibility to include possible exceptions into a=20
> function signature (a la java)? Does this have problems with type=20
> inference?=20

I would love an (optional?) way to get the type signature of my =
functions to
reflect their non-totalness (exceptions + anything else), as well as
reflecting their 'imperative' content [ie which state variables are =
used].

In fact, any such 'monadic' information that can be automatically =
inferred
would be really useful to have (optionally).  I guess these are known as
'types and effects' systems.

Jacques

