Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 2C460BB81
	for <caml-list@yquem.inria.fr>; Tue,  4 Jan 2005 04:29:27 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j043TQRb013864
	for <caml-list@yquem.inria.fr>; Tue, 4 Jan 2005 04:29:26 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA29759 for <caml-list@pauillac.inria.fr>; Tue, 4 Jan 2005 04:29:25 +0100 (MET)
Received: from mail-yellow.research.att.com (mail-dark.research.att.com [192.20.225.112])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j043TP2G013853
	for <caml-list@inria.fr>; Tue, 4 Jan 2005 04:29:25 +0100
Received: from [192.168.1.103] (vpn-20.research.att.com [135.207.240.20])
	by bigmail.research.att.com (8.11.6+Sun/8.11.6) with ESMTP id j043TLN24080;
	Mon, 3 Jan 2005 22:29:22 -0500 (EST)
Subject: Re: [Caml-list] MacOS port and file formats
From: Mary Fernandez <mff@research.att.com>
To: Jacques GARRIGUE <garrigue@kurims.kyoto-u.ac.jp>
Cc: garrigue@math.nagoya-u.ac.jp, caml-list@inria.fr
In-Reply-To: <20050102.212312.125120610.garrigue@kurims.kyoto-u.ac.jp>
References: <20041231.182319.04680184.garrigue@math.nagoya-u.ac.jp>
	 <1104505684.8834.851.camel@localhost.localdomain>
	 <20050102.103541.123758549.garrigue@math.nagoya-u.ac.jp>
	 <20050102.212312.125120610.garrigue@kurims.kyoto-u.ac.jp>
Content-Type: text/plain
Organization: AT&T Labs - Research
Message-Id: <1104809361.4159.52.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.4.5 (1.4.5-7) 
Date: Mon, 03 Jan 2005 22:29:21 -0500
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 41DA0D96.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 41DA0D95.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 macos:01 macos:01 wrote:01 native-code:01 o'caml:01 o'caml:01 runtime:01 pcre:01 usr:01 lib:01 ocaml:01 libunix:01 libunix:01 dylib:01 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

Jacques,
Thanks for all the detailed info and help.  We decided to just use
the static libraries as it simplifies our other ports, 
but this is all very helpful info.  We have our MacOS
library working with C & Java.
Thanks, Mary
On Sun, 2005-01-02 at 07:23, Jacques GARRIGUE wrote:
> > From: Mary Fernandez <mff@research.att.com>
> > > We create a native-code, dynamically linked
> > > C library that includes our O'Caml library, the O'Caml runtime,
> > > and several other C libraries that our application depends upon
> > > the unix, nums, str libraries plus an external PCRE library.
> > 
> > If your concern is darwin, then there is a simple answer: you can just
> > get the installed static library, and turn it into a dynamic library,
> > as all C code on darwin is position independent. Just look for the
> > correct linker incantation in the darwin manual.
> 
> In case you could not find it, here is the incantation:
> 
>   ld -dylib -all_load -flat_namespace -undefined suppress 
>     /usr/local/lib/ocaml/libunix.a -ldylib1.o -o libunix.dylib
> 
> You can also link all these libraries directly in your dynamic linked
> C library, without creating individual dlls (but this works only for
> platforms such as darwin, where all code is position independent).
> 
> Jacques Garrigue
-- 
Mary Fernandez <mff@research.att.com>
AT&T Labs - Research

