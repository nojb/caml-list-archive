Return-Path: <kennethadammiller@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 45E867FB0A
	for <caml-list@sympa.inria.fr>; Mon,  8 Dec 2014 19:11:54 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  kennethadammiller@gmail.com) identity=pra;
  client-ip=209.85.214.178;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="kennethadammiller@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  kennethadammiller@gmail.com designates 209.85.214.178 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.214.178;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="kennethadammiller@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ob0-f178.google.com) identity=helo;
  client-ip=209.85.214.178;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="postmaster@mail-ob0-f178.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlQBAJLohVTRVdaym2dsb2JhbABag1hcgwHBBIFgAQmGCQKBKQcWAQEBAQERAQEBAQEGCwsJFC6EAgEBAQMBEhEdARseAwELBgULDSoCAiEBAREBBQEcBhMiiAEBAwkIDbNZPTGLL4FsgwWLBQoZJw1ZhQYBAQEHAQEBAQEXAQUOjQd6gikLgjE+EYE2BYlCgnGFM4N0gUiBPYo1AoQIEiWBDYIFgjEhMIJDAQEB
X-IPAS-Result: AlQBAJLohVTRVdaym2dsb2JhbABag1hcgwHBBIFgAQmGCQKBKQcWAQEBAQERAQEBAQEGCwsJFC6EAgEBAQMBEhEdARseAwELBgULDSoCAiEBAREBBQEcBhMiiAEBAwkIDbNZPTGLL4FsgwWLBQoZJw1ZhQYBAQEHAQEBAQEXAQUOjQd6gikLgjE+EYE2BYlCgnGFM4N0gUiBPYo1AoQIEiWBDYIFgjEhMIJDAQEB
X-IronPort-AV: E=Sophos;i="5.07,539,1413237600"; 
   d="scan'208";a="92417338"
Received: from mail-ob0-f178.google.com ([209.85.214.178])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 08 Dec 2014 19:11:53 +0100
Received: by mail-ob0-f178.google.com with SMTP id gq1so4020348obb.23
        for <caml-list@inria.fr>; Mon, 08 Dec 2014 10:11:51 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=QpdRc7xgGgPVBwth/zPZpldfRKo82HWIBx4AMIgZ9d4=;
        b=d+St3TjMbkE7bNeqavCt+Bb+hDrbXFQB30jORas76OEVGx50/tM1TaGtYPHOXnWlM6
         XIPgHH1Nj4+6DzlHmVkvMDG3mK7DgrgvEDOGm0XlWWzAneLgKaaXTejSwjSCCagKmYWi
         m4CrR6lEuShRNdZtBWjQZEnbLz0MNUI94Uri+eIT+L9ayhL1skOyHhf/qOMoKyXzMOM/
         2e6SCW9ZHH7Usnm3eYEVW3iKeNPqKmnyXPrOEmJsjw0LIbcSFPhKReKVGRtAdsJmJc/6
         HRJV7eUdWnghztYzFKz/daLw3U/3Pt6kCzUC+sjKiohjCXO9v03FrCrzsQvhSPSaAent
         MMdQ==
MIME-Version: 1.0
X-Received: by 10.202.226.198 with SMTP id z189mr7699762oig.63.1418062311605;
 Mon, 08 Dec 2014 10:11:51 -0800 (PST)
Received: by 10.182.197.1 with HTTP; Mon, 8 Dec 2014 10:11:51 -0800 (PST)
In-Reply-To: <CAK7rcp-UXQtkhVjK77a-NcBLK2Z2PSFOZxd_f1AW0f=h=hz0eQ@mail.gmail.com>
References: <CAK7rcp9iRMQo0H1DRo00QRM5bw6psT2kN+pkkcjip9ykrLtL-A@mail.gmail.com>
	<54801373.3010506@fugmann.net>
	<CAK7rcp98sHmpn7-e7Sj68YPRjES1J+PZbriOGoUB5kd+2BGhZg@mail.gmail.com>
	<5480309B.3020402@fugmann.net>
	<CAK7rcp9mXT1Ud=VoGexnEtyzascBpar-+4aeLW_=WG-1ZHzsiA@mail.gmail.com>
	<CAK7rcp-tdMKaeK0fiP8tcSaXEaN7uW-GB6-n30KX6iZtC00U4g@mail.gmail.com>
	<CAK7rcp_Es8q+PEv08XWVGZS8odU=NQuiKkqfPG=Kidk+fcsybw@mail.gmail.com>
	<5480B7C3.90300@fugmann.net>
	<CAK7rcp_w3xxwWxOKsAEOHrtqQSc-u50ZizXZSVcLSKM6=ZCL0g@mail.gmail.com>
	<54817769.2050605@fugmann.net>
	<CAK7rcp-UXQtkhVjK77a-NcBLK2Z2PSFOZxd_f1AW0f=h=hz0eQ@mail.gmail.com>
Date: Mon, 8 Dec 2014 13:11:51 -0500
Message-ID: <CAK7rcp-nO43phHKSKZKXLj6-=yw9XcyyoTnjyKNXTSuQCKjsDQ@mail.gmail.com>
From: Kenneth Adam Miller <kennethadammiller@gmail.com>
To: caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a114091805a4c760509b85c78
Subject: Re: [Caml-list] Potential OCaml-ZMQ memory management problems

--001a114091805a4c760509b85c78
Content-Type: text/plain; charset=UTF-8

While reproducing it, I found that in the bap/ocaml directory's input.ml,
there is a mutable list that is being updated by functors in speclist when
parse_argv or parse is called; it retains the old list between calls to my
function. So I need to reset it.
(line 6 at https://github.com/argp/bap/blob/master/ocaml/input.ml)

But now I get a strange compiler error! I don't know how ocaml could be
such a hard language to use...

Input.inputs:=ref [];

Error: Unbound value Input.inputs

But you can know that I have included the ocaml directory and linked it
correct, since using Input.get_program already worked...

On Fri, Dec 5, 2014 at 9:38 AM, Kenneth Adam Miller <
kennethadammiller@gmail.com> wrote:

> Yes, I'll try and recreate it for you.
>
> No, the backtrace in gdb is useless. All it says is:
> #0  0x0000000000843033  in caml_c_call ()
> #1  0x0000000000000000  in ?? ()
>
> On Fri, Dec 5, 2014 at 4:14 AM, Anders Fugmann <anders@fugmann.net> wrote:
>
>> On 12/04/2014 10:48 PM, Kenneth Adam Miller wrote:
>>
>>> Well I am just no thorough and you are correct.
>>>
>>> The sending of data over a zmq socket and the conversion of that data
>>> from string to protobuf encoded string all occurred in one line. One I
>>> added a print statement and then segregated them more cleanly, I can see
>>> that it is most certainly the line that converts to protobuf.
>>>
>>> The exact function that fails (on my end, could be deeper within this)
>>> is to_pb from here:
>>>
>>> https://github.com/argp/bap/blob/master/ocaml/piqi/ast_piqi.ml#L186
>>>
>>> In any case, I did a test, and in my first function when to_pb gets
>>> called the first time and succeeds, I added an additional call to it...
>>> which also succeeded. But then in a subsequent unit test, the one that
>>> has been failing, still segfaults.
>>>
>>> If I turn off the tests prior to the segfaulting test, to_pb works in
>>> this particular run. But if the tests run before hand, something goes
>>> awry between the tests. Is it possible that to_pb is using some shared
>>> state between calls?
>>>
>>
>> I would not expect so.
>>
>> If you create a failing unittest that I could try?
>>
>> Also, does the segfault contain a usable back trace (using gdb)? That
>> might give some insights into which code is failing.
>>
>> /Anders
>>
>>
>>
>

--001a114091805a4c760509b85c78
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">While reproducing it, I found that in the bap/ocaml direct=
ory&#39;s <a href=3D"http://input.ml">input.ml</a>, there is a mutable list=
 that is being updated by functors in speclist when parse_argv or parse is =
called; it retains the old list between calls to my function. So I need to =
reset it.<div>(line 6 at=C2=A0<a href=3D"https://github.com/argp/bap/blob/m=
aster/ocaml/input.ml">https://github.com/argp/bap/blob/master/ocaml/input.m=
l</a>)</div><div><br></div><div>But now I get a strange compiler error! I d=
on&#39;t know how ocaml could be such a hard language to use...</div><div><=
br></div><div>Input.inputs:=3Dref [];</div><div><br></div><div>Error: Unbou=
nd value Input.inputs</div><div><br></div><div>But you can know that I have=
 included the ocaml directory and linked it correct, since using Input.get_=
program already worked...</div></div><div class=3D"gmail_extra"><br><div cl=
ass=3D"gmail_quote">On Fri, Dec 5, 2014 at 9:38 AM, Kenneth Adam Miller <sp=
an dir=3D"ltr">&lt;<a href=3D"mailto:kennethadammiller@gmail.com" target=3D=
"_blank">kennethadammiller@gmail.com</a>&gt;</span> wrote:<br><blockquote c=
lass=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;=
padding-left:1ex"><div dir=3D"ltr">Yes, I&#39;ll try and recreate it for yo=
u.<div><br></div><div>No, the backtrace in gdb is useless. All it says is:<=
/div><div>#0 =C2=A00x0000000000843033 =C2=A0in caml_c_call ()</div><div>#1 =
=C2=A00x0000000000000000 =C2=A0in ?? ()</div></div><div class=3D"HOEnZb"><d=
iv class=3D"h5"><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">O=
n Fri, Dec 5, 2014 at 4:14 AM, Anders Fugmann <span dir=3D"ltr">&lt;<a href=
=3D"mailto:anders@fugmann.net" target=3D"_blank">anders@fugmann.net</a>&gt;=
</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .=
8ex;border-left:1px #ccc solid;padding-left:1ex"><span>On 12/04/2014 10:48 =
PM, Kenneth Adam Miller wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex">
Well I am just no thorough and you are correct.<br>
<br>
The sending of data over a zmq socket and the conversion of that data<br>
from string to protobuf encoded string all occurred in one line. One I<br>
added a print statement and then segregated them more cleanly, I can see<br>
that it is most certainly the line that converts to protobuf.<br>
<br>
The exact function that fails (on my end, could be deeper within this)<br>
is to_pb from here:<br>
<br>
<a href=3D"https://github.com/argp/bap/blob/master/ocaml/piqi/ast_piqi.ml#L=
186" target=3D"_blank">https://github.com/argp/bap/<u></u>blob/master/ocaml=
/piqi/ast_<u></u>piqi.ml#L186</a><br>
<br>
In any case, I did a test, and in my first function when to_pb gets<br>
called the first time and succeeds, I added an additional call to it...<br>
which also succeeded. But then in a subsequent unit test, the one that<br>
has been failing, still segfaults.<br>
<br>
If I turn off the tests prior to the segfaulting test, to_pb works in<br>
this particular run. But if the tests run before hand, something goes<br>
awry between the tests. Is it possible that to_pb is using some shared<br>
state between calls?<br>
</blockquote>
<br></span>
I would not expect so.<br>
<br>
If you create a failing unittest that I could try?<br>
<br>
Also, does the segfault contain a usable back trace (using gdb)? That might=
 give some insights into which code is failing.<span><font color=3D"#888888=
"><br>
<br>
/Anders<br>
<br>
<br>
</font></span></blockquote></div><br></div>
</div></div></blockquote></div><br></div>

--001a114091805a4c760509b85c78--
