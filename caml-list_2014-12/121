Return-Path: <lpw25@cam.ac.uk>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 9E4BE7FB38
	for <caml-list@sympa.inria.fr>; Mon, 29 Dec 2014 00:57:30 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  lpw25@cam.ac.uk) identity=pra; client-ip=131.111.8.150;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="lpw25@cam.ac.uk"; x-sender="lpw25@cam.ac.uk";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  lpw25@cam.ac.uk) identity=mailfrom; client-ip=131.111.8.150;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="lpw25@cam.ac.uk"; x-sender="lpw25@cam.ac.uk";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@ppsw-50.csi.cam.ac.uk) identity=helo;
  client-ip=131.111.8.150;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="lpw25@cam.ac.uk";
  x-sender="postmaster@ppsw-50.csi.cam.ac.uk";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqsAAOyXoFSDbwiWnGdsb2JhbABcg1hYtC4GkjKFewKBCxYBAQEBAREBAQEBAQgLCQkULoQNAQQBeQULCyElDwEESYg3CAS/fIREAQEIAQEBAQEdhgOJdAeEKQWRVIU0gT2QE4QQb4JDAQEB
X-IPAS-Result: AqsAAOyXoFSDbwiWnGdsb2JhbABcg1hYtC4GkjKFewKBCxYBAQEBAREBAQEBAQgLCQkULoQNAQQBeQULCyElDwEESYg3CAS/fIREAQEIAQEBAQEdhgOJdAeEKQWRVIU0gT2QE4QQb4JDAQEB
X-IronPort-AV: E=Sophos;i="5.07,657,1413237600"; 
   d="scan'208";a="115038100"
Received: from ppsw-50.csi.cam.ac.uk ([131.111.8.150])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 29 Dec 2014 00:57:30 +0100
X-Cam-AntiVirus: no malware found
X-Cam-ScannerInfo: http://www.cam.ac.uk/cs/email/scanner/
Received: from host86-182-254-133.range86-182.btcentralplus.com ([86.182.254.133]:42565 helo=study.localdomain)
	by ppsw-50.csi.cam.ac.uk (smtp.hermes.cam.ac.uk [131.111.8.158]:587)
	with esmtpsa (PLAIN:lpw25) (TLSv1.2:AES128-GCM-SHA256:128)
	id 1Y5NiD-0000jL-qm (Exim 4.82_3-c0e5623)
	(return-path <lpw25@cam.ac.uk>); Sun, 28 Dec 2014 23:57:29 +0000
From: Leo White <lpw25@cam.ac.uk>
To: Jordan W <jordojw@gmail.com>
Cc: "caml-list\@inria.fr" <caml-list@inria.fr>
References: <CAPOA5_5nmdNTst8GJk5TgUABOviuRdLbh4UUazDewEHZWxydWw@mail.gmail.com>
	<87d273ljxp.fsf@study.localdomain>
	<996F18A3-E87B-4723-A355-25A09AF4527B@gmail.com>
	<874msflb48.fsf@study.localdomain>
	<CAPOA5_6gZ7b8-DRS=YCaDWU2UAbWjvfG=09SOXzPiQSFNmbeng@mail.gmail.com>
X-Face: "XWxb[u_Z\PA_Y?9@|IA!!+jTb(/290-*ea/Un$I0B98.$n%eL.;2w<l)q>*,z]WR#T:,p[
 NBd++M7l]#7zj7!{<NUTKJA{}Ox<uO[wb-s<\6jzp.r]-AE[W%E+ckCQ'2WZS@Zu/PJU$~~oy|>~iw
 $W-"/=|dVjhT[D{4~gE}gK<2`.6fs!;uqqud]vs2N/3^m7{aS1V,
Date: Mon, 29 Dec 2014 00:14:58 +0000
In-Reply-To: <CAPOA5_6gZ7b8-DRS=YCaDWU2UAbWjvfG=09SOXzPiQSFNmbeng@mail.gmail.com>
	(Jordan W.'s message of "Sun, 28 Dec 2014 15:25:17 -0800")
Message-ID: <87tx0fjoql.fsf@study.localdomain>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/24.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain
Subject: Re: [Caml-list] Module aliases ideal name-spacing

> The only remaining remnant of the "prefixed"
> namespace is in myLib.mli/.ml
>
>
>     module MyModule = MyLibMyModule
>     module Utils = MyLibUtils
>
> It would be nice to eliminate that as well, but I could imagine
> auto-generating these module alias mappings.

It is certainly feasible to have the build system generate these
mappings automatically. For example, I believe that Jane Street's
example build rules for Jenga include support for generating these alias
mappings (examples/js-build-style/jengaroot.ml in the Jenga source
code).

> This
> sounds like a nice workaround the namespace issue, but do you think it would be worth supporting module aliases
> themselves as a form of namespacing at compilation time, so that this intermediate prefixed compilation artifact isn't
> needed?

I'm aware of a few proposals, and I'm sure something more user-friendly
will happen at some point, but the details of these proposals are tricky
and important to get right. For now, the support in 4.02 is at least
sufficient to have a working replacement for `-pack`.

Regards,

Leo
