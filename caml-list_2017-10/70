Return-Path: <rich@annexia.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 072C8801D7
	for <caml-list@sympa.inria.fr>; Tue, 24 Oct 2017 15:30:30 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=rich@annexia.org; spf=Pass smtp.mailfrom=rich@annexia.org; spf=Pass smtp.helo=postmaster@annexia.org
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  rich@annexia.org) identity=pra; client-ip=80.68.91.176;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="rich@annexia.org";
  x-sender="rich@annexia.org"; x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  rich@annexia.org designates 80.68.91.176 as permitted sender)
  identity=mailfrom; client-ip=80.68.91.176;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="rich@annexia.org";
  x-sender="rich@annexia.org"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  postmaster@annexia.org designates 80.68.91.176 as permitted
  sender) identity=helo; client-ip=80.68.91.176;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="rich@annexia.org";
  x-sender="postmaster@annexia.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
IronPort-PHdr: =?us-ascii?q?9a23=3A0MnSSRQzy5iPpteT0/HpGcw2Ltpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa64ZBON2/xhgRfzUJnB7Loc0qyN7PCmBDRIyK3CmU5BWaQEbwUCh8?=
 =?us-ascii?q?QSkl5oK+++Imq/EsTXaTcnFt9JTl5v8iLzG0FUHMHjew+a+SXqvnY6Uy/yPgtt?=
 =?us-ascii?q?J+nzBpWaz4Huj7jzqNXvZFBzhT+6Z/tZNgi/qwjK/p0NgI5lLOA60AbApHZTPb?=
 =?us-ascii?q?4OnTxAIA6D2RHm6ZHj0oRk9nEagfMq98daXe3FOYF+BZ5fCjk9eShh/szgtTHK?=
 =?us-ascii?q?Sw2C9noVFGIMnUwbUED+8BjmU8Kp4WPBve1n1XzfZJWuQA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CeAQD0P+9Z/7BbRFBbGgEBAQECAQEBA?=
 =?us-ascii?q?QgBAQEBFQEBAQECAQEBAQgBAQEBgzSBUp5MBoEvmEsKhCYBgRQChF9DFAEBAQE?=
 =?us-ascii?q?BAQEBAQEBaiiCOAUBHgEFgjwBBTo/EAsYCRMSDy0bBoomEak3iyIBCyaDLoIHg?=
 =?us-ascii?q?Qk9hR2KegWhbQKUZoIJkSiVf4E5NiGBW4EHCEmCZYRfP4oYgVUBAQE?=
X-IPAS-Result: =?us-ascii?q?A0CeAQD0P+9Z/7BbRFBbGgEBAQECAQEBAQgBAQEBFQEBAQE?=
 =?us-ascii?q?CAQEBAQgBAQEBgzSBUp5MBoEvmEsKhCYBgRQChF9DFAEBAQEBAQEBAQEBaiiCO?=
 =?us-ascii?q?AUBHgEFgjwBBTo/EAsYCRMSDy0bBoomEak3iyIBCyaDLoIHgQk9hR2KegWhbQK?=
 =?us-ascii?q?UZoIJkSiVf4E5NiGBW4EHCEmCZYRfP4oYgVUBAQE?=
X-IronPort-AV: E=Sophos;i="5.43,427,1503352800"; 
   d="scan'208";a="297664873"
Received: from annexia.org ([80.68.91.176])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES256-GCM-SHA384; 24 Oct 2017 15:30:29 +0200
Received: from rich by annexia.org with local (Exim 4.89)
	(envelope-from <rich@annexia.org>)
	id 1e6zHm-0006PS-Vz; Tue, 24 Oct 2017 14:30:26 +0100
Date: Tue, 24 Oct 2017 14:30:26 +0100
From: "Richard W.M. Jones" <rich@annexia.org>
To: Simon Cruanes <simon.cruanes.2007@m4x.org>
Cc: Ivan Gotovchits <ivg@ieee.org>, David Allsopp <dra-news@metastack.com>,
	caml-list <caml-list@inria.fr>,
	Malcolm Matalka <mmatalka@gmail.com>
Message-ID: <20171024133026.uovvzdbnamnzoknv@annexia.org>
References: <86o9p2ywgc.fsf@gmail.com>
 <E51C5B015DBD1348A1D85763337FB6D9016D523CA2@Remus.metastack.local>
 <CALdWJ+zsx4vNWj8_32rev9pKt2j6yacGhai6UJQ7tsGVVLqYCg@mail.gmail.com>
 <20171020113815.GD32138@nunchakus.loria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20171020113815.GD32138@nunchakus.loria.fr>
User-Agent: NeoMutt/20170113 (1.7.2)
Subject: Re: [Caml-list] What if exn was not an open type?

On Fri, Oct 20, 2017 at 01:38:16PM +0200, Simon Cruanes wrote:
> Exceptions are also very useful as control structures sometimes. For
> example:
> 
> - exiting from a traversal (graph, tree, `Foo.iter` functions) early
> - being able to return a result from any point in a very large algorithm
>   (e.g. returning "sat" or "unsat" in a SAT solver, where the main
>   algorithm can span several hundreds or thousands of lines).

Since I first used OCaml I have wished for a simple (and type safe)
return statement.

Rich.
