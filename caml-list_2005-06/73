Return-Path: <weis@pauillac.inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id DD386BCAF
	for <caml-list@yquem.inria.fr>; Sun, 12 Jun 2005 05:00:10 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j5C30AsL004768
	for <caml-list@yquem.inria.fr>; Sun, 12 Jun 2005 05:00:10 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id FAA28100 for <caml-list@pauillac.inria.fr>; Sun, 12 Jun 2005 05:00:09 +0200 (MET DST)
Received: from ux9.sp.cs.cmu.edu (UX9.SP.CS.CMU.EDU [128.2.220.166])
	by nez-perce.inria.fr (8.13.0/8.13.0) with SMTP id j5C308AE004759
	for <caml-list@inria.fr>; Sun, 12 Jun 2005 05:00:09 +0200
Date: Sat, 11 Jun 2005 17:09:48 -0400
From: Eric Cooper <ecc@cmu.edu>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Threads vs. Fork
Message-ID: <20050611210948.GA17538@cs.cmu.edu>
Mail-Followup-To: caml-list@inria.fr
References: <132925.1118509794764.JavaMail.jtbryant@valdosta.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <132925.1118509794764.JavaMail.jtbryant@valdosta.edu>
User-Agent: Mutt/1.4i
Sender: ecc+@ux9.sp.cs.cmu.edu
X-Miltered: at nez-perce with ID 42ABA53A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 42ABA538.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 threads:01 api:01 stubs:01 bigarray:01 internals:01 ...:98 wrote:01 unix:01 fork:04 shared:04 somebody:07 edu:07 memory:08 memory:08 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Sat, Jun 11, 2005 at 01:09:54PM -0400, Jonathan T Bryant wrote:
> Does somebody have an extended Unix API that includes things like shared 
> memory (shmget(), shmat(), etc...)

If you're willing to write a few C stubs, you can use the Bigarray internals to
access memory that you've set up via mmap().

-- 
Eric C. Cooper          e c c @ c m u . e d u

