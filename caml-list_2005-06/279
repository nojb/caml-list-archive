Return-Path: <weis@pauillac.inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 2322DBCAF
	for <caml-list@yquem.inria.fr>; Thu, 30 Jun 2005 14:35:21 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j5UCZK1x031987
	for <caml-list@yquem.inria.fr>; Thu, 30 Jun 2005 14:35:20 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA16934 for <caml-list@pauillac.inria.fr>; Thu, 30 Jun 2005 14:35:20 +0200 (MET DST)
Received: from first.in-berlin.de (dialin-145-254-052-199.arcor-ip.net [145.254.52.199])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j5UCZJ4x018614
	for <caml-list@inria.fr>; Thu, 30 Jun 2005 14:35:19 +0200
Received: by first.in-berlin.de (Postfix, from userid 501)
	id 91F7510E422; Thu, 30 Jun 2005 14:35:01 +0200 (CEST)
Date: Thu, 30 Jun 2005 14:35:01 +0200
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Unix.waitpid
Message-ID: <20050630123501.GB321@first.in-berlin.de>
References: <26EB47FDD566A7469FC862DAF373792F07D4DA@kaiserslautern1.lmsintl.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <26EB47FDD566A7469FC862DAF373792F07D4DA@kaiserslautern1.lmsintl.com>
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde with ID 42C3E708.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 42C3E707.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; oliver:01 bandel:01 oliver:01 in-berlin:01 caml-list:01 waitpid:01 rec:01 waitpid:01 c-api:01 manpage:01 bandel:01 wrote:01 unix:01 unix:01 parameter:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.2
X-Spam-Level: 

On Thu, Jun 30, 2005 at 02:09:51PM +0200, Bauer, Christoph wrote:
> Hi,
> 
> my app should wait for some processes. This is done 
> by my function wait, which gets a pid, a idle function (e.g. ignore)
> + its value and a delay time between polling:
> 
> 
> let delay s = ignore (Unix.select [] [] [] s)
> 
> let wait ?(delay_time = 0.01) pid idle x =
>   let rec wait' () =
>     idle x;
>     delay delay_time;
>     let pid = try fst (Unix.waitpid [Unix.WNOHANG] pid) with _  -> 1 in
>       if pid <> 0 then wait' ()
>   in wait' ()

Does you have a valid pid (as calling parameter)?
You may better use 0 or -1 in the call to Unix.waitpid.

Maybe WUNTRACED would also makes sense as flag.
Maybe better not testing with "_" in try-with.


P.S.: Documentation could be better.
I had to look in the C-API manpage to know what parameters
the Unix.aitpid awaits.
That the one arg is the pid is mentioned in the documentation, but there
is no function call example, to identify the second arg as the wpid.


Ciao,
   Oliver Bandel

