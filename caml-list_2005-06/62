Return-Path: <jon@ffconsultancy.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 185D3BCAF
	for <caml-list@yquem.inria.fr>; Sat, 11 Jun 2005 01:52:50 +0200 (CEST)
Received: from ptb-relay04.plus.net (ptb-relay02.plus.net [212.159.14.213])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j5ANqnim021893
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Sat, 11 Jun 2005 01:52:49 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by ptb-relay04.plus.net with esmtp (Exim) id 1DgtIv-0007Am-9N
	for caml-list@yquem.inria.fr; Sat, 11 Jun 2005 00:52:49 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Caml on intel-OSX
Date: Sat, 11 Jun 2005 00:39:17 +0100
User-Agent: KMail/1.7.2
References: <1118295206.7145.165.camel@rosella.wigram> <36973.131.254.50.45.1118334009.squirrel@mail.irisa.fr> <1118357500.8693.80.camel@rosella.wigram>
In-Reply-To: <1118357500.8693.80.camel@rosella.wigram>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200506110039.18279.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 42AA27D1.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 compiler:01 bug:01 segfaults:01 bug:01 lablgl:01 ocamlopt:01 ocaml's:01 subset:01 ocaml:01 frog:98 wrote:01 native:02 caml:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Thursday 09 June 2005 23:51, John Skaller wrote:
> Whilst I personally prefer the ocaml native code compiler,
> at present I can't use it on my AMD64 as there appears
> to be a code generation bug in it for that platform --

Yipes! I'm about to release some commercial software for x86 and AMD64 and I 
really didn't want to hear this!

I've been experiencing segfaults on all platforms but I think this is a bug in 
lablGL rather than ocamlopt.

Do you think I shouldn't release for AMD64? How confident are you that this is 
a codegen bug? Does your code use only OCaml's theoretically safe subset?

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

