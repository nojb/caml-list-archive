Return-Path: <weis@pauillac.inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 07BFABC8E
	for <caml-list@yquem.inria.fr>; Thu, 23 Jun 2005 09:21:23 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j5N7LMcs018863
	for <caml-list@yquem.inria.fr>; Thu, 23 Jun 2005 09:21:22 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA32619 for <caml-list@pauillac.inria.fr>; Thu, 23 Jun 2005 09:21:22 +0200 (MET DST)
Received: from nproxy.gmail.com (nproxy.gmail.com [64.233.182.195])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j5N7LLCZ011495
	for <caml-list@inria.fr>; Thu, 23 Jun 2005 09:21:22 +0200
Received: by nproxy.gmail.com with SMTP id n15so44203nfc
        for <caml-list@inria.fr>; Thu, 23 Jun 2005 00:21:21 -0700 (PDT)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:reply-to:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=Xe4Us8HVnF8jXDqGauz8+TwzCnTeNcy2GbPdVDczJOjF8jxHjTIOQujY0yRJOAcWVT3qUJcRvv8znaDx+7Suf1yW5CBdg5VyfZpqVdAJFIijHs9OObKK04bvbtSaFJtfb27sUx0TFpp86zRo6l4+7rasmPitYwQa6h20x+rXSLU=
Received: by 10.48.239.10 with SMTP id m10mr29439nfh;
        Thu, 23 Jun 2005 00:21:21 -0700 (PDT)
Received: by 10.48.237.20 with HTTP; Thu, 23 Jun 2005 00:21:21 -0700 (PDT)
Message-ID: <3d13dcfc05062300215e4be9ee@mail.gmail.com>
Date: Thu, 23 Jun 2005 09:21:21 +0200
From: David MENTRE <david.mentre@gmail.com>
To: caml-list@inria.fr
Subject: How INRIA people envision OCaml's parallel future?
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
X-Miltered: at concorde with ID 42BA62F2.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 42BA62F1.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml's:01 ocaml:01 ocaml:01 runtime:01 threads:01 threads:01 parallelism:01 jocaml:01 mips:01 -thread:01 mips:01 ocaml-like:01 predictions:98 short:01 constructs:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_BY_IP autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

Hello OCaml hackers,

Several people on this list have expressed concerns about the current
limitation of OCaml runtime to work efficiently on multi-processor
machines (limitation related to the inability of current GC to
simultaneously support different threads if I've understood
correctly). I'm amongst them. On the other side, it is clear that
multi-core and multi-threaded processor are going to be widely
available in a short time frame, in embedded[1], desktop and high-end
machines.

How INRIA people are considering the parallel future of OCaml? Do you
consider improving the GC to support concurrent threads? Or do you
consider this a non issue?

More generally, do you plan to introduce new language constructs to
support parallelism? I'm thinking of Jocaml and Skeleton approach for
example. Or simply some libraries?

I know that predictions are quite difficult, especially about the
future, :) but I suppose INRIA people are thinking about those issues.
OCaml is a very exciting experiment of pragmatism and theory and I'm
curious of what might appear on the parallel topic.

Sincerely yours,
david

[1] At work we are using dual-core MIPS processor and 8-core, 8-thread
per core network processor for an embedded system. I've heard of 8-
and 16-core MIPS processor for embedded boards. Very powerful, but a
nightmare to program. I wish I had an OCaml-like language on the
network processor. :)

