Return-Path: <weis@pauillac.inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 4F514BCAF
	for <caml-list@yquem.inria.fr>; Wed, 15 Jun 2005 18:15:11 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j5FGFA7A008302
	for <caml-list@yquem.inria.fr>; Wed, 15 Jun 2005 18:15:11 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA30597 for <caml-list@pauillac.inria.fr>; Wed, 15 Jun 2005 18:15:10 +0200 (MET DST)
Received: from mx1.polytechnique.org (mx1.polytechnique.org [129.104.30.34])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j5FGFAw6023077
	for <caml-list@inria.fr>; Wed, 15 Jun 2005 18:15:10 +0200
Received: from [192.168.0.11] (falcal.net [81.56.73.55])
	(using TLSv1 with cipher RC4-SHA (128/128 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTP id 815593318B;
	Wed, 15 Jun 2005 18:15:09 +0200 (CEST)
In-Reply-To: <6b8a9142050615083945b03312@mail.gmail.com>
References: <7E5A2BF0-8CE7-4680-9D4B-60732DE9C8C6@m4x.org> <6b8a9142050615083945b03312@mail.gmail.com>
Mime-Version: 1.0 (Apple Message framework v730)
Content-Type: multipart/signed; micalg=sha1; boundary=Apple-Mail-4-958470366; protocol="application/pkcs7-signature"
Message-Id: <A57AF0B2-0861-423D-B3CB-D432D7E9B149@m4x.org>
From: Damien Bobillot <damien.bobillot@m4x.org>
Subject: Re: [Caml-list] Inter-module dependences [solved]
Date: Wed, 15 Jun 2005 18:15:06 +0200
To: caml-list@inria.fr
X-Mailer: Apple Mail (2.730)
X-Virus-Scanned: by amavisd-new-20030616-p10 at Polytechnique.org
X-DCC--Metrics: djali 32702; Body=1 Fuz1=1 Fuz2=1
X-Org-Mail: damien.bobillot.2002@polytechnique.org
X-Miltered: at concorde with ID 42B0540E.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 42B0540E.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; damien:01 damien:01 caml-list:01 dependences:01 flowed:01 sig:01 val:01 val:01 sig:01 struct:01 struct:01 pkcs:01 ...:98 ...:98 ....:98 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 


--Apple-Mail-4-958470366
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=ISO-8859-1;
	delsp=yes;
	format=flowed


Le 15 juin 05 =E0 17:39, Remi Vanicat a =E9crit :

> 2005/6/15, Damien Bobillot <damien.bobillot@m4x.org>:
>
>> I'm defining a graph structure compatible with the ocamlgraph =20
>> library.
>>
>> I want to be able to access all neighbors and edge to neighbors of a
>> vertex in 0(1), so I think I need to store the outgoing edge list of
>> each vertex in the vertex structure. I also need to be able to access
>> the source and destination of an edge in 0(1), so I store these
>> vertex in the edge structure.
>>
>> A standard Caml will be :
>>
>> type vertex =3D {
>>      label : int;
>>      out_edges : edge list;
>>      ...
>> } and edge =3D {
>>      label : int;
>>      src : vertex;
>>      dst : vertex;
>>      ...
>> }
>>
>> However, in ocamlgraph, the vertex and edge type must be defined by
>> modules of signatures (and I cannot modify it) :
>>
>> module type VERTEX =3D sig
>>      type t
>>      type label
>>      val create : label -> t
>>      val label : t -> label
>> end
>> module type EDGE =3D sig
>>      type t
>>      type label
>>      type vertex
>>      val create : vertex -> label -> vertex -> t
>>      val label : t -> label
>>      val src : t -> vertex
>>      val dst : t -> vertex
>> end
>>
>
> [...]
>
>
>> It works fine, but it doesn't respond to my problem : I want that V
>> use a type from E and at the same time E use a type of V.
>
> Why don't you do something like what follow ?
>
> type vertex =3D {
>       label : int;
>       out_edges : edge list;
>       ...
>  } and edge =3D {
>       label : int;
>       src : vertex;
>       dst : vertex;
>       ...
>  }
>
> module MyVertex : (VERTEX with t=3Dvertex and label=3Dint)=3D
> struct
>   type t=3Dvertex
>    ....
> end
>
> module MyEdge : (EDGE with t=3Dedge ...) =3D
> struct
>   type t =3D edge
>   ....
> end
>
> It should work with no problem.

Yes, it works !!!

Modules are powerful, but as every powerful things, it's hard to use =20
without a manual... (and I didn't found a good manual on the web, if =20
you know one I'll be interested).

Thank you very much

--=20
Damien Bobillot


--Apple-Mail-4-958470366
Content-Transfer-Encoding: base64
Content-Type: application/pkcs7-signature;
	name=smime.p7s
Content-Disposition: attachment;
	filename=smime.p7s

MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIGIjCCAtsw
ggJEoAMCAQICAw54xzANBgkqhkiG9w0BAQQFADBiMQswCQYDVQQGEwJaQTElMCMGA1UEChMcVGhh
d3RlIENvbnN1bHRpbmcgKFB0eSkgTHRkLjEsMCoGA1UEAxMjVGhhd3RlIFBlcnNvbmFsIEZyZWVt
YWlsIElzc3VpbmcgQ0EwHhcNMDUwNDEzMTc1MTAxWhcNMDYwNDEzMTc1MTAxWjBJMR8wHQYDVQQD
ExZUaGF3dGUgRnJlZW1haWwgTWVtYmVyMSYwJAYJKoZIhvcNAQkBFhdkYW1pZW4uYm9iaWxsb3RA
bTR4Lm9yZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ1TOYBqwJ42s0Fzz56jY1p0
fplGyikFgoNEUKGnOpqt4vpeoqUppAnORt2yvdQJxfIkhsWkrD/diiPS7MTF73wcxlSJtqYzVzPK
G/2WDm6dBinuWCIyWYFhtGedyxbap3kJW44H7cL7HUVVxZ0JhOIOTsjCoEzaeKnML7bctbIJeXEE
lErfbDv2jA1PDG1ru5dx+Q+AmbexX92ygnntE6aX3QZLSbhrytg4yCRdV8cOyQ9eFruZBI42RJv3
nJXevjUOr4n+y/7bzijAJj4BFyUU+dllvj6bmk5brnUXheCSOD0Ci20dqGNC1MyJ43b6MoIrbW7j
JwYIv12D6KuWoaUCAwEAAaM0MDIwIgYDVR0RBBswGYEXZGFtaWVuLmJvYmlsbG90QG00eC5vcmcw
DAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQQFAAOBgQB0u5b6wgwsbcyzDHJTzshlCn4gshxWtU/1
mH77gBCpsY8L554YV4/Tvm1PzmDzErm++drQf5HMy8sEFjmwLvNfBP0BqtkSqsdRFGR4wHzTjMhS
EW5LgmlaccqBQzqQrANtzglgBVbtmBDAV92qHjQslwHK4FohCRRzGl4DLQmqBDCCAz8wggKooAMC
AQICAQ0wDQYJKoZIhvcNAQEFBQAwgdExCzAJBgNVBAYTAlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENh
cGUxEjAQBgNVBAcTCUNhcGUgVG93bjEaMBgGA1UEChMRVGhhd3RlIENvbnN1bHRpbmcxKDAmBgNV
BAsTH0NlcnRpZmljYXRpb24gU2VydmljZXMgRGl2aXNpb24xJDAiBgNVBAMTG1RoYXd0ZSBQZXJz
b25hbCBGcmVlbWFpbCBDQTErMCkGCSqGSIb3DQEJARYccGVyc29uYWwtZnJlZW1haWxAdGhhd3Rl
LmNvbTAeFw0wMzA3MTcwMDAwMDBaFw0xMzA3MTYyMzU5NTlaMGIxCzAJBgNVBAYTAlpBMSUwIwYD
VQQKExxUaGF3dGUgQ29uc3VsdGluZyAoUHR5KSBMdGQuMSwwKgYDVQQDEyNUaGF3dGUgUGVyc29u
YWwgRnJlZW1haWwgSXNzdWluZyBDQTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAxKY8VXNV
+065yplaHmjAdQRwnd/p/6Me7L3N9VvyGna9fww6YfK/Uc4B1OVQCjDXAmNaLIkVcI7dyfArhVqq
P3FWy688Cwfn8R+RNiQqE88r1fOCdz0Dviv+uxg+B79AgAJk16emu59l0cUqVIUPSAR/p7bRPGEE
QB5kGXJgt/sCAwEAAaOBlDCBkTASBgNVHRMBAf8ECDAGAQH/AgEAMEMGA1UdHwQ8MDowOKA2oDSG
Mmh0dHA6Ly9jcmwudGhhd3RlLmNvbS9UaGF3dGVQZXJzb25hbEZyZWVtYWlsQ0EuY3JsMAsGA1Ud
DwQEAwIBBjApBgNVHREEIjAgpB4wHDEaMBgGA1UEAxMRUHJpdmF0ZUxhYmVsMi0xMzgwDQYJKoZI
hvcNAQEFBQADgYEASIzRUIPqCy7MDaNmrGcPf6+svsIXoUOWlJ1/TCG4+DYfqi2fNi/A9BxQIJNw
PP2t4WFiw9k6GX6EsZkbAMUaC4J0niVQlGLH2ydxVyWN3amcOY6MIE9lX5Xa9/eH1sYITq726jTl
EBpbNU1341YheILcIRk13iSx0x1G/11fZU8xggLnMIIC4wIBATBpMGIxCzAJBgNVBAYTAlpBMSUw
IwYDVQQKExxUaGF3dGUgQ29uc3VsdGluZyAoUHR5KSBMdGQuMSwwKgYDVQQDEyNUaGF3dGUgUGVy
c29uYWwgRnJlZW1haWwgSXNzdWluZyBDQQIDDnjHMAkGBSsOAwIaBQCgggFTMBgGCSqGSIb3DQEJ
AzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTA1MDYxNTE2MTUwN1owIwYJKoZIhvcNAQkE
MRYEFDxuTm5HdBhJ4UkTbSyH/4FSLakmMHgGCSsGAQQBgjcQBDFrMGkwYjELMAkGA1UEBhMCWkEx
JTAjBgNVBAoTHFRoYXd0ZSBDb25zdWx0aW5nIChQdHkpIEx0ZC4xLDAqBgNVBAMTI1RoYXd0ZSBQ
ZXJzb25hbCBGcmVlbWFpbCBJc3N1aW5nIENBAgMOeMcwegYLKoZIhvcNAQkQAgsxa6BpMGIxCzAJ
BgNVBAYTAlpBMSUwIwYDVQQKExxUaGF3dGUgQ29uc3VsdGluZyAoUHR5KSBMdGQuMSwwKgYDVQQD
EyNUaGF3dGUgUGVyc29uYWwgRnJlZW1haWwgSXNzdWluZyBDQQIDDnjHMA0GCSqGSIb3DQEBAQUA
BIIBADr8b0H6NEYR0b3bjwABQMMIKqnVdxPKorXRWFngmOCg9VPCheS5IDemR3yObR4XNkW2LfS1
mh5GwNVsrmubsINPYjCKDPgiDtAMj49y+7UJlBou2jVscbkqkVXucxVTxMm1BvZvB5o5J4ucFDgn
n4qRCDRX6Lj0I6z3p+VajgFbma7ZzEW9grcsUxH2Vj3NRfNkHiBv2E/k9to0XPPzgVuwwNWzFsZN
lkOtvf79yKo9Iueo+6GmyjJ9SQ1yWQIlJ+eqS9h98piOmMZ2WuyRuvctHW6V03E7Lur/BdRGvfRZ
7WBc5XLjn3mfOIE4/GSXOgwNgvRaLLD8r7v8mMtlk8YAAAAAAAA=

--Apple-Mail-4-958470366--

