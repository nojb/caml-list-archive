Return-Path: <nilekim@gmail.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 0EF78BCAF
	for <caml-list@yquem.inria.fr>; Tue, 14 Jun 2005 07:28:35 +0200 (CEST)
Received: from wproxy.gmail.com (wproxy.gmail.com [64.233.184.204])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j5E5SYFC004469
	for <caml-list@yquem.inria.fr>; Tue, 14 Jun 2005 07:28:34 +0200
Received: by wproxy.gmail.com with SMTP id 55so456103wri
        for <caml-list@yquem.inria.fr>; Mon, 13 Jun 2005 22:28:33 -0700 (PDT)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:reply-to:to:subject:mime-version:content-type;
        b=WtEEJpKKB/0RUTtjpOE7CHzpJnllsz0tb0l9fMlnpT4AswKk4m6ONSoc0JrVE+fj6ajuly1fIDsJCri3HBOWlG62ca7hFCbHiG4wwXPIYRUTmvn5nkX5JFyqO3ZWD0/SHTmrEG+tl0ZfQlXTjUSN8Mc/AKJJgi28v4V1cOcNYhc=
Received: by 10.54.27.40 with SMTP id a40mr3271835wra;
        Mon, 13 Jun 2005 22:28:33 -0700 (PDT)
Received: by 10.54.78.4 with HTTP; Mon, 13 Jun 2005 22:28:33 -0700 (PDT)
Message-ID: <2a1a1a0c050613222820c2a916@mail.gmail.com>
Date: Tue, 14 Jun 2005 01:28:33 -0400
From: Mike Lin <nilekim@gmail.com>
Reply-To: mikelin@mit.edu
To: caml-list@yquem.inria.fr
Subject: Yaxpo XML parser
Mime-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_15416_11622765.1118726913704"
X-Miltered: at nez-perce with ID 42AE6B02.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; yaxpo:01 parser:01 yaxpo:01 parser:01 mikelin:01 -mike:01 mikelin:01 caml-list:01 ocaml:01 parsers:01 recursion:01 iteration:01 amusing:01 parsing:01 'real':01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.3 required=5.0 tests=HTML_40_50,HTML_MESSAGE,
	HTML_TAG_EXIST_TBODY,RCVD_BY_IP autolearn=disabled version=3.0.2
X-Spam-Level: 

------=_Part_15416_11622765.1118726913704
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

I have gotten a few requests to revive the Yaxpo XML parser which I
wrote a few years back. I have restored the web site at a new location
in case anyone missed it.

http://compbio.mit.edu/mikelin/yaxpo/

-Mike

----

 Date: 2002-07-25 (03:06)  From: Mike Lin <mikelin@M...>  Subject: [Caml-li=
st]=20
yet another xml parser=20
none of the ocaml xml parsers out there quite served my needs, so i
wrote my own. for anyone who's interested, i put up a page about it.

http://mikelin.mit.edu/yaxpo/

the most interesting thing about the parser is that it is all hand
written in explicit continuation-passing style (CPS) instead of using
recursion or iteration. this allows one to do some amusing things in
clever ways; for example, it is possible to "pause" parsing, returning
control to the caller, and then pick up where it left off at some later
time.

i am using the parser in conjunction with another project i'm working
on. it's still quite preliminary, but i'm using it already to do some
'real' stuff, so i hope it can eventually be useful standalone.

------=_Part_15416_11622765.1118726913704
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

I have gotten a few requests to revive the Yaxpo XML parser which I<br>
wrote a few years back. I have restored the web site at a new location<br>
in case anyone missed it.<br>
<br>
<a onclick=3D"return top.js.OpenExtLink(window,event,this)" href=3D"http://=
compbio.mit.edu/mikelin/yaxpo/" target=3D"_blank">http://compbio.mit.edu/mi=
kelin/yaxpo/</a><br>
<br>
-Mike<br>
<br>
----<br>
<br>
<table class=3D"mlarc-message-headers">
<tbody><tr><td class=3D"header-name">Date:</td>
            <td class=3D"date">2002-07-25
  (03:06)
</td>
          </tr>
          <tr>
            <td class=3D"header-name">From:</td>
            <td class=3D"from">Mike Lin &lt;mikelin@M...&gt;</td>
          </tr>
          <tr>
            <td class=3D"header-name">Subject:</td>
            <td class=3D"subject">[Caml-list] yet another xml parser</td></=
tr></tbody>
</table>
<br>
none of the ocaml xml parsers out there quite served my needs, so i<br>
wrote my own. for anyone who's interested, i put up a page about it.<br>
<br>
<a onclick=3D"return top.js.OpenExtLink(window,event,this)" href=3D"http://=
mikelin.mit.edu/yaxpo/" target=3D"_blank">http://mikelin.mit.edu/yaxpo/</a>=
<br>
<br>
the most interesting thing about the parser is that it is all hand<br>
written in explicit continuation-passing style (CPS) instead of using<br>
recursion or iteration. this allows one to do some amusing things in<br>
clever ways; for example, it is possible to &quot;pause&quot; parsing, retu=
rning<br>
control to the caller, and then pick up where it left off at some later<br>
time.<br>
<br>
i am using the parser in conjunction with another project i'm working<br>
on. it's still quite preliminary, but i'm using it already to do some<br>
'real' stuff, so i hope it can eventually be useful standalone.


------=_Part_15416_11622765.1118726913704--

