Return-Path: <garrigue@math.nagoya-u.ac.jp>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id C6788BB84
	for <caml-list@yquem.inria.fr>; Sat, 19 Jul 2008 04:16:09 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAD/rgEiCNhAB/2dsb2JhbACvYg
X-IronPort-AV: E=Sophos;i="4.31,214,1215381600"; 
   d="scan'208";a="13261964"
Received: from kurims.kurims.kyoto-u.ac.jp ([130.54.16.1])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 19 Jul 2008 04:16:08 +0200
Received: from localhost (orion [130.54.16.5])
	by kurims.kurims.kyoto-u.ac.jp (8.13.8/8.13.8) with ESMTP id m6J2Fvfa004089;
	Sat, 19 Jul 2008 11:15:58 +0900 (JST)
Date: Sat, 19 Jul 2008 11:15:41 +0900 (JST)
Message-Id: <20080719.111541.241450042.garrigue@math.nagoya-u.ac.jp>
To: jeremy.yallop@ed.ac.uk
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Troublesome nodes
From: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <20080718.225528.233096504.garrigue@math.nagoya-u.ac.jp>
References: <488066C9.4050904@ed.ac.uk>
	<20080718.220214.241921104.garrigue@math.nagoya-u.ac.jp>
	<20080718.225528.233096504.garrigue@math.nagoya-u.ac.jp>
X-Mailer: Mew version 4.2 on Emacs 22.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; nodes:01 expansions:01 caml-list:01 int:01 int:01 loops:02 garrigue:03 garrigue:03 jacques:03 jacques:03 let:03 nagoya-u:04 nagoya-u:04 side-effect:04 problem:05 

From: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>

> This is now fixed. I just hope this does not break anything...
> It should be ok, but please report any new non-termination problem
> immediately :-)

OK, my first solution was not correct, and caused infinite loops with

  type t = <a:u; b:int> and u = private t
  let f x = (x : t :> <a:'a; b:int> as 'a)

This is now fixed by distinguishing public and private expansions in
the expansion cache. This time I see no side-effect.

Jacques Garrigue

