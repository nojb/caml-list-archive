Return-Path: <andre@digirati.com.br>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 6ACA2BB84
	for <caml-list@yquem.inria.fr>; Mon, 14 Jul 2008 19:50:12 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvMBAEEue0jIuX5EiGdsb2JhbACSLgEBAQ8gmGo
X-IronPort-AV: E=Sophos;i="4.30,360,1212357600"; 
   d="scan'208";a="27312186"
Received: from mta21.f3.k8.com.br ([200.185.126.68])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 14 Jul 2008 19:50:11 +0200
Received: from localhost (localhost [127.0.0.1])
	by smtpa.f3.k8.com.br (Postfix) with ESMTP id 9D7F328000A0;
	Mon, 14 Jul 2008 17:50:09 +0000 (GMT)
X-Virus-Scanned: amavisd-new at k8.com.br
Received: from smtpa.f3.k8.com.br ([127.0.0.1])
	by localhost (mta21.f3.k8.com.br [127.0.0.1]) (amavisd-new, port 10024)
	with LMTP id HGMm0Ptbj5UY; Mon, 14 Jul 2008 17:50:09 +0000 (GMT)
Received: from [10.7.5.105] (fosforo.k8.com.br [200.185.109.125])
	by smtpa.f3.k8.com.br (Postfix) with ESMTP id D2DAB2800097;
	Mon, 14 Jul 2008 17:50:08 +0000 (GMT)
Subject: Re: [Caml-list] Mutually recursive types in different modules
From: Andre Nathan <andre@digirati.com.br>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <200807141804.32640.jon@ffconsultancy.com>
References: <1216054202.29061.2.camel@andre.mz.digirati.com.br>
	 <200807141804.32640.jon@ffconsultancy.com>
Content-Type: text/plain; charset=utf-8
Date: Mon, 14 Jul 2008 14:50:16 -0300
Message-Id: <1216057816.29061.5.camel@andre.mz.digirati.com.br>
Mime-Version: 1.0
X-Mailer: Evolution 2.22.2 
Content-Transfer-Encoding: 8bit
X-Spam: no; 0.00; recursive:01 0100,:01 ocaml:01 recursion:01 polymorphism:01 recursive:01 pointer:01 ocaml:01 nathan:98 beginners:01 wrote:01 caml-list:01 modules:02 modules:02 groups:02 

On Mon, 2008-07-14 at 18:04 +0100, Jon Harrop wrote:
> Yes. See the OCaml Journal article "Tricks with recursion: knots, modules and 
> polymorphism" or Google for the phrase "untying the recursive knot".

Thanks for the pointer. I've found the discussion at

   http://tech.groups.yahoo.com/group/ocaml_beginners/message/9062

where your and RÃ©mi's suggestions were extremely helpful.

Best,
Andre

