Return-Path: <andre@digirati.com.br>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 3CA6CBB84
	for <caml-list@yquem.inria.fr>; Mon, 14 Jul 2008 18:49:59 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvMBANQge0jIuX5DiGdsb2JhbACSLwEBAQ8gmB8
X-IronPort-AV: E=Sophos;i="4.30,360,1212357600"; 
   d="scan'208";a="15098776"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 14 Jul 2008 18:49:59 +0200
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id m6EGnwiI032430
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Mon, 14 Jul 2008 18:49:58 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvMBANQge0jIuX5DiGdsb2JhbACSLwEBAQ8gmB8
X-IronPort-AV: E=Sophos;i="4.30,360,1212357600"; 
   d="scan'208";a="15098775"
Received: from mta20.f3.k8.com.br ([200.185.126.67])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 14 Jul 2008 18:49:57 +0200
Received: from localhost (localhost [127.0.0.1])
	by smtpa.f3.k8.com.br (Postfix) with ESMTP id 569A72800095
	for <caml-list@inria.fr>; Mon, 14 Jul 2008 16:49:55 +0000 (GMT)
X-Virus-Scanned: amavisd-new at k8.com.br
Received: from smtpa.f3.k8.com.br ([127.0.0.1])
	by localhost (mta20.f3.k8.com.br [127.0.0.1]) (amavisd-new, port 10024)
	with LMTP id KK-0yX3SAQdm for <caml-list@inria.fr>;
	Mon, 14 Jul 2008 16:49:55 +0000 (GMT)
Received: from [10.7.5.105] (fosforo.k8.com.br [200.185.109.125])
	by smtpa.f3.k8.com.br (Postfix) with ESMTP id 2B89D2800092
	for <caml-list@inria.fr>; Mon, 14 Jul 2008 16:49:54 +0000 (GMT)
Subject: Mutually recursive types in different modules
From: Andre Nathan <andre@digirati.com.br>
To: caml-list@inria.fr
Content-Type: text/plain
Date: Mon, 14 Jul 2008 13:50:02 -0300
Message-Id: <1216054202.29061.2.camel@andre.mz.digirati.com.br>
Mime-Version: 1.0
X-Mailer: Evolution 2.22.2 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 487B83B6.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; recursive:01 foo:01 recursive:01 nathan:98 int:01 int:01 define:02 modules:02 modules:02 types:05 types:05 mutually:06 mutually:06 definition:07 thus:10 

Hello

Say I have the following type definition:

  type a = { x: int; foo: b } and  b = { y: int; bar: a }

Is it possible to define types a and b in their own files (thus in
modules A and B) and still allow them to be mutually recursive?

Thanks in advance,
Andre

