Return-Path: <peng.zang@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 7B921BBAF
	for <caml-list@yquem.inria.fr>; Fri, 11 Jul 2008 16:53:32 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjEFALEQd0jRVcisYWdsb2JhbACRZTkaBBwFlkmGIA
X-IronPort-AV: E=Sophos;i="4.30,345,1212357600"; 
   d="scan'208";a="27241946"
Received: from wf-out-1314.google.com ([209.85.200.172])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 11 Jul 2008 16:53:31 +0200
Received: by wf-out-1314.google.com with SMTP id 24so3925019wfg.15
        for <caml-list@yquem.inria.fr>; Fri, 11 Jul 2008 07:53:30 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:from:reply-to:to:subject:date
         :user-agent:cc:references:in-reply-to:content-type
         :content-transfer-encoding:content-disposition:message-id;
        bh=oaU9D6TmR7Yt96wLQrkXwom3o/YsB8xs93rH4MTdxK8=;
        b=HuuQxfOBlc1QI+Oob1ceb2XvRkmqwdLWWZrAFhtbD2J1mj9RXQGjq/NxWPnPh2cslI
         w4EyNgqMRYb/PDAGU1f3LYTJ5cnYGytg5Vpweq7F1v6J//tbOAM+LABnnDFaOnJ2+OsZ
         yJGaDEeIpqqjp/KksagNpVR3afU8DfAMHEHK4=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=from:reply-to:to:subject:date:user-agent:cc:references:in-reply-to
         :content-type:content-transfer-encoding:content-disposition
         :message-id;
        b=mF+HFRX6Bo4Z11ePtH1UVoT6RM8VmBmXAaBkyp9mcteoIYBFM4om53qvjqEZu2L0As
         32iq7ebVGofab7tErsHeQ7Vzfb8dqg+Mhwc4gM+a0qK1OvTQxlsse+PdtA1teBy6tx+a
         pkv9EChQeiHes5vi2kwHbNaQG5WX0x51QcTsQ=
Received: by 10.142.230.11 with SMTP id c11mr3143074wfh.334.1215788009861;
        Fri, 11 Jul 2008 07:53:29 -0700 (PDT)
Received: from lawn-143-215-204-204.lawn.gatech.edu ( [143.215.204.204])
        by mx.google.com with ESMTPS id 8sm873966ywg.6.2008.07.11.07.53.28
        (version=TLSv1/SSLv3 cipher=RC4-MD5);
        Fri, 11 Jul 2008 07:53:28 -0700 (PDT)
From: Peng Zang <peng.zang@gmail.com>
Reply-To: peng.zang@gmail.com
To: Jon Harrop <jon@ffconsultancy.com>
Subject: Re: [Caml-list] thousands of CPU cores
Date: Fri, 11 Jul 2008 10:53:24 -0400
User-Agent: KMail/1.9.7
Cc: caml-list@yquem.inria.fr
References: <c6c368760807092257v7a125fey534fbc6d5444d14@mail.gmail.com> <200807100944.29221.peng.zang@gmail.com> <200807101500.03079.jon@ffconsultancy.com>
In-Reply-To: <200807101500.03079.jon@ffconsultancy.com>
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200807111053.27070.peng.zang@gmail.com>
X-Spam: no; 0.00; hash:01 ocaml:01 run-time:01 ocaml:01 parallelism:01 parallelism:01 peng:98 peng:98 cnet:98 researched:98 wrote:01 exception:01 caml-list:01 algorithm:01 caml:02 

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

On Thursday 10 July 2008 10:00:02 am Jon Harrop wrote:
> Today's biggest shared-memory supercomputers already have thousands of
> cores.
>
> > Also, this is a CNET article.. not exactly known for being in depth or
> > well researched and this article is no exception.  It is an article based
> > entirely on a few speculative comments of some Intel guys.  I wouldn't
> > take it too seriously.
> >
> > Personally, I can see why the Caml development team opted not to put
> > effort into dealing with shared-memory systems.
>
> The OCaml development team put huge effort into their concurrent run-time.

No, don't get me wrong, I'm all about concurrency and I'm glad the OCaml dev 
team put a lot of effort into it.  I'm talking about specific optimizations 
for shared-memory architectures.

> > It is a stop-gap solution...
>
> That is not true. Many-core machines will always be decomposed into
> shared-memory clusters of as many cores as possible because shared memory
> parallelism will always be orders of magnitude more efficient than
> distributed parallelism.

Hmm... that's a good point.  Although, I want to point out that parallel 
algorithm design (and hardware design) isn't nearly as well studied.

Peng
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.7 (GNU/Linux)

iD8DBQFId3PnfIRcEFL/JewRApH6AKDBI5Wd95Gc6YIt/nvU41lIdiaw2ACfcONA
YX8PCVBkcnSYkN3R8MC1yys=
=rkJx
-----END PGP SIGNATURE-----

