Return-Path: <peng.zang@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 79539BBAF
	for <caml-list@yquem.inria.fr>; Thu, 10 Jul 2008 15:45:05 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ar8AAMSudUhKfSwedWdsb2JhbACSGEMBDAMKBw+XRIcI
X-IronPort-AV: E=Sophos;i="4.30,338,1212357600"; 
   d="scan'208";a="27202770"
Received: from yx-out-2324.google.com ([74.125.44.30])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 10 Jul 2008 15:45:04 +0200
Received: by yx-out-2324.google.com with SMTP id 3so924019yxj.3
        for <caml-list@yquem.inria.fr>; Thu, 10 Jul 2008 06:45:04 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:from:reply-to:to:subject:date
         :user-agent:cc:references:in-reply-to:content-type
         :content-transfer-encoding:content-disposition:message-id;
        bh=P/uHXZryNVIpvTDGMf9A2riEoPcwHf/QZCUd6opPWVE=;
        b=icPuOFvAiz7XmhMweE8dDLeSOoZVTwsQ9FEcvChCmw9upeJU6iz1QvLlYffWxpl3ml
         0ruNGZMuiOGY6PLdGEz3muJU/UQVhHwYqGk5rAxjdjlKIrEUofgIqPNNHXTxbvjwfLud
         JKuueww/TFvhR90G8mcyvduj/tEUY4hzLQjBI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=from:reply-to:to:subject:date:user-agent:cc:references:in-reply-to
         :content-type:content-transfer-encoding:content-disposition
         :message-id;
        b=ECJDByJa+r/U2Pf2HtVEUhbT/JOWbzTYpmflDmu7arh6izCPVBsgF3t2xi2M1y1QMQ
         tqaB5lUrj6EbQ66elWkJN/G2tqcE+8bKz00rnjA8gEISk1Z+dsdqS/DQNKA9flURtsZG
         GRlaFU34BlzYvZV7xTlXa01Hdqm0djdTOyqn8=
Received: by 10.114.39.16 with SMTP id m16mr10811182wam.98.1215697501465;
        Thu, 10 Jul 2008 06:45:01 -0700 (PDT)
Received: from lawn-143-215-204-204.lawn.gatech.edu ( [143.215.204.204])
        by mx.google.com with ESMTPS id 5sm26721ywl.4.2008.07.10.06.44.30
        (version=TLSv1/SSLv3 cipher=RC4-MD5);
        Thu, 10 Jul 2008 06:45:00 -0700 (PDT)
From: Peng Zang <peng.zang@gmail.com>
Reply-To: peng.zang@gmail.com
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] thousands of CPU cores
Date: Thu, 10 Jul 2008 09:44:25 -0400
User-Agent: KMail/1.9.7
Cc: "J C" <jhc0033@gmail.com>
References: <c6c368760807092257v7a125fey534fbc6d5444d14@mail.gmail.com>
In-Reply-To: <c6c368760807092257v7a125fey534fbc6d5444d14@mail.gmail.com>
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200807100944.29221.peng.zang@gmail.com>
X-Spam: no; 0.00; hash:01 coherence:01 jocaml:01 ocaml:01 peng:98 peng:98 cnet:98 cnet:98 researched:98 exception:01 caml-list:01 computation:01 caml:02 caml:02 paradigms:02 

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1


On Thursday 10 July 2008 01:57:44 am J C wrote:
> I know that Caml team wanted to see if many-core shared-memory systems
> were going to stick around before bothering with Caml development that
> takes advantage of them.
>
> Well, it looks like they are here to stay, after all:
>
> http://news.cnet.com/8301-13924_3-9981760-64.html
>

This article doesn't say anything about whether the many-core system will be 
shared-memory.  Remember, a shared memory architecture has to deal with cache 
and memory coherence.  The prevailing view is that the overhead for such an 
approach does not scale.  For massively parallel computation we must turn to 
message passing or barrier/sync paradigms.

I am doubtful that a thousand core machine will be shared-memory based.

Also, this is a CNET article.. not exactly known for being in depth or well 
researched and this article is no exception.  It is an article based entirely 
on a few speculative comments of some Intel guys.  I wouldn't take it too 
seriously.

Personally, I can see why the Caml development team opted not to put effort 
into dealing with shared-memory systems.  It is a stop-gap solution.  That 
said, it is an important stop-gap solution and the gap may be a while so I 
can defintely understand why some people (eg. Jon) wish very hard for them to 
do something about it.  But as previous posts have mentioned, there's JoCaml, 
and MPI for OCaml, etc..

Peng

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.7 (GNU/Linux)

iD8DBQFIdhI9fIRcEFL/JewRAtJAAKC2ec3IIMIdMPaUpEiOXIR+uICumwCfe88F
Ss7DtspzVZKK7sMiw/mXRqY=
=9lhT
-----END PGP SIGNATURE-----

