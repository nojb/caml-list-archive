Return-Path: <fabricemarchant@free.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id CBBAEBBAF
	for <caml-list@yquem.inria.fr>; Mon,  7 Jul 2008 22:27:05 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqMCAAIZckjUGyobgWdsb2JhbACBXJEBAQEQIAOYToU/
X-IronPort-AV: E=Sophos;i="4.30,318,1212357600"; 
   d="scan'208";a="27106189"
Received: from smtp1-g19.free.fr ([212.27.42.27])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 07 Jul 2008 22:27:05 +0200
Received: from smtp1-g19.free.fr (localhost.localdomain [127.0.0.1])
	by smtp1-g19.free.fr (Postfix) with ESMTP id 0DDE91AB2BE
	for <caml-list@yquem.inria.fr>; Mon,  7 Jul 2008 22:27:05 +0200 (CEST)
Received: from localhost.localdomain (c5850-a2-3-62-147-11-140.dial.proxad.net [62.147.11.140])
	by smtp1-g19.free.fr (Postfix) with ESMTP id 2250A1AB2AE
	for <caml-list@yquem.inria.fr>; Mon,  7 Jul 2008 22:27:03 +0200 (CEST)
Date: Mon, 7 Jul 2008 20:28:39 +0200
From: Fabrice Marchant <fabricemarchant@free.fr>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] functions' recursive construction
Message-ID: <20080707202839.272a4b0b@free.fr>
In-Reply-To: <a58674cc0807071304x1640d670sde3045a0920a5922@mail.gmail.com>
References: <b45cc0660705221617x4ad48c46j3a1ad1c022f33d0e@mail.gmail.com>
 <20080707200128.4e125865@free.fr>
 <a58674cc0807071304x1640d670sde3045a0920a5922@mail.gmail.com>
X-Mailer: Claws Mail 3.2.0 (GTK+ 2.12.10; i486-pc-linux-gnu)
X-Face: 
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; recursive:01 coq:01 swift:98 wrote:01 caml-list:01 lisp:02 neumann:02 hint:04 types:05 jul:05 guessed:07 cases:08 cases:08 function:08 fabrice:08 

On Mon, 7 Jul 2008 15:04:17 -0500
"William Neumann" <wneumann@gmail.com> wrote:

> For a quick hint as to why you cannot write such a function, ask
> yourself what the type of f would be.
> 
> Consider just the two cases of the type of (f 1) and (f 2).

Thanks for your swift answer,

So it's 'No', as I guessed, because the types of your two cases are different.

After Coq, maybe could we program this in Lisp ?

Regards,

Fabrice

