Return-Path: <alain@frisch.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 23BEDBBAF
	for <caml-list@yquem.inria.fr>; Thu, 24 Jul 2008 17:14:46 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAMw5iEjAXQIm/2dsb2JhbACxUQ
X-IronPort-AV: E=Sophos;i="4.31,246,1215381600"; 
   d="scan'208";a="13420872"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 24 Jul 2008 17:14:40 +0200
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id m6OFEYPZ031410
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Thu, 24 Jul 2008 17:14:40 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AosGAMw5iEhQDPIyWmdsb2JhbACSSgEZBAQGEwSeSA
X-IronPort-AV: E=Sophos;i="4.31,246,1215381600"; 
   d="scan'208";a="15459374"
Received: from smtp23.orange.fr ([80.12.242.50])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 24 Jul 2008 17:14:37 +0200
Received: from me-wanadoo.net (localhost [127.0.0.1])
	by mwinf2303.orange.fr (SMTP Server) with ESMTP id 06AD41C00094;
	Thu, 24 Jul 2008 17:14:37 +0200 (CEST)
Received: from [192.168.1.66] (APuteaux-154-1-59-95.w81-249.abo.wanadoo.fr [81.249.66.95])
	by mwinf2303.orange.fr (SMTP Server) with ESMTP id C0BB91C00092;
	Thu, 24 Jul 2008 17:14:36 +0200 (CEST)
X-ME-UUID: 20080724151436789.C0BB91C00092@mwinf2303.orange.fr
Message-ID: <48889C59.8080806@frisch.fr>
Date: Thu, 24 Jul 2008 17:14:33 +0200
From: Alain Frisch <alain@frisch.fr>
User-Agent: Thunderbird 2.0.0.16 (Windows/20080708)
MIME-Version: 1.0
To: "Dr. Thomas Fischbacher" <t.fischbacher@soton.ac.uk>
Cc: dmitry grebeniuk <gds-mlsts@moldavcable.com>,
	"caml-list@inria.fr" <caml-list@inria.fr>
Subject: Re: [Caml-list] Memory statistics tool
References: <48870DD8.4050906@soton.ac.uk>	<1497034692.20080723154431@moldavcable.com> <48872D6E.20209@soton.ac.uk> <48872F38.30609@frisch.fr> <48887A16.1070906@soton.ac.uk>
In-Reply-To: <48887A16.1070906@soton.ac.uk>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 48889C5B.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; frisch:01 frisch:01 hash:01 hash:01 hashtbl:01 struct:01 hashtbl:01 equality:01 polymorphic:01 polymorphic:01 wrote:01 wrote:01 caml-list:01 functions:01 alain:01 

Dr. Thomas Fischbacher wrote:
> Alain Frisch wrote:
>> As long as the data structure supports the polymorphic hash function, it
>> should work to simply use a regular hash table with the polymorphic hash
>> function and physical equality, as in:
>>
>> module S = Hashtbl.Make(struct
>>    type t = Obj.t
>>    let hash = Hashtbl.hash
>>    let equal = (==)
>> end);;
> 
> Why? (I.e. I'm not convinced yet.)

The two functions (hash and equal) are invariant w.r.t. changes of 
physical memory location of their arguments.

-- Alain

