Return-Path: <keiko@kurims.kyoto-u.ac.jp>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 96F14BBAF
	for <caml-list@yquem.inria.fr>; Sat, 12 Jul 2008 09:34:09 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAAv7d0jAXQIm/2dsb2JhbACoeA
X-IronPort-AV: E=Sophos;i="4.30,349,1212357600"; 
   d="scan'208";a="27258728"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 12 Jul 2008 09:34:09 +0200
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id m6C7Y8Zh016950
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Sat, 12 Jul 2008 09:34:08 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAL/7d0iCNhAB/2dsb2JhbACocg
X-IronPort-AV: E=Sophos;i="4.30,349,1212357600"; 
   d="scan'208";a="15047960"
Received: from kurims.kurims.kyoto-u.ac.jp ([130.54.16.1])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 12 Jul 2008 09:34:06 +0200
Received: from localhost (silicon [130.54.16.72])
	by kurims.kurims.kyoto-u.ac.jp (8.13.8/8.13.8) with ESMTP id m6C7Y3Tg011068;
	Sat, 12 Jul 2008 16:34:03 +0900 (JST)
Date: Sat, 12 Jul 2008 16:34:03 +0900 (JST)
Message-Id: <20080712.163403.68558844.keiko@kurims.kyoto-u.ac.jp>
To: jun.furuse@gmail.com
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Recursive module and class
From: Keiko Nakata <keiko@kurims.kyoto-u.ac.jp>
In-Reply-To: <87abgqbplw.wl%jun.furuse@gmail.com>
References: <87abgqbplw.wl%jun.furuse@gmail.com>
X-Mailer: Mew version 4.2 on Emacs 20.7 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 48785E70.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; recursive:01 recursive:01 variants:01 checker:01 bug:01 checker:01 polymorphic:01 typing:01 caml-list:01 caml-list:01 define:02 modules:02 modules:02 caml:02 interaction:02 

Hello.

To the best of my knowledge, there is subtle interaction 
between typing of recursive modules and unfolding of recursive structural types,
i.e, classes and polymorphic variants. 
I remember Jacques has hit a similar problem:
http://caml.inria.fr/pub/ml-archives/caml-list/2008/02/de4c1ddaa8bf3c0ef9350d8fb4f1e8f7.en.html

My understanding is that with recursive modules you may define two types 
that are equivalent but do not join together by simple unfolding 
of abbreviations; this seems to confuse the type checker. 
I believe this is a known bug of the current implementation
of the type checker. 

With best regards,
Keiko


