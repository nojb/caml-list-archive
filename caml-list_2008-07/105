Return-Path: <julian.atkinson71@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.6 required=5.0 tests=HTML_00_10,HTML_MESSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 09358BBAF
	for <caml-list@yquem.inria.fr>; Sat, 12 Jul 2008 00:16:08 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AiwGAPd4d0hKfS4fYWdsb2JhbACCco5xORoEHJFthh8
X-IronPort-AV: E=Sophos;i="4.30,347,1212357600"; 
   d="scan'208";a="27252304"
Received: from yw-out-2324.google.com ([74.125.46.31])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 12 Jul 2008 00:15:42 +0200
Received: by yw-out-2324.google.com with SMTP id 5so1762004ywb.3
        for <caml-list@yquem.inria.fr>; Fri, 11 Jul 2008 15:15:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to
         :subject:mime-version:content-type;
        bh=cDUAVrUqjN7Xrr9wcHwzXRpsSj1R1iL1EO5TDgMAzCo=;
        b=g/BPNBsnkl3cUIw4fF4HYQavBJ81RYdqfUx2YLn5iMbbBODKFWebyNJdTGitBT8f9V
         lFZxOYF3pZWjAMKyGA7y0mOx7R/axzaXt4AwWc5uji3gGHQxe1pq34m7koUcdxtqRFZh
         en6xDRSDWghjgmDt0TjgFlbuAFFYAL6W201SU=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:mime-version:content-type;
        b=oAJGabd4edkzOn6Pobweftpvx5Xw/fmKhKFQQGQgP5vgX5b3+gCRYYy+bVpWoioxEi
         s6c3kbW5LWz8I5/4GHLjGZo9hT77QsNJp1YOzZEyBsu9LA7ov+yYZySQVUNgcQTCZa2X
         199PzNEuGeAo5O71U1dI5s3xuf2wInPszD/BQ=
Received: by 10.151.100.17 with SMTP id c17mr5129417ybm.57.1215814539426;
        Fri, 11 Jul 2008 15:15:39 -0700 (PDT)
Received: by 10.151.48.2 with HTTP; Fri, 11 Jul 2008 15:15:39 -0700 (PDT)
Message-ID: <acae2d990807111515mfbe30c5hd5688855049b0e1d@mail.gmail.com>
Date: Fri, 11 Jul 2008 22:15:39 +0000
From: "atkinson julian" <julian.atkinson71@gmail.com>
To: caml-list@yquem.inria.fr
Subject: newbie ocaml and delimited continuations
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_49374_2054737.1215814539448"
X-Spam: no; 0.00; ocaml:01 delimited:01 ocaml:01 tarball:01 trivial:01 synchronous:01 bytecode:01 compiler:01 bytecode:01 functor:01 tarball:01 trivial:01 synchronous:01 compiler:01 functor:01 

------=_Part_49374_2054737.1215814539448
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

hello all,

I am a newbie currently learning ocaml and am particularly interested in the
new continuations package.

there is announcement here - which include a tarball source patch.
(Persistent twice-delimited continuations and CGI programming)
http://groups.google.co.uk/group/fa.caml/browse_thread/thread/cac8628ae8ef191d

The value of continuations and coroutines are that they make it trivial to
map asynchronous operations to synchronous programming models , they have
general application in network stacks/ generators and simulation models. (ie
the benefit of threads without the locking and context switching cost). My
questions are as follows.

Is it likely that this package may be incorporated into a later official
relase of ocaml (ie receive first class support ) ?. continuations would
appear to offer considerable programming expressiveness even if not widely
supported in other languages (cf scheme).

And a very basic tech question - It is obviously necessary that the package
runs as interpreted bytecode - so that the activation record of the
function/closure may be saved/serialized off. However, in general is it
possible to mix and match ocaml code compiled with the native opt compiler,
with compiled bytecode ? Additionally would there be any caveats in trying
to do this using this continuations package. Note that i have not yet got to
functor/modules in my self-learning where i suspect the general aspect of
this question would be explained but am trying to ancipate a bit in advance.

------=_Part_49374_2054737.1215814539448
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

hello all, <br><br>I am a newbie currently learning ocaml and am particularly interested in the new continuations package. <br><br>there is announcement here - which include a tarball source patch. <br>(Persistent twice-delimited continuations and CGI programming)<br>
<a href="http://groups.google.co.uk/group/fa.caml/browse_thread/thread/cac8628ae8ef191d">http://groups.google.co.uk/group/fa.caml/browse_thread/thread/cac8628ae8ef191d</a><br><br>The value of continuations and coroutines are that they make it trivial to
map asynchronous operations to synchronous programming models
, they have general application in network stacks/ generators
and simulation models. (ie the benefit of threads without the locking and context switching cost). My questions are as follows.<br><br>Is it likely that this package may be incorporated into a later official relase of ocaml (ie receive first class support ) ?. continuations would appear to offer considerable programming expressiveness even if not widely supported in other languages (cf scheme). <br>
<br>And a very basic tech question - It is obviously necessary that the package runs as interpreted bytecode - so that the activation record of the function/closure may be saved/serialized off. However, in general is it possible to mix and match ocaml code compiled with the native opt compiler, with compiled bytecode ? Additionally would there be any caveats in trying to do this using this continuations package. Note that i have not yet got to functor/modules in my self-learning where i suspect the general aspect of this question would be explained but am trying to ancipate a bit in advance. <br>
<br><br>

------=_Part_49374_2054737.1215814539448--

