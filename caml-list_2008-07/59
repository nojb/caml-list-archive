Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 2BCD4BBAF
	for <caml-list@yquem.inria.fr>; Thu, 10 Jul 2008 16:01:34 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvwAAHOzdUjUnw7VfGdsb2JhbACCOJAjAQELBQgHEQOeOw
X-IronPort-AV: E=Sophos;i="4.30,338,1212357600"; 
   d="scan'208";a="27203531"
Received: from ptb-relay02.plus.net ([212.159.14.213])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/AES256-SHA; 10 Jul 2008 16:01:33 +0200
Received: from [90.192.139.4] (helo=beast.local)
	 by ptb-relay02.plus.net with esmtpa (Exim) id 1KGwiB-0006dg-Ti; Thu, 10 Jul 2008 15:01:32 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: peng.zang@gmail.com, caml-list@yquem.inria.fr
Subject: Re: [Caml-list] thousands of CPU cores
Date: Thu, 10 Jul 2008 15:00:02 +0100
User-Agent: KMail/1.9.9
References: <c6c368760807092257v7a125fey534fbc6d5444d14@mail.gmail.com> <200807100944.29221.peng.zang@gmail.com>
In-Reply-To: <200807100944.29221.peng.zang@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200807101500.03079.jon@ffconsultancy.com>
X-Plusnet-Relay: 6dbba60fd5de2fa6f0c60d0d60191cef
X-Spam: no; 0.00; coherence:01 ocaml:01 run-time:01 parallelism:01 parallelism:01 ocaml:01 ocaml's:01 peng:98 cnet:98 cnet:98 researched:98 frog:98 wrote:01 exception:01 caml-list:01 

On Thursday 10 July 2008 14:44:25 Peng Zang wrote:
> On Thursday 10 July 2008 01:57:44 am J C wrote:
> > I know that Caml team wanted to see if many-core shared-memory systems
> > were going to stick around before bothering with Caml development that
> > takes advantage of them.
> >
> > Well, it looks like they are here to stay, after all:
> >
> > http://news.cnet.com/8301-13924_3-9981760-64.html
>
> This article doesn't say anything about whether the many-core system will
> be shared-memory.  Remember, a shared memory architecture has to deal with
> cache and memory coherence.  The prevailing view is that the overhead for
> such an approach does not scale.  For massively parallel computation we
> must turn to message passing or barrier/sync paradigms.
>
> I am doubtful that a thousand core machine will be shared-memory based.

Today's biggest shared-memory supercomputers already have thousands of cores.

> Also, this is a CNET article.. not exactly known for being in depth or well
> researched and this article is no exception.  It is an article based
> entirely on a few speculative comments of some Intel guys.  I wouldn't take
> it too seriously.
>
> Personally, I can see why the Caml development team opted not to put effort
> into dealing with shared-memory systems.

The OCaml development team put huge effort into their concurrent run-time.

> It is a stop-gap solution... 

That is not true. Many-core machines will always be decomposed into 
shared-memory clusters of as many cores as possible because shared memory 
parallelism will always be orders of magnitude more efficient than 
distributed parallelism.

OCaml is already ~8x slower than F# on today's eight core desktops. If OCaml's 
shortcomings are not remedied then it will become exponentially slower than 
parallelized languages like F# over the next few years until we reach the 
limit of shared memory parallelism in ~10 years time.

Consequently, the parallel GC scheduled for this summer will be the single 
most important development in OCaml world ever.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

