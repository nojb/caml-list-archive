Return-Path: <michael.walter@gmail.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id AC75BBC8B
	for <caml-list@yquem.inria.fr>; Mon, 14 Feb 2005 02:57:39 +0100 (CET)
Received: from rproxy.gmail.com (rproxy.gmail.com [64.233.170.193])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1E1vcCD021091
	for <caml-list@yquem.inria.fr>; Mon, 14 Feb 2005 02:57:39 +0100
Received: by rproxy.gmail.com with SMTP id g11so1053383rne
        for <caml-list@yquem.inria.fr>; Sun, 13 Feb 2005 17:57:38 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:reply-to:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:references;
        b=SJ9p8wJ9j98t5z+prhCTOu9iYCvA+a6sE6Y9D2Ot8ZyKeotmycMdmZbtxF7jmEtNM23+eYe6pgMHoOBylyIAEiIXDtErHnC1RO31hhz6f4Ar2EpzR/brQ+3B2lPmdGiTcPBW8kC0hiwMvDoHlGbgWEdBGK47cro/J/6tZ6hgPyc=
Received: by 10.38.81.49 with SMTP id e49mr108065rnb;
        Sun, 13 Feb 2005 17:57:38 -0800 (PST)
Received: by 10.38.86.80 with HTTP; Sun, 13 Feb 2005 17:57:38 -0800 (PST)
Message-ID: <877e9a17050213175778502fc2@mail.gmail.com>
Date: Sun, 13 Feb 2005 20:57:38 -0500
From: Michael Walter <michael.walter@gmail.com>
Reply-To: Michael Walter <michael.walter@gmail.com>
To: Michael Vanier <mvanier@cs.caltech.edu>
Subject: Re: [Caml-list] The boon of static type checking
Cc: Thomas.Fischbacher@physik.uni-muenchen.de,
	dheck@ix.urz.uni-heidelberg.de, caml-list@yquem.inria.fr
In-Reply-To: <20050214014624.EF42F9BDAB@orchestra.cs.caltech.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
References: <877e9a17050206221653d14456@mail.gmail.com>
	 <Pine.LNX.4.58.0502131358230.8773@eiger.cip.physik.uni-muenchen.de>
	 <877e9a1705021312525337a907@mail.gmail.com>
	 <Pine.LNX.4.58.0502132237040.24651@eiger.cip.physik.uni-muenchen.de>
	 <877e9a1705021314512ff095b9@mail.gmail.com>
	 <Pine.LNX.4.58.0502140031390.30259@eiger.cip.physik.uni-muenchen.de>
	 <877e9a1705021316114d4e10f0@mail.gmail.com>
	 <Pine.LNX.4.58.0502140134570.520@eiger.cip.physik.uni-muenchen.de>
	 <877e9a170502131711122bd34e@mail.gmail.com>
	 <20050214014624.EF42F9BDAB@orchestra.cs.caltech.edu>
X-Miltered: at nez-perce with ID 42100592.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 vanier:01 mvanier:01 wrote:01 syntax:01 expansions:01 metaocaml:01 haskell:01 syntax:01 metaocaml:01 checking:01 expressive:01 caltech:02 off-topic:02 seems:03 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_BY_IP autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Sun, 13 Feb 2005 17:46:24 -0800 (PST), Michael Vanier
<mvanier@cs.caltech.edu> wrote:
> [Way off-topic -- sorry!]
> 
> But S-expressions are arguably the best syntax for writing macro
> expansions.
Yeah, they are well-suited for that.

> More recent efforts like metaocaml and template Haskell (not to
> mention camlp4 and C++ templates) suggest that the notion that source code
> transformations can be a useful part of programming is getting more
> popular.
And this is great! What bothers me about S-expressions is that their
sole advantage seems to lie in technical reasons, like the ones
mentioned above. I strongly believe that there might be better ways to
allow for both intuitive code transformations and expressive,
"human-friendly" syntax. That's why I'm personally very interested in
efforts such as Metaocaml, ocamlp4, TH, Logix, IP, etc.

Michael

