Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id AD8E0BC88
	for <caml-list@yquem.inria.fr>; Wed,  9 Feb 2005 04:58:08 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j193w8sd014380
	for <caml-list@yquem.inria.fr>; Wed, 9 Feb 2005 04:58:08 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA18797 for <caml-list@pauillac.inria.fr>; Wed, 9 Feb 2005 04:58:08 +0100 (MET)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j193w5lV027154
	for <caml-list@inria.fr>; Wed, 9 Feb 2005 04:58:07 +0100
Received: from [192.168.1.200] (ppp212-197.lns2.syd3.internode.on.net [203.122.212.197])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id j193vrxd094204
	for <caml-list@inria.fr>; Wed, 9 Feb 2005 14:28:04 +1030 (CST)
Subject: ackermann test
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: caml-list <caml-list@inria.fr>
Content-Type: text/plain
Message-Id: <1107921472.5022.410.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 09 Feb 2005 14:57:52 +1100
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 42098A50.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 42098A4D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ackermann:01 sourceforge:01 timings:01 ocaml:01 bytecode:01 ocaml:01 stack:01 bytecode:01 glebe:01 061:98 nsw:01 ack:01 native:02 snail:02 2037:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

Entirely for amusement, current timings for 
ackermanns function, ack(3,y):

     Felix Ocaml bytecode  Felix/opt     C -O3  Ocaml native code
---------------------------------------------------------
y=10 113        12             7          1.8          0.4
y=11  ?         50            55         16            2
y=12  ?        220           290        113            9

Times in seconds on 700MHz PIII. 

For y=12, my disk light went on occasionally 
(i.e the process was hitting VM), looks like the size of 
stack frames begins to dominate as y increases?

Be interesting to see comparison with ocaml bytecode/JIT.

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



