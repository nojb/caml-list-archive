Return-Path: <oliver@first.in-berlin.de>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id B189CBC75
	for <caml-list@yquem.inria.fr>; Fri, 25 Feb 2005 10:13:53 +0100 (CET)
Received: from first.in-berlin.de (dialin-145-254-064-021.arcor-ip.net [145.254.64.21])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j1P9DX1j009514
	for <caml-list@yquem.inria.fr>; Fri, 25 Feb 2005 10:13:53 +0100
Received: by first.in-berlin.de (Postfix, from userid 501)
	id B6FEFAF903; Fri, 25 Feb 2005 00:21:01 +0100 (CET)
Date: Fri, 25 Feb 2005 00:21:01 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] OCaml && COCOA-Environment (Mac-OS-X/GUI)
Message-ID: <20050224232101.GA685@first.in-berlin.de>
References: <3a2f4a1305020508377ec6ddaf@mail.gmail.com> <a289eb671c5bceded4f3046e3c13eada@fas.harvard.edu> <90118fcfddc239a0e5c9d949c5b39c42@cs.unm.edu> <20050223.091230.88701909.garrigue@math.nagoya-u.ac.jp> <f7bf2978035dafdbf73334a778a45ed8@mac.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <f7bf2978035dafdbf73334a778a45ed8@mac.com>
User-Agent: Mutt/1.5.6i
X-Spam: no; 0.00; oliver:01 bandel:01 oliver:01 in-berlin:01 caml-list:01 ocaml:01 wrote:01 annotations:01 revise:01 annotations:01 o'caml:01 wrappers:01 minor:01 ocaml:01 ...:98 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.3 required=5.0 tests=DATE_IN_PAST_06_12,
	FORGED_RCVD_HELO autolearn=disabled version=3.0.2
X-Spam-Level: 

On Thu, Feb 24, 2005 at 12:40:46PM -0800, Paul Snively wrote:
[...]
> This is exactly what I have in mind: take advantage of Forklift's 
> external annotations to header files. So: revise Forklift to parse 
> Objective-C headers, write (external) annotations to Apple's headers, 
> and use Forklift to generate the O'Caml wrappers. Indeed, part of the 
> point is very much to end up in a position where changes Apple makes to 
> the headers necessitate hopefully minor revisions to the annotations 
> and an automated regeneration.


Apropos Apple.... when M$ creates F# out of Ocaml,
why not to trigger Apple to create sometging like
BackendObjects or ScientificObjects (as complementary to
WebObjects) out of OCaml on OS-X?!

Maybe we should trigger Apple for this?!

If not, they will use Objective-C and Java and nothing else.


Ciao,
   Oliver

