Return-Path: <skaller@users.sourceforge.net>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 32BA6BC88
	for <caml-list@yquem.inria.fr>; Fri, 11 Feb 2005 02:22:47 +0100 (CET)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1B1Mjta030046
	for <caml-list@yquem.inria.fr>; Fri, 11 Feb 2005 02:22:46 +0100
Received: from [192.168.1.200] (ppp212-197.lns2.syd3.internode.on.net [203.122.212.197])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id j1B1M2or043258;
	Fri, 11 Feb 2005 11:52:14 +1030 (CST)
Subject: Re: [Caml-list] String to list to string
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Jon Harrop <jon@jdh30.plus.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <200502101928.26511.jon@jdh30.plus.com>
References: <012676D607FCF54E986746512C22CE7D02DF7754@orsmsx407>
	 <200502101928.26511.jon@jdh30.plus.com>
Content-Type: text/plain
Organization: 
Message-Id: <1108084921.16698.213.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 11 Feb 2005 12:22:02 +1100
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 420C08E5.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 sourceforge:01 wrote:01 wrote:01 ocaml's:01 mutable:01 buffer:01 buffer:01 glebe:01 ...:98 061:98 nsw:01 strings:01 strings:01 snail:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Fri, 2005-02-11 at 06:28, Jon Harrop wrote:
> On Thursday 10 February 2005 18:35, Harrison, John R wrote:
> > ...I consider OCaml's mutable strings a far worse design error.
> 
> That's interesting. Why?

Because it makes the worst possible compromise.

Throws out transparency/persistence and fails to
allow any length changing operations, which are
common for strings -- overwriting strings is rarely 
needed. The only use I can think of is as a buffer
(and we have Buffer module for that, and it
also allows variable length)

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



