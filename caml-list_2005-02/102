Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 5DC40BC88
	for <caml-list@yquem.inria.fr>; Fri,  4 Feb 2005 17:48:53 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j14GmqbZ002609
	for <caml-list@yquem.inria.fr>; Fri, 4 Feb 2005 17:48:53 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA14011 for <caml-list@pauillac.inria.fr>; Fri, 4 Feb 2005 17:48:52 +0100 (MET)
Received: from first.in-berlin.de (dialin-145-254-052-111.arcor-ip.net [145.254.52.111])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j14GmpiP011199
	for <caml-list@inria.fr>; Fri, 4 Feb 2005 17:48:51 +0100
Received: by first.in-berlin.de (Postfix, from userid 501)
	id 4F18AA748A; Fri,  4 Feb 2005 17:48:52 +0100 (CET)
Date: Fri, 4 Feb 2005 17:48:51 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Estimating the size of the ocaml community
Message-ID: <20050204164851.GD728@first.in-berlin.de>
References: <20050204.111102.71086746.oandrieu@nerim.net> <005501c50aaa$b35d9560$0100a8c0@mshome.net> <20050204121505.GA31752@furbychan.cocan.org> <23368.192.168.0.1.1107521496.squirrel@gps.dynxs.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <23368.192.168.0.1.1107521496.squirrel@gps.dynxs.de>
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde with ID 4203A774.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 4203A773.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; oliver:01 bandel:01 oliver:01 in-berlin:01 caml-list:01 ocaml:01 gerd:01 stolpmann:01 wrote:01 appending:01 lexer:01 ocamllex:01 speedup:01 ...:98 ...:98 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.2
X-Spam-Level: 

On Fri, Feb 04, 2005 at 01:51:36PM +0100, Gerd Stolpmann wrote:
[...] 
> If one wanted really to improve the situation, it would be better to change
> the representation of strings, and to encode the string length in the
> first word after the header. This wastes much less memory (except in the
> special case when you have many small strings), and is probably neutral
> for the execution speed.

Well, what is done inside the Buffer-module?
I have not looked inside, but appending strings
with Buffer-module is about 11 times faster than
using "^"-operator in a small program, that
uses string-append-operator ^in a lexer file (ocamllex);
as switching to Buffer-module this speedup was amazing...

Ciao,
   oliver

