Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 56727BC8B
	for <caml-list@yquem.inria.fr>; Mon, 14 Feb 2005 15:36:32 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j1EEaVcJ002791
	for <caml-list@yquem.inria.fr>; Mon, 14 Feb 2005 15:36:31 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA15693 for <caml-list@pauillac.inria.fr>; Mon, 14 Feb 2005 15:36:31 +0100 (MET)
Received: from mail.physik.uni-muenchen.de (mail.physik.uni-muenchen.de [192.54.42.129])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1EEaUCp003803
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Mon, 14 Feb 2005 15:36:31 +0100
Received: from localhost (unknown [127.0.0.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id 764272003F;
	Mon, 14 Feb 2005 15:36:30 +0100 (CET)
Received: from mail.physik.uni-muenchen.de ([127.0.0.1])
 by localhost (mail.physik.uni-muenchen.de [127.0.0.1]) (amavisd-new, port 10024)
 with LMTP id 07412-01-13; Mon, 14 Feb 2005 15:36:28 +0100 (CET)
Received: from mailhost.cip.physik.uni-muenchen.de (kaiser.cip.physik.uni-muenchen.de [141.84.136.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id 6674720029;
	Mon, 14 Feb 2005 15:36:28 +0100 (CET)
Received: from eiger.cip.physik.uni-muenchen.de (eiger.cip.physik.uni-muenchen.de [141.84.136.54])
	by mailhost.cip.physik.uni-muenchen.de (Postfix) with ESMTP
	id 6B5B726E87; Mon, 14 Feb 2005 15:36:28 +0100 (CET)
Received: by eiger.cip.physik.uni-muenchen.de (Postfix, from userid 3092)
	id 2A2C53D96; Mon, 14 Feb 2005 15:36:27 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by eiger.cip.physik.uni-muenchen.de (Postfix) with ESMTP
	id 015432D717; Mon, 14 Feb 2005 15:36:27 +0100 (CET)
Date: Mon, 14 Feb 2005 15:36:27 +0100 (CET)
From: Thomas Fischbacher <Thomas.Fischbacher@Physik.Uni-Muenchen.DE>
To: Stefan Monnier <monnier@iro.umontreal.ca>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Re: The boon of static type checking
In-Reply-To: <87ll9rz0n2.fsf-monnier+gmane.comp.lang.caml.inria@gnu.org>
Message-ID: <Pine.LNX.4.58.0502141531400.3368@eiger.cip.physik.uni-muenchen.de>
References: <877e9a17050206221653d14456@mail.gmail.com>
 <Pine.LNX.4.58.0502130310510.22145@eiger.cip.physik.uni-muenchen.de>
 <20050213112630.73930e19@hobbes> <Pine.LNX.4.58.0502131358230.8773@eiger.cip.physik.uni-muenchen.de>
 <877e9a1705021312525337a907@mail.gmail.com>
 <Pine.LNX.4.58.0502132237040.24651@eiger.cip.physik.uni-muenchen.de>
 <877e9a1705021314512ff095b9@mail.gmail.com>
 <Pine.LNX.4.58.0502140031390.30259@eiger.cip.physik.uni-muenchen.de>
 <877e9a1705021316114d4e10f0@mail.gmail.com>
 <Pine.LNX.4.58.0502140134570.520@eiger.cip.physik.uni-muenchen.de>
 <877e9a170502131711122bd34e@mail.gmail.com> <20050214014624.EF42F9BDAB@orchestra.cs.caltech.edu>
 <87ll9rz0n2.fsf-monnier+gmane.comp.lang.caml.inria@gnu.org>
X-BOFH: Daemons did it
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: amavisd-new at physik.uni-muenchen.de
X-Miltered: at concorde with ID 4210B76F.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 4210B76E.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 wrote:01 syntax:01 expansions:01 syntax:01 ad-hoc:01 notations:01 compiler:01 cip:98 cip:98 lambda:01 lambda:01 arbitrary:01 parsed:01 checking:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 


On Mon, 14 Feb 2005, Stefan Monnier wrote:

> > But S-expressions are arguably the best syntax for writing macro
> > expansions.  Since an S-expression is trivially parseable and dispatches on
> 
> That's exactly where syntax is important: depending on your syntax some
> things are easy/concise and others aren't, so people end up adapting a very
> different programming style.  It doesn't mean that one syntax is
> intrinsically better than another, but just that syntax does matter.

Macroexpansion - if done properly - is done at the level of parsed trees. 
Hence, yes, it does matter if this is obscured by syntax or not, that is: 
whether your language does provide a special "mostly arbitrary" syntax or 
whether it does not.

Superficial differences in various ad-hoc notations, say "{}" vs. 
"BEGIN/END" and such, by far do not matter as much as questions whether 
there is a machine code compiler available, or whether memory management 
works in a proper way.

-- 
regards,               tf@cip.physik.uni-muenchen.de              (o_
 Thomas Fischbacher -  http://www.cip.physik.uni-muenchen.de/~tf  //\
(lambda (n) ((lambda (p q r) (p p q r)) (lambda (g x y)           V_/_
(if (= x 0) y (g g (- x 1) (* x y)))) n 1))                  (Debian GNU)

