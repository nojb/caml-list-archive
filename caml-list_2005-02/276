Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id BB365BC88
	for <caml-list@yquem.inria.fr>; Tue,  8 Feb 2005 19:20:47 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j18IKlTU022306
	for <caml-list@yquem.inria.fr>; Tue, 8 Feb 2005 19:20:47 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA00911 for <caml-list@pauillac.inria.fr>; Tue, 8 Feb 2005 19:20:46 +0100 (MET)
Received: from mercure.iro.umontreal.ca (mercure.iro.umontreal.ca [132.204.24.67])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j18IKjj5024966
	for <caml-list@inria.fr>; Tue, 8 Feb 2005 19:20:46 +0100
Received: from hidalgo.iro.umontreal.ca (hidalgo.iro.umontreal.ca [132.204.27.50])
	by mercure.iro.umontreal.ca (Postfix) with ESMTP
	id 98F488282CA; Tue,  8 Feb 2005 13:20:45 -0500 (EST)
Received: from asado.iro.umontreal.ca (asado.iro.umontreal.ca [132.204.24.84])
	by hidalgo.iro.umontreal.ca (Postfix) with ESMTP
	id 40BE24AC1B3; Tue,  8 Feb 2005 13:20:40 -0500 (EST)
Received: by asado.iro.umontreal.ca (Postfix, from userid 20848)
	id 0E8D54BCC6; Tue,  8 Feb 2005 13:20:40 -0500 (EST)
Message-ID: <jwvk6piud7a.fsf-monnier+inbox@gnu.org>
To: skaller@users.sourceforge.net
Cc: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Re: paralell assignment problem
References: <1107832025.13571.260.camel@pelican.wigram>
	<87y8dzi0ns.fsf-monnier+gmane.comp.lang.caml.inria@gnu.org>
	<1107878522.5022.78.camel@pelican.wigram>
From: Stefan Monnier <monnier@iro.umontreal.ca>
Date: Tue, 08 Feb 2005 13:20:39 -0500
In-Reply-To: <1107878522.5022.78.camel@pelican.wigram> (skaller@users.sourceforge.net's
 message of "09 Feb 2005 03:02:02 +1100")
User-Agent: Gnus/5.11 (Gnus v5.11) Emacs/21.3.50 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-DIRO-MailScanner-Information: Please contact the ISP for more information
X-DIRO-MailScanner: Found to be clean
X-DIRO-MailScanner-SpamCheck: n'est pas un polluriel,
	SpamAssassin (score=-4.784, requis 5, autolearn=not spam, AWL 0.12,
	BAYES_00 -4.90)
X-MailScanner-From: monnier@iro.umontreal.ca
X-Miltered: at nez-perce with ID 420902FF.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 420902FE.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 umontreal:01 compilers:01 recursive:01 ...:98 graph:01 tail:01 functions:01 algorithm:01 algorithm:01 generally:03 problem:05 problem:05 quite:06 components:06 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

>> Most ML compilers do this sort of thing to break big blocks of mutually
>> recursive functions into smaller such blocks.  The algorithm used is
>> generally to extract the "strongly connected components" of the graph.
>> Google for it and you'll surely find an algorithm.

> I'm not sure the problem is quite the same though.
> Call graphs are transitive: if A calls B, and B calls C,
> then A calls C.

Right, but the SCC will do the tail/head part of your algorithm in an
"optimal" way, and the strongly connected components can then be cracked
open by adding the t = ex ... x = t thingy.


        Stefan

