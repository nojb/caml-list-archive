Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id D9C03BC75
	for <caml-list@yquem.inria.fr>; Thu, 17 Feb 2005 20:18:19 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1HJIJOC010384
	for <caml-list@yquem.inria.fr>; Thu, 17 Feb 2005 20:18:19 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA02947 for <caml-list@pauillac.inria.fr>; Thu, 17 Feb 2005 20:18:19 +0100 (MET)
Received: from mailout10.sul.t-online.com (mailout10.sul.t-online.com [194.25.134.21])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1HJIIZ7010381
	for <caml-list@inria.fr>; Thu, 17 Feb 2005 20:18:19 +0100
Received: from fwd11.aul.t-online.de 
	by mailout10.sul.t-online.com with smtp 
	id 1D1rAH-0006VY-03; Thu, 17 Feb 2005 20:18:17 +0100
Received: from [217.225.68.133] (VUxY34Zrge88pxLip6S3nUthA5A3QKf6oHyvsB0pmoHGLLkEWsvu4+@[217.225.68.133]) by fwd11.sul.t-online.com
	with esmtp id 1D1rA9-0DGkKW0; Thu, 17 Feb 2005 20:18:09 +0100
Message-ID: <4214EDF1.7070109@t-online.de>
Date: Thu, 17 Feb 2005 20:18:09 +0100
From: Christian Szegedy <szegedy@t-online.de>
User-Agent: Mozilla Thunderbird 1.0 (X11/20050131)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Ocaml <caml-list@inria.fr>
Subject: Re: [Caml-list] Immediate recursive functions
References: <4214B8F1.7010402@barettadeit.com>
In-Reply-To: <4214B8F1.7010402@barettadeit.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-ID: VUxY34Zrge88pxLip6S3nUthA5A3QKf6oHyvsB0pmoHGLLkEWsvu4+
X-TOI-MSGID: ceeff723-0038-4ff0-a13a-cce6771abde5
X-Miltered: at nez-perce with ID 4214EDFB.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 4214EDFA.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 recursive:01 baretta:01 wrote:01 rec:01 pred:01 rec:01 pred:01 functions:01 int:01 int:01 alex:03 let:03 extension:06 i'm:08 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

Alex Baretta wrote:

> I sometimes feel the need for a mu operator. I'm thinking of something 
> like the following:
>
> # (rec f x -> if x <= 0 then 1 else x * (f (pred x))) 5
> - : int = 120
>
> as opposed to
>
> (let rec f x = if x <= 0 then 1 else x * (f (pred x)) in f) 5
> - : int = 120

Feel free to write your CamlP4 extension ;)

