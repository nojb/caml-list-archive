Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id A8A55BC8E
	for <caml-list@yquem.inria.fr>; Sun, 20 Feb 2005 20:38:18 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1KJcITs009662
	for <caml-list@yquem.inria.fr>; Sun, 20 Feb 2005 20:38:18 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA08328 for <caml-list@pauillac.inria.fr>; Sun, 20 Feb 2005 20:38:18 +0100 (MET)
Received: from swip.net (mailfe04.swip.net [212.247.154.97])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j1KJcHJ6001171
	for <caml-list@inria.fr>; Sun, 20 Feb 2005 20:38:17 +0100
X-T2-Posting-ID: 2IIuXFmkcTpj3lKEFKW25A==
Received: from [83.176.161.233] (HELO poincare)
  by mailfe04.swip.net (CommuniGate Pro SMTP 4.2.9)
  with ESMTP id 303039356; Sun, 20 Feb 2005 20:38:16 +0100
Received: from poincare
	([127.0.0.1] helo=localhost ident=trch)
	by poincare with esmtp (Exim 3.36 #1 (Debian))
	id 1D2wuF-0007QN-00; Sun, 20 Feb 2005 20:38:15 +0100
Date: Sun, 20 Feb 2005 20:38:13 +0100 (CET)
Message-Id: <20050220.203813.26280962.Christophe.Troestler@umh.ac.be>
To: "O'Caml Mailing List" <caml-list@inria.fr>
Subject: Alternative allocation of bigarrays
From: Christophe TROESTLER <Christophe.Troestler@umh.ac.be>
Organization: Universite de Mons-Hainaut (http://math.umh.ac.be/an/)
X-Spook: Bellcore New World Order Vince Foster FSF kibo CNCIS Perl-RSA
 rs9512c Chobetsu threat 
X-Blessing: Om Ah Hum Vajra Guru Pema Siddhi Hum
X-Operating-System: GNU/Linux (http://www.linux.org/)
X-Mailer-URL: http://www.mew.org/
X-Mailer: Mew version 4.2 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 4218E72A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 4218E729.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; bigarrays:01 christophe:01 troestler:01 christophe:01 troestler:01 umh:01 interfacing:01 ocaml:01 alignment:01 bigarrays:01 malloc:01 bigarray:01 alloc:01 bigarray:01 alloc:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

Hi,

I am interfacing OCaml with a C library that needs special allocation
functions for full speed (for alignment reasons).  I am wondering
about the best course to follow to create bigarrays with these new
malloc/free functions.

What I am doing now is to define a special "bigarray_create" based on
a spacial "alloc_bigarray" using tailored custom_operations.
Specifically, "alloc_bigarray" uses the new malloc and
"bigarray_finalize" of the "custom_operations" use the new free.  So
far I suppose there is no problem and they can share the OCaml
Bigarray types.  However I also changed the "custom_operations"'s
"identifier" and "bigarray_deserialize" so these bigarrays are
deserialized with the new malloc.  Can I still use the standard
bigarray types with these new arrays ?  (I would guess so but I'd like
a confirmation here.)

Also, if better approaches are possible, I will be happy to know them.
(The current solution requires to duplicate a lot of bigarray.c code.)

Regards,
ChriS

