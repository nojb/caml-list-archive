Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 81467BC75
	for <caml-list@yquem.inria.fr>; Fri, 25 Feb 2005 18:42:23 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1PHgNoQ025454
	for <caml-list@yquem.inria.fr>; Fri, 25 Feb 2005 18:42:23 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA20151 for <caml-list@pauillac.inria.fr>; Fri, 25 Feb 2005 18:42:22 +0100 (MET)
Received: from first.in-berlin.de (dialin-212-144-120-226.arcor-ip.net [212.144.120.226])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1PHgLHt025444
	for <caml-list@inria.fr>; Fri, 25 Feb 2005 18:42:22 +0100
Received: by first.in-berlin.de (Postfix, from userid 501)
	id 0F6A8B02D6; Fri, 25 Feb 2005 18:42:21 +0100 (CET)
Date: Fri, 25 Feb 2005 18:42:21 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@inria.fr
Subject: Re: [Caml-list] NBody (one more question)
Message-ID: <20050225174221.GA1068@first.in-berlin.de>
References: <20050207.195724.87945401.Christophe.Troestler@umh.ac.be> <20050208104312.GA10035@yquem.inria.fr> <20050224.231855.40627447.debian00@tiscali.be> <421F5F43.8050602@tfb.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <421F5F43.8050602@tfb.com>
User-Agent: Mutt/1.5.6i
X-Miltered: at nez-perce with ID 421F637F.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 421F637D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; oliver:01 bandel:01 oliver:01 in-berlin:01 caml-list:01 wrote:01 ocaml:01 gcc:01 translated:01 suppressing:01 gcc:01 25,:98 ...:98 ...:98 ....:98 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.2
X-Spam-Level: 

On Fri, Feb 25, 2005 at 09:24:19AM -0800, Ken Rose wrote:
[...]
> I'm not familiar with the OCaml code generator, but gcc without 
> optimization produces very naive code.  Each source statement is 
> translated separately, and all variable values are read from & written 
> back to memory.  (Only changed values are written, obviously)  It 
> doesn't do any instruction scheduling beyond what the processor may 
> require for correctness.  It really doesn't do anything more 
> sophisticated than suppressing moves that have the same register as 
> source & destination.
[...]

There is a good reason that without optimisations
there will be done none.

1.: It's what it seems to be. And switching optimisation on then
    is also what it seems to be: optimized code...
    So, a chair is a chair and a table is a table and that's good. :)

2.: Optimisation must be switched off to be able to debug...
    ...so it's good that gcc has the capability to produce non-
    optimized code.... it's not stupid to produce naive code.
    It sometimes is very useful.

Ciao,
   Oliver

