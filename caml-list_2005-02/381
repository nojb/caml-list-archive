Return-Path: <Thomas.Fischbacher@Physik.Uni-Muenchen.DE>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id AD8C6BC8B
	for <caml-list@yquem.inria.fr>; Sun, 13 Feb 2005 22:42:41 +0100 (CET)
Received: from mail.physik.uni-muenchen.de (mail.physik.uni-muenchen.de [192.54.42.129])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j1DLgfZK013992
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@yquem.inria.fr>; Sun, 13 Feb 2005 22:42:41 +0100
Received: from localhost (unknown [127.0.0.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id D800F2001B;
	Sun, 13 Feb 2005 22:42:40 +0100 (CET)
Received: from mail.physik.uni-muenchen.de ([127.0.0.1])
 by localhost (mail.physik.uni-muenchen.de [127.0.0.1]) (amavisd-new, port 10024)
 with LMTP id 17466-02-23; Sun, 13 Feb 2005 22:42:39 +0100 (CET)
Received: from mailhost.cip.physik.uni-muenchen.de (kaiser.cip.physik.uni-muenchen.de [141.84.136.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id 0FC1C20010;
	Sun, 13 Feb 2005 22:42:39 +0100 (CET)
Received: from eiger.cip.physik.uni-muenchen.de (eiger.cip.physik.uni-muenchen.de [141.84.136.54])
	by mailhost.cip.physik.uni-muenchen.de (Postfix) with ESMTP
	id A669C26E89; Sun, 13 Feb 2005 22:42:38 +0100 (CET)
Received: by eiger.cip.physik.uni-muenchen.de (Postfix, from userid 3092)
	id 341773CBB; Sun, 13 Feb 2005 22:42:29 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by eiger.cip.physik.uni-muenchen.de (Postfix) with ESMTP
	id 31C0B2D714; Sun, 13 Feb 2005 22:42:29 +0100 (CET)
Date: Sun, 13 Feb 2005 22:42:29 +0100 (CET)
From: Thomas Fischbacher <Thomas.Fischbacher@Physik.Uni-Muenchen.DE>
To: Michael Walter <michael.walter@gmail.com>
Cc: Daniel Heck <dheck@ix.urz.uni-heidelberg.de>,
	caml-list@yquem.inria.fr
Subject: Re: [Caml-list] The boon of static type checking
In-Reply-To: <877e9a1705021312525337a907@mail.gmail.com>
Message-ID: <Pine.LNX.4.58.0502132237040.24651@eiger.cip.physik.uni-muenchen.de>
References: <877e9a17050206221653d14456@mail.gmail.com> 
 <877e9a17050212145737cc30d6@mail.gmail.com> 
 <Pine.LNX.4.58.0502130212100.22145@eiger.cip.physik.uni-muenchen.de> 
 <200502131451.02231.edgin@slingshot.co.nz> 
 <Pine.LNX.4.58.0502130310510.22145@eiger.cip.physik.uni-muenchen.de> 
 <20050213112630.73930e19@hobbes>  <Pine.LNX.4.58.0502131358230.8773@eiger.cip.physik.uni-muenchen.de>
 <877e9a1705021312525337a907@mail.gmail.com>
X-BOFH: Daemons did it
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: amavisd-new at physik.uni-muenchen.de
X-Miltered: at concorde with ID 420FC9D1.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 wrote:01 o'caml:01 syntax:01 parser:01 syntax:01 notation:01 ocaml:01 cip:98 cip:98 lambda:01 lambda:01 arbitrary:01 faq:01 explicitly:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 


On Sun, 13 Feb 2005, Michael Walter wrote:

> Your argument regarding Lisp and O'caml ignores the fact that
> programming languages are to a large part about syntax - for obviously
> valid reasons like accessability, maintainability, expressiveness,
> etc.
> 
> I feel I've mentioned that so many times it should be in some FAQ ;o)

With a parser generator (take zebu, for example) and, say,
SET-DISPATCH-MACRO-CHARACTER, I just as well can give you any syntax you 
want on top of lisp. But I think you understand if I don't post code 
that explicitly demonstrates how to do that now.

So, syntax just as well is "nothing more than a library". Once the 
mechanics is there, I can easily place any arbitrary notation on top of 
that. If you want, I can make my pattern matching in lisp look exactly 
like ocaml pattern matching.

-- 
regards,               tf@cip.physik.uni-muenchen.de              (o_
 Thomas Fischbacher -  http://www.cip.physik.uni-muenchen.de/~tf  //\
(lambda (n) ((lambda (p q r) (p p q r)) (lambda (g x y)           V_/_
(if (= x 0) y (g g (- x 1) (* x y)))) n 1))                  (Debian GNU)

