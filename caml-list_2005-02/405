Return-Path: <martinb@dcs.qmul.ac.uk>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id BBF27BC75
	for <caml-list@yquem.inria.fr>; Mon, 14 Feb 2005 18:23:19 +0100 (CET)
Received: from mail.dcs.qmul.ac.uk (vicar.dcs.qmul.ac.uk [138.37.95.146])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j1EHNJv2026913
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Mon, 14 Feb 2005 18:23:19 +0100
Received: from xenografia.plus.com ([212.159.85.26] helo=[192.168.7.2])
	by mail.dcs.qmul.ac.uk with esmtpsa (TLSv1:DHE-RSA-AES256-SHA:256)
	(Exim 4.44)
	id 1D0jwM-0004oA-2i; Mon, 14 Feb 2005 17:23:18 +0000
Message-ID: <4210DFE1.5030208@dcs.qmul.ac.uk>
Date: Mon, 14 Feb 2005 17:29:05 +0000
From: Martin Berger <martinb@dcs.qmul.ac.uk>
User-Agent: Mozilla Thunderbird 1.0 (X11/20041207)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Thomas Fischbacher <Thomas.Fischbacher@Physik.Uni-Muenchen.DE>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] The boon of static type checking
References: <877e9a17050206221653d14456@mail.gmail.com>  <Pine.LNX.4.58.0502130212100.22145@eiger.cip.physik.uni-muenchen.de>  <200502131451.02231.edgin@slingshot.co.nz>  <Pine.LNX.4.58.0502130310510.22145@eiger.cip.physik.uni-muenchen.de>  <20050213112630.73930e19@hobbes>  <Pine.LNX.4.58.0502131358230.8773@eiger.cip.physik.uni-muenchen.de>  <877e9a1705021312525337a907@mail.gmail.com>  <Pine.LNX.4.58.0502132237040.24651@eiger.cip.physik.uni-muenchen.de>  <877e9a1705021314512ff095b9@mail.gmail.com>  <Pine.LNX.4.58.0502140031390.30259@eiger.cip.physik.uni-muenchen.de> <877e9a1705021316114d4e10f0@mail.gmail.com> <Pine.LNX.4.58.0502140134570.520@eiger.cip.physik.uni-muenchen.de>
In-Reply-To: <Pine.LNX.4.58.0502140134570.520@eiger.cip.physik.uni-muenchen.de>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-DCS-Interface-Port: 465
X-DCS-Auth-User: martinb
X-DCS-clamav-result: clean (1D0jwM-0004oA-2i)
X-DCS-uvscan-result: clean (1D0jwM-0004oA-2i)
X-Miltered: at concorde with ID 4210DE87.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; dcs:01 qmul:01 caml-list:01 branching:01 abstractions:01 high-level:01 semantics:01 convincing:01 ml-like:01 logics:01 lambda:01 computation:01 interaction:01 passing:01 checking:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

> That's how it's supposed to be. Especially scheme tries to be nothing else 
> but just the minimal "functional assembly language". So one can put other 
> languages on top of it.

the words "functional" and "minimal" may be considered contradictory as the basic
primitive of functional programming, beta reduction, is a very heavy operation that
can successfully be decomposed into more lightweight operations like:

    - state change + conditional branching.
    - continuation passing
    - name-passing interaction.

(of those the third is the most elementary and general and encompasses the others).
putting any of those on top of beta-reduction generally leads to something ugly.
functional abstractions are extremely useful in many computational situations, but
they are high-level, not something one can use successfully as a foundation to start
from. several decades of failed attempts at founding (the semantics of) computation
on lambda calculus shows this. the difficulties of finding convincing hoare-logics for
ML-like languages, a problem that has really only been solved this year, and on the
basis of pi-calculus, is another indication in this direction.

as an aside, are there any good program logics for languages with macro-facilities like
lisp-dialects?

martin

