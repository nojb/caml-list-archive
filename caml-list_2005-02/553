Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 5D727BC75
	for <caml-list@yquem.inria.fr>; Wed, 23 Feb 2005 00:30:12 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1MNUBgR027031
	for <caml-list@yquem.inria.fr>; Wed, 23 Feb 2005 00:30:12 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA06171 for <caml-list@pauillac.inria.fr>; Wed, 23 Feb 2005 00:30:11 +0100 (MET)
Received: from mail13.bluewin.ch (mail13.bluewin.ch [195.186.18.62])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j1MNUBkt002023
	for <caml-list@inria.fr>; Wed, 23 Feb 2005 00:30:11 +0100
Received: from [10.0.1.2] (83.76.251.179) by mail13.bluewin.ch (Bluewin AG 7.0.035)
        id 41ED192F003F3CCA for caml-list@inria.fr; Tue, 22 Feb 2005 23:30:11 +0000
Mime-Version: 1.0 (Apple Message framework v619.2)
In-Reply-To: <200502222216.25721.jon@jdh30.plus.com>
References: <20050222120308.GA2975@furbychan.cocan.org> <20050222202426.GA25230@furbychan.cocan.org> <421BA39F.20907@ntlworld.com> <200502222216.25721.jon@jdh30.plus.com>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
Message-Id: <4a4478d088d9fa3d5d1d82dd42b163d8@epfl.ch>
Content-Transfer-Encoding: quoted-printable
From: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@epfl.ch>
Subject: Re: [Caml-list] Cross-platform "Hello, World" graphical application in OCaml
Date: Wed, 23 Feb 2005 00:30:18 +0100
To: caml-list@inria.fr
X-Mailer: Apple Mail (2.619.2)
X-Miltered: at nez-perce with ID 421BC083.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 421BC083.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; epfl:01 caml-list:01 ocaml:01 ocaml:01 renderer:01 api:01 widget:01 haskell:01 api:01 renderer:01 smoke:98 ...:98 chalmers:01 native:02 graphical:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 


Le 22 f=E9vr. 05, =E0 23:16, Jon Harrop a =E9crit :

> Of course, awesome performance, anti-aliasing, transparency, gradient =20=

> and
> radial fills and many other features are inherited from Smoke.
>
> I'd have thought that seasoned OCaml hackers would be able to knock =20=

> out ass-
> kickingly good commercial applications in no time with a library like =20=

> this...

One nice thing to have would be a pure ocaml gui system (maybe along =20
the lines of Fruit [1] or Fudgets) with a functorized renderer =20
interface so that it can be used with/rendered by different graphic api =20=

(e.g. see cegui [3,4]) or even inside a canvas widget. Input handling =20=

should also be functorized so that it is easy to plug the gui system in =20=

a particular environment.

However the big problem of these custom gui systems is the lack of =20
integration with the native gui system. This may not be an issue for =20
fullscreen vizualisation tools or games but can be for other =20
applications like editors (e.g., because you usually have a single =20
window in which everything occurs (your gl context), you don't have =20
access to platform specific save dialogs, look and feel, etc., etc.).

Daniel

[1] <http://www.haskell.org/fruit/>
[2] =20
<http://www.cs.chalmers.se/ComputingScience/Research/Functional/=20
Fudgets/>
[3] <http://www.cegui.org.uk/>
[4] <http://www.cegui.org.uk/api_reference/classCEGUI_1_1Renderer.html>

