Return-Path: <kenrose@tfb.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id A620CBC88
	for <caml-list@yquem.inria.fr>; Mon,  7 Feb 2005 18:41:49 +0100 (CET)
Received: from smtp01.isp.itmonitor.net (smtp01.isp.itmonitor.net [207.158.33.182])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j17HfmNR020748
	for <caml-list@yquem.inria.fr>; Mon, 7 Feb 2005 18:41:49 +0100
Received: from tfb.com (host-66-81-26-53.rev.o1.com [66.81.26.53])
	by smtp01.isp.itmonitor.net (Postfix) with ESMTP
	id BFAE8A5CF33; Mon,  7 Feb 2005 09:41:46 -0800 (PST)
Message-ID: <4207A86F.9090604@tfb.com>
Date: Mon, 07 Feb 2005 09:42:07 -0800
From: Ken Rose <kenrose@tfb.com>
Reply-To: rose@acm.org
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.4) Gecko/20030703
X-Accept-Language: en-us, en
MIME-Version: 1.0
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] The boon of static type checking
References: <Pine.LNX.4.44.0502062248540.5563-100000@localhost.localdomain>
In-Reply-To: <Pine.LNX.4.44.0502062248540.5563-100000@localhost.localdomain>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4207A85C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 wrote:01 gcc:01 checking:01 functional:02 latter:03 brian:03 princeton:03 optimization:03 static:03 static:03 assign:05 papers:05 variable:06 looks:07 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=1.1 required=5.0 tests=FORGED_RCVD_HELO,
	RCVD_IN_NJABL_PROXY autolearn=disabled version=3.0.2
X-Spam-Level: *

Brian Hurt wrote:

> I note with humor that the big new optimization in GCC is the SSA-Tree 
> form- "Single Static Assignment".  The idea behind SSA is that you can 
> only assign a variable a value when you create it, you can not change it 
> latter.  Once you express C++ in SSA, it's a lot easier to apply a lot of 
> optimizations to it.  Of course, the more I look at SSA, the more it looks 
> like a functional language to me.  

The thought has occurred to others, as well.  See
www.cs.princeton.edu/~appel/papers/ssafun.pdf

  - ken

