Return-Path: <skaller@users.sourceforge.net>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 773BDBC88
	for <caml-list@yquem.inria.fr>; Mon,  7 Feb 2005 17:59:08 +0100 (CET)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j17Gx6WV014339
	for <caml-list@yquem.inria.fr>; Mon, 7 Feb 2005 17:59:07 +0100
Received: from [192.168.1.200] (ppp212-197.lns2.syd3.internode.on.net [203.122.212.197])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id j17Gwfp9047886;
	Tue, 8 Feb 2005 03:28:42 +1030 (CST)
Subject: Re: [Caml-list] The boon of static type checking
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Ville-Pertti Keinonen <will@exomi.com>
Cc: Brian Hurt <bhurt@spnz.org>, Jon <jdh30@cam.ac.uk>,
	caml-list@yquem.inria.fr
In-Reply-To: <1107773824.654.43.camel@localhost>
References: <Pine.LNX.4.44.0502062248540.5563-100000@localhost.localdomain>
	 <1107773824.654.43.camel@localhost>
Content-Type: text/plain
Organization: 
Message-Id: <1107795520.13571.118.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 08 Feb 2005 03:58:41 +1100
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 42079E5A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 sourceforge:01 wrote:01 wrote:01 gcc:01 glebe:01 061:98 nsw:01 cps:01 checking:01 snail:02 2037:02 purely:02 functional:02 functional:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Mon, 2005-02-07 at 21:57, Ville-Pertti Keinonen wrote:
> On Sun, 2005-02-06 at 23:34 -0600, Brian Hurt wrote:
> 
> > optimizations to it.  Of course, the more I look at SSA, the more it looks 
> > like a functional language to me.  So, in effect, the GCC optimization 
> 
> While the single-assignment aspect of SSA could be considered
> "functional", representing control flow using blocks and branches can't.

Yeah it can, it has been proven SSA is equivalent to
a purely functional representation. Branches are done with CPS.
Sorry I can't find the paper: the paper was actually written
to explain *why* SSA is easy to analyse.


-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



