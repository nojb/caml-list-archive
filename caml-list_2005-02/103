Return-Path: <oliver@first.in-berlin.de>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 2BDF7BC88
	for <caml-list@yquem.inria.fr>; Fri,  4 Feb 2005 17:49:59 +0100 (CET)
Received: from first.in-berlin.de (dialin-145-254-052-111.arcor-ip.net [145.254.52.111])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j14GnvuP002801
	for <caml-list@yquem.inria.fr>; Fri, 4 Feb 2005 17:49:58 +0100
Received: by first.in-berlin.de (Postfix, from userid 501)
	id 70F15A725C; Fri,  4 Feb 2005 11:53:26 +0100 (CET)
Date: Fri, 4 Feb 2005 11:53:26 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Estimating the size of the ocaml community
Message-ID: <20050204105326.GB498@first.in-berlin.de>
References: <891bd33905020213315a2ebb18@mail.gmail.com> <8008871f05020213362d21ba87@mail.gmail.com> <000f01c50971$baad4840$0100a8c0@mshome.net> <1107403128.32586.223.camel@pelican.wigram> <20050203173556.4acec1c5.ocaml-erikd@mega-nerd.com> <Pine.LNX.4.58.0502031903410.14412@eiger.cip.physik.uni-muenchen.de> <009a01c50a1e$f6c92080$0100a8c0@mshome.net> <Pine.LNX.4.58.0502032131000.14412@eiger.cip.physik.uni-muenchen.de> <4202A6AA.3030807@trdlnk.com> <Pine.LNX.4.58.0502040003080.14412@eiger.cip.physik.uni-muenchen.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.58.0502040003080.14412@eiger.cip.physik.uni-muenchen.de>
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde with ID 4203A7B5.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; oliver:01 bandel:01 oliver:01 in-berlin:01 caml-list:01 ocaml:01 wrote:01 ocaml:01 serialize:01 ...:98 hair:98 ...:98 strings:01 computation:01 int:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.2
X-Spam-Level: 

On Fri, Feb 04, 2005 at 12:22:47AM +0100, Thomas Fischbacher wrote:
[...] 
> Oh, by the way, there is one more thing which I consider a really
> grave issue, which gave us quite a lot of grey hair already: Ocaml 
> strings have this stupid limitation to 16 MB, which means in particular 
> that if you serialize a truly large intermediate state of, say, a long 
> and complicated calculation which accidentally got a bit larger than this 
> limit (while you did not expect that), well...

Well, maybe there should be a BigStrings- or LongStrings-Module
introduced into OCaml-stdlib?

But: When you mean with "a long and complicated calculation"
using larger int/float-values you may use
the num-library.
E.g. in module Num there is a  string_of_num-function.
Do you really think, the results will be larger than 16MB?

Or what kind of computation do you think about?

Ciao,
   Oliver

