Return-Path: <szegedy@t-online.de>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id BEB76BC8B
	for <caml-list@yquem.inria.fr>; Sat, 12 Feb 2005 14:42:57 +0100 (CET)
Received: from mailout09.sul.t-online.com (mailout09.sul.t-online.com [194.25.134.84])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1CDgveh003532
	for <caml-list@yquem.inria.fr>; Sat, 12 Feb 2005 14:42:57 +0100
Received: from fwd09.aul.t-online.de 
	by mailout09.sul.t-online.com with smtp 
	id 1CzxY1-0004BL-00; Sat, 12 Feb 2005 14:42:57 +0100
Received: from [217.95.166.165] (rAfy9yZ-YePGirQ4XF9mev5vBUqNwkS2iimZsvNdv5Oj9u20IkQiQF@[217.95.166.165]) by fwd09.sul.t-online.com
	with esmtp id 1CzxXy-0xPfA80; Sat, 12 Feb 2005 14:42:54 +0100
Message-ID: <420E07DF.7030109@t-online.de>
Date: Sat, 12 Feb 2005 14:42:55 +0100
From: Christian Szegedy <szegedy@t-online.de>
User-Agent: Mozilla Thunderbird 1.0 (X11/20050131)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Memory allocation nano-benchmark.
References: <420B7A7E.90504@or.uni-bonn.de> <d849ad2a050210065928a7a6d6@mail.gmail.com> <cee4e1fb050210085044fa063e@mail.gmail.com> <420BB3E3.1060005@t-online.de> <20050211112654.GB429@first.in-berlin.de>
In-Reply-To: <20050211112654.GB429@first.in-berlin.de>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-ID: rAfy9yZ-YePGirQ4XF9mev5vBUqNwkS2iimZsvNdv5Oj9u20IkQiQF
X-TOI-MSGID: 1eb00f4a-d042-4cd7-915f-ffda18420af7
X-Miltered: at nez-perce with ID 420E07E1.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 oliver:01 bandel:01 wrote:01 ocaml:01 runtime:01 ocaml:01 overhead:03 negligible:04 differences:05 mean:07 memory:08 difference:13 grid:14 grid:14 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

Oliver Bandel wrote:

>What does this mean?
>Is only the work on the grid faster, or is the program
>all in all (mem allocation AND working on the grid)
>faster in OCaml or in C?
>  
>
Only the work on the grid is about as fast as in C.
The differences were negligible.

The overall difference in the runtime was due to the
allocation overhead in the OCaml code.

