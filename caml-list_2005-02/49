Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id C2AE1BC88
	for <caml-list@yquem.inria.fr>; Thu,  3 Feb 2005 13:50:14 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j13CoEoa001946
	for <caml-list@yquem.inria.fr>; Thu, 3 Feb 2005 13:50:14 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA03957 for <caml-list@pauillac.inria.fr>; Thu, 3 Feb 2005 13:50:14 +0100 (MET)
Received: from shiva.jussieu.fr (shiva.jussieu.fr [134.157.0.129])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j13CoDxv026406
	for <caml-list@inria.fr>; Thu, 3 Feb 2005 13:50:13 +0100
Received: from localhost (akasha.ijm.jussieu.fr [134.157.173.57])
          by shiva.jussieu.fr (8.12.11/jtpda-5.4) with ESMTP id j13CoDb2006858
          ; Thu, 3 Feb 2005 13:50:13 +0100 (CET)
X-Ids: 168
Date: Thu, 03 Feb 2005 13:50:11 +0100 (CET)
Message-Id: <20050203.135011.30185183.andrieu@ijm.jussieu.fr>
To: ronniec95@lineone.net
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] GC with C issues
From: Olivier Andrieu <andrieu@ijm.jussieu.fr>
In-Reply-To: <20050203113155.GA1860@cradle>
References: <20050203105826.GA1669@cradle>
	<20050203.121643.41633039.andrieu@ijm.jussieu.fr>
	<20050203113155.GA1860@cradle>
X-Mailer: Mew version 4.1 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-1.7.2 (shiva.jussieu.fr [134.157.0.168]); Thu, 03 Feb 2005 13:50:13 +0100 (CET)
X-Miltered: at nez-perce with ID 42021E06.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 42021E05.003 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at shiva.jussieu.fr with ID 42021E05.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Antivirus: scanned by sophie at shiva.jussieu.fr
X-Spam: no; 0.00; caml-list:01 andrieu:01 andrieu:01 ijm:01 lineone:01 wrote:01 segfault:01 camlparam:01 camlreturn:01 camlreturn:01 alloc:01 alloc:01 freeing:98 retval:98 ...:98 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

 ronniec95@lineone.net [Thu, 3 Feb 2005]:
 > On Thu, Feb 03, 2005 at 12:16:43PM +0100, Olivier Andrieu wrote:
 >  
 > >  > I can't see what I'm doing wrong in the allocation? I expect
 > >  > this to leak because I'm not freeing the allocated
 > >  > 'someObject' but I don't expect it to segfault though?
 > > 
 > > When you use CAMLparam in a function you have to exit it with
 > > CAMLreturn (or CAMLreturn0).
 > > 
 > > Do not use Store_field on your block: it's an Abstract block, not
 > > traced by the GC, use the Field macro directly :
 > > 
 > >  Field (retVal, 0) = (value) x;
 > 
 > Hmm... I thought I was only supposed to do that when using
 > alloc_small/alloc_shr interface? However using your method does
 > work in this small example though I'm worried about if something
 > unexpected will happen in more 'real-life' code...

No, Store_field should only be used on structured blocks (check the
manual). You can access and modify abstract blocks directly since
their content is not examined by the GC. 

Your code works fine in this small example because the block initially
contains zeroes, but an abstract block can contain anything and this can
confuse the GC if you use Store_field.

-- 
   Olivier

