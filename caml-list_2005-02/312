Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id C7914BC88
	for <caml-list@yquem.inria.fr>; Thu, 10 Feb 2005 15:24:59 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1AEOxMv019882
	for <caml-list@yquem.inria.fr>; Thu, 10 Feb 2005 15:24:59 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA15658 for <caml-list@pauillac.inria.fr>; Thu, 10 Feb 2005 15:24:59 +0100 (MET)
Received: from brical.or.uni-bonn.de ([131.220.141.99])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j1AEOw1I001094
	for <caml-list@inria.fr>; Thu, 10 Feb 2005 15:24:58 +0100
Received: from wse04.or.uni-bonn.de (unknown [131.220.141.100])
	by brical.or.uni-bonn.de (Postfix) with ESMTP id C7EEBAB60
	for <caml-list@inria.fr>; Thu, 10 Feb 2005 16:10:04 +0100 (CET)
Received: from or.uni-bonn.de (tp149.vlsi.uni-bonn.de [192.168.143.149])
	by wse04.or.uni-bonn.de (Postfix) with ESMTP id 7A83DE8BB
	for <caml-list@inria.fr>; Thu, 10 Feb 2005 15:25:44 +0100 (CET)
Message-ID: <420B7A7E.90504@or.uni-bonn.de>
Date: Thu, 10 Feb 2005 16:15:10 +0100
From: Christian Szegedy <szegedy@or.uni-bonn.de>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.4b) Gecko/20030507
X-Accept-Language: en-us, en, de-de, fr-fr, hu
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Memory allocation nano-benchmark.
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 420B6EBB.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 420B6EBA.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; uni-bonn:01 ocaml:01 argv:01 malloc:01 sizeof:01 malloc:01 sizeof:01 argc:01 char:01 argv:01 argc:01 atoi:01 ocamlopt:01 -unsafe:01 -inline:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

Let us look at another example where ocaml not really shines:

mem.ml:

let test tablesize =
   let table =
     Array.init tablesize (fun i ->
       Array.init tablesize (fun j ->
         Array.init tablesize (fun k ->
           ((i+1)*(j+1)*(k+1))))) in ()

let _ = test (int_of_string Sys.argv.(1))


mem.c:

void test(int tablesize)
{

    int i;
    int ***table = (int ***)malloc(tablesize *sizeof(int **));

    for( i=0; i<tablesize ; i++ )
    {
       int j;
       table[i] = (int **)malloc(tablesize * sizeof(int *));

       for ( j=0 ; j < tablesize ; j++ )
       {
          int k;
          table[i][j] = (int *)malloc(tablesize * sizeof(int));

          for ( k =0 ; k < tablesize ; k++ )
          {
             table[i][j][k] = (i+1)*(j+1)*(k+1);
          }
       }
    }
}


int main(int argc,char *argv[])
{
    int i;

    if( argc < 2 ) { return -1; }

    test(atoi(argv[1]));

    return 0;
}

On an old sub-Ghz Pentium laptop:

ocamlopt -unsafe -inline 40 mem.ml
time a.out 500
real    0m4.229s
user    0m3.870s
sys     0m0.360s


gcc -O3 -fomit-frame-pointer mem.c
time a.out 300
real    0m0.935s
user    0m0.420s
sys     0m0.500s



On a new Opteron box (OK, it's cheating, becasuse OCamls ints
are 64 bits, but there is still no disk-cache involved since
it has 64gigs :)):

gcc -O3 -fomit-frame-pointer mem.c
time ./a.out 500
real    0m0.803s
user    0m0.224s
sys     0m0.575s


ocamlopt -unsafe -inline 40 mem.ml
time ./a.out 500
real    0m8.651s
user    0m7.270s
sys     0m1.357s



