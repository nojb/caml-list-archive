Return-Path: <ocaml-erikd@mega-nerd.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 33425BC75
	for <caml-list@yquem.inria.fr>; Mon, 14 Feb 2005 08:03:43 +0100 (CET)
Received: from smtp.syd.swiftdsl.com.au (smtp.syd.swiftdsl.com.au [218.214.224.138])
	by concorde.inria.fr (8.13.0/8.13.0) with SMTP id j1E73ec2006774
	for <caml-list@yquem.inria.fr>; Mon, 14 Feb 2005 08:03:42 +0100
Received: (qmail 23587 invoked from network); 14 Feb 2005 07:03:52 -0000
Received: from unknown (HELO coltrane.mega-nerd.net) (218.214.64.136)
  by smtp.syd.swiftdsl.com.au with SMTP; 14 Feb 2005 07:03:52 -0000
Received: from coltrane (localhost [127.0.0.1])
	by coltrane.mega-nerd.net (Postfix) with SMTP id 1986F7AD8
	for <caml-list@yquem.inria.fr>; Mon, 14 Feb 2005 18:03:39 +1100 (EST)
Date: Mon, 14 Feb 2005 18:03:38 +1100
From: Erik de Castro Lopo <ocaml-erikd@mega-nerd.com>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Determining memory usage?
Message-Id: <20050214180338.74a169db.ocaml-erikd@mega-nerd.com>
In-Reply-To: <20050214020510.GA10522@force.stwing.upenn.edu>
References: <20050213132939.03ea86d1.ocaml-erikd@mega-nerd.com>
	<6b8a9142050213003195ddb28@mail.gmail.com>
	<20050214124650.69921c71.ocaml-erikd@mega-nerd.com>
	<20050214020510.GA10522@force.stwing.upenn.edu>
Organization: Erik Conspiracy Secret Labs
X-Mailer: Sylpheed version 1.0.0 (GTK+ 1.2.10; i386-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 42104D4D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 lovas:01 wlovas:01 stwing:01 upenn:01 wrote:01 printf:01 heap:01 model:01 nospam:98 seems:03 sys:03 sys:03 let:03 erik:04 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.2
X-Spam-Level: 

On Sun, 13 Feb 2005 21:05:10 -0500
William Lovas <wlovas@stwing.upenn.edu> wrote:

> How about the strikingly appropriately named Sys.word_size? :)

Yep, thats a winner. Thanks.

For the archive, I now have:

   let x = Gc.stat () in
   printf "Memory used : %d kb\n\n" (x.heap_words / (1024 / (Sys.word_size / 8))) ;;

which gives what seems to be a sensible result.

Erik
-- 
+-----------------------------------------------------------+
  Erik de Castro Lopo  nospam@mega-nerd.com (Yes it's valid)
+-----------------------------------------------------------+
"The object-oriented model makes it easy to build up programs by
accretion. What this often means, in practice, is that it provides
a structured way to write spaghetti code." -- Paul Graham

