Return-Path: <oliver@first.in-berlin.de>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 7BDC3BC8B
	for <caml-list@yquem.inria.fr>; Fri,  4 Feb 2005 17:49:59 +0100 (CET)
Received: from first.in-berlin.de (dialin-145-254-052-111.arcor-ip.net [145.254.52.111])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j14GnwkT011371
	for <caml-list@yquem.inria.fr>; Fri, 4 Feb 2005 17:49:58 +0100
Received: by first.in-berlin.de (Postfix, from userid 501)
	id A87B1A7239; Fri,  4 Feb 2005 11:30:06 +0100 (CET)
Date: Fri, 4 Feb 2005 11:30:06 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Estimating the size of the ocaml community
Message-ID: <20050204103006.GA498@first.in-berlin.de>
References: <891bd33905020213315a2ebb18@mail.gmail.com> <8008871f05020213362d21ba87@mail.gmail.com> <000f01c50971$baad4840$0100a8c0@mshome.net> <1107403128.32586.223.camel@pelican.wigram> <20050203173556.4acec1c5.ocaml-erikd@mega-nerd.com> <Pine.LNX.4.58.0502031903410.14412@eiger.cip.physik.uni-muenchen.de> <009a01c50a1e$f6c92080$0100a8c0@mshome.net> <Pine.LNX.4.58.0502032131000.14412@eiger.cip.physik.uni-muenchen.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.58.0502032131000.14412@eiger.cip.physik.uni-muenchen.de>
User-Agent: Mutt/1.5.6i
X-Miltered: at nez-perce with ID 4203A7B6.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; oliver:01 bandel:01 oliver:01 in-berlin:01 caml-list:01 ocaml:01 wrote:01 ...:98 ...:98 catching:02 warnings:02 size:95 thu:05 anyway:05 annoying:05 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.3 required=5.0 tests=DATE_IN_PAST_06_12,
	FORGED_RCVD_HELO autolearn=disabled version=3.0.2
X-Spam-Level: 

On Thu, Feb 03, 2005 at 10:16:33PM +0100, Thomas Fischbacher wrote:
[...]
> (3) The type system is annoying. People claim it helps catching errors, 
> but my impression is it only catches those which I would never make 
> anyway.
[...]

Well if it catches only errors you never make, you should
never had any warnings nor error messages from the type
system.
So, why is it annoying, if you never get a warning/error message?

Normally you should not be aware of the type system, because you
do not make type-system-errors.

?!


Ciao,
   Oliver

