Return-Path: <zilles@1969.ws>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 61ED1BC8B
	for <caml-list@yquem.inria.fr>; Fri,  4 Feb 2005 21:18:47 +0100 (CET)
Received: from woodstock.1969.ws (64-215-156-42.eosinc.net [64.215.156.42])
	by concorde.inria.fr (8.13.0/8.13.0) with SMTP id j14KIjfa004635
	for <caml-list@yquem.inria.fr>; Fri, 4 Feb 2005 21:18:46 +0100
Received: (qmail 12859 invoked from network); 4 Feb 2005 20:18:39 -0000
Received: from karl.1969.ws (HELO ?10.3.2.15?) (10.3.2.15)
  by woodstock.1969.ws with SMTP; 4 Feb 2005 20:18:39 -0000
Message-ID: <4203D912.8090106@1969.ws>
Date: Fri, 04 Feb 2005 12:20:34 -0800
From: Karl Zilles <zilles@1969.ws>
Organization: 1969 Communications,  Inc.
User-Agent: Mozilla Thunderbird 1.0 (Windows/20041206)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Christophe TROESTLER <Christophe.Troestler@umh.ac.be>
Cc: Thomas.Fischbacher@physik.uni-muenchen.de,
	caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Estimating the size of the ocaml community
References: <Pine.LNX.4.58.0502032131000.14412@eiger.cip.physik.uni-muenchen.de>	<200502040233.40444.jon@jdh30.plus.com>	<Pine.LNX.4.58.0502041002450.5144@eiger.cip.physik.uni-muenchen.de> <20050204.205413.24601197.Christophe.Troestler@umh.ac.be>
In-Reply-To: <20050204.205413.24601197.Christophe.Troestler@umh.ac.be>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4203D8A5.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 christophe:01 troestler:01 wrote:01 camldebug:01 breakpoints:01 ocamldebug:01 debugging:01 exceptions:01 data:02 expressions:03 unexpected:03 conditional:04 conditional:04 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.2
X-Spam-Level: 

Christophe TROESTLER wrote:

 > What's wrong with camldebug ?


Since we're bitching about everything anyway, how about:

*) No conditional breakpoints
*) No watch expressions

ocamldebug works very well for debugging unexpected exceptions in my 
code, but when I wanted to trace the behavior of a specific function 
running on specific data, it was very painful to get to the right place.

1) set breakpoint
2) run
3) p variable
4) if not there yet, goto 2

yuck.  Am I missing something?  What do other people do?  Besides adding 
a conditional to their program to give them a place to set a breakpoint.

