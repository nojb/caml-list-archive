Return-Path: <oliver@first.in-berlin.de>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id BCFFDBC75
	for <caml-list@yquem.inria.fr>; Fri, 11 Feb 2005 21:44:25 +0100 (CET)
Received: from first.in-berlin.de (dialin-145-254-065-087.arcor-ip.net [145.254.65.87])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1BKiOqv007727
	for <caml-list@yquem.inria.fr>; Fri, 11 Feb 2005 21:44:25 +0100
Received: by first.in-berlin.de (Postfix, from userid 501)
	id 333FEAAB5B; Fri, 11 Feb 2005 12:28:58 +0100 (CET)
Date: Fri, 11 Feb 2005 12:28:57 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Memory allocation nano-benchmark.
Message-ID: <20050211112857.GC429@first.in-berlin.de>
References: <420B7A7E.90504@or.uni-bonn.de> <d849ad2a050210065928a7a6d6@mail.gmail.com> <cee4e1fb050210085044fa063e@mail.gmail.com> <1108083859.16698.198.camel@pelican.wigram>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1108083859.16698.198.camel@pelican.wigram>
User-Agent: Mutt/1.5.6i
X-Miltered: at nez-perce with ID 420D1928.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; oliver:01 bandel:01 oliver:01 in-berlin:01 caml-list:01 wrote:01 wrote:01 prevost:01 prevost:01 allocates:01 malloc:01 malloc:01 ...:98 14.:98 behaviour:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.2
X-Spam-Level: 

On Fri, Feb 11, 2005 at 12:04:20PM +1100, skaller wrote:
> On Fri, 2005-02-11 at 03:50, Marwan Burelle wrote:
> > On Thu, 10 Feb 2005 09:59:53 -0500, John Prevost <j.prevost@gmail.com> wrote:
> > > In a program that allocates one very large chunk of memory, 
> 
> > It also depends on malloc, on Linux it sometimes works
> > "optimisticaly", that is, it won't realy allocate memory unless you
> > use it

You can call calloc() instead of malloc, so you automatically
use the memory.

Would be interesting to have a bench on this...



> 
> This behaviour is not allowed by the ISO C Standard.

Yes, that's true.


> This case was actually discussed by WG14.

What is the WG14?

Ciao,
   Oliver

