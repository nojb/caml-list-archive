Return-Path: <David.Monniaux@ens.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 89548BC88
	for <caml-list@yquem.inria.fr>; Sun,  6 Feb 2005 23:17:17 +0100 (CET)
Received: from postfix3-1.free.fr (postfix3-1.free.fr [213.228.0.44])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j16MHHpT024622
	for <caml-list@yquem.inria.fr>; Sun, 6 Feb 2005 23:17:17 +0100
Received: from picsou.chatons.dyndns.org (massena-8-82-225-77-14.fbx.proxad.net [82.225.77.14])
	by postfix3-1.free.fr (Postfix) with ESMTP id 2E02B1734E3
	for <caml-list@yquem.inria.fr>; Sun,  6 Feb 2005 23:17:17 +0100 (CET)
Received: from ens.fr (localhost.localdomain [127.0.0.1])
	by picsou.chatons.dyndns.org (Postfix) with ESMTP id DF5E4179A7
	for <caml-list@yquem.inria.fr>; Sun,  6 Feb 2005 23:17:16 +0100 (CET)
Message-ID: <4206976C.1020305@ens.fr>
Date: Sun, 06 Feb 2005 23:17:16 +0100
From: David Monniaux <David.Monniaux@ens.fr>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.4.1) Gecko/20031114
X-Accept-Language: fr-fr, fr, en-us, en-gb, en, es-es, es
MIME-Version: 1.0
To: caml-list <caml-list@yquem.inria.fr>
Subject: prefix ::
X-Enigmail-Version: 0.76.8.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4206976D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; monniaux:01 monniaux:01 coq:01 coq:01 ocaml's:01 foobar:01 blabla:01 caml:02 match:02 incorrect:02 ens:02 cons:03 i'd:05 annoying:05 prefix:09 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.2
X-Spam-Level: 

Hi,

In order to east the export of Coq programs to Caml, I'd like to be able 
to tell Coq that "cons" on list is OCaml's :: operator. Unfortunately, 
it is syntactically incorrect to write:
match l with
  [] -> foobar
| ::(x,y) -> blabla

This is a little annoying. Is there anything to do about this?

Thanks,

