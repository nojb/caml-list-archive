Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 15EA3BC88
	for <caml-list@yquem.inria.fr>; Tue,  8 Feb 2005 11:11:05 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j18AB4vU019228
	for <caml-list@yquem.inria.fr>; Tue, 8 Feb 2005 11:11:04 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA14609 for <caml-list@pauillac.inria.fr>; Tue, 8 Feb 2005 11:11:04 +0100 (MET)
Received: from will.iki.fi (will.iki.fi [217.169.64.20])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j18AB3GL019224
	for <caml-list@inria.fr>; Tue, 8 Feb 2005 11:11:03 +0100
Received: from acerf.exomi.com (fa-3-0-0.fw.exomi.com [217.169.64.99])
	by will.iki.fi (Postfix) with ESMTP id 40BBDAD;
	Tue,  8 Feb 2005 12:11:03 +0200 (EET)
Subject: Re: [Caml-list] [Benchmark] NBody
From: Ville-Pertti Keinonen <will@exomi.com>
To: skaller@users.sourceforge.net
Cc: "Will M. Farr" <farr@MIT.EDU>,
	"O'Caml Mailing List" <caml-list@inria.fr>,
	Christophe TROESTLER <Christophe.Troestler@umh.ac.be>
In-Reply-To: <1107855477.2555.95.camel@pelican.wigram>
References: <20050207.195724.87945401.Christophe.Troestler@umh.ac.be>
	 <1107826151.13571.199.camel@pelican.wigram>
	 <80eb59bd970cd828d562f79e8eb565bf@mit.edu>
	 <1107855477.2555.95.camel@pelican.wigram>
Content-Type: text/plain
Date: Tue, 08 Feb 2005 12:10:59 +0200
Message-Id: <1107857459.654.29.camel@localhost>
Mime-Version: 1.0
X-Mailer: Evolution 2.0.3 FreeBSD GNOME Team Port 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 42089038.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 42089037.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 wrote:01 mutable:01 arrays:01 mutable:01 arrays:01 pointers:01 unboxed:01 abstraction:01 floats:01 data:02 benchmark:02 types:02 shared:04 shared:04 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Tue, 2005-02-08 at 20:37 +1100, skaller wrote:
> But the types in your record are mutable, and so it can't
> possibly work.
> 
> In particular, given two arrays of a record type R containing
> a mutable field M, the arrays MUST uses boxes or modifications
> to M in a shared record wouldn't be shared.

You're apparently talking about an array of records (which obviously
contains pointers to the records), but the issue (I think) was the
records themselves, which store floats unboxed if they contain nothing
else.

I'm not sure that the data set in this case is large enough that giving
up abstraction and combining things into a single array would make a big
difference.  It's also not what the Java program being compared to did.


