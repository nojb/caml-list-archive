Return-Path: <basile@starynkevitch.net>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id A67C3BC88
	for <caml-list@yquem.inria.fr>; Fri,  4 Feb 2005 22:55:21 +0100 (CET)
Received: from kraid.nerim.net (smtp-105-friday.nerim.net [62.4.16.105])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j14LtLro019819
	for <caml-list@yquem.inria.fr>; Fri, 4 Feb 2005 22:55:21 +0100
Received: from hector.lesours (ours.starynkevitch.net [62.212.121.80])
	by kraid.nerim.net (Postfix) with ESMTP id BBA2C41490
	for <caml-list@yquem.inria.fr>; Fri,  4 Feb 2005 22:55:19 +0100 (CET)
Received: from basile by hector.lesours with local (Exim 4.44)
	id 1CxBQ8-0002cn-Tn
	for caml-list@yquem.inria.fr; Fri, 04 Feb 2005 22:55:20 +0100
Date: Fri, 4 Feb 2005 22:55:20 +0100
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Estimating the size of the ocaml community
Message-ID: <20050204215520.GA9985@ours.starynkevitch.net>
References: <891bd33905020213315a2ebb18@mail.gmail.com> <8008871f05020213362d21ba87@mail.gmail.com> <000f01c50971$baad4840$0100a8c0@mshome.net> <1107403128.32586.223.camel@pelican.wigram> <20050203173556.4acec1c5.ocaml-erikd@mega-nerd.com> <Pine.LNX.4.58.0502031903410.14412@eiger.cip.physik.uni-muenchen.de> <009a01c50a1e$f6c92080$0100a8c0@mshome.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-15
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <009a01c50a1e$f6c92080$0100a8c0@mshome.net>
User-Agent: Mutt/1.5.6+20040907i
From: Basile STARYNKEVITCH <basile@starynkevitch.net>
X-Miltered: at concorde with ID 4203EF49.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 basile:01 basile:01 gava:01 ecrivait:01 wrote:01 ocaml:01 runtime:01 metaocaml:01 metaocaml:01 nerim:01 faiencerie:01 92340:01 reine:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.2
X-Spam-Level: 

Le Thu, Feb 03, 2005 at 07:34:15PM +0100, Frédéric Gava écrivait/wrote:
> Hi,
> 
> > Anyway, this leaves us with a very interesting question: how many people
> > actually do believe in the value of Ocaml? I, for myself, use it whenever
> > it is the most appropriate tool for a job (usually, when portability is
> > an issue). This is sometimes the case, but more often than not, LISP
> > turned out to be a better choice for what I do.

> What kinds of programs code with LISP could not be implemented (easely)
> using Ocaml ?

The main feature of Lisp that Ocaml does not have is the
meta-programming ability. This not only includes the powerful macro
system of Common Lisp (but Ocaml has Camlp4) but above all the ability
to genreate code at runtime.

The MetaOcaml extension of Ocaml (see http://metaocaml.org/ for
details) has a typeful meta-programming ability (which should be
stronger than that of Common Lisp, mostly because its type system
guarantee types of generated programs): howevefr the current
implementation does not garbage-collect the generated programs, which
make using it awkward.

I hope I am grossly right  - I may be wrong in the details, not being
a MetaOcaml expert.

Regards.

-- 
Basile STARYNKEVITCH         http://starynkevitch.net/Basile/ 
email: basile<at>starynkevitch<dot>net 
aliases: basile<at>tunes<dot>org = bstarynk<at>nerim<dot>net
8, rue de la Faïencerie, 92340 Bourg La Reine, France

