Return-Path: <juanca@suigeneris.org>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 2A1BABC88
	for <caml-list@yquem.inria.fr>; Thu, 10 Feb 2005 20:19:29 +0100 (CET)
Received: from mail.cwork.com (ctm.163.supernets.net [209.4.187.163] (may be forged))
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j1AJJSLe023660
	for <caml-list@yquem.inria.fr>; Thu, 10 Feb 2005 20:19:28 +0100
Message-Id: <200502101919.j1AJJSLe023660@nez-perce.inria.fr>
Received: from casiopea ([201.243.195.128])
        by mail.cwork.com (VisNetic.MailServer.v5.8.6.6) with SMTP id OWZEKG;
        Thu, 10 Feb 2005 14:20:51 -0500
From: =?iso-8859-1?Q?Juancarlo_A=F1ez?= <juanca@suigeneris.org>
To: "'Richard Jones'" <rich@annexia.org>
Cc: <caml-list@yquem.inria.fr>,
	<ocaml-lib-devel@lists.sourceforge.net>,
	<ocaml_beginners@yahoogroups.com>
Subject: RE: [Caml-list] String to list to string
Date: Thu, 10 Feb 2005 15:19:13 -0400
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Mailer: Microsoft Office Outlook, Build 11.0.6353
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2527
Thread-Index: AcUPWS/lldU2zx40TNGzoPckPuLddwASGapA
In-Reply-To: <20050210100915.GA7508@furbychan.cocan.org>
X-Miltered: at nez-perce with ID 420BB3C0.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 sourceforge:01 inefficient:01 functions:01 functions:01 functional:02 constructs:02 seems:03 string:03 string:03 library:03 library:03 efficiency:05 standard:07 standard:07 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO,
	MSGID_FROM_MTA_HEADER autolearn=disabled version=3.0.2
X-Spam-Level: 

Rich,

 | As others have said, these functions are not in the standard library.
 | However, useful functions like these[1] are available in 
 | Extlib, which you can find here:
 | 
 | http://sourceforge.net/projects/ocaml-lib/

Thanks. 

I don't understand why such functions are not part of the standard library.
Even if they are very easy to write, they are the kind of functions most
anyone _will_ have to write and not having them in the library is
inefficient.

Talking about efficiency, I've seen the solutions that have been posted, and
MHO is that having to recur to procedural constructs for such oviously
functional tasks as "implode" and "explode" seems odd.

Juanco

