Return-Path: <p.donadeo@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 949757EE4B
	for <caml-list@sympa.inria.fr>; Fri, 27 Sep 2013 20:16:31 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  p.donadeo@gmail.com) identity=pra; client-ip=209.85.128.44;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="p.donadeo@gmail.com";
  x-sender="p.donadeo@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  p.donadeo@gmail.com designates 209.85.128.44 as permitted
  sender) identity=mailfrom; client-ip=209.85.128.44;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="p.donadeo@gmail.com";
  x-sender="p.donadeo@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qe0-f44.google.com) identity=helo;
  client-ip=209.85.128.44;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="p.donadeo@gmail.com";
  x-sender="postmaster@mail-qe0-f44.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ai4DAH/KRVLRVYAslWdsb2JhbABbhBGCY0a9I4EYCBYOAQEBAQcNCQkSKoIlAQEFIx0BGx4DDAYFCw0CAiYCAiEBAREBBQEcBhOHcwEDD5tFjAFRgwqEEAoZJw1kiQABBQyBHYs9gnKCaoE2A5YWgWmMRINKGCmETzo
X-IPAS-Result: Ai4DAH/KRVLRVYAslWdsb2JhbABbhBGCY0a9I4EYCBYOAQEBAQcNCQkSKoIlAQEFIx0BGx4DDAYFCw0CAiYCAiEBAREBBQEcBhOHcwEDD5tFjAFRgwqEEAoZJw1kiQABBQyBHYs9gnKCaoE2A5YWgWmMRINKGCmETzo
X-IronPort-AV: E=Sophos;i="4.90,994,1371074400"; 
   d="scan'208";a="28354777"
Received: from mail-qe0-f44.google.com ([209.85.128.44])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 27 Sep 2013 20:16:30 +0200
Received: by mail-qe0-f44.google.com with SMTP id 3so2106188qeb.3
        for <caml-list@inria.fr>; Fri, 27 Sep 2013 11:16:29 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :content-type;
        bh=ZWwQVmCI8rK8tABbG1ytY/evlTRgUZ70cvzWs1qUVcg=;
        b=UYc8SXo2o1gpdpMjLd62Lp4mLlwadEKxlBnUTbwUHb72oUDqQfrxWNOQcTvSVnn6uU
         wxEFxfMObRrjR9u1WNt2JlGRd3vAW7fYlAWRz9m34IHXhKOGr8Sl3iCvo4QTgUx3Zpb2
         AAr3mkNd0Touj+MR78BBmikUnaD/flkrBZ/w6x+glaIjznd6oKppNtTaf4sn+AZHFoiX
         8xlV35RR48xzIQXscMEHlcq890TsKX5h9UzHsyjHs0vmdEt2w2AJxxs4tipJaFcsn6R6
         UcB0BMx2I8OabwSTWyOBK9GABLqQ9TyTrbrIalMT4StSX0KJBbb8Q529kgGZaWXe516l
         akRg==
X-Received: by 10.224.161.19 with SMTP id p19mr12192077qax.101.1380305789711;
 Fri, 27 Sep 2013 11:16:29 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.49.81.7 with HTTP; Fri, 27 Sep 2013 11:15:49 -0700 (PDT)
In-Reply-To: <CAN6ygOnmeFTkLsBMgGExJgcpdX_FpcmCq2ryO3x70z3yoKBDtg@mail.gmail.com>
References: <CAN6ygO=cnhc039DEOVf7uZqpTCedVO0SMnG+rvFw4hm4qPc7cg@mail.gmail.com>
 <CAPi0vKVcq4+qn_k0KnDUsMs1L495oWmeHoqPwJPMtEPYx=M-EA@mail.gmail.com>
 <CAN6ygOmuCX6HLfSns0tXQCF3LWMANqhpnSN0vGWcNg0one2QzQ@mail.gmail.com>
 <CAN6ygO=LeHdg0rWexQfkBhFdNo76=+s=5rrb8iG-ypUvPGp08Q@mail.gmail.com>
 <CAPi0vKUHB9aK8rZwbfenR+JqsNwheRWdjr-pvRfQeMdZxT+c-g@mail.gmail.com> <CAN6ygOnmeFTkLsBMgGExJgcpdX_FpcmCq2ryO3x70z3yoKBDtg@mail.gmail.com>
From: Paolo Donadeo <p.donadeo@gmail.com>
Date: Fri, 27 Sep 2013 20:15:49 +0200
Message-ID: <CAPzAKVARRPNA0Wed=BbaGYUN=1zCCKm=T87+NY6FRvC6tQdN+Q@mail.gmail.com>
To: OCaml mailing list <caml-list@inria.fr>
Content-Type: text/plain; charset=UTF-8
Subject: Re: [Caml-list] Fwd: Proposal: re-design of ocaml headers

On Fri, Sep 27, 2013 at 8:08 PM, Yotam Barnoy <yotambarnoy@gmail.com> wrote:
> What I can say is that bindings should be written at an abstract enough
> level that they don't mess directly with internal bit representations.

Many bindings deal with memory allocation. The binding of Lua deeply
interacts with the garbage collector and inspects the actual type
(tag) of OCaml value passed.

In principle you are right but the reality is that there is no much
"abstraction" in C :-)


-- 
Paolo
