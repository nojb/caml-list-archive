Return-Path: <jonathan.protzenko@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id E62EE820A1
	for <caml-list@sympa.inria.fr>; Mon,  2 Sep 2013 22:16:16 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  jonathan.protzenko@gmail.com) identity=pra;
  client-ip=209.85.212.182;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jonathan.protzenko@gmail.com";
  x-sender="jonathan.protzenko@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  jonathan.protzenko@gmail.com designates 209.85.212.182 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.212.182;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jonathan.protzenko@gmail.com";
  x-sender="jonathan.protzenko@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-wi0-f182.google.com) identity=helo;
  client-ip=209.85.212.182;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jonathan.protzenko@gmail.com";
  x-sender="postmaster@mail-wi0-f182.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkgBABvxJFLRVdS2k2dsb2JhbABagmZWg3iFXaUekkiBKRYOAQEBAQcLCwkUBCSCJAEBAQQBAiAEGQEbEgoBAQMMBgULDQkEEggDAgIJAwIBAgEPAgUMAQUBCgERBg0BBQIBAQ4Jh1QBAw8BC5sQi39RgwWECwoZJwMKZIhcAQUMjH2CbQcJgmCBNAOVLGCBaYEviwiDRkGESg
X-IPAS-Result: AkgBABvxJFLRVdS2k2dsb2JhbABagmZWg3iFXaUekkiBKRYOAQEBAQcLCwkUBCSCJAEBAQQBAiAEGQEbEgoBAQMMBgULDQkEEggDAgIJAwIBAgEPAgUMAQUBCgERBg0BBQIBAQ4Jh1QBAw8BC5sQi39RgwWECwoZJwMKZIhcAQUMjH2CbQcJgmCBNAOVLGCBaYEviwiDRkGESg
X-IronPort-AV: E=Sophos;i="4.89,1008,1367964000"; 
   d="scan'208,217";a="31226998"
Received: from mail-wi0-f182.google.com ([209.85.212.182])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 02 Sep 2013 22:16:15 +0200
Received: by mail-wi0-f182.google.com with SMTP id ez12so1715891wid.9
        for <caml-list@inria.fr>; Mon, 02 Sep 2013 13:16:16 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:cc:subject
         :references:in-reply-to:content-type;
        bh=AfLmwh6x7z+pn0wdhKUXBVG55KrIAlFPXkWve+4LjAo=;
        b=DxadhSbsyQH7b2vZKd3pn/t6zbu54gitIfW78Fi2suSa2aAz82F0J/Qs3mCVRL0HEv
         dTrXWvuGdjDCfewyYj48Ss6wcN28GJt8QemjwFo76ctigt6eGhysNJ9F4LuW2leyfgQZ
         J/PdA2dZ6aZTzSshR9jaf4zhluxE+o8JjGebgVg0pS6/7KaDpHq4NGgiKSAV26Ha1zPH
         aQn4HilWJ16WTwmoHnCPKSqPlY2Y1GiuLv3Zc+fo4GpiGd+mYYGJ6ZeLLXA5/UpLuSD5
         oJsw4GztoQ2AZLYRKWlRDFeMt96md3om4A3aKH1nStsT/bdKH9QhEmJsEqFfD4h1SH3V
         RsMQ==
X-Received: by 10.180.97.101 with SMTP id dz5mr15157485wib.11.1378152976020;
        Mon, 02 Sep 2013 13:16:16 -0700 (PDT)
Received: from ?IPv6:2a01:e35:2f37:f210:5e26:aff:fe0c:c1d8? ([2a01:e35:2f37:f210:5e26:aff:fe0c:c1d8])
        by mx.google.com with ESMTPSA id om9sm20356489wic.8.1969.12.31.16.00.00
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Mon, 02 Sep 2013 13:16:14 -0700 (PDT)
Message-ID: <5224F20C.1010905@gmail.com>
Date: Mon, 02 Sep 2013 22:16:12 +0200
From: Jonathan Protzenko <jonathan.protzenko@gmail.com>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:26.0) Gecko/20100101 Thunderbird/26.0a1
MIME-Version: 1.0
To: Ashish Agarwal <agarwal1975@gmail.com>
CC: Caml List <caml-list@inria.fr>
References: <5224B137.8070706@gmail.com> <CAMu2m2+T3PVH9nsbW64eiiowfusn9TouW4P6gx0qb1HDF2Y7ng@mail.gmail.com>
In-Reply-To: <CAMu2m2+T3PVH9nsbW64eiiowfusn9TouW4P6gx0qb1HDF2Y7ng@mail.gmail.com>
X-Enigmail-Version: 1.6a1pre
Content-Type: multipart/alternative;
 boundary="------------070700050209060905070704"
Subject: Re: [Caml-list] Literate (sort-of) programming in OCaml

This is a multi-part message in MIME format.
--------------070700050209060905070704
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hi everyone,

Thanks for the numerous replies. There are a lot of good solutions in
there, and the ones that looked closest to what I had in mind seem to be
MPP and the rwo-run-toplevel script. Some questions about these two tools:
- MPP seems to just have the built-in language. I couldn't find any
example in the examples/ directory that used another language, such as
OCaml. I guess that's because it's still in development?
- rwo-run-toplevel seems closer to what I have in mind; if I could send
all the ocaml parts to a top-level session, and put in my document what
gets sent to stdout (not the toplevel reply, that is, not the "val f:
int -> int" parts), that would be pretty much all I need.
rwo-run-toplevel seems to perform a lot of work, though: what are all
these rewrite rules?

Other solutions seemed interesting. The Perl script scared me a little
bit; being no Perl hacker, I would have a hard time using it. The
Markdown library does not seem to be an exact fit (I want the output of
arbitrary OCaml commands to be put in the middle of my markdown.) Stog
seems to be oriented towards reproducing an interactive toploop session,
while I'm more interested in executing arbitrary commands. Alain's sed
trick seems to be exactly what I need, I'm just a bit afraid if I ever
need to change something, it'll be break. But in essence, yes, that's
just all I need. Other proposals seemed a little bit too far away from
what I had in mind.

Thanks again for the replies!

~ jonathan

On 09/02/2013 06:29 PM, Ashish Agarwal wrote:
> OCaml Labs is developing MPP (Meta Preprocessor) [1]. It will be used
> in a new implementation of ocaml.org <http://ocaml.org> [2], which
> includes pages like 99 problems [3] that are generated by running
> ocaml code through the toploop. In case blah = Markdown, please also
> note the new Markdown library [4].
>
> [1] https://github.com/pw374/MPP-language-blender
> [2] http://lists.ocaml.org/pipermail/infrastructure/2013-July/000211.html
> [3] http://ocaml.org/tutorials/99problems.html
> [4] http://lists.ocaml.org/pipermail/infrastructure/2013-July/000223.html
>
>
>
> On Mon, Sep 2, 2013 at 11:39 AM, Jonathan Protzenko
> <jonathan.protzenko@gmail.com <mailto:jonathan.protzenko@gmail.com>>
> wrote:
>
>     Hi,
>
>     I am currently writing a big, mostly textual document in format blah
>     (blah being of a course a meta-variable). Are there any tools that
>     would allow me to interleave OCaml code with the contents of my
>     document?
>
>     More on my use-case. Creating this document requires me to perform
>     various subtasks, such as:
>     - write a code snippet in the document,
>     - put the code snippet in a file,
>     - call an external program on the file,
>     - paste the output into the document.
>
>     Naturally, I wish to automate this. I could roll my own set of
>     commands, and parse them with OCaml, but I would be re-creating a
>     scripting language, and it seems to me that interleaving OCaml code
>     within my document would be better. Here's what I have in mind:
>
>
>     blah blah blah blah blah blah blah blah blah blah blah blah blah blah
>     blah blah
>     blah blah blah blah blah blah blah blah blah blah blah blah blah blah
>     blah blah
>     blah ... we thus write the following code ... :
>
>     {%
>       let code = "<sample code>" in
>       output code
>     %}
>
>     blah blah blah ... after running the command blah ... the output is as
>     follows ... blah
>
>     {%
>       let f = write_into_temp_file code in
>       let s = run_and_read "myprogram" [f] in
>       output s
>     %}
>
>     blah blah blah blah blah blah blah blah blah blah blah blah blah blah
>     blah blah ...
>
>
>     Are you aware of any tool that would allow me to achieve this?
>
>     Thanks,
>
>     ~ jonathan
>
>     --
>     Caml-list mailing list.  Subscription management and archives:
>     https://sympa.inria.fr/sympa/arc/caml-list
>     Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>     Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>


--------------070700050209060905070704
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: 8bit

<html>
  <head>
    <meta content="text/html; charset=UTF-8" http-equiv="Content-Type">
  </head>
  <body bgcolor="#FFFFFF" text="#000000">
    <div class="moz-cite-prefix">Hi everyone,<br>
      <br>
      Thanks for the numerous replies. There are a lot of good solutions
      in there, and the ones that looked closest to what I had in mind
      seem to be MPP and the rwo-run-toplevel script. Some questions
      about these two tools:<br>
      - MPP seems to just have the built-in language. I couldn't find
      any example in the examples/ directory that used another language,
      such as OCaml. I guess that's because it's still in development?<br>
      - rwo-run-toplevel seems closer to what I have in mind; if I could
      send all the ocaml parts to a top-level session, and put in my
      document what gets sent to stdout (not the toplevel reply, that
      is, not the "val f: int -&gt; int" parts), that would be pretty
      much all I need. rwo-run-toplevel seems to perform a lot of work,
      though: what are all these rewrite rules?<br>
      <br>
      Other solutions seemed interesting. The Perl script scared me a
      little bit; being no Perl hacker, I would have a hard time using
      it. The Markdown library does not seem to be an exact fit (I want
      the output of arbitrary OCaml commands to be put in the middle of
      my markdown.) Stog seems to be oriented towards reproducing an
      interactive toploop session, while I'm more interested in
      executing arbitrary commands. Alain's sed trick seems to be
      exactly what I need, I'm just a bit afraid if I ever need to
      change something, it'll be break. But in essence, yes, that's just
      all I need. Other proposals seemed a little bit too far away from
      what I had in mind.<br>
      <br>
      Thanks again for the replies!<br>
      <pre class="moz-signature" cols="72">~ jonathan</pre>
      On 09/02/2013 06:29 PM, Ashish Agarwal wrote:<br>
    </div>
    <blockquote
cite="mid:CAMu2m2+T3PVH9nsbW64eiiowfusn9TouW4P6gx0qb1HDF2Y7ng@mail.gmail.com"
      type="cite">
      <div dir="ltr">
        <div>OCaml Labs is developing MPP (Meta Preprocessor) [1]. It
          will be used in a new implementation of <a
            moz-do-not-send="true" href="http://ocaml.org">ocaml.org</a>
          [2], which includes pages like 99 problems [3] that are
          generated by running ocaml code through the toploop. In case
          blah = Markdown, please also note the new Markdown library
          [4].<br>
        </div>
        <div><br>
        </div>
        <div>[1] <a moz-do-not-send="true"
            href="https://github.com/pw374/MPP-language-blender">https://github.com/pw374/MPP-language-blender</a><br>
        </div>
        <div>[2] <a moz-do-not-send="true"
href="http://lists.ocaml.org/pipermail/infrastructure/2013-July/000211.html">http://lists.ocaml.org/pipermail/infrastructure/2013-July/000211.html</a></div>
        <div class="gmail_extra">[3] <a moz-do-not-send="true"
            href="http://ocaml.org/tutorials/99problems.html">http://ocaml.org/tutorials/99problems.html</a></div>
        <div class="gmail_extra">[4] <a moz-do-not-send="true"
href="http://lists.ocaml.org/pipermail/infrastructure/2013-July/000223.html">http://lists.ocaml.org/pipermail/infrastructure/2013-July/000223.html</a></div>
        <div><br>
        </div>
      </div>
      <div class="gmail_extra"><br>
        <br>
        <div class="gmail_quote">On Mon, Sep 2, 2013 at 11:39 AM,
          Jonathan Protzenko <span dir="ltr">&lt;<a
              moz-do-not-send="true"
              href="mailto:jonathan.protzenko@gmail.com" target="_blank">jonathan.protzenko@gmail.com</a>&gt;</span>
          wrote:<br>
          <blockquote class="gmail_quote" style="margin:0 0 0
            .8ex;border-left:1px #ccc solid;padding-left:1ex">Hi,<br>
            <br>
            I am currently writing a big, mostly textual document in
            format blah<br>
            (blah being of a course a meta-variable). Are there any
            tools that<br>
            would allow me to interleave OCaml code with the contents of
            my<br>
            document?<br>
            <br>
            More on my use-case. Creating this document requires me to
            perform<br>
            various subtasks, such as:<br>
            - write a code snippet in the document,<br>
            - put the code snippet in a file,<br>
            - call an external program on the file,<br>
            - paste the output into the document.<br>
            <br>
            Naturally, I wish to automate this. I could roll my own set
            of<br>
            commands, and parse them with OCaml, but I would be
            re-creating a<br>
            scripting language, and it seems to me that interleaving
            OCaml code<br>
            within my document would be better. Here's what I have in
            mind:<br>
            <br>
            <br>
            blah blah blah blah blah blah blah blah blah blah blah blah
            blah blah<br>
            blah blah<br>
            blah blah blah blah blah blah blah blah blah blah blah blah
            blah blah<br>
            blah blah<br>
            blah ... we thus write the following code ... :<br>
            <br>
            {%<br>
              let code = "&lt;sample code&gt;" in<br>
              output code<br>
            %}<br>
            <br>
            blah blah blah ... after running the command blah ... the
            output is as<br>
            follows ... blah<br>
            <br>
            {%<br>
              let f = write_into_temp_file code in<br>
              let s = run_and_read "myprogram" [f] in<br>
              output s<br>
            %}<br>
            <br>
            blah blah blah blah blah blah blah blah blah blah blah blah
            blah blah<br>
            blah blah ...<br>
            <br>
            <br>
            Are you aware of any tool that would allow me to achieve
            this?<br>
            <br>
            Thanks,<br>
            <br>
            ~ jonathan<br>
            <span class="HOEnZb"><font color="#888888"><br>
                --<br>
                Caml-list mailing list.  Subscription management and
                archives:<br>
                <a moz-do-not-send="true"
                  href="https://sympa.inria.fr/sympa/arc/caml-list"
                  target="_blank">https://sympa.inria.fr/sympa/arc/caml-list</a><br>
                Beginner's list: <a moz-do-not-send="true"
                  href="http://groups.yahoo.com/group/ocaml_beginners"
                  target="_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
                Bug reports: <a moz-do-not-send="true"
                  href="http://caml.inria.fr/bin/caml-bugs"
                  target="_blank">http://caml.inria.fr/bin/caml-bugs</a><br>
              </font></span></blockquote>
        </div>
        <br>
      </div>
    </blockquote>
    <br>
  </body>
</html>

--------------070700050209060905070704--
