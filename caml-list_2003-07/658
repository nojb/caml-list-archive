Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA27400; Thu, 31 Jul 2003 18:51:11 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA18502 for <caml-list@pauillac.inria.fr>; Thu, 31 Jul 2003 18:51:10 +0200 (MET DST)
Received: from ontosoft.com (ontosoft.com [209.101.228.108])
	by concorde.inria.fr (8.11.1/8.11.1) with SMTP id h6VGp8f05365
	for <caml-list@inria.fr>; Thu, 31 Jul 2003 18:51:09 +0200 (MET DST)
Received: (qmail 2002 invoked by uid 1001); 31 Jul 2003 16:51:06 -0000
Date: Thu, 31 Jul 2003 11:51:06 -0500
From: Fred Yankowski <fred@ontosys.com>
To: Gerd Stolpmann <info@gerd-stolpmann.de>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] GODI available for download
Message-ID: <20030731165106.GA1754@ontosoft.com>
References: <1059601286.9556.8.camel@ice.gerd-stolpmann.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1059601286.9556.8.camel@ice.gerd-stolpmann.de>
User-Agent: Mutt/1.4i
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; yankowski:01 ontosys:01 caml-list:01 gerd:01 stolpmann:01 bootstrap:01 xlib:01 -dev:01 recursively:01 dependencies:01 keyid:01 449345:01 deerpath:01 batavia:01 60510:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, Jul 30, 2003 at 11:41:27PM +0200, Gerd Stolpmann wrote:
> In the past days I have worked on GODI, an experimental source-based
> O'Caml distribution, and I think it is now worth a try.
> 
> You can get the current bootstrap tarball here:
> 
> http://www.ocaml-programming.de/packages/godi-bootstrap-20030730.tar.gz

I gave it a try on a Linux 2.4.20 / Debian 3.0 machine, where (as far
as I can recall) I have never installed ocaml.  Although I have lots
of experience with Debian package management, I've never BSD-style
package management tooks before.  So here's what ensued:

The godi-ocaml package built and installed easily.

To build godi-ocaml-graphics I had to first install the Debian
xdev-libs package to get the needed Xlib.h and Xutil.h files.  No big
deal.

Building godi-ocaml-labltk was a minor pain.  I had to install the
Debian tcl8.3-dev and tk8.3-dev packages to get the tcl.h and tk.h
files.  But building godi-ocaml-labtl would still fail to find those
headers.  I saw the note in the main README about "So if your tcl/tk
libraries are not found, you have to fix the problem in
godi-ocaml-src" and I eventually saw the note in the DESCR file for
godi-ocaml-src saying that tcl/tk should be installed first.

So then it was a bit of a mystery, how to rebuild godi-ocaml-src and
whatever depends on it.  Nothing much happened when I ran 'godi_build
godi-ocaml-src' again, so I ran 'godi_delete godi-ocaml-src' and tried
again, whereupon it rebuilt from source and finished OK.

Now, presumably, godi-caml and godi-caml-graphics need to be rebuilt
as well.  Doing "godi_build godi-ocaml" reports that the package is
already up-to-date.  Doing "godi_delete godi-ocaml" fails because the
godi-ocaml-graphics package depends on it, so I did "godi_delete -f
godi-ocaml" to force the delete.  That worked, mostly, but gave some
warnings about directories that could not be removed because they aren't
empty, because of files still there for godi-ocaml-graphics.  (OK,
that wasn't my brightest move, but I thought using -f would
recursively remove any packages that depend on godi-ocaml -- and that
did not happen).  Run "godi_delete godi-ocaml-graphics".  Now doing
"godi_build godi-ocaml" rebuilds from source ... but it fails near the
end because a lib/ocaml/std-lib/ directory already exists.  Remove
that and try again; now the build finishes OK.

Build godi-ocaml-graphics again; OK.  And now building
godi-ocaml-labltk works just fine.  Minimal testing suggests that the
executables are working well.  ocamlbrowser runs OK.

So, that's how it went for someone who knows Linux system admin well,
but has no experience with BSD packaging tools and almost no
experience with ocaml distribution/packaging.  The "GODI" tools work
well, but I need a bit more information about their theory of
operation to understand how to recover when things go wrong.  I'd also
like to understand the role of the godi-ocaml-src package better, and
what sort of implicit dependencies other GODI ocaml packages have on
it.

Overall, it's an impressive first cut at an easy to use package
management system for Ocaml.

-- 
Fred Yankowski      fred@ontosys.com           tel: +1.630.879.1312
OntoSys, Inc	    PGP keyID: 7B449345        fax: +1.630.879.1370
www.ontosys.com     38W242 Deerpath Rd, Batavia, IL 60510-9461, USA

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

