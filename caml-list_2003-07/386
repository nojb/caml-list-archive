Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA22093; Sun, 6 Jul 2003 00:16:02 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA26043 for <caml-list@pauillac.inria.fr>; Sun, 6 Jul 2003 00:16:00 +0200 (MET DST)
Received: from mail.cql.com (jael.cql.com [216.19.209.133] (may be forged))
	by nez-perce.inria.fr (8.11.1/8.11.1) with SMTP id h65MFxT21818
	for <caml-list@pauillac.inria.fr>; Sun, 6 Jul 2003 00:16:00 +0200 (MET DST)
Received: (qmail 11021 invoked from network); 5 Jul 2003 15:11:46 -0000
Received: from unknown (HELO amethyst.cql.com) (192.168.1.14)
  by mail.cql.com with SMTP; 5 Jul 2003 15:11:46 -0000
Date: Sat, 5 Jul 2003 15:15:57 -0700
From: Seth Kurtzberg <seth@cql.com>
To: Matt Gushee <mgushee@havenrock.com>
Cc: caml-list@pauillac.inria.fr
Subject: Re: [OT] OODBs (was Re: [Caml-list] Ocaml Object-Oriented
 database?)
Message-Id: <20030705151557.757b353d.seth@cql.com>
In-Reply-To: <20030705204116.GA16492@swordfish>
References: <200307051800.47353.lists@mjt.ch>
	<20030705122956.278d4349.seth@cql.com>
	<20030705204116.GA16492@swordfish>
Organization: M. I. S. Corp.
X-Mailer: Sylpheed version 0.9.2 (GTK+ 1.2.10; i686-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 gushee:01 mgushee:01 havenrock:01 complexities:01 sub-optimal:01 abandon:01 rdb:99 englewood:01 manure:01 ignores:01 --lao:01 merel:01 bug:01 faq:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sat, 5 Jul 2003 14:41:16 -0600
Matt Gushee <mgushee@havenrock.com> wrote:

> On Sat, Jul 05, 2003 at 12:29:56PM -0700, Seth Kurtzberg wrote:
> > 
> > I've done some work in this direction, although with an object-relational database, not an OODB.  I'm convinced that the OODB concept is fatally flawed.
> 
> I've heard this statement before, but most of the explanations I've heard amount to "been there, done that, didn't work." What is wrong with OODBs, in your opinion?

They don't deliver what they promise.  The basic idea is to make programming with persistent objects similar to programming with ordinary objects.  But the complexities involved with implementing OODBs requires you to code in sub-optimal ways.

To abandon a well established technology such as RDB, you need a reason why the newer method is better, so you need to justify the use of the OODB paradigm in some rational terms:  productivity, reliability, ease of maintenance, etc.  The OODB products I've used simply don't deliver this.

The object/relational hybrid is a much better option as it leverages 25 years of R&D in the database community. 

> 
> -- 
> Matt Gushee                 When a nation follows the Way,
> Englewood, Colorado, USA    Horses bear manure through
> mgushee@havenrock.com           its fields;
> http://www.havenrock.com/   When a nation ignores the Way,
>                             Horses bear soldiers through
>                                 its streets.
>                                 
>                             --Lao Tzu (Peter Merel, trans.)
> 
> -------------------
> To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
> Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> 


-- 
Seth Kurtzberg
MIS Corp
480-661-1849
seth@cql.com

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

