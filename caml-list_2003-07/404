Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA20190; Wed, 9 Jul 2003 14:41:21 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA25134 for <caml-list@pauillac.inria.fr>; Wed, 9 Jul 2003 14:41:19 +0200 (MET DST)
Received: from lri.lri.fr (lri.lri.fr [129.175.15.1])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h69CfJf20434
	for <caml-list@inria.fr>; Wed, 9 Jul 2003 14:41:19 +0200 (MET DST)
Received: from pc8-123 (pc8-123 [129.175.8.123])
          by lri.lri.fr (8.11.6p2/jtpda-5.3.2) with ESMTP id h69CXqt06762
          ; Wed, 9 Jul 2003 14:33:52 +0200 (MEST)
Received: from filliatr by pc8-123 with local (Exim 3.35 #1 (Debian))
	id 19aE8t-00041P-00; Wed, 09 Jul 2003 14:33:51 +0200
From: Jean-Christophe Filliatre <Jean-Christophe.Filliatre@lri.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Message-ID: <16140.2991.654824.906248@gargle.gargle.HOWL>
Date: Wed, 9 Jul 2003 14:33:51 +0200
To: Fabrice Le Fessant <lefessan@tyminouch.dyndns.org>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] heap profiling
In-Reply-To: <16139.59948.178030.241482@tyminouch.dyndns.org>
References: <16139.59948.178030.241482@tyminouch.dyndns.org>
X-Mailer: VM 7.03 under Emacs 20.7.2
Reply-To: Jean-Christophe.Filliatre@lri.fr (Jean-Christophe Filliatre)
X-MailScanner: Found to be clean
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; filliatre:01 lri:01 caml-list:01 implemented:01 3.06:01 filliatr:01 ocaml:01 writes:01 module:03 heap:03 allocated:03 anybody:03 data:03 fabrice:04 implement:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Fabrice Le Fessant writes:
 > 
 >   I would like to know if anybody has implemented some kind of
 > memory/heap usage profiling for the current version (3.06) of Ocaml,
 > giving for example the amount of live data in the heap allocated by
 > each function or module ? or the amount of data retained by some root ?
 >   Anybody plans to implement such a tool ?

Regarding  the last  point  (the amount  of  data used  by some  ocaml
values(s)), I implemented a small  module Size for this purpose. It is
available at http://www.lri.fr/~filliatr/software.en.html

Hope this helps,
-- 
Jean-Christophe Filliâtre (http://www.lri.fr/~filliatr)

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

