Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA02969; Wed, 23 Jul 2003 09:03:00 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA20795 for <caml-list@pauillac.inria.fr>; Wed, 23 Jul 2003 09:02:58 +0200 (MET DST)
Received: from lindig.dyndns.org (pD9E34F80.dip.t-dialin.net [217.227.79.128])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h6N72vf21639
	for <caml-list@inria.fr>; Wed, 23 Jul 2003 09:02:57 +0200 (MET DST)
Received: by lindig.dyndns.org (Postfix, from userid 1002)
	id A65525119; Tue, 22 Jul 2003 22:48:17 +0200 (CEST)
Date: Tue, 22 Jul 2003 22:48:17 +0200
From: Christian Lindig <lindig@eecs.harvard.edu>
To: james woodyatt <jhw@wetware.com>
Cc: The Trade <caml-list@inria.fr>
Subject: Re: [Caml-list] GODI (was: CTAN/CPAN for Caml (COCAN ...?))
Message-ID: <20030722204816.GA502@eecs.harvard.edu>
Mail-Followup-To: Christian Lindig <lindig@eecs.harvard.edu>,
	james woodyatt <jhw@wetware.com>, The Trade <caml-list@inria.fr>
References: <20030720183027.GB559@eecs.harvard.edu> <2358A22D-BB97-11D7-B7E1-000393BA7EBA@wetware.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <2358A22D-BB97-11D7-B7E1-000393BA7EBA@wetware.com>
X-No-Archive: yes
X-URL: http://www.eecs.harvard.edu/~lindig/
User-Agent: Mutt/1.5.4i
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; lindig:01 caml-list:01 cpan:01 woodyatt:01 compiler:01 ocaml:01 caml:01 0700,:01 distinguish:01 syntax:02 compile:02 modules:02 identifier:03 module:03 wrote:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, Jul 21, 2003 at 09:19:43AM -0700, james woodyatt wrote:
> Yeah, the more I think about this problem, the more convinced I am that 
> the only way to solve the problem well enough to quiet the bulk of the 
> complaining is to do something-- in the syntax of the language-- to 
> couple the *name* of a module with the globally unique *identifier* of 
> the library that contains it.

I agree and like to add another aspect: relative access of modules.
Sometimes we just want to use a standard module and we don't care where
it comes from exactly. At other times we just know that the module we
are looking for resides in the same directory as our current module
because we wrote it and put it there. The current OCaml syntax does not
distinguish between these two. I believe the C inventors had a good
reason to have both #include <...> and #include "..." (the latter
includes a file relative to the location of the source file that
contains it (and not relative to the $CWD of the compiler)).  

A well-designed library would refer relatively to its own modules, plus
some standard modules. It should compile independently of its position
in the file system.

-- Christian

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

