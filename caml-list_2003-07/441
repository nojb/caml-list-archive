Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id EAA24198; Tue, 15 Jul 2003 04:13:36 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA24887 for <caml-list@pauillac.inria.fr>; Tue, 15 Jul 2003 04:13:34 +0200 (MET DST)
Received: from acsn03.bu.edu (acsn03.bu.edu [128.197.159.63])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h6F2DXf23521
	for <caml-list@inria.fr>; Tue, 15 Jul 2003 04:13:33 +0200 (MET DST)
Received: from bu.edu (bays193-0b01-dhcp060.bu.edu [168.122.153.60]) by acsn03.bu.edu ((8.9.3p2.buoit.v1.3)/BU_Server-1.3) with ESMTP id WAA54426; Mon, 14 Jul 2003 22:12:25 -0400
Date: Mon, 14 Jul 2003 22:12:22 -0400
Subject: Re: [Caml-list] PortAudio on ocaml
Content-Type: text/plain; charset=US-ASCII; format=flowed
Mime-Version: 1.0 (Apple Message framework v552)
Cc: caml-list@inria.fr
To: "SooHyoung Oh" <shoh@duonix.com>
From: Likai Liu <liulk@bu.edu>
In-Reply-To: <000801c34a69$51f8fec0$fe00a8c0@hama>
Message-Id: <C4EA56AA-B669-11D7-9218-000393C43D24@bu.edu>
Content-Transfer-Encoding: 7bit
X-Mailer: Apple Mail (2.552)
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; liu:99 caml-list:01 glance:01 threads:01 callback:01 api:01 callbacks:01 clarifies:01 implementors:01 ocaml:01 module:03 wrote:03 interface:03 library:03 soohyoung:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


On Monday, July 14, 2003, at 08:37  PM, SooHyoung Oh wrote:

>
> I didn't read your message seriously,
> but in my first glance, what you want to seems to be asychroneous 
> threads.
> Why don't you use Event module of threads library?
> It's a Concurrent ML.

The implementation is up to the actual PortAudio implementors 
themselves, which is different on all the platforms that PortAudio runs 
on. They use a callback based API as the common interface that each 
PortAudio implementation would follow. I have no say over whether they 
should use Event module or otherwise. Event is synchronous. The problem 
of wrapping PortAudio callbacks using Event is that callbacks have a 
realtime requirement, that is, they're required to finish within a 
certain amount of time, so they must be processed right away, unlike 
Event that counts on being received at some convenient time. Callbacks 
need to return directly to PortAudio for further processing.

Hope this clarifies.

liulk

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

