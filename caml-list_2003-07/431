Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA08046; Mon, 14 Jul 2003 14:34:17 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA02671 for <caml-list@pauillac.inria.fr>; Mon, 14 Jul 2003 14:34:16 +0200 (MET DST)
Received: from cantina.students.cs.unibo.it (cantina.students.cs.unibo.it [130.136.3.110])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h6ECYFT13729
	for <caml-list@inria.fr>; Mon, 14 Jul 2003 14:34:15 +0200 (MET DST)
Received: from fistandantilus.takhisis.org (postfix@[130.136.32.60])
	by cantina.students.cs.unibo.it (8.12.4/8.12.4/Debian-2) with ESMTP id h6ECYFZH000618
	for <caml-list@inria.fr>; Mon, 14 Jul 2003 14:34:15 +0200
Received: by fistandantilus.takhisis.org (Postfix, from userid 3148)
	id DEC13274236; Mon, 14 Jul 2003 14:34:14 +0200 (CEST)
Date: Mon, 14 Jul 2003 14:34:14 +0200
From: Stefano Zacchiroli <zack@bononia.it>
To: Inria Ocaml Mailing List <caml-list@inria.fr>
Subject: [Caml-list] bytecode threads which don't start
Message-ID: <20030714123414.GA2075@fistandantilus.takhisis.org>
Mail-Followup-To: Inria Ocaml Mailing List <caml-list@inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.4i
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; bononia:01 threads:01 timeouts:01 debug:01 ocaml:01 bytecode:01 threaded:02 native:02 thread:02 bologna:03 zacchiroli:03 reproduce:03 library:03 romney:03 unibo:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I'm the maintainer of a tiny library that can be used to create simple
standalone http servers. The library support different http servers
architecture, including the classical multi threaded one where a new
thread is created to serve each incoming request.

I'm now facing the problem that it works perfectly with pthreads, both
in bytecode and native code, but it doesn't work with bytecode ocaml
threads.

I've debugged a bit the problem and the result is that thread created
with Thread.create simply don't start. The function return but the
function passed as first argument simply doesn't get executed.

I don't know how to debug further more the problem. Unfortuntaly I'm not
able to reproduce the problem with tiny examples. So I'm wondering if I
had used some "prohibited" features that don't fit well with bytecode
threads (I'm for example using both signals and timeouts).

Any hints?

TIA

-- 
Stefano Zacchiroli  --  Master in Computer Science @ Uni. Bologna, Italy
zack@{cs.unibo.it,debian.org,bononia.it}  -  http://www.bononia.it/zack/
"  I know you believe you understood what you think I said, but I am not
sure you realize that what you heard is not what I meant!  " -- G.Romney

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

