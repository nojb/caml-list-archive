Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA18355; Wed, 16 Jul 2003 19:47:26 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA20549 for <caml-list@pauillac.inria.fr>; Wed, 16 Jul 2003 19:47:25 +0200 (MET DST)
Received: from acsn03.bu.edu (acsn03.bu.edu [128.197.159.63])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h6GHlNT19254;
	Wed, 16 Jul 2003 19:47:24 +0200 (MET DST)
Received: from bu.edu (cs10-dhcp3.bu.edu [128.197.10.132]) by acsn03.bu.edu ((8.9.3p2.buoit.v1.3)/BU_Server-1.3) with ESMTP id NAA326868; Wed, 16 Jul 2003 13:46:14 -0400
Date: Wed, 16 Jul 2003 13:46:14 -0400
Subject: Re: [Caml-list] PortAudio on ocaml
Content-Type: text/plain; charset=US-ASCII; format=flowed
Mime-Version: 1.0 (Apple Message framework v552)
Cc: caml-list@inria.fr, Likai Liu <liulk@bu.edu>
To: Damien Doligez <Damien.Doligez@inria.fr>
From: Likai Liu <liulk@bu.edu>
In-Reply-To: <9368FA18-B7AE-11D7-8073-0003930FCE12@inria.fr>
Message-Id: <652B2F34-B7B5-11D7-B208-000393C43D24@bu.edu>
Content-Transfer-Encoding: 7bit
X-Mailer: Apple Mail (2.552)
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; liu:99 caml-list:01 damien:01 callback:01 dispatching:01 runtime:01 ocaml:01 garbage:01 blocking:01 doligez:01 thread:02 o'caml:02 wrote:03 probably:05 feet:93 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

is a "leave_blocking_section()" call enough to guarentee that?

liulk

On Wednesday, July 16, 2003, at 12:57  PM, Damien Doligez wrote:

>> I think garbage collection inside the callback is probably okay, if 
>> it doesn't do other fancy things, such as dispatching signals or 
>> influence thread scheduling. What does O'Caml runtime do during 
>> garbage collection?
>
> Garbage collection inside the callback is probably OK, if you can 
> guarantee
> that the callback does not occur during garbage collection, or any 
> other
> operation that assumes that memory doesn't move under its feet.
>
> -- Damien
>

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

