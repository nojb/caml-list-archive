Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA10693; Sun, 13 Jul 2003 21:15:02 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA18642 for <caml-list@pauillac.inria.fr>; Sun, 13 Jul 2003 21:15:01 +0200 (MET DST)
Received: from exchfe1.cs.cornell.edu (exchfe1.cs.cornell.edu [128.84.97.27])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h6DJF0f10241
	for <caml-list@pauillac.inria.fr>; Sun, 13 Jul 2003 21:15:00 +0200 (MET DST)
Received: from EXCHVS2.cs.cornell.edu ([128.84.97.24]) by exchfe1.cs.cornell.edu with Microsoft SMTPSVC(5.0.2195.5329);
	 Sun, 13 Jul 2003 15:14:56 -0400
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
X-MimeOLE: Produced By Microsoft Exchange V6.0.6375.0
Subject: RE: [Caml-list] Does Java 1.5 change its potential as a target?
Date: Sun, 13 Jul 2003 15:14:55 -0400
Message-ID: <FB4F95390166B14C90E4DD950D69D6E246F3CE@EXCHVS2.cs.cornell.edu>
Thread-Topic: [Caml-list] Does Java 1.5 change its potential as a target?
Thread-Index: AcNJPryJ5HWldwM7TsGra3D/hu+REgAM7A5w
From: "Gregory Morrisett" <jgm@cs.cornell.edu>
To: "Ryan R Newton" <newton@MIT.EDU>, <caml-list@pauillac.inria.fr>
X-OriginalArrivalTime: 13 Jul 2003 19:14:56.0418 (UTC) FILETIME=[0BC74020:01C34973]
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; morrisett:01 cornell:01 caml-list:01 generics:01 unions:01 downcasts:01 -greg:01 jvm:01 encoded:02 jgm:03 object:03 java:07 isn't:11 clr:13 point:13 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

>If the 1.5 release of the JVM will support generics and=20
>discriminated unions, is there anything keeping it from being=20
>on par with the .NET CLR (w/ ILX extensions) for ML=20
>implementation?  That is, can the F# project be repeated for=20
>Java after this point?

My understanding is that the JVM isn't changing, just Java.
So, for instance, generics are encoded by doing up-casts to
Object and downcasts, etc.  So, we won't be any better off
trying to do F# on the JVM than we are today. =20

-Greg

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

