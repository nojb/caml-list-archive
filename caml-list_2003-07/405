Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA28350; Wed, 9 Jul 2003 17:03:23 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA05034 for <caml-list@pauillac.inria.fr>; Wed, 9 Jul 2003 17:03:22 +0200 (MET DST)
Received: from tyminouch.dyndns.org (pc4-cmbg2-5-cust143.cmbg.cable.ntl.com [81.100.86.143])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h69F3Lf00219
	for <caml-list@inria.fr>; Wed, 9 Jul 2003 17:03:21 +0200 (MET DST)
Received: from tyminouch.dyndns.org (tyminouch [127.0.0.1])
	by tyminouch.dyndns.org (8.12.5/8.12.5) with ESMTP id h69ExYId023311;
	Wed, 9 Jul 2003 16:59:34 +0200
Received: (from lefessan@localhost)
	by tyminouch.dyndns.org (8.12.5/8.12.5/Submit) id h69ExYGm023308;
	Wed, 9 Jul 2003 16:59:34 +0200
From: Fabrice Le Fessant <lefessan@tyminouch.dyndns.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <16140.11733.866698.152410@tyminouch.dyndns.org>
Date: Wed, 9 Jul 2003 16:59:33 +0200
To: Jean-Christophe.Filliatre@lri.fr (Jean-Christophe Filliatre)
Cc: Fabrice Le Fessant <lefessan@tyminouch.dyndns.org>, caml-list@inria.fr
Subject: Re: [Caml-list] heap profiling
References: <16139.59948.178030.241482@tyminouch.dyndns.org>
	<16140.2991.654824.906248@gargle.gargle.HOWL>
X-Mailer: VM 7.14 under Emacs 21.2.1
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 implemented:01 lri:01 filliatr:01 counted:01 ocaml:01 garbage:01 objects:02 module:03 heap:03 data:03 fabrice:04 roots:05 probably:05 fessant:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


>  Regarding  the last  point  (the amount  of  data used  by some  ocaml
>  values(s)), I implemented a small  module Size for this purpose. It is
>  available at http://www.lri.fr/~filliatr/software.en.html

The problem is that your Size module does not indicate which part of
the size retained by a root is maybe retained by other roots. By the
way, since garbage collections might occur during the execution of
your module, and objects moved in memory, some objects can be counted
twice by your function (only if they were in the minor heap or if
there is a compaction), leading to a small inaccuracy. You should
probably finish the major collection, and prevent compaction during
its execution.

- Fabrice

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

