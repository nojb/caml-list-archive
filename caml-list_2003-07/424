Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA32600; Sat, 12 Jul 2003 00:05:56 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA06336 for <caml-list@pauillac.inria.fr>; Sat, 12 Jul 2003 00:05:55 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h6BM5of02688;
	Sat, 12 Jul 2003 00:05:50 +0200 (MET DST)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA00369; Sat, 12 Jul 2003 00:05:49 +0200 (MET DST)
From: Pierre Weis <pierre.weis@inria.fr>
Message-Id: <200307112205.AAA00369@pauillac.inria.fr>
Subject: Re: [Caml-list] adding data persistency in Ocaml...
In-Reply-To: <16141.20207.531689.793421@hector.lesours> from Basile STARYNKEVITCH at "Jul 10, 103 01:33:03 pm"
To: basile@starynkevitch.net (Basile STARYNKEVITCH)
Date: Sat, 12 Jul 2003 00:05:49 +0200 (MET DST)
Cc: caml-list@inria.fr
X-Mailer: ELM [version 2.4ME+ PL28 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; pierre:01 weis:01 caml-list:01 persistency:01 basile:01 faiencerie:01 92340:01 reine:01 abstraction:01 abstracted:01 jfla:01 furuse:01 nerim:01 cristal:01 tunes:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> If you have wishes or ideas on how to do it, potential applications in
> need of it (CGIs are obvious candidates, but there are other
> interested applications) or pitfalls to avoid, or relevant literature,
> please feel free to discuss them on the list (or to send it to me if
> you feel it is not of general interest).
[...]
> -- 
> 
> Basile STARYNKEVITCH         http://starynkevitch.net/Basile/ 
> email: basile<at>starynkevitch<dot>net 
> aliases: basile<at>tunes<dot>org = bstarynk<at>nerim<dot>net
> 8, rue de la Faïencerie, 92340 Bourg La Reine, France
> 
> -------------------

Articles have been written on the subject by members of the Cristal
group at INRIA (they called that feature safe value I/Os); they
discussed in long the difference between writing then reading back
values from a single executable and transferring data among unrelated
programs + they explain the tension between being able to read back
stuff from a modified program wrt supporting type abstraction (either
types abstracted in Caml or type abstraction due to external
definitions).  They also study the type systems needed to support this
feature directly from within the language, and the interaction with
dynamic values. Sound relevant to your study.

http://pauillac.inria.fr/jfla/2000/furuse.ps.gz
http://pauillac.inria.fr/jfla/2001/actes/07-furuse.ps

Pierre Weis

INRIA, Projet Cristal, Pierre.Weis@inria.fr, http://pauillac.inria.fr/~weis/


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

