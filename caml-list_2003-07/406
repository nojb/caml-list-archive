Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA24208; Wed, 9 Jul 2003 17:03:17 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA29855 for <caml-list@pauillac.inria.fr>; Wed, 9 Jul 2003 17:03:16 +0200 (MET DST)
Received: from mail.eecs.harvard.edu (bowser.eecs.harvard.edu [140.247.60.24])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h69F3Ff00211
	for <caml-list@inria.fr>; Wed, 9 Jul 2003 17:03:15 +0200 (MET DST)
Received: from labrador.eecs.harvard.edu (labrador.eecs.harvard.edu [140.247.60.247])
	by mail.eecs.harvard.edu (Postfix) with ESMTP id 942AC54C4B1
	for <caml-list@inria.fr>; Wed,  9 Jul 2003 11:03:12 -0400 (EDT)
To: caml-list@inria.fr
Subject: Re: [Caml-list] heap profiling 
In-Reply-To: Message from Fabrice Le Fessant <lefessan@tyminouch.dyndns.org> 
   of "Wed, 09 Jul 2003 12:10:52 +0200." <16139.59948.178030.241482@tyminouch.dyndns.org> 
References: <16139.59948.178030.241482@tyminouch.dyndns.org> 
Date: Wed, 09 Jul 2003 11:03:12 -0400
From: Norman Ramsey <nr@eecs.harvard.edu>
Message-Id: <20030709150312.942AC54C4B1@mail.eecs.harvard.edu>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; ramsey:01 caml-list:01 implemented:01 3.06:01 barrier:01 ocaml:01 caml:01 norman:01 module:03 heap:03 eecs:03 allocated:03 anybody:03 data:03 root:07 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

 >   I would like to know if anybody has implemented some kind of
 > memory/heap usage profiling for the current version (3.06) of Ocaml,
 > giving for example the amount of live data in the heap allocated by
 > each function or module ? or the amount of data retained by some root ?

We would be thrilled to have such a tool, but we don't have the
resources to build one.  (I had a student try last summer, but the
project never really got anywhere.)

Our inability to understand the memory usage of our code is the single
greatest barrier to improving the performance of our Caml programs.


Norman

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

