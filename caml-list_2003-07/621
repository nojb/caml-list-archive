Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id FAA29808; Tue, 29 Jul 2003 05:20:02 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id FAA06219 for <caml-list@pauillac.inria.fr>; Tue, 29 Jul 2003 05:20:01 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h6T3JxT20032
	for <caml-list@inria.fr>; Tue, 29 Jul 2003 05:19:59 +0200 (MET DST)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3p2/3.7W) with ESMTP id MAA17469;
	Tue, 29 Jul 2003 12:19:55 +0900 (JST)
To: checker@d6.com
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] naming parts of optional arguments?
In-Reply-To: <4.3.2.7.2.20030728092556.02f23270@localhost>
References: <4.3.2.7.2.20030727203156.0240ddd0@localhost>
	<20030728161851Y.garrigue@kurims.kyoto-u.ac.jp>
	<4.3.2.7.2.20030728092556.02f23270@localhost>
X-Mailer: Mew version 1.94.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20030729121955V.garrigue@kurims.kyoto-u.ac.jp>
Date: Tue, 29 Jul 2003 12:19:55 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 17
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; jacques:01 caml-list:01 hecker:01 checker:01 val:01 shorthand:01 chris:01 garrigue:01 unit:03 variable:03 arguments:03 let:04 explained:05 jul:06 kurims:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] naming parts of optional arguments?
Date: Mon, 28 Jul 2003 09:35:15 -0700

> 
> >No contradiction at all: ?xy: is a label, not a variable name.
> 
> Well, except for in this case, of course, when it is a variable name:
> 
> # let f ?xy () = xy;;
> val f : ?xy:'a -> unit -> 'a option = <fun>

Where do you see a ?xy: in the above source code?
?xy is a shorthand for ?xy:xy, as explained in the manual.
xy is the variable, not ?xy:.

Jacques Garrigue

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

