Return-Path: <modlfo@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 6E7877ED9B
	for <caml-list@sympa.inria.fr>; Fri,  9 May 2014 22:16:05 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  modlfo@gmail.com) identity=pra; client-ip=209.85.216.180;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="modlfo@gmail.com";
  x-sender="modlfo@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  modlfo@gmail.com designates 209.85.216.180 as permitted
  sender) identity=mailfrom; client-ip=209.85.216.180;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="modlfo@gmail.com";
  x-sender="modlfo@gmail.com"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qc0-f180.google.com) identity=helo;
  client-ip=209.85.216.180;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="modlfo@gmail.com";
  x-sender="postmaster@mail-qc0-f180.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkACAJc2bVPRVdi0lGdsb2JhbABZg1VYgmeoTgEGgmWXMwGBEggWDgEBAQEHCwsJEiqCJQEBBAEjHQEbHQEDAQsGBQsNKgICIgERAQUBDgENBhOILAEDCQigUIwRUYMNmW8KGScNZIU7EQEFDIVKiHwHgnWBSwSVT4N4jSCDcRgphGg7
X-IPAS-Result: AkACAJc2bVPRVdi0lGdsb2JhbABZg1VYgmeoTgEGgmWXMwGBEggWDgEBAQEHCwsJEiqCJQEBBAEjHQEbHQEDAQsGBQsNKgICIgERAQUBDgENBhOILAEDCQigUIwRUYMNmW8KGScNZIU7EQEFDIVKiHwHgnWBSwSVT4N4jSCDcRgphGg7
X-IronPort-AV: E=Sophos;i="4.97,1020,1389740400"; 
   d="scan'208";a="72907697"
Received: from mail-qc0-f180.google.com ([209.85.216.180])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 09 May 2014 22:16:04 +0200
Received: by mail-qc0-f180.google.com with SMTP id i17so5210310qcy.39
        for <caml-list@inria.fr>; Fri, 09 May 2014 13:16:03 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=2ajdl1JO4duqTHJ6nbKSG+URXCqwf3wSmOtL7dLiYbI=;
        b=0T+NdHunk+UBp6HeZdzfYF8ezQsZb6QFbQz6f5swX7W8L88V6bHJwFLTnbrrNocPhs
         qOfMq9W4YpcJyKb9hM1hfdXU8DrOjWFMNh9sX28TbxC9v7F5D2PLJU+FsNvFOCNs96bm
         FbFCbtTeaHoecaRX19KZvgqvGMrwLSjyXG2x86T2/H4CBYnbppySBRN3OuFCblt6aRUt
         A70Zmv0N7dgtWgp5V9IXfM2Rh7yJ7TbSbOTUs2ktgwJb7NlnCkAmqXvVk6VPpuw6ejFM
         Q9+/Qyjo2QAhSA7N1Hfwq7CIZSNd9DpufH8lgz/uBfuZAehByjaEWRpRHlu5OdZOoOzq
         A6NQ==
MIME-Version: 1.0
X-Received: by 10.224.54.68 with SMTP id p4mr17688136qag.47.1399666563368;
 Fri, 09 May 2014 13:16:03 -0700 (PDT)
Received: by 10.224.123.14 with HTTP; Fri, 9 May 2014 13:16:03 -0700 (PDT)
In-Reply-To: <20140509121324.GA26367@notk.org>
References: <sympa.1399619118.10331.643@inria.fr>
	<20140509121324.GA26367@notk.org>
Date: Fri, 9 May 2014 22:16:03 +0200
Message-ID: <CAF=ojbXh0KbnwZJsn4igz-pPyROhZC4iafx71LkDjg8rhFJ5ew@mail.gmail.com>
From: Leonardo Laguna <modlfo@gmail.com>
To: Adrien Nader <adrien@notk.org>
Cc: caml-list@inria.fr
Content-Type: multipart/alternative; boundary=001a1132f70a5061e304f8fd442a
Subject: Re: [Caml-list] Embedding Ocaml in a windows application

--001a1132f70a5061e304f8fd442a
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

I have given up on compiling the msvc port. I don't know why I'm getting
errors when the '.exe' is not there.

I will try to explain better what I want to do.

I have the following files:

- plug.lib (provided by the software vendor, closed source, compiled with
VC++), in OSX I have plug.a
- my_main.c (the code for the plugin)
- ocaml_stub.c (this code calls 'caml_startup()')
- ocaml_code.ml

in OSX I compile my_main.c, ocaml_stub.c and ocaml_code.ml to obtain '.o'
files. Then I link the .o files with plug.a and libasmrun.a. This works
fine.

In windows I have wodi32, visual studio 2008 and Flexdll. I tried the
following.
- Using cl compile, ocaml_stub.c, my_main.c to obtain '.obj' files
- Using ocamlopt, compile ocaml_code.ml to obtain a '.o' file
- Using flexlink to link the .obj, .o, libasmrun.a, plug.lib, libgcc.a and
libc.a

This gives me an error:

** Cannot resolve symbols for libasmrun.a(floats.o):
 ___strtod

I have tried to create my own strtod function and link it does not pick it.

Anybody knows how can I link my program.

Thanks.

Leonardo





On Fri, May 9, 2014 at 2:13 PM, Adrien Nader <adrien@notk.org> wrote:

> Hi,
>
> On Fri, May 09, 2014, Leonardo Laguna wrote:
> > Hello,
> >
> > I=E2=80=99m trying to make a plugin for a third party application using=
 Ocaml.
>  This
> > plugin is a shared library that is usually written in C, so you take
> your C
> > code and link it with a static library (provided by the software vendor)
> in
> > order to get a shared library that can be loaded by the application.  I
> made a
> > small test in OSX that embeds Ocaml  (as shown in =E2=80=98Interoperabi=
lity with
> C=E2=80=99 of
> > the book =E2=80=98Developing applications with Objective Caml=E2=80=99)=
 and works fine.
> > However in windows I=E2=80=99m running into problems.
> >
> > The shared library that the vendor provides is compiler with VC++,
> therefore
> > is not possible to link object files produced by the Cygwin neither Min=
GW
> > port. For that reason I tried to compile the MSVC port of Ocaml and I
> didn=E2=80=99t
> > succeed.
>
> Depends: if the library is C then you can perfectly mix the two
> compilers. Keep in mind that when you build with GCC on Windows, you're
> still using the Windows libraries like msvcrt.dll or kernel32.dll and
> they've been built using MSVC.
>
> > I followed the instructions in the README.win32. The first problem I had
> was
> > that flexlink was not able to call =E2=80=98link=E2=80=99, so I downloa=
ded the flexlink
> code
> > and changed it to call instead =E2=80=98link.exe=E2=80=99, this worked.=
 Then flexlink
> could
> > not handle Cygwin paths like =E2=80=98/tmp/=E2=80=99or =E2=80=98/cygdri=
ve/c/=E2=80=99 . I modified the
> code so
> > it replaces the Cygwin paths to Windows paths. It worked. I continued
> until I
> > got the message that the =E2=80=98ml=E2=80=99 command does not exist. T=
he environment is
> set
> > correctly and I can call =E2=80=98ml=E2=80=99 from the terminal.
> >
> > Has anyone tried to compile the MSVC port lately?
>
> IIRC even the MSVC port is built from Cygwin and I think it won't mind
> whether there are trailing '.exe' or not.
> But now I'm not sure I understand: what is calling flexlink? Is it your
> build system or the ocaml compiler's?
>
> --
> Adrien Nader
>

--001a1132f70a5061e304f8fd442a
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">I have given up on compiling the msvc port. I don&#39;t kn=
ow why I&#39;m getting errors when the &#39;.exe&#39; is not there.<div><br=
></div><div>I will try to explain better what I want to do.</div><div><br>
</div><div>I have the following files:</div><div><br></div><div>- plug.lib =
(provided by the software vendor, closed source, compiled with VC++), in OS=
X I have plug.a</div><div>- my_main.c (the code for the plugin)</div><div>
- ocaml_stub.c (this code calls &#39;caml_startup()&#39;)</div><div>- <a hr=
ef=3D"http://ocaml_code.ml">ocaml_code.ml</a></div><div><br></div><div>in O=
SX I compile my_main.c, ocaml_stub.c and <a href=3D"http://ocaml_code.ml">o=
caml_code.ml</a> to obtain &#39;.o&#39; files. Then I link the .o files wit=
h plug.a and libasmrun.a. This works fine.</div>
<div><br></div><div>In windows I have wodi32, visual studio 2008 and Flexdl=
l. I tried the following.</div><div>- Using cl compile, ocaml_stub.c, my_ma=
in.c to obtain &#39;.obj&#39; files</div><div>- Using ocamlopt, compile <a =
href=3D"http://ocaml_code.ml">ocaml_code.ml</a> to obtain a &#39;.o&#39; fi=
le</div>
<div>- Using flexlink to link the .obj, .o, libasmrun.a, plug.lib, libgcc.a=
 and libc.a</div><div><br></div><div>This gives me an error:</div><div><br>=
</div><div><div>** Cannot resolve symbols for libasmrun.a(floats.o):</div>
<div>=C2=A0___strtod</div></div><div><br></div><div>I have tried to create =
my own strtod function and link it does not pick it.</div><div><br></div><d=
iv>Anybody knows how can I link my program.</div><div><br></div><div>Thanks=
.</div>
<div><br></div><div>Leonardo</div><div>=C2=A0=C2=A0</div><div><br></div><di=
v><br></div></div><div class=3D"gmail_extra"><br><br><div class=3D"gmail_qu=
ote">On Fri, May 9, 2014 at 2:13 PM, Adrien Nader <span dir=3D"ltr">&lt;<a =
href=3D"mailto:adrien@notk.org" target=3D"_blank">adrien@notk.org</a>&gt;</=
span> wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex">Hi,<br>
<div class=3D""><br>
On Fri, May 09, 2014, Leonardo Laguna wrote:<br>
&gt; Hello,<br>
&gt;<br>
&gt; I=E2=80=99m trying to make a plugin for a third party application usin=
g Ocaml. =C2=A0This<br>
&gt; plugin is a shared library that is usually written in C, so you take y=
our C<br>
&gt; code and link it with a static library (provided by the software vendo=
r) in<br>
&gt; order to get a shared library that can be loaded by the application. =
=C2=A0I made a<br>
&gt; small test in OSX that embeds Ocaml =C2=A0(as shown in =E2=80=98Intero=
perability with C=E2=80=99 of<br>
&gt; the book =E2=80=98Developing applications with Objective Caml=E2=80=99=
) and works fine.<br>
&gt; However in windows I=E2=80=99m running into problems.<br>
&gt;<br>
&gt; The shared library that the vendor provides is compiler with VC++, the=
refore<br>
&gt; is not possible to link object files produced by the Cygwin neither Mi=
nGW<br>
&gt; port. For that reason I tried to compile the MSVC port of Ocaml and I =
didn=E2=80=99t<br>
&gt; succeed.<br>
<br>
</div>Depends: if the library is C then you can perfectly mix the two<br>
compilers. Keep in mind that when you build with GCC on Windows, you&#39;re=
<br>
still using the Windows libraries like msvcrt.dll or kernel32.dll and<br>
they&#39;ve been built using MSVC.<br>
<div class=3D""><br>
&gt; I followed the instructions in the README.win32. The first problem I h=
ad was<br>
&gt; that flexlink was not able to call =E2=80=98link=E2=80=99, so I downlo=
aded the flexlink code<br>
&gt; and changed it to call instead =E2=80=98link.exe=E2=80=99, this worked=
. Then flexlink could<br>
&gt; not handle Cygwin paths like =E2=80=98/tmp/=E2=80=99or =E2=80=98/cygdr=
ive/c/=E2=80=99 . I modified the code so<br>
&gt; it replaces the Cygwin paths to Windows paths. It worked. I continued =
until I<br>
&gt; got the message that the =E2=80=98ml=E2=80=99 command does not exist. =
The environment is set<br>
&gt; correctly and I can call =E2=80=98ml=E2=80=99 from the terminal.<br>
&gt;<br>
&gt; Has anyone tried to compile the MSVC port lately?<br>
<br>
</div>IIRC even the MSVC port is built from Cygwin and I think it won&#39;t=
 mind<br>
whether there are trailing &#39;.exe&#39; or not.<br>
But now I&#39;m not sure I understand: what is calling flexlink? Is it your=
<br>
build system or the ocaml compiler&#39;s?<br>
<span class=3D"HOEnZb"><font color=3D"#888888"><br>
--<br>
Adrien Nader<br>
</font></span></blockquote></div><br></div>

--001a1132f70a5061e304f8fd442a--
