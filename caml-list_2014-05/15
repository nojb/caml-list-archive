Return-Path: <gabriel.scherer@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 34D6C7F8BE
	for <caml-list@sympa.inria.fr>; Fri,  2 May 2014 23:59:38 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  gabriel.scherer@gmail.com) identity=pra;
  client-ip=209.85.220.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  gabriel.scherer@gmail.com designates 209.85.220.173 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.220.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-vc0-f173.google.com) identity=helo;
  client-ip=209.85.220.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="postmaster@mail-vc0-f173.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkoBAEkUZFPRVdytlGdsb2JhbAA/GoNVWIJnwWaBBggWDgEBAQEHCwsJEiqCJQEBBSMdARsdAQMMBgULDQICJgICIgERAQUBHAYTCIgkAQMRDTaZTowRUYMNmTYKGScNZIVgEQEFDIEejSgHgm+BSgSZMIE8j0IYKYRmOzA
X-IPAS-Result: AkoBAEkUZFPRVdytlGdsb2JhbAA/GoNVWIJnwWaBBggWDgEBAQEHCwsJEiqCJQEBBSMdARsdAQMMBgULDQICJgICIgERAQUBHAYTCIgkAQMRDTaZTowRUYMNmTYKGScNZIVgEQEFDIEejSgHgm+BSgSZMIE8j0IYKYRmOzA
X-IronPort-AV: E=Sophos;i="4.97,974,1389740400"; 
   d="scan'208";a="60244161"
Received: from mail-vc0-f173.google.com ([209.85.220.173])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 02 May 2014 23:59:37 +0200
Received: by mail-vc0-f173.google.com with SMTP id ik5so6011625vcb.18
        for <caml-list@inria.fr>; Fri, 02 May 2014 14:59:35 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=mmS/S0lpFDPrdo9ZA2K4EO/Uq05jAtnKgy7CYGPCW78=;
        b=o8fhUEEma6IlnA0kzFn4yeWegYFEo/9qnRrm1S9AtTelaA0+Hw69HA+nIEhBa8sv54
         dNxd62oQpOSyX0BlNTEddp/Xz/IQII91yivS+v6wDr9qZPMb6qh7j77J9Um6laX235Jb
         yRJKv4qTdLz/R6y463XSOhgxUS4nNQXwdje2kfAd87Sfp6PpwltGgQxWMbftpTJ6tkcj
         gBm2O2dlEAc4LXIJrVwGDbUNSzmy/dWzYcPk3yFo/B0fgcdmrT9MMRzFzMJIzrCAWDLO
         SgkPO2zGTh4q37s5N+RE9QRt77Z4HMkMuVl3u3BGfIdqziCKTIj2hahtYtE68/4OTu1j
         s79A==
X-Received: by 10.220.12.66 with SMTP id w2mr14579069vcw.15.1399067975697;
 Fri, 02 May 2014 14:59:35 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.58.96.5 with HTTP; Fri, 2 May 2014 14:58:55 -0700 (PDT)
In-Reply-To: <20140502210731.GB30470@delli7.univ-savoie.fr>
References: <20140502210731.GB30470@delli7.univ-savoie.fr>
From: Gabriel Scherer <gabriel.scherer@gmail.com>
Date: Fri, 2 May 2014 23:58:55 +0200
Message-ID: <CAPFanBGS_Hb=mqNnY-UDizoLVU2UuApB4_WuvJodghopyGTbhw@mail.gmail.com>
To: Christophe Raffalli <Christophe.Raffalli@univ-savoie.fr>
Cc: Caml list <caml-list@inria.fr>
Content-Type: text/plain; charset=UTF-8
Subject: Re: [Caml-list] Exception marshaling

That looks non-trivial to implement (for closures, there is a cache of
static code pointers; no such thing exist for exceptions). You should
add your use-case to the discussion in the relevant PR.
  http://caml.inria.fr/mantis/view.php?id=4978

On Fri, May 2, 2014 at 11:07 PM,  <Christophe.Raffalli@univ-savoie.fr> wrote:
>
> Hello,
>
> From OCaml's manual, exception marshelling does not fully work. Would it be possible to have it works at least with the same restriction
> as closure marshalling (i.e. same binary) ?
>
> This would be useful when using software like parmap, which at the moment does not support exception, probably for this reason.
>
> I did the extension of parmap with exception and felt on the abbve mentioned problem. With parmap, the same binary restriction is fulfilled.
>
> Cheers,
> Christophe
