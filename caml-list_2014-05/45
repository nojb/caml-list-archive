Return-Path: <oleg@okmij.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 79EED7ED9B
	for <caml-list@sympa.inria.fr>; Wed,  7 May 2014 05:01:18 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  oleg@okmij.org) identity=pra; client-ip=66.39.3.115;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="oleg@okmij.org"; x-sender="oleg@okmij.org";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  oleg@okmij.org designates 66.39.3.115 as permitted sender)
  identity=mailfrom; client-ip=66.39.3.115;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="oleg@okmij.org"; x-sender="oleg@okmij.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@www1.g3.pair.com) identity=helo;
  client-ip=66.39.3.115;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="oleg@okmij.org";
  x-sender="postmaster@www1.g3.pair.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AsQCAIChaVNCJwNzemdsb2JhbABag1WIG6YiAZhcDgEBCwcNCTyCSUtggRYCiCsNmgG0V4xFEoEjhR4ElUCDdgGBPJRzPYEw
X-IPAS-Result: AsQCAIChaVNCJwNzemdsb2JhbABag1WIG6YiAZhcDgEBCwcNCTyCSUtggRYCiCsNmgG0V4xFEoEjhR4ElUCDdgGBPJRzPYEw
X-IronPort-AV: E=Sophos;i="4.97,1000,1389740400"; 
   d="scan'208";a="60866966"
Received: from www1.g3.pair.com ([66.39.3.115])
  by mail3-smtp-sop.national.inria.fr with SMTP; 07 May 2014 05:00:50 +0200
Received: (qmail 78258 invoked by uid 9370); 7 May 2014 03:00:48 -0000
Date: 7 May 2014 03:00:48 -0000
Message-ID: <20140507030048.78257.qmail@www1.g3.pair.com>
From: oleg@okmij.org
To: caml-list@inria.fr
Subject: [Caml-list] ML Family Workshop -- Last call for presentations


Important dates
Monday May 19 (any time zone):   Abstract submission
Monday June 30:                  Author notification
Thursday September 4, 2014:      ML Family Workshop

Higher-order, Typed, Inferred, Strict: ACM SIGPLAN ML Family Workshop
Thursday September 4, 2014, Gothenburg, Sweden
(immediately following ICFP and preceding OCaml Users and Developers Workshop)

Call For Papers         http://okmij.org/ftp/ML/ML14.html

ML is a very large family of programming languages that includes Standard ML,
OCaml, F#, SML#, Manticore, MetaOCaml, JoCaml, Alice ML, Dependent ML, Flow
Caml, and many others. All ML languages, beside the great deal of syntax, share
several fundamental traits. They are all higher-order, strict, mostly pure, and
typed, with algebraic and other data types. Their type systems inherit from
Hindley-Milner. The development of these languages has inspired a significant
amount of computer science research and influenced a number of programming
languages, including Haskell, Scala and Clojure, as well as Rust, ATS and many
others.

ML workshops have been held in affiliation with ICFP continuously since 2005.
This workshop specifically aims to recognize the entire extended ML family and
to provide the forum to present and discuss common issues, both practical
(compilation techniques, implementations of concurrency and parallelism,
programming for the Web) and theoretical (fancy types, module systems,
metaprogramming). The scope of the workshop includes all aspects of the design,
semantics, theory, application, implementation, and teaching of the members of
the ML family. We also encourage presentations from related languages (such as
Scala, Rust, Nemerle, ATS, etc.), to exchange experience of further developing
ML ideas.

The ML family workshop will be held in close coordination with the OCaml Users
and Developers Workshop.

Format

Since 2010, the ML workshop has adopted an informal model. Presentations are
selected from submitted abstracts. There are no published proceedings, so any
contributions may be submitted for publication elsewhere. We hope that this
format encourages the presentation of exciting (if unpolished) research and
deliver a lively workshop atmosphere.

Each presentation should take 20-25 minutes, except demos, which should take
10-15 minutes. The exact time will be decided based on the number of accepted
submissions. The presentations will likely be recorded.

Post-conference proceedings

The post-proceedings of selected papers from the ML Family and the
OCaml Users and Developers workshops will be published in the 
Electronic Proceedings in Theoretical Computer Science (EPTCS). The
Program Committee shall invite interested authors of selected
presentations to expand their abstract for inclusion in the
proceedings.  The submissions are to be reviewed according to the
EPTCS standards.

Coordination with the OCaml Users and Developers Workshop

The OCaml workshop is seen as more practical and is dedicated in significant
part to the OCaml community building and the evolution of the OCaml system. In
contrast, the ML family workshop is not focused on any language in particular,
is more research oriented, and deals with general issues of the ML-style
programming and type systems. Yet there is an overlap, which we are keen to
explore in various ways. The authors who feel their submission fits both
workshops are encouraged to mention it at submission time or contact the
Program Chairs.

Scope

We acknowledge the whole breadth of the ML family and aim to include languages
that are closely related (although not by blood), such as Rust, ATS, Scala,
Typed Clojure. Those languages have implemented and investigated run-time and
type system choices that may be worth considering for OCaml, F# and other ML
languages. We also hope that the exposure to the state of the art ML might
favorably influence those related languages. Specifically, we seek research
presentations on topics including but not limited to

  * Design: concurrency, distribution and mobility, programming for the web and
    embedded systems, handling semi-structured data, facilitating interactive
    programming, higher forms of polymorphism, generic programming, objects
  * Implementation: compilation techniques, interpreters, type checkers,
    partial evaluators, runtime systems, garbage collectors, etc.
  * Type systems: fancy types, inference, effects, overloading, modules,
    contracts, specifications and assertions, dynamic typing, error reporting,
    etc.
  * Applications: case studies, experience reports, pearls, etc.
  * Environments: libraries, tools, editors, debuggers, cross-language
    interoperability, functional data structures, etc.
  * Education: ML and ML-like languages in college or high-school, in general
    or computer science curriculum.

Four kinds of submissions will be accepted: Informed Positions, Research
Presentations, Experience Reports and Demos.

  * Informed Positions: A justified argument for or against a language feature.
    The argument must be substantiated, either theoretically (e.g., by a
    demonstration of (un)soundness, an inference algorithm, a complexity
    analysis), empirically or by a substantial experience. Personal experience
    is accepted as justification so long as it is extensive and illustrated
    with concrete examples.
  * Research Presentations: Research presentations should describe new ideas,
    experimental results, or significant advances in ML-related projects. We
    especially encourage presentations that describe work in progress, that
    outline a future research agenda, or that encourage lively discussion.
    These presentations should be structured in a way which can be, at least in
    part, of interest to (advanced) users.
  * Experience Reports: Users are invited to submit Experience Reports about
    their use of ML and related languages. These presentations do not need to
    contain original research but they should tell an interesting story to
    researchers or other advanced users, such as an innovative or unexpected
    use of advanced features or a description of the challenges they are facing
    or attempting to solve.
  * Demos: Live demonstrations or short tutorials should show new developments,
    interesting prototypes, or work in progress, in the form of tools,
    libraries, or applications built on or related to ML. (You will need to
    provide all the hardware and software required for your demo; the workshop
    organizers are only able to provide a projector.)



Submission

Submissions should be at most two pages, in PDF format, and printable on US
Letter or A4 sized paper. A submission should have a synopsis (2-3 lines) and a
body between 1 and 2 pages, in one- or two-column layout. The synopsis should
be suitable for inclusion in the workshop program.

Submissions must be uploaded to the workshop submission website before the
submission deadline (Monday May 19, 2014).
For any question concerning the scope of the workshop or the submission
process, please contact the program chair.


Program Committee

Kenichi Asai             Ochanomizu University, Japan
Matthew Fluet            Rochester Institute of Technology, USA
Jacques Garrigue         Nagoya University, Japan
Dave Herman              Mozilla, USA
Stefan Holdermans        Vector Fabrics, Netherlands
Oleg Kiselyov (Chair)    Monterey, CA, USA
Keiko Nakata             Tallinn University of Technology, Estonia
Didier Remy              INRIA Paris-Rocquencourt, France
Zhong Shao               Yale University, USA
Hongwei Xi               Boston University, USA

