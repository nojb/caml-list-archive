Return-Path: <berenger@riken.jp>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id B73507ED1A
	for <caml-list@sympa.inria.fr>; Mon, 21 May 2012 03:20:32 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ar4DACWYuU+GoCGhmWdsb2JhbABEgx2tD4JfgSgBAQEBAQgLCwcUJ4IVAQEEAThAAQULCxgJFg8JAwIBAgFFEwEHAQGIBQW+G4sFhU0DiECMW4VPjRk
X-IronPort-AV: E=Sophos;i="4.75,626,1330902000"; 
   d="scan'208";a="159087293"
Received: from postman1.riken.jp (HELO postman.riken.jp) ([134.160.33.161])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 21 May 2012 03:20:31 +0200
Received: from postman.riken.jp (postman1.riken.jp [127.0.0.1])
	by postman.riken.jp (Postfix) with SMTP id D53DD2588001;
	Mon, 21 May 2012 10:20:28 +0900 (JST)
Received: from [172.27.98.103] (rikad98.riken.jp [134.160.214.98])
	by postman.riken.jp (Postfix) with ESMTPA id A419032A008B;
	Mon, 21 May 2012 10:20:28 +0900 (JST)
Message-ID: <4FB9985C.6040002@riken.jp>
Date: Mon, 21 May 2012 10:20:28 +0900
From: Francois Berenger <berenger@riken.jp>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:12.0) Gecko/20120430 Thunderbird/12.0.1
MIME-Version: 1.0
CC: caml-list <caml-list@inria.fr>, 
 batteries-devel@lists.forge.ocamlcore.org
References: <4FB1B5F3.3080908@riken.jp> <4FB1B60F.3060408@riken.jp> <4FB1BB82.6010900@riken.jp> <20120518221404.GA26540@annexia.org> <CAP5QFJ=-3DmSc8pRBNr5YnYGxkTGRK-ki0_9eh34ApqET0M0mw@mail.gmail.com> <CAP5QFJkC409mSNAYwoqTo81D_Pyqyoa+D2Yhthzxc2XP7ksiJw@mail.gmail.com>
In-Reply-To: <CAP5QFJkC409mSNAYwoqTo81D_Pyqyoa+D2Yhthzxc2XP7ksiJw@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-PMX-Version: 5.6.0.2009776, Antispam-Engine: 2.7.2.376379, Antispam-Data: 2012.5.21.10616
Subject: Re: [Caml-list] Any library for reading/writing compressed files?

On 05/19/2012 10:27 AM, Adrien wrote:
> Also, don't compress Marshal's output, it'll suck.

My program generates large bitmasks:
ls -l X.mask.gz: 12K
gunzip X.mask.gz
ls -l X.mask: 2.1M

X.mask was generated by the Marshal module.

It was gzip -1 to compress.
The compression ratio looks amazing in my case
(which I measured in the first place before making
my program use it).

> Marshal already does RLE compression IIRC (that might help for
> situations constrained by memory-bandwidth) and that hinders other
> compressions. In particular, with xz, it'll really be a waste of time.
