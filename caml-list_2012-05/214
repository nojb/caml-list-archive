Return-Path: <alain@frisch.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id C10477ED26
	for <caml-list@sympa.inria.fr>; Wed, 30 May 2012 14:42:06 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApsBAFYVxk/B/BfVkWdsb2JhbABEgx2tH4NzAQEBAQkLCwcUAySCFwEBBTg4CAEQCw4KCQwKDwkDAgECAUUGDQEHAQEXh3S5MYsFgiCDIgOVGIVPjQY
X-IronPort-AV: E=Sophos;i="4.75,683,1330902000"; 
   d="scan'208";a="160574696"
Received: from msa04.smtpout.orange.fr (HELO msa.smtpout.orange.fr) ([193.252.23.213])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 30 May 2012 14:41:59 +0200
Received: from [192.168.1.105] ([86.195.7.207])
	by mwinf5d30 with ME
	id GChy1j0284U0XEW03ChyTV; Wed, 30 May 2012 14:41:58 +0200
Message-ID: <4FC61595.6070009@frisch.fr>
Date: Wed, 30 May 2012 14:41:57 +0200
From: Alain Frisch <alain@frisch.fr>
User-Agent: Mozilla/5.0 (X11; Linux i686 on x86_64; rv:12.0) Gecko/20120428 Thunderbird/12.0.1
MIME-Version: 1.0
To: Hongbo Zhang <bobzhang1988@gmail.com>
CC: caml-list@inria.fr
References: <CAH2fdNZ+-COr_HWoD_q1JS2uV1syRfaXkncokrtdxD45qyZnCQ@mail.gmail.com> <jptm5g$bul$1@dough.gmane.org>
In-Reply-To: <jptm5g$bul$1@dough.gmane.org>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Subject: Re: [Caml-list] Re: Syntax extensions without Camlp4

On 05/27/2012 06:53 PM, Hongbo Zhang wrote:
> Well, I don't think it's good to downplay camlp4. The problem is we need
> more documentation and more tests.

(The new) Camlp4 has been here for several years.  Documentation and 
tests are still lagging behind.  Nevertheless, it burns a non-negligible 
fraction of the total resource spent by maintainers on OCaml (fixing 
bugs, struggling with camlp4 to take new language features into account).

In addition, there is a growing consensus that the most common uses of 
camlp4 (such as code generation driven by type declaration) might be 
based on a much simpler approach, and this would actually have 
advantages for the end-users (like not changing the concrete syntax)
and for developers (much less information to grasp in order to write 
such an extension).

Coq is one of the few examples of a big project that relies on other 
aspects of camlp4 (e.g. its parsing framework with extensible grammars). 
  As far as I know, it also still works with camlp5, which is actively 
maintained, and I don't believe the Coq guys enjoy so much maintaining 
support for both camlp4 and campl5.

All that considered, and this is only a personal opinion: I don't see 
compelling arguments to continue investing efforts in camlp4 itself (at 
least, for the core OCaml team) and I believe it is a good time to start 
considering a (medium-term) future of OCaml without camlp4.  Of course, 
alternative solutions need to be developed and streamlined before 
killing camlp4 is even considered.


Alain
