Return-Path: <daniel.buenzli@erratique.ch>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id E34387ED26
	for <caml-list@sympa.inria.fr>; Sun, 27 May 2012 20:04:37 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApYCANhrwk9KN1ZKm2dsb2JhbABEgx2CGbAFAQEBAQEICQsJFCeCFwEBBAEjVgULCw4MAiYCAkcQBhsTh2sFBKVOkVKBJIlfhC0yYAOaUxONBA
X-IronPort-AV: E=Sophos;i="4.75,666,1330902000"; 
   d="scan'208";a="160181260"
Received: from mail6.webfaction.com (HELO smtp.webfaction.com) ([74.55.86.74])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 27 May 2012 20:04:37 +0200
Received: from [192.168.0.102] (91-233.197-178.cust.bluewin.ch [178.197.233.91])
	by smtp.webfaction.com (Postfix) with ESMTP id 2C45D26E9B30;
	Sun, 27 May 2012 13:04:34 -0500 (CDT)
Date: Sun, 27 May 2012 20:04:29 +0200
From: =?utf-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: Hongbo Zhang <bobzhang1988@gmail.com>
Cc: caml-list@inria.fr
Message-ID: <D521C447A36B43D4B39B88CDC2A55852@erratique.ch>
In-Reply-To: <jptm5g$bul$1@dough.gmane.org>
References: <CAH2fdNZ+-COr_HWoD_q1JS2uV1syRfaXkncokrtdxD45qyZnCQ@mail.gmail.com>
 <jptm5g$bul$1@dough.gmane.org>
X-Mailer: sparrow 1.6 (build 1081.27)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Subject: Re: [Caml-list] Re: Syntax extensions without Camlp4



Le dimanche, 27 mai 2012 =C3=A0 18:53, Hongbo Zhang a =C3=A9crit :

> Well, I don't think it's good to downplay camlp4. The problem is we need
> more documentation and more tests.


camlp4 is one of the (conceptually) ugliest component of the OCaml system. =
Pre-processors in general are a wrong solution to a real problem; meta-prog=
ramming facilities should be part of the core language and play by its scop=
ing rules, they should not be layered on top of it.=20=20

The aformentioned proposal is certainly not the best I'm hoping for (the de=
finition and semantics of the attributes is defined by the build system). H=
owever it may be a step in the right direction. For one thing by preventing=
 the extension of OCaml's concrete syntax and making attributes part of it,=
 using them doesn't break other tools that act on OCaml sources files; the =
first one being your syntax highlighter.=20=20

Best,

Daniel


