Return-Path: <oliver@first.in-berlin.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id ED1507EFA1
	for <caml-list@sympa.inria.fr>; Wed, 25 Sep 2019 19:38:36 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=oliver@first.in-berlin.de; spf=None smtp.mailfrom=oliver@first.in-berlin.de; spf=None smtp.helo=postmaster@einhorn-mail.in-berlin.de
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=pra;
  client-ip=217.197.80.20;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=mailfrom;
  client-ip=217.197.80.20;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@einhorn-mail.in-berlin.de) identity=helo;
  client-ip=217.197.80.20;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="postmaster@einhorn-mail.in-berlin.de";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AGvPtxBMGKHoxMnY7XmYl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0IvXzrarrMEGX3/hxlliBBdydt6sfzbGM+Pm5BSQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTagb75+Nhu7oRveusULnIdvJbs6xwfUrHdPZ+?=
 =?us-ascii?q?lY335jK0iJnxb76Mew/Zpj/DpVtvk86cNOUrj0crohQ7BAAzsoL2465MvwtRne?=
 =?us-ascii?q?VgSP/WcTUn8XkhVTHQfI6gzxU4rrvSv7sup93zSaPdHzQLspVzmu87tnRRn1gy?=
 =?us-ascii?q?ocKTU37H/YhdBxjKJDoRKuuRp/w5LPYIqIMPZyZ77Rcc8GSWZEWMtaSi5PDZ6m?=
 =?us-ascii?q?b4YXAeQPPfhWoZT+qVsAohSxGRSjC+HhxTJTmn/6wbc33/g9HQzc3gEtGc8Fvn?=
 =?us-ascii?q?TOrNXyMacfSfm7zK3JzTXdcfxWwyr25ZXSfRAnvP6DQ7ZwetfWxEkoEwPFj0uQ?=
 =?us-ascii?q?ppL/Pz6O2OQNsnKb7/F8Ve61im4nrRh9rSOxycc2jonJh4QVxkrZ+ipn2Ys4I8?=
 =?us-ascii?q?CzRkB8Yd6hCpRQtieaOpNxQsw+WW5ovSI6xqcBuZ6hcygG0JUnxxjFa/yGaYeE?=
 =?us-ascii?q?+BzjVPyJLTdgnnJqZqm/hw2s/ki4ze38TNW030xOriZfj9bDqHYA3AHQ5MifUv?=
 =?us-ascii?q?Zx4Fqt1DSV2wzO7uxJI1o4mKnHJ5I73LI8ipweulnZECDsgkX5lqqWe10k+ue2?=
 =?us-ascii?q?7+TnZa3rqYGdN49yigH+Nb4umsqmDeQ9KAcOXmyb9f691L3l5EH2W6tFjucykq?=
 =?us-ascii?q?nYtpDWP9kUqbChDw9U1IYs9Qq/Ai+43NgFn3QLNk9JdRaFgoTzOFzCPOr0Aemj?=
 =?us-ascii?q?j1i0lTdk3fHGPrnvApXXKXjDla/sfbF5605d1go808pf6olaCrEAOvLzQVPxuM?=
 =?us-ascii?q?bZDh8/KgC72PjoCM951oMfX2KDGLKWP73KvV+S+u0vO/WMZJMSuDvlN/cq/fvu?=
 =?us-ascii?q?jXsglV8ZfKmpxocXZWujHvVmJkWZeWDjjs0AEWcMpAo+TfblhEeMUT5JND6OWP?=
 =?us-ascii?q?cV4jg9QLmtDYLCWpzl1LWF1SH9BZZWY2FaFniUFnP5a4iPW/ENcT+fZMh7nWpX?=
 =?us-ascii?q?e6KmTtoG0RCwuRWy4bNhIufQsnkfsZP92cJd6ezJjg109DoxBcmH12CLCW15yD?=
 =?us-ascii?q?BbDwQq1bxy9BQugmyI1rJ11rkBTYQKu6F5FzwiPJuZ9NRUTsjoU1iZLNmIUk26?=
 =?us-ascii?q?BNSgRDs8VNYwxZkCbhQlQoTwvlX4xyOvRoQtufmODZ0w/Ljb2iKpdch80W3akq?=
 =?us-ascii?q?gnylMrWM9OMyuqi/wnrlWBN8vyi0yc0p2SW+Ec0SrKrjjRwGuIvEZCVkt1WKTB?=
 =?us-ascii?q?G3EZI0Hbt9D44AXOQu32BA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AsBgAPpYtdexRQxdllHgEGEoRyUzIqh?=
 =?us-ascii?q?CKIfIYUnSwJAQMBCgEBIwwBAYQ/AoMqGwYGNBMCDAEBBAEBAQIBAgMEARMBAQs?=
 =?us-ascii?q?LCgcphTQMgjopAYJnAwMjVhALGgIFIQICD0gGExqDCYIOC7AmgTKENwEDAgxDQ?=
 =?us-ascii?q?IM8gUiBDCiFFIZ4GIF/hCM+gmEDhGuCWAStEIFFZ2mGHI15DBt1gUFyilUsiwK?=
 =?us-ascii?q?WLpECAgoHFYFpgXkzGggcFDuCbAlHEBSFc4ELgmJ0hUE+AzABkAABAQ?=
X-IPAS-Result: =?us-ascii?q?A0AsBgAPpYtdexRQxdllHgEGEoRyUzIqhCKIfIYUnSwJAQM?=
 =?us-ascii?q?BCgEBIwwBAYQ/AoMqGwYGNBMCDAEBBAEBAQIBAgMEARMBAQsLCgcphTQMgjopA?=
 =?us-ascii?q?YJnAwMjVhALGgIFIQICD0gGExqDCYIOC7AmgTKENwEDAgxDQIM8gUiBDCiFFIZ?=
 =?us-ascii?q?4GIF/hCM+gmEDhGuCWAStEIFFZ2mGHI15DBt1gUFyilUsiwKWLpECAgoHFYFpg?=
 =?us-ascii?q?XkzGggcFDuCbAlHEBSFc4ELgmJ0hUE+AzABkAABAQ?=
X-IronPort-AV: E=Sophos;i="5.64,548,1559512800"; 
   d="scan'208";a="403383140"
X-MGA-submission: =?us-ascii?q?MDFB4BPB6UPDBwHJRgKMUnjCivvFWVcL3m+f0x?=
 =?us-ascii?q?3uJg4KYBDy60p42JGx87KFGElbDZSkXduQGVIUC3nhslUJb3xG2TRdTQ?=
 =?us-ascii?q?PHxYXEhXUWGQ2pkdnQ6Rc08lsCe3s7xm4HxKTn3yZ+3fp+FJlGLWcUbW?=
 =?us-ascii?q?u1zW4vaRtf8m1vxSuUbzHUlA=3D=3D?=
Received: from einhorn-mail.in-berlin.de ([217.197.80.20])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 25 Sep 2019 19:38:36 +0200
X-Envelope-From: oliver@first.in-berlin.de
Received: from authenticated.user (localhost [127.0.0.1]) by einhorn.in-berlin.de  with ESMTPSA id x8PHcYtM006741
        (version=TLSv1.3 cipher=TLS_AES_256_GCM_SHA384 bits=256 verify=NOT);
	Wed, 25 Sep 2019 19:38:35 +0200
Date: Wed, 25 Sep 2019 19:38:34 +0200
From: Oliver Bandel <oliver@first.in-berlin.de>
To: Alan Schmitt <alan.schmitt@polytechnique.org>
Cc: OCaml Mailing List <caml-list@inria.fr>
Message-ID: <20190925173834.ba4bcaxc4l3ll3qh@first.in-berlin.de>
References: <87impglc4p.fsf@polytechnique.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <87impglc4p.fsf@polytechnique.org>
User-Agent: NeoMutt/20180716
Subject: Re: [Caml-list] https and Ocamlnet

Quoting  Alan Schmitt <alan.schmitt@polytechnique.org> (snt: 2019-09-25 15:49 +0200 CEST) (rcv: 2019-09-25 15:49 +0200 CEST):
> Hello,
> 
> I have a small utility that downloads and parses the RSS feed from
> ocaml.org to include in the OCaml Weekly News, but a recent change to
> ocaml.org broke it: it seems to only be served through https. I tried to
> add a TLS provider, but it's still failing with a cryptic error message.
> 
> Here is an extract of the code showing the problem:
> 
> #+begin_src ocaml
> let () = Nettls_gnutls.init()
> 
> let site = "https://ocaml.org"
> let feed_name = "/feed.xml"
> 
> let planet = Nethttp_fs.http_fs site
> let feedic = planet # read [] feed_name
> let feed_string = Netchannels.string_of_in_obj_channel feedic
> let () = feedic # close_in()
> #+end_src
> 
> I can compile it with
> 
> ocamlfind ocamlc -o test -linkpkg -package netclient,nettls-gnutls test.ml
> 
> but when I run it, I get this error
> 
> Fatal error: exception Nettls_gnutls.TLS.Error(GNUTLS_E_PUSH_ERROR)
[...]

Your problem looks similar to this here:

  https://sympa.inria.fr/sympa/arc/caml-list/2018-07/msg00001.html

Try
  https://www.presseportal.de/
what do you get there with your code?

Ciao,
  Oliver
