Return-Path: <daniel.buenzli@erratique.ch>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 9172E7FA5E
	for <caml-list@sympa.inria.fr>; Wed, 10 May 2017 14:43:20 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=daniel.buenzli@erratique.ch; spf=None smtp.mailfrom=daniel.buenzli@erratique.ch; spf=None smtp.helo=postmaster@smtp.webfaction.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  daniel.buenzli@erratique.ch) identity=pra;
  client-ip=74.55.86.74;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="daniel.buenzli@erratique.ch";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  daniel.buenzli@erratique.ch) identity=mailfrom;
  client-ip=74.55.86.74;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="daniel.buenzli@erratique.ch";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@smtp.webfaction.com) identity=helo;
  client-ip=74.55.86.74;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="postmaster@smtp.webfaction.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AHiOkzB1Wix6kTvbpsmDT+DRfVm0co7zxezQtwd8Z?=
 =?us-ascii?q?seIWLfad9pjvdHbS+e9qxAeQG96Kt7Qc06L/iOPJYSQ4+5GPsXQPItRndiQuro?=
 =?us-ascii?q?EopTEmG9OPEkbhLfTnPGQQFcVGU0J5rTngaRAGUMnxaEfPrXKs8DUcBgvwNRZv?=
 =?us-ascii?q?JuTyB4Xek9m72/q89pDXbAhEniaxba9vJxiqsAvdsdUbj5F/Iagr0BvJpXVIe+?=
 =?us-ascii?q?VSxWx2IF+Yggjx6MSt8pN96ipco/0u+dJOXqX8ZKQ4UKdXDC86PGAv5c3krgfM?=
 =?us-ascii?q?QA2S7XYBSGoWkx5IAw/Y7BHmW5r6ryX3uvZh1CScIMb7Vq4/Vyi84Kh3SR/okC?=
 =?us-ascii?q?YHOCA/8GHLkcx7kaZXrAu8qxBj34LYZYeYP+d8cKzAZ9MXXWRPUMZPWSJCAIy8?=
 =?us-ascii?q?YZYBAe0OMulEoIfyukADrQe8CASuGO/i0CNEi33w0KYn0+ohCwbG3Ak4EtwAqn?=
 =?us-ascii?q?vUqtT1O7kWUe+t0aTQ0TPDbvJS2Tf89YPFdQ0uruuKXbJxb8XRzVMjGBjYjlqO?=
 =?us-ascii?q?r4zkPjeV1uUWvmeF9epgT/igi3ImqwFovzig2N0ghZXJho8MzF3P6CZ3wJ4tKN?=
 =?us-ascii?q?C6R0N3e96pHZtKuyyZNoZ6WMEvTm5wtConyLALuoS3cDUOxZkl3RLTdfKKfoiS?=
 =?us-ascii?q?7h/nVeucJypzimh/d7KlnRmy9FCtyu3iWcmw11ZHtjFFktzQtnAVzRDS5NaIRe?=
 =?us-ascii?q?Bz/ki7xTmPywHT6uZCIUwuiaXbLJshzqYxlpoVr0vDAjf7lUf5gaOMdkgp+vKk?=
 =?us-ascii?q?5ufmb7n8pJKROJd4igTkPaQvnsy/D/44Mg8LX2WD5Ouzzrvj/UznT7VOlPE5ib?=
 =?us-ascii?q?TZv47cJcUaoq65AhRY3Zg56xalFTimzNUYnWAaLF1bYh6Ik4jpN0nUIP/kFfe/?=
 =?us-ascii?q?n0iskDBzyv/aJLLhB5HNImHHkLfgZrZ991VRyBEzzNBa/5JbEKsNIPP1Wk/rtd?=
 =?us-ascii?q?zXFAU1MwKuw7WvNNIo950XXyqgBbOeLqjSsEOTrrYuPeakZYIYtXD6MfdztND0?=
 =?us-ascii?q?inpstVYbfKSt6rGDbmK8H7wyL0yfYHfoxN0cHGEYugsWQfbwgUGDSCNeIX2yCf?=
 =?us-ascii?q?FvrgonAZ6rWN+QDrumh6aMiWLiRsVb?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DLAwC5CRNZaUpWN0pdGwEBAQMBAQEJA?=
 =?us-ascii?q?QEBFgEBAQMBAQEJAQEBgn+BDQOBCYNpiwuQY5gBJIYAAoU+FQEBAQEBAQEBAQE?=
 =?us-ascii?q?BEgsLCwgVETGCMyIBgkABBSNWEAsOCgICJgICRxAGGxOKBgSyRoIminUBAQEHA?=
 =?us-ascii?q?gElgQuKTYQzgz4vgjEBBJAijWh5hiOWcRCGaZRDNYEsgUuGd3SJGQEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DLAwC5CRNZaUpWN0pdGwEBAQMBAQEJAQEBFgEBAQMBAQE?=
 =?us-ascii?q?JAQEBgn+BDQOBCYNpiwuQY5gBJIYAAoU+FQEBAQEBAQEBAQEBEgsLCwgVETGCM?=
 =?us-ascii?q?yIBgkABBSNWEAsOCgICJgICRxAGGxOKBgSyRoIminUBAQEHAgElgQuKTYQzgz4?=
 =?us-ascii?q?vgjEBBJAijWh5hiOWcRCGaZRDNYEsgUuGd3SJGQEBAQ?=
X-IronPort-AV: E=Sophos;i="5.38,319,1491256800"; 
   d="scan'208";a="223121282"
Received: from mail6.webfaction.com (HELO smtp.webfaction.com) ([74.55.86.74])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 10 May 2017 14:43:18 +0200
Received: from [172.20.10.2] (96.235.197.178.dynamic.wless.lssmb00p-cgnat.res.cust.swisscom.ch [178.197.235.96])
	by smtp.webfaction.com (Postfix) with ESMTP id 8B612207D1AE;
	Wed, 10 May 2017 12:43:14 +0000 (UTC)
Date: Wed, 10 May 2017 14:43:11 +0200
From: =?utf-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: Ivan Gotovchits <ivg@ieee.org>
Cc: Alexey Egorov <electreg@list.ru>, caml-list <caml-list@inria.fr>
Message-ID: <F871634377FD475193BC89A129FA5292@erratique.ch>
In-Reply-To: <CALdWJ+xumBOYUuLh+992OeZPfPdVE-TPO_nryCqrFvD4X=VAGw@mail.gmail.com>
References: <1494134647.612201743@f426.i.mail.ru>
 <645DF7BCD0884CF29575F7F16193744D@erratique.ch>
 <CALdWJ+xE+9ciKyU10x-DZ1eZOxG6fbE=HiLgnyXDoHWajdZy8g@mail.gmail.com>
 <53B38F9A1D3D4732A24E8EF40B907B3F@erratique.ch>
 <CALdWJ+xumBOYUuLh+992OeZPfPdVE-TPO_nryCqrFvD4X=VAGw@mail.gmail.com>
X-Mailer: sparrow 1.6.4 (build 1178)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Subject: Re: [Caml-list] Installing library with hidden modules

On Wednesday, 10 May 2017 at 14:17, Ivan Gotovchits wrote:
> So, the solution that we are using for our libraries in CMU is pretty simple, for a library/project named LIB do the following:
> 
> 1. prefix all internal modules with the `LIB_` 
> 2. provide a public module `LIB.ml` that reexports some of the internals 
> 3. describe the public interface in `LIB.mli` 
> 4. do not install `cmi` and `mli` files for the internal modules. 
> 
> The public interface, of course, should not mention any internals.

Yes that's exactly what I systematically do as well. 

Leaving aside the prefixing, the only drawback is that for large libraries this will always link in all the internal modules even if there are some your program doesn't use. Module aliases can solve this problem but I dislike the plethora of redundant names it introduces to the end-user of the API and you are still left prefixing your internal modules with `LIB_`.

It's funny (or sad) to have that powerful module system with abstraction and name hiding capabilities in your hands and you end up having to do what you do in C to ensure naming isolation among libraries. 

I hope one day we can solve this problem without having to prefix the internal modules, without force linking all the internal modules, without multiplying the names that are exposed to the end user of the API and with generated documentation navigation that exactly matches how module items are accessed in your API.

Best, 

Daniel


