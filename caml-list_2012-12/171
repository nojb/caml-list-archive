Return-Path: <didier.cassirame@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by sympa.inria.fr (Postfix) with ESMTPS id D69277EE94
	for <caml-list@sympa.inria.fr>; Fri, 28 Dec 2012 16:22:25 +0100 (CET)
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  didier.cassirame@gmail.com) identity=pra;
  client-ip=209.85.214.182;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="didier.cassirame@gmail.com";
  x-sender="didier.cassirame@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail4-smtp-sop.national.inria.fr: domain of
  didier.cassirame@gmail.com designates 209.85.214.182 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.214.182;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="didier.cassirame@gmail.com";
  x-sender="didier.cassirame@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ob0-f182.google.com) identity=helo;
  client-ip=209.85.214.182;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="didier.cassirame@gmail.com";
  x-sender="postmaster@mail-ob0-f182.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnABAK643VDRVda2jWdsb2JhbABFhjqkWJJLCBYOAQEBAQkJCwkSBiOCHgEBBSMdARsSCwEDDAYFCwMKAgIJHQICIgERAQUBChIGExKHbgEDDwyZLItkT4J7hE4KGScDClmIEgEFDIEWizUbgxWBEwOWDIEcjUwWKYQWgWw
X-IronPort-AV: E=Sophos;i="4.84,370,1355094000"; 
   d="scan'208";a="166963228"
Received: from mail-ob0-f182.google.com ([209.85.214.182])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 28 Dec 2012 16:22:24 +0100
Received: by mail-ob0-f182.google.com with SMTP id 16so9720483obc.27
        for <caml-list@inria.fr>; Fri, 28 Dec 2012 07:22:23 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=DMsubi7Ml/M8pGLsHFtcT9NUcSWL5Nhu6ZEv9KllcLQ=;
        b=xzq644ZH3Onh57tvFHmIrGWZNYRguKe8nrI1rltt+nGauCl6hmvfB+X2WFQJFBnDvR
         Awjb7xpybNsobAUmiVsj898FNxpRWWYczb4Jm62+PdP/DgZwOVt8wL4C9ySERiwm1/aP
         Qu1Y3LMtj7uycZW9Wo+w6bFD72TZhJjRtxDMtnutLDPHaEZyz6fjhwNqtsqtrrMlOKOD
         Q8jw8DgSsqVpAnefK3cljV3Q2562ddN0IbJL15SUuR/1fzmXZRw75C3w67g1Lc4F6nOG
         IflS1hHZXZ9wzIoYz4O0LaMQecL1nnYyJ5teZeu4hdEOiEbCw1fPEBFVzEMXeMjgqrDp
         kRaQ==
MIME-Version: 1.0
Received: by 10.60.32.33 with SMTP id f1mr16208793oei.122.1356708143657; Fri,
 28 Dec 2012 07:22:23 -0800 (PST)
Received: by 10.60.165.8 with HTTP; Fri, 28 Dec 2012 07:22:23 -0800 (PST)
In-Reply-To: <CAAFfW_rFM-m4PvZXKB-1-P5j6AcUmpcESprNo4WsVVEeg-4xyA@mail.gmail.com>
References: <BLU0-SMTP100167F680F50824B119393A3360@phx.gbl>
	<50D59147.3000201@ssi.gouv.fr>
	<BLU0-SMTP8611AC5001809B37D0AA12A33F0@phx.gbl>
	<CAAFfW_rFM-m4PvZXKB-1-P5j6AcUmpcESprNo4WsVVEeg-4xyA@mail.gmail.com>
Date: Fri, 28 Dec 2012 16:22:23 +0100
Message-ID: <CA+Lkvyrg_guvYxUCuSY01v+7FchuHeBpLKT6btJZFWMUG4xJhg@mail.gmail.com>
From: Didier Cassirame <didier.cassirame@gmail.com>
To: Philippe Wang <mail@philippewang.info>
Cc: Peter Frey <pjfrey@sympatico.ca>, "Eric Jaeger (ANSSI)" <eric.jaeger@ssi.gouv.fr>, 
	OCaml Mailing List <caml-list@inria.fr>
Content-Type: text/plain; charset=UTF-8
Subject: Re: [Caml-list] Function returning recursive lists

Hi all,

Regarding the original question, wouldn't it be easier to implement it
as a stream?

didier

2012/12/28, Philippe Wang <mail@philippewang.info>:
> On Fri, Dec 28, 2012 at 2:41 AM, Peter Frey <pjfrey@sympatico.ca> wrote:
>
>> The problem with docycle is not its coding style but that it produces in
>> fact a cyclic list, which is not very useful: Almost all functions, such
>> as List.rev are undefined.
>
> From my point of view, this coding style is fundamentally *wrong*:
> - it makes assumptions on the internal data representation,
> - and it prevents the compiler from making any optimisation from the
> fact that elements of built-in lists are immutable (and if the
> compilers makes some optimisations from that fact, then it's not only
> the style but the program that is wrong).
>
> Cheers,
>
> --
> Philippe Wang
>    mail@philippewang.info
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
