Return-Path: <bobzhang1988@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id 708197EEEB
	for <caml-list@sympa.inria.fr>; Wed,  5 Dec 2012 00:38:14 +0100 (CET)
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  bobzhang1988@gmail.com) identity=pra;
  client-ip=209.85.223.176;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="bobzhang1988@gmail.com";
  x-sender="bobzhang1988@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail1-smtp-roc.national.inria.fr: domain of
  bobzhang1988@gmail.com designates 209.85.223.176 as permitted
  sender) identity=mailfrom; client-ip=209.85.223.176;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="bobzhang1988@gmail.com";
  x-sender="bobzhang1988@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ie0-f176.google.com) identity=helo;
  client-ip=209.85.223.176;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="bobzhang1988@gmail.com";
  x-sender="postmaster@mail-ie0-f176.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhACAK+IvlDRVd+wlGdsb2JhbABEq2iSRAgWDgEBAQEJCQsJEimCHgEBBScZARsSCwEDDAYFCw0NISEBAREBBQEKEgYTCAoJh2IBAw8MogCMM4FwgQqFHAoZJwMKWYh1AQUMi0JphEEDiF+LToFWgRyKG4MwFimEMQ
X-IronPort-AV: E=Sophos;i="4.84,217,1355094000"; 
   d="scan'208";a="184627926"
Received: from mail-ie0-f176.google.com ([209.85.223.176])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 05 Dec 2012 00:38:13 +0100
Received: by mail-ie0-f176.google.com with SMTP id 13so8516807iea.21
        for <caml-list@inria.fr>; Tue, 04 Dec 2012 15:38:12 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=apYhG5pdryJOolNpIITOyo617HTMxpkk6UBOBwjMXIs=;
        b=miVUIwa7iPreuDJNoECisAjudJv52eX7VwX7tngrByEkfIK3nx8VmD/VW/MKs/Wvxz
         TxigJm3fkF4me6U7eS6dvSKRsdStX7cRIpSl5p9SgDqxsPrSSpJURk3ZYAcmvS6iFQgB
         /ZEVwzYrSLjuChXPte+jQNjt9QkWj2PzePlYliRAJSjP+9bNtuwBSCN4WZtRonHEfS01
         KrbzUoeCxCGQQfwgkk3sMrqQDPeu6BWtQMHfCbRItdY/PlGSXLBtS8DTJVNcbDuFlUxZ
         OGV64OL5C5KSydHF2pviSYZUekmggTSIPpuA5wdjD4/+XG4UMSRf5hOzciZf3x0jao7s
         nNXA==
MIME-Version: 1.0
Received: by 10.50.196.198 with SMTP id io6mr9920igc.39.1354664292649; Tue, 04
 Dec 2012 15:38:12 -0800 (PST)
Received: by 10.64.17.4 with HTTP; Tue, 4 Dec 2012 15:38:12 -0800 (PST)
In-Reply-To: <CAPFanBExFXy7K_eBnJntsMoSstymP7pFLCLydbwvBD8eaWUKeg@mail.gmail.com>
References: <CANcqPu4FVHr1yqr_SJ91_8jXns1FHLwpfC6L8AdY8Th+MFLA1w@mail.gmail.com>
	<CAPFanBExFXy7K_eBnJntsMoSstymP7pFLCLydbwvBD8eaWUKeg@mail.gmail.com>
Date: Tue, 4 Dec 2012 18:38:12 -0500
Message-ID: <CANcqPu7u0Ona8L+urSQhF6ktqwBjatnx3psXFjj_hmu8Mr23oA@mail.gmail.com>
From: bob zhang <bobzhang1988@gmail.com>
To: Gabriel Scherer <gabriel.scherer@gmail.com>
Cc: Caml List <caml-list@inria.fr>
Content-Type: text/plain; charset=ISO-8859-1
Subject: Re: [Caml-list] Absolute path in the module system

Hi,
On Tue, Dec 4, 2012 at 5:59 PM, Gabriel Scherer
<gabriel.scherer@gmail.com> wrote:
> - identifiers referenced by macro definitions are not shadowed by
> identifier added in scope after that, before macro
> invocation/expansion time; this corresponds to your question and I
> don't think how you would solve that with a static expansion scheme.
Yes, that's my concern
> If I remember correctly, the solution of hygienic macro systems is, in
> effect, to do a preprocessing step of the pre-expansion source, to
> enforce the convention that now name is bound twice in the same scope
> by appending unique suffixes to identifiers.
Can you elaborate on that?

I don't see the problems with absolute module path, one simple
solution is to delete the grammar
of 'open statement and local open statements', then for a single
compilation unit, I can figure out the
precise module path here, but this is not  a beautiful solution.

Thanks
>
> On Tue, Dec 4, 2012 at 9:43 PM, bob zhang <bobzhang1988@gmail.com> wrote:
>> Dear List,
>>     Is there a way to express the absolute module path?
>>     For example,
>>        Pervasives.(+) --> actually I want it to be absolute Pervasives
>> module, not shadowed by any 'open' statements?
>>     Is there a way to do that? if not, is there any deep reason for
>> not doing this?
>>
>> Thanks
>>
>> --
>> Regards
>> -- Bob
>>
>> --
>> Caml-list mailing list.  Subscription management and archives:
>> https://sympa.inria.fr/sympa/arc/caml-list
>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>> Bug reports: http://caml.inria.fr/bin/caml-bugs



-- 
Regards
-- Bob
