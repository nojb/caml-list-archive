Return-Path: <lukstafi@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id A42387EE94
	for <caml-list@sympa.inria.fr>; Tue, 25 Dec 2012 14:24:34 +0100 (CET)
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  lukstafi@gmail.com) identity=pra; client-ip=209.85.212.43;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="lukstafi@gmail.com";
  x-sender="lukstafi@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail1-smtp-roc.national.inria.fr: domain of
  lukstafi@gmail.com designates 209.85.212.43 as permitted
  sender) identity=mailfrom; client-ip=209.85.212.43;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="lukstafi@gmail.com";
  x-sender="lukstafi@gmail.com"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-vb0-f43.google.com) identity=helo;
  client-ip=209.85.212.43;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="lukstafi@gmail.com";
  x-sender="postmaster@mail-vb0-f43.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Am8BAJCo2VDRVdQrk2dsb2JhbAAqGhaFXQG3awgWDgEBAQEJCQsJFAQjgh4BAQVAARsdAQMMBgULDS4iAREBBQEcBhOIAAEDDwwsln+MM4FxgQqEGQoZJw1ZiHYBBQyMS4RDA5YMgRyNTBYphBY
X-IronPort-AV: E=Sophos;i="4.84,352,1355094000"; 
   d="scan'208";a="187548819"
Received: from mail-vb0-f43.google.com ([209.85.212.43])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 25 Dec 2012 14:24:34 +0100
Received: by mail-vb0-f43.google.com with SMTP id fs19so8028112vbb.16
        for <caml-list@inria.fr>; Tue, 25 Dec 2012 05:24:32 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=OwG8Jap0JjKCRhZd3I4zhf91gKFZDkMcKxcDI+BN4RE=;
        b=qKdJpo7uQBC47eLU2rM5UIEQ6PCoC7OTIOfsCRBsuPDXqyvJ0zrHqM3R6deVR3LQhF
         tgKPkUaxUJMM8lJz59NkQjVHNe0C2QdjYR0qMWcTpnzc03OZsQeK084qQSrUh9fHcLMO
         eAQ1X2vchqwCdAJ9ogBMvJtFYuz+UHqqNxvcQyPez/V/nuJ2TOMUbVBoZC+faAcCaR8A
         8gci4tRkV+iOBIRdifqRL8YSbe5N4SlH5m9SDyzHvf5HKGnxLFpEQA4pm3vJpst+jn3F
         b6gJPoZjwyj8mfXeMc7yuoCKmeakKWgx4wDh/ha4uBC9dWHXyYKVyFofPbOQuwCY6rG3
         ZI4A==
Received: by 10.58.252.72 with SMTP id zq8mr38717074vec.20.1356441872885; Tue,
 25 Dec 2012 05:24:32 -0800 (PST)
MIME-Version: 1.0
Received: by 10.58.46.80 with HTTP; Tue, 25 Dec 2012 05:24:12 -0800 (PST)
In-Reply-To: <50D90562.90501@riken.jp>
References: <kb97n5$cg4$1@ger.gmane.org> <CAKziXDV1LbKPdetAzczYMf5jt1_uQQOqUwc5yOzBr5axtpXS6w@mail.gmail.com>
 <2128CD06-9356-48E9-9284-DCB865E24690@khandkar.net> <50D90562.90501@riken.jp>
From: Lukasz Stafiniak <lukstafi@gmail.com>
Date: Tue, 25 Dec 2012 14:24:12 +0100
Message-ID: <CAJMfKEXdjO9pbtBKBNrhyFAO3s9O=+Nc4KwtEiR1_Y=rNAHbRQ@mail.gmail.com>
To: Francois Berenger <berenger@riken.jp>
Cc: Caml <caml-list@inria.fr>
Content-Type: text/plain; charset=ISO-8859-1
Subject: Re: [Caml-list] new user - old questions

On Tue, Dec 25, 2012 at 2:46 AM, Francois Berenger <berenger@riken.jp> wrote:
> On 12/25/2012 02:59 AM, Siraaj Khandkar wrote:
>
> There is also this quite thorough book:
> "Developing Applications With Objective Caml"
> http://caml.inria.fr/pub/docs/oreilly-book/html/index.html
>
> I just wish the book would have some example of an Error monad.
> I mean, something advanced you don't find in a lot of other languages.

For some less run-of-the-mill introductory material, you can have a look at:
http://www.ii.uni.wroc.pl/~lukstafi/pmwiki/index.php?n=Functional.Functional
But (related to discussion on Google+) an Error monad transformer
rather than a standalone monad, would be more useful in OCaml. For
example, the Lwt monad is also an Error monad that captures the
built-in exceptions.
