Return-Path: <eric.jaeger@ssi.gouv.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id 737A17F2AA
	for <caml-list@sympa.inria.fr>; Tue, 18 Dec 2012 14:13:45 +0100 (CET)
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  eric.jaeger@ssi.gouv.fr) identity=pra;
  client-ip=86.65.182.16;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="eric.jaeger@ssi.gouv.fr";
  x-sender="eric.jaeger@ssi.gouv.fr";
  x-conformance=sidf_compatible
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  eric.jaeger@ssi.gouv.fr) identity=mailfrom;
  client-ip=86.65.182.16;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="eric.jaeger@ssi.gouv.fr";
  x-sender="eric.jaeger@ssi.gouv.fr";
  x-conformance=sidf_compatible
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@smtp.ssi.gouv.fr) identity=helo;
  client-ip=86.65.182.16;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="eric.jaeger@ssi.gouv.fr";
  x-sender="postmaster@smtp.ssi.gouv.fr";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Av8EAMZr0FBWQbYQ/2dsb2JhbABEgkm7XRZzgh8BBQgCHgUxKAMCCUYZPgEBBB4FiAeoE5BQjWODKQONfY1linCCdA
X-IronPort-AV: E=Sophos;i="4.84,309,1355094000"; 
   d="scan'208,217";a="186670162"
Received: from smtp.ssi.gouv.fr ([86.65.182.16])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 18 Dec 2012 14:13:39 +0100
Received: from smtp-switch.internet.local (smtp-switch [192.168.3.9])
	by smtp.ssi.gouv.fr (Postfix) with ESMTP id B68B190B97F
	for <caml-list@inria.fr>; Tue, 18 Dec 2012 14:13:38 +0100 (CET)
From: "Eric Jaeger" <eric.jaeger@ssi.gouv.fr>
To: <caml-list@inria.fr>
References: <50d02b65.6c4cb40a.66ab.4256SMTPIN_ADDED_BROKEN@mx.google.com> <CAG3nF7XbzhxBniyswXE9nrbf9=yOXBum-3WD0a-dyy_EWC2oEw@mail.gmail.com>
In-Reply-To: <CAG3nF7XbzhxBniyswXE9nrbf9=yOXBum-3WD0a-dyy_EWC2oEw@mail.gmail.com>
Date: Tue, 18 Dec 2012 14:13:37 +0100
Message-ID: <006701cddd21$7e4235a0$7ac6a0e0$@jaeger@ssi.gouv.fr>
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_000_0068_01CDDD29.E0069DA0"
X-Mailer: Microsoft Outlook
Thread-Index: Ac3dEeiWVpgYwH+TTG+aUhxjz+O/CQADL7WQ
Content-Language: fr
Subject: RE: [Caml-list] Function returning recursive lists

This is a multi-part message in MIME format.

------=_NextPart_000_0068_01CDDD29.E0069DA0
Content-Type: text/plain;
	charset="US-ASCII"
Content-Transfer-Encoding: 7bit

Thanks all for your answers. The consensus seems to be that it is not
possible to define an OCaml function returning recursive lists (or more
generally recursive values), unless using various forms of tricks such as
lazyness or Obj. So on the one hand we have OCaml functions as results of
computations which are not analyzable, and on the other hand recursive
(immutable) values which are analyzable but can only be defined instead of
being computed.

 

I would not request any form of "improvement" in this area (as far as I'm
concerned, I'm not comfortable with such recursive values); this was pure
curiosity.

 

  Regards, Eric

 


------=_NextPart_000_0068_01CDDD29.E0069DA0
Content-Type: text/html;
	charset="US-ASCII"
Content-Transfer-Encoding: quoted-printable

<html xmlns:v=3D"urn:schemas-microsoft-com:vml" xmlns:o=3D"urn:schemas-micr=
osoft-com:office:office" xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml" xmlns=3D"http:=
//www.w3.org/TR/REC-html40"><head><meta http-equiv=3DContent-Type content=
=3D"text/html; charset=3Dus-ascii"><meta name=3DGenerator content=3D"Micros=
oft Word 12 (filtered medium)"><style><!--
/* Font Definitions */
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
/* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-priority:99;
	color:purple;
	text-decoration:underline;}
p
	{mso-style-priority:99;
	mso-margin-top-alt:auto;
	margin-right:0cm;
	mso-margin-bottom-alt:auto;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
span.EmailStyle18
	{mso-style-type:personal-reply;
	font-family:"Calibri","sans-serif";
	color:#1F497D;}
.MsoChpDefault
	{mso-style-type:export-only;}
@page WordSection1
	{size:612.0pt 792.0pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;}
div.WordSection1
	{page:WordSection1;}
--></style><!--[if gte mso 9]><xml>
<o:shapedefaults v:ext=3D"edit" spidmax=3D"1026" />
</xml><![endif]--><!--[if gte mso 9]><xml>
<o:shapelayout v:ext=3D"edit">
<o:idmap v:ext=3D"edit" data=3D"1" />
</o:shapelayout></xml><![endif]--></head><body lang=3DFR link=3Dblue vlink=
=3Dpurple><div class=3DWordSection1><p class=3DMsoNormal><span lang=3DEN-US=
 style=3D'font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D=
'>Thanks all for your answers. The consensus seems to be that it is not pos=
sible to define an OCaml function returning recursive lists (or more genera=
lly recursive values), unless using various forms of tricks such as lazynes=
s or Obj. So on the one hand we have OCaml functions as results of computat=
ions which are not analyzable, and on the other hand recursive (immutable) =
values which are analyzable but can only be defined instead of being comput=
ed.<o:p></o:p></span></p><p class=3DMsoNormal><span lang=3DEN-US style=3D'f=
ont-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'><o:p>&nbs=
p;</o:p></span></p><p class=3DMsoNormal><span lang=3DEN-US style=3D'font-si=
ze:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'>I would not req=
uest any form of &#8220;improvement&#8221; in this area (as far as I&#8217;=
m concerned, I&#8217;m not comfortable with such recursive values); this wa=
s pure curiosity.<o:p></o:p></span></p><p class=3DMsoNormal><span lang=3DEN=
-US style=3D'font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F4=
97D'><o:p>&nbsp;</o:p></span></p><p class=3DMsoNormal><span lang=3DEN-US st=
yle=3D'font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1F497D'>&=
nbsp; Regards, Eric<o:p></o:p></span></p><p class=3DMsoNormal><span lang=3D=
EN-US style=3D'font-size:11.0pt;font-family:"Calibri","sans-serif";color:#1=
F497D'><o:p>&nbsp;</o:p></span></p></div></body></html>=

------=_NextPart_000_0068_01CDDD29.E0069DA0--

