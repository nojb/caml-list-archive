Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id BD21BBC69
	for <caml-list@yquem.inria.fr>; Tue, 17 Jul 2007 05:50:26 +0200 (CEST)
Received: from ptb-relay02.plus.net (ptb-relay02.plus.net [212.159.14.213])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l6H3oQNI005156
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 17 Jul 2007 05:50:26 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay02.plus.net with esmtp (Exim) id 1IAe4v-0004gF-Re
	for caml-list@yquem.inria.fr; Tue, 17 Jul 2007 04:50:25 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] ANN: pretty-printing, type-safe marshalling, dynamic typing for free.
Date: Tue, 17 Jul 2007 04:05:53 +0100
User-Agent: KMail/1.9.7
References: <46787172.4080404@ed.ac.uk> <200707150503.16654.jon@ffconsultancy.com>
In-Reply-To: <200707150503.16654.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200707170405.53762.jon@ffconsultancy.com>
X-Miltered: at discorde with ID 469C3C82.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; type-safe:01 marshalling:01 ocaml:01 guis:01 guis:01 ocaml:01 gtk:01 lash:98 frog:98 equality:01 wrote:01 reflection:01 typing:01 caml-list:01 widgets:01 

On Sunday 15 July 2007 05:03:16 Jon Harrop wrote:
> The idea of retrofitting equality types onto OCaml interests me greatly.
> Any chance you could elaborate on how this is done and what errors look
> like? :-)

Incidentally, another rather cool application of this kind of functionality 
would be to mimic .NET's PropertyGrid class. This class uses reflection to 
convert a data structure into a Windows Forms control that allows you to edit 
that data structure.

This is quite profilic in the developer-facing GUIs from Microsoft, such as 
the properties subwindow that you get in Visual Studio's GUI designer. 
Essentially it provides a very easy way to lash up totally unergonomic GUIs. 
An idea that is very close to my heart. ;-)

You could take an OCaml data type and translate it into GTK widgets that let 
you edit its contents.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
OCaml for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists/?e

