Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 3A502BC69
	for <caml-list@yquem.inria.fr>; Thu,  5 Jul 2007 16:28:09 +0200 (CEST)
Received: from pih-relay04.plus.net (pih-relay04.plus.net [212.159.14.131])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l65ES889000377
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Thu, 5 Jul 2007 16:28:09 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay04.plus.net with esmtp (Exim) id 1I6SJT-00021b-Ti
	for caml-list@yquem.inria.fr; Thu, 05 Jul 2007 15:28:08 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] ANN: Chess III Arena 0.5
Date: Thu, 5 Jul 2007 15:22:33 +0100
User-Agent: KMail/1.9.7
References: <002501c7be76$d0348630$ac01a8c0@johnyaya> <200707051352.24760.jon@ffconsultancy.com> <361D6E79-9122-4F39-86D1-F86575D2229C@epfl.ch>
In-Reply-To: <361D6E79-9122-4F39-86D1-F86575D2229C@epfl.ch>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Message-Id: <200707051522.34079.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 468CFFF8.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; bunzli:01 ocaml:01 ocaml:01 strive:98 frog:98 wrote:01 caml-list:01 data:02 data:02 archives:02 archives:02 opengl:02 objects:02 objects:02 daniel:04 

On Thursday 05 July 2007 14:52:23 Daniel B=FCnzli wrote:
> By the way I'm not sure how your code gets called but I think that
> the first time you'll load the texture is when the display list is
> created, so it's this command that will be retained (along with the
> creation of a texture object) and not the _use_ of a texture object.
> Thus you should first "activate" all textures once and then generate
> the display lists. No glTexImage2d call during the display list
> creation !

The latest code memoizes the textures and vertex data separately, textures =
in=20
texture objects and vertex data in display lists. That should remove all=20
texture-related calls from the display lists.

This is three times as much code and it gives the same result on my system =
so=20
I'd like to know if anyone really does see a performance improvement from=20
this.

> The only thing I know is that this happen in apple's implementation,
> see these messages [1] from a programmer working on apple's opengl. I
> never tried to time since I strive for implementation independent
> optimizations and in that case texture objects are the only way to go.
>
> [1]
> http://lists.apple.com/archives/mac-opengl/2004/Feb/msg00189.html
> http://lists.apple.com/archives/mac-opengl/2004/Feb/msg00191.html

That is certainly someone else offering the same advice but the thread does=
=20
not conclude that the advice is good. Moreover, the code is not available (=
it=20
may well have been wrong).

=2D-=20
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
The OCaml Journal
http://www.ffconsultancy.com/products/ocaml_journal/?e

