Return-Path: <daniel.buenzli@epfl.ch>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 1BABBBC69
	for <caml-list@yquem.inria.fr>; Wed,  4 Jul 2007 16:45:20 +0200 (CEST)
Received: from smtp1.epfl.ch (smtp1.epfl.ch [128.178.50.22])
	by concorde.inria.fr (8.13.6/8.13.6) with SMTP id l64EjJ4Z000515
	for <caml-list@yquem.inria.fr>; Wed, 4 Jul 2007 16:45:19 +0200
Received: (qmail 19034 invoked by uid 107); 4 Jul 2007 14:45:19 -0000
Received: from mailav2.epfl.ch (128.178.50.191)
  by smtp1.epfl.ch with SMTP; 4 Jul 2007 14:45:19 -0000
Received: from (unknown [128.178.50.22]) by MAILAV2.epfl.ch with smtp
	 id 327b_2f9f5ffa_2a3d_11dc_a9c5_00114337c797;
	Wed, 04 Jul 2007 16:45:19 +0200
Received: from lampmac3.epfl.ch (128.178.154.94)
  by smtp1.epfl.ch (AngelmatoPhylax SMTP proxy); Wed, 04 Jul 2007 16:45:19 +0200
Mime-Version: 1.0 (Apple Message framework v752.2)
In-Reply-To: <1E47C897-547E-4B65-8DB8-46228F438C1A@gmail.com>
References: <90BAEAF7-0710-44A3-BB2C-5075A2619371@gmail.com> <oxy7hws0ma.fsf@hod.lan.m-e-leypold.de> <1E47C897-547E-4B65-8DB8-46228F438C1A@gmail.com>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Message-Id: <589B2AA7-85F2-459F-B505-39318552D504@epfl.ch>
Content-Transfer-Encoding: 7bit
From: =?ISO-8859-1?Q?B=FCnzli_Daniel?= <daniel.buenzli@epfl.ch>
Subject: Re: [Caml-list] Which function is consing?
Date: Wed, 4 Jul 2007 16:45:17 +0200
To: caml-list@yquem.inria.fr
X-Mailer: Apple Mail (2.752.2)
X-Miltered: at concorde with ID 468BB27F.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; bunzli:01 buenzli:01 higher-order:01 ceb:01 caml-list:01 caml-list:01 compares:01 caml:02 caml:02 epfl:02 usefull:02 daniel:04 daniel:04 hint:04 manual:06 

You wrap your call in a higher-order function that compares the  
Gc.stat () before and after your call, see discussion here [1] and  
here [2].

This is only a half solution since it is a very manual one. However  
if you have a hint on where you allocate a lot this may be usefull to  
compare different implementations and their memory usage.

Daniel


[1] http://caml.inria.fr/pub/ml-archives/caml-list/ 
2003/11/34f26b24813463c04244b74a889dc2a3.fr.html
[2] http://caml.inria.fr/pub/ml-archives/caml-list/2003/11/ 
f5ceb88194f4324b692f89b6f3398ff2.fr.html

