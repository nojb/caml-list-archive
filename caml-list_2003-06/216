Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA14204; Fri, 13 Jun 2003 09:23:45 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA13982 for <caml-list@pauillac.inria.fr>; Fri, 13 Jun 2003 09:23:44 +0200 (MET DST)
Received: from mail1.tpgi.com.au (mail.tpgi.com.au [203.12.160.57])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h5D7NdH19514
	for <caml-list@inria.fr>; Fri, 13 Jun 2003 09:23:40 +0200 (MET DST)
Received: from ozemail.com.au (203-219-225-208-syd-ts24-2600.tpgi.com.au [203.219.225.208])
	(authenticated (0 bits))
	by mail1.tpgi.com.au (8.11.6/8.11.6) with ESMTP id h5D7NT123344
	for <caml-list@inria.fr>; Fri, 13 Jun 2003 17:23:30 +1000
Message-ID: <3EE97BF0.8000005@ozemail.com.au>
Date: Fri, 13 Jun 2003 17:23:28 +1000
From: John Max Skaller <skaller@ozemail.com.au>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.2.1) Gecko/20010901
X-Accept-Language: en-us
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: [Caml-list] This is so nice ..
References: <200306121443.QAA0000013156@beaune.inria.fr> <3EE8A73A.3020207@ozemail.com.au> <3EE8AC5E.6080409@ozemail.com.au>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; ozemail:01 wwwfun:01 3.04.:01 toxteth:01 glebe:01 2037,:01 9660:01 0850:01 garrigue:01 rec:01 nsw:01 snail:02 trick:03 let:04 stuff:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I can hardly believe this works.
I copied this trick from Jacque's code

http://wwwfun.kurims.kyoto-u.ac.jp/~garrigue/papers/mixev3.04.ml.txt

Thanks! This is really great stuff.
I feel like a dill: its exactly the same
as the parameterised class trick I already
knew about.
------------------------------------------

type 'a s1 = [`A | `B of 'a]
type  'a s2 = ['a s1 | `C]

type ss1 = 'a s1 as 'a
type ss2 = 'a s2 as 'a

let rec reduce : ss2 -> ss1 = function
     | `A -> `A
     | `B z -> `B (reduce z)
     | `C -> raise Not_found
;;

reduce (`B `C);;

-- 
John Max Skaller, mailto:skaller@ozemail.com.au
snail:10/1 Toxteth Rd, Glebe, NSW 2037, Australia.
voice:61-2-9660-0850


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

