Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA06453; Fri, 13 Jun 2003 23:39:51 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA06389 for <caml-list@pauillac.inria.fr>; Fri, 13 Jun 2003 23:39:49 +0200 (MET DST)
Received: from walnut.he.net (walnut.he.net [64.71.137.114])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h5DLdmH04919
	for <caml-list@inria.fr>; Fri, 13 Jun 2003 23:39:48 +0200 (MET DST)
Received: from localhost (kmacy@localhost) by walnut.he.net (8.8.6p2003-03-31/8.8.2) with ESMTP id OAA16409; Fri, 13 Jun 2003 14:39:51 -0700
Date: Fri, 13 Jun 2003 14:39:50 -0700 (PDT)
From: Kip Macy <kmacy@fsmware.com>
X-Sender: kmacy@walnut.he.net
To: David McClain <dmcclain1@mindspring.com>
cc: caml-list@inria.fr
Subject: Re: [Caml-list] FP's and HyperThreading Processors
In-Reply-To: <00ad01c331f2$1bbacee0$0201a8c0@dylan>
Message-ID: <Pine.LNX.4.21.0306131433030.1017-100000@walnut.he.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Spam: no; 0.00; kip:99 caml-list:01 mcclain:01 libs:01 althought:01 low-level:01 locality:01 linked:01 routines:02 60%:97 optimized:02 ads:97 wrote:03 efficient:05 probably:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk



On Fri, 13 Jun 2003, David McClain wrote:

> > If it was optimized for the P2 it will by definition not be optimized for
> > the P4,
> 
> Yes, you are correct about this, but I have the Intel numerical libs for the
> P4 linked into the program. On the old P2 system, this code spend roughly
> 60% of its time inside that vendor code for FFT's. This is no longer true,
> as other tests show very high performance of just those vendor routines.

Althought he FFT code itself probably has large influence on memory access
patterns.

> hand crafted efficient low-level code. But they turned their backs on our
> more forward looking needs.

When I look at the sheer number of want ads for java programmers, I can't
help but wonder how much of an issue performance really is for most 
people. I honestly think it would be much cheaper to make GC systems
locality aware than for processor vendors to incorporate GC support. 
Especially considering the apparent lack of commercial demand for
it.




-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

