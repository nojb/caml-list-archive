Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA15530; Fri, 20 Jun 2003 13:05:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA15101 for <caml-list@pauillac.inria.fr>; Fri, 20 Jun 2003 13:05:32 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from smtp01.cp.tin.it (vsmtp0.virgilio.it [212.216.176.136] (may be forged))
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h5KB5VH28109
	for <caml-list@inria.fr>; Fri, 20 Jun 2003 13:05:32 +0200 (MET DST)
Received: from vsmtp13.tin.it (212.216.176.207) by smtp01.cp.tin.it (6.7.016)
        id 3EDFBB5D002EDD2F for caml-list@inria.fr; Fri, 20 Jun 2003 13:05:30 +0200
Received: from furia (80.181.166.29) by vsmtp13.tin.it (6.7.016)
        id 3EDF81A201097354 for caml-list@inria.fr; Fri, 20 Jun 2003 13:05:30 +0200
Received: from localhost ([127.0.0.1] helo=furia)
	by furia with smtp (Exim 3.35 #1 (Debian))
	id 19TJk1-0000DP-00
	for <caml-list@inria.fr>; Fri, 20 Jun 2003 13:07:37 +0200
Date: Fri, 20 Jun 2003 13:07:36 +0200
From: Nick Name <nick.name@inwind.it>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Mutually recursive types and classes
Message-Id: <20030620130736.256741db.nick.name@inwind.it>
In-Reply-To: <Pine.LNX.4.44.0306191528500.10628-100000@grace.speakeasy.net>
References: <20030619194557.0b5265bb.nick.name@inwind.it>
	<Pine.LNX.4.44.0306191528500.10628-100000@grace.speakeasy.net>
X-Mailer: Sylpheed version 0.7.4claws (GTK+ 1.2.10; i386-debian-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; caml-list:01 inherit:01 unit:03 classes:03 recursive:03 wich:03 object:03 types:03 completeness:93 type:07 mutually:07 similar:09 report:89 solution:10 nick:10 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Thanks to all, I report another solution for completeness:

  class b = ...

  type a = A of b -> unit | ..

  class c = object (this)
  inherit b 
    method f : a -> unit = ...
  end

wich is similar in spirit to Brian's but allows to write the "inherit"
part.

Vincenzo

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

