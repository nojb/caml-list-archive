Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA06277; Mon, 2 Jun 2003 12:11:13 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA06297 for <caml-list@pauillac.inria.fr>; Mon, 2 Jun 2003 12:11:12 +0200 (MET DST)
Received: from qrnik.knm.org.pl (paf87.warszawa.sdi.tpnet.pl [217.96.225.87])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h52AB9T00387
	for <caml-list@inria.fr>; Mon, 2 Jun 2003 12:11:11 +0200 (MET DST)
Received: from localhost ([127.0.0.1] ident=qrczak)
	by qrnik.knm.org.pl with esmtp (Exim 3.36 #1)
	id 19MmHU-00005a-00
	for caml-list@inria.fr; Mon, 02 Jun 2003 12:11:08 +0200
From: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>
To: caml-list@inria.fr
Subject: Re: [Caml-list] implementing bit vectors in OCaml
Date: Mon, 2 Jun 2003 12:11:07 +0200
User-Agent: KMail/1.5.1
References: <20030601170317.002EF12F9CE@flatcoat.eecs.harvard.edu> <20030602112616.A3740@pauillac.inria.fr>
In-Reply-To: <20030602112616.A3740@pauillac.inria.fr>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-2"
Content-Transfer-Encoding: 8bit
Content-Disposition: inline
Message-Id: <200306021211.07901.qrczak@knm.org.pl>
X-Spam: no; 0.00; marcin:01 'qrczak':01 kowalczyk:01 qrczak:01 caml-list:01 vectors:01 arrays:01 ocaml:01 knm:01 syntax:02 uniform:02 inner:02 float:02 module:03 hack:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Dnia pon 2. czerwca 2003 11:26, Xavier Leroy napisa³:

> The special case for float arrays is already a bit of a hack and it
> isn't clear this was a really good idea -- although it sure helps with
> benchmarks :-)

I don't like it, perhaps because I don't use float arrays. It makes most of 
the Array module useless as far as performance is concerned because they do 
the array kind check in all inner loops.

float array should be a separate type. Unfortunately OCaml can't provide 
uniform syntax for accessing elements in this case and it would require 
separate functions like those in Array.

-- 
   __("<         Marcin Kowalczyk
   \__/       qrczak@knm.org.pl
    ^^     http://qrnik.knm.org.pl/~qrczak/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

