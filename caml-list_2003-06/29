Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA30619; Tue, 3 Jun 2003 00:42:39 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA30204 for <caml-list@pauillac.inria.fr>; Tue, 3 Jun 2003 00:42:38 +0200 (MET DST)
Received: from mail3.tpgi.com.au (mail.tpgi.com.au [203.12.160.59])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h52MgZH02386
	for <caml-list@inria.fr>; Tue, 3 Jun 2003 00:42:36 +0200 (MET DST)
Received: from ozemail.com.au (203-219-225-121-syd-ts24-2600.tpgi.com.au [203.219.225.121])
	(authenticated (0 bits))
	by mail3.tpgi.com.au (8.11.6/8.11.6) with ESMTP id h52MgWt11102
	for <caml-list@inria.fr>; Tue, 3 Jun 2003 08:42:32 +1000
Message-ID: <3EDBD2D8.9000508@ozemail.com.au>
Date: Tue, 03 Jun 2003 08:42:32 +1000
From: John Max Skaller <skaller@ozemail.com.au>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.2.1) Gecko/20010901
X-Accept-Language: en-us
MIME-Version: 1.0
To: "'caml-list@inria.fr'" <caml-list@inria.fr>
Subject: Re: [Caml-list] ocaml and large development projects
References: <4.3.2.7.2.20030517225010.04b748a0@localhost> <4.3.2.7.2.20030519120753.04545700@localhost>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; ozemail:01 caml-list:01 hecker:01 rant:01 rave:99 organise:99 consumers:99 interfacing:01 model:01 enforced:01 extensively:01 toxteth:01 glebe:01 2037,:01 9660:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Chris Hecker wrote:


>> Maybe.  C++ and Java are toy languages, then.
> 
> 
> This statement plays well on a mailing list for an alternative language, 
> but the reality is fairly different and most people writing large 

> software in C++ would write you off as a loon if you said this to them.  


	With due respect: most software houses emply
smart people that know no computer science. One can blame
universities for not teaching it I suppose.

	These software houses insist on using bad tools
all the time, they insist on using engineering methodology
entirely inappropriate for software development, they DARE
to rant and rave about how good object orientation is, and then
organise their people in heirarchical teams.

	Basically, they're total morons on an organisational
level, even if the individiuals are quite smart.

	Unfortunately one must cry, that these people
are well paid to rip off investors, consumers, taxpayers,
and just about everyone else. Most haven't even heard
of functional programming.

	In other words, their opinion about
separate compilation just doesn't count for anything
in my books: why would I listen to some idiot that
thinks Java is a good language?


	In my opinion, the major weakness of
Ocaml industrially is that one cannot currently generate
shared libraries. (Interfacing with C/C++ is also problematic
but possible).

	The reason is that the modern separate
compilation model *enforced* my operating system
technology, and used extensively for large scale projects,
is not separate compilation and static linkage into a program,
but building of shared libraries: Ocaml(opt) is targetting the wrong
kind of object, no one is interested in programs these days
(they're built with scripting languages). They're interested
in reusable binary components.

	I can't argue if this is right or wrong, but it
is a fact that that is what people need to build.
The Ocaml team surely knows this and is working towards
implementing it (witness preparatory work on linking
C parts of Ocaml as shared libraries).

-- 
John Max Skaller, mailto:skaller@ozemail.com.au
snail:10/1 Toxteth Rd, Glebe, NSW 2037, Australia.
voice:61-2-9660-0850


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

