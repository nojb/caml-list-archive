Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA18379; Tue, 17 Jun 2003 22:00:05 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA18077 for <caml-list@pauillac.inria.fr>; Tue, 17 Jun 2003 22:00:04 +0200 (MET DST)
Received: from mail-in-01.arcor-online.net (mail-in-01.arcor-online.net [151.189.21.41])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h5HK03T20111
	for <caml-list@inria.fr>; Tue, 17 Jun 2003 22:00:04 +0200 (MET DST)
Received: from diebuntekuh.de (dialin-212-144-186-030.arcor-ip.net [212.144.186.30])
	by mail-in-01.arcor-online.net (Postfix) with ESMTP id 0876F18619
	for <caml-list@inria.fr>; Tue, 17 Jun 2003 22:00:03 +0200 (CEST)
Received: by diebuntekuh.de (Postfix, from userid 500)
	id 28176638ECF; Tue, 17 Jun 2003 22:01:30 +0200 (CEST)
To: OCaml List <caml-list@inria.fr>
Subject: [Caml-list] -unsafe
From: Christoph Bauer <c_bauer@informatik.uni-kl.de>
Date: Tue, 17 Jun 2003 22:01:30 +0200
Message-ID: <m3he6o5v8l.fsf@diebuntekuh.de>
User-Agent: Gnus/5.1002 (Gnus v5.10.2) Emacs/21.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Spam: no; 0.00; bauer:01 -unsafe:01 foreach:01 expr:01 arrays:01 anyhow:01 caml:01 binary:02 array:04 proc:05 uses:06 body:93 accesses:08 scan:09 matrix:09 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi,

my program uses a lot of array accesses, but it needs also speed.
Therefore I turned the `-unsafe' option on. Anyhow there are a lot 
of `caml_array_bound_error' calls in the assembly code file.

Do I have to use Array.usafe_get/set (which doesn't looks nice
on matrix arrays) to get more speed?

Thanks,
Christoph Bauer

-- 
proc self {} {foreach c [split [info body self] ""] d {14 -7 0 0 4 -67 4 73 11
69 24 -83 -15 6 -4 -84 78 20 11 -78 -1 -1 79 19 -8 4} { binary scan $c c c
if {[catch {append r [format %c [expr $c+$d]]}]} {return $r};}};puts [self]

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

