Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA24759; Tue, 24 Jun 2003 14:57:51 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA24087 for <caml-list@pauillac.inria.fr>; Tue, 24 Jun 2003 14:57:50 +0200 (MET DST)
Received: from nef.ens.fr (nef.ens.fr [129.199.96.32])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h5OCvnf27552
	for <caml-list@inria.fr>; Tue, 24 Jun 2003 14:57:50 +0200 (MET DST)
Received: from fistandantilus.takhisis.org (dhcp171.dmi.ens.fr [129.199.97.171])
          by nef.ens.fr (8.12.9/1.01.28121999) with ESMTP id h5OCvkpx085363
          for <caml-list@inria.fr>; Tue, 24 Jun 2003 14:57:46 +0200 (CEST)
Received: by fistandantilus.takhisis.org (Postfix, from userid 3148)
	id B2FDF27407D; Tue, 24 Jun 2003 14:57:46 +0200 (CEST)
Date: Tue, 24 Jun 2003 14:57:46 +0200
From: Stefano Zacchiroli <zack@bononia.it>
To: caml-list@inria.fr
Subject: Re: [Caml-list] copy of parametrized object
Message-ID: <20030624125746.GA5569@fistandantilus.takhisis.org>
Mail-Followup-To: caml-list@inria.fr
References: <200306241115.h5OBFH5U025183@saul.cis.upenn.edu> <20030624213608T.garrigue@kurims.kyoto-u.ac.jp>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20030624213608T.garrigue@kurims.kyoto-u.ac.jp>
User-Agent: Mutt/1.5.4i
X-Spam: no; 0.00; bononia:01 caml-list:01 0900,:01 jacques:01 foo:01 ocaml:01 int:01 garrigue:01 constructors:01 bologna:03 wrote:03 zacchiroli:03 btw:03 romney:03 unibo:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, Jun 24, 2003 at 09:36:08PM +0900, Jacques Garrigue wrote:
> famous value restriction: any function application result is
> non-polymorphic, and an object construtctor is seen as a function
> application.

BTW (but surely a bit off-thread), could you remember me for which
reason object constructors are not considered functions consistently in
the ocaml language? Why is currently not possible to do:

  type foo = Foo of int | Bar of int
  List.map Foo [1; 2; 3; 4]

?

TIA,
Cheers

-- 
Stefano Zacchiroli  --  Master in Computer Science @ Uni. Bologna, Italy
zack@{cs.unibo.it,debian.org,bononia.it}  -  http://www.bononia.it/zack/
"  I know you believe you understood what you think I said, but I am not
sure you realize that what you heard is not what I meant!  " -- G.Romney

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

