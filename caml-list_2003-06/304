Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA05866; Wed, 18 Jun 2003 13:14:15 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA06550 for <caml-list@pauillac.inria.fr>; Wed, 18 Jun 2003 13:14:14 +0200 (MET DST)
Received: from indyio.rz.uni-saarland.de (indyio.rz.uni-saarland.de [134.96.7.3])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h5IBEDH19203
	for <caml-list@inria.fr>; Wed, 18 Jun 2003 13:14:13 +0200 (MET DST)
Received: from uni-sb.de (uni-sb.de [134.96.7.230])
	by indyio.rz.uni-saarland.de (8.12.9/8.12.5) with ESMTP id h5IBECai7602940
	for <caml-list@inria.fr>; Wed, 18 Jun 2003 13:14:12 +0200 (CEST)
Received: from cs.uni-sb.de (cs.uni-sb.de [134.96.252.31])
	by uni-sb.de (8.12.9/2003020700) with ESMTP id h5IBEBVU000008
	for <caml-list@inria.fr>; Wed, 18 Jun 2003 13:14:12 +0200 (CEST)
Received: from mail.cs.uni-sb.de (mail.cs.uni-sb.de [134.96.254.200])
	by cs.uni-sb.de (8.12.9/2003020700) with ESMTP id h5IBE5sd017904
	for <caml-list@inria.fr>; Wed, 18 Jun 2003 13:14:11 +0200 (CEST)
Received: from ps.uni-sb.de (grizzly.ps.uni-sb.de [134.96.186.68])
	by mail.cs.uni-sb.de (8.12.9/2003061700) with ESMTP id h5IB9udF009559
	for <caml-list@inria.fr>; Wed, 18 Jun 2003 13:09:56 +0200 (CEST)
X-Authentication-Warning: email: Host grizzly.ps.uni-sb.de [134.96.186.68] claimed to be ps.uni-sb.de
Received: from ps.uni-sb.de (zoidberg.ps.uni-sb.de [134.96.186.121])
	by ps.uni-sb.de (8.11.6/8.11.0) with ESMTP id h5IB9uU05498;
	Wed, 18 Jun 2003 13:09:56 +0200
Message-ID: <3EF04884.2010400@ps.uni-sb.de>
Date: Wed, 18 Jun 2003 13:09:56 +0200
From: Andreas Rossberg <rossberg@ps.uni-sb.de>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.1) Gecko/20021003
X-Accept-Language: de, en
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: [Caml-list] type and modules... (sig mismatch again)
References: <20030618104059.GA25514@anu.edu.au>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; rossberg:01 uni-sb:01 caml-list:01 mismatch:01 pietro:01 abate:01 val:01 struct:01 darkened:01 munching:01 repetitive:01 kristian:01 sig:01 int:01 listening:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Pietro Abate wrote:
> 
> how can I force this behavior without changing t1_t and t2_t ?

You can wrap them in auxiliary modules. One purpose of modules is name 
space management.

> why the signature doesn't enforce the right type matching ?

Due to the way data type declarations work, this is not a typing issue, 
but purely a scoping issue. The first constructor A is simply shadowed 
by the second one, so A always refers to the latter.

Beside that, modules are typed independently of any signature 
constraint. The latter is checked only after typing the module body. 
This is an important design principle of the module language. So even if 
both A's could be disambiguated by typing in some way, the information 
provided by the signature would come "too late".

   - Andreas

> module type A = sig
>     type t1
>     type t2
>     val tutu : t1 -> t2
> end
> 
> type t1_t = A of int
> type t2_t = A of int | B of int
> 
> module Make : (A with type t1 = t1_t and type t2 = t2_t) = struct
>     type t1 = t1_t
>     type t2 = t2_t
>     let tutu = function
>         |A(x) -> B(x)
> end

-- 
Andreas Rossberg, rossberg@ps.uni-sb.de

"Computer games don't affect kids; I mean if Pac Man affected us
  as kids, we would all be running around in darkened rooms, munching
  magic pills, and listening to repetitive electronic music."
  - Kristian Wilson, Nintendo Inc.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

