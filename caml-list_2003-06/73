Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA07663; Wed, 4 Jun 2003 23:39:44 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA07700 for <caml-list@pauillac.inria.fr>; Wed, 4 Jun 2003 23:39:43 +0200 (MET DST)
Received: from epexch01.qlogic.org ([63.170.40.3])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h54LdgT16099
	for <caml-list@inria.fr>; Wed, 4 Jun 2003 23:39:42 +0200 (MET DST)
Received: from epmailtmp.qlogic.org ([10.20.33.254]) by epexch01.qlogic.org with Microsoft SMTPSVC(5.0.2195.5329);
	 Wed, 4 Jun 2003 16:41:08 -0500
Received: from [10.20.33.146] ([10.20.33.146]) by epmailtmp.qlogic.org with Microsoft SMTPSVC(5.0.2195.4905);
	 Wed, 4 Jun 2003 16:41:07 -0500
Date: Wed, 4 Jun 2003 16:56:32 -0500 (CDT)
From: Brian Hurt <brian.hurt@qlogic.com>
X-X-Sender:  <brianh@eagle.ancor.com>
Reply-To: Brian Hurt <brian.hurt@qlogic.com>
To: Stefano Zacchiroli <zack@bononia.it>
cc: Inria Ocaml Mailing List <caml-list@inria.fr>
Subject: Re: [Caml-list] yet another benchmark: List.map vs tail recursive
 map
In-Reply-To: <20030604120011.GA12262@fistandantilus.takhisis.org>
Message-ID: <Pine.LNX.4.33.0306041649050.2857-100000@eagle.ancor.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-OriginalArrivalTime: 04 Jun 2003 21:41:07.0915 (UTC) FILETIME=[01E339B0:01C32AE2]
X-Spam: no; 0.00; qlogic:01 caml-list:01 extlib:01 sourceforge:01 benchmark:02 wrote:03 zacchiroli:03 recursive:03 library:03 tail:03 usefull:03 stefano:04 wondering:04 brian:06 standard:07 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 4 Jun 2003, Stefano Zacchiroli wrote:

> I'm now wondering: is worthwhile to have a List.map implementation
> not tail recursive in the standard library? Can we consider to replace
> it with a tail recursive implementation?

I think so.  ExtLib even has a non-reversing, tail-recursive version.  
Along with other usefull libraries.

http://sourceforge.net/projects/ocaml-lib/

Brian


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

