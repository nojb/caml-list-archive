Return-Path: <whitequark@whitequark.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 33F7D7F736;
	Sun, 27 Sep 2015 19:41:31 +0200 (CEST)
IronPort-PHdr: 9a23:TpcYIxaYB2hGRfBuaaNyMQX/LSx+4OfEezUN459isYplN5qZpcu5bnLW6fgltlLVR4KTs6sC0LqK9f28EjdZqb+681k8M7V0HycfjssXmwFySOWkMmbcaMDQUiohAc5ZX0Vk9XzoeWJcGcL5ekGA6ibqtW1aJBzzOEJPK/jvHcaK1oLsh7z0psGYOFwArQH+SI0xBS3+lR/WuMgSjNkqAYcK4TyNnEF1ff9Lz3hjP1OZkkW0zM6x+Jl+73YY4Kp5pIZoGJ/3dKUgTLFeEC9ucyVsvJWq5lH/Sl6173wBVi06jxlFS1zf5RbnWpvZvS7zt+470y6fa57YV7cxDCui7rtmUQLhkiRPYyE58X3ak9F5lqFzvxKguxFm3ofOY8eSLvUoLfCVRs8TWWcUBpUZbCdGGI7pKtJXV+c=
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=whitequark@whitequark.org; spf=Pass smtp.mailfrom=whitequark@whitequark.org; spf=None smtp.helo=postmaster@mail.whitequark.org
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  whitequark@whitequark.org) identity=pra;
  client-ip=176.58.103.125;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="whitequark@whitequark.org";
  x-sender="whitequark@whitequark.org";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  whitequark@whitequark.org designates 176.58.103.125 as
  permitted sender) identity=mailfrom;
  client-ip=176.58.103.125;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="whitequark@whitequark.org";
  x-sender="whitequark@whitequark.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail.whitequark.org) identity=helo;
  client-ip=176.58.103.125;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="whitequark@whitequark.org";
  x-sender="postmaster@mail.whitequark.org";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0CcBADQKQhW/31nOrBdx0iCVgKBWxABAQEBAQEBAYEJgh2CCAEBBDgCPxAEBwkPLiwrBhuIKssGAQEIAiCKS4ElhQ0HhCwBBI1wiACBUIs7gVOWA4NtOCuEBDuJVAEBAQ
X-IPAS-Result: A0CcBADQKQhW/31nOrBdx0iCVgKBWxABAQEBAQEBAYEJgh2CCAEBBDgCPxAEBwkPLiwrBhuIKssGAQEIAiCKS4ElhQ0HhCwBBI1wiACBUIs7gVOWA4NtOCuEBDuJVAEBAQ
X-IronPort-AV: E=Sophos;i="5.17,598,1437429600"; 
   d="scan'208";a="179638746"
Received: from fehu.whitequark.org (HELO mail.whitequark.org) ([176.58.103.125])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/ADH-AES256-GCM-SHA384; 27 Sep 2015 19:41:30 +0200
Received: by mail.whitequark.org (Postfix, from userid 33)
	id C461A138FDC; Sun, 27 Sep 2015 17:41:29 +0000 (UTC)
To: Raoul Duke <raould@gmail.com>
X-PHP-Originating-Script: 1000:rcube.php
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII;
 format=flowed
Content-Transfer-Encoding: 7bit
Date: Sun, 27 Sep 2015 20:41:29 +0300
From: whitequark <whitequark@whitequark.org>
Cc: OCaml <caml-list@inria.fr>, caml-list-request@inria.fr
In-Reply-To: <CAJ7XQb51ZjGXAyy7NStdZaQAw31vv7F+jEqLD65d5GE_mh0PWg@mail.gmail.com>
References: <CAJ7XQb7p_PQQ5LGa2S0ONkh7tQs-UrO5kstF_wA2EwJEY7ChJA@mail.gmail.com>
 <1443259698.4442.12.camel@e130.lan.sumadev.de>
 <CAJ7XQb6pcWOzcLgt9U7UpFf0fV4MHhWLtMdmR=wszzwi-3zy5Q@mail.gmail.com>
 <e362fc9688066d13af18b848035e02de@whitequark.org>
 <CAJ7XQb5Xmd0TW_91_8gqeHptFPAuaYpeNCuP4piZx-rsQ2X9yA@mail.gmail.com>
 <1acefe77c30ce33c0adba49605bd9325@whitequark.org>
 <CAJ7XQb51ZjGXAyy7NStdZaQAw31vv7F+jEqLD65d5GE_mh0PWg@mail.gmail.com>
Message-ID: <3eec2747fc6b8a266ac2e38773423b05@whitequark.org>
X-Sender: whitequark@whitequark.org
User-Agent: Roundcube Webmail/1.1.0
Subject: Re: [Caml-list] whither portability?

On 2015-09-27 20:19, Raoul Duke wrote:
>> Right now, LLVM IR (of which the bitcode is a serialization) is not
>> flexible enough to express the invariants and metadata required
>> for the OCaml GC to function[1]. Even if someone released the 
>> necessary,
>> highly nontrivial changes to both LLVM and OCaml today, it would take
>> many months for them to be reviewed, merged & propagated into Apple's
>> LLVM fork--all for a small improvement in a select few numeric 
>> workloads
>> that can benefit from using the instruction selector tailored for
>> the particular device, and a substantial reduction in being able to
>> debug your code[2].
> 
> Thanks for the details. I am (only) a little bit aware of the history
> of LLVM vs. GCs, so I can believe what you report. I would much prefer
> to be able to debug, as well.
> 
> (Given Apple, I wouldn't be surprised if an a year they required
> bitcode, however.)

It is already required for Apple Watch. Given that bitcode allows to
include inline assembly, I wonder if one could just take OCaml's output,
put it in one giant module-level inline assembly block, and ship it like
that.

-- 
whitequark
