Return-Path: <jun.furuse@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 23BEE7F0A3
	for <caml-list@sympa.inria.fr>; Sat,  5 Sep 2015 00:58:53 +0200 (CEST)
IronPort-PHdr: 9a23:ARPVaxZ4WXu+w6BUIQMRHSD/LSx+4OfEezUN459isYplN5qZpci9bnLW6fgltlLVR4KTs6sC0LqK9fi/EjVZqb+681k8M7V0HycfjssXmwFySOWkMmbcaMDQUiohAc5ZX0Vk9XzoeWJcGcL5ekGA6ibqtW1aJBzzOEJPK/jvHcaK1oLsh7z0o8KYOlwArQH+SI0xBS3+lR/WuMgSjNkqAYcK4TyNnEF1ff9Lz3hjP1OZkkW0zM6x+Jl+73YY4Kp5pIYTGZn9Kq8xSLgdCDU9Lyhh78TusVzHTBCTznoaSGQf1BRSVVvr9hb/C7XstGPUq/BgwyTSac/rS/Y6RC6/9KpDRxrhiSNBPDk8pjKEwvdshb5W9Ury7yd0xJTZNdmY
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=jun.furuse@gmail.com; spf=Pass smtp.mailfrom=jun.furuse@gmail.com; spf=None smtp.helo=postmaster@mail-lb0-f176.google.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  jun.furuse@gmail.com) identity=pra; client-ip=209.85.217.176;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jun.furuse@gmail.com";
  x-sender="jun.furuse@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  jun.furuse@gmail.com designates 209.85.217.176 as permitted
  sender) identity=mailfrom; client-ip=209.85.217.176;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jun.furuse@gmail.com";
  x-sender="jun.furuse@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-lb0-f176.google.com) identity=helo;
  client-ip=209.85.217.176;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jun.furuse@gmail.com";
  x-sender="postmaster@mail-lb0-f176.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0D2AQBRIepVlLDZVdFdhF4GqzqGT5R6BzwQAQEBAQEBAQEQAQEBAQcLCwkfMIIdgh8RBBkBGx4DEhAPAiYCJAERAQUBIjWHdgEDEqZnggWBLz4xi0CBbIJ5iXkKGScNVoRYAQUOgRSFUYx2gUMFjWyERYMgjHeOLop2EiOBF4RGHjOJSwEBAQ
X-IPAS-Result: A0D2AQBRIepVlLDZVdFdhF4GqzqGT5R6BzwQAQEBAQEBAQEQAQEBAQcLCwkfMIIdgh8RBBkBGx4DEhAPAiYCJAERAQUBIjWHdgEDEqZnggWBLz4xi0CBbIJ5iXkKGScNVoRYAQUOgRSFUYx2gUMFjWyERYMgjHeOLop2EiOBF4RGHjOJSwEBAQ
X-IronPort-AV: E=Sophos;i="5.17,470,1437429600"; 
   d="scan'208";a="176109944"
Received: from mail-lb0-f176.google.com ([209.85.217.176])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 05 Sep 2015 00:58:52 +0200
Received: by lbbmp1 with SMTP id mp1so18643297lbb.1
        for <caml-list@inria.fr>; Fri, 04 Sep 2015 15:58:52 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:date:message-id:subject:from:to:content-type;
        bh=CTgl4u9KGh9JNlyOr4NIWngvc2qJ+AFQ3GFknCPzNX4=;
        b=ehIXpw6N/gQsLF9x7KRg/m/O6B/H2vI4RaK1ayQnAZgRmfMFtAXFa7TgCraw5IeDk3
         NlPZcyWeVONd9AIkQq55LTuTgxM/35+vZAvWkJVlXhepm59887s8NX51UaZOaIbgQUgV
         N/Q6BkTtK/2aXNCwvoF9eNhu4qO1qjJs3Tj6BE0RLY2KaZFQKvgWgdTSLefFhKUUFs4X
         onfDhiSjmnKndEfjimS+oVehqZxVcY/+uLJxpemKx/G1cD9KMq+eRiSB8q4DYDJ+T6BV
         Wkk0bvRzJ/oUDNWLp+e+8wibKYKSzFAJY8ERTpnRhlcweKT/Y1eIkQZxOL6Xm2Y1DQ7D
         fDXQ==
MIME-Version: 1.0
X-Received: by 10.112.157.130 with SMTP id wm2mr5854916lbb.24.1441407532060;
 Fri, 04 Sep 2015 15:58:52 -0700 (PDT)
Received: by 10.112.85.67 with HTTP; Fri, 4 Sep 2015 15:58:52 -0700 (PDT)
Date: Fri, 4 Sep 2015 15:58:52 -0700
Message-ID: <CAAoLEWsO+vbi3Y6QkmmAwhw-4bR3bDvmjDt-LNi7_0kT3mzkNA@mail.gmail.com>
From: Jun Furuse <jun.furuse@gmail.com>
To: caml-list <caml-list@inria.fr>
Content-Type: text/plain; charset=UTF-8
Subject: [Caml-list] [ANN][PATCH+PPX] Curried constructor

Hi,

I wrote  curried-constr patch for OCaml 4.02.3.  It makes variant
constructors usable like functions.

For the type definition

  type t = Foo of int * float

we can write

    Foo   as    (fun (x,y) -> Foo (x,y))

ad

    !Foo  as   (fun x y -> Foo (x,y))


There are two ways to try this extension:  as a compiler modification,
and as a PPX preprocessor:

* opam switch 4.02.3+curried-constr   (as a patched compiler)
* opam install ppx_curried_constr       (as a PPX preprocessor)

Enjoy!

Jun
