Return-Path: <rossberg@mpi-sws.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 689197F0A3
	for <caml-list@sympa.inria.fr>; Wed,  2 Sep 2015 19:57:03 +0200 (CEST)
IronPort-PHdr: 9a23:AVH4+BQ5R+XOj8e+M32d44K3/Npsv+yvbD5Q0YIujvd0So/mwa64bBKN2/xhgRfzUJnB7Loc0qyN4/ymATZLuMzb+Fk5M7VyFDY9wf0MmAIhBMPXQWbaF9XNKxIAIcJZSVV+9Gu6O0UGUOz3ZlnVv2HgpWVKQka3CwN5K6zPF5LIiIzvjqbpq8GVO18D3WDnKZpJbzyI7izp/vEMhoVjLqtjgjDomVBvP9ps+GVzOFiIlAz97MrjtLRq8iBXpu5zv5UYCfayV+0CQLdZFDUrNXwurI2u7EGbDFjH2nxJdW4flx4AJgHE6BD8Ud/VszDm/r520SyeeMn3VqwcWDK47q4tRgW+2wkdMDts2WfbkMF5l+phpwm6rRFlzMaAeoaOL/BzZKz1eMsbAHFeRYBWTSMXUdD0VJcGE+dUZbUQlIL6vVZb6ELmXQQ=
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=rossberg@mpi-sws.org; spf=Pass smtp.mailfrom=rossberg@mpi-sws.org; spf=None smtp.helo=postmaster@hera.mpi-klsb.mpg.de
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  rossberg@mpi-sws.org) identity=pra; client-ip=139.19.1.49;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rossberg@mpi-sws.org";
  x-sender="rossberg@mpi-sws.org";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  rossberg@mpi-sws.org designates 139.19.1.49 as permitted
  sender) identity=mailfrom; client-ip=139.19.1.49;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rossberg@mpi-sws.org";
  x-sender="rossberg@mpi-sws.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@hera.mpi-klsb.mpg.de) identity=helo;
  client-ip=139.19.1.49;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rossberg@mpi-sws.org";
  x-sender="postmaster@hera.mpi-klsb.mpg.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0AAAgCYN+dVhDEBE4tdhFi9VokuOhIBAQEBAQEBARABAQEKBwQJCSEugh2CRwYBATiBPYhBtXqFVgEFkB0BGQaJAosWgRSVTpVrkXqEKG+CTQEBAQ
X-IPAS-Result: A0AAAgCYN+dVhDEBE4tdhFi9VokuOhIBAQEBAQEBARABAQEKBwQJCSEugh2CRwYBATiBPYhBtXqFVgEFkB0BGQaJAosWgRSVTpVrkXqEKG+CTQEBAQ
X-IronPort-AV: E=Sophos;i="5.17,455,1437429600"; 
   d="scan'208";a="144542667"
Received: from hera.mpi-klsb.mpg.de ([139.19.1.49])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES128-SHA; 02 Sep 2015 19:57:02 +0200
DKIM-Signature: v=1; a=rsa-sha256; q=dns/txt; c=relaxed/relaxed; d=mpi-sws.org; s=mail200803;
	h=Mime-Version:Message-Id:To:Subject:Date:Content-Transfer-Encoding:Content-Type:From; bh=SjY2e3r1LZbKRhD7tZpare/8V+Iq7kW8HgrqbTrgze8=;
	b=K3qngWtN7axmqUyEpIdigPS6HCdDraU0VVwwW5f1vlbk6ErGuf7D7O6LlsiqB305Wh1J8GGzrEzJJX7ME3hS1NrPplAgHpZ0ph8Kal+n2RvG68bhZVgnFHy98X/ToWR/X9pDhvmuepEA2Z0nMZQeGuU1u1+6f/WuHbmmXO2auTg=;
Received: from maniac.mpi-klsb.mpg.de ([139.19.1.28]:54734)
	by hera.mpi-klsb.mpg.de (envelope-from <rossberg@mpi-sws.org>) 
	with esmtps (TLS1.2:DHE_RSA_AES_128_CBC_SHA1:128)
	(Exim 4.80) id 1ZXCHM-0003JT-6z; Wed, 02 Sep 2015 19:57:02 +0200
Received: from 209-82-80-116.dedicated.allstream.net ([209.82.80.116]:65110 helo=[10.199.3.29])
	by maniac.mpi-klsb.mpg.de (envelope-from <rossberg@mpi-sws.org>) 
	with esmtpsa (TLS1.0:DHE_RSA_AES_256_CBC_SHA1:256)
	(Exim 4.80) id 1ZXCHL-0002QE-Hu; Wed, 02 Sep 2015 19:56:59 +0200
From: Andreas Rossberg <rossberg@mpi-sws.org>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: quoted-printable
Date: Wed, 2 Sep 2015 19:56:56 +0200
To: Ocaml Mailing List <caml-list@inria.fr>
Message-Id: <1D9E71FC-1C39-4655-9258-1F2CB85BAF3D@mpi-sws.org>
Mime-Version: 1.0 (Mac OS X Mail 8.2 \(2070.6\))
X-Mailer: Apple Mail (2.2070.6)
X-MPI-Local-Sender: true
Subject: [Caml-list] NaN reresentations

Does the Ocaml implementation make guarantees about the stable representati=
on of floats? In particular, if I use Int64.float_of_bits to create a parti=
cular NaN representation, am I guaranteed that its bit pattern is maintaine=
d no matter where the value is stored or passed?

We are currently in the process of implementing a reference interpreter for=
 a little low-level language, and that tries to be as accurate as possible =
about float representations.

Thanks,
/Andreas

