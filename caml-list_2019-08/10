Return-Path: <sperber@deinprogramm.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 27E2D826D8
	for <caml-list@sympa.inria.fr>; Mon,  5 Aug 2019 17:04:09 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=sperber@deinprogramm.de; spf=Pass smtp.mailfrom=sperber@deinprogramm.de; spf=None smtp.helo=postmaster@deinprogramm.deinprogramm.de
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  sperber@deinprogramm.de) identity=pra;
  client-ip=88.198.58.179;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="sperber@deinprogramm.de";
  x-sender="sperber@deinprogramm.de";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  sperber@deinprogramm.de designates 88.198.58.179 as permitted
  sender) identity=mailfrom; client-ip=88.198.58.179;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="sperber@deinprogramm.de";
  x-sender="sperber@deinprogramm.de";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@deinprogramm.deinprogramm.de) identity=helo;
  client-ip=88.198.58.179;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="sperber@deinprogramm.de";
  x-sender="postmaster@deinprogramm.deinprogramm.de";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AsgIuNR+Nivs0Qv9uRHKM819IXTAuvvDOBiVQ1KB3?=
 =?us-ascii?q?0+IcTK2v8tzYMVDF4r011RmVBN+dsqobwLqP+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZLebxhWiDanfL9+MBe7oQrSu8ULnIBvNrs/xhzVr3VSZu?=
 =?us-ascii?q?9Y33loJVWdnxb94se/4ptu+DlOtvwi6sBNT7z0c7w3QrJEAjsmNXs15NDwuhnY?=
 =?us-ascii?q?UQSP/HocXX4InRdOHgPI8Qv1Xpb1siv9q+p9xCyXNtD4QLwoRTiv6bpgRRn1gy?=
 =?us-ascii?q?kFKjE56nnahMxugqxGrhyvpBJwzIHIb4+aL/d+YrrdcMkGSWZdRMtcVSpMCZ68?=
 =?us-ascii?q?YYsVCOoBOP5VoY78p1QSrRuxHxejBOfywTFVnn/5w7c63P8/HgHcwQctGMkOsG?=
 =?us-ascii?q?zKo9XvL6gdT/q1wbLVwjrdbvNW3y/96JLPchAuu/GDR7dwcc/LxUYyCQzIl1Od?=
 =?us-ascii?q?opHrMTOS0+QCqWmb7+x4WO20jG4osAJxoj+pxscikIXGm5wax1bZ/it62IY4Pd?=
 =?us-ascii?q?61RU1hbdK5FJZdtDuWOot1T884Xm1luiI3xqUItJO5ZiQG1psqywTCZ/Cad4WE?=
 =?us-ascii?q?+A/vWeKNLTp+mXlrYqiwhwyo/kil0uD8Vte70FJNriddj9bDqHEN1xrL6sidTf?=
 =?us-ascii?q?t98V2h1iyK1wDW8O1LPF47lavdK5452L4wkZUTsV7ZES/znUX6lrKZeVs89uip?=
 =?us-ascii?q?7eTofKnmq4efOoJ3kA3yL6Ajl8+lDek4MQUCRXWX9Oa42bH7+E32WrRKjvk4kq?=
 =?us-ascii?q?nDt5DaINwWprWhAwBLyIYs8AiwDy293dsFg3YHLVRFeAqdj4juNFHOOur3DfK6?=
 =?us-ascii?q?g1i2jThk2ejKPqf9DZXVMnjDjLDhcK5h5EFGzQozyclT55ZVCrEaPPL+QVTxtd?=
 =?us-ascii?q?zdDh8hKQO42efnCNNn1oMfQ22DGKGZMLmB+WOPs+kmJu3JYI4OpB78LeIk7rjg?=
 =?us-ascii?q?lywXg1gYKIyo1pseZXTwJexrOU+UezK4mc8MC20HpCIyQe3skEeFXiRaYnP0U6?=
 =?us-ascii?q?9qtWJzM56vEYqWHtPlu7eGxiruRsQHNFADMUiFFDLTT6vBXv4NbCyIJco4zW4I?=
 =?us-ascii?q?WLmnU5Um2gunsQq8x7c1d7OIqB1djorq0Z1O38OWjQs7rGMmA8mc1XmXSG5ul2?=
 =?us-ascii?q?YNATM7jvgm/B5Nj2yb2K09uMR2UNxe4/QSClU2OJ/a1/Z9BMr7XweHctqITk68?=
 =?us-ascii?q?Rdq8CDQ0CN48kYcD?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BeFACSREhd/7M6xlhmghmBboEXUjIqh?=
 =?us-ascii?q?B6IfIYtgjiIEZBngXsJAQMBDCMKAgEBgUuDQgEEgjkHAQQxCA4BAwEBBAEBAgE?=
 =?us-ascii?q?DAwFshR4MgigSIoMSBh0BASYFDTQCBRMOAhEBBCmDCkyCDgEKqwtxgTKCegEBB?=
 =?us-ascii?q?YEzAYEUhGkJgQwoiz09gX+BEYFwdIFwgToYCwOCLYI+gliMYo5CkAAJgTlkgh+?=
 =?us-ascii?q?EPY1dgxyKJYpolR+EXotigVEBNoFYMxoIHBSDJwmCEAFAhAyKHwM9M4EFjTcBA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0BeFACSREhd/7M6xlhmghmBboEXUjIqhB6IfIYtgjiIEZB?=
 =?us-ascii?q?ngXsJAQMBDCMKAgEBgUuDQgEEgjkHAQQxCA4BAwEBBAEBAgEDAwFshR4MgigSI?=
 =?us-ascii?q?oMSBh0BASYFDTQCBRMOAhEBBCmDCkyCDgEKqwtxgTKCegEBBYEzAYEUhGkJgQw?=
 =?us-ascii?q?oiz09gX+BEYFwdIFwgToYCwOCLYI+gliMYo5CkAAJgTlkgh+EPY1dgxyKJYpol?=
 =?us-ascii?q?R+EXotigVEBNoFYMxoIHBSDJwmCEAFAhAyKHwM9M4EFjTcBAQ?=
X-IronPort-AV: E=Sophos;i="5.64,350,1559512800"; 
   d="scan'208";a="394530243"
X-MGA-submission: =?us-ascii?q?MDGOdfs8uI5Dw3DqjxUsWf/5g7hWORwrKa/3eL?=
 =?us-ascii?q?f179h5xSWWADpBeFRDEOsR7Srlh327YyKSguavK7blN0AIwRPMKoJnZD?=
 =?us-ascii?q?eTAsWdQzj/aQB3BQCC/DClqBuL4VSqPyacughU668k0n2Lt845qezZST?=
 =?us-ascii?q?SQNqmqHYZ6uD1VqBTx4lGcXA=3D=3D?=
Received: from deinprogramm.de (HELO deinprogramm.deinprogramm.de) ([88.198.58.179])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 05 Aug 2019 17:04:08 +0200
Received: from valmont.local (b2b-37-24-119-190.unitymedia.biz [37.24.119.190])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by deinprogramm.deinprogramm.de (Postfix) with ESMTPSA id D93792ADC871
	for <caml-list@inria.fr>; Mon,  5 Aug 2019 17:04:07 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=simple/simple; d=deinprogramm.de;
	s=default; t=1565017448;
	bh=9x2kcBiXv19uw7kzXKGUnYUrAzWjqiMHXCzHYTNDykw=;
	h=From:To:Subject:Date;
	b=wDYEb2Tf7df0B99Y/LmwWckC0qjFpDGnvyGEoFR04KbYNfukBPlue6u//nRdicDGc
	 wROgaKKLWm03Vxl36n+xN+eDirYkvDDHmCER6Drxb9PVdJr/wdzeuww8TGeUwvd4t1
	 4saj34ozsZiAaqiaK7eJ05RDoCPAFvLgokxOEWZw=
From: Michael Sperber <sperber@deinprogramm.de>
To: caml-list@inria.fr
Date: Mon, 05 Aug 2019 17:04:07 +0200
Message-ID: <y9l1rxzac2g.fsf@deinprogramm.de>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/26.2 (darwin)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
Subject: [Caml-list] Summer BOB 2019 Final Call for Participation (Aug 21,
 Berlin)


Note Xavier Leroy will give an invited talk!

=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D
			   Summer BOB 2019
			      Conference
	     =E2=80=9CWhat happens if we simply use what=E2=80=99s best?=E2=80=9D
		       August 21, 2019, Berlin
		       co-located with ICFP 2019
		    http://bobkonf.de/2019-summer/
	 Program: http://bobkonf.de/2019-summer/program.html
    Registration: http://bobkonf.de/2019-summer/registration.html
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D

Are you interested in technologies beyond the mainstream, that are a
pleasure to use, and effective at getting the job done?

BOB is the forum for developers, architects and builders to explore
and discover the best tools available today for building software. Our
goal is for all participants to leave the conference with new ideas to
improve development back at the ranch.

Summer BOB is a one-time-only event, in the spirit of the spectacular
Winter BOB. The International Conference on Functional Programming is
coming to town, and Summer BOB will be right in the middle of it, on
the last day of ICFP proper, prior to all the workshops. BOB
participants will be able to attend ICFP talks on Aug 21 and vice
versa.

We are committed to diversity: We aim at exploring a wide range of
tools in a welcoming and friendly crowd of diverse people. To that
end, a number of support options for participants from groups
under-represented in tech are available.

Summer BOB will feature two tracks: one from practitioners, and one
from researchers, designed to cross-pollinate and inspire.

Topics include distributed programming, testing, linear algebra,
functional design patterns, type systems, formal methods, and
interactive development:

Using Formal Methods to Eliminate Exploitable Bugs
Kathleen Fisher
=09
Purely functional distributed programming for collaborative applications
Adriaan Leijnse
=09
Statistical testing of software
Stevan Andjelkovic
=09
Dependent Types in Haskell
Stephanie Weirich
=09
=46rom idea to working product in 7 days
Philipp Maier
=09
In Search of Software Perfection
Xavier Leroy
=09
Expressive Linear Algebra in Haskell
Henning Thielemann
=09
Type-driven Development in Action
Edwin Brady
=09
Functional Design Patterns
Franz Thoma
=09
Liquidate your Assets
Niki Vazou
=09
Scala Type Classes
Alexey Novakov
=09
Types for Protocols
Peter Thiemann
=09
Creating maintainable mobile games in Haskell
Christina Zeller
=09
A Functional Reboot for Deep Learning
Conal Elliott



