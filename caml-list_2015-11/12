Return-Path: <francois.berenger@inria.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 794417FD1D
	for <caml-list@sympa.inria.fr>; Wed,  4 Nov 2015 18:39:54 +0100 (CET)
X-IronPort-AV: E=Sophos;i="5.20,244,1444687200"; 
   d="scan'208";a="152657903"
Received: from meleze.ens.fr (HELO [129.199.99.114]) ([129.199.99.114])
  by mail3-relais-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES128-SHA; 04 Nov 2015 18:39:54 +0100
To: OCaml List <caml-list@inria.fr>
From: Francois Berenger <francois.berenger@inria.fr>
Message-ID: <563A42E9.7010008@inria.fr>
Date: Wed, 4 Nov 2015 18:39:53 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
 Thunderbird/38.3.0
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit
Subject: [Caml-list] Do we have a B-tree implementation in ocaml?

Hello,

I am looking for even a simple implementation with at
least the following operations:

insert/add, remove, mem/contains and at_rank.

The at_rank is especially important since it is inefficient
to implement it using fold in a set like the ones from the stdlib.

Thanks a lot,
F.
