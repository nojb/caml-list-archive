Received: (from weis@localhost) by pauillac.inria.fr (8.6.10/8.6.6) id QAA28786 for caml-redistribution; Mon, 26 Aug 1996 16:14:57 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.6.10/8.6.6) with ESMTP id RAA09369 for <caml-list@pauillac.inria.fr>; Wed, 7 Aug 1996 17:59:42 +0200
Received: from ad.com.ar (saturno.ad.net.ar [200.5.72.5]) by concorde.inria.fr (8.7.1/8.7.1) with ESMTP id RAA07543 for <caml-list@pauillac.inria.fr>; Wed, 7 Aug 1996 17:59:30 +0200 (MET DST)
Received: from hulley.ad.net.ar (200.5.72.3) by ad.com.ar
 with SMTP (Apple Internet Mail Server 1.1); Wed, 7 Aug 1996 11:18:26 -0300
Message-ID: <n1372705568.48649@hulley.ad.net.ar>
Date: 6 Aug 1996 12:55:53 -0300
From: "Matias Giovannini" <mgiovann@script.org.ar>
Subject: Parseurs de precedence
To: "Caml-list" <caml-list@pauillac.inria.fr>
X-Mailer: Mail*Link SMTP-MS 3.0.2
Mime-Version: 1.0
Content-Type: text/plain; charset="ISO-8859-1"; Name="Message Body"
Content-Transfer-Encoding: quoted-printable
Sender: weis
Status: O


Bonjour,

est-ce qu'il y a aucune implementation de parseurs de precedence =
d'ordre superieur en Caml? Specifiquement, je pense a parseurs de =
precedence parametrises par le jeu d'operateurs (donne comme table de =
hachage, par example) munis de ses precedences. J'utilise Caml-light =
pour Mac, e je ne veux pas utiliser Caml-lex ou Caml-yacc, puisque je =
suis interese a l'algorithme.
Merci beaucoup,

Matias Giovannini
mgiovann@script.org.ar



Hello,
is there any implementation of higher-order parsers for precedence =
grammars in Caml? More specifically, I'm thinking of precedence =
parsers parameterized by the set of operators (for instance, given as =
a hash table) together with their precedence. I'm using Caml-light for =
Mac, and I'm not willing to use Caml-lex or Caml-yacc, I'm more =
interested in the algorithm than anything else.
Thank you,

Matias Giovannini
mgiovann@script.org.ar




