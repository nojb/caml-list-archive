Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 7B19CBB84
	for <caml-list@yquem.inria.fr>; Thu, 14 Aug 2008 02:08:01 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqUCAHoUo0jUnw4RjWdsb2JhbACCLI9HAQEBAQcHBgcTpQKBVQ
X-IronPort-AV: E=Sophos;i="4.32,204,1217800800"; 
   d="scan'208";a="16101532"
Received: from pih-relay04.plus.net ([212.159.14.17])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/AES256-SHA; 14 Aug 2008 02:08:01 +0200
Received: from [90.198.246.64] (helo=beast.local)
	 by pih-relay04.plus.net with esmtpa (Exim) id 1KTQNk-0005Ky-LN
	for caml-list@yquem.inria.fr; Thu, 14 Aug 2008 01:08:00 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Haskell vs OCaml
Date: Thu, 14 Aug 2008 01:09:03 +0100
User-Agent: KMail/1.9.9
References: <d5f6b0140808130548g2492a094v843ed15e1c83adae@mail.gmail.com>
In-Reply-To: <d5f6b0140808130548g2492a094v843ed15e1c83adae@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200808140109.03860.jon@ffconsultancy.com>
X-Plusnet-Relay: 9461c9a862e65431fa49d7cc5c3ff48f
X-Spam: no; 0.00; haskell:01 ocaml:01 ocaml:01 haskell:01 predictable:01 camlp:01 functors:01 variants:01 haskell's:01 haskell's:01 advocates:01 afaik:01 high-profile:98 fakes:98 frog:98 

On Wednesday 13 August 2008 13:48:45 circ ular wrote:
> What are the advantages/disadvantages when comparing OCaml to Haskell?

Techically, predictable performance, high performance on x64, tools like 
camlp4 and language features including records, functors, polymorphic 
variants and structurally-typed objects are probably the main advantages of 
OCaml over Haskell.

Non-technically, OCaml has more well-tested libraries, more practical books 
(e.g. my own), more high-profile open source projects (e.g. FFTW has millions 
of users):

http://ocamlnews.blogspot.com/2007/12/top-10-most-popular-ocaml-programs.html
http://haskell-news.blogspot.com/2008/01/top-10-most-popular-haskell-programs.html

and is much more widely used in industry. There are far more 
practically-minded people in the OCaml community and that is reflected in the 
much larger number of commercial products that use OCaml.

Tangentially, OCaml has a successful relative in F# whereas Haskell's close 
relatives are extinct.

I did extensive research on all of the most popular functional languages last 
year, including Haskell. In case you are trying to do something similar, I'll 
warn you that almost all of the examples of Haskell's use in industry are 
fakes, e.g. companies that have no products, companies that have one product 
that never used Haskell, companies that happen to have two Haskell advocates 
working for them out of 150 developers, companies where one employee once did 
a preliminary Haskell program but nothing since and, finally, plain old spam 
where companies that have never had anything to do with Haskell have hijacked 
the Haskell site to advertise on-line only to be hailed as a "real world" 
example of Haskell in industry by its proponents. I was rather baffled when I 
discovered this and have never seen behaviour like it.

Haskell also has some advantages over OCaml, of course, but you should 
probably ask the Haskell community to explain them. I consider them all to be 
untested because nobody has ever done anything significant using Haskell 
AFAIK.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

