Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA05416 for caml-redistribution; Thu, 14 Oct 1999 14:59:10 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA04492 for <caml-list@pauillac.inria.fr>; Wed, 13 Oct 1999 18:54:12 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id SAA23123;
	Wed, 13 Oct 1999 18:54:05 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA05848; Wed, 13 Oct 1999 18:54:05 +0200 (MET DST)
Message-ID: <19991013185405.16924@pauillac.inria.fr>
Date: Wed, 13 Oct 1999 18:54:05 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Steve Stevenson <steve@cs.clemson.edu>, caml-list@inria.fr
Subject: Re: Looking for an LL parser generator
References: <14339.37070.929433.189607@merlin.cs.clemson.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.89.1
In-Reply-To: <14339.37070.929433.189607@merlin.cs.clemson.edu>; from Steve Stevenson on Tue, Oct 12, 1999 at 03:50:45PM -0400
Sender: weis

> I would appreciate pointers to an LL parser generator. It's a little
> easier to think about my project as top down.

OCaml's stream parsers make it easy to write recursive-descent
parsers.  For more advanced facilities such as precendences and
automatic left-factoring of the rules, please have a look at Camlp4:
        http://caml.inria.fr/camlp4/

Hope this helps,

- Xavier Leroy



