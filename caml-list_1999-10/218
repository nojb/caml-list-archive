Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA28002 for caml-redistribution; Thu, 28 Oct 1999 19:10:47 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id GAA14211 for <caml-list@pauillac.inria.fr>; Wed, 27 Oct 1999 06:51:00 +0200 (MET DST)
Received: from mail.wa.freei.net (Mail.Wa.FreeI.Net [209.162.144.3])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id GAA05644
	for <caml-list@inria.fr>; Wed, 27 Oct 1999 06:50:58 +0200 (MET DST)
Received: from MEngelberg (dial247.b1.tnt4.wa.freei.net [209.162.154.247])
	by mail.wa.freei.net (Postfix) with SMTP id DEE0631B58
	for <caml-list@inria.fr>; Tue, 26 Oct 1999 21:50:47 -0700 (GMT+7)
Message-ID: <00c001bf2037$1ec6d320$03dedede@walldata.com>
From: "Mark Engelberg" <mark.engelberg@bigfoot.com>
To: <caml-list@inria.fr>
Subject: Vector class?
Date: Tue, 26 Oct 1999 21:52:48 -0700
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2314.1300
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2314.1300
Sender: weis

I recently discovered OCaml, and have been reading through the documentation.

Although I am familiar with many languages, I use C++ on a day-to-day basis, and have become quite attached to C++'s Standard
Template Library.  Considering the many limitations and annoyances of C++, I find STL to be an amazingly well thought out set of
collection classes and algorithms (of course, like everything else, there is room for improvement).

Whenever I look at a language for the first time, I now immediately check out the class library.  The quality of the built-in class
library is, in many respects, more important to me than the features of the language itself, because I simply don't have time to
reinvent the wheel.

I'm not quite sure yet what to think of OCaml's class library.  In particular, I was unable to find a Vector class (i.e., an
automatically resizable array).  Did I just miss it, or is it really not in there?

I'd also enjoy hearing other people's thoughts on the strengths and weaknesses of the OCaml class library.

Thanks,

Mark Engelberg




