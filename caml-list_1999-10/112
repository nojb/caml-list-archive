Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA10262 for caml-redistribution; Tue, 12 Oct 1999 16:24:41 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA03679 for <caml-list@pauillac.inria.fr>; Tue, 12 Oct 1999 15:21:41 +0200 (MET DST)
Received: from tobago.inria.fr (tobago.inria.fr [128.93.8.21])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id PAA11804
	for <caml-list@inria.fr>; Tue, 12 Oct 1999 15:21:39 +0200 (MET DST)
Received: (from doligez@localhost) by tobago.inria.fr (8.6.10/8.6.6) id PAA18541 for caml-list@inria.fr; Tue, 12 Oct 1999 15:21:39 +0200
Date: Tue, 12 Oct 1999 15:21:39 +0200
From: Damien Doligez <Damien.Doligez@inria.fr>
Message-Id: <199910121321.PAA18541@tobago.inria.fr>
To: caml-list@inria.fr
Subject: Re: speed versus C
Sender: weis

>From: skaller <skaller@maxtal.com.au>

>        However, C++ allows finalisation and ocaml doesn't,
>which is a serious problem in ocaml when it is needed.
>
>        I would very much like to see some discussion by ocaml experts
>(not me!) leading to a standard solution to this problem, probably

As far as I can tell, you've been asking for three things:

1. Efficient finalization, with finalization functions written in O'Caml.
2. Correct finalization of circular references.
3. Immediate finalization: as soon as a value becomes unreachable, the
   finalization function is called.

I don't know how to get all three together.  It is likely that we'll
have 1 and 2 in a future release of O'Caml.

-- Damien



