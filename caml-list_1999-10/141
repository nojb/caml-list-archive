Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA17000 for caml-redistribution; Thu, 14 Oct 1999 15:01:00 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA00448 for <caml-list@pauillac.inria.fr>; Wed, 13 Oct 1999 21:16:31 +0200 (MET DST)
Received: from sunstroke.informatik.uni-tuebingen.de (sunstroke.Informatik.Uni-Tuebingen.De [134.2.11.25])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id VAA03215
	for <caml-list@inria.fr>; Wed, 13 Oct 1999 21:16:28 +0200 (MET DST)
Received: (from pfitzen@localhost)
	by sunstroke.informatik.uni-tuebingen.de (8.9.1a/8.9.1) id VAA16145
	for caml-list@inria.fr; Wed, 13 Oct 1999 21:16:27 +0200 (MET DST)
Date: Wed, 13 Oct 1999 21:16:27 +0200 (MET DST)
From: Juergen Pfitzenmaier <pfitzen@informatik.uni-tuebingen.de>
Message-Id: <199910131916.VAA16145@sunstroke.informatik.uni-tuebingen.de>
To: caml-list@inria.fr
Subject: Re: Can someone explain?
Sender: weis

Lyn A Headley wrote:
> An ocaml "port" of STL would kick ass.  especially, think how well
> iterators would combine with closures!  The C++ notion of "function
> objects" and "adaptors" looks clumsy in comparison (e.g. you cannot
> create a localized class object)

Hmm, don't know if it would be the same nice thing as in C++. A year ago
I added a GC to the STL containers so there's some experience of what
can happen if you try this in ocaml.
Some algorithms using the STL are built around the fact that certain iterators
and the value they refer to don't change if you treat the container ``nicely''.
To keep these algos working was quite some pain.
Haven't really thought about what happens if the GC is a real member of the
language and not just an add-on. May be things are easier then but I wouldn't
bet on it.
ciao pfitzen



