Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA32286 for caml-redistribution; Sat, 9 Oct 1999 23:16:29 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA28891 for <caml-list@pauillac.inria.fr>; Fri, 8 Oct 1999 18:45:06 +0200 (MET DST)
Received: from ruby (pm1-25.triode.net.au [203.63.235.41])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id SAA14195
	for <caml-list@inria.fr>; Fri, 8 Oct 1999 18:45:02 +0200 (MET DST)
Received: from maxtal.com.au (IDENT:root@localhost [127.0.0.1])
	by ruby (8.9.3/8.9.3) with ESMTP id CAA07223
	for <caml-list@inria.fr>; Sat, 9 Oct 1999 02:38:56 +1000
Sender: weis
Message-ID: <37FE1E1F.4790FE85@maxtal.com.au>
Date: Sat, 09 Oct 1999 02:38:55 +1000
From: skaller <skaller@maxtal.com.au>
Organization: Maxtal P/L
X-Mailer: Mozilla 4.51 [en] (X11; I; Linux 2.2.12 i586)
X-Accept-Language: en
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Proposal for study: Add a categorical Initial type to ocaml
References: <Pine.LNX.4.10.9910060925320.18180-100000@mojave.cs.cornell.edu> <37FC6572.719AD12D@tsc.uc3m.es>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

I would like to propose adding a new special type to ocaml,
a categorical initial type. This type is the categorical dual
of the categorical terminal type, unit. 

There proposal is for a syntactic designator (say '$') for the
non-existant value of the initial type, which can
be bound to a variable of any type.
[You could say it has type 'a, as does 'raise SomeException']

The effect of attempting to read this value from any type
should be to raise the exception Uninitialised_value.

Example:

	type A = { data: t }
	let x = { data = $ }
	in x.data (* raises exception *)

	type B = {mutable data: t }
	let y = { data = $ }
	in if something x.data <- t_value; 
	x.data (* raise exception if not something *)

The use of initial is something like a Haskell monad
with all types T changed to T option, and all 
read acesses changed to 

	match t with
	| Some t' -> t'
	| None -> raise Uninitialised_value

A better name than $ is probably 'none'.
Boxed values can use a null pointer for none.
Integers and floats can be treated as follows:
do not initialise them at all, if -unsafe is 
specified. Otherwise, use the spare value of integers
and some NaN for floats, and insert tests
for all read accesses.

Chars can be handled too, but it is probably not worth the
effort until they are lifted to ISO10646, which has
suitable code points available. [We could use 0xFF for
8 bit chars]

-- 
John Skaller, mailto:skaller@maxtal.com.au
1/10 Toxteth Rd Glebe NSW 2037 Australia
homepage: http://www.maxtal.com.au/~skaller
downloads: http://www.triode.net.au/~skaller



