Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id BAA01720 for caml-redistribution; Sun, 10 Oct 1999 01:54:08 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA32621 for <caml-list@pauillac.inria.fr>; Sat, 9 Oct 1999 23:15:36 +0200 (MET DST)
Received: from sarg.Ryerson.CA (sarg.Ryerson.CA [141.117.18.117])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id XAA07112
	for <caml-list@inria.fr>; Sat, 9 Oct 1999 23:15:35 +0200 (MET DST)
Received: from sarg.Ryerson.CA (dmason@localhost [127.0.0.1])
	by sarg.Ryerson.CA (8.8.7/8.8.7) with ESMTP id RAA31681
	for <caml-list@inria.fr>; Sat, 9 Oct 1999 17:14:09 -0400
Message-Id: <199910092114.RAA31681@sarg.Ryerson.CA>
To: OCAML <caml-list@inria.fr>
Subject: Re: Stdlib regularity 
In-reply-to: Your message of "Sat, 09 Oct 1999 00:10:48 +1000."
             <37FDFB68.880BA7E@maxtal.com.au> 
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
Date: Sat, 09 Oct 1999 17:14:09 -0400
From: Dave Mason <dmason@sarg.Ryerson.CA>
Sender: weis

>>>>> On Sat, 09 Oct 1999 00:10:48 +1000, skaller <skaller@maxtal.com.au> said:

> Markus Mottl wrote:
>> What do you think about this proposal: why not put a version of the
>> standard library on the CVS-server of INRIA, where volunteers can
>> contribute extensions, replacements, new modules, etc.?

> I think this is a good idea, but I think that implementing
> extensions and new modules is relatively easy (in most cases) but
> deciding on the best interfaces is not.

> Even the best library designer cannot make decision without user
> feedback. As a member of two ISO Working Groups, my experience is
> that there is something to be said for proposing changes in a
> slightly formal manner, followed by discussion of the proposal.

For another take on this, see the SRFI process that has been in use
for the last year in the Scheme community.  http://srfi.schemers.org/

Things are a bit different in caml since there is really only one
implementation organization (although I guess there is ocaml and
caml).

../Dave



