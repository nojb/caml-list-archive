Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA18284 for caml-redistribution; Wed, 13 Oct 1999 08:56:20 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA19891 for <caml-list@pauillac.inria.fr>; Tue, 12 Oct 1999 17:33:30 +0200 (MET DST)
Received: from tobago.inria.fr (tobago.inria.fr [128.93.8.21])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id RAA16693
	for <caml-list@inria.fr>; Tue, 12 Oct 1999 17:33:28 +0200 (MET DST)
Received: (from doligez@localhost) by tobago.inria.fr (8.6.10/8.6.6) id RAA19966 for caml-list@inria.fr; Tue, 12 Oct 1999 17:33:27 +0200
Date: Tue, 12 Oct 1999 17:33:27 +0200
From: Damien Doligez <Damien.Doligez@inria.fr>
Message-Id: <199910121533.RAA19966@tobago.inria.fr>
To: caml-list@inria.fr
Subject: Re:  Proposal for study: Add a categorical Initial type to ocaml
Sender: weis

>From: skaller <skaller@maxtal.com.au>

>There proposal is for a syntactic designator (say '$') for the
>non-existant value of the initial type, which can
>be bound to a variable of any type.
>[You could say it has type 'a, as does 'raise SomeException']
>
>The effect of attempting to read this value from any type
>should be to raise the exception Uninitialised_value.

You could try to use "lazy (raise Uninitialised_value)", of type
'a lazy, with the advantage that the notion of "reading this value"
becomes clearly defined (it is using "force" on the value).


>A better name than $ is probably 'none'.
>Boxed values can use a null pointer for none.

OK.


>Integers and floats can be treated as follows:
>do not initialise them at all, if -unsafe is 
>specified. Otherwise, use the spare value of integers

What spare value ?


>and some NaN for floats,

This may or may not be possible, depending on the details of the IEEE
specification.


>Chars can be handled too, but it is probably not worth the
>effort until they are lifted to ISO10646, which has
>suitable code points available. [We could use 0xFF for
>8 bit chars]

No.  0xFF is already used, as well as the other 255 values.


-- Damien



