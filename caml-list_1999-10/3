Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA01200 for caml-redistribution; Sat, 2 Oct 1999 19:51:47 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA15563 for <caml-list@pauillac.inria.fr>; Fri, 1 Oct 1999 15:01:31 +0200 (MET DST)
Received: from lux1.wu-wien.ac.at (lux1.wu-wien.ac.at [137.208.51.81])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id PAA13220
	for <caml-list@inria.fr>; Fri, 1 Oct 1999 15:01:29 +0200 (MET DST)
Received: from lux1.wu-wien.ac.at (IDENT:bruhn@lux1.wu-wien.ac.at [137.208.51.81])
	by lux1.wu-wien.ac.at (8.9.0/8.9.0) with ESMTP id PAA16562
	for <caml-list@inria.fr>; Fri, 1 Oct 1999 15:01:28 +0200
Date: Fri, 1 Oct 1999 15:01:28 +0200 (CEST)
From: Peter Bruhn <bruhn@isis.wu-wien.ac.at>
To: caml-list@inria.fr
Subject: Newbies question
Message-ID: <Pine.LNX.4.05.9910011500140.16555-100000@lux1.wu-wien.ac.at>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: weis

The following function does not compile, since the compiler thinks it has
the wrong return type: 

    let read_res file : ('a * 'b) list =
      let final_result = ref [] in
      let fd = open_in file in
      try 
        let lexbuf = Lexing.from_channel fd in
        while true do
          let result = Parseres.main Lexres.token lexbuf in
          final_result := result :: !final_result 
        done  (* <---- nothing returned here, but we cannot get here anyway
                       the loop is exited by an exception only *) 
      with             
        Lexres.Eof ->  
          close_in fd; !final_result (* !final_result is of type ('a * 'b) list *)
      | Parsing.Parse_error ->          
          close_in fd; printf "ERROR: Ressourcen Datei fehlerhaft\n"; exit (-1);
          
But when I use an empty list after the endless-loop, it works alright. Do I
really have to fake the compiler? Or am I doing something wrong? This works:

    let read_res file : ('a * 'b) list =
      let final_result = ref [] in
      let fd = open_in file in
      try 
        let lexbuf = Lexing.from_channel fd in
        while true do
          let result = Parseres.main Lexres.token lexbuf in
          final_result := result :: !final_result 
        done; [] (* <---------- EMPTY LIST INSERTED HERE *)
      with 
        Lexres.Eof ->
          close_in fd; !final_result
      | Parsing.Parse_error ->
          close_in fd; printf "ERROR: Ressourcen Datei fehlerhaft\n"; exit (-1);
          
Thanks for any comments, hints, flames, ...
Peter
-------------------
bruhn@wu-wien.ac.at



