Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA09183 for caml-redistribution; Tue, 12 Oct 1999 15:38:12 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA31240 for <caml-list@pauillac.inria.fr>; Mon, 11 Oct 1999 19:58:59 +0200 (MET DST)
Received: from postbox.dai.ed.ac.uk (postbox.dai.ed.ac.uk [129.215.41.196])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id TAA26692
	for <caml-list@inria.fr>; Mon, 11 Oct 1999 19:58:58 +0200 (MET DST)
Received: from insch (insch.dai.ed.ac.uk [129.215.41.233])
	by postbox.dai.ed.ac.uk (8.9.3/8.9.3) with SMTP id SAA24359;
	Mon, 11 Oct 1999 18:58:55 +0100 (BST)
Date: Mon, 11 Oct 1999 18:58:53 +0100
Message-Id: <26571.199910111758@insch>
From: William Chesters <williamc@dai.ed.ac.uk>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
To: caml-list@inria.fr
Subject: Re: speed versus C
In-Reply-To: <Pine.GSO.4.04.9910110147410.13909-100000@clipper>
References: <24949.199910102048@buckie>
	<Pine.GSO.4.04.9910110147410.13909-100000@clipper>
X-Mailer: VM 6.22 under Emacs 19.34.1
Sender: weis

Alain Frisch writes:
 > Do you think it would be easy to design processors with built-in support
 > for boxed values, GC tags, OO, etc ... that is, a concrete OCaml machine ?

This was tried in the 80s on quite a large scale by Symbolics, with
the Lisp machine (to which you will find 1000s of references on the
net).  It implemented some of the Lisp runtime, which is pretty
similar in conception to the ocaml runtime, in hardware.  It was all
very nicely done, and apparently the machines and OS were pretty
wonderful in many ways.  Enough examples were sold to upmarket
(e.g. AIish) firms and labs over a period of years to make it into a
bit of legend.

But of course they ran into a problem: the big firms spend billions on
developing sophisticated classical chips with incredibly large numbers
of transistors, to serve their vast market.  So the cost of fixing
your software performance hit just by buying a faster, but entirely
standard, computer is simply not big enough to support the development
of a whole different architecture.

Maybe things have matured and opened up now to the point where one
could take a readily available SPARC or StrongARM core and tack some
GC support onto it, I don't know.  Certainly Sun are hyping their MAJC
Java chip pretty strongly.



