Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA29821 for caml-redistribution; Tue, 19 Oct 1999 23:47:32 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA15850 for <caml-list@pauillac.inria.fr>; Tue, 19 Oct 1999 22:15:23 +0200 (MET DST)
Received: from miss.wu-wien.ac.at (miss.wu-wien.ac.at [137.208.107.17])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id WAA07768
	for <caml-list@inria.fr>; Tue, 19 Oct 1999 22:15:23 +0200 (MET DST)
Received: (from mottl@localhost)
	by miss.wu-wien.ac.at (8.9.0/8.9.0) id WAA17589
	for caml-list@inria.fr; Tue, 19 Oct 1999 22:15:21 +0200 (MET DST)
From: Markus Mottl <mottl@miss.wu-wien.ac.at>
Message-Id: <199910192015.WAA17589@miss.wu-wien.ac.at>
Subject: Interpreter using State Monad
To: caml-list@inria.fr (OCAML)
Date: Tue, 19 Oct 1999 22:15:21 +0100 (MET DST)
X-Mailer: ELM [version 2.4 PL21]
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
Sender: weis

Hello,

if you ever wanted to know, whether it is of any use (is it?) to implement
an interpreter of an imperative language in monadic style in OCaml, you
might want to take a look at the toy implementation of the semantics of
"IMP", which comes in two versions: monadic style and using explicit
passing of state.

  -> http://miss.wu-wien.ac.at/~mottl/ocaml_sources/intro.html

The monadic style version will probably only please the purists among
you... ;-)

Regards,
Markus Mottl

-- 
Markus Mottl, mottl@miss.wu-wien.ac.at, http://miss.wu-wien.ac.at/~mottl



