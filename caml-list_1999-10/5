Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA26335 for caml-redistribution; Sat, 2 Oct 1999 19:50:31 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA02274 for <caml-list@pauillac.inria.fr>; Fri, 1 Oct 1999 11:26:50 +0200 (MET DST)
Received: from parasite.irisa.fr (parasite.irisa.fr [131.254.12.47])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id LAA09183
	for <caml-list@inria.fr>; Fri, 1 Oct 1999 11:26:49 +0200 (MET DST)
Received: from parate.irisa.fr (parate.irisa.fr [131.254.12.25])
	by parasite.irisa.fr (8.9.3/8.9.3) with ESMTP id LAA20283;
	Fri, 1 Oct 1999 11:26:49 +0200 (MET DST)
Sender: weis
To: "=?iso-8859-1?q?Stéphane?= Baubillier" <stephane.baubillier@pactenovation.fr>
Cc: "CAML Mailing list" <caml-list@inria.fr>
Subject: Re: A propos de monad/About monads
References: <002201bf0b60$36fbc9a0$490ad227@aladin>
From: "David Mentr'e" <David.Mentre@irisa.fr>
Date: 01 Oct 1999 11:26:48 +0200
In-Reply-To: "=?iso-8859-1?q?Stéphane?= Baubillier"'s message of "Thu, 30 Sep 1999 18:24:03 +0200"
Message-ID: <wd8n1u3v3c7.fsf@parate.irisa.fr>
Lines: 53
User-Agent: Gnus/5.070097 (Pterodactyl Gnus v0.97) Emacs/20.4
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit

[ English (executive summary ;) ]

Monads are a way to encapsulate side-effects in functionnal
languages. Does anyboody have a more detailed explaination about how
monads really work ? What is the difference between the usual let and
the monad binding ?

[ Français ]
"Stéphane Baubillier" <stephane.baubillier@pactenovation.fr> writes:

> Quelqu'un aurait-il une traduction de 'monad'

? monade ? (c'est au moins dans le dico)

> et des info sur les causes (et raisons) de son existance.

C'est un mécansime pour encapsuler les effets de bord dans un formalisme
fonctionnel. Pour résumer très grossièrement, une fonction ne doit
dépendre que de ses entrées. Donc pour que les effets de bord puissent
être pris en compte, on passe en argument de la fonction un « monde »,
qu'elle rend modifié. Ce monde comprend le résultat de la fonction, plus
tous les effets de bords potentiels (exception, ...). 

Donc les monades sont un type abstrait de donné. De plus, ce type
abstrait doit avoir certaines caractéristiques : un opérateur de liage
(/binding/) et un élément neutre (/unit/) et des lois sur la composition
de ces éléments. Il se trouve que ces lois correspondent aux
caractéristiques des monades en mathématiques, d'où le nom.

Un dernier point, il semble que l'opérateur de liage/binding permet de
séquentialiser les opérations. D'où maintenant ma question : quelle est
la différence entre un binding de monade et un let plus classique ?


Quelques articles de référence sur les monades :

http://cm.bell-labs.com/cm/cs/who/wadler/topics/monads.html

Philip Wadler semble un des gourous du domaine. Il a notamment
popularisé son usage dans Haskell (cf. haskell.org pour plus d'infos sur
ce langage).

Mon explication est très sommaire. Je n'ai jamais réussi à réellement
bien comprendre quelle était la caractéristique exacte, précise, des
monades. Quelqu'un possède-t-il une explication plus détaillée sur le
comment et le pourquoi (notamment lien et différence entre let classique
et binding de monade)?

Amicalement,
d.
-- 
 David.Mentre@irisa.fr -- http://www.irisa.fr/prive/dmentre/
 Opinions expressed here are only mine.



