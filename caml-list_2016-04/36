Return-Path: <agarwal1975@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id C130E7EE78
	for <caml-list@sympa.inria.fr>; Tue, 12 Apr 2016 15:15:58 +0200 (CEST)
IronPort-PHdr: 9a23:LG8H9x150ZTs45XHsmDT+DRfVm0co7zxezQtwd8ZsegeI/ad9pjvdHbS+e9qxAeQG96Lu7QZ0qGK7OjJYi8p39WoiDg6aptCVhsI2409vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6kO74TNaIBjjLw09fr2zQd6CyZnunLzts7ToICx2xxOFKYtoKxu3qQiD/uI3uqBFbpgL9x3Sv3FTcP5Xz247bXianhL7+9vitMU7q3cYjck87NZNWrnWeKExTLoQTGh3cjN92Mq+nhnZTBCT4WMcZUWInRdSS1zO7Av7RYv2qiu8tu1w1ySAFdHrCLo5QzCj6eFnRUm7pj0AMmsQ62HWkcw4pa1Sug2oo1QryoHdep6cMKMvIf71ctYTRG4HVcFUAX8SSrigZpcCWrJSdd1TqJPw8gdfoA==
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=agarwal1975@gmail.com; spf=Pass smtp.mailfrom=agarwal1975@gmail.com; spf=None smtp.helo=postmaster@mail-qg0-f41.google.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  agarwal1975@gmail.com) identity=pra; client-ip=209.85.192.41;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="agarwal1975@gmail.com";
  x-sender="agarwal1975@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  agarwal1975@gmail.com designates 209.85.192.41 as permitted
  sender) identity=mailfrom; client-ip=209.85.192.41;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="agarwal1975@gmail.com";
  x-sender="agarwal1975@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qg0-f41.google.com) identity=helo;
  client-ip=209.85.192.41;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="agarwal1975@gmail.com";
  x-sender="postmaster@mail-qg0-f41.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0CQAADI9AxXiynAVdFeg1U1fQaoNYFRhV2DS4JAhHMBDYF0IYVsAoEqBzgUAQEBAQEBAQERAQEBCAsLCR8xgi2CFQEBBBIRHQEbEgsBAwwGAwILDQ0dAgIiAREBBQEKEgYTEhCHbwEDEg6RJ49BgTE+MYs2gWqCV4dtChknAwpRhE4BAQEBAQEBAwEBAQEBAQETAQUKBYpdhGyCU4JWAQSGMQyRQggBgSGEVogWgjWMW41qER6BDg8PAQGCOR6BbiAwigUBAQE
X-IPAS-Result: A0CQAADI9AxXiynAVdFeg1U1fQaoNYFRhV2DS4JAhHMBDYF0IYVsAoEqBzgUAQEBAQEBAQERAQEBCAsLCR8xgi2CFQEBBBIRHQEbEgsBAwwGAwILDQ0dAgIiAREBBQEKEgYTEhCHbwEDEg6RJ49BgTE+MYs2gWqCV4dtChknAwpRhE4BAQEBAQEBAwEBAQEBAQETAQUKBYpdhGyCU4JWAQSGMQyRQggBgSGEVogWgjWMW41qER6BDg8PAQGCOR6BbiAwigUBAQE
X-IronPort-AV: E=Sophos;i="5.24,474,1454972400"; 
   d="scan'208,217";a="213670248"
Received: from mail-qg0-f41.google.com ([209.85.192.41])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 12 Apr 2016 15:15:55 +0200
Received: by mail-qg0-f41.google.com with SMTP id f52so14940337qga.3
        for <caml-list@inria.fr>; Tue, 12 Apr 2016 06:15:55 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=eq7RUnxnjcyO48zzrX8VqQ8V8e+GRu/4qUHOnMtmUMU=;
        b=lSDp7u/UpSFEeLX6/ZkGuKjVnPE1v+frcD4wAgUTx5JNUL8TOB+KubdWE8yoBTNptn
         ou7AaPDd/+7XHidu7AThhmb+KeppU3swAqx5tL1z9g8Pi+5EtIWeH3DE2xpcshts7hjr
         ZVJM4D44gbyPeVmkIuZi3fnDu1oF2gPtkK7DMD0mUs4zDdX4VQ9rF1o5AY/a64780yzJ
         ZSynU5loqroySz4hg8p5s+5crHqJ2ffHzmrAYZkvHuODgt7b+k4H4CjqUQIazDMRssiA
         P0aw9WTLMo891qAHa06km4aA4vZazbzBbVHnt2Y/DkW+ofdqNucKRpXJEPyt6AN9qVF4
         uCfg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc;
        bh=eq7RUnxnjcyO48zzrX8VqQ8V8e+GRu/4qUHOnMtmUMU=;
        b=JdKgoF4zTheamwLPHLYZBhvZgNPegOO0UW519oLwzwJgqEXMQYL3BCurLqcZRh7y7X
         seVE+esSPjINMQXfUOry+anAp0OYS1oaLmEFmWQsmp4Dr85sn2z+kMlon6m+2jFE7w2q
         sSsg/ywnftcMFXs3My+oXen8SsaPMnNn8GQKoKMH+xzNa7X3aNTv0CcQHkol9odi57cr
         0zbNMqPYGrsZE3OOJ64gr2nX6Vum6a3eZe7O8DoNIh+a0wW5YFge8KPfNvCmeaKUXmTI
         +hD488NojguTqHqkrKBVuhKZgGQusHKaGnTm7t33liDVONfb3ANCDluLfLm37LBHrFwe
         8tSw==
X-Gm-Message-State: AOPr4FWyUE/LZLWY8d1Ul15zNZC/X52LcvtC22YJWBlzE8rgvhQWqymslxkeYhXrUrsUPoNgcz7+8+8XvIlf2g==
X-Received: by 10.140.179.15 with SMTP id z15mr3863563qhz.79.1460466953262;
 Tue, 12 Apr 2016 06:15:53 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.55.158.20 with HTTP; Tue, 12 Apr 2016 06:15:33 -0700 (PDT)
In-Reply-To: <570CF14F.3080801@tu-berlin.de>
References: <570CE35A.4090709@tu-berlin.de> <CAPFanBHDLeGbyY1b8eUz1r5u+C0nrmUpu7MW9rx_fhqi5-gP+g@mail.gmail.com>
 <570CF14F.3080801@tu-berlin.de>
From: Ashish Agarwal <agarwal1975@gmail.com>
Date: Tue, 12 Apr 2016 09:15:33 -0400
Message-ID: <CAMu2m2+vedKoBsUZQF06F3QyFVxXjX4auLSZu=o21=NsXL0-jA@mail.gmail.com>
To: =?UTF-8?Q?Christoph_H=C3=B6ger?= <christoph.hoeger@tu-berlin.de>
Cc: caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a113aab0ef49ae00530497598
Subject: Re: [Caml-list] glob-ing dependencies for a custom ocamlbuild rule

--001a113aab0ef49ae00530497598
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

On Tue, Apr 12, 2016 at 8:59 AM, Christoph H=C3=B6ger <
christoph.hoeger@tu-berlin.de> wrote:

_all_ source files in <dir>


I think that is Gabriel's point. The definition of _all_ depends on when
you think this pattern will be evaluated.


It would be a major PITA to add all these files manually...
>

Not really. The nice thing about ocamlbuild is that you can write arbitrary
OCaml code, so just compute deps by traversing the directory yourself.




Am 12.04.2016 um 14:48 schrieb Gabriel Scherer:
> > Ocamlbuild distinguishes "static dependencies", which are expressed in
> > the ~deps argument of the rule declaration, and "dynamic dependencies"
> > which are files required by the rule command.
> >
> > The notion of pattern accepted for static dependencies is indeed
> > rather rigid (less expressive than the patterns used in the _tags
> > file), and what you have in mind does not work. The supported patterns
> > are deterministic: given one file, there is a unique way a pattern can
> > match, and a pattern is instantiated into a single file by any
> > substitution environment. There is a good reason for that: it is not
> > clear what the semantics of your proposal would be. Indeed, ocamlbuild
> > tries to recursively build all static dependencies before deciding to
> > apply a rule, but what does it mean to build all **/*.mo? Listing the
> > one that exist in the source directory is easy, but how would you
> > guess which one to try to build recursively using other rules?
> >
> > Notions such as "all files matching P in this directory" are not
> > stable to the replacement of a source file by an intermediate target:
> > for example if tomorrow you decide that one of the .mo file will be
> > itself pre-processed from a .mo.pp file, it won't be seen by a
> > existing-file globbing technique anymore. You have a lot of
> > flexibility in the behaviors you implement in the build command, so
> > you can easily do the matching there and "build" those files, but it
> > will result in a relatively fragile rule; this is you decision to
> > make, and not in the path of least resistance.
> >
> >
> > On Tue, Apr 12, 2016 at 8:00 AM, Christoph H=C3=B6ger
> > <christoph.hoeger@tu-berlin.de> wrote:
> >> Dear all,
> >>
> >> I want to write a custom ocamlbuild rule that basically combines all
> >> source files from a given (sub-)directory and thus depends on these
> files.
> >>
> >> However, the following does not work:
> >>
> >>         rule "normalize (preprocess) a Modelica library"
> >>           ~prods:["%.modlib.impl"; "%.modlib.sign"]
> >>           ~deps:["%.modlib/**/*.mo"; "%.modlib.depends"]
> >>           ~doc:"Preprocesses a Modelica library"
> >>           modlibc_command
> >>
> >> It seems that the rule does not expand the pattern in the dependency. =
Is
> >> there a way to achieve something similar? It would be a major PITA to
> >> add all these files manually...
> >>
> >> regards,
> >>
> >> Christoph
> >> --
> >> Christoph H=C3=B6ger
> >>
> >> Technische Universit=C3=A4t Berlin
> >> Fakult=C3=A4t IV - Elektrotechnik und Informatik
> >> =C3=9Cbersetzerbau und Programmiersprachen
> >>
> >> Sekr. TEL12-2, Ernst-Reuter-Platz 7, 10587 Berlin
> >>
> >> Tel.: +49 (30) 314-24890
> >> E-Mail: christoph.hoeger@tu-berlin.de
> >>
> >> --
> >> Caml-list mailing list.  Subscription management and archives:
> >> https://sympa.inria.fr/sympa/arc/caml-list
> >> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> >> Bug reports: http://caml.inria.fr/bin/caml-bugs
> >
>
>
> --
> Christoph H=C3=B6ger
>
> Technische Universit=C3=A4t Berlin
> Fakult=C3=A4t IV - Elektrotechnik und Informatik
> =C3=9Cbersetzerbau und Programmiersprachen
>
> Sekr. TEL12-2, Ernst-Reuter-Platz 7, 10587 Berlin
>
> Tel.: +49 (30) 314-24890
> E-Mail: christoph.hoeger@tu-berlin.de
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>

--001a113aab0ef49ae00530497598
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_extra"><div class=3D"gmail_quote">On T=
ue, Apr 12, 2016 at 8:59 AM, Christoph H=C3=B6ger <span dir=3D"ltr">&lt;<a =
href=3D"mailto:christoph.hoeger@tu-berlin.de" target=3D"_blank">christoph.h=
oeger@tu-berlin.de</a>&gt;</span> wrote:<br><div><br></div><blockquote clas=
s=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px;b=
order-left-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex"=
>_all_ source files in &lt;dir&gt;</blockquote><div><br></div><div>I think =
that is Gabriel&#39;s point. The definition of _all_ depends on when you th=
ink this pattern will be evaluated.</div><div><br></div><div><div><br></div=
><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border=
-left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;=
padding-left:1ex">It would be a major PITA to=C2=A0add all these files manu=
ally...<br></blockquote><div><br></div><div>Not really. The nice thing abou=
t ocamlbuild is that you can write arbitrary OCaml code, so just compute de=
ps by traversing the directory yourself.</div></div><div><br></div><div><br=
></div><div><br></div><div><br></div><blockquote class=3D"gmail_quote" styl=
e=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px;border-left-color:rgb(2=
04,204,204);border-left-style:solid;padding-left:1ex"><div class=3D""><div =
class=3D"h5">Am 12.04.2016 um 14:48 schrieb Gabriel Scherer:<br>
&gt; Ocamlbuild distinguishes &quot;static dependencies&quot;, which are ex=
pressed in<br>
&gt; the ~deps argument of the rule declaration, and &quot;dynamic dependen=
cies&quot;<br>
&gt; which are files required by the rule command.<br>
&gt;<br>
&gt; The notion of pattern accepted for static dependencies is indeed<br>
&gt; rather rigid (less expressive than the patterns used in the _tags<br>
&gt; file), and what you have in mind does not work. The supported patterns=
<br>
&gt; are deterministic: given one file, there is a unique way a pattern can=
<br>
&gt; match, and a pattern is instantiated into a single file by any<br>
&gt; substitution environment. There is a good reason for that: it is not<b=
r>
&gt; clear what the semantics of your proposal would be. Indeed, ocamlbuild=
<br>
&gt; tries to recursively build all static dependencies before deciding to<=
br>
&gt; apply a rule, but what does it mean to build all **/*.mo? Listing the<=
br>
&gt; one that exist in the source directory is easy, but how would you<br>
&gt; guess which one to try to build recursively using other rules?<br>
&gt;<br>
&gt; Notions such as &quot;all files matching P in this directory&quot; are=
 not<br>
&gt; stable to the replacement of a source file by an intermediate target:<=
br>
&gt; for example if tomorrow you decide that one of the .mo file will be<br>
&gt; itself pre-processed from a .mo.pp file, it won&#39;t be seen by a<br>
&gt; existing-file globbing technique anymore. You have a lot of<br>
&gt; flexibility in the behaviors you implement in the build command, so<br>
&gt; you can easily do the matching there and &quot;build&quot; those files=
, but it<br>
&gt; will result in a relatively fragile rule; this is you decision to<br>
&gt; make, and not in the path of least resistance.<br>
&gt;<br>
&gt;<br>
&gt; On Tue, Apr 12, 2016 at 8:00 AM, Christoph H=C3=B6ger<br>
&gt; &lt;<a href=3D"mailto:christoph.hoeger@tu-berlin.de">christoph.hoeger@=
tu-berlin.de</a>&gt; wrote:<br>
&gt;&gt; Dear all,<br>
&gt;&gt;<br>
&gt;&gt; I want to write a custom ocamlbuild rule that basically combines a=
ll<br>
&gt;&gt; source files from a given (sub-)directory and thus depends on thes=
e files.<br>
&gt;&gt;<br>
&gt;&gt; However, the following does not work:<br>
&gt;&gt;<br>
&gt;&gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0rule &quot;normalize (preprocess)=
 a Modelica library&quot;<br>
&gt;&gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0~prods:[&quot;%.modlib.imp=
l&quot;; &quot;%.modlib.sign&quot;]<br>
&gt;&gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0~deps:[&quot;%.modlib/**/*=
.mo&quot;; &quot;%.modlib.depends&quot;]<br>
&gt;&gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0~doc:&quot;Preprocesses a =
Modelica library&quot;<br>
&gt;&gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0modlibc_command<br>
&gt;&gt;<br>
&gt;&gt; It seems that the rule does not expand the pattern in the dependen=
cy. Is<br>
&gt;&gt; there a way to achieve something similar? It would be a major PITA=
 to<br>
&gt;&gt; add all these files manually...<br>
&gt;&gt;<br>
&gt;&gt; regards,<br>
&gt;&gt;<br>
&gt;&gt; Christoph<br>
&gt;&gt; --<br>
&gt;&gt; Christoph H=C3=B6ger<br>
&gt;&gt;<br>
&gt;&gt; Technische Universit=C3=A4t Berlin<br>
&gt;&gt; Fakult=C3=A4t IV - Elektrotechnik und Informatik<br>
&gt;&gt; =C3=9Cbersetzerbau und Programmiersprachen<br>
&gt;&gt;<br>
&gt;&gt; Sekr. TEL12-2, Ernst-Reuter-Platz 7, 10587 Berlin<br>
&gt;&gt;<br>
&gt;&gt; Tel.: <a href=3D"tel:%2B49%20%2830%29%20314-24890" value=3D"+49303=
1424890">+49 (30) 314-24890</a><br>
&gt;&gt; E-Mail: <a href=3D"mailto:christoph.hoeger@tu-berlin.de">christoph=
.hoeger@tu-berlin.de</a><br>
&gt;&gt;<br>
&gt;&gt; --<br>
&gt;&gt; Caml-list mailing list.=C2=A0 Subscription management and archives=
:<br>
&gt;&gt; <a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" rel=3D"nore=
ferrer" target=3D"_blank">https://sympa.inria.fr/sympa/arc/caml-list</a><br>
&gt;&gt; Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocam=
l_beginners" rel=3D"noreferrer" target=3D"_blank">http://groups.yahoo.com/g=
roup/ocaml_beginners</a><br>
&gt;&gt; Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" rel=3D=
"noreferrer" target=3D"_blank">http://caml.inria.fr/bin/caml-bugs</a><br>
&gt;<br>
<br>
<br>
--<br>
Christoph H=C3=B6ger<br>
<br>
Technische Universit=C3=A4t Berlin<br>
Fakult=C3=A4t IV - Elektrotechnik und Informatik<br>
=C3=9Cbersetzerbau und Programmiersprachen<br>
<br>
Sekr. TEL12-2, Ernst-Reuter-Platz 7, 10587 Berlin<br>
<br>
Tel.: <a href=3D"tel:%2B49%20%2830%29%20314-24890" value=3D"+493031424890">=
+49 (30) 314-24890</a><br>
E-Mail: <a href=3D"mailto:christoph.hoeger@tu-berlin.de">christoph.hoeger@t=
u-berlin.de</a><br>
<br>
--<br>
Caml-list mailing list.=C2=A0 Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" rel=3D"noreferrer" t=
arget=3D"_blank">https://sympa.inria.fr/sympa/arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" rel=3D"noreferrer" target=3D"_blank">http://groups.yahoo.com/group/ocam=
l_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" rel=3D"noreferr=
er" target=3D"_blank">http://caml.inria.fr/bin/caml-bugs</a><br>
</div></div></blockquote></div><br></div></div>

--001a113aab0ef49ae00530497598--
