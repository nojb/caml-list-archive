Return-Path: <sp@orbitalfox.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id A44FA7EE35
	for <caml-list@sympa.inria.fr>; Thu,  7 Apr 2016 00:56:26 +0200 (CEST)
IronPort-PHdr: 9a23:Xa+TlRAXauU6mgnEIsNCUyQJP3N1i/DPJgcQr6AfoPdwSP7/ocbcNUDSrc9gkEXOFd2CrakU26yK6eu5CCQp2tWojjMrSNR0TRgLiMEbzUQLIfWuLgnFFsPsdDEwB89YVVVorDmROElRH9viNRWJ+iXhpQAbFhi3DwdpPOO9QteU1JTnkbzosMSCKyxzxxODIppKZC2sqgvQssREyaBDEY0WjiXzn31TZu5NznlpL1/A1zz158O34YIxu38I46FppIZ8VvDVeL8nTLoQEjMge0ov6cHmrx3EUkPb6XwHTWQQ1wQNCSDa4Ru8Upqn4QXgse8o4xHSadbuZbcuUzW+5qNlTw+ugyACYW1quFrLg9B92foI6CmqoAZyltbZ
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=sp@orbitalfox.com; spf=None smtp.mailfrom=sp@orbitalfox.com; spf=None smtp.helo=postmaster@portal.orbitalfox.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  sp@orbitalfox.com) identity=pra; client-ip=95.172.232.202;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="sp@orbitalfox.com";
  x-sender="sp@orbitalfox.com"; x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  sp@orbitalfox.com) identity=mailfrom;
  client-ip=95.172.232.202;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="sp@orbitalfox.com";
  x-sender="sp@orbitalfox.com"; x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@portal.orbitalfox.com) identity=helo;
  client-ip=95.172.232.202;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="sp@orbitalfox.com";
  x-sender="postmaster@portal.orbitalfox.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0DTAwCXkwVX/8rorF9dhB0Dsz2HdwENgXOEfYEQAgyBdBQBAQEBAQEBAWQngi2CFAEBAQMBOAI/BQsLGAklDwUoIYgyDAHBUAEBAQEGAQEBARwZilOFIoJIgisBBJdxEI4BjxiPIR4BAUKDaDuJIwEBAQ
X-IPAS-Result: A0DTAwCXkwVX/8rorF9dhB0Dsz2HdwENgXOEfYEQAgyBdBQBAQEBAQEBAWQngi2CFAEBAQMBOAI/BQsLGAklDwUoIYgyDAHBUAEBAQEGAQEBARwZilOFIoJIgisBBJdxEI4BjxiPIR4BAUKDaDuJIwEBAQ
X-IronPort-AV: E=Sophos;i="5.24,448,1454972400"; 
   d="scan'208";a="172967975"
Received: from w-202.cust-20351.ip.static.uno.uk.net (HELO portal.orbitalfox.com) ([95.172.232.202])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 07 Apr 2016 00:56:25 +0200
Received: from tiger (tiger [192.168.88.5])
	by portal.orbitalfox.com (Postfix) with ESMTPSA id 3BC03AA083C;
	Wed,  6 Apr 2016 22:56:24 +0000 (UTC)
Date: Wed, 6 Apr 2016 23:56:21 +0100
From: SP <sp@orbitalfox.com>
To: Goswin von Brederlow <goswin-v-b@web.de>
Cc: caml-list@inria.fr
Message-ID: <20160406225621.GB644@tiger>
References: <20160323105016.GA2235@frosties>
 <CALbq6kmshp_602-48KFXpkSP_4e3QCC0O2hedw0XvPhBejXnUg@mail.gmail.com>
 <56F2CFD4.4000401@cea.fr>
 <20160324102559.GB32689@frosties>
 <20160325112839.GA27075@frosties>
 <20160329222912.GI9386@darkstar>
 <20160331102118.GA17174@frosties>
 <CAExvvWxchx6OPafTZ7Z_5+iT2QNUOKJjT1ckU8wz3ELiUxnCaQ@mail.gmail.com>
 <20160402113841.GB30016@frosties>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Disposition: inline
In-Reply-To: <20160402113841.GB30016@frosties>
User-Agent: Mutt/1.5.24 (2015-08-30)
Subject: Re: [Caml-list] RFH: can't figure out why my QT5 widget bindings
 segfault

On Sat, Apr 02, 2016 at 01:38:41PM +0200, Goswin von Brederlow wrote:
> With objects each class inherits all the data of the parent while
> alowing the child to be used with methods of the parent.

This is part of the problem I'm referring to when I say "tracking the
changes in the API".

> You can't do that with records or tuples. And if I have one class
> definition per Qt5 class anyway I might as well expose that to the
> user instead of hiding it in modules.

Yes, it would have to be new approach all together.

There is still merit in having a one-to-one ocaml wrapper for Qt. If
you can do the wrapping using some generator operating on the headers,
even better.

But I would encourage that a higher level, functional wrapper is used
for applications. It would be a shame if heavy object orientation
affected user interface codebases because of such necessity.

-- 
    SP
