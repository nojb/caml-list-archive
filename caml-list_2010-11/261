Return-Path: <gclci-caml-list@m.gmane.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 9DBF1BBAF
	for <caml-list@yquem.inria.fr>; Tue, 23 Nov 2010 18:53:28 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjEFAEuO60xQW+UMgWdsb2JhbACBVYF5kReOAxUBARYiIogrpS48hzqJDIEigzZzBIpe
X-IronPort-AV: E=Sophos;i="4.59,243,1288566000"; 
   d="scan'208";a="67919612"
Received: from lo.gmane.org ([80.91.229.12])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 23 Nov 2010 18:53:27 +0100
Received: from list by lo.gmane.org with local (Exim 4.69)
	(envelope-from <gclci-caml-list@m.gmane.org>)
	id 1PKx3V-00008Y-FX
	for caml-list@inria.fr; Tue, 23 Nov 2010 18:53:25 +0100
Received: from c-24-4-7-10.hsd1.ca.comcast.net ([24.4.7.10])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Tue, 23 Nov 2010 18:53:25 +0100
Received: from igouy2 by c-24-4-7-10.hsd1.ca.comcast.net with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Tue, 23 Nov 2010 18:53:25 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: caml-list@inria.fr
From: Isaac Gouy <igouy2@yahoo.com>
Subject: Re: Is OCaml fast?
Date: Tue, 23 Nov 2010 17:53:14 +0000 (UTC)
Lines: 39
Message-ID: <loom.20101123T183441-692@post.gmane.org>
References: <1290434674.16005.354.camel@thinkpad> <AANLkTi=nsgA3qEmpj0=89AodNN4M1tru+WJSsyYJ0ZqV@mail.gmail.com> <loom.20101123T030214-243@post.gmane.org> <20101123.113733.2059974256209184038.Christophe.Troestler+ocaml@umons.ac.be>
Mime-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8bit
X-Complaints-To: usenet@dough.gmane.org
X-Gmane-NNTP-Posting-Host: sea.gmane.org
User-Agent: Loom/3.14 (http://gmane.org/)
X-Loom-IP: 24.4.7.10 (Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.12) Gecko/20101027 Ubuntu/10.10 (maverick) Firefox/3.6.12)
X-Spam: no; 0.00; ocaml:01 christophe:01 troestler:01 christophe:01 troestler:01 ocaml:01 tor:98 wrote:01 umh:01 writes:01 suggesting:02 suggesting:02 shootout:02 equivalence:03 parameters:03 

Christophe TROESTLER <Christophe.Troestler+ocaml <at> umh.ac.be> writes:

> 
> On Tue, 23 Nov 2010 02:03:48 +0000, Isaac Gouy wrote:
> >
> > > C version : 12.11 secs
> > > OCaml version : 47.22 secs
> > > OCaml version with GC parameters tuned ("interesting alternative" 
> >  section) : 12.67 secs
> >
> > And of course you know because that GC tuned OCaml program is shown 
> >  on the
> > benchmarks game website 
> > http://shootout.alioth.debian.org/u32/program.php?test=binarytrees& 
> > lang=ocaml&id=1
> 
> Since you are here, please explain why C can use memory pools and vec 
> tor instructions but tuning the GC of OCaml ― although it is part of  
> the standard library ― is considered an “alternative”.


You seem to be suggesting that "tuning the GC" is considered "alternative" only
for OCaml programs.

You seem to be suggesting that "tuning the GC" is considered "alternative" for
every task.

Neither is true.

You seem to be suggesting some kind of equivalence between vector instructions
and "tuning the GC".
You haven't said why they should be considered equivalent.

Nor have you said why you think C should not be allowed to use memory pools.






