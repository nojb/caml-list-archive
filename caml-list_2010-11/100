Return-Path: <ddr@yquem.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: by yquem.inria.fr (Postfix, from userid 25991)
	id A2C0CBC57; Mon, 15 Nov 2010 19:50:16 +0100 (CET)
Date: Mon, 15 Nov 2010 19:50:16 +0100
From: Daniel de Rauglaudre <daniel.de_rauglaudre@inria.fr>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Causes for segfaults
Message-ID: <20101115185016.GC12576@yquem.inria.fr>
References: <AANLkTi=SqQpDJc4p8nq9zRuTK5n6ctu8meZFF_Fp7HJg@mail.gmail.com> <AANLkTik3Pryi5+QLyeZeuHPHjQwgy7-vce0KMY+mOvWs@mail.gmail.com> <384325291.294734.1288998871132.JavaMail.root@zmbs3.inria.fr> <20101106025118.GA23041@yquem.inria.fr> <AANLkTi=PdjhMuri3BfPEuiR81xemop5F15xJdpQzG_J6@mail.gmail.com> <AANLkTi=EW-PV_xSY6NkNje=FzxwMpGTLdiAcwDSGRA-L@mail.gmail.com> <AANLkTimz80mU6nG-dT5VJCyfr70s4OVO31c=Te9e8SJV@mail.gmail.com> <AANLkTimhKsAnR78N0pR2QwN7wrQ4-KbHbAyrrX1ihOPp@mail.gmail.com> <4CE1792B.3050603@coherentgraphics.co.uk> <157788745.568057.1289846305435.JavaMail.root@zmbs3.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <157788745.568057.1289846305435.JavaMail.root@zmbs3.inria.fr>
User-Agent: Mutt/1.5.9i
X-Spam: no; 0.00; rauglaudre:01 rauglaudre:01 segfaults:01 0100,:01 segfault:01 ocamlopt:01 segfault:01 ocaml:01 runtime:01 brandon:98 wrote:01 stack:01 rec:01 ints:01 ints:01 

On Mon, Nov 15, 2010 at 07:38:25PM +0100, Jamie Brandon wrote:

> jamie@jamie-aspire:~$ cat > segfault.ml
> let rec ints n = n :: ints (n+1)
> let _ = ints 0
> jamie@jamie-aspire:~$ ocamlopt segfault.ml
> jamie@jamie-aspire:~$ ./a.out
> Segmentation fault

Stack overflow in native code triggers a segmentation fault, indeed.
I think in C, it is the same thing. Not tested in the OCaml runtime
for efficiency purposes, I think.

-- 
Daniel de Rauglaudre
http://pauillac.inria.fr/~ddr/

