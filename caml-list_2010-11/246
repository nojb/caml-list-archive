Return-Path: <damien.doligez@inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id D2B4CBBAF
	for <caml-list@yquem.inria.fr>; Tue, 23 Nov 2010 10:48:25 +0100 (CET)
X-IronPort-AV: E=Sophos;i="4.59,241,1288566000"; 
   d="scan'208";a="80750004"
Received: from 250-120.msr-inria.inria.fr (HELO [10.0.1.2]) ([193.55.250.120])
  by mail2-relais-roc.national.inria.fr with ESMTP/TLS/AES128-SHA; 23 Nov 2010 10:48:25 +0100
Content-Type: text/plain; charset=us-ascii
Mime-Version: 1.0 (Apple Message framework v1082)
Subject: Re: [Caml-list] Optimizing garbage collection
From: Damien Doligez <damien.doligez@inria.fr>
In-Reply-To: <1832704169.1010021.1290451094930.JavaMail.root@zmbs1.inria.fr>
Date: Tue, 23 Nov 2010 10:48:25 +0100
Content-Transfer-Encoding: 7bit
Message-Id: <81B1F99F-1875-4FFE-B01A-4D0A5EE50463@inria.fr>
References: <1832704169.1010021.1290451094930.JavaMail.root@zmbs1.inria.fr>
To: OCaml mailing list <caml-list@yquem.inria.fr>
X-Mailer: Apple Mail (2.1082)
X-Spam: no; 0.00; damien:01 damien:01 doligez:01 doligez:01 garbage:01 garbage:01 wrote:01 heap:01 heap:01 caml-list:01 minor:01 minor:01 optimizing:03 size:95 size:95 


On 2010-11-22, at 19:38, John Carr wrote:

> I don't understand "smooth".  Minor heap size should be based on the
> rate of garbage generation relative to allocation to balance cache
> misses with GC cost.  The ratio may be small or large independent of
> whether it varies during the program.


What I meant is that, if the allocation rate of the program is infinitely
regular and you don't get any threshold effects, the running time decreases
as the minor heap size increases, and it's hard to tell when you should
stop increasing it.

For benchmarks the best choice is probably the physical memory size, but
you certainly don't want your real programs to do that.

-- Damien

