Return-Path: <jamiiecb@googlemail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 022E1BBAF
	for <caml-list@yquem.inria.fr>; Mon,  8 Nov 2010 15:26:08 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqkBAEaX10zRVdU0lGdsb2JhbACUB415CBcCCQsICREDH6Myi3YBBYUbiQcBBIVIilmJJA
X-IronPort-AV: E=Sophos;i="4.58,314,1286143200"; 
   d="scan'208";a="77459136"
Received: from mail-yw0-f52.google.com ([209.85.213.52])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 08 Nov 2010 15:26:07 +0100
Received: by ywf7 with SMTP id 7so3376780ywf.39
        for <caml-list@yquem.inria.fr>; Mon, 08 Nov 2010 06:26:06 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlemail.com; s=gamma;
        h=domainkey-signature:mime-version:received:sender:received
         :in-reply-to:references:date:x-google-sender-auth:message-id:subject
         :from:to:content-type;
        bh=E2Z085Usb0ZoFywSNkdHrR8SwH3f4w+8eT7DKBSp0Ts=;
        b=qpKbXQEnhUgnDinkCAxagmiYvZL/9LYWLoRIUpoRvumMu+NmmrdFh0lFI1Jc8BPiNQ
         wIi4LG9Cw+nzqWeoI16Orncu0eYDoz2hhacJocT5DO3LHVCQJWzFGbITP7h75raU9mt4
         wKgo50XS6nSp2KtpqfjLHxrIt2AJg4FrjbKBs=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlemail.com; s=gamma;
        h=mime-version:sender:in-reply-to:references:date
         :x-google-sender-auth:message-id:subject:from:to:content-type;
        b=YB9QtD35lyxx/vBl8VfqtYYEU/nYcxCyJRPkGnzf3qnHi9jX88hawszCa3YRpNv3JZ
         Ysn93h667zTRPSxiV+RFRe1kZTqVXSpgyotYsqpxHU5cirkqRpqt4qDzlOJnW8OXqv9Z
         QpNeV4USO6fpiikaFdye+4Z43knLHeCrEqTv4=
MIME-Version: 1.0
Received: by 10.229.219.10 with SMTP id hs10mr5069365qcb.238.1289226366587;
 Mon, 08 Nov 2010 06:26:06 -0800 (PST)
Sender: jamiiecb@googlemail.com
Received: by 10.229.187.133 with HTTP; Mon, 8 Nov 2010 06:26:06 -0800 (PST)
In-Reply-To: <20101106025118.GA23041@yquem.inria.fr>
References: <AANLkTi=SqQpDJc4p8nq9zRuTK5n6ctu8meZFF_Fp7HJg@mail.gmail.com>
	<AANLkTik3Pryi5+QLyeZeuHPHjQwgy7-vce0KMY+mOvWs@mail.gmail.com>
	<384325291.294734.1288998871132.JavaMail.root@zmbs3.inria.fr>
	<20101106025118.GA23041@yquem.inria.fr>
Date: Mon, 8 Nov 2010 02:26:06 -1200
X-Google-Sender-Auth: XX3l93vwT_bykDFBlVhbA6E-Ggo
Message-ID: <AANLkTi=PdjhMuri3BfPEuiR81xemop5F15xJdpQzG_J6@mail.gmail.com>
Subject: Re: [Caml-list] Causes for segfaults
From: Jamie Brandon <jamie@scattered-thoughts.net>
To: caml-list@yquem.inria.fr
Content-Type: text/plain; charset=ISO-8859-1
X-Spam: no; 0.00; segfaults:01 bytecode:01 marshalling:01 marshalling:01 ulimit:01 brandon:98 stack:01 stack:01 caml-list:01 transformed:02 data:02 segmentation:03 overflow:03 overflow:03 fault:04 

> If it is, perhaps try to limit it and try again in bytecode to see
> if the Segmentation Fault is transformed into a Stack Overflow.

Marshalling is not tail-recursive, so I will always get a stack
overflow marshalling this much data. Setting ulimit -s unlimited
prevents this but also obscures the current problem.

