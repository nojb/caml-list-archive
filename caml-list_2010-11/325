Return-Path: <gclci-caml-list@m.gmane.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 38F68BBAF
	for <caml-list@yquem.inria.fr>; Wed, 24 Nov 2010 18:32:38 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AigFAFbb7ExQW+UMgWdsb2JhbACBVoF5kS+OBhUBARYiIq1fPIdJiQmBIYMzcwSKYA
X-IronPort-AV: E=Sophos;i="4.59,249,1288566000"; 
   d="scan'208";a="80889517"
Received: from lo.gmane.org ([80.91.229.12])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 24 Nov 2010 18:32:37 +0100
Received: from list by lo.gmane.org with local (Exim 4.69)
	(envelope-from <gclci-caml-list@m.gmane.org>)
	id 1PLJCu-0003Y5-Ti
	for caml-list@inria.fr; Wed, 24 Nov 2010 18:32:37 +0100
Received: from c-24-4-7-10.hsd1.ca.comcast.net ([24.4.7.10])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Wed, 24 Nov 2010 18:32:36 +0100
Received: from igouy2 by c-24-4-7-10.hsd1.ca.comcast.net with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Wed, 24 Nov 2010 18:32:36 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: caml-list@inria.fr
From: Isaac Gouy <igouy2@yahoo.com>
Subject: Re: Is OCaml fast?
Date: Wed, 24 Nov 2010 17:32:20 +0000 (UTC)
Lines: 46
Message-ID: <loom.20101124T181441-844@post.gmane.org>
References: <loom.20101124T031035-994@post.gmane.org> <AANLkTik_j=H+1JPTmreYL2UVBn_CHWMrMjsABW7ZBL5Q@mail.gmail.com> <loom.20101124T061744-782@post.gmane.org> <20101124.112433.2237591808641262985.Christophe.Troestler+ocaml@umons.ac.be>
Mime-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8bit
X-Complaints-To: usenet@dough.gmane.org
X-Gmane-NNTP-Posting-Host: sea.gmane.org
User-Agent: Loom/3.14 (http://gmane.org/)
X-Loom-IP: 24.4.7.10 (Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.2.12) Gecko/20101027 Ubuntu/10.10 (maverick) Firefox/3.6.12)
X-Spam: no; 0.00; ocaml:01 christophe:01 troestler:01 christophe:01 troestler:01 ocaml:01 gmane:01 umh:01 writes:01 implemented:02 external:03 external:03 misleading:03 library:03 library:03 

Christophe Troestler <Christophe.Troestler+ocaml <at> umh.ac.be> writes:

 
> Isolating a sentence gives a misleading idea of what I said. 

gmane demands "Prune quoted stuff."


> Must I
> really repeat that I was asking WHY is C allowed to use an external
> library to enhance its memory management¹ but OCaml cannot use its own
> library to do that.

Do the OCaml binary-trees programs that are shown not use OCaml memory 

management?

Do the C programs that are shown tune the external library memory management

they use?


> I am not asking WHAT the rules are but a JUSTIFICATION for them (which you
> have been incapable of providing so far).

I feel no need to provide a JUSTIFICATION to you for anything.


> ¹ Apparently the "Please don't implement your own custom memory pool
> or free list." does not count if it's implemented by others!

Many C and C++ programmmers rolled their own custom free list implementations as

part of their program. 

Library memory pool and free list implementations have to be more generally

useful (and probably less efficient) than custom solutions created specifically

for this tiny task.

"Please don't implement your own custom memory pool or free list." means exactly
what it says.




