Return-Path: <rich@annexia.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id ED93CBBAF
	for <caml-list@yquem.inria.fr>; Tue, 23 Nov 2010 23:25:32 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgkFAJ7N60xQRFuw/2dsb2JhbACiF1NxvjKFSwQ
X-IronPort-AV: E=Sophos;i="4.59,244,1288566000"; 
   d="scan'208";a="67929608"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES256-SHA; 23 Nov 2010 23:25:32 +0100
Received: from rich by furbychan.cocan.org with local (Exim 4.63)
	(envelope-from <rich@annexia.org>)
	id 1PL1Ip-000758-ES
	for caml-list@inria.fr; Tue, 23 Nov 2010 22:25:31 +0000
Date: Tue, 23 Nov 2010 22:25:31 +0000
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Re: Is OCaml fast?
Message-ID: <20101123222531.GB910@annexia.org>
References: <1290434674.16005.354.camel@thinkpad> <AANLkTi=nsgA3qEmpj0=89AodNN4M1tru+WJSsyYJ0ZqV@mail.gmail.com> <loom.20101123T030214-243@post.gmane.org> <20101123.113733.2059974256209184038.Christophe.Troestler+ocaml@umons.ac.be> <066401cb8b28$a46a1740$ed3e45c0$@com> <loom.20101123T190142-212@post.gmane.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <loom.20101123T190142-212@post.gmane.org>
User-Agent: Mutt/1.5.13 (2006-08-11)
From: Richard Jones <rich@annexia.org>
X-Spam: no; 0.00; ocaml:01 haskell:01 command-line:01 23,:98 wrote:01 caml-list:01 precisely:01 writes:01 parameter:02 optimizing:03 parameters:03 processors:04 size:95 restriction:05 restriction:05 

On Tue, Nov 23, 2010 at 06:03:10PM +0000, Isaac Gouy wrote:
> Jon Harrop <jonathandeanharrop <at> googlemail.com> writes:
> 
> > 
> > Note that the regex-dna solution for Haskell tweaks its GC parameters via
> > the -H command-line parameter:
> 
> 
> Note that there is no restriction on "tuning the GC" for regex-dna.
> 
> Note that there is no restriction on "tuning the GC" for any task except
> binary-trees.

Don't you think this is a pretty ludicrous restriction?

Tuning the GC / adjusting the size of pools or mallocs is essential
for optimizing for modern processors.  I bet the C programs are doing
this, except that it won't obviously be called "tuning the GC"
although it amounts to precisely the same thing.

Rich.

-- 
Richard Jones
Red Hat

