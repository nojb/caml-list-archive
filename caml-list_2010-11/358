Return-Path: <rich@annexia.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 45B1EBBAF
	for <caml-list@yquem.inria.fr>; Fri, 26 Nov 2010 19:59:30 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvsEAEOS70xQRFuw/2dsb2JhbACjEHHAFYVHBA
X-IronPort-AV: E=Sophos;i="4.59,262,1288566000"; 
   d="scan'208";a="81059035"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES256-SHA; 26 Nov 2010 19:59:30 +0100
Received: from rich by furbychan.cocan.org with local (Exim 4.63)
	(envelope-from <rich@annexia.org>)
	id 1PM3W4-0008KW-Eo; Fri, 26 Nov 2010 18:59:28 +0000
Date: Fri, 26 Nov 2010 18:59:28 +0000
To: Martin DeMello <martindemello@gmail.com>
Cc: OCaml List <caml-list@yquem.inria.fr>
Subject: Re: [Caml-list] Desktop GUI toolkits - current state of the art?
Message-ID: <20101126185928.GC910@annexia.org>
References: <AANLkTinmdg+=NyumuqajsYfLHanmeo59E815DqWmWaPp@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <AANLkTinmdg+=NyumuqajsYfLHanmeo59E815DqWmWaPp@mail.gmail.com>
User-Agent: Mutt/1.5.13 (2006-08-11)
From: Richard Jones <rich@annexia.org>
X-Spam: no; 0.00; ocaml:01 lablgtk:01 gtk:01 lablgtk:01 bindings:01 syntax:01 syntax:01 gtk:01 23,:98 rear:98 wrote:01 caml-list:01 api:02 apis:03 gui:03 

On Tue, Nov 23, 2010 at 07:49:03PM +0530, Martin DeMello wrote:
> What are the actively developed options for writing desktop GUI apps
> in OCaml? Anything other than lablgtk2 (which, at least from a brief
> look through the examples, looks rather ugly, codewise, compared to,
> say, vala or ruby/gtk)? I'll use lablgtk2 in a pinch, but I'm curious
> as to whether anyone has been experimenting with toolkit bindings with
> an eye towards better syntax and APIs.

Given that vala and ruby both use the C API at some level buried
underneath, and cover it up with some syntax, how about starting a
project to do something similar on top of lablgtk2?  I for one would
welcome this since my current project uses lablgtk2 and Gtk is a pain
in the rear.

Rich.

-- 
Richard Jones
Red Hat

