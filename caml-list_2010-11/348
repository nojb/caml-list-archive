Return-Path: <gclci-caml-list@m.gmane.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 3F44ABBAF
	for <caml-list@yquem.inria.fr>; Thu, 25 Nov 2010 17:59:30 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AtUJAHEk7kxQW+UMgWdsb2JhbACVB40GgQEVAQEWIiK/R4VHBIRcjW0
X-IronPort-AV: E=Sophos;i="4.59,255,1288566000"; 
   d="scan'208";a="68077513"
Received: from lo.gmane.org ([80.91.229.12])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 25 Nov 2010 17:59:29 +0100
Received: from list by lo.gmane.org with local (Exim 4.69)
	(envelope-from <gclci-caml-list@m.gmane.org>)
	id 1PLfAL-0005YZ-9X
	for caml-list@inria.fr; Thu, 25 Nov 2010 17:59:25 +0100
Received: from 69-196-160-116.dsl.teksavvy.com ([69.196.160.116])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Thu, 25 Nov 2010 17:59:25 +0100
Received: from monnier by 69-196-160-116.dsl.teksavvy.com with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Thu, 25 Nov 2010 17:59:25 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: caml-list@inria.fr
From: Stefan Monnier <monnier@iro.umontreal.ca>
Subject: Re: Is OCaml fast?
Date: Thu, 25 Nov 2010 11:59:14 -0500
Lines: 22
Message-ID: <jwv39qp2vn4.fsf-monnier+gmane.comp.lang.caml.inria@gnu.org>
References: <AANLkTi=MFt3mGK2L_o=4=o=3FOtA2onvdvqTpw9SObYP@mail.gmail.com>
	<1290434674.16005.354.camel@thinkpad>
	<20101122180203.2126497sau3zukgb@webmail.in-berlin.de>
	<E0E134FB-BF3D-4CF2-8214-12322034662D@univ-orleans.fr>
	<loom.20101123T030109-899@post.gmane.org>
	<20101123232742.GC28768@siouxsie>
	<loom.20101124T011919-47@post.gmane.org>
	<AANLkTi=9BnGCEftg_TAaeY8s3cNnmzHuw2-UxuCX2oKX@mail.gmail.com>
	<loom.20101124T031035-994@post.gmane.org>
	<AANLkTik_j=H+1JPTmreYL2UVBn_CHWMrMjsABW7ZBL5Q@mail.gmail.com>
Mime-Version: 1.0
Content-Type: text/plain
X-Complaints-To: usenet@dough.gmane.org
X-Gmane-NNTP-Posting-Host: 69-196-160-116.dsl.teksavvy.com
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/24.0.50 (gnu/linux)
Cancel-Lock: sha1:zCBm2so7gL6FR8sVjSDqO4/YrEQ=
X-Spam: no; 0.00; ocaml:01 ocaml's:01 garbage:01 garbage:01 shootout:02 shootout:02 misleading:03 languages:03 languages:03 programming:03 benchmark:04 benchmark:04 submissions:04 processors:04 problem:05 

> Richard's objection, which you dismissed out of hand, was that your
> no-GC-tuning rule is silly in the light of actual uses of garbage
> collected programming languages on modern processors.  It makes your
> results unrealistic, and an unrealistic benchmark is misleading, or at
> best merely useless.

To the extent that this rule is the same for all languages and that most
languages on the shootout are also garbage collected, I think OCaml's
problem with this benchmark do point at a weakness of the current
GC code.

Of course, the shootout could be improved.  E.g. maybe it could allow
extra submissions that break the rules, along with a description of
which rules were broken and how.  Then there could be a "score according
to the rules", then a "score when all gloves are off", together with
some kind of "measure" of what was needed to go from one to the other.
This way people could maybe get a better feel for the languages's
performance and how (and how much) that performance can be affected.
Doesn't seem like an easy undertaking, tho.


        Stefan

