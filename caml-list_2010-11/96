Return-Path: <wdraxinger.maillist@draxit.de>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 574B9BC57
	for <caml-list@yquem.inria.fr>; Mon, 15 Nov 2010 18:27:40 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AuUEAH784ExYxkJF/2dsb2JhbACUVY50vnSFSgSKVw
X-IronPort-AV: E=Sophos;i="4.59,200,1288566000"; 
   d="scan'208";a="78672125"
Received: from a.ns.draxit.de (HELO mail.draxit.de) ([88.198.66.69])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/ADH-CAMELLIA256-SHA; 15 Nov 2010 18:27:39 +0100
Received: from loki.yggdrasil.draxit.de (ppp-93-104-33-35.dynamic.mnet-online.de [93.104.33.35])
	(using TLSv1 with cipher DHE-RSA-AES128-SHA (128/128 bits))
	(No client certificate requested)
	by mail.draxit.de (Postfix) with ESMTPSA id C3D801D618
	for <caml-list@inria.fr>; Mon, 15 Nov 2010 18:27:38 +0100 (CET)
Date: Mon, 15 Nov 2010 18:27:37 +0100
From: Wolfgang Draxinger <wdraxinger.maillist@draxit.de>
To: caml-list@inria.fr
Subject: SMP multithreading
Message-ID: <20101115182737.42b8dcae@loki.yggdrasil.draxit.de>
Organization: DraxIT
X-Mailer: Claws Mail 3.7.5 (GTK+ 2.16.6; x86_64-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; speedups:01 ocaml:01 runtime:01 ocaml:01 cheers:01 maillist:98 acb:98 15.:98 1.5:98 caml-list:01 caml:02 wolfgang:02 wolfgang:02 overhead:04 thread-safe:05 

Hi,

I've just read
http://caml.inria.fr/pub/ml-archives/caml-list/2002/11/64c14acb90cb14bedb2cacb73338fb15.en.html
in particular this paragraph:
| What about hyperthreading?  Well, I believe it's the last convulsive
| movement of SMP's corpse :-)  We'll see how it goes market-wise.  At
| any rate, the speedups announced for hyperthreading in the Pentium 4
| are below a factor of 1.5; probably not enough to offset the overhead
| of making the OCaml runtime system thread-safe.

This reads just like the "640k ought be enough for everyone". Multicore
systems are the standard today. Even the cheapest consumer machines
come with at least two cores. Once can easily get 6 core machines today.

Still thinking SMP was a niche and was dying?

So, what're the developments regarding SMP multithreading OCaml?


Cheers

Wolfgang

