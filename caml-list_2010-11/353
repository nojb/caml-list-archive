Return-Path: <fabrissimo@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 5A172BC58
	for <caml-list@yquem.inria.fr>; Thu, 25 Nov 2010 23:51:06 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ai8CAJt37kxKfVIukGdsb2JhbACDUJE4gw+KcAgVAQEBAQkJDAcRAx+ld4koglSEUYkEAQEDBYRPcwSKYYMPZ4U3
X-IronPort-AV: E=Sophos;i="4.59,257,1288566000"; 
   d="vcf'?scan'208";a="80239624"
Received: from mail-ww0-f46.google.com ([74.125.82.46])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 25 Nov 2010 23:51:01 +0100
Received: by wwb28 with SMTP id 28so610777wwb.3
        for <caml-list@yquem.inria.fr>; Thu, 25 Nov 2010 14:51:01 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:sender:message-id:date:from
         :user-agent:mime-version:to:subject:references:in-reply-to
         :content-type;
        bh=ZesVyPBrucIqUGh2BAj1ez1ioYhdRyoq+OBvyfD8gYY=;
        b=B4va0beVktyXa3ttFsxOD0RACHxTDBm+pyXOj0nR52aq40hv7+AsA8euUZjYkYCt76
         aik9Ml5PCzW1YTCFlxHyglY5Osd3PU9DNUncYEtS1Kyy1532LpuCe0ZBfVk0mOX7dJcV
         8NYAtqi4dg0RMBqkcxAVVv7QvpfHP0EJZrFu4=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=sender:message-id:date:from:user-agent:mime-version:to:subject
         :references:in-reply-to:content-type;
        b=kFXTH9PX0adKTnr/9Bz3wfPhav44qy2mzLENm+QxtZkHyloGjuDJsLSY4ZZBskmAEP
         YO4JIeots005Vc02hlhJrii5S5feBNSUZA2xc19yEU0u57nbkol+HCe5EESsDxi/Yocy
         aPXr2AbNJCbyilJK+qZtm/JF0zh2FjNBirdfc=
Received: by 10.216.30.65 with SMTP id j43mr1330009wea.20.1290725461027;
        Thu, 25 Nov 2010 14:51:01 -0800 (PST)
Received: from [192.168.0.10] (mna75-13-88-175-65-234.fbx.proxad.net [88.175.65.234])
        by mx.google.com with ESMTPS id x59sm607842weq.14.2010.11.25.14.50.59
        (version=SSLv3 cipher=RC4-MD5);
        Thu, 25 Nov 2010 14:51:00 -0800 (PST)
Sender: Fabrice Le Fessant <fabrissimo@gmail.com>
Message-ID: <4CEEE852.5070101@inria.fr>
Date: Thu, 25 Nov 2010 23:50:58 +0100
From: Fabrice Le Fessant <Fabrice.Le_fessant@inria.fr>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1.11) Gecko/20100713 Thunderbird/3.0.6
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Re: Is OCaml fast?
References: <AANLkTi=MFt3mGK2L_o=4=o=3FOtA2onvdvqTpw9SObYP@mail.gmail.com>	<1290434674.16005.354.camel@thinkpad>	<20101122180203.2126497sau3zukgb@webmail.in-berlin.de>	<E0E134FB-BF3D-4CF2-8214-12322034662D@univ-orleans.fr>	<loom.20101123T030109-899@post.gmane.org>	<20101123232742.GC28768@siouxsie>	<loom.20101124T011919-47@post.gmane.org>	<AANLkTi=9BnGCEftg_TAaeY8s3cNnmzHuw2-UxuCX2oKX@mail.gmail.com>	<loom.20101124T031035-994@post.gmane.org>	<AANLkTik_j=H+1JPTmreYL2UVBn_CHWMrMjsABW7ZBL5Q@mail.gmail.com>	<jwv39qp2vn4.fsf-monnier+gmane.comp.lang.caml.inria@gnu.org> <1534555381.33107.1290723160355.JavaMail.root@zmbs4.inria.fr>
In-Reply-To: <1534555381.33107.1290723160355.JavaMail.root@zmbs4.inria.fr>
Content-Type: multipart/mixed;
 boundary="------------020608030203060608070006"
X-Spam: no; 0.00; ocaml:01 ocaml's:01 caching:01 ocaml:01 compiler:01 compiler:01 wrote:01 wrote:01 unix:01 compile:01 caml-list:01 data:02 contributed:02 structures:02 shootout:02 
X-Attachments: cset="utf-8" name="fabrice_le_fessant.vcf" name="fabrice_le_fessant.vcf" 

This is a multi-part message in MIME format.
--------------020608030203060608070006
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

On 11/25/2010 11:12 PM, Jon Harrop wrote:
> Stefan wrote:
>> I think OCaml's problem with this benchmark do point at a weakness of the current
>> GC code.

What makes you think that ?

I have contributed to some of the solutions that you can find there (and 
some other ones were rejected because caching results is not allowed too 
;-) ), and the GC was _NEVER_ a problem !

  (except for binary-trees, but for absurd reasons)

  The main problem was that other languages have bigger standard 
libraries, whereas OCaml has a very small one (just what is needed to 
compile the compiler, actually). In many problems, you could benefit 
from using a very simple shared-memory library (in mandelbrot, the ocaml 
multicore solution has to copy the image in a socket between processes, 
whereas it could just be in a shared memory segment), and in general, 
many solutions could benefit from specialised data structures that are 
provided in other languages by their standard libraries, and from some 
system calls that are currently not in the Unix library.

Anyway, I decided to stop trying to improve the solutions, and work on 
improving the compiler and its libraries instead. It might benefit to 
ocaml ranking in the shootout, but more importantely, it will benefit to 
everybody in the community also.

--Fabrice

--------------020608030203060608070006
Content-Type: text/x-vcard; charset=utf-8;
 name="fabrice_le_fessant.vcf"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
 filename="fabrice_le_fessant.vcf"

begin:vcard
fn:Fabrice LE FESSANT
n:LE FESSANT;Fabrice
org:INRIA Saclay -- Ile-de-France;Projet OCamlPro
adr;quoted-printable:;;Parc Orsay Universit=C3=A9 ;Orsay CEDEX;;91893;France
email;internet:fabrice.le_fessant@inria.fr
title;quoted-printable:Charg=C3=A9 de Recherche
tel;work:+33 1 74 85 42 14
tel;fax:+33 1 74 85 42 49 
url:http://fabrice.lefessant.net/
version:2.1
end:vcard


--------------020608030203060608070006--

