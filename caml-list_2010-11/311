Return-Path: <dra-news@metastack.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id E4F86BC66
	for <caml-list@yquem.inria.fr>; Wed, 24 Nov 2010 11:32:29 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqIBAPN47ExRZ90wkWdsb2JhbACDTp5FXxUBAQIJCwoHEQMfrDiQfoEhgVCBY3MEimA
X-IronPort-AV: E=Sophos;i="4.59,247,1288566000"; 
   d="scan'208";a="80849127"
Received: from mtaout02-winn.ispmail.ntl.com ([81.103.221.48])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 24 Nov 2010 11:32:25 +0100
Received: from aamtaout02-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout02-winn.ispmail.ntl.com
          (InterMail vM.7.08.04.00 201-2186-134-20080326) with ESMTP
          id <20101124103224.DCFA19887.mtaout02-winn.ispmail.ntl.com@aamtaout02-winn.ispmail.ntl.com>;
          Wed, 24 Nov 2010 10:32:24 +0000
Received: from romulus.metastack.com ([81.102.132.77])
          by aamtaout02-winn.ispmail.ntl.com
          (InterMail vG.3.00.04.00 201-2196-133-20080908) with ESMTP
          id <20101124103224.JDTG25842.aamtaout02-winn.ispmail.ntl.com@romulus.metastack.com>;
          Wed, 24 Nov 2010 10:32:24 +0000
Received: from remus.metastack.local ([172.16.0.1])
	by romulus.metastack.com (8.14.2/8.14.2) with ESMTP id oAOAWKKR014202
	(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=FAIL);
	Wed, 24 Nov 2010 10:32:20 GMT
Received: from Remus.metastack.local ([fe80::547c:3c42:e1da:eda2]) by
 Remus.metastack.local ([fe80::547c:3c42:e1da:eda2%11]) with mapi; Wed, 24 Nov
 2010 10:29:43 +0000
From: David Allsopp <dra-news@metastack.com>
To: Thanassis Tsiodras <ttsiodras@gmail.com>,
	"caml-list@yquem.inria.fr" <caml-list@yquem.inria.fr>
Subject: RE: [Caml-list] Is OCaml fast?
Thread-Topic: [Caml-list] Is OCaml fast?
Thread-Index: AQHLikfIS/2qRZilDUyYeZADFBQ0IZOAZByQ
Date: Wed, 24 Nov 2010 10:29:41 +0000
Message-ID: <E51C5B015DBD1348A1D85763337FB6D92C58E09C@Remus.metastack.local>
References: <AANLkTi=MFt3mGK2L_o=4=o=3FOtA2onvdvqTpw9SObYP@mail.gmail.com>
In-Reply-To: <AANLkTi=MFt3mGK2L_o=4=o=3FOtA2onvdvqTpw9SObYP@mail.gmail.com>
Accept-Language: en-GB, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: base64
MIME-Version: 1.0
Organization: MetaStack Solutions Ltd.
X-Scanned-By: MIMEDefang 2.65 on 81.102.132.77
X-Cloudmark-Analysis: v=1.1 cv=JvdXmxIgLJv2/GthKqHpGJEEHukvLcvELVXUanXFreg= c=1 sm=0 a=DDRBYL2NZkIA:10 a=IkcTkHD0fZMA:10 a=xqWC_Br6kY4A:10 a=igQ-CdofAAAA:8 a=xNf9USuDAAAA:8 a=sL41vpz-9tqYbYfEncsA:9 a=TAfpsJo80T6QK_2TqQkA:7 a=8UrtfolqjHTjXfGa5TUmkceAQx8A:4 a=QEXdDO2ut3YA:10 a=mKDaz5OVQ_EA:10 a=70qowAXlPyoMDIQv:21 a=p6_b18RUmmtF_43K:21 a=HpAAvcLHHh0Zw7uRqdWCyQ==:117
X-Spam: no; 0.00; ocaml:01 ocaml:01 haskell:01 subjective:01 language's:01 erroneously:01 ocaml's:01 inference:01 polymorphism:01 variants:01 non-trivial:01 ubc:98 impartial:98 polymorphic:01 imho:01 

VGhhbmFzc2lzIFRzaW9kcmFzIHdyb3RlOg0KPiBJIGFwb2xvZ2l6ZSBiZWZvcmVoYW5kIGlmIHRo
aXMgaXMgbm90IHRoZSBmb3J1bSB0byBhc2suDQo+IA0KPiBJIGFtIG9uIHRoZSBmZW5jZSBhYm91
dCB3aGV0aGVyIHRvIGxlYXJuIE9DYW1sIG9yIG5vdCwgYW5kIHdoaWxlIHJlYWRpbmcNCj4gYW4g
YXJ0aWNsZSBjYWxsZWQgIldoeSBPQ2FtbCINCj4gKGh0dHA6Ly93d3cuY3MudWJjLmNhL35tdXJw
aHlrL1NvZnR3YXJlL09jYW1sL3doeV9vY2FtbC5odG1sKSwgSSBzYXcgdGhhdA0KPiBPQ2FtbCB3
YXMgcHJhaXNlZCBmb3IgdGhlIHNwZWVkIG9mIHRoZSBleGVjdXRhYmxlcyBpdCBnZW5lcmF0ZXMg
LSBhbmQgd2FzDQo+IHJlZmVycmVkIHRvLCBzcGVlZC13aXNlLCBhcyAic2Vjb25kIHRvIG5vbmUi
LCBleGNlcHQgQyBhbmQNCj4gQysrLg0KDQpEbyByZW1lbWJlciB0aGF0IHNwZWVkIGlzbid0IGFs
d2F5cyBldmVyeXRoaW5nIC0gdGhlcmUgYXJlIG1hbnkgYXBwbGljYXRpb25zIHdoZXJlIGl0J3Mg
anVzdCBub3QgY3JpdGljYWwuIE1haW50YWluYWJpbGl0eSwgcmVhZGFiaWxpdHksIGVhc2Utb2Yt
dXNlLCBhdmFpbGFiaWxpdHkgb2YgbGlicmFyaWVzIGFyZSBsYXJnZSBjb25jZXJucyB0b28uDQoN
Cj4gSG93ZXZlciwgd2hlbiBJIGFjdHVhbGx5IHdlbnQgdG8gdGhlIExhbmd1YWdlIFNob290b3V0
IHBhZ2Ugc3VnZ2VzdGVkIGluDQo+IHRoZSBhcnRpY2xlLCBJIGZvdW5kIG91dCB0aGF0IE9DYW1s
IGlzIG5vdCAybmQsIGl0IGlzIDEzdGgsIGJlaGluZA0KPiBsYW5ndWFnZXMgbGlrZSBIYXNrZWxs
IGFuZCBDIy4uLg0KPiAoaHR0cDovL3Nob290b3V0LmFsaW90aC5kZWJpYW4ub3JnL3UzMi93aGlj
aC1wcm9ncmFtbWluZy1sYW5ndWFnZXMtYXJlLQ0KPiBmYXN0ZXN0LnBocCkNCg0KQXMgdGhlIGtp
bmRhIGxhcmdlIG51bWJlciBvZiBtZXNzYWdlcyBpbiB0aGlzIHRocmVhZCBzdWdnZXN0cywgYmVu
Y2htYXJrcyBjYW4gYmUgdmVyeSBzdWJqZWN0aXZlIDpvKQ0KDQpUaGUgV2lrdGlvbmFyeSBkZWZp
bml0aW9uIG9mICJ0byBiZW5jaG1hcmsiIGlzICJUbyBtZWFzdXJlIHRoZSBwZXJmb3JtYW5jZSBv
ZiAoYW4gaXRlbSkgcmVsYXRpdmUgdG8gYW5vdGhlciBzaW1pbGFyIGl0ZW0gaW4gYW4gaW1wYXJ0
aWFsIHNjaWVudGlmaWMgbWFubmVyIi4gSU1ITyB0aGUgcHJvYmxlbSBiZW5jaG1hcmtpbmcgInBy
b2dyYW1taW5nIGxhbmd1YWdlcyIgKG5vdGUgLSAicHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzIiwgbm90
ICJwcm9ibGVtcyBzb2x2ZWQgaW4gcHJvZ3JhbW1pbmcgbGFuZ3VhZ2VzIikgbGllcyBpbiB0aGUg
d29yZCAic2ltaWxhciIgaW4gdGhhdCBkZWZpbml0aW9uLiBSZWR1Y2luZyBhbiBlbnRpcmUgcHJv
Z3JhbW1pbmcgbGFuZ3VhZ2UncyBzdHJlbmd0aHMgKG9yIHdlYWtuZXNzZXMhKSB0byBhIHNpbmds
ZSBudW1iZXIgaXMganVzdCBub3QgcmVhbGx5IHJlYWxpc3RpYyAtIHRoZSB0cnV0aCBpcyBtb3Jl
IGNvbXBsZXggdGhhbiBvbmUgc2luZ2xlLXByZWNpc2lvbiBmbG9hdGluZyBwb2ludCBudW1iZXIg
KG9yIGV2ZW4gYW4gYXJyYXkgb2YgdGhlbSkgY2FuIGRlc2NyaWJlLiAoTkIuIFRoZSBzaG9vdG91
dCBkb2Vzbid0IGNsYWltIHRoYXQgdGhlIGZpbmFsIHJhbmtpbmcgZGlzcGxheWVkIGlzIGFueXRo
aW5nIG90aGVyIHRoYW4gYSBzY29yZSBvZiBob3cgd2VsbCB0aGUgbGFuZ3VhZ2VzIGRpZCBhdCB0
aGUgdmFyaW91cyBiZW5jaG1hcmtzIGdpdmVuIC0gYnV0IGEgZ3JhcGggbGlrZSB0aGF0IGlzIGVh
c3kgdG8gaW50ZXJwcmV0IGVycm9uZW91c2x5IGluIHRoYXQgd2F5KQ0KDQo+IElzIGl0IGp1c3Qg
aHlwZSwgdGhlbj8gT3IgYW0gSSBtaXNzaW5nIHNvbWV0aGluZz8NCg0KT0NhbWwncyBiaWcgc3Ry
ZW5ndGhzIChieSBubyBtZWFucyB1bmlxdWUgdG8gT0NhbWwsIGluY2lkZW50YWxseSkgZm9yIG1l
IGFyZSBpdHMgTUwgbGVnYWN5IC0gYXV0b21hdGljIG1lbW9yeSAoZGUtKWFsbG9jYXRpb24sIHR5
cGUgaW5mZXJlbmNlLCBzdGF0aWMgdHlwZS1jaGVja2luZyAoaS5lLiBubyBCaXphcnJlUnVudGlt
ZVR5cGVFeGNlcHRpb24ncyBoZXJlLi4uKSBhbmQgcG9seW1vcnBoaXNtIC0gYWxsIHRoaW5ncyB3
aGljaCBhbGxvdyBtZSB0byB3cml0ZSBsZXNzIChhbmQgY2xlYXJlcikgY29kZSB0byBzb2x2ZSBh
IGdpdmVuIHByb2JsZW0uIEkgYWxzbyBmaW5kIHNvbWUgb2YgdGhlIG1vcmUgZXhvdGljIGZlYXR1
cmVzIHVzZWZ1bCAtIHByaXZhdGUgdHlwZXMgYW5kIHBvbHltb3JwaGljIHZhcmlhbnRzLCBmb3Ig
ZXhhbXBsZS4gSSdtIGZvcmNlZCB0byBwcm9ncmFtIGluIGEgZmV3IGxlc3MgZGVzaXJhYmxlIGxh
bmd1YWdlcyBmcm9tIHRpbWUgdG8gdGltZSBhbmQgc29yZWx5IG1pc3MgdGhlIGJhc2ljIGZlYXR1
cmVzIG9mIE1MLiBJJ2QgYWxzbyBlY2hvIFN5bHZhaW4ncyBwb2ludDogSSB0b28gZmluZCB0aGUg
dGltZSBzcGVudCB0ZXN0aW5nIGFuZCBkZWJ1Z2dpbmcgT0NhbWwgaXMgbXVjaCwgbXVjaCBsb3dl
ciB0aGFuLCBzYXksIGVxdWl2YWxlbnQgQygrKykgb3IgSmF2YSBjb2RlLiANCg0KUGVyc29uYWxs
eSwgSSd2ZSBmb3VuZCB0aGUgYmVzdCB3YXkgdG8gZmluZCBvdXQgaWYgeW91IGxpa2UgYSBuZXcg
cHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgaXMgdG8gd3JpdGUgYSBub24tdHJpdmlhbCBwcm9ncmFtIGlu
IGl0IChtYXliZSB3aXRoIHRoZSBvY2Nhc2lvbmFsIGFzc2lzdGFuY2Ugb2Ygc2tpbGxlZCBwZW9w
bGUgaW4gaXRzIGNvbW11bml0eSkgYW5kIHRoZW4gc2VlIHdoYXQgaGFwcGVucyB3aGVuIHlvdSBn
byBiYWNrIHRvIHByb2dyYW1taW5nIGluIHNvbWV0aGluZyB5b3UgdXNlZCBiZWZvcmUuDQoNCkFu
ZCBpZiBzcGVlZCByZWFsbHkgaXMgd29ycnlpbmcgeW91LCB0aGUgYmlnIHRoaW5nIHlvdSBtYXkg
aGF2ZSBub3RpY2VkIGZyb20gdGhlLCBhaGVtLCBzbGlnaHRseSBhbmltYXRlZCBkaXNjdXNzaW9u
IHRoYXQncyBmb2xsb3dlZCBpcyB0aGF0IHRoZXJlIGFyZSBwbGVudHkgb2YgcGVvcGxlIG9uIHRo
aXMgbGlzdCB3aG8ga25vdyBob3cgdG8gaGVscCB5b3UgaWRlbnRpZnkgd2hhdCdzIGNhdXNpbmcg
dGhlIHByb2JsZW0gYW5kIHRoZW4gb2ZmZXIgc3VnZ2VzdGlvbnMgdG8gdHdlYWsgaXQuIFBlcnNv
bmFsbHksIGluIHNpeCB5ZWFycyBvZiBwcm9ncmFtbWluZyBpbiBPQ2FtbCBmb3IgYSB2YXJpZXR5
IG9mIHRhc2tzIEkndmUgbmV2ZXIgaGl0IHRoZSBicmljayB3YWxsIHdoZXJlIEkgZmVsdCB0aGUg
dGFzayBJIHdhcyBjYXJyeWluZyBvdXQgd291bGQgaGF2ZSBiZWVuIG9yZGVycyBvZiBtYWduaXR1
ZGUgZmFzdGVyIGluIGFub3RoZXIgbGFuZ3VhZ2UgKmFuZCBhbHNvIGVhc3kgdG8gY29kZSBpbiB0
aGF0IGxhbmd1YWdlKiENCg0KSFRILA0KDQoNCkRhdmlkDQo=

