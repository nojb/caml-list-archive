Return-Path: <examachine@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id EE97CBCBF
	for <caml-list@yquem.inria.fr>; Thu, 18 Nov 2010 14:07:53 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: At0CAKIB5EzRVaC0k2dsb2JhbACBfZIkhigBhzZLCBYBAgkJCgkRAx+laYlighiFHi6IWQEBAwWFRgSKWIV7
X-IronPort-AV: E=Sophos;i="4.59,213,1288566000"; 
   d="scan'208";a="66836350"
Received: from mail-gy0-f180.google.com ([209.85.160.180])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 18 Nov 2010 01:28:21 +0100
Received: by gyg8 with SMTP id 8so1574040gyg.39
        for <caml-list@yquem.inria.fr>; Wed, 17 Nov 2010 16:28:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:received:in-reply-to
         :references:date:message-id:subject:from:to:cc:content-type;
        bh=9/tXJnAjZ+FXI9ZG7SBOxiKTUst6bTt3MvFrbIgLGYI=;
        b=QJfixouJwaxKvJ8b5xFzW4aMYiu0JAqd4ggTMk1Wc3JfKEaMfCGfuHGbnlhjfcJ7s+
         sP9qO4N89OwHpv7y4h8sf/chsqMpJ13Yip2VMxlvUqB8S6sWUGs5CAI+c2x+uaSshPTG
         h1cjWNl1Rk3ZASQJWY+7wCRTCEHsSh17WphdM=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        b=qHraYQhJ3DfFT20GHw3YMAmgdBYY7YkHFJcsqEiHwnW+JQsbhQAEs0JG9IfnckinHT
         oDgbtmiwa+FMlFOZiybzibDSTxFN5cu8ie3GaXheAFjCHnepkVpAQKbB0fHin/ZS4VOu
         PcEZP3pZO873hIi8gH7w97DiAGllZuJtgfz+o=
MIME-Version: 1.0
Received: by 10.90.2.18 with SMTP id 18mr12391901agb.86.1290040099019; Wed, 17
 Nov 2010 16:28:19 -0800 (PST)
Received: by 10.91.154.3 with HTTP; Wed, 17 Nov 2010 16:28:18 -0800 (PST)
In-Reply-To: <031301cb869c$8e33f120$aa9bd360$@com>
References: <20101115182737.42b8dcae@loki.yggdrasil.draxit.de>
	<4CE228CA.3030503@gmail.com>
	<1289927042.16005.176.camel@thinkpad>
	<AANLkTim2r0S7ZSmXFK87-u2PKRqvyuiBkH5rQfp7ju_C@mail.gmail.com>
	<1289945605.16005.205.camel@thinkpad>
	<AANLkTimgyL2xzUnuSzf-upSyjicffC-6-rgSK=EfxLTj@mail.gmail.com>
	<02be01cb860a$208f7aa0$61ae6fe0$@com>
	<AANLkTimpPf3_XRVL0Rp6WgQtQL56R6Vj_15ZPwkMyZJJ@mail.gmail.com>
	<20101117065011.GA2754@kerneis.info>
	<AANLkTiksTo_QQ8ypUr2TPV9P2nKotqkBTbHm0Y1pi_NN@mail.gmail.com>
	<031301cb869c$8e33f120$aa9bd360$@com>
Date: Thu, 18 Nov 2010 02:28:18 +0200
Message-ID: <AANLkTi=tS4EybFRP4pvbeUdncp9yjd7u5TCiGZN7N1aM@mail.gmail.com>
Subject: Re: [Caml-list] SMP multithreading
From: Eray Ozkural <examachine@gmail.com>
To: Jon Harrop <jonathandeanharrop@googlemail.com>
Cc: caml-list@yquem.inria.fr
Content-Type: multipart/alternative; boundary=0016363102e9d91b17049548ddcb
X-Spam: no; 0.00; eray:01 ozkural:01 cheers:01 eray:01 ozkural:01 0200,:01 doable:01 ocaml:01 compiler:01 pointer:01 compiler:01 gcc:01 ocaml:01 bilkent:01 bilkent:01 

--0016363102e9d91b17049548ddcb
Content-Type: text/plain; charset=ISO-8859-1

Yes, actually. :P

On Wed, Nov 17, 2010 at 11:15 PM, Jon Harrop <
jonathandeanharrop@googlemail.com> wrote:

> Can you cite any papers from this century? ;-)
>
>
>
> Cheers,
>
> Jon.
>
>
>
> *From:* Eray Ozkural [mailto:examachine@gmail.com]
> *Sent:* 17 November 2010 13:41
> *To:* Eray Ozkural; Jon Harrop; caml-list@yquem.inria.fr
>
> *Subject:* Re: [Caml-list] SMP multithreading
>
>
>
> On Wed, Nov 17, 2010 at 8:50 AM, Gabriel Kerneis <kerneis@pps.jussieu.fr>
> wrote:
>
> On Wed, Nov 17, 2010 at 06:27:14AM +0200, Eray Ozkural wrote:
> > As I said even in C good results can be achieved, I've seen that, so I
> > know it's doable with ocaml, just a difficult kind of compiler. The
> > functional features would expose more concurrency.
>
> Could you share a pointer to a paper describing this compiler?
>
>
> I can't reveal much, but just to point out that there are indeed more
> sophisticated compilers than gcc:
> http://www.research.ibm.com/vliw/compiler.html
>
> So, uh, there are compilers that turn loops into threads, and also
> parallelize independent blocks.... Both coarse-grain and fine-grain
> parallelization strategies in existing compiler research can be effectively
> applied to the multi-core architectures. In fact, some of the more advanced
> compilers (like that of the RAW architecture) must be able to target it
> already, but who knows. :) Just consider that most of the parallelization
> technology is language independent, they can be applied to any imperative
> language. So, would such a thing be able to work on ocaml generated
> binaries? Most definitely, I believe, it is in principle possible to start
> from the sequential binary and emit parallel code!
>
> Best,
>
>
>
> --
> Eray Ozkural, PhD candidate.  Comp. Sci. Dept., Bilkent University, Ankara
> http://groups.yahoo.com/group/ai-philosophy
> http://myspace.com/arizanesil http://myspace.com/malfunct
>



-- 
Eray Ozkural, PhD candidate.  Comp. Sci. Dept., Bilkent University, Ankara
http://groups.yahoo.com/group/ai-philosophy
http://myspace.com/arizanesil http://myspace.com/malfunct

--0016363102e9d91b17049548ddcb
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Yes, actually. :P<br><br><div class=3D"gmail_quote">On Wed, Nov 17, 2010 at=
 11:15 PM, Jon Harrop <span dir=3D"ltr">&lt;<a href=3D"mailto:jonathandeanh=
arrop@googlemail.com">jonathandeanharrop@googlemail.com</a>&gt;</span> wrot=
e:<br>
<blockquote class=3D"gmail_quote" style=3D"margin: 0pt 0pt 0pt 0.8ex; borde=
r-left: 1px solid rgb(204, 204, 204); padding-left: 1ex;"><div link=3D"blue=
" vlink=3D"purple" lang=3D"EN-GB"><div><p class=3D"MsoNormal"><span style=
=3D"font-size: 11pt; color: rgb(31, 73, 125);">Can you cite any papers from=
 this century? ;-)</span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 11pt; color: rgb(31, 73, 1=
25);">=A0</span></p><p class=3D"MsoNormal"><span style=3D"font-size: 11pt; =
color: rgb(31, 73, 125);">Cheers,</span></p><p class=3D"MsoNormal"><span st=
yle=3D"font-size: 11pt; color: rgb(31, 73, 125);">Jon.</span></p>
<p class=3D"MsoNormal"><span style=3D"font-size: 11pt; color: rgb(31, 73, 1=
25);">=A0</span></p><div style=3D"border-width: medium medium medium 1.5pt;=
 border-style: none none none solid; border-color: -moz-use-text-color -moz=
-use-text-color -moz-use-text-color blue; padding: 0cm 0cm 0cm 4pt;">
<div><div style=3D"border-width: 1pt medium medium; border-style: solid non=
e none; border-color: rgb(181, 196, 223) -moz-use-text-color -moz-use-text-=
color; padding: 3pt 0cm 0cm;"><p class=3D"MsoNormal"><b><span style=3D"font=
-size: 10pt;" lang=3D"EN-US">From:</span></b><span style=3D"font-size: 10pt=
;" lang=3D"EN-US"> Eray Ozkural [mailto:<a href=3D"mailto:examachine@gmail.=
com" target=3D"_blank">examachine@gmail.com</a>] <br>
<b>Sent:</b> 17 November 2010 13:41<br><b>To:</b> Eray Ozkural; Jon Harrop;=
 <a href=3D"mailto:caml-list@yquem.inria.fr" target=3D"_blank">caml-list@yq=
uem.inria.fr</a><div class=3D"im"><br><b>Subject:</b> Re: [Caml-list] SMP m=
ultithreading</div>
</span></p></div></div><p class=3D"MsoNormal">=A0</p><p class=3D"MsoNormal"=
>On Wed, Nov 17, 2010 at 8:50 AM, Gabriel Kerneis &lt;<a href=3D"mailto:ker=
neis@pps.jussieu.fr" target=3D"_blank">kerneis@pps.jussieu.fr</a>&gt; wrote=
:</p><div>
<div></div><div class=3D"h5"><div><blockquote style=3D"border-width: medium=
 medium medium 1pt; border-style: none none none solid; border-color: -moz-=
use-text-color -moz-use-text-color -moz-use-text-color rgb(204, 204, 204); =
padding: 0cm 0cm 0cm 6pt; margin-left: 4.8pt; margin-right: 0cm;">
<div><p class=3D"MsoNormal" style=3D"margin-bottom: 12pt;">On Wed, Nov 17, =
2010 at 06:27:14AM +0200, Eray Ozkural wrote:<br>&gt; As I said even in C g=
ood results can be achieved, I&#39;ve seen that, so I<br>&gt; know it&#39;s=
 doable with ocaml, just a difficult kind of compiler. The<br>
&gt; functional features would expose more concurrency.</p></div><p class=
=3D"MsoNormal" style=3D"margin-bottom: 12pt;">Could you share a pointer to =
a paper describing this compiler?</p></blockquote><div><p class=3D"MsoNorma=
l"><br>
I can&#39;t reveal much, but just to point out that there are indeed more s=
ophisticated compilers than gcc:<br><a href=3D"http://www.research.ibm.com/=
vliw/compiler.html" target=3D"_blank">http://www.research.ibm.com/vliw/comp=
iler.html</a>=A0 <br>
<br>So, uh, there are compilers that turn loops into threads, and also para=
llelize independent blocks.... Both coarse-grain and fine-grain paralleliza=
tion strategies in existing compiler research can be effectively applied to=
 the multi-core architectures. In fact, some of the more advanced compilers=
 (like that of the RAW architecture) must be able to target it already, but=
 who knows. :) Just consider that most of the parallelization technology is=
 language independent, they can be applied to any imperative language. So, =
would such a thing be able to work on ocaml generated binaries? Most defini=
tely, I believe, it is in principle possible to start from the sequential b=
inary and emit parallel code!<br>
<br>Best,</p></div></div><p class=3D"MsoNormal" style=3D"margin-bottom: 12p=
t;"><br clear=3D"all"><br>-- <br>Eray Ozkural, PhD candidate.=A0 Comp. Sci.=
 Dept., Bilkent University, Ankara<br><a href=3D"http://groups.yahoo.com/gr=
oup/ai-philosophy" target=3D"_blank">http://groups.yahoo.com/group/ai-philo=
sophy</a><br>
<a href=3D"http://myspace.com/arizanesil" target=3D"_blank">http://myspace.=
com/arizanesil</a> <a href=3D"http://myspace.com/malfunct" target=3D"_blank=
">http://myspace.com/malfunct</a></p></div></div></div></div></div></blockq=
uote>
</div><br><br clear=3D"all"><br>-- <br>Eray Ozkural, PhD candidate.=A0 Comp=
. Sci. Dept., Bilkent University, Ankara<br><a href=3D"http://groups.yahoo.=
com/group/ai-philosophy">http://groups.yahoo.com/group/ai-philosophy</a><br=
><a href=3D"http://myspace.com/arizanesil">http://myspace.com/arizanesil</a=
> <a href=3D"http://myspace.com/malfunct">http://myspace.com/malfunct</a><b=
r>
<br>

--0016363102e9d91b17049548ddcb--

