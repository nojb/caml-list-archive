Return-Path: <david.mentre@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 34B85BC58
	for <caml-list@yquem.inria.fr>; Fri,  5 Nov 2010 16:55:09 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApsBADvF00zRVaE0kGdsb2JhbAChZAgVAQEBAQkJDAcRAx+hO4tzhSyJBwEBAwWFQwSKVokj
X-IronPort-AV: E=Sophos;i="4.58,303,1286143200"; 
   d="scan'208";a="86378631"
Received: from mail-fx0-f52.google.com ([209.85.161.52])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 05 Nov 2010 16:55:08 +0100
Received: by fxm12 with SMTP id 12so2617099fxm.39
        for <caml-list@yquem.inria.fr>; Fri, 05 Nov 2010 08:55:08 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:mime-version:sender:received
         :in-reply-to:references:from:date:x-google-sender-auth:message-id
         :subject:to:cc:content-type;
        bh=P9/NazW9Z1CgsWKVHo7KDJv1Wk16eTZZo7lbTC3sHdg=;
        b=kKAGBHOKNj/aXK8F9IIuP7BDJLzr7I2PUPNNKmaQWOVN0RZiE457sCw2Xdd6qZUgSa
         UqtQqEbh2PIBMld0nwe040QF6qWWdMKuj03KppkekppOPpIYcmaJQ0r/Ihy8klSTKLbR
         Nx9FYhenO5pAdzpNUNW7a5haLUzif8ekgkD/o=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:sender:in-reply-to:references:from:date
         :x-google-sender-auth:message-id:subject:to:cc:content-type;
        b=AkrGIIByOAOqFWQel6QDl071mvwcpwZJLq9fun42h9dpqk7PjOWwpm2gEu99CAaIQP
         Y1t8unY56WgQf2O1tKEvbG6payBMjYPguR7/Ryo9y/AqL/TJR99fDhK5UpOrm6Zrf/3U
         R5SPH9XiaJM8b61ByDlY1Cs5Vd+u9UP/Z062E=
Received: by 10.223.107.16 with SMTP id z16mr1125015fao.7.1288972508066; Fri,
 05 Nov 2010 08:55:08 -0700 (PDT)
MIME-Version: 1.0
Sender: david.mentre@gmail.com
Received: by 10.223.112.129 with HTTP; Fri, 5 Nov 2010 08:54:37 -0700 (PDT)
In-Reply-To: <AANLkTim_gzPoE_+xcFWveDo_bRRn00hsff3JGqk4w9Dy@mail.gmail.com>
References: <AANLkTi=SqQpDJc4p8nq9zRuTK5n6ctu8meZFF_Fp7HJg@mail.gmail.com>
 <201011042125.38754.raphlalou@gmail.com> <AANLkTim_gzPoE_+xcFWveDo_bRRn00hsff3JGqk4w9Dy@mail.gmail.com>
From: David MENTRE <dmentre@linux-france.org>
Date: Fri, 5 Nov 2010 16:54:37 +0100
X-Google-Sender-Auth: Ci2lRiJ6Y_3BohKNaVnF5qKPGsM
Message-ID: <AANLkTikkYBHuBD573uzSWf=pfRAHCtW=rkDs_kV+tu7E@mail.gmail.com>
Subject: Re: [Caml-list] Causes for segfaults
To: Jamie Brandon <jamie@scattered-thoughts.net>
Cc: caml-list@yquem.inria.fr
Content-Type: text/plain; charset=ISO-8859-1
X-Spam: no; 0.00; segfaults:01 segfault:01 segfault:01 brandon:98 caml-list:01 data:02 guess:04 structure:07 causes:10 resulting:11 accessing:12 source:12 but:14 david:14 david:14 

Hello,

2010/11/4 Jamie Brandon <jamie@scattered-thoughts.net>:
> The unmarshalling itself finishes ok but I guess the
> segfault could be caused when accessing the resulting data structure?

You could frequently call major collection in the GC, in order to be
as close as possible to the source of the segfault (e.g. after your
unmarshalling).

Sincerely yours,
david

