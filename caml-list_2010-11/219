Return-Path: <damien.doligez@inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 8065EBBAF
	for <caml-list@yquem.inria.fr>; Mon, 22 Nov 2010 16:10:49 +0100 (CET)
X-IronPort-AV: E=Sophos;i="4.59,236,1288566000"; 
   d="scan'208";a="89096417"
Received: from macadam.inria.fr ([128.93.8.130])
  by mail1-relais-roc.national.inria.fr with ESMTP/TLS/AES128-SHA; 22 Nov 2010 16:10:49 +0100
Content-Type: text/plain; charset=us-ascii
Mime-Version: 1.0 (Apple Message framework v1082)
Subject: Re: [Caml-list] Optimizing garbage collection
From: Damien Doligez <damien.doligez@inria.fr>
In-Reply-To: <577267187.967802.1290367612809.JavaMail.root@zmbs1.inria.fr>
Date: Mon, 22 Nov 2010 16:10:49 +0100
Content-Transfer-Encoding: quoted-printable
Message-Id: <B5DE1B36-F301-42DC-AC95-2513E35BA22F@inria.fr>
References: <AANLkTi=_oPMzTXgSyna1uouzqK6hm9Cw7gTXdvDTpjEn@mail.gmail.com> <4CE68FAB.6020102@elehack.net> <AANLkTimeHGr_z06WBeJ=MNLJUfBHJG7kp1ngcHwJZTBn@mail.gmail.com> <AANLkTin5W=As-TkqcvjXY9eceRJiPJTb3O42Yueuf+Dx@mail.gmail.com> <577267187.967802.1290367612809.JavaMail.root@zmbs1.inria.fr>
To: OCaml mailing list <caml-list@yquem.inria.fr>
X-Mailer: Apple Mail (2.1082)
X-Spam: no; 0.00; damien:01 damien:01 eray:01 ozkural:01 uniformly:01 26,:98 doligez:01 doligez:01 garbage:01 wrote:01 heap:01 heap:01 caml-list:01 minor:01 minor:01 


On 2010-11-21, at 20:26, Eray Ozkural wrote:

> I've been thinking whether some kind of doubling strategy would work =
for the minor heap size. What do you think?

Sounds like an interesting idea, but what heuristic would you use?
When everything is smooth, the running time decreases something like
exponentially with the minor heap size, so you'd always want to
increase the size.  How do you tell when to stop?  And then, if the
program is not behaving uniformly, when do you decide to reduce
the size?

-- Damien

