Return-Path: <examachine@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 81BE1BC57
	for <caml-list@yquem.inria.fr>; Tue, 16 Nov 2010 21:35:44 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AsYEADt64kzRVdW0k2dsb2JhbACGPY10hicBhzZNCBUBAQEBCQkKCREDH6YNiWKCGIUOLohZAQEDBYVGBIpY
X-IronPort-AV: E=Sophos;i="4.59,207,1288566000"; 
   d="scan'208";a="78644264"
Received: from mail-yx0-f180.google.com ([209.85.213.180])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 16 Nov 2010 21:35:32 +0100
Received: by yxj4 with SMTP id 4so673695yxj.39
        for <caml-list@yquem.inria.fr>; Tue, 16 Nov 2010 12:35:30 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:received:in-reply-to
         :references:date:message-id:subject:from:to:cc:content-type;
        bh=H8Bv89B1GoNbzEkp/JUW1SPzmvz751O+SRrqydKkrI4=;
        b=DHDxH+/0AlwMhwMFewrbX8+CCEFGFfQDr076NSLFSopZtYQJU45v8Qyqt3SC12F6aN
         dk5+s5+pH73XJETXC+Ycpro4zwMSn9cA6YiNp8PRJvR3RDPGyfhRcsYR/caG6s1WhH1d
         cfou3KQXoNhUwKVJ1zY5uLZ6/Q5ACBQ/8af70=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        b=gYJhmzL9FdZ7VNgG+6Wg0cfeyOix99hZQNWmr3ZlzfOmsBBD8cbybOCzHeEFVeefEQ
         s/jHcggf0qyAZPJxiYGChoYQ4iOQ3gLnUdO5BEqu0Msd4/s66GHyp5Yj8yGCQhh4gKvz
         DsVIv9kSYFEa6ir18FGT2XhF/lbVW6tjpfZFw=
MIME-Version: 1.0
Received: by 10.91.7.15 with SMTP id k15mr10199151agi.167.1289939729953; Tue,
 16 Nov 2010 12:35:29 -0800 (PST)
Received: by 10.91.154.3 with HTTP; Tue, 16 Nov 2010 12:35:29 -0800 (PST)
In-Reply-To: <1289927042.16005.176.camel@thinkpad>
References: <20101115182737.42b8dcae@loki.yggdrasil.draxit.de>
	<4CE228CA.3030503@gmail.com>
	<1289927042.16005.176.camel@thinkpad>
Date: Tue, 16 Nov 2010 22:35:29 +0200
Message-ID: <AANLkTim2r0S7ZSmXFK87-u2PKRqvyuiBkH5rQfp7ju_C@mail.gmail.com>
Subject: Re: [Caml-list] SMP multithreading
From: Eray Ozkural <examachine@gmail.com>
To: Gerd Stolpmann <info@gerd-stolpmann.de>
Cc: Edgar Friendly <thelema314@gmail.com>, caml-list@yquem.inria.fr
Content-Type: multipart/alternative; boundary=00163628415662b3180495317f52
X-Spam: no; 0.00; eray:01 ozkural:01 gerd:01 stolpmann:01 compiler:01 runtime:01 runtime:01 compiler:01 eray:01 ozkural:01 bilkent:01 gerd:01 stolpmann:01 bilkent:01 edgar:98 

--00163628415662b3180495317f52
Content-Type: text/plain; charset=ISO-8859-1

On Tue, Nov 16, 2010 at 7:04 PM, Gerd Stolpmann <info@gerd-stolpmann.de>wrote:

> Am Montag, den 15.11.2010, 22:46 -0800 schrieb Edgar Friendly:
>      * As somebody mentioned "implicit parallelization": Don't expect
>        anything from this. Even if a good compiler finds ways to
>        parallelize 20% of the code (which would be a lot), the runtime
>        effect would be marginal. 80% of the code is run at normal speed
>        (hopefully) and dominates the runtime behavior. The point is
>        that such compiler-driven code improvements are only local
>        optimizations. For getting good parallelization results you need
>        to restructure the design of the program - well, maybe
>        compiler2.0 can do this at some time, but this is not in sight.
>

I think you are underestimating parallelizing compilers.


-- 
Eray Ozkural, PhD candidate.  Comp. Sci. Dept., Bilkent University, Ankara
http://groups.yahoo.com/group/ai-philosophy
http://myspace.com/arizanesil http://myspace.com/malfunct

--00163628415662b3180495317f52
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<br><br><div class=3D"gmail_quote">On Tue, Nov 16, 2010 at 7:04 PM, Gerd St=
olpmann <span dir=3D"ltr">&lt;<a href=3D"mailto:info@gerd-stolpmann.de">inf=
o@gerd-stolpmann.de</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quo=
te" style=3D"margin: 0pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(204, 204=
, 204); padding-left: 1ex;">
Am Montag, den 15.11.2010, 22:46 -0800 schrieb Edgar Friendly: <br>
 =A0 =A0 =A0* As somebody mentioned &quot;implicit parallelization&quot;: D=
on&#39;t expect<br>
 =A0 =A0 =A0 =A0anything from this. Even if a good compiler finds ways to<b=
r>
 =A0 =A0 =A0 =A0parallelize 20% of the code (which would be a lot), the run=
time<br>
 =A0 =A0 =A0 =A0effect would be marginal. 80% of the code is run at normal =
speed<br>
 =A0 =A0 =A0 =A0(hopefully) and dominates the runtime behavior. The point i=
s<br>
 =A0 =A0 =A0 =A0that such compiler-driven code improvements are only local<=
br>
 =A0 =A0 =A0 =A0optimizations. For getting good parallelization results you=
 need<br>
 =A0 =A0 =A0 =A0to restructure the design of the program - well, maybe<br>
 =A0 =A0 =A0 =A0compiler2.0 can do this at some time, but this is not in si=
ght. <br></blockquote><div><br>I think you are underestimating parallelizin=
g compilers. <br></div></div><br clear=3D"all"><br>-- <br>Eray Ozkural, PhD=
 candidate.=A0 Comp. Sci. Dept., Bilkent University, Ankara<br>
<a href=3D"http://groups.yahoo.com/group/ai-philosophy">http://groups.yahoo=
.com/group/ai-philosophy</a><br><a href=3D"http://myspace.com/arizanesil">h=
ttp://myspace.com/arizanesil</a> <a href=3D"http://myspace.com/malfunct">ht=
tp://myspace.com/malfunct</a><br>
<br>

--00163628415662b3180495317f52--

