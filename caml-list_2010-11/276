Return-Path: <gclci-caml-list@m.gmane.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id EF86EBBAF
	for <caml-list@yquem.inria.fr>; Tue, 23 Nov 2010 22:55:38 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqoEAIvG60xQW+UMgWdsb2JhbACBVYF5kReOBBUBARYiIq1pPIcliQyBIoM2cwSKXg
X-IronPort-AV: E=Sophos;i="4.59,244,1288566000"; 
   d="scan'208";a="80812903"
Received: from lo.gmane.org ([80.91.229.12])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 23 Nov 2010 22:55:38 +0100
Received: from list by lo.gmane.org with local (Exim 4.69)
	(envelope-from <gclci-caml-list@m.gmane.org>)
	id 1PL0pt-0006wQ-UH
	for caml-list@inria.fr; Tue, 23 Nov 2010 22:55:37 +0100
Received: from c-24-4-7-10.hsd1.ca.comcast.net ([24.4.7.10])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Tue, 23 Nov 2010 22:55:37 +0100
Received: from igouy2 by c-24-4-7-10.hsd1.ca.comcast.net with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Tue, 23 Nov 2010 22:55:37 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: caml-list@inria.fr
From: Isaac Gouy <igouy2@yahoo.com>
Subject: Re: Is OCaml fast?
Date: Tue, 23 Nov 2010 21:55:19 +0000 (UTC)
Lines: 24
Message-ID: <loom.20101123T223401-560@post.gmane.org>
References: <loom.20101123T030214-243@post.gmane.org> <20101123.113733.2059974256209184038.Christophe.Troestler+ocaml@umons.ac.be> <loom.20101123T183441-692@post.gmane.org> <20101123.221424.782590833114439172.Christophe.Troestler+ocaml@umons.ac.be>
Mime-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8bit
X-Complaints-To: usenet@dough.gmane.org
X-Gmane-NNTP-Posting-Host: sea.gmane.org
User-Agent: Loom/3.14 (http://gmane.org/)
X-Loom-IP: 24.4.7.10 (Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.12) Gecko/20101027 Ubuntu/10.10 (maverick) Firefox/3.6.12)
X-Spam: no; 0.00; ocaml:01 christophe:01 troestler:01 christophe:01 troestler:01 ocaml:01 malloc:01 precisely:01 umh:01 writes:01 external:03 external:03 programming:03 library:03 library:03 

Christophe TROESTLER <Christophe.Troestler+ocaml <at> umh.ac.be> writes:

-snip-
> The question is why is C allowed to use
> an external library for managing its memory

I asked why you think C should not be allowed to use memory pools - you haven't
tried to answer that question.

If you think that C should not be allowed to use memory pools because they are
provided in an external library then I disagree - I think it's fine to show use
of popular external libraries.

Of course, a C program that just uses malloc is also shown.


> but — for this specific
> benchmark which is precisely about managing memory — OCaml is not
> authorized to make use of its very own library!

OCaml is authorized to make use of its very own library.

Just like all the other programming language implementations, for binary-trees,
OCaml is not authorized to tune the GC.

