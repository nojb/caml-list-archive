Return-Path: <examachine@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 3E12CBCF1
	for <caml-list@yquem.inria.fr>; Thu, 18 Nov 2010 14:16:01 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AiMDACIJ5EzRVdW0k2dsb2JhbACBfZIkMoV2AYc2SwgWAQIJCQoJEQMfpVSJYoIYhRsuiFkBAQMFhUYEgVyIfIV7
X-IronPort-AV: E=Sophos;i="4.59,214,1288566000"; 
   d="scan'208";a="79586519"
Received: from mail-yx0-f180.google.com ([209.85.213.180])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 18 Nov 2010 02:00:10 +0100
Received: by yxj4 with SMTP id 4so1588416yxj.39
        for <caml-list@yquem.inria.fr>; Wed, 17 Nov 2010 17:00:10 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:received:in-reply-to
         :references:date:message-id:subject:from:to:cc:content-type;
        bh=G6owPuS3cUHDhIyW9s+vBocYmji/XQB7t0gwnviKetE=;
        b=up+x4FUqD1nuwiQUTPrnAdjed97/IjusQhMmOlV7IGHQ2wDY4ocdsW5BJrXmtQYzZT
         Xz/fVytpV6vaEg93/3pr5g3S2Yf3bHUbo0T+N2QLleAs5r7vb34nzzSDZ7gpR/T/qX6e
         /syFcz021bnxHuk5NPSdWlViuX1rlrwg4bbMg=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        b=UsnZ5MyLJLwFzXxYW6koJt9xM753Z2Q1TQnEqnlJvwvfIMx5mbcgZ+I0JjOuhiTUpk
         4DI/Sh97hcZYx8+BVAhTR5en9pTk7hZ20zVnY81jSJZyhZh8mtQwIGarhIHOhQci2vvM
         m+wm1ZKLINlZkior8cVboB1dAJuuLMXZhEFT4=
MIME-Version: 1.0
Received: by 10.90.27.14 with SMTP id a14mr3310aga.113.1290042009203; Wed, 17
 Nov 2010 17:00:09 -0800 (PST)
Received: by 10.91.154.3 with HTTP; Wed, 17 Nov 2010 17:00:09 -0800 (PST)
In-Reply-To: <AANLkTi=tS4EybFRP4pvbeUdncp9yjd7u5TCiGZN7N1aM@mail.gmail.com>
References: <20101115182737.42b8dcae@loki.yggdrasil.draxit.de>
	<4CE228CA.3030503@gmail.com>
	<1289927042.16005.176.camel@thinkpad>
	<AANLkTim2r0S7ZSmXFK87-u2PKRqvyuiBkH5rQfp7ju_C@mail.gmail.com>
	<1289945605.16005.205.camel@thinkpad>
	<AANLkTimgyL2xzUnuSzf-upSyjicffC-6-rgSK=EfxLTj@mail.gmail.com>
	<02be01cb860a$208f7aa0$61ae6fe0$@com>
	<AANLkTimpPf3_XRVL0Rp6WgQtQL56R6Vj_15ZPwkMyZJJ@mail.gmail.com>
	<20101117065011.GA2754@kerneis.info>
	<AANLkTiksTo_QQ8ypUr2TPV9P2nKotqkBTbHm0Y1pi_NN@mail.gmail.com>
	<031301cb869c$8e33f120$aa9bd360$@com>
	<AANLkTi=tS4EybFRP4pvbeUdncp9yjd7u5TCiGZN7N1aM@mail.gmail.com>
Date: Thu, 18 Nov 2010 03:00:09 +0200
Message-ID: <AANLkTimPYO5hLZogR3E=cX+2r3aND2fBcYgFkvW6S_g-@mail.gmail.com>
Subject: Re: [Caml-list] SMP multithreading
From: Eray Ozkural <examachine@gmail.com>
To: Jon Harrop <jonathandeanharrop@googlemail.com>
Cc: caml-list@yquem.inria.fr
Content-Type: multipart/alternative; boundary=001636163d99b4325f0495494f41
X-Spam: no; 0.00; eray:01 ozkural:01 compiler:01 compiler:01 compilation:01 algebra:01 hpf:01 utils:01 computations:01 cheers:01 eray:01 ozkural:01 cheers:01 0200,:01 doable:01 

--001636163d99b4325f0495494f41
Content-Type: text/plain; charset=ISO-8859-1

http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=1650134

This is one of the more recent papers a quick search turns up, but you have
to keep in mind that thread extraction is only one problem among many for a
parallelizing compiler. I think the keyword you are looking for is "thread
extraction". And here probably, it's the simplest kind of extraction... Food
for some thought: assume that you have a very good compiler pass that
extracts all possible threads in the sequential code, can you name any other
problems the compiler must solve to achieve good performance?

I can't talk at all about the project I worked on, but as I mentioned
previously, familiarize yourself with the RAW project, it was similar in
some respects to the project I worked in:
http://groups.csail.mit.edu/cag/raw/

This should, at least a bit, dispel the illusion that parallelizing
compilers are helpless when they confront C code. Reading the OS/400 book
had opened my mind about OS design, perhaps reading about recent computer
architecture research projects will open others' eyes about compilers, and
how useful they really can be!

Also, I believe there ought to be some textbooks about multi-core
architectures and relevant compilation strategies, let me post it if I find
a comprehensive reference.

The dream compiler would have all the cool linear algebra capabilities of
HPF + the more general/free-form kinds of parallelization strategies in
recent compilers.

Ok, so what you really want to do is, parallelize applications that can
benefit from them. Not file utils or web browsers. If you are so curious,
stuff like povray would be in the test suite. Sometimes the parallelizing
compiler parallelizes computations that a programmer wouldn't bother due to
program complexity, here a basic block, there a basic block, some pipelining
communication/computation overlap there.... I think it's a safe bet to say
that, with all the general lameness surrounding parallel programming
languages, parallelizing compilers will be very important in the near
future.

Cheers,

On Thu, Nov 18, 2010 at 2:28 AM, Eray Ozkural <examachine@gmail.com> wrote:

> Yes, actually. :P
>
>
> On Wed, Nov 17, 2010 at 11:15 PM, Jon Harrop <
> jonathandeanharrop@googlemail.com> wrote:
>
>> Can you cite any papers from this century? ;-)
>>
>>
>>
>> Cheers,
>>
>> Jon.
>>
>>
>>
>> *From:* Eray Ozkural [mailto:examachine@gmail.com]
>> *Sent:* 17 November 2010 13:41
>> *To:* Eray Ozkural; Jon Harrop; caml-list@yquem.inria.fr
>>
>> *Subject:* Re: [Caml-list] SMP multithreading
>>
>>
>>
>> On Wed, Nov 17, 2010 at 8:50 AM, Gabriel Kerneis <kerneis@pps.jussieu.fr>
>> wrote:
>>
>> On Wed, Nov 17, 2010 at 06:27:14AM +0200, Eray Ozkural wrote:
>> > As I said even in C good results can be achieved, I've seen that, so I
>> > know it's doable with ocaml, just a difficult kind of compiler. The
>> > functional features would expose more concurrency.
>>
>> Could you share a pointer to a paper describing this compiler?
>>
>>
>> I can't reveal much, but just to point out that there are indeed more
>> sophisticated compilers than gcc:
>> http://www.research.ibm.com/vliw/compiler.html
>>
>> So, uh, there are compilers that turn loops into threads, and also
>> parallelize independent blocks.... Both coarse-grain and fine-grain
>> parallelization strategies in existing compiler research can be effectively
>> applied to the multi-core architectures. In fact, some of the more advanced
>> compilers (like that of the RAW architecture) must be able to target it
>> already, but who knows. :) Just consider that most of the parallelization
>> technology is language independent, they can be applied to any imperative
>> language. So, would such a thing be able to work on ocaml generated
>> binaries? Most definitely, I believe, it is in principle possible to start
>> from the sequential binary and emit parallel code!
>>
>> Best,
>>
>>
>>
>> --
>> Eray Ozkural, PhD candidate.  Comp. Sci. Dept., Bilkent University, Ankara
>> http://groups.yahoo.com/group/ai-philosophy
>> http://myspace.com/arizanesil http://myspace.com/malfunct
>>
>
>
>
> --
> Eray Ozkural, PhD candidate.  Comp. Sci. Dept., Bilkent University, Ankara
> http://groups.yahoo.com/group/ai-philosophy
> http://myspace.com/arizanesil http://myspace.com/malfunct
>
>


-- 
Eray Ozkural, PhD candidate.  Comp. Sci. Dept., Bilkent University, Ankara
http://groups.yahoo.com/group/ai-philosophy
http://myspace.com/arizanesil http://myspace.com/malfunct

--001636163d99b4325f0495494f41
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<a href=3D"http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=3D165013=
4">http://ieeexplore.ieee.org/xpl/freeabs_all.jsp?arnumber=3D1650134</a><br=
><br>This is one of the more recent papers a quick search turns up, but you=
 have to keep in mind that thread extraction is only one problem among many=
 for a parallelizing compiler. I think the keyword you are looking for is &=
quot;thread extraction&quot;. And here probably, it&#39;s the simplest kind=
 of extraction... Food for some thought: assume that you have a very good c=
ompiler pass that extracts all possible threads in the sequential code, can=
 you name any other problems the compiler must solve to achieve good perfor=
mance?<br>
<br>I can&#39;t talk at all about the project I worked on, but as I mention=
ed previously, familiarize yourself with the RAW project, it was similar in=
 some respects to the project I worked in:<br><a href=3D"http://groups.csai=
l.mit.edu/cag/raw/">http://groups.csail.mit.edu/cag/raw/</a><br>
<br>This should, at least a bit, dispel the illusion that parallelizing com=
pilers are helpless when they confront C code. Reading the OS/400 book had =
opened my mind about OS design, perhaps reading about recent computer archi=
tecture research projects will open others&#39; eyes about compilers, and h=
ow useful they really can be!<br>
<br>Also, I believe there ought to be some textbooks about multi-core archi=
tectures and relevant compilation strategies, let me post it if I find a co=
mprehensive reference.<br><br>The dream compiler would have all the cool li=
near algebra capabilities of HPF + the more general/free-form kinds of para=
llelization strategies in recent compilers.<br>
<br>Ok, so what you really want to do is, parallelize applications that can=
 benefit from them. Not file utils or web browsers. If you are so curious, =
stuff like povray would be in the test suite. Sometimes the parallelizing c=
ompiler parallelizes computations that a programmer wouldn&#39;t bother due=
 to program complexity, here a basic block, there a basic block, some pipel=
ining communication/computation overlap there.... I think it&#39;s a safe b=
et to say that, with all the general lameness surrounding parallel programm=
ing languages, parallelizing compilers will be very important in the near f=
uture.<br>
<br>Cheers,<br><br><div class=3D"gmail_quote">On Thu, Nov 18, 2010 at 2:28 =
AM, Eray Ozkural <span dir=3D"ltr">&lt;<a href=3D"mailto:examachine@gmail.c=
om">examachine@gmail.com</a>&gt;</span> wrote:<br><blockquote class=3D"gmai=
l_quote" style=3D"margin: 0pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(204=
, 204, 204); padding-left: 1ex;">
Yes, actually. :P<div><div></div><div class=3D"h5"><br><br><div class=3D"gm=
ail_quote">On Wed, Nov 17, 2010 at 11:15 PM, Jon Harrop <span dir=3D"ltr">&=
lt;<a href=3D"mailto:jonathandeanharrop@googlemail.com" target=3D"_blank">j=
onathandeanharrop@googlemail.com</a>&gt;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"margin: 0pt 0pt 0pt 0.8ex; borde=
r-left: 1px solid rgb(204, 204, 204); padding-left: 1ex;"><div link=3D"blue=
" vlink=3D"purple" lang=3D"EN-GB"><div><p class=3D"MsoNormal"><span style=
=3D"font-size: 11pt; color: rgb(31, 73, 125);">Can you cite any papers from=
 this century? ;-)</span></p>

<p class=3D"MsoNormal"><span style=3D"font-size: 11pt; color: rgb(31, 73, 1=
25);">=A0</span></p><p class=3D"MsoNormal"><span style=3D"font-size: 11pt; =
color: rgb(31, 73, 125);">Cheers,</span></p><p class=3D"MsoNormal"><span st=
yle=3D"font-size: 11pt; color: rgb(31, 73, 125);">Jon.</span></p>

<p class=3D"MsoNormal"><span style=3D"font-size: 11pt; color: rgb(31, 73, 1=
25);">=A0</span></p><div style=3D"border-width: medium medium medium 1.5pt;=
 border-style: none none none solid; border-color: -moz-use-text-color -moz=
-use-text-color -moz-use-text-color blue; padding: 0cm 0cm 0cm 4pt;">

<div><div style=3D"border-width: 1pt medium medium; border-style: solid non=
e none; border-color: rgb(181, 196, 223) -moz-use-text-color -moz-use-text-=
color; padding: 3pt 0cm 0cm;"><p class=3D"MsoNormal"><b><span style=3D"font=
-size: 10pt;" lang=3D"EN-US">From:</span></b><span style=3D"font-size: 10pt=
;" lang=3D"EN-US"> Eray Ozkural [mailto:<a href=3D"mailto:examachine@gmail.=
com" target=3D"_blank">examachine@gmail.com</a>] <br>

<b>Sent:</b> 17 November 2010 13:41<br><b>To:</b> Eray Ozkural; Jon Harrop;=
 <a href=3D"mailto:caml-list@yquem.inria.fr" target=3D"_blank">caml-list@yq=
uem.inria.fr</a><div><br><b>Subject:</b> Re: [Caml-list] SMP multithreading=
</div>

</span></p></div></div><p class=3D"MsoNormal">=A0</p><p class=3D"MsoNormal"=
>On Wed, Nov 17, 2010 at 8:50 AM, Gabriel Kerneis &lt;<a href=3D"mailto:ker=
neis@pps.jussieu.fr" target=3D"_blank">kerneis@pps.jussieu.fr</a>&gt; wrote=
:</p>
<div>
<div></div><div><div><blockquote style=3D"border-width: medium medium mediu=
m 1pt; border-style: none none none solid; border-color: -moz-use-text-colo=
r -moz-use-text-color -moz-use-text-color rgb(204, 204, 204); padding: 0cm =
0cm 0cm 6pt; margin-left: 4.8pt; margin-right: 0cm;">

<div><p class=3D"MsoNormal" style=3D"margin-bottom: 12pt;">On Wed, Nov 17, =
2010 at 06:27:14AM +0200, Eray Ozkural wrote:<br>&gt; As I said even in C g=
ood results can be achieved, I&#39;ve seen that, so I<br>&gt; know it&#39;s=
 doable with ocaml, just a difficult kind of compiler. The<br>

&gt; functional features would expose more concurrency.</p></div><p class=
=3D"MsoNormal" style=3D"margin-bottom: 12pt;">Could you share a pointer to =
a paper describing this compiler?</p></blockquote><div><p class=3D"MsoNorma=
l">
<br>
I can&#39;t reveal much, but just to point out that there are indeed more s=
ophisticated compilers than gcc:<br><a href=3D"http://www.research.ibm.com/=
vliw/compiler.html" target=3D"_blank">http://www.research.ibm.com/vliw/comp=
iler.html</a>=A0 <br>

<br>So, uh, there are compilers that turn loops into threads, and also para=
llelize independent blocks.... Both coarse-grain and fine-grain paralleliza=
tion strategies in existing compiler research can be effectively applied to=
 the multi-core architectures. In fact, some of the more advanced compilers=
 (like that of the RAW architecture) must be able to target it already, but=
 who knows. :) Just consider that most of the parallelization technology is=
 language independent, they can be applied to any imperative language. So, =
would such a thing be able to work on ocaml generated binaries? Most defini=
tely, I believe, it is in principle possible to start from the sequential b=
inary and emit parallel code!<br>

<br>Best,</p></div></div><p class=3D"MsoNormal" style=3D"margin-bottom: 12p=
t;"><br clear=3D"all"><br>-- <br>Eray Ozkural, PhD candidate.=A0 Comp. Sci.=
 Dept., Bilkent University, Ankara<br><a href=3D"http://groups.yahoo.com/gr=
oup/ai-philosophy" target=3D"_blank">http://groups.yahoo.com/group/ai-philo=
sophy</a><br>

<a href=3D"http://myspace.com/arizanesil" target=3D"_blank">http://myspace.=
com/arizanesil</a> <a href=3D"http://myspace.com/malfunct" target=3D"_blank=
">http://myspace.com/malfunct</a></p></div></div></div></div></div></blockq=
uote>

</div><br><br clear=3D"all"><br>-- <br>Eray Ozkural, PhD candidate.=A0 Comp=
. Sci. Dept., Bilkent University, Ankara<br><a href=3D"http://groups.yahoo.=
com/group/ai-philosophy" target=3D"_blank">http://groups.yahoo.com/group/ai=
-philosophy</a><br>
<a href=3D"http://myspace.com/arizanesil" target=3D"_blank">http://myspace.=
com/arizanesil</a> <a href=3D"http://myspace.com/malfunct" target=3D"_blank=
">http://myspace.com/malfunct</a><br>
<br>
</div></div></blockquote></div><br><br clear=3D"all"><br>-- <br>Eray Ozkura=
l, PhD candidate.=A0 Comp. Sci. Dept., Bilkent University, Ankara<br><a hre=
f=3D"http://groups.yahoo.com/group/ai-philosophy">http://groups.yahoo.com/g=
roup/ai-philosophy</a><br>
<a href=3D"http://myspace.com/arizanesil">http://myspace.com/arizanesil</a>=
 <a href=3D"http://myspace.com/malfunct">http://myspace.com/malfunct</a><br=
><br>

--001636163d99b4325f0495494f41--

