Return-Path: <daniel.de_rauglaudre@inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 594E7BBAF
	for <caml-list@yquem.inria.fr>; Tue,  9 Nov 2010 12:02:11 +0100 (CET)
X-IronPort-AV: E=Sophos;i="4.59,174,1288566000"; 
   d="scan'208";a="86587933"
Received: from yquem.inria.fr ([128.93.8.37])
  by mail1-relais-roc.national.inria.fr with ESMTP; 09 Nov 2010 12:02:11 +0100
Received: by yquem.inria.fr (Postfix, from userid 25991)
	id 42700BBAF; Tue,  9 Nov 2010 12:02:11 +0100 (CET)
Date: Tue, 9 Nov 2010 12:02:11 +0100
From: Daniel de Rauglaudre <daniel.de_rauglaudre@inria.fr>
To: caml-list@inria.fr
Subject: Re: [Caml-list] MLbrot: Mandelbrot Set in OCaml
Message-ID: <20101109110211.GA32550@yquem.inria.fr>
References: <20101108150313.GA11054@yquem.inria.fr> <698193382.354372.1289232453372.JavaMail.root@zmbs3.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <698193382.354372.1289232453372.JavaMail.root@zmbs3.inria.fr>
User-Agent: Mutt/1.5.9i
X-Spam: no; 0.00; rauglaudre:01 rauglaudre:01 ocaml:01 0100,:01 recenter:01 'x':01 'x':01 iteration:01 iterated:01 iteration:01 ocaml:01 gtk:01 homeip:01 zoom:98 zoom:98 

Hi,

On Mon, Nov 08, 2010 at 05:07:33PM +0100, Goswin von Brederlow wrote:

> Only looked at the pictures so far but they do look good. I'm missing
> some screenshots though. How does the interface look like? I assume you
> have some way to select a part of the image to zoom?

When clicking with left button, you zoom (twice) centered to that
point. Middle button: recenter. Right button: unzoom. And the keys
'z' and 'x' zoom and unzoom, 'Z' and 'X' do it 10 times.

> It would also be nice to know a bit more about what drawing methods you
> support. Do you just compute every pixel or do you support guessing,
> boundary trace, tesseracting?

I compute every pixel. I searched on the Internet for faster algorithms
but I did not find. What are guessing, boundary trace and tesseracting ?
Well, I am going to google these terms :-)

> Also do you have a coloring mode using distance estimation?
> E.g. color all points < 0.5 pixels distance from the M-Set white.

No. I see that I have many things to learn... :-)

> Can you zoom and refine the image like xaos does?

I did not know xaos, so I installed it, and tested it a little. Well, it
is very fast indeed! Yes, I refine the image (you mean around Mandelbrot
islands ?) by extending the number of iterations some times.

> Do you support the single orbital iteration method? That puts a 3x3
> points grid over the image plus 4 control points. Points of the image
> are aproximated from the 9 grid points. The 13 points are iterated a few
> iterations as long as the 4 reference points are close to approximating
> the same points. If the error becomes to great you go back an iteration,
> subdivide the grid into 4 parts, approximate the missing point and
> repeat for each subgrid. Esspecially on dep zooms this can speed up
> calculations by magnitudes since the first few thousand iterations of
> each point will be done by calculating only 14 points and approximating.

Oops, I have to read that again, that seems interesting but at the
first reading, I don't understand everything.

> You say you are using OpenGL, so where are the 3D images?

History:

I was just looking for a graphic toolkit instead of mine (olibrt,
which is old and works only on X Window). Many people here (Inria)
use OpenGL, to indeed doing 3D, so I tested, but only in 2D. Well,
actually, I tested it on a mini-small-tiny-mplayer I wrote in OCaml:
OpenGL is interesting because of Direct Rendering which accelerate the
displaying.

So, I tested OpenGL in Mlbrot, after having separated the graphic
toolkit from the rest of the program. Perhaps, that makes it work
under Mac and Windows? I don't know. And a few days ago, I tested
with Gtk, which appears to be the good solution and I continue
programming with it.

Perhaps I try out the 3D feature of the Mandelbrot Set one day. I just
looked at a couple of sites talkint about it.

> I've converted some 20 year old code into ocaml a while back that
> generates 3D images. Putting the height map into OpenGL and render it
> through that would probably improve the quality:
> http://mrvn.homeip.net/mandelbrot/

Interesting, but I would prefer something more 3D, like cauliflowers.

Thank you for your message!

-- 
Daniel de Rauglaudre
http://pauillac.inria.fr/~ddr/

