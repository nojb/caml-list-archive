Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p07HkWnt004259
	for <caml-list@sympa-roc.inria.fr>; Fri, 7 Jan 2011 18:46:32 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AucCAK7fJk3UGyoFkWdsb2JhbACDd5Ijjg8WAQIJCwoHEQMhrh2NOoRYdASKPYQE
X-IronPort-AV: E=Sophos;i="4.60,290,1291590000"; 
   d="asc'?vcf'?scan'208";a="86291850"
Received: from smtp5-g21.free.fr ([212.27.42.5])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 07 Jan 2011 18:46:26 +0100
Received: from Tocksi.local (unknown [78.240.16.62])
	by smtp5-g21.free.fr (Postfix) with ESMTP id A10ABD48181
	for <caml-list@inria.fr>; Fri,  7 Jan 2011 18:46:19 +0100 (CET)
Message-ID: <4D275165.9020709@univ-savoie.fr>
Date: Fri, 07 Jan 2011 18:46:13 +0100
From: Christophe Raffalli <Christophe.Raffalli@univ-savoie.fr>
User-Agent: Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.6; fr; rv:1.9.2.13) Gecko/20101207 Thunderbird/3.1.7
MIME-Version: 1.0
To: caml-list@inria.fr
References: <699537.6718.qm@web111509.mail.gq1.yahoo.com> <4D274B9D.5000000@frisch.fr>
In-Reply-To: <4D274B9D.5000000@frisch.fr>
X-Enigmail-Version: 1.1.1
Content-Type: multipart/signed; micalg=pgp-sha1;
 protocol="application/pgp-signature";
 boundary="------------enig6998CCA18B4C574ED6077D3C"
Subject: Re: [Caml-list] Purity and lazyness

This is an OpenPGP/MIME signed message (RFC 2440 and 3156)
--------------enig6998CCA18B4C574ED6077D3C
Content-Type: multipart/mixed;
 boundary="------------070407050501010006070701"

This is a multi-part message in MIME format.
--------------070407050501010006070701
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Le 07/01/11 18:21, Alain Frisch a =C3=A9crit :
> On 01/07/2011 04:35 PM, Dario Teixeira wrote:
>> that is, I don't see why purity would require lazyness.
lazyness implies eta equivalence :
  (fun x -> f x) is not observationally equivalent to f in a strict
language.

I don't think this is a major problem of strict language over lazy ones
... Especially
compared to the problem of complexity prediction which is harder in lazy
languages ...

And by the way : PML is strict, pure with exceptions ... And I consider
exceptions to be pure because they enjoy reference transparency ... But
the PML compiler is not yet there ...

Cheers,
Christophe
=20

--=20
Christophe Raffalli
Universite de Savoie
Batiment Le Chablais, bureau 21
73376 Le Bourget-du-Lac Cedex

tel: (33) 4 79 75 81 03
fax: (33) 4 79 75 87 42
mail: Christophe.Raffalli@univ-savoie.fr
www: http://www.lama.univ-savoie.fr/~RAFFALLI
---------------------------------------------
IMPORTANT: this mail is signed using PGP/MIME
At least Enigmail/Mozilla, mutt or evolution=20
can check this signature. The public key is
stored on www.keyserver.net
---------------------------------------------


--------------070407050501010006070701
Content-Type: text/x-vcard; charset=utf-8;
 name="Christophe_Raffalli.vcf"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="Christophe_Raffalli.vcf"

YmVnaW46dmNhcmQNCmZuOkNocmlzdG9waGUgUmFmZmFsbGkNCm46UmFmZmFs
bGk7Q2hyaXN0b3BoZQ0Kb3JnOkxBTUEgKFVNUiA1MTI3KQ0KZW1haWw7aW50
ZXJuZXQ6Y2hyaXN0b3BoZS5yYWZmYWxsaUB1bml2LXNhdm9pZS5mcg0KdGl0
bGU7cXVvdGVkLXByaW50YWJsZTpNYT1DMz1BRXRyZSBkZSBjb25mPUMzPUE5
cmVuY2VzDQp0ZWw7d29yazorMzMgNCA3OSA3NSA4MSAwMw0Kbm90ZTpodHRw
Oi8vd3d3LmxhbWEudW5pdi1zYXZvaWUuZnIvfnJhZmZhbGxpDQp4LW1vemls
bGEtaHRtbDpUUlVFDQp2ZXJzaW9uOjIuMQ0KZW5kOnZjYXJkDQoNCg==

--------------070407050501010006070701--

--------------enig6998CCA18B4C574ED6077D3C
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.7 (Darwin)
Comment: Using GnuPG with Mozilla - http://enigmail.mozdev.org/

iD8DBQFNJ1Fqi9jr/RgYAS4RAhqQAJ9jshC7CexRzZi+CtiCC+qicj32NwCfdd2q
0we9/uP07oMziJjfxtKGl94=
=cvJL
-----END PGP SIGNATURE-----

--------------enig6998CCA18B4C574ED6077D3C--
