Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p04GN95H009687
	for <caml-list@sympa-roc.inria.fr>; Tue, 4 Jan 2011 17:23:09 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aq4AADPYIk2AcIgmmWdsb2JhbACkOhUBAQEBAQgLCgcRJLRohl6FSgSEaIk8
X-IronPort-AV: E=Sophos;i="4.60,273,1291590000"; 
   d="scan'208";a="93785909"
Received: from bluebox.cs.princeton.edu ([128.112.136.38])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 04 Jan 2011 17:23:04 +0100
Received: from [192.168.1.101] (ool-4355b7a4.dyn.optonline.net [67.85.183.164])
	(authenticated bits=0)
	by bluebox.CS.Princeton.EDU (8.13.8/8.13.8) with ESMTP id p04GMtZO023390
	(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=NOT);
	Tue, 4 Jan 2011 11:22:58 -0500
Mime-Version: 1.0 (Apple Message framework v1082)
Content-Type: text/plain; charset=iso-8859-1
From: Yitzhak Mandelbaum <yitzhakm@cs.princeton.edu>
In-Reply-To: <AANLkTi=-BMNta45BOL4keRaQ132CXtj9xcM6M8Awws2u@mail.gmail.com>
Date: Tue, 4 Jan 2011 11:22:55 -0500
Cc: Jean Krivine <jean.krivine@gmail.com>, caml-list@inria.fr
Message-Id: <B10C0D95-8462-460C-963D-2EA0B7801941@cs.princeton.edu>
References: <AANLkTinYBmZV94CpJsAN4sg94UYJayxrMZyW+LPm46HW@mail.gmail.com> <4D23353C.8020803@gmail.com> <AANLkTimtwMLh=54+Pe5413o=gxU16P=6d+cU0cBKmfqP@mail.gmail.com> <AANLkTi=-BMNta45BOL4keRaQ132CXtj9xcM6M8Awws2u@mail.gmail.com>
To: =?iso-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@erratique.ch>
X-Mailer: Apple Mail (2.1082)
X-Proofpoint-Virus-Version: vendor=nai engine=5400 definitions=6215 signatures=655433
X-Proofpoint-Spam-Reason: safe
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id p04GN95H009687
Subject: Re: [Caml-list] Array.make exception and parser

For one perspective on this issue, you might want to take a look here:

http://lambda-the-ultimate.org/node/4150

A short answer (among many) to your particular question: it often requires a lot off effort just to discover whether " a recursive descent parser with some
combinators fits perfectly," and many, many grammars do not fit perfectly.


On Jan 4, 2011, at 10:31 AM, Daniel Bünzli wrote:

> P.S.
> 
> I don't know if that's your case but so many languages to parse are
> LL(k) for some k. I don't really understand why people insist on using
> yacc like parser generators where a recursive descent parser with some
> combinators fits perfectly, seems nearly as efficient and allow you to
> give more precise syntax errors to your users.

-----------------------------
Yitzhak Mandelbaum




