Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA03586; Tue, 20 May 2003 10:07:51 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA03577 for <caml-list@pauillac.inria.fr>; Tue, 20 May 2003 10:07:50 +0200 (MET DST)
Received: from btr0x1.rz.uni-bayreuth.de (btr0x1.rz.uni-bayreuth.de [132.180.8.29])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h4K87nH13200
	for <caml-list@inria.fr>; Tue, 20 May 2003 10:07:49 +0200 (MET DST)
Received: from btn1x1.inf.uni-bayreuth.de (btn1x1.inf.uni-bayreuth.de [132.180.192.6])
	by btr0x1.rz.uni-bayreuth.de (8.12.0.Beta16/8.12.1) with ESMTP id h4K87IK0004727;
	Tue, 20 May 2003 10:07:19 +0200 (MEST)
Received: from btn1x5.inf.uni-bayreuth.de (btn1x5.inf.uni-bayreuth.de [132.180.192.16])
	by btn1x1.inf.uni-bayreuth.de (8.12.3/8.12.3/SuSE Linux 0.6) with ESMTP id h4K87HWx013633;
	Tue, 20 May 2003 10:07:18 +0200
From: Wolfgang =?iso-8859-1?q?M=FCller?= <Wolfgang.Mueller2@uni-bayreuth.de>
To: Chris Hecker <checker@d6.com>, Brian Hurt <brian.hurt@qlogic.com>
Subject: [Caml-list] ocaml as *.so (was: ...and large development projects)
Date: Tue, 20 May 2003 10:07:17 +0200
User-Agent: KMail/1.5
Cc: David Brown <caml-list@davidb.org>,
        "'caml-list@inria.fr'" <caml-list@inria.fr>
References: <4.3.2.7.2.20030517225010.04b748a0@localhost> <4.3.2.7.2.20030519120753.04545700@localhost>
In-Reply-To: <4.3.2.7.2.20030519120753.04545700@localhost>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200305201007.17990.wolfgang.mueller2@uni-bayreuth.de>
X-Spam: no; 0.00; mueller:99 inlining:01 dlls:01 inlined:01 rephrase:01 dynamically:01 linked:01 ocaml:01 native:02 wolfgang:02 dll:03 library:03 docs:03 cheers:06 impression:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi,

> PS.  A related issue is going to come up with respect to disabling
> cross-file inlining when we get native DLLs.  You want to be able to
> control what gets made available for inlining when building a DLL, since
> one of the uses of DLLs is to be able to supply a new version of code and
> so you can't have it be already inlined in the client application.

I would like to rephrase the question: is it possible to use OCaml code (plus 
possibly some C code) for generating dynamically linked libraries that are 
used as easily as c(++) from c(++)? I've got the impression that this is the 
case. At least page 218 of the docs (chapter 17.7. at the end) suggests so. 

As I am currently deciding if I want to start a project in OCaml that possibly 
could become a library that would have to be used from C or JAVA, I would be 
very interested in the OCaml-Gurus' comment on that. 

Cheers,
Wolfgang

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

