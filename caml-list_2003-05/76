Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA16027; Wed, 7 May 2003 17:11:15 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA16187 for <caml-list@pauillac.inria.fr>; Wed, 7 May 2003 17:11:13 +0200 (MET DST)
Received: from mx01.uni-tuebingen.de (mx01.uni-tuebingen.de [134.2.3.11])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h47FBDT05542
	for <caml-list@inria.fr>; Wed, 7 May 2003 17:11:13 +0200 (MET DST)
Received: from linux17.zdv.uni-tuebingen.de (linux17.zdv.uni-tuebingen.de [134.2.18.17])
	by mx01.uni-tuebingen.de (8.12.3/8.12.3) with ESMTP id h47FB6LH019910;
	Wed, 7 May 2003 17:11:06 +0200
Date: Wed, 7 May 2003 17:11:05 +0200 (CEST)
From: Falk Hueffner <falk.hueffner@student.uni-tuebingen.de>
X-Sender:  <zxmjz18@linux17.zdv.uni-tuebingen.de>
To: Hal Daume III <hdaume@ISI.EDU>
cc: Neel Krishnaswami <neelk@alum.mit.edu>,
        "caml-list@inria.fr" <caml-list@inria.fr>
Subject: Re: [Caml-list] why the "rec" in "let rec"?
In-Reply-To: <Pine.GSO.4.21.0305070754400.15643-100000@moussor.isi.edu>
Message-ID: <Pine.LNX.4.30.0305071708260.5971-100000@linux17.zdv.uni-tuebingen.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-AntiVirus: checked by AntiVir Milter 1.0.0.8; AVE 6.19.0.3; VDF 6.19.0.12
X-Spam: no; 0.00; falk:01 hueffner:01 caml-list:01 disallow:01 bug:01 immutable:01 bindings:01 rec:01 wrote:03 vertex:04 let:04 graph:05 simplest:08 iii:90 student:11 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 7 May 2003, Hal Daume III wrote:

> Arguably, the "simplest" way to dealing with:
>
> > let f x = ..
> > let f x = f x
>
> is to simply disallow bindings like this.  I would think that they're
> almost always a bug.

It is often useful in code like this:

  let g = Graph.make 6 3 1 in
  let g = Graph.set_immutable_vertex g 0 in
  let g = Graph.set_immutable_vertex g 4 in
  let g = Graph.set_connected g 0 1 in
  let g = Graph.set_connected g 0 3 in
 ...

(Real World Example! ;)

	Falk

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

