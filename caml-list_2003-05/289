Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA06901; Sun, 25 May 2003 15:40:52 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA07107 for <caml-list@pauillac.inria.fr>; Sun, 25 May 2003 15:40:50 +0200 (MET DST)
Received: from students.mimuw.edu.pl (zodiac.mimuw.edu.pl [193.0.96.128])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h4PDeoH21320
	for <caml-list@inria.fr>; Sun, 25 May 2003 15:40:50 +0200 (MET DST)
Received: from localhost (localhost [127.0.0.1])
	by students.mimuw.edu.pl (Postfix) with ESMTP
	id AE92317AA4; Sun, 25 May 2003 15:40:47 +0200 (CEST)
Received: from students.mimuw.edu.pl ([127.0.0.1])
 by localhost (zodiac [127.0.0.1]) (amavisd-new, port 10024) with ESMTP
 id 23188-07; Sun, 25 May 2003 15:40:47 +0200 (CEST)
Received: by students.mimuw.edu.pl (Postfix, from userid 2738)
	id 4AA2E17AA3; Sun, 25 May 2003 15:40:47 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by students.mimuw.edu.pl (Postfix) with ESMTP
	id 45081452B; Sun, 25 May 2003 15:40:47 +0200 (CEST)
Date: Sun, 25 May 2003 15:40:47 +0200 (CEST)
From: Lukasz Lew <ll189417@zodiac.mimuw.edu.pl>
X-X-Sender: ll189417@zodiac.mimuw.edu.pl
To: Remi Vanicat <vanicat@labri.u-bordeaux.fr>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Hashtable, possible?
In-Reply-To: <87znlbq2b6.dlv@wanadoo.fr>
Message-ID: <Pine.LNX.4.44.0305251538270.22552-100000@zodiac.mimuw.edu.pl>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: by amavisd-new
X-Spam: no; 0.00; lukasz:01 lew:01 189417:01 zodiac:01 caml-list:01 hashtable:01 camlp:01 hashtables:01 val:01 hashtbl:01 abstr:01 foo:01 bigarrays:01 belive:01 arrays:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk




On Sun, 25 May 2003, Remi Vanicat wrote:

> Remi Vanicat <vanicat@labri.u-bordeaux.fr> writes:
> 
> > Lukasz Lew <ll189417@zodiac.mimuw.edu.pl> writes:
> >
> >> Hi.
> >> Is it possible to implement with camlp4, syntax for using hashtables like 
> >> arrays?
> >> I think about something like this:
> >>
> >> # let a = [{ }];;
> >> val a : ('_a, '_b) Hashtbl.t = <abstr>
> >>
> >> # a.{"foo"} <- 'f';;
> >> - : unit = ()
> >>
> >> I need only "yes" or "no" :)
> >
> > yes it is
> 
> well, you should use something else than [{ }] and a.{ ... } because
> they already have a meaning, but if you find something then yes you
> can.
thank you all.

So. If it is possibe, and there is such syntax for arrays, strings and 
bigarrays, so why there isn't any for hashtables?
I belive hashtables are more often used than bigarrays...

Lukasz Lew

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

