Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA28328; Sun, 25 May 2003 02:48:05 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA28423 for <caml-list@pauillac.inria.fr>; Sun, 25 May 2003 02:48:04 +0200 (MET DST)
Received: from mwinf0502.wanadoo.fr (smtp4.wanadoo.fr [193.252.22.26])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h4P0m4H27710
	for <caml-list@inria.fr>; Sun, 25 May 2003 02:48:04 +0200 (MET DST)
Received: from debian (unknown [80.8.75.246])
	by mwinf0502.wanadoo.fr (SMTP Server) with ESMTP id E7DC7E8003C8
	for <caml-list@inria.fr>; Sun, 25 May 2003 02:48:03 +0200 (CEST)
Received: from moi by debian with local (Exim 3.36 #1 (Debian))
	id 19JjgL-00074p-00
	for <caml-list@inria.fr>; Sun, 25 May 2003 02:48:13 +0200
To: caml-list@inria.fr
Subject: Re: [Caml-list] Hashtable, possible?
Mail-Copy-To: never
From: Remi Vanicat <vanicat@labri.u-bordeaux.fr>
Date: Sun, 25 May 2003 02:48:13 +0200
In-Reply-To: <873cj3rhjb.dlv@wanadoo.fr> (Remi Vanicat's message of "Sun, 25
 May 2003 02:34:00 +0200")
Message-ID: <87znlbq2b6.dlv@wanadoo.fr>
User-Agent: Gnus/5.090015 (Oort Gnus v0.15) Emacs/21.3
References: <Pine.LNX.4.44.0305242151160.22495-100000@zodiac.mimuw.edu.pl>
	<873cj3rhjb.dlv@wanadoo.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-15
Content-Transfer-Encoding: 8bit
X-Spam: no; 0.00; caml-list:01 hashtable:01 lukasz:01 lew:01 189417:01 zodiac:01 camlp:01 hashtables:01 val:01 hashtbl:01 abstr:01 foo:01 arrays:01 dept-info:01 labri:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Remi Vanicat <vanicat@labri.u-bordeaux.fr> writes:

> Lukasz Lew <ll189417@zodiac.mimuw.edu.pl> writes:
>
>> Hi.
>> Is it possible to implement with camlp4, syntax for using hashtables like 
>> arrays?
>> I think about something like this:
>>
>> # let a = [{ }];;
>> val a : ('_a, '_b) Hashtbl.t = <abstr>
>>
>> # a.{"foo"} <- 'f';;
>> - : unit = ()
>>
>> I need only "yes" or "no" :)
>
> yes it is

well, you should use something else than [{ }] and a.{ ... } because
they already have a meaning, but if you find something then yes you
can.


-- 
Rémi Vanicat
vanicat@labri.u-bordeaux.fr
http://dept-info.labri.u-bordeaux.fr/~vanicat

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

