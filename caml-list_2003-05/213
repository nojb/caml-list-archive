Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA10811; Tue, 20 May 2003 12:46:35 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA10794 for <caml-list@pauillac.inria.fr>; Tue, 20 May 2003 12:46:33 +0200 (MET DST)
Received: from psyche.kaba.or.jp (psyche.kaba.or.jp [202.249.19.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h4KAkVT00081
	for <caml-list@inria.fr>; Tue, 20 May 2003 12:46:31 +0200 (MET DST)
Received: from mail.kaba.or.jp (cascade.kaba.or.jp [202.249.19.34])
	by psyche.kaba.or.jp (Postfix) with ESMTP
	id 54C9D22A7F; Tue, 20 May 2003 19:46:29 +0900 (JST)
Received: from WARP (dhcp04.kaba.or.jp [202.249.19.39])
	by mail.kaba.or.jp (Postfix) with SMTP
	id 3B0EF49A6B; Tue, 20 May 2003 19:46:29 +0900 (JST)
Message-ID: <017b01c31ebc$e623d9e0$2713f9ca@WARP>
From: "Nicolas Cannasse" <warplayer@free.fr>
To: =?iso-8859-1?Q?Wolfgang_M=FCller?= <Wolfgang.Mueller2@uni-bayreuth.de>,
        "Chris Hecker" <checker@d6.com>, "Brian Hurt" <brian.hurt@qlogic.com>
Cc: "David Brown" <caml-list@davidb.org>, <caml-list@inria.fr>
References: <4.3.2.7.2.20030517225010.04b748a0@localhost> <4.3.2.7.2.20030519120753.04545700@localhost> <200305201007.17990.wolfgang.mueller2@uni-bayreuth.de>
Subject: Re: [Caml-list] ocaml as *.so (was: ...and large development projects)
Date: Tue, 20 May 2003 19:45:15 +0900
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1106
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1106
X-Spam: no; 0.00; cannasse:01 warplayer:01 caml-list:01 inlining:01 dlls:01 inlined:01 rephrase:01 dynamically:01 motion-twin:01 linked:01 ocaml:01 nicolas:01 native:02 dll:03 docs:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> > PS.  A related issue is going to come up with respect to disabling
> > cross-file inlining when we get native DLLs.  You want to be able to
> > control what gets made available for inlining when building a DLL, since
> > one of the uses of DLLs is to be able to supply a new version of code
and
> > so you can't have it be already inlined in the client application.
>
> I would like to rephrase the question: is it possible to use OCaml code
(plus
> possibly some C code) for generating dynamically linked libraries that are
> used as easily as c(++) from c(++)? I've got the impression that this is
the
> case. At least page 218 of the docs (chapter 17.7. at the end) suggests
so.

One of the best way to do what you want right now is to use ODLL (
http://tech.motion-twin.com/odll ). This will give you a good idea of how
you can handle it.

Nicolas Cannasse

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

