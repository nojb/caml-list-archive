Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA03865; Sun, 25 May 2003 12:15:31 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA03942 for <caml-list@pauillac.inria.fr>; Sun, 25 May 2003 12:15:30 +0200 (MET DST)
Received: from mbg.sphere.ne.jp (mbg.sphere.ne.jp [210.150.254.179])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h4PAFSH15069
	for <caml-list@inria.fr>; Sun, 25 May 2003 12:15:29 +0200 (MET DST)
Received: from localhost (pl405.nas928.o-tokyo.nttpc.ne.jp [210.153.227.149])
	by mbg.sphere.ne.jp (Postfix) with ESMTP id C7AFA3A826
	for <caml-list@inria.fr>; Sun, 25 May 2003 19:15:26 +0900 (JST)
Date: Sun, 25 May 2003 19:26:04 +0900 (JST)
Message-Id: <20030525.192604.07647392.yoriyuki@mbg.sphere.ne.jp>
To: caml-list@inria.fr
Subject: [Caml-list] Set/Map with intervals and/or order-related operations
From: Yamagata Yoriyuki <yoriyuki@mbg.sphere.ne.jp>
X-Mailer: Mew version 2.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; yamagata:01 yoriyuki:01 sphere:01 unions:01 compliments:99 baire:01 misses:01 folks:01 orders:97 arbitrary:02 failing:02 comparison:02 library:03 anybody:03 integers:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi, folks,

I'm looking for the Set/Map like data-structures which can efficiently
add and remove large intervals over integers, and support
intersections, unions and compliments.  Does anybody make such
libraries?  Baire contains interval.ml[i] but misses these
functionalities.  Is it easy to add them to Baire, or are Baire's
intervals something different than I thought?

Failing that, is there Set/Map with order-related operations?
Actually I have one but if there is one actively developed, I would
like to use it.

By the way, I have a library for arbitrary orders on (finite sets of)
integers.  I think comparison of two integer is O(log n ^ 2)
time. (n for the size of the finite set.)  Do you think it is worth to
make public?

Cheers,
--
Yamagata Yoriyuki

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

