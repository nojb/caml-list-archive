Return-Path: <H.Tews@cs.ru.nl>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 26F7DBC69
	for <caml-list@yquem.inria.fr>; Wed,  7 Mar 2007 09:33:24 +0100 (CET)
Received: from smeltpunt.science.ru.nl (smeltpunt.science.ru.nl [131.174.16.145])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l278XN2B008145
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Wed, 7 Mar 2007 09:33:23 +0100
Received: from tandem.cs.ru.nl [131.174.142.18]  (helo=tandem.cs.ru.nl)
	by smeltpunt.science.ru.nl (8.13.7/5.11) with ESMTP id l278XLDU001050
	for <caml-list@inria.fr>; Wed, 7 Mar 2007 09:33:21 +0100 (MET)
Received: from tews by tandem.cs.ru.nl with local (Exim 4.63)
	(envelope-from <tews@tandem.cs.ru.nl>)
	id 1HOraL-0001fr-0B
	for caml-list@inria.fr; Wed, 07 Mar 2007 09:33:21 +0100
From: Hendrik Tews <H.Tews@cs.ru.nl>
To: Caml List <caml-list@inria.fr>
Subject: Re: [Caml-list] inspecting abstract values in the debugger
References: <A6296BA9-6068-4445-8CD6-94BF835F2814@cs.uni-sb.de>
	<0FF9569C-EDF8-4D11-AC9C-B50CAEFE1D7E@cs.uni-sb.de>
Date: Wed, 07 Mar 2007 09:33:20 +0100
In-Reply-To: <0FF9569C-EDF8-4D11-AC9C-B50CAEFE1D7E@cs.uni-sb.de> (Christian
	Lindig's message of "Tue, 20 Feb 2007 10:43:39 +0100")
Message-ID: <wwuzm6p5u7j.fsf@tandem.cs.ru.nl>
User-Agent: Gnus/5.110006 (No Gnus v0.6) Emacs/21.4 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Scanned-By: MIMEDefang 2.56 on 131.174.16.145
X-Miltered: at concorde with ID 45EE78D3.005 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; hendrik:01 tews:01 tews:01 debugger:01 lindig:01 lindig:01 debugger:01 iter:01 compiler:01 iter:01 hendrik:01 polymorphic:01 polymorphic:01 abstract:01 abstract:01 

Christian Lindig <lindig@cs.uni-sb.de> writes:

   In the debugger, abstract values cannot be inspected. This can be

Yes, and the same applies for values inside polymorphic
functions. For instance, inside a List.iter you cannot inspect
the list.

   Therefore I'd like to discuss a feature wish: a compiler flag that
   makes all type declarations manifest. When compiling a signature

This doesn't solve the problem with polymorphic functions.

I would rather like to see a debugger feature "print value with
this type", where it is the responsibility of the user to supply
the right type. For instance, inside List.iter, you could do

  print a : int option

to see the current element of an int option list.

Bye,

Hendrik

