Return-Path: <yoriyuki.y@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.4 required=5.0 tests=SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 8D2F0BC6C
	for <caml-list@yquem.inria.fr>; Thu, 15 Mar 2007 17:43:21 +0100 (CET)
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.168])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l2FGhKFX025631
	for <caml-list@inria.fr>; Thu, 15 Mar 2007 17:43:21 +0100
Received: by ug-out-1314.google.com with SMTP id k3so379666ugf
        for <caml-list@inria.fr>; Thu, 15 Mar 2007 09:43:17 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=Q+O176WteXh2/Bg3Hec21gJYIMKD2zAQXIFL3/rsPs0fJlEpVpgzlgUBQWJGKhzj1wHoGvAIrBWzIZgf/8mM3ld8qJzfUW9yHIhXciVPlioPX+MmuKiyWSc6OW8dVwidnxrdxYQUWcYmAYax/cFjZDy8qblYDR+wvebeKTNIMKg=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=L2ZiAeAq18a91jnRQ97qduMGSHnoYHV/q7ZC/NdXDK71wGDI9AX/ft77YoN6aYLPy4CI6LeDQFqMESPa/c7BDimxbwg4LHcRN99VIHNE6dGOdAoPoMV1uvWoTbos+mHxmsJy1+BTi/3iMxLFKKKFOEsovo02aO8/4v4OPnn2lQw=
Received: by 10.82.108.9 with SMTP id g9mr1063768buc.1173976995245;
        Thu, 15 Mar 2007 09:43:15 -0700 (PDT)
Received: by 10.82.175.8 with HTTP; Thu, 15 Mar 2007 09:43:15 -0700 (PDT)
Message-ID: <ace6b6830703150943s7110ab85m13ecea15af0dad2f@mail.gmail.com>
Date: Fri, 16 Mar 2007 01:43:15 +0900
From: "Yoriyuki Yamagata" <yoriyuki.y@gmail.com>
To: "Caml List" <caml-list@inria.fr>
Subject: OCaml Project in Google Summer of Code
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
X-j-chkmail-Score: MSGID : 45F977A8.000 on discorde : j-chkmail score : X : 0/20 1 0.000 -> 1
X-Miltered: at discorde with ID 45F977A8.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; yoriyuki:01 yamagata:01 yoriyuki:01 ocaml:01 wiki:01 ocaml:01 tos:01 wiki:01 syntax:01 verifiers:01 subset:01 suffices:01 modular:01 customs:98 javascript:98 

The FreeSoftware Initiative Japan(http://www.fsij.org/) is looking for
participants of Google Summer of Code(http://code.google.com/soc).
Proposed ideas (https://members.fsij.org/trac/soc2007/wiki/Ideas)
include OCaml related projects.
We also accept proposals not directly related to proposed ideas.  If
your project is selected, you are paid 4500$ from Google.


Please read carefully http://code.google.com/soc/tos.html and
https://members.fsij.org/trac/soc2007/wiki/Ideas before submitting
your proposal.  Feel free to ask me if you have a question.

OCaml projects are

*Improve OCaml internationalization

There is no specific requirement. The idea includes

    - Create a syntax extension which handle Unicode strings and
locale-sensitive messages. Create a Unicode-based, locale-sensitive
alternative of the standard library.
    - Create a binding of ICU. Binding must not be bare-bone wrapping.
It must be well integrated to OCaml and its programming customs.

We accept other ideas as well.

* Create Ajax development tool for OCaml

Enable seamless Web development by generating JavaScript from OCaml
and integrating it to Web framework.

* Improve Eclipse plugin of OCaml

There is no specific requirement. Please propose suitable improvements.

Also we have a project about automatic source code verifiers.

*Automatic program verifier

Develop an automatic program verifier with the following features.

    - Accept any programs in popular programing languages such as
C/Java/Ruby and so on.
    - Produce correct answers for programs in a practical subset of
the language.
    - Produce approximate answers for all programs in the language.
    - Performance is not a goal. It suffices to demonstrate its
capability to small code fragments. However, it must have modular
design to future improvement.

-- 
yoriyuki

