Return-Path: <mvanier@cs.caltech.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id C5282BC69
	for <caml-list@yquem.inria.fr>; Thu,  8 Mar 2007 23:10:13 +0100 (CET)
Received: from outgoing-mail.its.caltech.edu (outgoing-mail.its.caltech.edu [131.215.239.19])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l28MACRA021688
	for <caml-list@yquem.inria.fr>; Thu, 8 Mar 2007 23:10:13 +0100
Received: from earth-dog.caltech.edu (earth-dog [192.168.1.3])
	by earth-ox-postvirus (Postfix) with ESMTP
	id 3F62636F37; Thu,  8 Mar 2007 14:10:09 -0800 (PST)
Received: from [192.168.1.100] (adsl-66-218-63-93.dslextreme.com [66.218.63.93])
	by wood-ox.its.caltech.edu (Postfix) with ESMTP
	id 23A262F0B4; Thu,  8 Mar 2007 14:09:59 -0800 (PST)
Message-ID: <45F089B6.9030005@cs.caltech.edu>
Date: Thu, 08 Mar 2007 14:09:58 -0800
From: Michael Vanier <mvanier@cs.caltech.edu>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9a1) Gecko/20061112 SeaMonkey/1.5a
MIME-Version: 1.0
To: Brian Hurt <bhurt@janestcapital.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Operator overloading
References: <3D1E4D9CA9BCE04D8F2B55F203AE4CE30666AB74@selma.roomandboard.com>	<c1490a380703081305m534dbb94oc1f97c443fd46844@mail.gmail.com> <45F080C8.3070307@janestcapital.com>
In-Reply-To: <45F080C8.3070307@janestcapital.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 45F089C4.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; vanier:01 mvanier:01 overloading:01 pointers:01 pointer:01 overloading:01 complicates:01 pointers:01 ocaml:01 beginner's:01 ocaml:01 bug:01 beginners:01 wrote:01 wrote:01 

Pointers were perhaps a bad example, since pointer arithmetic is incompatible 
with safe languages.  I see no such concern with respect to operator 
overloading, though there are certainly many ways in which it complicates the 
language.

This is one of those never-ending arguments that will never get settled to 
anyone's satisfaction; it's a matter of personal preference.  Why don't we start 
arguing about static versus dynamic typing while we're at it?

Mike


Brian Hurt wrote:
> Tom wrote:
> 
>>
>> Albeit Brian Hurt's comment about operator overloading making more 
>> harm than good in C++, I believe that overloading simply has to be 
>> used appropriately - it's like saying pointers are bad because they 
>> can introduce memory leaks and null references, and division is bad 
>> because it can raise Division_by_zero exceptions.
>>
> So maybe we should introduce pointers into Ocaml?
> 
> Brian
> 
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs

