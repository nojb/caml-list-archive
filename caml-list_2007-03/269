Return-Path: <gclci-caml-list@m.gmane.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=AWL,SPF_FAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 6E764BC0A
	for <caml-list@yquem.inria.fr>; Fri, 16 Mar 2007 14:23:13 +0100 (CET)
Received: from ciao.gmane.org (main.gmane.org [80.91.229.2])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l2GDNCaC027369
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Fri, 16 Mar 2007 14:23:13 +0100
Received: from list by ciao.gmane.org with local (Exim 4.43)
	id 1HSCOX-0004mP-Gc
	for caml-list@inria.fr; Fri, 16 Mar 2007 14:22:57 +0100
Received: from pps-gw.pps.jussieu.fr ([134.157.168.126])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Fri, 16 Mar 2007 14:22:57 +0100
Received: from li by pps-gw.pps.jussieu.fr with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Fri, 16 Mar 2007 14:22:57 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: caml-list@inria.fr
From: Zheng Li <li@pps.jussieu.fr>
Subject:  Re: type constraints involving variant types
Date:  Fri, 16 Mar 2007 14:07:50 +0100
Lines: 34
Message-ID:  <87abydl4k9.fsf@pps.jussieu.fr>
References:  <20070316104354.GA3202@pc6197-c703.uibk.ac.at>
Mime-Version:  1.0
Content-Type:  text/plain; charset=us-ascii
X-Complaints-To: usenet@sea.gmane.org
X-Gmane-NNTP-Posting-Host: pps-gw.pps.jussieu.fr
User-Agent: Gnus/5.110006 (No Gnus v0.6) Emacs/22.0.93 (gnu/linux)
Cancel-Lock: sha1:hD7PlZJci6Zf0XckVVYP8GHTL9o=
Sender: news <news@sea.gmane.org>
X-Miltered: at concorde with ID 45FA9A40.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; sig:01 sig:01 writes:01 pps:01 pps:01 jussieu:01 jussieu:01 int:01 variant:02 string:02 constraints:03 types:03 module:03 module:03 end:12 


Not sure if this is what you want:

# module type C = sig
    module A: A
    module B: B with module A = A
  end;;
module type C =
  sig
    module A : A
    module B : sig module A : sig type t = A.t = A of int | B of string end end
  end

Christian Sternagel <christian.sternagel@uibk.ac.at> writes:
> module type A = sig
>  type t = A of 'a | B of 'b
> end
>
> module type B = sig
>  module A : A
> end
>
> Can I then do something like
>
> module type C = sig
>  module B : B
>  module A : A
>   with type t = B.A.t = A of 'a | B of 'b
> end
>

-- 
Zheng Li
http://www.pps.jussieu.fr/~li

