Return-Path: <Christophe.Troestler+ocaml@umh.ac.be>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 02550BCA2
	for <caml-list@yquem.inria.fr>; Fri,  9 Mar 2007 11:46:39 +0100 (CET)
Received: from hedwig1.umh.ac.be (hedwig2.umh.ac.be [193.190.193.73])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l29AkcqB023342
	for <caml-list@yquem.inria.fr>; Fri, 9 Mar 2007 11:46:38 +0100
Received: from poincare.swapping.umh.ac.be ([10.102.100.10])
	by hedwig1.umh.ac.be (8.13.6/8.13.6) with ESMTP id l29AlmdC4907056;
	Fri, 9 Mar 2007 11:47:51 +0100
Received: from localhost ([127.0.0.1] ident=trch)
	by poincare.swapping.umh.ac.be with esmtp (Exim 4.63)
	(envelope-from <Christophe.Troestler+ocaml@umh.ac.be>)
	id 1HPcbF-0002nh-RG; Fri, 09 Mar 2007 11:45:25 +0100
Date: Fri, 09 Mar 2007 11:45:25 +0100 (CET)
Message-Id: <20070309.114525.266357161.Christophe.Troestler+ocaml@umh.ac.be>
To: jon@ffconsultancy.com
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Interactive technical computing
From: Christophe TROESTLER <Christophe.Troestler+ocaml@umh.ac.be>
In-Reply-To: <200703091022.27641.jon@ffconsultancy.com>
References: <200703081934.07403.jon@ffconsultancy.com>
	<20070308.213407.67921622.Christophe.Troestler+ocaml@umh.ac.be>
	<200703091022.27641.jon@ffconsultancy.com>
X-Face: #2fb%mPx>rRL@4ff~TVgZ"<[:,oL"`TUEGK/[8/qb58~C>jR(x4A+v/n)7BgpEtIph_neoLKJBq0JBY9:<qMr[nclFSC*8GVW;&@q*7^R?u"i{y>}8v|j
Organization: University of Mons-Hainaut
X-Mailer: Mew version 5.1.52 on Emacs 22.0.95 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Scanned-By: MIMEDefang 2.1 (www dot roaringpenguin dot com slash mimedefang)
X-Miltered: at discorde with ID 45F13B0E.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; christophe:01 troestler:01 christophe:01 troestler:01 ocaml:01 umh:01 camlp:01 compiler:01 2007,:98 wrote:01 caml-list:01 depends:04 fri:05 computing:05 vector:05 

On Fri, 9 Mar 2007, Jon Harrop <jon@ffconsultancy.com> wrote:
> 
> >   # Vec.(a + b + c)
> >
> > then Camlp4 could generate code that only needs to create 1 temporary
> > vector to hold the result instead of 2 (as is the case in F#).
> 
> I would expect the compiler to automate that deforesting.

And how could it do that, not even knowing how to allocate a vector,
less how to pass a preallocated vector to an « add » operation
(because this, of course, depends on what « + » means...) ?

ChriS

