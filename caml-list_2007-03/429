Return-Path: <jeremy.yallop@ed.ac.uk>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=MISSING_HEADERS 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 19CA1BC6E
	for <caml-list@yquem.inria.fr>; Tue, 27 Mar 2007 16:25:04 +0200 (CEST)
Received: from mcr-smtp-002.bulldogdsl.com (smtp.bulldogdsl.com [212.158.248.8])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l2REP3fp002177
	for <caml-list@yquem.inria.fr>; Tue, 27 Mar 2007 16:25:03 +0200
Received: by mcr-smtp-002.bulldogdsl.com (Postfix, from userid 1010)
	id 6F688845E65; Tue, 27 Mar 2007 15:25:03 +0100 (BST)
Received: from [192.168.123.191] (host-84-9-232-30.bulldogdsl.com [84.9.232.30])
	by mcr-smtp-002.bulldogdsl.com (Postfix) with ESMTP id 98EA8845DA0
	for <caml-list@yquem.inria.fr>; Tue, 27 Mar 2007 15:25:01 +0100 (BST)
Message-ID: <46092684.6010706@ed.ac.uk>
Date: Tue, 27 Mar 2007 15:13:24 +0100
From: Jeremy Yallop <jeremy.yallop@ed.ac.uk>
User-Agent: Icedove 1.5.0.9 (X11/20061220)
MIME-Version: 1.0
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Misunderstandings about the AST
References: <6f9f8f4a0703270644r52490af8ieeedb8f474b95f8e@mail.gmail.com>
In-Reply-To: <6f9f8f4a0703270644r52490af8ieeedb8f474b95f8e@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 4609293F.005 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; syntax:01 ocaml:01 ocaml-:01 parsing:01 parsetree:01 mli:01 constructors:01 desc:01 parser:01 constructors:01 parser:01 camlcvs:01 cvsweb:01 ocaml:01 parsing:01 

Loup Vaillant wrote:
> Pursuing my goal of making a lisp syntax for Ocaml, I began to take a
> close look at the AST (Ocaml-3.09.3/parsing/parsetree.mli). I don't
> understand some of the constructors in the type expression_desc:

Reading the source for the parser (where these constructors are used) 
and comparing it with the documentation should help you find the answers 
to almost all of your questions.

Parser source:
http://camlcvs.inria.fr/cgi-bin/cvsweb/ocaml/parsing/parser.mly?rev=1.126

Language reference:
http://caml.inria.fr/pub/docs/manual-ocaml/manual008.html

Jeremy.

