Return-Path: <garrigue@math.nagoya-u.ac.jp>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 669ACBC69
	for <caml-list@yquem.inria.fr>; Tue,  6 Mar 2007 01:31:31 +0100 (CET)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l260VRol025131
	for <caml-list@inria.fr>; Tue, 6 Mar 2007 01:31:30 +0100
Received: from localhost (orion [130.54.16.5])
	by kurims.kurims.kyoto-u.ac.jp (8.13.7/8.13.7) with ESMTP id l260VFKE015180;
	Tue, 6 Mar 2007 09:31:15 +0900 (JST)
Date: Tue, 06 Mar 2007 09:31:12 +0900 (JST)
Message-Id: <20070306.093112.108980630.garrigue@math.nagoya-u.ac.jp>
To: E.Maclean@ed.ac.uk
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] lablgtk GTree problem
From: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <d0fbb16b0703051622w13f2885eh5e4a9b277b8468fa@mail.gmail.com>
References: <d0fbb16b0703051622w13f2885eh5e4a9b277b8468fa@mail.gmail.com>
X-Mailer: Mew version 4.2 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 45ECB65F.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; lablgtk:01 model:01 model:01 iter:01 integers:01 integer:01 caml-list:01 surprising:01 garrigue:03 garrigue:03 jacques:03 jacques:03 let:03 let:03 nagoya-u:04 

From: "Ewen Maclean" <E.Maclean@ed.ac.uk>

> let on_row_activated (view:GTree.view) nps path column =
>   let model = view#model in
>   let row = model#get_iter path in
>   let name = model#get ~row ~column:str_col in
>   uprint ("Double-clicked row contains name " ^ name) ()
> 
> what I want is to work out is the integer index of row in the path. I read
> somewhere that I could use path#get_indices to return an array of integers
> which would tell me, but it tells me that path has no method get_indices.

Not surprising: a path is not an object :-)
You should use the function GTree.Path.get_indices.

Jacques Garrigue

