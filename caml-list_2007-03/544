Return-Path: <fw@deneb.enyo.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id E5688BC69
	for <caml-list@yquem.inria.fr>; Fri, 30 Mar 2007 09:31:04 +0200 (CEST)
Received: from mail.enyo.de (mail.enyo.de [212.9.189.167])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l2U7V3eb032253
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Fri, 30 Mar 2007 09:31:04 +0200
Received: from deneb.vpn.enyo.de ([212.9.189.177] helo=deneb.enyo.de)
	by mail.enyo.de with esmtp id 1HXBZa-0002NC-M2; Fri, 30 Mar 2007 09:30:58 +0200
Received: from fw by deneb.enyo.de with local (Exim 4.63)
	(envelope-from <fw@deneb.enyo.de>)
	id 1HXBZX-0001zX-Qd; Fri, 30 Mar 2007 09:30:55 +0200
From: Florian Weimer <fw@deneb.enyo.de>
To: "Yaron Minsky" <yminsky@cs.cornell.edu>
Cc: "Oliver Bandel" <oliver@first.in-berlin.de>, caml-list@inria.fr
Subject: Re: [Caml-list] int_of_string bug
References: <891bd3390703290927o4e1c6bb5gf8f562fedbc70096@mail.gmail.com>
	<20070329212931.GG6843@first.in-berlin.de>
	<891bd3390703291726ue71cfa6re8d4c3d66520e4d9@mail.gmail.com>
Date: Fri, 30 Mar 2007 09:30:55 +0200
In-Reply-To: <891bd3390703291726ue71cfa6re8d4c3d66520e4d9@mail.gmail.com>
	(Yaron Minsky's message of "Thu, 29 Mar 2007 20:26:06 -0400")
Message-ID: <878xdfmbm8.fsf@mid.deneb.enyo.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at discorde with ID 460CBCB8.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; bug:01 yaron:01 minsky:01 integer:01 exception:01 caml-list:01 short:01 int:01 string:02 florian:03 overflow:03 overhead:04 problem:05 sequences:05 uses:06 

* Yaron Minsky:

> That's a problem too, but there is at least a defensible reason for
> that, which is that it is expensive to get integer overflow to throw
> an exception.

i386 and amd64 have hardware support for that, so it's not very
expensive.  There are pretty short RISC sequences for the checks, too.

MLton uses the i386 hardware support, and I think you can disable the
checks, so measuring the overhead shouldn't be too hard.

