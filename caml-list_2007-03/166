Return-Path: <bhurt@janestcapital.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 53784BC6B
	for <caml-list@yquem.inria.fr>; Fri,  9 Mar 2007 17:02:30 +0100 (CET)
Received: from smtp.janestcapital.com (www.janestcapital.com [66.155.124.107])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l29G2SXu011082
	for <caml-list@yquem.inria.fr>; Fri, 9 Mar 2007 17:02:29 +0100
Received: from [192.168.250.117] [209.213.205.130] by janestcapital.com with ESMTP
  (SMTPD-9.10) id A51208DC; Fri, 09 Mar 2007 11:02:26 -0500
Message-ID: <45F18511.9060904@janestcapital.com>
Date: Fri, 09 Mar 2007 11:02:25 -0500
From: Brian Hurt <bhurt@janestcapital.com>
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.2) Gecko/20040804 Netscape/7.2 (ax)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Till Varoquaux <till.varoquaux@gmail.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Operator overloading
References: <3D1E4D9CA9BCE04D8F2B55F203AE4CE30666AB74@selma.roomandboard.com>	 <c1490a380703081305m534dbb94oc1f97c443fd46844@mail.gmail.com>	 <45F080C8.3070307@janestcapital.com> <9d3ec8300703081434r6e4987d0l5f737d873f65d9ee@mail.gmail.com>
In-Reply-To: <9d3ec8300703081434r6e4987d0l5f737d873f65d9ee@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 45F18514.003 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; overloading:01 amusing:01 pointer:01 pointer:01 ocaml:01 insult:98 nazi:98 misused:98 wrote:01 caml-list:01 explicitly:01 arithmetic:01 arithmetic:01 tend:02 constructive:03 

Till Varoquaux wrote:

> Hum...
>
> Instead of proving once again Godwin's law we might want to use
> constructive criticism (even though I also tend to flame more than my
> share)...


No, actually, I was making a point.  The fact that you don't like the 
point I was making doesn't make it a flame.  Disagreeing with you is not 
an insult.  Although I do find amusing the implication that bringing up 
pointer arithmetic is the equivelent to calling someone a Nazi.

Spelling the point out explicitly for those who missed it: when 
considering wether to add a feature to a language, you have to consider 
*BOTH* the valid uses of that feature *AND* the probable ways the 
feature will be misused and the problems it will cause.  You don't get 
to ignore the downsides.  Because, if you do, then there's no real 
reason why introducing pointer arithmetic into Ocaml is not a good idea.

Brian

