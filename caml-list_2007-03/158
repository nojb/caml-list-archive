Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 9A6CEBC69
	for <caml-list@yquem.inria.fr>; Fri,  9 Mar 2007 14:54:26 +0100 (CET)
Received: from ipmail03.adl2.internode.on.net (ipmail03.adl2.internode.on.net [203.16.214.135])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l29DsORX005644
	for <caml-list@inria.fr>; Fri, 9 Mar 2007 14:54:25 +0100
Received: from ppp19-103.lns2.syd7.internode.on.net (HELO [192.168.1.201]) ([59.167.19.103])
  by ipmail03.adl2.internode.on.net with ESMTP; 10 Mar 2007 00:24:22 +1030
X-IronPort-AV: i="4.14,267,1170595800"; 
   d="scan'208"; a="60383233:sNHT24467611"
Subject: RE: [Caml-list] Interactive technical computing
From: skaller <skaller@users.sourceforge.net>
To: Robert Fischer <RFischer@RoomAndBoard.com>
Cc: caml-list@inria.fr
In-Reply-To: <3D1E4D9CA9BCE04D8F2B55F203AE4CE30666AB82@selma.roomandboard.com>
References: 
	 <3D1E4D9CA9BCE04D8F2B55F203AE4CE30666AB82@selma.roomandboard.com>
Content-Type: text/plain
Date: Sat, 10 Mar 2007 00:54:18 +1100
Message-Id: <1173448458.22738.54.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.8.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 45F16710.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; bytecode:01 linkable:01 bytecode:01 ocaml:01 ocaml:01 sourceforge:01 wrote:01 dynamically:01 caml-list:01 binary:01 bounds:02 native:02 dynamic:03 loading:05 fri:05 

On Fri, 2007-03-09 at 07:33 -0600, Robert Fischer wrote:
> >> After all, Java and C# aren't intended to be used like that, yet they
> >> certainly have wide-spread adoption.
> >
> > They don't make binary shared libraries
> > because the architecture is a virtual machine driven by
> > bytecode .. they DO make dynamically linkable bytecode
> > libraries.
> >
> As long as you play within the bounds of their VM.  This is no different than Ocaml.

Performance is different :) That's why I use Ocaml native code
exclusively, which doesn't support dynamic loading (yet :)

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

