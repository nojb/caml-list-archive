Return-Path: <gordon.j.miller@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.5 required=5.0 tests=AWL,HTML_MESSAGE,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id CDD37BC6B
	for <caml-list@yquem.inria.fr>; Thu,  8 Mar 2007 03:22:32 +0100 (CET)
Received: from ik-out-1112.google.com (ik-out-1112.google.com [66.249.90.176])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l282MVRt013434
	for <caml-list@inria.fr>; Thu, 8 Mar 2007 03:22:32 +0100
Received: by ik-out-1112.google.com with SMTP id c29so367302ika
        for <caml-list@inria.fr>; Wed, 07 Mar 2007 18:22:31 -0800 (PST)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=Hb/sBmzlLupjvXCS7cnVSSOp1WD4EyKbzjE/SXmffsySkvF9NWIXUGdg9q03Y7vZoNS6oo0NdeL82xvnsu8Eo/gsdMooB9L6qQursuTbAevpsXawsp6f9NhHj72VQ+8fbimj0ztyComZ+dMhvHuFJJRNGFaNZCJMfrMh98KjfRo=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=FfZP9KkWZnAjcw8Bd5ZmxKjwEjWDJs5oNyG9nJ8kyN6sJa2Zhl1PWhGRs3oUkzmQs7z4kwIEwLRcMoSrFb/gNO4fOT3AHTOsnZXDPrOvQTqxyiU4a8fWhL+EZhsdLMJtdT8bJmwWIhlfl3y8MZ/lX27qM1OQMndk6XweOULCEKI=
Received: by 10.115.61.1 with SMTP id o1mr2438937wak.1173320550507;
        Wed, 07 Mar 2007 18:22:30 -0800 (PST)
Received: by 10.114.168.3 with HTTP; Wed, 7 Mar 2007 18:22:30 -0800 (PST)
Message-ID: <beed19130703071822u497edf98j94fc50b8b83435fc@mail.gmail.com>
Date: Wed, 7 Mar 2007 21:22:30 -0500
From: "Jim Miller" <gordon.j.miller@gmail.com>
To: "Yaron Minsky" <yminsky@cs.cornell.edu>
Subject: Re: OCaml Summer Project deadline approaching (was Re: [Caml-list] Interactive technical computing)
Cc: "Jon Harrop" <jon@ffconsultancy.com>, caml-list@inria.fr
In-Reply-To: <891bd3390703071811m2451d07ck8c688e2934ce5d4d@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_214883_13354365.1173320550463"
References: <891bd3390703071811m2451d07ck8c688e2934ce5d4d@mail.gmail.com>
X-j-chkmail-Score: MSGID : 45EF7367.002 on discorde : j-chkmail score : X : 0/20 1 0.000 -> 1
X-Miltered: at discorde with ID 45EF7367.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 yaron:01 minsky:01 yminsky:01 ocaml:01 idl:01 gnuplot:01 compilation:01 regexps:01 spawned:01 low-level:01 high-level:01 spawned:01 dlls:01 overloading:01 

------=_Part_214883_13354365.1173320550463
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

In looking through the list of summer project ideas at the website, there is
already one listed for the scientific visualization.  It even references R
as a good place to look for a starting point.

On 3/7/07, Yaron Minsky <yminsky@cs.cornell.edu> wrote:
>
> I definitely agree that this kind of interactive visualization is a big
> hole in the OCaml ecosystem.  If I might make a small plug, doing the
> initial work on a good interactive visualization system for OCaml would make
> a great project for the OCaml Summer Project (
> http://osp2007.janestcapital.com).
>
> This seems like a good time to remind people that the deadline for
> submissions is approaching fast.  All submissions must be in by March 15th,
> and decisions will be rendered by March 30th.  We already have a number of
> solid proposals, and would love to have more.  We hope to help bring some
> great OCaml software into existence this summer.
>
> y
>
> On 3/7/07, Jim Miller <gordon.j.miller@gmail.com> wrote:
> >
> > I think that this would be a potentially fantastic application!  As a
> > physicist I am frequently faced with the option of using an interactive tool
> > that supports graphics (PV-WAVE, IDL, R, and Matlab/Octave are very popular)
> > but is VERY slow or doing things in a fast but tedious language (C/C++ are
> > currently the rage with a few individuals that still do Fortran 9X).
> >
> > Having an OCaml based language that combines a top level command line
> > loop that allows me to interactive explore data and develop scripts but that
> > allows me to compile those into something fast could be a very, very useful
> > tool.  My particular domains are atmospheric photochemistry as well as
> > satellite mission planning and imagery exploitation.  We tend to do a LOT
> > less with 3D visualizations and much more with traditional line, contour,
> > and scatter plots.  We also do a lot of false color imagery.
> >
> > The closest that I have come to this is a quick module that allows me to
> > spawn a gnuplot program and pass command strings, via a pipe.  A few
> > functions to ensure that data is formatted properly and I have something
> > that's manageable.
> >
> > I'd be interested in conspiring/planning on something in this space.  It
> > would also be useful to see if there's a useful way to bridge this with R,
> > which is my current favorite language for doing statistical data analysis
> > and plot generation but it still suffers from the problems of speed.
> >
> > On 3/7/07, Jon Harrop < jon@ffconsultancy.com> wrote:
> > >
> > >
> > > Being a user of both OCaml and Mathematica, playing with the new F#
> > > language
> > > from Microsoft and watching tutorial videos about VPython:
> > >
> > >    http://showmedo.com/videos/series?name=pythonThompsonVPythonSeries
> > >
> > > has given me a lot of inspiration about interactive technical
> > > computing
> > > environments. This class of applications is hugely useful for working
> > > scientists and engineers because it lets you slice and dice your data
> > > in
> > > interesting ways whilst also giving you visual throwback and even
> > > letting you
> > > do some fancy visualisations.
> > >
> > > For example, I'm in the process of updating my ray tracer language
> > > comparison:
> > >
> > >   http://www.ffconsultancy.com/languages/ray_tracer/index.html
> > >
> > > and I'm using a mix of OCaml (to fire off compilation and execution
> > > commands)
> > > and Mathematica (to dissect the results, compute verbosity using
> > > regexps and
> > > plot graphs):
> > >
> > >    http://www.ffconsultancy.com/tmp/mathematica.png
> > >
> > > Mathematica's equivalent of the OCaml top-level is called a notebook.
> > > It
> > > provides expression input and result output, just like OCaml, but
> > > integrates
> > > graphics, adds typesetting and lots of mathematical functions.
> > > However, it is
> > > widely used for more general purpose programming despite being very
> > > slow.
> > >
> > > Using F# from Visual Studio 2005 provides some of this functionality.
> > > The
> > > following screenshots illustrate 2D and 3D graphics spawned from an F#
> > >
> > > interactive session using a little of my own code and
> > > DirectX/ComponentsXtra:
> > >
> > >    http://www.ffconsultancy.com/tmp/fs_xygraph.png
> > >    http://www.ffconsultancy.com/tmp/fs_3dplot.png
> > >
> > > For all non-trivials examples in F# it is necessary to spawn a
> > > separate thread
> > > to handle the GUI of the visualization, or the GUI will hang when the
> > > top-level is doing an intensive computation.
> > >
> > > I think F# has a great future because of its ability to spawn
> > > visualizations
> > > from a running interactive session. Expensive commercial offerings
> > > like
> > > Matlab and Mathematica are ok when you're doing something they have
> > > built-in
> > > (e.g. a Fourier transform) but when you're problem is not trivially
> > > decomposed into their built-in operators (e.g. a wavelet transform),
> > > F# and
> > > OCaml are typically 2-5x faster, and when you must resort to more
> > > general
> > > purpose programming F# and OCaml are often 100x faster.
> > >
> > > However, there is a lot of work to be done in getting competitive
> > > charting and
> > > visualization tools into F# and I'm thinking that OCaml could benefit
> > > from a
> > > joint venture here. Low-level routines would target DirectX in F# and
> > > OpenGL
> > > in OCaml but high-level routines could be language and platform
> > > agnostic,
> > > handling a scene graph that is essentially a typed version of
> > > Mathematica's
> > > to provide much faster graphics and even interactive visualisation
> > > (Mathematica is software rendered and not interactive!).
> > >
> > > This raises several questions:
> > >
> > > . What OCaml programs currently allow OpenGL-based visualizations to
> > > be
> > > spawned from the top-level?
> > >
> > > . Has anyone tried to write an IDE that mixes OCaml code with
> > > graphics?
> > >
> > > . Would anyone here be interested in a low-cost cross-platform
> > > technical
> > > computing environment based upon the OCaml and F# languages?
> > >
> > > Obviously I'm interested in this from a commercial perspective. That
> > > looks
> > > easy for F# but not so easy for OCaml. Compiled OCaml+OpenGL code is
> > > not as
> > > portable (between machines) as F#+DirectX. Also, I can sell F# DLLs
> > > and even
> > > make the library available to other .NET languages (albeit with a
> > > significantly less productive API).
> > >
> > > Finally, I'd like to note that operator overloading is probably the
> > > single
> > > biggest difference between my F# and OCaml code. The ability to apply
> > > + and -
> > > to many types, particularly vectors and matrices, makes this kind of
> > > work so
> > > much easier. Even if you have to add the odd type annotation. So I'd
> > > love to
> > > see a compatible implementation of overloading introduced into OCaml.
> > >
> > > I'd like to hear everyone's opinions on this as, it seems to me, we're
> > > sitting
> > > on the foundations of a great technical computing system.
> > >
> > > --
> > > Dr Jon D Harrop, Flying Frog Consultancy Ltd.
> > > OCaml for Scientists
> > > http://www.ffconsultancy.com/products/ocaml_for_scientists
> > >
> > > _______________________________________________
> > > Caml-list mailing list. Subscription management:
> > > http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> > > Archives: http://caml.inria.fr
> > > Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> > > Bug reports: http://caml.inria.fr/bin/caml-bugs
> > >
> >
> >
> > _______________________________________________
> > Caml-list mailing list. Subscription management:
> > http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> > Archives: http://caml.inria.fr
> > Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> > Bug reports: http://caml.inria.fr/bin/caml-bugs
> >
> >
>

------=_Part_214883_13354365.1173320550463
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

In looking through the list of summer project ideas at the website, there is already one listed for the scientific visualization.&nbsp; It even references R as a good place to look for a starting point.<br><br><div><span class="gmail_quote">
On 3/7/07, <b class="gmail_sendername">Yaron Minsky</b> &lt;<a href="mailto:yminsky@cs.cornell.edu">yminsky@cs.cornell.edu</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
I definitely agree that this kind of interactive visualization is a big hole in the OCaml ecosystem.&nbsp; If I might make a small plug, doing the initial work on a good interactive visualization system for OCaml would make a great project for the OCaml Summer Project (
<a href="http://osp2007.janestcapital.com" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://osp2007.janestcapital.com</a>).<br><br>This seems like a good time to remind people that the deadline for submissions is approaching fast.&nbsp; All submissions must be in by March 15th, and decisions will be rendered by March 30th.&nbsp; We already have a number of solid proposals, and would love to have more.&nbsp; We hope to help bring some great OCaml software into existence this summer.
<br><br>y<br><br><div><span class="gmail_quote">On 3/7/07, <b class="gmail_sendername">Jim Miller</b> &lt;<a href="mailto:gordon.j.miller@gmail.com" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">
gordon.j.miller@gmail.com</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
I think that this would be a potentially fantastic application!&nbsp; As a physicist I am frequently faced with the option of using an interactive tool that supports graphics (PV-WAVE, IDL, R, and Matlab/Octave are very popular) but is VERY slow or doing things in a fast but tedious language (C/C++ are currently the rage with a few individuals that still do Fortran 9X).
<br><br>Having an OCaml based language that combines a top level command line loop that allows me to interactive explore data and develop scripts but that allows me to compile those into something fast could be a very, very useful tool.&nbsp; My particular domains are atmospheric photochemistry as well as satellite mission planning and imagery exploitation.&nbsp; We tend to do a LOT less with 3D visualizations and much more with traditional line, contour, and scatter plots.&nbsp; We also do a lot of false color imagery.
<br><br>The closest that I have come to this is a quick module that allows me to spawn a gnuplot program and pass command strings, via a pipe.&nbsp; A few functions to ensure that data is formatted properly and I have something that&#39;s manageable.
<br><br>I&#39;d be interested in conspiring/planning on something in this space.&nbsp; It would also be useful to see if there&#39;s a useful way to bridge this with R, which is my current favorite language for doing statistical data analysis and plot generation but it still suffers from the problems of speed.
<div><span><br><br><div><span class="gmail_quote">On 3/7/07, <b class="gmail_sendername">Jon Harrop</b> &lt;<a href="mailto:jon@ffconsultancy.com" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">
jon@ffconsultancy.com</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<br>Being a user of both OCaml and Mathematica, playing with the new F# language<br>from Microsoft and watching tutorial videos about VPython:<br><br>&nbsp;&nbsp;<a href="http://showmedo.com/videos/series?name=pythonThompsonVPythonSeries" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">


http://showmedo.com/videos/series?name=pythonThompsonVPythonSeries</a><br><br>has given me a lot of inspiration about interactive technical computing<br>environments. This class of applications is hugely useful for working
<br>scientists and engineers because it lets you slice and dice your data in<br>interesting ways whilst also giving you visual throwback and even letting you<br>do some fancy visualisations.<br><br>For example, I&#39;m in the process of updating my ray tracer language comparison:
<br><br>&nbsp;&nbsp;<a href="http://www.ffconsultancy.com/languages/ray_tracer/index.html" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://www.ffconsultancy.com/languages/ray_tracer/index.html</a><br>

<br>and I&#39;m using a mix of OCaml (to fire off compilation and execution commands)
<br>and Mathematica (to dissect the results, compute verbosity using regexps and<br>plot graphs):<br><br>&nbsp;&nbsp;<a href="http://www.ffconsultancy.com/tmp/mathematica.png" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">

http://www.ffconsultancy.com/tmp/mathematica.png</a><br>
<br>Mathematica&#39;s equivalent of the OCaml top-level is called a notebook. It<br>provides expression input and result output, just like OCaml, but integrates<br>graphics, adds typesetting and lots of mathematical functions. However, it is
<br>widely used for more general purpose programming despite being very slow.<br><br>Using F# from Visual Studio 2005 provides some of this functionality. The<br>following screenshots illustrate 2D and 3D graphics spawned from an F#
<br>interactive session using a little of my own code and DirectX/ComponentsXtra:<br><br>&nbsp;&nbsp;<a href="http://www.ffconsultancy.com/tmp/fs_xygraph.png" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">

http://www.ffconsultancy.com/tmp/fs_xygraph.png</a><br>&nbsp;&nbsp;<a href="http://www.ffconsultancy.com/tmp/fs_3dplot.png" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">
http://www.ffconsultancy.com/tmp/fs_3dplot.png</a><br><br>For all non-trivials examples in F# it is necessary to spawn a separate thread<br>to handle the GUI of the visualization, or the GUI will hang when the<br>top-level is doing an intensive computation.
<br><br>I think F# has a great future because of its ability to spawn visualizations<br>from a running interactive session. Expensive commercial offerings like<br>Matlab and Mathematica are ok when you&#39;re doing something they have built-in
<br>(e.g. a Fourier transform) but when you&#39;re problem is not trivially<br>decomposed into their built-in operators (e.g. a wavelet transform), F# and<br>OCaml are typically 2-5x faster, and when you must resort to more general
<br>purpose programming F# and OCaml are often 100x faster.<br><br>However, there is a lot of work to be done in getting competitive charting and<br>visualization tools into F# and I&#39;m thinking that OCaml could benefit from a
<br>joint venture here. Low-level routines would target DirectX in F# and OpenGL<br>in OCaml but high-level routines could be language and platform agnostic,<br>handling a scene graph that is essentially a typed version of Mathematica&#39;s
<br>to provide much faster graphics and even interactive visualisation<br>(Mathematica is software rendered and not interactive!).<br><br>This raises several questions:<br><br>. What OCaml programs currently allow OpenGL-based visualizations to be
<br>spawned from the top-level?<br><br>. Has anyone tried to write an IDE that mixes OCaml code with graphics?<br><br>. Would anyone here be interested in a low-cost cross-platform technical<br>computing environment based upon the OCaml and F# languages?
<br><br>Obviously I&#39;m interested in this from a commercial perspective. That looks<br>easy for F# but not so easy for OCaml. Compiled OCaml+OpenGL code is not as<br>portable (between machines) as F#+DirectX. Also, I can sell F# DLLs and even
<br>make the library available to other .NET languages (albeit with a<br>significantly less productive API).<br><br>Finally, I&#39;d like to note that operator overloading is probably the single<br>biggest difference between my F# and OCaml code. The ability to apply + and -
<br>to many types, particularly vectors and matrices, makes this kind of work so<br>much easier. Even if you have to add the odd type annotation. So I&#39;d love to<br>see a compatible implementation of overloading introduced into OCaml.
<br><br>I&#39;d like to hear everyone&#39;s opinions on this as, it seems to me, we&#39;re sitting<br>on the foundations of a great technical computing system.<br><br>--<br>Dr Jon D Harrop, Flying Frog Consultancy Ltd.<br>


OCaml for Scientists<br><a href="http://www.ffconsultancy.com/products/ocaml_for_scientists" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://www.ffconsultancy.com/products/ocaml_for_scientists
</a><br><br>_______________________________________________<br>Caml-list mailing list. Subscription management:
<br><a href="http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list</a><br>Archives: <a href="http://caml.inria.fr" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">

http://caml.inria.fr</a><br>Beginner&#39;s list: 
<a href="http://groups.yahoo.com/group/ocaml_beginners" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://groups.yahoo.com/group/ocaml_beginners</a><br>Bug reports: <a href="http://caml.inria.fr/bin/caml-bugs" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">

http://caml.inria.fr/bin/caml-bugs</a><br></blockquote>
</div><br>
</span></div><br>_______________________________________________<br>Caml-list mailing list. Subscription management:<br><a href="http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">

http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list</a><br>Archives: <a href="http://caml.inria.fr" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://caml.inria.fr</a><br>Beginner&#39;s list: 
<a href="http://groups.yahoo.com/group/ocaml_beginners" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">http://groups.yahoo.com/group/ocaml_beginners</a><br>Bug reports: <a href="http://caml.inria.fr/bin/caml-bugs" target="_blank" onclick="return top.js.OpenExtLink(window,event,this)">

http://caml.inria.fr/bin/caml-bugs</a><br><br></blockquote></div><br>
</blockquote></div><br>

------=_Part_214883_13354365.1173320550463--

