Return-Path: <mle+ocaml@mega-nerd.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id C9C51BC69
	for <caml-list@yquem.inria.fr>; Thu,  8 Mar 2007 03:13:02 +0100 (CET)
Received: from smtp.syd.people.net.au (smtp.syd.people.net.au [218.214.225.98])
	by concorde.inria.fr (8.13.6/8.13.6) with SMTP id l282D0QA003835
	for <caml-list@inria.fr>; Thu, 8 Mar 2007 03:13:01 +0100
Received: (qmail 28306 invoked from network); 8 Mar 2007 02:13:04 -0000
Received: from unknown (HELO coltrane.mega-nerd.net) (218.214.64.136)
  by smtp.syd.people.net.au with SMTP; 8 Mar 2007 02:13:04 -0000
Received: from coltrane (coltrane [192.168.1.101])
	by coltrane.mega-nerd.net (Postfix) with SMTP id 7564C7ADA
	for <caml-list@inria.fr>; Thu,  8 Mar 2007 13:12:56 +1100 (EST)
Date: Thu, 8 Mar 2007 13:12:55 +1100
From: Erik de Castro Lopo <mle+ocaml@mega-nerd.com>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Interactive technical computing
Message-Id: <20070308131255.44cc175b.mle+ocaml@mega-nerd.com>
In-Reply-To: <200703080113.22721.jon@ffconsultancy.com>
References: <200703080113.22721.jon@ffconsultancy.com>
Organization: Erik Conspiracy Secret Labs
X-Mailer: Sylpheed version 2.3.0beta5 (GTK+ 2.8.20; i486-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 45EF712C.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 overloading:01 ocaml:01 vectors:01 matrices:01 annotation:01 overloading:01 cheers:01 crutch:98 wrote:01 caml-list:01 types:03 erik:04 erik:04 differences:05 

Jon Harrop wrote:

> Finally, I'd like to note that operator overloading is probably the single 
> biggest difference between my F# and OCaml code. The ability to apply + and - 
> to many types, particularly vectors and matrices, makes this kind of work so 
> much easier. Even if you have to add the odd type annotation. So I'd love to 
> see a compatible implementation of overloading introduced into OCaml.

I'm mainly a Linux guy so the chances of me getting up close and personal
with F# are exactly zero :-). However, I am interested in hearing about
the differences between F# and Ocaml wrt operator overloading. Care to
clue me (and everyone else) in?

Cheers,
Erik
-- 
+-----------------------------------------------------------+
  Erik de Castro Lopo
+-----------------------------------------------------------+
"Reality is just a crutch for people that can't handle CyberSpace!!"
- Hank Duderstadt

