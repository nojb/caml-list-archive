Return-Path: <RFischer@RoomAndBoard.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 7B23CBC69
	for <caml-list@yquem.inria.fr>; Fri,  9 Mar 2007 17:40:57 +0100 (CET)
Received: from mail.roomandboard.com (mail.roomandboard.com [66.84.219.55])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l29GetES006858
	for <caml-list@yquem.inria.fr>; Fri, 9 Mar 2007 17:40:56 +0100
Received: from selma.roomandboard.com ([192.168.101.46]) by mail.roomandboard.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Fri, 9 Mar 2007 10:40:51 -0600
X-MimeOLE: Produced By Microsoft Exchange V6.0.6603.0
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Subject: RE: [Caml-list] Operator overloading
Date: Fri, 9 Mar 2007 10:40:50 -0600
Message-ID: <3D1E4D9CA9BCE04D8F2B55F203AE4CE30666AB96@selma.roomandboard.com>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: [Caml-list] Operator overloading
Thread-Index: AcdiabIysWA5v1DcTzmb3qbFbqfqig==
From: "Robert Fischer" <RFischer@RoomAndBoard.com>
To: <caml-list@yquem.inria.fr>
X-OriginalArrivalTime: 09 Mar 2007 16:40:51.0551 (UTC) FILETIME=[B2E0BEF0:01C76269]
X-Miltered: at discorde with ID 45F18E17.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; overloading:01 inference:01 overloading:01 inference:01 foo:01 functors:01 formalize:01 annotations:01 beginner's:01 ocaml:01 bug:01 beginners:01 caml-list:01 caml-list:01 zimmerman:01 

Exactly.  If I was just going for inference and brevity, I'd still be =
coding in Perl.

~~ Robert.

-----Original Message-----
From: caml-list-bounces@yquem.inria.fr
[mailto:caml-list-bounces@yquem.inria.fr]On Behalf Of Ian Zimmerman
Sent: Friday, March 09, 2007 10:28 AM
To: Jon Harrop
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Operator overloading


> But aren't we all here because we like inference and brevity?

Inference: On condition it is _controlled_.  I.e. seeing operator
<foo> used on a complex type, I need to know I have seen its
definition and satisfied myself that it has the expected semantic
properties.  That's just what functors formalize.

Brevity: There's the pesky tradeoff with some type annotations being
required when you introduce overloading.

_______________________________________________
Caml-list mailing list. Subscription management:
http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
Archives: http://caml.inria.fr
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
Bug reports: http://caml.inria.fr/bin/caml-bugs

