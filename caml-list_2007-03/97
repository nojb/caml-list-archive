Return-Path: <RFischer@RoomAndBoard.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 3980BBC69
	for <caml-list@yquem.inria.fr>; Thu,  8 Mar 2007 15:41:13 +0100 (CET)
Received: from mail.roomandboard.com (mail.roomandboard.com [66.84.219.55])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l28EfBgv008480
	for <caml-list@yquem.inria.fr>; Thu, 8 Mar 2007 15:41:12 +0100
Received: from selma.roomandboard.com ([192.168.101.46]) by mail.roomandboard.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Thu, 8 Mar 2007 08:41:09 -0600
X-MimeOLE: Produced By Microsoft Exchange V6.0.6603.0
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Subject: RE: [Caml-list] F#
Date: Thu, 8 Mar 2007 08:41:09 -0600
Message-ID: <3D1E4D9CA9BCE04D8F2B55F203AE4CE30666AB5E@selma.roomandboard.com>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: [Caml-list] F#
Thread-Index: Acdhj84XwSlXDZx8SlWfDmzymxCKAg==
From: "Robert Fischer" <RFischer@RoomAndBoard.com>
To: <caml-list@yquem.inria.fr>
X-OriginalArrivalTime: 08 Mar 2007 14:41:09.0532 (UTC) FILETIME=[CFA5DDC0:01C7618F]
X-Miltered: at concorde with ID 45F02087.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; overloading:01 overloading:01 inference:01 compiler:01 duck:98 typing:01 typing:01 caml-list:01 checking:02 numerical:03 overloaded:07 symbols:08 mess:09 mess:09 actually:10 

> However, operator overloading (i.e. overloading symbols) makes =
numerical code=20
> so much easier to read that it is worth sacrificing some inference for =
it.
>

Unless, of course, you like to know what it is you're actually doing.

It's bad enough trying to figure out what "+" means in an overloaded =
environment with nominal typing.  With duck typing, it's a mess, and =
it's a mess that both you and the compiler have to work hard to figure =
out.

I highly suggest checking out the Programmer-to-Programmer book on C# =
and their conversation about operator overloading.  They do a nice job =
documenting just why it's such a dangerous tool in the toolbox.

~~ Robert.

