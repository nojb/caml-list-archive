Return-Path: <RFischer@RoomAndBoard.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 14B87BC69
	for <caml-list@yquem.inria.fr>; Fri,  9 Mar 2007 15:21:54 +0100 (CET)
Received: from mail.roomandboard.com (mail.roomandboard.com [66.84.219.55])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l29ELnBx015840
	for <caml-list@yquem.inria.fr>; Fri, 9 Mar 2007 15:21:50 +0100
Received: from selma.roomandboard.com ([192.168.101.46]) by mail.roomandboard.com with Microsoft SMTPSVC(5.0.2195.6713);
	 Fri, 9 Mar 2007 08:21:49 -0600
X-MimeOLE: Produced By Microsoft Exchange V6.0.6603.0
content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Subject: RE: [Caml-list] Interactive technical computing
Date: Fri, 9 Mar 2007 08:21:49 -0600
Message-ID: <3D1E4D9CA9BCE04D8F2B55F203AE4CE30666AB88@selma.roomandboard.com>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: [Caml-list] Interactive technical computing
Thread-Index: AcdiVkZLN6h3oDYLSUm2wc2n1N7lBg==
From: "Robert Fischer" <RFischer@RoomAndBoard.com>
To: "Jon Harrop" <jon@ffconsultancy.com>, <caml-list@yquem.inria.fr>
X-OriginalArrivalTime: 09 Mar 2007 14:21:49.0101 (UTC) FILETIME=[4663E5D0:01C76256]
X-Miltered: at concorde with ID 45F16D7D.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 gnuplot:01 byte:01 byte:01 run-time:01 bytecode:01 linkable:01 bytecode:01 run-time:01 gnuplot:01 beginner's:01 bug:01 frog:98 beginners:01 

> Can you dynamically load code and get native performance? Not with =
OCaml.
>
> I've got a killer high-performance 2D and 3D visualization library =
written in=20
> OCaml and I'd like to sell it, but I don't want to sell the source =
code=20
> because I value it too much. What can I do? Well, I can port it to F# =
and=20
> sell it there. In the mean time, OCaml users are stuck with GNUPlot.
>
Do you have metrics showing that performance is better with F# than =
OCaml in these two cases?

>From what I understand, F# has a major performance issue resulting from =
the way the .Net VM handles allocation.  Is that old info?

> Can you compile to a cross-platform format and keep native =
performance? Not=20
> with OCaml.
>
F# goes to byte code, OCaml goes to byte code.  If you want to be =
"cross-platform", you're pretty much headed to a VM one way or another.

> Can you write an interactive environment (top level) and keep native=20
> performance? Not with OCaml.
>
The top-level is something I've been hacking on a bit, and I am a bit =
cranky with it right now, too.  I'll post something on it later.

> Can you link to libraries (e.g. OpenGL) and be cross-platform? Not =
with OCaml=20
> (I think, because you need a custom run-time).
>
What are you doing with F# where you see it as more "cross-platform" =
than OCaml?  I guess I don't understand the charge.

>From what I understand, your basic argument is "F# is cross-compatible =
with the .Net framework, and therefore better".  This is definitely =
something I agree with.  If I trusted the .Net framework to ever become =
and remain genuinely cross-platform (I expect Mono to be killed by =
vicious attack lawyers as soon as MS cares), I'd be a lot more inclined =
to use it.

~~ Robert.


-----Original Message-----
From: caml-list-bounces@yquem.inria.fr
[mailto:caml-list-bounces@yquem.inria.fr]On Behalf Of Jon Harrop
Sent: Friday, March 09, 2007 7:49 AM
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Interactive technical computing


On Friday 09 March 2007 13:33, Robert Fischer wrote:
> > They don't make binary shared libraries
> > because the architecture is a virtual machine driven by
> > bytecode .. they DO make dynamically linkable bytecode
> > libraries.
>
> As long as you play within the bounds of their VM.  This is no =
different
> than Ocaml.

On the contrary, it is very different:

Can you dynamically load code and get native performance? Not with =
OCaml.

Can you compile to a cross-platform format and keep native performance? =
Not=20
with OCaml.

Can you write an interactive environment (top level) and keep native=20
performance? Not with OCaml.

Can you link to libraries (e.g. OpenGL) and be cross-platform? Not with =
OCaml=20
(I think, because you need a custom run-time).

I've got a killer high-performance 2D and 3D visualization library =
written in=20
OCaml and I'd like to sell it, but I don't want to sell the source code=20
because I value it too much. What can I do? Well, I can port it to F# =
and=20
sell it there. In the mean time, OCaml users are stuck with GNUPlot.

--=20
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
OCaml for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

_______________________________________________
Caml-list mailing list. Subscription management:
http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
Archives: http://caml.inria.fr
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
Bug reports: http://caml.inria.fr/bin/caml-bugs

