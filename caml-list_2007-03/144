Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 02E83BC6E
	for <caml-list@yquem.inria.fr>; Fri,  9 Mar 2007 11:26:17 +0100 (CET)
Received: from ptb-relay01.plus.net (ptb-relay01.plus.net [212.159.14.212])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l29AQG3D016466
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Fri, 9 Mar 2007 11:26:16 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay01.plus.net with esmtp (Exim) id 1HPcIi-0001Za-2L
	for caml-list@yquem.inria.fr; Fri, 09 Mar 2007 10:26:16 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Operator overloading
Date: Fri, 9 Mar 2007 10:20:26 +0000
User-Agent: KMail/1.9.5
References: <3D1E4D9CA9BCE04D8F2B55F203AE4CE30666AB74@selma.roomandboard.com>
In-Reply-To: <3D1E4D9CA9BCE04D8F2B55F203AE4CE30666AB74@selma.roomandboard.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200703091020.26560.jon@ffconsultancy.com>
X-Miltered: at discorde with ID 45F13648.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; overloading:01 overloading:01 language's:01 inference:01 annotations:01 emacs:01 emacs:01 ocaml:01 ocaml:01 embrace:98 frog:98 wrote:01 imho:01 abstract:01 caml-list:01 

On Thursday 08 March 2007 20:02, Robert Fischer wrote:
> Which is exactly my point.  You should have to document all that, because
> they are genuinely different operations.  You have these operations, so why
> shouldn't you document them?  Or, better yet, abstract them and organize
> them.  By using operator overloading, you're sweeping under the rug genuine
> complexity -- something that my surprise later developers!

Because the distinction is purely incidental as it depends upon the language's 
choice of type system.

> When I see "+", I want to know what that means.  With operator overloading,
> I don't know.

The same can be said of type inference. Then you're advocating explicit type 
annotations everywhere.

> An IDE might help me out there, but that's just polishing a 
> genuine ding on code readbility and maintainability.  Why should I have to
> rely on an IDE to make sense of my code?

This is precisely why I rely so heavily on Tuareg's type throwback in Emacs.

If you sacrifice your development environment (even if it is just emacs) then 
productivity goes down. Failing to embrace a future of graphical IDEs is a 
bad idea, IMHO.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
OCaml for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

