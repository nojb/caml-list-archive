Return-Path: <rich@annexia.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 3732BBBAF
	for <caml-list@yquem.inria.fr>; Tue, 10 Jun 2008 22:55:04 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApIBAMiGTkhQRFuwiGdsb2JhbACSEQEBAQ8gnyU
X-IronPort-AV: E=Sophos;i="4.27,619,1204498800"; 
   d="scan'208";a="11858521"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 10 Jun 2008 22:55:04 +0200
Received: from rich by furbychan.cocan.org with local (Exim 4.63)
	(envelope-from <rich@annexia.org>)
	id 1K6Arv-0008TQ-6i; Tue, 10 Jun 2008 21:55:03 +0100
Date: Tue, 10 Jun 2008 21:55:02 +0100
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] optimization of sequence of List.map and inlining
Message-ID: <20080610205502.GA28949@annexia.org>
References: <676aba050806101201x526f03b1lf1fdbed665ee2e3f@mail.gmail.com> <200806102021.36680.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200806102021.36680.jon@ffconsultancy.com>
User-Agent: Mutt/1.5.13 (2006-08-11)
From: Richard Jones <rich@annexia.org>
X-Spam: no; 0.00; inlining:01 0100,:01 mls:01 redefined:01 camlp:01 camlp:01 10,:98 wrote:01 caml-list:01 optimization:03 let:03 clash:05 tue:06 red:92 function:08 

On Tue, Jun 10, 2008 at 08:21:36PM +0100, Jon Harrop wrote:
> In MLs, you deforest by hand. You might like to use a function composition 
> operator like << from F#:
> 
>   let lst = map (f << f) lst

One word of caution from someone who redefined << and >> as shift
operators in thousands of lines of code, then had to convert them back
again: << and >> aren't a good choice for operator name because they
clash with the quotation system in camlp4.  So the original poster
might want to choose another name if they're using camlp4 :-)

Rich.

-- 
Richard Jones
Red Hat

