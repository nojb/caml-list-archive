Return-Path: <charles.hymans@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=HTML_MESSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 06AE7BBAF
	for <caml-list@yquem.inria.fr>; Tue, 10 Jun 2008 20:15:16 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjYBAMBhTkhC+Vypc2dsb2JhbACCPTaPHQEMAwQECQ8FmS6FPg
X-IronPort-AV: E=Sophos;i="4.27,618,1204498800"; 
   d="scan'208";a="13789642"
Received: from ug-out-1314.google.com ([66.249.92.169])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 10 Jun 2008 20:15:15 +0200
Received: by ug-out-1314.google.com with SMTP id m4so129534uge.18
        for <caml-list@yquem.inria.fr>; Tue, 10 Jun 2008 11:15:15 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to
         :subject:mime-version:content-type;
        bh=l9R7skCi5NLlRaYL1vtAqlXTMHoL23kCTfxy+fUSiuI=;
        b=c+I0VqgQ9KCI/kdmeYCnYvJlLmQCgSukTIu9ZEM0UpD2rUX19HsAZcPmJ8h5bzCmop
         AY8i86Qz2EJyuXQ12/CBt6ADrw88Kcqi/tIUX+ikmQjGJjBTdBICvLyaOBOYgHkGfu5T
         YNfpevfgnHbzr4uUBhEyGHTJkPhJz8MVxwOwQ=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:mime-version:content-type;
        b=IArmHiWiyge+YQ0VeGTp1NaolZ8/F4mJCgT5f/EB7qoFeezwDEkjbMU1b4rHK2kcFU
         AOi+IVfFNISkXu+8MVi2xS3ABVqQGH3m4MRRi0SSsg6Cz3oPKWfJRF5UTf94CxUCotU0
         mnL8lkc8emvlh4kCxfAit7GATUshalH5LjR0Y=
Received: by 10.210.80.2 with SMTP id d2mr4389434ebb.7.1213121714677;
        Tue, 10 Jun 2008 11:15:14 -0700 (PDT)
Received: by 10.210.39.11 with HTTP; Tue, 10 Jun 2008 11:15:13 -0700 (PDT)
Message-ID: <676aba050806101115p2e7ffd35hfead041ff3f4af75@mail.gmail.com>
Date: Tue, 10 Jun 2008 20:15:13 +0200
From: "Charles Hymans" <charles.hymans@gmail.com>
To: caml-list@yquem.inria.fr
Subject: ocamlopt, .cmxa and "not a compilation unit description" error Options
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_9556_9851370.1213121714687"
X-Spam: no; 0.00; ocamlopt:01 cmxa:01 compilation:01 ocamlc:01 lib:01 cmxa:01 ocamlopt:01 lib:01 compilation:01 ocamlc:01 cma:01 cma:01 nums:01 nums:01 compiling:02 

------=_Part_9556_9851370.1213121714687
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hi,

I'd like to generate a library from a file that uses the nums library
(in a way such that the final user of my library does not have to
specify that nums is necessary).

I was able to generate a .cma with the following command:
ocamlc -a nums.cma file.ml -o lib.cma

However to generate a .cmxa, the command:
ocamlopt -a nums.cmxa file.ml -o lib.cmxa

fails and reports the error that "nums.cmxa is not a compilation unit
description."

I can always do:
ocamlopt -a file.ml -o lib.cmxa

But the user of my library will have to necessarily specify nums.cmxa
when compiling his project.
Is there a way to go around this? (for instance, by putting the option
nums.cmxa into the library?)

Thank you.

------=_Part_9556_9851370.1213121714687
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

<div id="inbdy"><a name="msg_747e3baf1294ccd1"></a>Hi, <br>
<p>I&#39;d like to generate a library from a file that uses the nums library <br>(in a way such that the final user of my library does not have to <br>specify that nums is necessary). <br>
<p>I was able to generate a .cma with the following command: <br>ocamlc -a nums.cma <a href="http://file.ml">file.ml</a> -o lib.cma <br>
<p>However to generate a .cmxa, the command: <br>ocamlopt -a nums.cmxa <a href="http://file.ml">file.ml</a> -o lib.cmxa <br>
<p>fails and reports the error that &quot;nums.cmxa is not a compilation unit <br>description.&quot; <br>
<p>I can always do: <br>ocamlopt -a <a href="http://file.ml">file.ml</a> -o lib.cmxa <br>
<p>But the user of my library will have to necessarily specify nums.cmxa <br>when compiling his project. <br>Is there a way to go around this? (for instance, by putting the option <br>nums.cmxa into the library?) <br>
<p>Thank you. <br></p></p></p></p></p></p></p></div>

------=_Part_9556_9851370.1213121714687--

