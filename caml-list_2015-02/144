Return-Path: <garrigue@math.nagoya-u.ac.jp>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id EC6FF7F77F
	for <caml-list@sympa.inria.fr>; Tue, 24 Feb 2015 05:38:14 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  garrigue@math.nagoya-u.ac.jp) identity=pra;
  client-ip=133.6.130.5;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="garrigue@math.nagoya-u.ac.jp";
  x-sender="garrigue@math.nagoya-u.ac.jp";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  garrigue@math.nagoya-u.ac.jp) identity=mailfrom;
  client-ip=133.6.130.5;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="garrigue@math.nagoya-u.ac.jp";
  x-sender="garrigue@math.nagoya-u.ac.jp";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mailhost.math.nagoya-u.ac.jp) identity=helo;
  client-ip=133.6.130.5;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="garrigue@math.nagoya-u.ac.jp";
  x-sender="postmaster@mailhost.math.nagoya-u.ac.jp";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0AsAQAl/+tUlwWCBoVbhDKDCMYCAoFrAQEBAQEBEAEBAQEBCBYHQoQPAQEBAwEjHQMBNQEBAwsJAhgCAiYCAlcGE4gnB50gm3xwhGgCjn6EcQEBAQEBAQEDAQEBAQEBAQEBEgEGgSGJcoQ7MweCaC+BFIVnhGeOTIEbhUOJF4M+hB8vMYJDAQEB
X-IPAS-Result: A0AsAQAl/+tUlwWCBoVbhDKDCMYCAoFrAQEBAQEBEAEBAQEBCBYHQoQPAQEBAwEjHQMBNQEBAwsJAhgCAiYCAlcGE4gnB50gm3xwhGgCjn6EcQEBAQEBAQEDAQEBAQEBAQEBEgEGgSGJcoQ7MweCaC+BFIVnhGeOTIEbhUOJF4M+hB8vMYJDAQEB
X-IronPort-AV: E=Sophos;i="5.09,636,1418079600"; 
   d="scan'208";a="101082893"
Received: from rabbit.math.nagoya-u.ac.jp (HELO mailhost.math.nagoya-u.ac.jp) ([133.6.130.5])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 24 Feb 2015 05:38:12 +0100
Received: from mailhost.math.nagoya-u.ac.jp (localhost [127.0.0.1])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTP id E9C6E63DB;
	Tue, 24 Feb 2015 13:38:08 +0900 (JST)
Received: from mailhost.math.nagoya-u.ac.jp (localhost [127.0.0.1])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTP id 71A244159;
	Tue, 24 Feb 2015 13:38:08 +0900 (JST)
DKIM-Signature: v=1; a=rsa-sha1; c=relaxed; d=math.nagoya-u.ac.jp; h=
	subject:mime-version:content-type:from:in-reply-to:date:cc
	:content-transfer-encoding:message-id:references:to; s=alpha;
	 bh=E2293k1Chp6zlYbFxCsZjpA+5bc=; b=Q7qIpqkHNNFdxLKRHw1zA7CWSJr8
	689d/1J5xrQ29MlbR7kA9NZ8Grix4U0wWSXYi2Qp4LcStX7K9eqr+nLw9zGpjx94
	rMvKK7hDKrCfuVJjGKFsEWMaxPgasE3pzr3036MSG0joNLBNqfna9FkxIkZGXRqE
	lneMf+Iwzh/KbQA=
DomainKey-Signature: a=rsa-sha1; h=Received:Subject:Mime-Version:Content-Type:From:In-Reply-To:Date:Cc:Content-Transfer-Encoding:Message-Id:References:To:X-Mailer; b=DL+lBoTOyoCy+GFUoSaSBVPsFo9lqf3miaiZjyYXDDL6dK6Ziy/FU0yuEWlL4rQ8fbSMy7vjp+ClnRgt+UK2Ro4A/8dW/Xlxs6VGT9Adk1wxjIL/D/jZwxgLPHWZKe38YEk6BzzFd2vrwQN1YrBx8cn1xOLgaRO5YWHH3GewhoY=; c=nofws; d=math.nagoya-u.ac.jp; q=dns; s=alpha
Received: from [192.168.1.212] (bsdserver10-alias1.math.nagoya-u.ac.jp [172.16.62.1])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTPSA id E2FC12532;
	Tue, 24 Feb 2015 13:38:07 +0900 (JST)
Mime-Version: 1.0 (Mac OS X Mail 8.2 \(2070.6\))
Content-Type: text/plain; charset=utf-8
From: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <CAPFanBFiBB7qQT=3NCQv6TNN4ovw6nA3RJQ_yEKPhbLLyT1dOA@mail.gmail.com>
Date: Tue, 24 Feb 2015 13:38:15 +0900
Cc: Carl Eastlund <ceastlund@janestreet.com>,
 OCaml Mailing List <caml-list@inria.fr>
Content-Transfer-Encoding: quoted-printable
Message-Id: <B9663FA4-652C-4D85-B1A5-104E4E5ABAD1@math.nagoya-u.ac.jp>
References: <CALyFioQxTr+kGYp_94d9LMqcO6xmLCFqA_PiKoSmAW79oOUY6Q@mail.gmail.com> <CAPFanBFiBB7qQT=3NCQv6TNN4ovw6nA3RJQ_yEKPhbLLyT1dOA@mail.gmail.com>
To: Gabriel Scherer <gabriel.scherer@gmail.com>
X-Mailer: Apple Mail (2.2070.6)
Subject: Re: [Caml-list] Weird type error involving 'include' and
 applicative functors

On 2015/02/15 19:26, Gabriel Scherer wrote:
>=20
> That is one of the dark corners of the module system.
[=E2=80=A6]
> I think this is due to the rather contorted way you define C first in
> the implementations and include it later, while in the signature first
> define t and then C. Note that the following signature, which is
> morally equivalent, accepts both implementations (and thus all the
> functors in your file):
>  sig
>    module C : S
>    type t =3D C.t
>  end

This is indeed the gist of the problem. Matching against

    sig
      type t
      module C : S with type t =3D t
    end

introduces a kind of mutual recursion: C.t is defined as t in the enclosing
signature, but t is C.t in the internal one. As a result we get a kind of
double-vision problem. Namely, t inside the internal C is Make(T).t (with
T the one inside C), but in the enclosing signature, the t inside C
is Make(C.T).t. While logically the T inside C and C.T are the same module,
the typing rule in Leroy's paper do not say anything like that.

=CF=83 : {1,...,m} =F4=8F=B0=80=E2=86=92 {1,...,n} for all i =E2=88=88 {1,.=
..,m}, E;D1;...;Dn =E2=8A=A2 D=CF=83(i) <: Di=E2=80=B2
---------------------------------------------------------------------------=
------------
          E =E2=8A=A2 sig D1;=E2=80=A6;Dn end <: sig D1=E2=80=B2 ;...;Dm=E2=
=80=B2 end

The definition in the premise must match without extra equations.
Here module aliases do not help.
What could help would be to strengthen the definitions in the premise, so
that T would be converted to C.T. But I don't know whether this is sound
or not, since this is not part of the current theory.

Jacques Garrigue


> On Fri, Feb 13, 2015 at 10:40 PM, Carl Eastlund
> <ceastlund@janestreet.com> wrote:
>> This seems to be a compiler bug, but let me know if I've missed somethin=
g.
>> The behavior I see is that Make_ok1 and Make_ok2 compile fine, but the v=
ery
>> similar functor Make_bad does not.  I get this compile error:
>>=20
>> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
>>=20
>>      Error: Signature mismatch:
>>             Modules do not match:
>>               sig
>>                 module C : sig module T : sig  end type t =3D Make(T).t =
end
>>                 module T =3D C.T
>>                 type t =3D Make(T).t
>>               end
>>             is not included in
>>               sig type t module C : sig type t =3D t end end
>>             In module C:
>>             Modules do not match:
>>               sig module T : sig  end type t =3D Make(T).t end
>>             is not included in
>>               sig type t =3D C.t end
>>             In module C:
>>             Type declarations do not match:
>>               type t =3D Make(T).t
>>             is not included in
>>               type t =3D t
>>=20
>> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
>>=20
>> And here is the code:
>>=20
>> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
>>=20
>> module type S =3D sig type t end
>> module Make (M : sig end) : S =3D struct type t end
>>=20
>> module Make_ok1 (M : sig end) : sig
>>=20
>>  type t
>>  module A : S with type t =3D t
>>=20
>> end =3D struct
>>=20
>>  module A =3D struct
>>    include Make (struct end)
>>  end
>>  include A
>>=20
>> end
>>=20
>> module Make_ok2 (M : sig end) : sig
>>=20
>>  type t
>>  module B : S with type t =3D t
>>=20
>> end =3D struct
>>=20
>>  module T =3D struct end
>>  module B =3D struct
>>    include Make (T)
>>  end
>>  include B
>>=20
>> end
>>=20
>> module Make_bad (M : sig end) : sig
>>=20
>>  type t
>>  module C : S with type t =3D t
>>=20
>> end =3D struct
>>=20
>>  module C =3D struct
>>    module T =3D struct end
>>    include Make (T)
>>  end
>>  include C
>>=20
>> end
>>=20
>> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
>>=20
>> --
>> Carl Eastlund



