Return-Path: <andrew.herron@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 67CBE7EF10
	for <caml-list@sympa.inria.fr>; Wed, 25 Feb 2015 04:12:22 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  andrew.herron@gmail.com) identity=pra;
  client-ip=209.85.220.179;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="andrew.herron@gmail.com";
  x-sender="andrew.herron@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  andrew.herron@gmail.com designates 209.85.220.179 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.220.179;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="andrew.herron@gmail.com";
  x-sender="andrew.herron@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-vc0-f179.google.com) identity=helo;
  client-ip=209.85.220.179;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="andrew.herron@gmail.com";
  x-sender="postmaster@mail-vc0-f179.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0B8AQAdPe1Um7PcVdFbg1haBIMErUUGklCFdIEiB0MBAQEBAQEQAQEBAQEGCwsJFC6EEAEBAwESER0BOAEDDAEFBQQHNwICIQESAQUBHAYTCBqHeAEDCQgNp2qHND4xiy6EYo43Fg0nDYUxCwEBARgBAQQOhXmFDIJEgiaCc4FDBZM7ghcFggOBRo00hD0SI4EVW4F5gU4sMYJDAQEB
X-IPAS-Result: A0B8AQAdPe1Um7PcVdFbg1haBIMErUUGklCFdIEiB0MBAQEBAQEQAQEBAQEGCwsJFC6EEAEBAwESER0BOAEDDAEFBQQHNwICIQESAQUBHAYTCBqHeAEDCQgNp2qHND4xiy6EYo43Fg0nDYUxCwEBARgBAQQOhXmFDIJEgiaCc4FDBZM7ghcFggOBRo00hD0SI4EVW4F5gU4sMYJDAQEB
X-IronPort-AV: E=Sophos;i="5.09,642,1418079600"; 
   d="scan'208";a="123259856"
Received: from mail-vc0-f179.google.com ([209.85.220.179])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 25 Feb 2015 04:12:21 +0100
Received: by mail-vc0-f179.google.com with SMTP id hy4so430611vcb.10
        for <caml-list@inria.fr>; Tue, 24 Feb 2015 19:12:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date:message-id:subject
         :from:to:cc:content-type;
        bh=tLBJedA9YybJ49FWgh+GM7rdHEKGnQXeUOUKF3engTE=;
        b=CpUaySI5K5kCegi0B+BXeUBBiXfeQ7aFu+C0iR2aa54jLmxz19RN+QXLPQ+G0F5azh
         4mSjx6GMcFmpGAdz80BL+L0jJUhbrQARyiAaTr5nhIBuqTTCWz7yWWtF3Ry2tXgqysiT
         flxTECvnwwK8M4XS6UNTaTDf9B0ABYIgxe3LXb4e81vcccIc4ooggSr68v7qTsCD+DPK
         z+kOr3bkVIBiKP/WKRdzwxN87YX9wG/JJE/Bx0PWQJcWdM+yFDR4pPLPiD5TMLtqh6ZS
         s+KmNxm4oIXtCjrCGY9I7fFNkUnUL8ho1RbXU49oGpSQEPw06yvSJBuF3AWnJcOVmGuq
         knnA==
MIME-Version: 1.0
X-Received: by 10.52.138.107 with SMTP id qp11mr1630486vdb.24.1424833940362;
 Tue, 24 Feb 2015 19:12:20 -0800 (PST)
Sender: andrew.herron@gmail.com
Received: by 10.52.134.116 with HTTP; Tue, 24 Feb 2015 19:12:20 -0800 (PST)
In-Reply-To: <CAPOA5_5KZXXPaJ7OktWVqzN86Ex4joDrdXrQQHvW_hUwRe0cJg@mail.gmail.com>
References: <CAPOA5_5KZXXPaJ7OktWVqzN86Ex4joDrdXrQQHvW_hUwRe0cJg@mail.gmail.com>
Date: Wed, 25 Feb 2015 13:12:20 +1000
X-Google-Sender-Auth: A-TmIwmvBcf90y2Cgukx6KoJQZk
Message-ID: <CALATSMb6dDmCbMemo=7BCUnTjg8VdVLknBmqOyLmhQ6kyz2GDQ@mail.gmail.com>
From: Andrew Herron <thespyder@programmer.net>
To: Jordan W <jordojw@gmail.com>
Cc: "caml-list@inria.fr" <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=bcaec51b9c07e13605050fe10048
Subject: Re: [Caml-list] CommonML: An opinionated build/package/develop
 workflow on top of CommonJS

--bcaec51b9c07e13605050fe10048
Content-Type: text/plain; charset=UTF-8

I've been thinking about this a bit, as a JS developer who is experimenting
with OCaml (in my non-existant free time). I don't use the CommonJS flow in
my day job although we do have many projects which our internal
build/dependency system combines with similar results.


On Wed, Feb 25, 2015 at 6:26 AM, Jordan W <jordojw@gmail.com> wrote:

>
> I created a proof of concept called CommonML, which lets developers use
> their familiar CommonJS workflow with OCaml:
> https://github.com/jordwalke/CommonML


My initial thoughts were to stick with the OPAM repositories; even if I
have to make a local OPAM repo server it seems like leveraging the existing
ecosystem is a good idea. My experiments use a dedicated `opam switch` for
the project, enforced by the Makefile (which might not scale to multiple
projects, but I haven't tried that yet).

I can think of one good reason to share OCaml and JS dependencies on the
same server though, and that's including a JS library in a js_of_ocaml
project. Certainly using a single package.json file to specify both JS and
OCaml dependencies is an interesting idea (even if under the hood we
eventually find a way to use OPAM for the OCaml projects).

Cheers,
Andy

--bcaec51b9c07e13605050fe10048
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">I&#39;ve been thinking about this a bit, as a JS developer=
 who is experimenting with OCaml (in my non-existant free time). I don&#39;=
t use the CommonJS flow in my day job although we do have many projects whi=
ch our internal build/dependency system combines with similar results.<div>=
<br><div><div><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On =
Wed, Feb 25, 2015 at 6:26 AM, Jordan W <span dir=3D"ltr">&lt;<a href=3D"mai=
lto:jordojw@gmail.com" target=3D"_blank">jordojw@gmail.com</a>&gt;</span> w=
rote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;borde=
r-left:1px #ccc solid;padding-left:1ex"><br>
I created a proof of concept called CommonML, which lets developers use<br>
their familiar CommonJS workflow with OCaml:<br>
<a href=3D"https://github.com/jordwalke/CommonML" target=3D"_blank">https:/=
/github.com/jordwalke/CommonML</a></blockquote><div><br></div><div>My initi=
al thoughts were to stick with the OPAM repositories; even if I have to mak=
e a local OPAM repo server it seems like leveraging the existing ecosystem =
is a good idea. My experiments use a dedicated `opam switch` for the projec=
t, enforced by the Makefile (which might not scale to multiple projects, bu=
t I haven&#39;t tried that yet).</div><div><br></div><div>I can think of on=
e good reason to share OCaml and JS dependencies on the same server though,=
 and that&#39;s including a JS library in a js_of_ocaml project. Certainly =
using a single package.json file to specify both JS and OCaml dependencies =
is an interesting idea (even if under the hood we eventually find a way to =
use OPAM for the OCaml projects).</div><div><br></div><div>Cheers,</div><di=
v>Andy</div></div></div></div></div></div></div>

--bcaec51b9c07e13605050fe10048--
