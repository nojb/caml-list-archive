Return-Path: <pierre-marie.pedrot@inria.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id E859E7F6CC
	for <caml-list@sympa.inria.fr>; Mon,  2 Feb 2015 14:09:16 +0100 (CET)
X-IronPort-AV: E=Sophos;i="5.09,506,1418079600"; 
   d="asc'?scan'208";a="119849772"
Received: from maths.r-prg.net.univ-paris7.fr (HELO [172.23.36.4]) ([81.194.27.158])
  by mail2-relais-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES128-SHA; 02 Feb 2015 14:09:16 +0100
Message-ID: <54CF76C0.2080209@inria.fr>
Date: Mon, 02 Feb 2015 14:08:16 +0100
From: =?windows-1252?Q?Pierre-Marie_P=E9drot?=
 <pierre-marie.pedrot@inria.fr>
User-Agent: Mozilla/5.0 (X11; Linux i686; rv:31.0) Gecko/20100101 Icedove/31.4.0
MIME-Version: 1.0
To: caml users <caml-list@inria.fr>
CC: Enrico Tassi <enrico.tassi@inria.fr>
References: <20150202103256.GA30053@birba.invalid> <CAPFanBFt_=URJLAj3vSo9bpKrgJt6=+fLdXA8HSik3ga8SpKdA@mail.gmail.com>
In-Reply-To: <CAPFanBFt_=URJLAj3vSo9bpKrgJt6=+fLdXA8HSik3ga8SpKdA@mail.gmail.com>
Content-Type: multipart/signed; micalg=pgp-sha1;
 protocol="application/pgp-signature";
 boundary="q6VjBJa9XD2IvW9TNPTtA8N3T7KDNt8LA"
Subject: Re: [Caml-list] unmarshaling large data from string on 32 bits

This is an OpenPGP/MIME signed message (RFC 4880 and 3156)
--q6VjBJa9XD2IvW9TNPTtA8N3T7KDNt8LA
Content-Type: text/plain; charset=windows-1252
Content-Transfer-Encoding: quoted-printable

On 02/02/2015 13:00, Gabriel Scherer wrote:
> You should consider opening a problem report to OCaml upstream (
> http://caml.inria.fr/mantis/ ) explaining the use-case and asking for
> a large-string-safe API (eg. taking and returning lists of strings).

For the current use-case of Coq 8.5, I believe we may just hack around
this temporarily by using char bigarrays and a dedicated C stub that
wraps the demarshalling code around the bigarray one.

There is already a dedicated caml_input_value_from_malloc in the C code...

PMP


--q6VjBJa9XD2IvW9TNPTtA8N3T7KDNt8LA
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iEYEARECAAYFAlTPdsIACgkQeew3reqJuSXCfwCfQ3M0SOcO9mTOmwmjtns8jMOc
Jy0An1i5/pNPuXDx/ae1r8n+vLNzMGHL
=JBck
-----END PGP SIGNATURE-----

--q6VjBJa9XD2IvW9TNPTtA8N3T7KDNt8LA--
