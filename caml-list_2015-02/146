Return-Path: <dra-news@metastack.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id A532B7EF10
	for <caml-list@sympa.inria.fr>; Tue, 24 Feb 2015 18:28:38 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  dra-news@metastack.com) identity=pra;
  client-ip=62.13.148.161;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="dra-news@metastack.com";
  x-sender="dra-news@metastack.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  dra-news@metastack.com designates 62.13.148.161 as permitted
  sender) identity=mailfrom; client-ip=62.13.148.161;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="dra-news@metastack.com";
  x-sender="dra-news@metastack.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@outmail148161.authsmtp.com) identity=helo;
  client-ip=62.13.148.161;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="dra-news@metastack.com";
  x-sender="postmaster@outmail148161.authsmtp.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0AjAgBttOxUnKGUDT5bg1hajDakEAaSTIcjQwEBAQEBARABAQEBAQgUCUKEFgMFAh4STAUWUiMcAQQeBYgjrEuoaoYHjiwFj1ZcgwSHAIMVjweBcgEBAYIbb4JDAQEB
X-IPAS-Result: A0AjAgBttOxUnKGUDT5bg1hajDakEAaSTIcjQwEBAQEBARABAQEBAQgUCUKEFgMFAh4STAUWUiMcAQQeBYgjrEuoaoYHjiwFj1ZcgwSHAIMVjweBcgEBAYIbb4JDAQEB
X-IronPort-AV: E=Sophos;i="5.09,639,1418079600"; 
   d="scan'208";a="101184853"
Received: from outmail148161.authsmtp.com ([62.13.148.161])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 24 Feb 2015 18:28:37 +0100
Received: from mail-c235.authsmtp.com (mail-c235.authsmtp.com [62.13.128.235])
	by punt15.authsmtp.com (8.14.2/8.14.2/) with ESMTP id t1OHSbbe003299
	for <caml-list@inria.fr>; Tue, 24 Feb 2015 17:28:37 GMT
Received: from romulus.metastack.com (cpc1-cmbg5-0-0-cust241.5-4.cable.virginm.net [81.98.252.242])
	(authenticated bits=0)
	by mail.authsmtp.com (8.14.2/8.14.2/) with ESMTP id t1OHSXuV074248
	for <caml-list@inria.fr>; Tue, 24 Feb 2015 17:28:34 GMT
Received: from Altus ([172.16.0.18])
	(authenticated bits=0)
	by romulus.metastack.com (8.14.2/8.14.2) with ESMTP id t1OHSX0r013621
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Tue, 24 Feb 2015 17:28:33 GMT
From: "David Allsopp" <dra-news@metastack.com>
To: "OCaml List" <caml-list@inria.fr>
Date: Tue, 24 Feb 2015 17:25:47 -0000
Organization: MetaStack Solutions Ltd.
Message-ID: <000401d05056$ed605f70$c8211e50$@metastack.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Mailer: Microsoft Outlook 14.0
Thread-Index: AdBQVu0mHoJ7Sr46RUmuhYPLJuzpGw==
Content-Language: en-gb
X-Scanned-By: MIMEDefang 2.65 on 172.16.0.20
X-Server-Quench: 8f1d9c64-bc4a-11e4-b396-002590a15da7
X-AuthReport-Spam: If SPAM / abuse - report it at: http://www.authsmtp.com/abuse
X-AuthRoute: OCd1ZAARAlZZVg1f DC4bFwdFRBksPQFF ChxFJgxfNlEAUAAU NkdBMnJSNkcdTBdX QSgJX0siBQ9uW2N0 bhpQag9fakBNW0ti UVZASkxQEQd2AxgD GRwbTRk8MwQ5AB0Y ICBiWXRZWEw0dEd0 RABcQ2xSbDRmbH1N A0QJagJVJQdXLBxM bE1/VHEIaGVWZ380 FlAlGjktNjUXJT5P RRtFMlMOQQ4CFCUg XRkJAX0zDFUIXG0y KVQjLVIBGEsKWgAA 
X-Authentic-SMTP: 61633634383431.1023:706
X-AuthFastPath: 0 (Was 255)
X-AuthSMTP-Origin: 81.98.252.242/25
X-AuthVirus-Status: No virus detected - but ensure you scan with your own anti-virus system.
Subject: [Caml-list] Match error with abstract types in modules

Please could someone remind me what it is about types in modules which means
that

  module Foo = struct
    type 'a foo
  end

  type _ t = A : int Foo.foo t
           | B : float Foo.foo t

  let foo A = ()

is non-exhaustive pattern matching, but:

  type 'a bar

  type _ u = C : int bar u
           | D : float bar u

  let bar C = ()

is exhaustive? Or is it actually a bug (given that foo B is a type error)?


David

