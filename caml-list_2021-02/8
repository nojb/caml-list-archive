Return-Path: <alan.schmitt@polytechnique.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 914B4E0210
	for <caml-list@sympa.inria.fr>; Tue, 16 Feb 2021 14:53:47 +0100 (CET)
X-IronPort-AV: E=Sophos;i="5.81,183,1610406000"; 
   d="scan'208,217";a="373225640"
Received: from cbg35-2-78-242-14-140.fbx.proxad.net (HELO set) ([78.242.14.140])
  by mail3-relais-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 16 Feb 2021 14:53:46 +0100
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr,
 comp@lists.orbitalfox.eu
Date: Tue, 16 Feb 2021 14:53:46 +0100
Message-ID: <87sg5wt8yd.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Hello

Here is the latest OCaml Weekly News, for the week of February 09 to 16,
2021.

Table of Contents
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

opam 2.0.8 release
opam 2.1.0~beta4
Set up OCaml 1.1.6
Set up OCaml 1.1.7
Old CWN


opam 2.0.8 release
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ann-opam-2-0-8-release/7242/1>


R. Boujbel announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80

  We are pleased to announce the minor release of [opam 2.0.8].

  This new version contains some fixes, mainly for sandbox and fish
  scripts. You can find more information in this [blog post], and more
  detailed in the [release note].

  /opam is a source-based package manager for OCaml. It supports
  multiple simultaneous compiler installations, flexible package
  constraints, and a Git-friendly development workflow./


[opam 2.0.8] <https://github.com/ocaml/opam/releases/tag/2.0.8>

[blog post] <https://opam.ocaml.org/blog/opam-2-0-8>

[release note] <https://github.com/ocaml/opam/releases/tag/2.0.8>


opam 2.1.0~beta4
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ann-opam-2-1-0-beta4/7252/1>


David Allsopp announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  On behalf of the opam team, it gives me great pleasure to announce the
  third beta release of opam 2.1. Don=E2=80=99t worry, you didn=E2=80=99t m=
iss beta3 -
  we had an issue with a configure script that caused beta2 to report as
  beta3 in some instances, so we skipped to beta4 to avoid any further
  confusion!

  We encourage you to try out this new beta release: there are
  instructions for doing so in [our wiki]. The instructions include
  taking a backup of your `~/.opam' root as part of the process, which
  can be restored in order to wind back. _Please note that local
  switches which are written to by opam 2.1 are upgraded and will need
  to be rebuilt if you go back to opam 2.0_. This can either be done by
  removing `_opam' and repeating whatever you use in your build process
  to create the switch, or you can use `opam switch export
  switch.export' to backup the switch to a file before installing new
  packages. Note that opam 2.1 _shouldn=E2=80=99t_ upgrade a local switch u=
nless
  you upgrade the base packages (i.e. the compiler).


[our wiki]
<https://github.com/ocaml/opam/wiki/How-to-test-an-opam-feature>

What=E2=80=99s new in opam 2.1?
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 Switch invariants
  =E2=80=A2 Improved options configuration (see the new `option' and expand=
ed
    `var' sub-commands)
  =E2=80=A2 Integration of system dependencies (formerly the opam-depext
    plugin), increasing their reliability as it integrates the solving
    step
  =E2=80=A2 Creation of lock files for reproducible installations (formerly=
 the
    opam-lock plugin)
  =E2=80=A2 CLI versioning, allowing cleaner deprecations for opam now and =
also
    improvements to semantics in future without breaking
    backwards-compatibility
  =E2=80=A2 Performance improvements to opam-update, conflict messages, and=
 many
    other areas
  =E2=80=A2 New plugins: opam-compiler and opam-monorepo


Switch invariants
=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=
=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=
=84

  In opam 2.0, when a switch is created the packages selected are put
  into the =E2=80=9Cbase=E2=80=9D of the switch. These packages are not nor=
mally
  considered for upgrade, in order to ease pressure on opam=E2=80=99s
  solver. This was a much bigger concern early on in opam 2.0=E2=80=99s
  development, but is less of a problem with the default mccs solver.

  However, it=E2=80=99s a problem for system compilers. opam would detect t=
hat
  your system compiler version had changed, but be unable to upgrade the
  ocaml-system package unless you went through a slightly convoluted
  process with `--unlock-base'.

  In opam 2.1, base packages have been replaced by switch
  invariants. The switch invariant is a package formula which must be
  satisfied on every upgrade and install. All existing switches=E2=80=99 ba=
se
  packages could just be expressed as `package1 & package2 & package3'
  etc. but opam 2.1 recognises many existing patterns and simplifies
  them, so in most cases the invariant will be `"ocaml-base-compiler" {=3D
  4.11.1}', etc. This means that `opam switch create my_switch
  ocaml-system' now creates a _switch invariant_ of `"ocaml-system"'
  rather than a specific version of the `ocaml-system' package. If your
  system OCaml package is updated, `opam upgrade' will seamlessly switch
  to the new package.

  This also allows you to have switches which automatically install new
  point releases of OCaml. For example:

  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam switch create ocaml-4.11 --formula=3D'"ocaml-base-compiler=
" {>=3D "4.11.0" & < "4.12.0~"}'
  =E2=94=82 --repos=3Dold=3Dgit+https://github.com/ocaml/opam-repository#a1=
1299d81591
  =E2=94=82 opam install utop
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Creates a switch with OCaml 4.11.0 (the `--repos=3D' was just to select
  a version of opam-repository from before 4.11.1 was released). Now
  issue:

  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam repo set-url old git+https://github.com/ocaml/opam-reposit=
ory
  =E2=94=82 opam upgrade
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  and opam 2.1 will automatically offer to upgrade OCaml 4.11.1 along
  with a rebuild of the switch. There=E2=80=99s not yet a clean CLI for
  specifying the formula, but we intend to iterate further on this with
  future opam releases so that there is an easier way of saying =E2=80=9Cin=
stall
  OCaml 4.11.x=E2=80=9D.


opam depext integration
=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=
=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=
=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84

  opam has long included the ability to install system dependencies
  automatically via the [depext plugin]. This plugin has been promoted
  to a native feature of opam 2.1.0 onwards, giving the following
  benefits:

  =E2=80=A2 You no longer have to remember to run `opam depext', opam always
    checks depexts (there are options to disable this or automate it for
    CI use). Installation of an opam package in a CI system is now as
    easy as `opam install .', without having to do the dance of `opam
    pin add -n/depext/install'. Just one command now for the common
    case!
  =E2=80=A2 The solver is only called once, which both saves time and also
    stabilises the behaviour of opam in cases where the solver result is
    not stable. It was possible to get one package solution for the
    `opam depext' stage and a different solution for the `opam install'
    stage, resulting in some depexts missing.
  =E2=80=A2 opam now has full knowledge of depexts, which means that packag=
es
    can be automatically selected based on whether a system package is
    already installed. For example, if you have *neither* MariaDB nor
    MySQL dev libraries installed, `opam install mysql' will offer to
    install `conf-mysql' and `mysql', but if you have the MariaDB dev
    libraries installed, opam will offer to install `conf-mariadb' and
    `mysql'.


[depext plugin] <https://github.com/ocaml-opam/opam-depext>


opam lock files and reproducibility
=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=
=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=
=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=
=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=
=94=84=E2=94=84

  When opam was first released, it had the mission of gathering together
  scattered OCaml source code to build a [community repository]. As time
  marches on, the size of the opam repository has grown tremendously, to
  over 3000 unique packages with over 18000 unique versions. opam looks
  at all these packages and is designed to solve for the best
  constraints for a given package, so that your project can keep up with
  releases of your dependencies.

  While this works well for libraries, we need a different strategy for
  projects that need to test and ship using a fixed set of
  dependencies. To satisfy this use-case, opam 2.0.0 shipped with
  support for _using_ `project.opam.locked' files. These are normal opam
  files but with exact versions of dependencies. The lock file can be
  used as simply as `opam install . --locked' to have a reproducible
  package installation.

  With opam 2.1.0, the creation of lock files is also now integrated
  into the client:
  =E2=80=A2 `opam lock' will create a `.locked' file for your current switc=
h and
    project, that you can check into the repository.
  =E2=80=A2 `opam switch create . --locked' can be used by users to reprodu=
ce
    your dependencies in a fresh switch.

  This lets a project simultaneously keep up with the latest
  dependencies (without lock files) while providing a stricter set for
  projects that need it (with lock files).


[community repository] <https://github.com/ocaml/opam-repository>


CLI Versioning
=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=
=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84

  A new `--cli' switch was added to the first beta release, but it=E2=80=99s
  only now that it=E2=80=99s being widely used. opam is a complex enough sy=
stem
  that sometimes bug fixes need to change the semantics of some
  commands. For example:

  =E2=80=A2 `opam show --file' needed to change behaviour
  =E2=80=A2 The addition of new controls for setting global variables means=
 that
    the `opam config' was becoming cluttered and some things want to
    move to `opam var'
  =E2=80=A2 `opam switch create 4.11.1' still works in opam 2.0, but it=E2=
=80=99s really
    an OPAM 1.2.2 syntax.

  Changing the CLI is exceptionally painful since it can break scripts
  and tools which themselves need to drive `opam'.  CLI versioning is
  our attempt to solve this. The feature is inspired by the `(lang dune
  ...)' stanza in `dune-project' files which has allowed the Dune
  project to rename variables and alter semantics without requiring
  every single package using Dune to upgrade their `dune' files on each
  release.

  Now you can specify which version of opam you expected the command to
  be run against. In day-to-day use of opam at the terminal, you
  wouldn=E2=80=99t specify it, and you=E2=80=99ll get the latest version of=
 the CLI. For
  example: `opam var --global' is the same as `opam var --cli=3D2.1
  --global'. However, if you issue `opam var --cli=3D2.0 --global', you
  will told that `--global' was added in 2.1 and so is not available to
  you. You can see similar things with the renaming of `opam upgrade
  --unlock-base' to `opam upgrade --update-invariant'.

  The intention is that `--cli' should be used in scripts, user guides
  (e.g. blog posts), and in software which calls opam. The only decision
  you have to take is the _oldest_ version of opam which you need to
  support. If your script is using a new opam 2.1 feature (for example
  `opam switch create --formula=3D') then you simply don=E2=80=99t support =
opam
  2.0. If you need to support opam 2.0, then you can=E2=80=99t use `--formu=
la'
  and should use `--packages' instead. opam 2.0 does not have the
  `--cli' option, so for opam 2.0 instead of `--cli=3D2.0' you should set
  the environment variable `OPAMCLI' to `2.0'. As with _all_ opam
  command line switches, `OPAMCLI' is simply the equivalent of `--cli'
  which opam 2.1 will pick-up but opam 2.0 will quietly ignore (and, as
  with other options, the command line takes precedence over the
  environment).

  Note that opam 2.1 sets `OPAMCLI=3D2.0' when building packages, so on
  the rare instances where you need to use the `opam' command in a
  _package_ `build:' command (or in your build system), you _must_
  specify `--cli=3D2.1' if you=E2=80=99re using new features.

  There=E2=80=99s even more detail on this feature [in our wiki]. We=E2=80=
=99re still
  finalising some details on exactly how `opam' behaves when `--cli' is
  not given, but we=E2=80=99re hoping that this feature will make it much e=
asier
  in future releases for opam to make required changes and improvements
  to the CLI without breaking existing set-ups and tools.


[in our wiki]
<https://github.com/ocaml/opam/wiki/Spec-for-opam-CLI-versioning>


What=E2=80=99s new since the last beta?
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 opam now uses CLI versioning ([#4385])
  =E2=80=A2 opam now exits with code 31 if all failures were during fetch
    operations ([#4214])
  =E2=80=A2 `opam install' now has a `--download-only' flag ([#4036]), allo=
wing
    opam=E2=80=99s caches to be primed
  =E2=80=A2 `opam init' now advises the correct shell-specific command for =
`eval
    $(opam env)' ([#4427])
  =E2=80=A2 `post-install' hooks are now allowed to modify or remove instal=
led
    files ([#4388])
  =E2=80=A2 New package variable `opamfile-loc' with the location of the
    installed package opam file ([#4402])
  =E2=80=A2 `opam update' now has `--depexts' flag ([#4355]), allowing the
    system package manager to update too
  =E2=80=A2 depext support NetBSD and DragonFlyBSD added ([#4396])
  =E2=80=A2 The format-preserving opam file printer has been overhauled
    ([#3993], [#4298] and [#4302])
  =E2=80=A2 pins are now fetched in parallel ([#4315])
  =E2=80=A2 `os-family=3Dubuntu' is now treated as `os-family=3Ddebian' ([#=
4441])
  =E2=80=A2 `opam lint' now checks that strings in filtered package formula=
e are
    booleans or variables ([#4439])

  and many other bug fixes as listed [on the release page].


[#4385] <https://github.com/ocaml/opam/pull/4385>

[#4214] <https://github.com/ocaml/opam/issues/4214>

[#4036] <https://github.com/ocaml/opam/issues/4036>

[#4427] <https://github.com/ocaml/opam/pull/4427>

[#4388] <https://github.com/ocaml/opam/pull/4388>

[#4402] <https://github.com/ocaml/opam/pull/4402>

[#4355] <https://github.com/ocaml/opam/issues/4355>

[#4396] <https://github.com/ocaml/opam/pull/4396>

[#3993] <https://github.com/ocaml/opam/issues/3993>

[#4298] <https://github.com/ocaml/opam/pull/4298>

[#4302] <https://github.com/ocaml/opam/pull/4302>

[#4315] <https://github.com/ocaml/opam/issues/4315>

[#4441] <https://github.com/ocaml/opam/pull/4441>

[#4439] <https://github.com/ocaml/opam/issues/4439>

[on the release page]
<https://github.com/ocaml/opam/releases/tag/2.1.0-beta4>


New Plugins
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C

  Several features that were formerly plugins have been integrated into
  opam 2.1.0. We have also developed some _new_ plugins that satisfy
  emerging workflows from the community and the core OCaml team. They
  are available for use with the opam 2.1 beta as well, and feedback on
  them should be directed to the respective GitHub trackers for those
  plugins.


opam compiler
=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=
=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84

  The [`opam compiler'] plugin can be used to create switches from
  various sources such as the main opam repository, the ocaml-multicore
  fork, or a local development directory. It can use Git tag names,
  branch names, or PR numbers to specify what to install.

  Once installed, these are normal opam switches, and one can install
  packages in them. To iterate on a compiler feature and try opam
  packages at the same time, it supports two ways to reinstall the
  compiler: either a safe and slow technique that will reinstall all
  packages, or a quick way that will just overwrite the compiler in
  place.


[`opam compiler'] <https://github.com/ocaml-opam/opam-compiler>


opam monorepo
=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84=E2=
=94=84=E2=94=84=E2=94=84=E2=94=84=E2=94=84

  The [`opam monorepo'] plugin lets you assemble standalone dune
  workspaces with your projects and all of their opam dependencies,
  letting you build it all from scratch using only Dune and OCaml. This
  satisfies the =E2=80=9Cmonorepo=E2=80=9D workflow which is commonly reque=
sted by large
  projects that need all of their dependencies in one place. It is also
  being used by projects that need global cross-compilation for all
  aspects of a codebase (including C stubs in packages), such as the
  MirageOS unikernel framework.


[`opam monorepo'] <https://github.com/ocamllabs/opam-monorepo>


Next Steps
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C

  This is anticipated to be the final beta in the 2.1 series, and we
  will be moving to release candidate status after this. We could really
  use your help with testing this release in your infrastructure and
  projects and let us know if you run into any blockers. If you have
  feature requests, please also report them on [our issue tracker] =E2=80=
=93 we
  will be planning the next release cycle once we ship opam 2.1.0
  shortly.


[our issue tracker] <https://github.com/ocaml/opam/issues>


Set up OCaml 1.1.6
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ann-set-up-ocaml-1-1-6/7276/1>


Sora Morimoto announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  This release includes a change to make the OCaml CI workflow on
  Windows faster!

        I tested this on one of my repos where the build itself is
        mere seconds. Before this change, setup-ocaml needed an
        average of 5:39 to install OCaml+opam and 1:53 to build
        the dependencies of the library. After this change, it
        needs an average of 3:15 for the installation and 1:27 for
        the deps.


Changed
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 Windows installs Cygwin to `D:\cygwin', using faster Azure temp=
orary
    storage.

  <https://github.com/avsm/setup-ocaml/releases/tag/v1.1.6>


Set up OCaml 1.1.7
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ann-set-up-ocaml-1-1-7/7279/1>


Sora Morimoto announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

Changed
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 Ubuntu and macOS runners no longer display "No switch is curren=
tly
    installed." before building the compiler.
  =E2=80=A2 Ubuntu no longer installs the system ocaml packages.
  =E2=80=A2 macOS no longer builds two compilers on every run.
  =E2=80=A2 Upgrade opam to 2.0.8 for Linux VMs.

  <https://github.com/avsm/setup-ocaml/releases/tag/v1.1.7>


Old CWN
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  [online].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <https://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <https://alan.petitepomme.net/cwn/cwn.rss>

[online] <http://lists.idyll.org/listinfo/caml-news-weekly/>

[Alan Schmitt] <https://alan.petitepomme.net/>


--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2021-02-16 Tue 14:50 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org mode" />
<style type=3D"text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
<script type=3D"text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target =3D document.getElementById(id);
   if(null !=3D target) {
     elem.cacheClassElem =3D elem.className;
     elem.cacheClassTarget =3D target.className;
     target.className =3D "code-highlighted";
     elem.className   =3D "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target =3D document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className =3D elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className =3D elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2021.02.09.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2021.02.23.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of February 09 to 16, 20=
21.
</p>

<div id=3D"table-of-contents">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents">
<ul>
<li><a href=3D"#1">opam 2.0.8 release</a></li>
<li><a href=3D"#2">opam 2.1.0~beta4</a></li>
<li><a href=3D"#3">Set up OCaml 1.1.6</a></li>
<li><a href=3D"#4">Set up OCaml 1.1.7</a></li>
<li><a href=3D"#org7ae4fc7">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-org874e3b7" class=3D"outline-2">
<h2 id=3D"1">opam 2.0.8 release</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-opam-2-0-8-release/7242=
/1">https://discuss.ocaml.org/t/ann-opam-2-0-8-release/7242/1</a>
</p>
</div>

<div id=3D"outline-container-org6498534" class=3D"outline-3">
<h3 id=3D"org6498534">R. Boujbel announced</h3>
<div class=3D"outline-text-3" id=3D"text-org6498534">
<p>
We are pleased to announce the minor release of <a href=3D"https://github.c=
om/ocaml/opam/releases/tag/2.0.8">opam 2.0.8</a>.
</p>

<p>
This new version contains some fixes, mainly for sandbox and fish scripts. =
You can find more information in this
<a href=3D"https://opam.ocaml.org/blog/opam-2-0-8">blog post</a>, and more =
detailed in the <a href=3D"https://github.com/ocaml/opam/releases/tag/2.0.8=
">release
note</a>.
</p>

<p>
<i>opam is a source-based package manager for OCaml. It supports multiple s=
imultaneous compiler installations, flexible package constraints, and a Git=
-friendly development workflow.</i>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org8ce6ca0" class=3D"outline-2">
<h2 id=3D"2">opam 2.1.0~beta4</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-opam-2-1-0-beta4/7252/1=
">https://discuss.ocaml.org/t/ann-opam-2-1-0-beta4/7252/1</a>
</p>
</div>

<div id=3D"outline-container-org96372d9" class=3D"outline-3">
<h3 id=3D"org96372d9">David Allsopp announced</h3>
<div class=3D"outline-text-3" id=3D"text-org96372d9">
<p>
On behalf of the opam team, it gives me great pleasure to announce the thir=
d beta release of opam 2.1. Don=E2=80=99t worry,
you didn=E2=80=99t miss beta3 - we had an issue with a configure script tha=
t caused beta2 to report as beta3 in some
instances, so we skipped to beta4 to avoid any further confusion!
</p>

<p>
We encourage you to try out this new beta release: there are instructions f=
or doing so in <a href=3D"https://github.com/ocaml/opam/wiki/How-to-test-an=
-opam-feature">our
wiki</a>. The instructions include taking a backup of
your <code>~/.opam</code> root as part of the process, which can be restore=
d in order to wind back. <span class=3D"underline">Please note that local
switches which are written to by opam 2.1 are upgraded and will need to be =
rebuilt if you go back to opam 2.0</span>. This
can either be done by removing <code>_opam</code> and repeating whatever yo=
u use in your build process to create the switch, or
you can use <code>opam switch export switch.export</code> to backup the swi=
tch to a file before installing new packages. Note
that opam 2.1 <span class=3D"underline">shouldn=E2=80=99t</span> upgrade a =
local switch unless you upgrade the base packages (i.e. the compiler).
</p>
</div>

<div id=3D"outline-container-orgeb2ae47" class=3D"outline-4">
<h4 id=3D"orgeb2ae47">What=E2=80=99s new in opam 2.1?</h4>
<div class=3D"outline-text-4" id=3D"text-orgeb2ae47">
<ul class=3D"org-ul">
<li>Switch invariants</li>
<li>Improved options configuration (see the new <code>option</code> and exp=
anded <code>var</code> sub-commands)</li>
<li>Integration of system dependencies (formerly the opam-depext plugin), i=
ncreasing their reliability as it integrates the solving step</li>
<li>Creation of lock files for reproducible installations (formerly the opa=
m-lock plugin)</li>
<li>CLI versioning, allowing cleaner deprecations for opam now and also imp=
rovements to semantics in future without breaking backwards-compatibility</=
li>
<li>Performance improvements to opam-update, conflict messages, and many ot=
her areas</li>
<li>New plugins: opam-compiler and opam-monorepo</li>
</ul>
</div>

<div id=3D"outline-container-orgcc2924b" class=3D"outline-5">
<h5 id=3D"orgcc2924b">Switch invariants</h5>
<div class=3D"outline-text-5" id=3D"text-orgcc2924b">
<p>
In opam 2.0, when a switch is created the packages selected are put into th=
e =E2=80=9Cbase=E2=80=9D of the switch. These packages are
not normally considered for upgrade, in order to ease pressure on opam=E2=
=80=99s solver. This was a much bigger concern early
on in opam 2.0=E2=80=99s development, but is less of a problem with the def=
ault mccs solver.
</p>

<p>
However, it=E2=80=99s a problem for system compilers. opam would detect tha=
t your system compiler version had changed, but be
unable to upgrade the ocaml-system package unless you went through a slight=
ly convoluted process with
<code>--unlock-base</code>.
</p>

<p>
In opam 2.1, base packages have been replaced by switch invariants. The swi=
tch invariant is a package formula which
must be satisfied on every upgrade and install. All existing switches=E2=80=
=99 base packages could just be expressed as
<code>package1 &amp; package2 &amp; package3</code> etc. but opam 2.1 recog=
nises many existing patterns and simplifies them, so in most
cases the invariant will be <code>"ocaml-base-compiler" {=3D 4.11.1}</code>=
, etc. This means that <code>opam switch create my_switch
ocaml-system</code> now creates a <span class=3D"underline">switch invarian=
t</span> of <code>"ocaml-system"</code> rather than a specific version of t=
he
<code>ocaml-system</code> package. If your system OCaml package is updated,=
 <code>opam upgrade</code> will seamlessly switch to the new
package.
</p>

<p>
This also allows you to have switches which automatically install new point=
 releases of OCaml. For example:
</p>

<pre class=3D"example">
opam switch create ocaml-4.11 --formula=3D'"ocaml-base-compiler" {&gt;=3D "=
4.11.0" &amp; &lt; "4.12.0~"}'
--repos=3Dold=3Dgit+https://github.com/ocaml/opam-repository#a11299d81591
opam install utop
</pre>

<p>
Creates a switch with OCaml 4.11.0 (the <code>--repos=3D</code> was just to=
 select a version of opam-repository from before 4.11.1
was released). Now issue:
</p>

<pre class=3D"example">
opam repo set-url old git+https://github.com/ocaml/opam-repository
opam upgrade
</pre>

<p>
and opam 2.1 will automatically offer to upgrade OCaml 4.11.1 along with a =
rebuild of the switch. There=E2=80=99s not yet a
clean CLI for specifying the formula, but we intend to iterate further on t=
his with future opam releases so that
there is an easier way of saying =E2=80=9Cinstall OCaml 4.11.x=E2=80=9D.
</p>
</div>
</div>

<div id=3D"outline-container-org57adaa7" class=3D"outline-5">
<h5 id=3D"org57adaa7">opam depext integration</h5>
<div class=3D"outline-text-5" id=3D"text-org57adaa7">
<p>
opam has long included the ability to install system dependencies automatic=
ally via the <a href=3D"https://github.com/ocaml-opam/opam-depext">depext
plugin</a>. This plugin has been promoted to a native feature of opam 2.1.0
onwards, giving the following benefits:
</p>

<ul class=3D"org-ul">
<li>You no longer have to remember to run <code>opam depext</code>, opam al=
ways checks depexts (there are options to disable this or automate it for C=
I use). Installation of an opam package in a CI system is now as easy as <c=
ode>opam install .</code>, without having to do the dance of <code>opam pin=
 add -n/depext/install</code>. Just one command now for the common case!</l=
i>
<li>The solver is only called once, which both saves time and also stabilis=
es the behaviour of opam in cases where the solver result is not stable. It=
 was possible to get one package solution for the <code>opam depext</code> =
stage and a different solution for the <code>opam install</code> stage, res=
ulting in some depexts missing.</li>
<li>opam now has full knowledge of depexts, which means that packages can b=
e automatically selected based on whether a system package is already insta=
lled. For example, if you have <b>neither</b> MariaDB nor MySQL dev librari=
es installed, <code>opam install mysql</code> will offer to install <code>c=
onf-mysql</code> and <code>mysql</code>, but if you have the MariaDB dev li=
braries installed, opam will offer to install <code>conf-mariadb</code> and=
 <code>mysql</code>.</li>
</ul>
</div>
</div>

<div id=3D"outline-container-orgc51ecda" class=3D"outline-5">
<h5 id=3D"orgc51ecda">opam lock files and reproducibility</h5>
<div class=3D"outline-text-5" id=3D"text-orgc51ecda">
<p>
When opam was first released, it had the mission of gathering together scat=
tered OCaml source code to build a
<a href=3D"https://github.com/ocaml/opam-repository">community repository</=
a>. As time marches on, the size of the opam repository
has grown tremendously, to over 3000 unique packages with over 18000 unique=
 versions. opam looks at all these
packages and is designed to solve for the best constraints for a given pack=
age, so that your project can keep up with
releases of your dependencies.
</p>

<p>
While this works well for libraries, we need a different strategy for proje=
cts that need to test and ship using a
fixed set of dependencies. To satisfy this use-case, opam 2.0.0 shipped wit=
h support for <span class=3D"underline">using</span>
<code>project.opam.locked</code> files. These are normal opam files but wit=
h exact versions of dependencies. The lock file can
be used as simply as <code>opam install . --locked</code> to have a reprodu=
cible package installation.
</p>

<p>
With opam 2.1.0, the creation of lock files is also now integrated into the=
 client:
</p>
<ul class=3D"org-ul">
<li><code>opam lock</code> will create a <code>.locked</code> file for your=
 current switch and project, that you can check into the repository.</li>
<li><code>opam switch create . --locked</code> can be used by users to repr=
oduce your dependencies in a fresh switch.</li>
</ul>

<p>
This lets a project simultaneously keep up with the latest dependencies (wi=
thout lock files) while providing a
stricter set for projects that need it (with lock files).
</p>
</div>
</div>

<div id=3D"outline-container-org930fb79" class=3D"outline-5">
<h5 id=3D"org930fb79">CLI Versioning</h5>
<div class=3D"outline-text-5" id=3D"text-org930fb79">
<p>
A new <code>--cli</code> switch was added to the first beta release, but it=
=E2=80=99s only now that it=E2=80=99s being widely used. opam is a
complex enough system that sometimes bug fixes need to change the semantics=
 of some commands. For example:
</p>

<ul class=3D"org-ul">
<li><code>opam show --file</code> needed to change behaviour</li>
<li>The addition of new controls for setting global variables means that th=
e <code>opam config</code> was becoming cluttered and some things want to m=
ove to <code>opam var</code></li>
<li><code>opam switch create 4.11.1</code> still works in opam 2.0, but it=
=E2=80=99s really an OPAM 1.2.2 syntax.</li>
</ul>

<p>
Changing the CLI is exceptionally painful since it can break scripts and to=
ols which themselves need to drive <code>opam</code>.
CLI versioning is our attempt to solve this. The feature is inspired by the=
 <code>(lang dune ...)</code> stanza in
<code>dune-project</code> files which has allowed the Dune project to renam=
e variables and alter semantics without requiring
every single package using Dune to upgrade their <code>dune</code> files on=
 each release.
</p>

<p>
Now you can specify which version of opam you expected the command to be ru=
n against. In day-to-day use of opam at
the terminal, you wouldn=E2=80=99t specify it, and you=E2=80=99ll get the l=
atest version of the CLI. For example: <code>opam var --global</code>
is the same as <code>opam var --cli=3D2.1 --global</code>. However, if you =
issue <code>opam var --cli=3D2.0 --global</code>, you will told that
<code>--global</code> was added in 2.1 and so is not available to you. You =
can see similar things with the renaming of <code>opam
upgrade --unlock-base</code> to <code>opam upgrade --update-invariant</code=
>.
</p>

<p>
The intention is that <code>--cli</code> should be used in scripts, user gu=
ides (e.g. blog posts), and in software which calls
opam. The only decision you have to take is the <span class=3D"underline">o=
ldest</span> version of opam which you need to support. If your script is
using a new opam 2.1 feature (for example <code>opam switch create --formul=
a=3D</code>) then you simply don=E2=80=99t support opam 2.0. If
you need to support opam 2.0, then you can=E2=80=99t use <code>--formula</c=
ode> and should use <code>--packages</code> instead. opam 2.0 does not
have the <code>--cli</code> option, so for opam 2.0 instead of <code>--cli=
=3D2.0</code> you should set the environment variable <code>OPAMCLI</code> =
to
<code>2.0</code>. As with <span class=3D"underline">all</span> opam command=
 line switches, <code>OPAMCLI</code> is simply the equivalent of <code>--cl=
i</code> which opam 2.1 will
pick-up but opam 2.0 will quietly ignore (and, as with other options, the c=
ommand line takes precedence over the
environment).
</p>

<p>
Note that opam 2.1 sets <code>OPAMCLI=3D2.0</code> when building packages, =
so on the rare instances where you need to use the
<code>opam</code> command in a <span class=3D"underline">package</span> <co=
de>build:</code> command (or in your build system), you <span class=3D"unde=
rline">must</span> specify <code>--cli=3D2.1</code> if you=E2=80=99re
using new features.
</p>

<p>
There=E2=80=99s even more detail on this feature <a href=3D"https://github.=
com/ocaml/opam/wiki/Spec-for-opam-CLI-versioning">in our
wiki</a>. We=E2=80=99re still finalising some details on
exactly how <code>opam</code> behaves when <code>--cli</code> is not given,=
 but we=E2=80=99re hoping that this feature will make it much easier in
future releases for opam to make required changes and improvements to the C=
LI without breaking existing set-ups and
tools.
</p>
</div>
</div>
</div>

<div id=3D"outline-container-org85f43ee" class=3D"outline-4">
<h4 id=3D"org85f43ee">What=E2=80=99s new since the last beta?</h4>
<div class=3D"outline-text-4" id=3D"text-org85f43ee">
<ul class=3D"org-ul">
<li>opam now uses CLI versioning (<a href=3D"https://github.com/ocaml/opam/=
pull/4385">#4385</a>)</li>
<li>opam now exits with code 31 if all failures were during fetch operation=
s (<a href=3D"https://github.com/ocaml/opam/issues/4214">#4214</a>)</li>
<li><code>opam install</code> now has a <code>--download-only</code> flag (=
<a href=3D"https://github.com/ocaml/opam/issues/4036">#4036</a>), allowing =
opam=E2=80=99s caches to be primed</li>
<li><code>opam init</code> now advises the correct shell-specific command f=
or <code>eval $(opam env)</code> (<a href=3D"https://github.com/ocaml/opam/=
pull/4427">#4427</a>)</li>
<li><code>post-install</code> hooks are now allowed to modify or remove ins=
talled files (<a href=3D"https://github.com/ocaml/opam/pull/4388">#4388</a>=
)</li>
<li>New package variable <code>opamfile-loc</code> with the location of the=
 installed package opam file (<a href=3D"https://github.com/ocaml/opam/pull=
/4402">#4402</a>)</li>
<li><code>opam update</code> now has <code>--depexts</code> flag (<a href=
=3D"https://github.com/ocaml/opam/issues/4355">#4355</a>), allowing the sys=
tem package manager to update too</li>
<li>depext support NetBSD and DragonFlyBSD added (<a href=3D"https://github=
.com/ocaml/opam/pull/4396">#4396</a>)</li>
<li>The format-preserving opam file printer has been overhauled (<a href=3D=
"https://github.com/ocaml/opam/issues/3993">#3993</a>, <a href=3D"https://g=
ithub.com/ocaml/opam/pull/4298">#4298</a> and <a href=3D"https://github.com=
/ocaml/opam/pull/4302">#4302</a>)</li>
<li>pins are now fetched in parallel (<a href=3D"https://github.com/ocaml/o=
pam/issues/4315">#4315</a>)</li>
<li><code>os-family=3Dubuntu</code> is now treated as <code>os-family=3Ddeb=
ian</code> (<a href=3D"https://github.com/ocaml/opam/pull/4441">#4441</a>)<=
/li>
<li><code>opam lint</code> now checks that strings in filtered package form=
ulae are booleans or variables (<a href=3D"https://github.com/ocaml/opam/is=
sues/4439">#4439</a>)</li>
</ul>

<p>
and many other bug fixes as listed <a href=3D"https://github.com/ocaml/opam=
/releases/tag/2.1.0-beta4">on the release page</a>.
</p>
</div>
</div>

<div id=3D"outline-container-orgd94b025" class=3D"outline-4">
<h4 id=3D"orgd94b025">New Plugins</h4>
<div class=3D"outline-text-4" id=3D"text-orgd94b025">
<p>
Several features that were formerly plugins have been integrated into opam =
2.1.0. We have also developed some <span class=3D"underline">new</span>
plugins that satisfy emerging workflows from the community and the core OCa=
ml team. They are available for use with
the opam 2.1 beta as well, and feedback on them should be directed to the r=
espective GitHub trackers for those
plugins.
</p>
</div>

<div id=3D"outline-container-org44f2a22" class=3D"outline-5">
<h5 id=3D"org44f2a22">opam compiler</h5>
<div class=3D"outline-text-5" id=3D"text-org44f2a22">
<p>
The <a href=3D"https://github.com/ocaml-opam/opam-compiler"><code>opam comp=
iler</code></a> plugin can be used to create switches from various
sources such as the main opam repository, the ocaml-multicore fork, or a lo=
cal development directory. It can use Git
tag names, branch names, or PR numbers to specify what to install.
</p>

<p>
Once installed, these are normal opam switches, and one can install package=
s in them. To iterate on a compiler
feature and try opam packages at the same time, it supports two ways to rei=
nstall the compiler: either a safe and
slow technique that will reinstall all packages, or a quick way that will j=
ust overwrite the compiler in place.
</p>
</div>
</div>

<div id=3D"outline-container-orgd392e28" class=3D"outline-5">
<h5 id=3D"orgd392e28">opam monorepo</h5>
<div class=3D"outline-text-5" id=3D"text-orgd392e28">
<p>
The <a href=3D"https://github.com/ocamllabs/opam-monorepo"><code>opam monor=
epo</code></a> plugin lets you assemble standalone dune workspaces
with your projects and all of their opam dependencies, letting you build it=
 all from scratch using only Dune and
OCaml. This satisfies the =E2=80=9Cmonorepo=E2=80=9D workflow which is comm=
only requested by large projects that need all of their
dependencies in one place. It is also being used by projects that need glob=
al cross-compilation for all aspects of a
codebase (including C stubs in packages), such as the MirageOS unikernel fr=
amework.
</p>
</div>
</div>
</div>

<div id=3D"outline-container-org764b943" class=3D"outline-4">
<h4 id=3D"org764b943">Next Steps</h4>
<div class=3D"outline-text-4" id=3D"text-org764b943">
<p>
This is anticipated to be the final beta in the 2.1 series, and we will be =
moving to release candidate status after
this. We could really use your help with testing this release in your infra=
structure and projects and let us know if
you run into any blockers. If you have feature requests, please also report=
 them on <a href=3D"https://github.com/ocaml/opam/issues">our issue
tracker</a> &#x2013; we will be planning the next release cycle once we shi=
p opam 2.1.0
shortly.
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-org7188ce1" class=3D"outline-2">
<h2 id=3D"3">Set up OCaml 1.1.6</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-set-up-ocaml-1-1-6/7276=
/1">https://discuss.ocaml.org/t/ann-set-up-ocaml-1-1-6/7276/1</a>
</p>
</div>

<div id=3D"outline-container-org9b4c651" class=3D"outline-3">
<h3 id=3D"org9b4c651">Sora Morimoto announced</h3>
<div class=3D"outline-text-3" id=3D"text-org9b4c651">
<p>
This release includes a change to make the OCaml CI workflow on Windows fas=
ter!
</p>

<blockquote>
<p>
I tested this on one of my repos where the build itself is mere seconds. Be=
fore this change, setup-ocaml needed an
average of 5:39 to install OCaml+opam and 1:53 to build the dependencies of=
 the library. After this change, it
needs an average of 3:15 for the installation and 1:27 for the deps.
</p>
</blockquote>
</div>

<div id=3D"outline-container-orgb514af6" class=3D"outline-4">
<h4 id=3D"orgb514af6">Changed</h4>
<div class=3D"outline-text-4" id=3D"text-orgb514af6">
<ul class=3D"org-ul">
<li>Windows installs Cygwin to <code>D:\cygwin</code>, using faster Azure t=
emporary storage.</li>
</ul>

<p>
<a href=3D"https://github.com/avsm/setup-ocaml/releases/tag/v1.1.6">https:/=
/github.com/avsm/setup-ocaml/releases/tag/v1.1.6</a>
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-orgf917a5b" class=3D"outline-2">
<h2 id=3D"4">Set up OCaml 1.1.7</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-set-up-ocaml-1-1-7/7279=
/1">https://discuss.ocaml.org/t/ann-set-up-ocaml-1-1-7/7279/1</a>
</p>
</div>

<div id=3D"outline-container-org746230a" class=3D"outline-3">
<h3 id=3D"org746230a">Sora Morimoto announced</h3>
<div class=3D"outline-text-3" id=3D"text-org746230a">
</div>
<div id=3D"outline-container-org8f93df2" class=3D"outline-4">
<h4 id=3D"org8f93df2">Changed</h4>
<div class=3D"outline-text-4" id=3D"text-org8f93df2">
<ul class=3D"org-ul">
<li>Ubuntu and macOS runners no longer display "No switch is currently inst=
alled." before building the compiler.</li>
<li>Ubuntu no longer installs the system ocaml packages.</li>
<li>macOS no longer builds two compilers on every run.</li>
<li>Upgrade opam to 2.0.8 for Linux VMs.</li>
</ul>

<p>
<a href=3D"https://github.com/avsm/setup-ocaml/releases/tag/v1.1.7">https:/=
/github.com/avsm/setup-ocaml/releases/tag/v1.1.7</a>
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-org7ae4fc7" class=3D"outline-2">
<h2 id=3D"org7ae4fc7">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org7ae4fc7">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or the <=
a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archive=
s</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--
