Return-Path: <bernardp@cli.di.unipi.it>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA20032 for <caml-redist@pauillac.inria.fr>; Tue, 16 May 2000 17:06:36 +0200 (MET DST)
Received: from mailserver.cli.di.unipi.it (crudelia.cli.di.unipi.it [131.114.11.37])
	by nez-perce.inria.fr (8.10.0/8.10.0) with ESMTP id e4GF6YT19031
	for <caml-redist@pauillac.inria.fr>; Tue, 16 May 2000 17:06:34 +0200 (MET DST)
Organization:  Centro di Calcolo - Dipartimento di Informatica di Pisa - Italy
Received: from fire.cli.di.unipi.it (fire-ext.cli.di.unipi.it [131.114.11.52])
	by mailserver.cli.di.unipi.it (8.9.3/8.9.3) with SMTP id RAA30916
	for <caml-redist@pauillac.inria.fr>; Tue, 16 May 2000 17:04:32 +0200
Received: (qmail 3695 invoked by uid 7794); 16 May 2000 15:06:30 -0000
Received: from carlotta.cli.di.unipi.it(131.114.11.15)
 via SMTP by crudelia.cli.di.unipi.it, id smtpda03672; Tue May 16 17:05:38 2000
Received: from localhost (bernardp@localhost) by carlotta.cli.di.unipi.it (8.8.5/8.6.12) with SMTP id RAA03447; Tue, 16 May 2000 17:04:53 +0200 (MET DST)
X-Authentication-Warning: carlotta.cli.di.unipi.it: bernardp owned process doing -bs
Date: Tue, 16 May 2000 17:04:53 +0200 (MET DST)
From: Pierpaolo Bernardi <bernardp@cli.di.unipi.it>
To: Frank Atanassow <franka@cs.uu.nl>
cc: Markus Mottl <mottl@miss.wu-wien.ac.at>, OCAML <caml-list@inria.fr>,
        Pierre.Weis@inria.fr, caml-redist@pauillac.inria.fr
Subject: Re: The performance cost of using exceptions?
In-Reply-To: <14625.5414.998940.387603@silvester.cs.uu.nl>
Message-ID: <Pine.GSO.4.00.10005161657570.3360-100000@carlotta.cli.di.unipi.it>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII


On Tue, 16 May 2000, Frank Atanassow wrote:
> Markus Mottl writes:

>  > But if you use exceptions, you can "jump back" and can thus prevent the
>  > spine from being copied. This normally reduces the load of the garbage
>  > collector and yields some percent more performance.
> 
> I don't see how this would improve performance. If the element is in the tree,
> you will be copying the spine until you descend to a point where you discover
> the node exists. 

Usually, that is, in the most straightforward implementation, you rebuild
the path on the way up.  By throwing the exception, you don't cons any new
node.

> If you then escape via an exception, the copied nodes will be
> collected. Otherwise (but it depends on your specification, I suppose) the
> functional way would be to just return the subtree(s) intact, so there would
> be no need to copy their spines. Either way, you're generating the same amount
> of garbage.

For this to work, you should either have a low-level pointer equality
operator (present in OCaml, but not in other func. languages), or you
must return a flag to signal whether the returned tree is unchanged.
Both variants are ugly and cumbersome, IMO.


Gxis,
  Pierpaolo



