Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA01129 for caml-redist@pauillac.inria.fr; Sun, 14 May 2000 23:13:40 +0200 (MET DST)
Resent-Message-Id: <200005142113.XAA01129@pauillac.inria.fr>
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA15744 for <caml-list@pauillac.inria.fr>; Sat, 13 May 2000 01:35:09 +0200 (MET DST)
Received: from miss.wu-wien.ac.at (miss.wu-wien.ac.at [137.208.107.17])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e4CNZ8908336
	for <caml-list@inria.fr>; Sat, 13 May 2000 01:35:08 +0200 (MET DST)
Received: (from mottl@localhost)
	by miss.wu-wien.ac.at (8.9.0/8.9.0) id BAA30831;
	Sat, 13 May 2000 01:35:00 +0200 (MET DST)
From: Markus Mottl <mottl@miss.wu-wien.ac.at>
Message-Id: <200005122335.BAA30831@miss.wu-wien.ac.at>
Subject: Re: The Unix module & records
To: adubey@hopper.math.uwaterloo.ca (Amit Dubey)
Date: Sat, 13 May 2000 01:34:59 +0200 (MET DST)
Cc: caml-list@inria.fr (OCAML)
In-Reply-To: <200005121655.MAA03138@hopper.math.uwaterloo.ca> from "Amit Dubey" at May 12, 2000 12:55:01 PM
X-Mailer: ELM [version 2.5 PL2]
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Resent-From: weis@pauillac.inria.fr
Resent-Date: Sun, 14 May 2000 23:13:40 +0200
Resent-To: caml-redist@pauillac.inria.fr

> 1: let main () =
> 2:        let file_info : Unix.stats = Unix.stat Sys.argv.(1) in
> 3:        let fd = Unix.openfile Sys.argv.(1) [ Unix.O_RDONLY ] perm in
> 4:        let buffer = ref "" in
> 5:        let bytes_read = Unix.read (fd) (buffer) (file_info.st_size) in
> 	<snipped>
> 
> But it fails with the error "Unbound record field label st_size" on line 5.
> I can't explain why this is happening; looking at the Unix.ml file, I see
> the st_size field in the Unix.stats record.  Any suggestions would be
> appreciated.

Unless you open the Unix-library with "open Unix", you need to write the
fully qualified name:

  file_info.Unix.st_size

instead of

  file_info.st_size

Furthermore, strings are not resizable: so you cannot read in anything into
an empty one. Btw., you need not write parenthesis around function
arguments if they are just one word (= an evaluated expression).

Try something like the following code:

  let read_file name =
    let size = (Unix.stat name).Unix.st_size in
    let buf = String.create size
    and file = open_in name in
    really_input file buf 0 size;
    close_in file;
    buf

Best regards,
Markus Mottl

-- 
Markus Mottl, mottl@miss.wu-wien.ac.at, http://miss.wu-wien.ac.at/~mottl


