Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA07030 for caml-redist; Thu, 11 May 2000 19:51:02 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA22064 for <caml-list@pauillac.inria.fr>; Thu, 11 May 2000 16:17:49 +0200 (MET DST)
Received: from qhars002.nortel.com (qhars002.NortelNetworks.com [192.100.101.19])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id QAA21980
	for <caml-list@inria.fr>; Thu, 11 May 2000 16:17:43 +0200 (MET DST)
Received: from zhard00m.europe.nortel.com (actually zhard00m) 
          by qhars002.nortel.com; Thu, 11 May 2000 15:16:59 +0100
Received: by zhard00m.europe.nortel.com 
          with Internet Mail Service (5.5.2650.21) id <K180B734>;
          Thu, 11 May 2000 15:16:54 +0100
Message-ID: <61ABD11436FED21192440000F81F3E36036347E6@nwcwi1a.europe.nortel.com>
From: "Toby Moth" <tmoth@nortelnetworks.com>
To: "'Hongwei Xi'" <hwxi@ececs.uc.edu>, caml-list@inria.fr
Subject: overloading ( was reference initialization )
Date: Thu, 11 May 2000 15:16:51 +0100
MIME-Version: 1.0
X-Mailer: Internet Mail Service (5.5.2650.21)
Content-Type: text/plain
Sender: weis

1. If you are thinking about overloading binary operators, such as +,
might it be possible to introduce a unary 'any' operator which gives any old
value of
the right type ?

let init_val = ( any : t )

Ideally, this value should exhibit some form of lazy behaviour, especially
when t is a reference type.
This might keep someone like Hongwei Xi happier.

2. Also, have there been any thoughts about overloading list
pattern-matching syntax,
so that we have a functional style for handling general container types ?

let ([]) : container->bool = fun c -> ...
let (::) : container->(element,container) = fun c -> ( ..., ... )

Obviously, I am not suggesting syntax here, only the kinds of functions that
one would
need to be able to bind to [] and ::.

Toby Moth



