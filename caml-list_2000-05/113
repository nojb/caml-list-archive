Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA18238 for caml-red; Mon, 29 May 2000 22:49:42 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA17785 for <caml-list@pauillac.inria.fr>; Mon, 29 May 2000 15:16:43 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e4TDDvj29963;
	Mon, 29 May 2000 15:13:57 +0200 (MET DST)
Received: (from fpottier@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA06083; Mon, 29 May 2000 15:13:57 +0200 (MET DST)
Message-ID: <20000529151357.24569@pauillac.inria.fr>
Date: Mon, 29 May 2000 15:13:57 +0200
From: Francois Pottier <Francois.Pottier@inria.fr>
To: Dan Grossman <danieljg@cs.cornell.edu>
Cc: caml-list@inria.fr
Subject: Re: Alternative generic hash function
Reply-To: Francois.Pottier@inria.fr
References: <783D93998201D311B0CF00805FEAA07B7E9233@RED-MSG-42> <20000525102414.55340@pauillac.inria.fr> <392ED1F3.A08D283D@cs.cornell.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Mailer: Mutt 0.89.1
In-Reply-To: <392ED1F3.A08D283D@cs.cornell.edu>; from Dan Grossman on Fri, May 26, 2000 at 03:35:15PM -0400
Sender: weis


Dan,

> Why do you think the overhead would be high?

I was thinking of a recording mutability per-field, rather than
per-object. I agree that your proposal seems economical enough.

> there are plenty of clever tricks you can put in the runtime system
> that exploit the immutability of objects.

Would you care to elaborate? I am no compiler expert, but I'm not sure
why it would be so interesting to have this information at runtime,
where it is already too late to do code optimization.  That would allow
implementing the `pure' hash function proposed by Manuel Fähndrich, but
with a cost: the user would have to separate the mutable fields into a
sub-object, so as to allow the root object to be tagged as immutable.
Which other tricks do you have in mind?

-- 
François Pottier
Francois.Pottier@inria.fr
http://pauillac.inria.fr/~fpottier/



