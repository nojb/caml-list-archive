Return-Path: <jeanfrancois.monin@rd.francetelecom.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA03521 for <caml-redist@pauillac.inria.fr>; Tue, 16 May 2000 18:11:09 +0200 (MET DST)
Received: from p-voyageur.issy.cnet.fr (p-voyageur.issy.cnet.fr [139.100.0.39])
	by nez-perce.inria.fr (8.10.0/8.10.0) with SMTP id e4GGB9T20229
	for <caml-redist@pauillac.inria.fr>; Tue, 16 May 2000 18:11:09 +0200 (MET DST)
Received: from l-mhs1.lannion.cnet.fr ([161.104.1.59]) by p-voyageur.issy.cnet.fr with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2448.0)
	id KV3FJ93M; Tue, 16 May 2000 18:10:57 +0200
Received: from lsun169.cnet (lsun169.lannion.cnet.fr [161.104.4.4]) by l-mhs1.lannion.cnet.fr with SMTP (Microsoft Exchange Internet Mail Service Version 5.5.2448.0)
	id KZDJ3QT2; Tue, 16 May 2000 18:10:16 +0200
Received: from lsun565.lannion.cnet.fr (lsun565 [161.104.10.182])
	by lsun169.cnet (8.8.8+Sun/8.8.8) with SMTP id SAA26057;
	Tue, 16 May 2000 18:11:04 +0200 (MET DST)
Received: from lsun565.cnet by lsun565.lannion.cnet.fr (SMI-8.6/SMI-SVR4)
	id SAA17047; Tue, 16 May 2000 18:11:03 +0200
Date: Tue, 16 May 2000 18:11:03 +0200
Message-Id: <200005161611.SAA17047@lsun565.lannion.cnet.fr>
From: Jean-Francois Monin <jeanfrancois.monin@rd.francetelecom.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
To: Pierpaolo Bernardi <bernardp@cli.di.unipi.it>
Cc: Frank Atanassow <franka@cs.uu.nl>, Markus Mottl <mottl@miss.wu-wien.ac.at>,
        OCAML <caml-list@inria.fr>, Pierre.Weis@inria.fr,
        caml-redist@pauillac.inria.fr
Subject: Re: The performance cost of using exceptions?
In-Reply-To: <Pine.GSO.4.00.10005161657570.3360-100000@carlotta.cli.di.unipi.it>
References: <14625.5414.998940.387603@silvester.cs.uu.nl>
	<Pine.GSO.4.00.10005161657570.3360-100000@carlotta.cli.di.unipi.it>
X-Mailer: VM 6.37 under Emacs 20.2.1

> From: Pierpaolo Bernardi <bernardp@cli.di.unipi.it>
> 
> Usually, that is, in the most straightforward implementation, you rebuild
> the path on the way up.  By throwing the exception, you don't cons any new
> node.
> [...]
> For this to work, you should either have a low-level pointer equality
> operator (present in OCaml, but not in other func. languages), or you
> must return a flag to signal whether the returned tree is unchanged.
> Both variants are ugly and cumbersome, IMO.

This theme was discussed last year under a thread called
 "List.filter in Ocaml 2.02"

-- 
Jean-Francois Monin, CNET DTL/MSV,          Tel +33 2 96 05 26 79
2 av. Pierre Marzin, 22307 Lannion, France  Fax +33 2 96 05 39 45
 NEW                       JeanFrancois.Monin@francetelecom.fr




