Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA11099 for caml-redist@pauillac.inria.fr; Tue, 16 May 2000 12:37:28 +0200 (MET DST)
Resent-Message-Id: <200005161037.MAA11099@pauillac.inria.fr>
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA13463; Tue, 16 May 2000 11:55:06 +0200 (MET DST)
Message-ID: <20000516115506.06514@pauillac.inria.fr>
Date: Tue, 16 May 2000 11:55:06 +0200
From: Xavier Leroy <xleroy@pauillac.inria.fr>
To: Daniel Ortmann <ortmann@vnet.ibm.com>, caml-list@pauillac.inria.fr
Subject: Re: The performance cost of using exceptions?
References: <bpxln1eaz70.fsf@neon.rchland.ibm.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.89.1
In-Reply-To: <bpxln1eaz70.fsf@neon.rchland.ibm.com>; from Daniel Ortmann on Sat, May 13, 2000 at 04:59:47PM -0500
Resent-From: weis@pauillac.inria.fr
Resent-Date: Tue, 16 May 2000 12:37:28 +0200
Resent-To: caml-redist@pauillac.inria.fr

> Are programs written to make heavy use of exceptions going to be markedly
> slower than programs written more traditionally with loops/ifs, etc?
> (My uninformed mental picture of exception is that they would use
> some type of underlying setjump/longjump overhead.)

The OCaml compiler "knows" about exceptions, so it can implement them
more efficiently than setjmp/longjmp.  Namely, there is no need to
save registers to install an exception handler and to restore them
when raising an exception.

As rought approximations, I would say that raising an exception costs
no more than, say, two calls to unknown functions, and installing an
exception handler costs no more than one such call.

- Xavier Leroy


