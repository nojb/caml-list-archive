Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: **
X-Spam-Status: No, score=2.0 required=5.0 tests=DNS_FROM_SECURITYSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id D907DBBAF
	for <caml-list@yquem.inria.fr>; Wed,  5 Nov 2008 14:59:42 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aj0BAOs1EUnUnw6Ugmdsb2JhbACCRpFTAQEJDQgHEwS3GoNT
X-IronPort-AV: E=Sophos;i="4.33,550,1220220000"; 
   d="scan'208";a="31148098"
Received: from fhw-relay07.plus.net ([212.159.14.148])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/AES256-SHA; 05 Nov 2008 14:59:42 +0100
Received: from [87.114.2.42] (helo=leper.local)
	 by fhw-relay07.plus.net with esmtp (Exim) id 1Kxiv7-0001Gi-71
	for caml-list@yquem.inria.fr; Wed, 05 Nov 2008 13:59:41 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] What does Jane Street use/want for an IDE? What about you?
Date: Wed, 5 Nov 2008 15:01:43 +0000
User-Agent: KMail/1.9.9
References: <200810200919.41561.ober.14@osu.edu> <200811050548.41693.jon@ffconsultancy.com> <4b5157c30811050053p6229b962xdf567ec325d0a9f5@mail.gmail.com>
In-Reply-To: <4b5157c30811050053p6229b962xdf567ec325d0a9f5@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200811051501.43334.jon@ffconsultancy.com>
X-Plusnet-Relay: 124b69ff26eec682b614d054162cd907
X-Spam: no; 0.00; bindings:01 ocaml:01 bindings:01 trivial:01 glitches:01 segfaults:01 ocaml:01 segfault:01 kde:01 frog:98 invoke:01 garbage:01 wrote:01 caml-list:01 binding:02 

On Wednesday 05 November 2008 08:53:28 Paolo Donadeo wrote:
> > No, you just invoke the existing Python bindings. OCaml doesn't have to
> > implement anything except bindings to Python, which are already done.
>
> From this sentence I deduce you don't know *how* the PyQt binding is
> generated. It's not a trivial task and the binding layer adds it's own
> bugs and glitches, of course. PyQt doesn't interact well with the 
> Python garbage collector [1] and sometimes you have segfaults *VERY*
> hard to be debugged.

Yes, that was my concern but note that I was not talking about porting PyQt to 
OCaml. However, Trolltechs own demos segfault on my machine regularly and KDE 
is unreliable despite being written almost entirely in Qt's native language. 
So I would not be so hasty to blame PyQt for Qt's reliability problems.

-- 
Dr Jon Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/?e

