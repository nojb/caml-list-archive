Return-Path: <ertai@ausone.inria.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 9BEE7BBAF;
	Thu, 20 Nov 2008 13:59:37 +0100 (CET)
X-IronPort-AV: E=Sophos;i="4.33,639,1220220000"; 
   d="scan'208";a="20175259"
Received: from peray.inria.fr (HELO ausone.inria.fr) ([128.93.8.98])
  by mail1-relais-roc.national.inria.fr with ESMTP; 20 Nov 2008 13:59:37 +0100
Received: by ausone.inria.fr (Postfix, from userid 501)
	id 89DBC2AF3ED5; Thu, 20 Nov 2008 13:58:42 +0100 (CET)
Content-Type: text/plain; charset=UTF-8
Cc: Maxence Guesdon <maxence.guesdon@inria.fr>,
	Caml_mailing list <caml-list@yquem.inria.fr>,
	Paolo Donadeo <p.donadeo@gmail.com>
Subject: Re: [Caml-list] Wanted: your feedback on the hierarchy of OCaml Batteries Included
From: Nicolas Pouillard <nicolas.pouillard@gmail.com>
To: Richard Jones <rich@annexia.org>
References: <1227002178.6170.25.camel@Blefuscu> <200811182330.03947.jon@ffconsultancy.com> <1227076192.6290.7.camel@Blefuscu> <4b5157c30811190146l2c6a5e2cv4a085bcc14ae5f4@mail.gmail.com> <20081119211124.51610ae9@alcazar.inria.fr> <1227172839-sup-5973@ausone.inria.fr> <20081120103303.GA25346@annexia.org>
In-Reply-To: <20081120103303.GA25346@annexia.org>
Date: Thu, 20 Nov 2008 13:58:42 +0100
Message-Id: <1227185856-sup-800@ausone.inria.fr>
User-Agent: Sup/git
X-Spam: no; 0.00; ocaml:01 0100,:01 printf:01 20,:98 wrote:01 caml-list:01 data:02 data:02 define:02 modules:02 modules:02 organized:02 consistent:02 external:03 installer:03 

Excerpts from Richard Jones's message of Thu Nov 20 11:33:03 +0100 2008:
> On Thu, Nov 20, 2008 at 10:28:07AM +0100, Nicolas Pouillard wrote:
> > No one (I guess) would recommend you to use fully qualified paths as in
> > Data.Containers.List.length of course. Data.Containers.List.length is the
> > external name, made to be well organized not to be quick to type, the way
> > to use it to open it *OR* to define an internal name for it :
> > 
> > module L = Data.Containers.List
> > 
> > And then use L.length, L.map...
> 
> I've lost the plot on what problem are we trying to solve .. except
> for the original one which is "Windows users are too stupid to use a
> packaging system, so let's give them everything in a single
> installer".  But surely having everyone using privately named modules
> is a bad idea?  The private names chosen won't be consistent, and they
> require a reference back to the top of the code to find out which
> module they are really using.  Encouraging developers to open modules
> is also usually a bad idea, except in very limited circumstances
> (hello Printf).

Actually having to look at the top of each file (and only the top), is
my favorite option. That's in fact exactly what I already do.

-- 
Nicolas Pouillard aka Ertai

