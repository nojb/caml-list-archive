Return-Path: <David.Teller@univ-orleans.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.1 required=5.0 tests=AWL,DNS_FROM_SECURITYSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 5838EBB84
	for <caml-list@yquem.inria.fr>; Mon, 10 Nov 2008 18:01:07 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aq8CAJv3F0nCpx6wi2dsb2JhbACUJAEBAQoLChi2W4NY
X-IronPort-AV: E=Sophos;i="4.33,576,1220220000"; 
   d="scan'208";a="17072384"
Received: from smtpmin.univ-orleans.fr (HELO min.univ-orleans.fr) ([194.167.30.176])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 10 Nov 2008 18:01:04 +0100
Received: from smtps.univ-orleans.fr (localhost [127.0.0.1])
	by min.univ-orleans.fr (Postfix) with ESMTP
	id DC04112B4ED; Mon, 10 Nov 2008 18:01:03 +0100 (CET)
Received: from [192.168.0.12] (ras75-4-82-235-58-110.fbx.proxad.net [82.235.58.110])
	by smtps.univ-orleans.fr (Postfix) with ESMTP id E67D636E60;
	Mon, 10 Nov 2008 18:01:06 +0100 (CET)
Subject: Re: [Caml-list] Implementation of lazy_t
From: David Teller <David.Teller@univ-orleans.fr>
To: Florian Lorenzen <florian.lorenzen@tu-berlin.de>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <491861D3.8020709@tu-berlin.de>
References: <491861D3.8020709@tu-berlin.de>
Content-Type: text/plain
Date: Mon, 10 Nov 2008 18:01:04 +0100
Message-Id: <1226336464.6558.15.camel@Blefuscu>
Mime-Version: 1.0
X-Mailer: Evolution 2.12.1 
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; univ-orleans:01 0100,:01 implements:01 implements:01 inserting:01 lambda:01 cheers:01 univ-orleans:01 lifo:01 liquidations:98 wrote:01 caml-list:01 constructor:01 lazy:02 lazy:02 


On Mon, 2008-11-10 at 17:31 +0100, Florian Lorenzen wrote:
> Especially, if
> lazy_t implements call-by-need in the sense that once evaluated
> objects are not evaluated again (by means of sharing) or if it
> implements call-by-name like one can do by inserting 0-ary lambda
> abstractions in the constructor to suspend evaluation and applying
> them to force evaluation?

That's call-by-need indeed. 

Cheers,
 David
-- 
David Teller-Rajchenbach
 Security of Distributed Systems
  http://www.univ-orleans.fr/lifo/Members/David.Teller
 Angry researcher: French Universities need reforms, but the LRU act brings liquidations. 

