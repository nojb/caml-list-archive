Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: **
X-Spam-Status: No, score=2.0 required=5.0 tests=AWL,DNS_FROM_SECURITYSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 86433BBAF
	for <caml-list@yquem.inria.fr>; Tue, 18 Nov 2008 22:40:47 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApsAAHfFIknUnw6UlGdsb2JhbACCPJEcAQEBAQkLCAkRBL8Bgnk
X-IronPort-AV: E=Sophos;i="4.33,627,1220220000"; 
   d="scan'208";a="31581074"
Received: from fhw-relay07.plus.net ([212.159.14.148])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/AES256-SHA; 18 Nov 2008 22:40:47 +0100
Received: from [87.115.4.231] (helo=leper.local)
	 by fhw-relay07.plus.net with esmtp (Exim) id 1L2YJS-0001sZ-4y; Tue, 18 Nov 2008 21:40:46 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: "Nicolas Pouillard" <nicolas.pouillard@gmail.com>
Subject: Re: [Caml-list] Wanted: your feedback on the hierarchy of OCaml Batteries Included
Date: Tue, 18 Nov 2008 22:43:14 +0000
User-Agent: KMail/1.9.9
Cc: Caml_mailing list <caml-list@yquem.inria.fr>
References: <1227002178.6170.25.camel@Blefuscu> <200811181817.23216.jon@ffconsultancy.com> <1227030578-sup-8064@ausone.local>
In-Reply-To: <1227030578-sup-8064@ausone.local>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200811182243.14819.jon@ffconsultancy.com>
X-Plusnet-Relay: 10ee0d976298d9ad92bfaff4d6c04358
X-Spam: no; 0.00; ocaml:01 struct:01 sig:01 val:01 frog:98 wrote:01 caml-list:01 int:01 external:03 module:03 module:03 hierarchy:03 let:03 let:03 tue:06 

On Tuesday 18 November 2008 17:51:21 Nicolas Pouillard wrote:
> Excerpts from Jon Harrop's message of Tue Nov 18 19:17:23 +0100 2008:
> > # module Array = struct
> >     include Array
> >     let empty = [||]
> >   end;;
> > module Array :
> >   sig
> >     external length : 'a array -> int = "%array_length"
> >     ...
> >     val empty : 'a array
> >   end
>
> Yes but that's the same than saying you can change a value:
>
> let x = 42
> let x = x + 1
>
> So you make a new module but don't extend it.

In what way is that unsatisfactory?

-- 
Dr Jon Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/?e

