Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.9 required=5.0 tests=AWL,DNS_FROM_SECURITYSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 1B6E6BBAF
	for <caml-list@yquem.inria.fr>; Wed,  5 Nov 2008 16:54:31 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Al4FAPxQEUnUnw4TZmdsb2JhbACCRpFTCw0ICBIDuCaDUw
X-IronPort-AV: E=Sophos;i="4.33,551,1220220000"; 
   d="scan'208";a="31152757"
Received: from pih-relay06.plus.net ([212.159.14.19])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/AES256-SHA; 05 Nov 2008 16:54:09 +0100
Received: from [87.114.2.42] (helo=leper.local)
	 by pih-relay06.plus.net with esmtp (Exim) id 1Kxkhr-0004H7-Nw
	for caml-list@yquem.inria.fr; Wed, 05 Nov 2008 15:54:08 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] What does Jane Street use/want for an IDE? What about you?
Date: Wed, 5 Nov 2008 16:56:10 +0000
User-Agent: KMail/1.9.9
References: <200810200919.41561.ober.14@osu.edu> <200811051501.43334.jon@ffconsultancy.com> <200811051005.14184.ober.14@osu.edu>
In-Reply-To: <200811051005.14184.ober.14@osu.edu>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200811051656.10100.jon@ffconsultancy.com>
X-Plusnet-Relay: 992c6a7deb3edd90da15cd6144a685a7
X-Spam: no; 0.01; segfault:01 kde:01 kde:01 distro:01 low-level:01 high-level:01 non-trivial:01 ocaml:01 2.1:98 dog:98 gripe:98 continuously:98 sluggish:98 workstation:98 frog:98 

On Wednesday 05 November 2008 15:05:13 Kuba Ober wrote:
> > However, Trolltechs own demos segfault on my machine regularly
> > and KDE is unreliable despite being written almost entirely in Qt's
> > native language. So I would not be so hasty to blame PyQt for Qt's
> > reliability problems.
>
> As a longtime KDE user, I'm very much disappointed by the most recent
> major KDE release, in terms of how much slower it got on my
> not-all-that-old-hardware (an AMD64 Compaq machine running in 32 bits).
> A lot of it comes from the fact that my home directory is mounted via NFS,
> but this used to work a lot better.

I now have a terabyte of ext3, 4Gb of RAM and eight 2.1GHz Opteron cores and 
KDE still runs like a dog, burning only 1 core at a time. This is a fresh 
install on a new machine as well, so distro baggage isn't the problem.

> A typical KDE application literally hammers the filesystem upon every
> single application startup, and it got progressively worse every major
> KDE release. Qt is not an angel in that respect either -- that's about
> the major gripe I have with Qt.

I believe that fixing this is tantamount to Greenspunning managed C++ so I 
don't believe that will ever happen. Qt will be relegated to the embedded 
niche before dying completely.

> As a longtime developer who uses Qt (recently only for open source stuff),
> I do know that Qt's performance in general has continuously improved, and
> they have made real low-level architectural improvements. New KDE releases
> always hammered Qt pretty hard, it was a similar story when KDE 3 came
> out, although the perceived slowdown wasn't as bad (and it was on worse
> hardware).

I think these are all knock-on effects. C++ is an awful programming language 
for high-level work because it is so inefficient (e.g. no GC). Qt is 
effectively C++-only so almost all non-trivial Qt applications are sluggish.

If you build a GUI toolkit on a solid foundation like OCaml (when it gets its 
parallel GC) then GUI programming becomes much easier and much more 
efficient. That is unquestionably the way forward, as .NET has proven. Using 
Qt or C++ is just building on sand.

> As for Qt demos segfaulting: I wonder if that may be due to OpenGL bugs.
> Seriously.

This is a high-performance OpenGL workstation that is used almost entirely for 
scientific visualization using OpenGL. None of our other software has any 
problems, just Qt.

My guess is the Qt code isn't detecting error conditions at startup when it is 
obliged to, whereas glut and SDL are. Moreover, these are old bugs in Qt: I 
saw them years ago as well.

-- 
Dr Jon Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/?e

