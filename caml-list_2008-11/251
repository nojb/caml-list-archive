Return-Path: <zack@upsilon.cc>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 04549BB84
	for <caml-list@yquem.inria.fr>; Sun, 23 Nov 2008 11:36:30 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgYDAFfBKElDz4HegWdsb2JhbACTXAEBFiK6XYJ8
X-IronPort-AV: E=Sophos;i="4.33,653,1220220000"; 
   d="scan'208";a="31732715"
Received: from fettunta.fettunta.org ([67.207.129.222])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 23 Nov 2008 11:36:24 +0100
Received: from usha.takhisis.invalid (unknown [10.17.0.18])
	by fettunta.fettunta.org (Postfix) with ESMTP id 686F118241
	for <caml-list@yquem.inria.fr>; Sun, 23 Nov 2008 10:36:23 +0000 (UTC)
Received: by usha.takhisis.invalid (Postfix, from userid 1000)
	id 481056875; Sun, 23 Nov 2008 11:36:20 +0100 (CET)
Date: Sun, 23 Nov 2008 11:36:20 +0100
From: Stefano Zacchiroli <zack@upsilon.cc>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] open Module (not?) considered harmful
Message-ID: <20081123103620.GE27327@usha.takhisis.invalid>
References: <20081120104914.GA14355@usha.takhisis.invalid> <EAAA2D01-638E-4B4B-BA60-464C4EC5E806@erratique.ch>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <EAAA2D01-638E-4B4B-BA60-464C4EC5E806@erratique.ch>
User-Agent: Mutt/1.5.18 (2008-05-17)
X-Spam: no; 0.00; zacchiroli:01 zack:01 0100,:01 bunzli:01 syntax:01 cheers:01 zacchiroli:01 postdoc:01 zack:01 20,:98 dietro:98 c'e:98 sempre:98 invoke:01 imho:01 

On Thu, Nov 20, 2008 at 12:31:47PM +0100, Daniel Bünzli wrote:
> I disagree. Having to invoke a tool to know where an identifier comes  
> from when I read code involves one more (superfluous IMHO) action. Not  
> to mention that I do sometimes print code on real paper to read it.

Fair enough.

Once more though, the annoyance you are pointing out seems to me to be
solved by a syntax extension (which we now have) which enables you to
selectively open specific identifiers from a module, instead of only
enabling to open all of it.

> I do not object using open for external libraries that pack some
> related _modules_ in a _single level_ hierarchy but I clearly see no
> benefit of having to open things to use the standard library
> (especially to use something as ubiquituous as lists).

Well, given that Batteries is de facto extending the standard library
to include external library, the distinction between stdandard and
external it is kind of blurred in this case.

Cheers.

-- 
Stefano Zacchiroli -o- PhD in Computer Science \ PostDoc @ Univ. Paris 7
zack@{upsilon.cc,pps.jussieu.fr,debian.org} -<>- http://upsilon.cc/zack/
Dietro un grande uomo c'è ..|  .  |. Et ne m'en veux pas si je te tutoie
sempre uno zaino ...........| ..: |.... Je dis tu à tous ceux que j'aime

