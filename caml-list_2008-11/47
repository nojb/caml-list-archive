Return-Path: <dim@dimino.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: **
X-Spam-Status: No, score=2.0 required=5.0 tests=DNS_FROM_SECURITYSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 24B7DBBAF
	for <caml-list@yquem.inria.fr>; Wed,  5 Nov 2008 17:33:44 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAGBZEUnVuiYS/2dsb2JhbADNQ4NT
X-IronPort-AV: E=Sophos;i="4.33,551,1220220000"; 
   d="scan'208";a="18885979"
Received: from solaria.dimino.org ([213.186.38.18])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 05 Nov 2008 17:33:44 +0100
Received: by solaria.dimino.org (Postfix, from userid 1000)
	id BA7498007C; Wed,  5 Nov 2008 17:33:43 +0100 (CET)
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] What does Jane Street use/want for an IDE? What about you?
References: <200810200919.41561.ober.14@osu.edu>
	<200811032311.33989.jon@ffconsultancy.com>
	<200811041335.46897.ober.14@osu.edu>
	<200811042336.48392.jon@ffconsultancy.com>
From: =?utf-8?B?SsOpcsOpbWll?= Dimino <jeremie@dimino.org>
X-Operating-System: Debian GNU/Linux Kernel 2.6.27 (x86_64)
Date: Wed, 05 Nov 2008 17:33:43 +0100
In-Reply-To: <200811042336.48392.jon@ffconsultancy.com> (Jon Harrop's message of "Tue\, 4 Nov 2008 23\:36\:48 +0000")
Message-ID: <874p2mw2s8.fsf@aurora.crans.org>
User-Agent: Gnus/5.11 (Gnus v5.11) Emacs/22.2 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Spam: no; 0.00; ocaml:01 ocaml:01 wikipedia:01 wiki:01 caml-list:01 writes:01 objects:02 objects:02 languages:03 problem:05 i'd:06 create:12 writing:12 idea:13 some:14 


Jon Harrop <jon@ffconsultancy.com> writes:

> I'd forget about that and just focus on making the whole of Qt4 available=
=20
> safely from OCaml in any form first. Even this is an unsolved problem in =
the=20
> OCaml world!

I suggest an idea. I know that Qt4 offer some facility to export
objects trough DBus [1]. So one can write a small C++ application that
allow other applications to create Qt objects and export them, then
use Qt in ocaml via DBus.

Here are the advantages i see:

- the C++ code and the ocaml code would run in different processes, so
  we do not have to care about all the C++isms of Qt in the ocaml
  application.

- this would make Qt available to any languages that have DBus.
  For ocaml i am currently writing a pure ocaml DBus implementation [2].

[1] http://en.wikipedia.org/wiki/D-Bus

[2] http://forge.ocamlcore.org/projects/obus/

--=20
J=C3=A9r=C3=A9mie Dimino <jeremie@dimino.org>

