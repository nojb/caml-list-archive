Return-Path: <ober.14@osu.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: **
X-Spam-Status: No, score=2.4 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE,
	DNS_FROM_SECURITYSAGE,SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 8930FBBAF
	for <caml-list@yquem.inria.fr>; Wed,  5 Nov 2008 17:43:53 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: As8BAHNcEUlDWxLCbmdsb2JhbACBd5IiPq1YhlyELoNT
X-IronPort-AV: E=Sophos;i="4.33,551,1220220000"; 
   d="scan'208";a="16894802"
Received: from ip67-91-18-194.z18-91-67.customer.algx.net (HELO server1.bertec.net) ([67.91.18.194])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 05 Nov 2008 17:43:53 +0100
Received: from kuba.bertec.net (kuba.bertec.net [192.168.2.16])
	by server1.bertec.net (Postfix) with ESMTP id 89497105735
	for <caml-list@yquem.inria.fr>; Wed,  5 Nov 2008 11:43:52 -0500 (EST)
From: Kuba Ober <ober.14@osu.edu>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] What does Jane Street use/want for an IDE? What about you?
Date: Wed, 5 Nov 2008 11:43:50 -0500
User-Agent: KMail/1.9.10
References: <200810200919.41561.ober.14@osu.edu> <200811042336.48392.jon@ffconsultancy.com> <874p2mw2s8.fsf@aurora.crans.org>
In-Reply-To: <874p2mw2s8.fsf@aurora.crans.org>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Message-Id: <200811051143.51766.ober.14@osu.edu>
X-Spam: no; 0.00; ocaml:01 ocaml:01 cheers:01 wrote:01 caml-list:01 writes:01 data:02 objects:02 objects:02 languages:03 types:05 problem:05 problem:05 i'd:06 interface:06 

On Wednesday 05 November 2008, J=C3=A9r=C3=A9mie Dimino wrote:
> Jon Harrop <jon@ffconsultancy.com> writes:
> > I'd forget about that and just focus on making the whole of Qt4 availab=
le
> > safely from OCaml in any form first. Even this is an unsolved problem in
> > the OCaml world!
>
> I suggest an idea. I know that Qt4 offer some facility to export
> objects trough DBus [1]. So one can write a small C++ application that
> allow other applications to create Qt objects and export them, then
> use Qt in ocaml via DBus.
>
> Here are the advantages i see:
>
> - the C++ code and the ocaml code would run in different processes, so
>   we do not have to care about all the C++isms of Qt in the ocaml
>   application.
>
> - this would make Qt available to any languages that have DBus.
>   For ocaml i am currently writing a pure ocaml DBus implementation [2].

The biggest problem is that this limits you to what's exposed by Qt's
signal/slot interface. That's too little to actually use Qt but for very
simple applications that pass either relatively simple data types around,
or pass QObjects around.

If you want to create and pass something less-than-simple, say a QList<>
of some custom type, you're screwed and this functionality is necessary
for any real Qt interoperability.

Cheers, Kuba

