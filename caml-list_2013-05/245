Return-Path: <berenger@riken.jp>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 074157EE51
	for <caml-list@sympa.inria.fr>; Thu, 30 May 2013 02:51:07 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  berenger@riken.jp) identity=pra; client-ip=134.160.33.161;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="berenger@riken.jp"; x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  berenger@riken.jp designates 134.160.33.161 as permitted
  sender) identity=mailfrom; client-ip=134.160.33.161;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="berenger@riken.jp"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  postmaster@postman.riken.jp designates 134.160.33.161 as
  permitted sender) identity=helo; client-ip=134.160.33.161;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="postmaster@postman.riken.jp";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AngBAK6hplGGoCGhnGdsb2JhbABahnS+RYEcDgEBAQEBBg0JCRQogiMBAQQBIxVGCwsYAgIFHgMCAg8CNRETBgIBAYd3AwkGp36JAgyJAYEmjXQWgi2BFAOJHY4ehh6OQA
X-IPAS-Result: AngBAK6hplGGoCGhnGdsb2JhbABahnS+RYEcDgEBAQEBBg0JCRQogiMBAQQBIxVGCwsYAgIFHgMCAg8CNRETBgIBAYd3AwkGp36JAgyJAYEmjXQWgi2BFAOJHY4ehh6OQA
X-IronPort-AV: E=Sophos;i="4.87,767,1363129200"; 
   d="scan'208";a="16133012"
Received: from postman1.riken.jp (HELO postman.riken.jp) ([134.160.33.161])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 30 May 2013 02:51:05 +0200
Received: from postman.riken.jp (postman1.riken.jp [127.0.0.1])
	by postman.riken.jp (Postfix) with SMTP id ED9ED2588005
	for <caml-list@inria.fr>; Thu, 30 May 2013 09:51:02 +0900 (JST)
Received: from [172.27.98.103] (rikad98.riken.jp [134.160.214.98])
	by postman.riken.jp (Postfix) with ESMTPA id B3C3A32A008B
	for <caml-list@inria.fr>; Thu, 30 May 2013 09:51:01 +0900 (JST)
Message-ID: <51A6A275.40208@riken.jp>
Date: Thu, 30 May 2013 09:51:01 +0900
From: Francois Berenger <berenger@riken.jp>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:17.0) Gecko/20130510 Thunderbird/17.0.6
MIME-Version: 1.0
To: caml-list@inria.fr
References: <20130523235355.GI6510@siouxsie> <20130526150008.GA2014@siouxsie> <CAKziXDXK7pU4+KzJMsfVMo+eVVb=EJ-aan_sXHZkaofQALhYyg@mail.gmail.com> <20130526234911.41866xca7wgoirfb@webmail.in-berlin.de> <51A30E01.5070300@freenet.de> <CAHvkLrNh8jq-hbNtV5JxThG9py4ZYD2Haz3puF=9UOjhRdT=fQ@mail.gmail.com> <51A3C03C.4000205@freenet.de> <51A3C3D6.9020003@etorok.net> <51A3CBBD.8040609@freenet.de> <51A4052F.7000700@riken.jp> <51A4F822.8070407@freenet.de> <CAPzAKVCQMX3e6TGwPhg9mC1rF3mDATsNB1mNTBqekCsxAX9WvQ@mail.gmail.com> <51A52CE3.6060002@freenet.de> <CAPzAKVDmhvK5WAwWv2nFoCNsnEeb2BJwK1QbdO8OfMeOEgFR=w@mail.gmail.com> <51A669A9.2070505@freenet.de> <87r4gppk3k.fsf@gmail.com> <51A67AE2.2000000@freenet.de>
In-Reply-To: <51A67AE2.2000000@freenet.de>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-PMX-Version: 6.0.0.2142326, Antispam-Engine: 2.7.2.2107409, Antispam-Data: 2013.5.30.4222
Subject: Re: Problems to get larger user base ... (Re: [Caml-list] OCaml's
 variables)

On 05/30/2013 07:02 AM, Mr. Herr wrote:
> Is Ocaml scripting totally out? Yet I read about a project to produce a native toplevel.

There is also Martin Jambon's excellent ocamlscript:

# opam list ocamlscript
Available packages for 4.00.0+fp:
ocamlscript  --  Tool which compiles OCaml scripts into native code

The first time a script is executed, its binary is generated.
Subsequent invocations will call the compiled version of your script.

I just don't like about it the fact that parsing errors are less
understandable than when compiling a regular project.
But it may be due to a lack of experience with it on my side.

> I bet even in byte code Ocaml is on par with a lot of other scripting/programming
> languages.
>
> /Str.
>
> Am 29.05.2013 23:11, schrieb Malcolm Matalka:
>> Why would you need to roll out opem libraries for production?  You
>> should build a binary and distribute the binary to the machines.
>>
>> I prefer per-user install.  I have, numerous times, felt suffocated on
>> systems that require going through some bureaucracy to install a package
>> (which is one reason I use NixOS everywhere I can).
>>
>> /M
>>
>> "Mr. Herr" <misterherr@freenet.de> writes:
>>
>>> Am 29.05.2013 00:43, schrieb Paolo Donadeo:
>>>> On Wed, May 29, 2013 at 12:17 AM, Mr. Herr <misterherr@freenet.de
>>>> <mailto:misterherr@freenet.de>> wrote:
>>>>
>>>>      I see, this is over and out. Very constructive.
>>>>
>>>>
>>>> Mr. Herr, sorry for the irony, so I'll be serious, as you wish.
>>>>
>>>> What kind of constructive comment can you realistically expect in reply to "Linux
>>>> is a server"?
>>>>
>>>> Linux is an operating system, not a "server", nor a "service". I spend 99% of my
>>>> programming time on a Linux box since 20 years, and the only services running here
>>>> are the system services like CUPS. The choice of OPAM's designers to install
>>>> everything in the user home directory has been explained by Anil very clearly.
>>>>
>>>> I only add that I always installed GODI in ~/.godi rather than in /opt .
>>>>
>>>> Your comment was inaccurate, so my reply is ironical, but not harsh.
>>>>
>>>>
>>> Indeed "Linux is a server" is not well said.
>>>
>>> I meant to say "Linux is a multiuser system" and it has always been, so one can
>>> reasonably expect software installation to deal with it with ease.
>>>
>>> There are certainly advantages in the ~/.opam design decision, but I have yet to find
>>> out how to roll out my ~/.opam libraries for production.
>>>
>>> And very true, I was not prepared for irony on this point.
>>>
>>> /Str.
>
>

