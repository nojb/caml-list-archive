Return-Path: <oliver@first.in-berlin.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 118077EE51
	for <caml-list@sympa.inria.fr>; Sat, 25 May 2013 14:04:58 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=pra;
  client-ip=192.109.42.8;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=mailfrom;
  client-ip=192.109.42.8;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@einhorn.in-berlin.de) identity=helo;
  client-ip=192.109.42.8;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="postmaster@einhorn.in-berlin.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApwCAPinoFHAbSoIlGdsb2JhbABahnO5VYUngQYWDgEBAQEJCwkJFAQkgiMBAQUjBFIQCwkPAgIFIQICDwUYMYggBKo9kVQWgRCNdweCQTJhA48HiDOUUg
X-IPAS-Result: ApwCAPinoFHAbSoIlGdsb2JhbABahnO5VYUngQYWDgEBAQEJCwkJFAQkgiMBAQUjBFIQCwkPAgIFIQICDwUYMYggBKo9kVQWgRCNdweCQTJhA48HiDOUUg
X-IronPort-AV: E=Sophos;i="4.87,740,1363129200"; 
   d="scan'208";a="18952326"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 25 May 2013 14:04:57 +0200
X-Envelope-From: oliver@first.in-berlin.de
Received: from first (e178019102.adsl.alicedsl.de [85.178.19.102])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id r4PC4u2L021595
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT);
	Sat, 25 May 2013 14:04:56 +0200
Received: by first (Postfix, from userid 1000)
	id 13641154066B; Sat, 25 May 2013 14:04:55 +0200 (CEST)
Date: Sat, 25 May 2013 14:04:56 +0200
From: oliver <oliver@first.in-berlin.de>
To: Gabriel Scherer <gabriel.scherer@gmail.com>
Cc: Wojciech Meyer <wojciech.meyer@gmail.com>,
        Siraaj Khandkar <siraaj@khandkar.net>,
        Arnaud Spiwack <Arnaud.Spiwack@lix.polytechnique.fr>,
        OCaML Mailing List <caml-list@inria.fr>
Message-ID: <20130525120455.GF1947@siouxsie>
References: <20130523235355.GI6510@siouxsie>
 <CAMoPVjfGuxm4KPHsS7D9n-zd31XYjL6N_uDDZMWN3R1M4jwJZQ@mail.gmail.com>
 <20130524233015.GE1923@siouxsie>
 <37A1A2D3-5993-4675-9937-ED3965793D1D@khandkar.net>
 <20130525004045.GH1923@siouxsie>
 <wf7ginzlng.fsf@gmail.com>
 <20130525110457.GA1947@siouxsie>
 <CAPFanBFxeoCgc-eWYGpat_1JFVsqhCXK-PZRgWnJ2K7r5sDRCg@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <CAPFanBFxeoCgc-eWYGpat_1JFVsqhCXK-PZRgWnJ2K7r5sDRCg@mail.gmail.com>
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
Subject: Re: [Caml-list] OCaml's variables

Hi,

On Sat, May 25, 2013 at 01:49:46PM +0200, Gabriel Scherer wrote:
> The name "variable" has been used for centuries by the mathematicians
> to denote exactly names that refer to values (of course immutable
> values, we're talking about mathematical objects her). There is no
> point in trying to change it because some people conflate this notion
> with mutability.

Hmhhh.
"Some" people? As far as I remember, I heard these arguments quite often.


> 
> (When you write (x + 1), the value denoted by "x" is an unknown that
> depends on the context/environment; in particular it may vary when
> used in different contexts.)
> 
> The name "variable" is also used in the expression "type variable",
> which denotes for example the 'a in
>   val id : 'a -> 'a
> and which is clearly not associated to any form of mutation.
[...]

Hmhhh, and what about imperative languages?
What part did they broke?
And why did they "misuse" the word "variable" and in which way?

Is it because of mutability, which may break all these
used "mathematical metaphors"?

Can you elaborate on why "variables" are the wrong term or a 2bad" term
in imperative languages and not in functional languages?

The picture is not completely clear, where the imperative approach did it wrong.

Ciao,
   Oliver
