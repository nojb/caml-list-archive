Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 7DDCABC29
	for <caml-list@yquem.inria.fr>; Sat,  6 Nov 2004 17:53:28 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iA6GrRSb000537
	for <caml-list@yquem.inria.fr>; Sat, 6 Nov 2004 17:53:28 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA16078 for <caml-list@pauillac.inria.fr>; Sat, 6 Nov 2004 17:53:27 +0100 (MET)
Received: from mail.davidb.org (adsl-64-172-240-129.dsl.sndg02.pacbell.net [64.172.240.129])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iA6GrPRR000527
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Sat, 6 Nov 2004 17:53:27 +0100
Received: from davidb by mail.davidb.org with local (Exim 4.42 #1 (Debian))
	id 1CQToZ-0003LT-QW; Sat, 06 Nov 2004 08:53:23 -0800
Date: Sat, 6 Nov 2004 08:53:23 -0800
From: David Brown <caml-list@davidb.org>
To: Xavier Leroy <Xavier.Leroy@inria.fr>
Cc: Aaron Bohannon <bohannon@seas.upenn.edu>, caml-list@inria.fr
Subject: Re: [Caml-list] native code and ZINC machine
Message-ID: <20041106165323.GA12633@old.davidb.org>
References: <418B8D56.5010109@seas.upenn.edu> <20041106093748.GA26835@yquem.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20041106093748.GA26835@yquem.inria.fr>
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde with ID 418D0187.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 418D0185.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 caml-list:01 wrote:01 ocaml:01 curried:01 model:01 stack:01 model:01 compiler:01 arity:01 functions:01 native:02 native:02 parameters:02 parameters:02 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.0
X-Spam-Level: 

On Sat, Nov 06, 2004 at 10:37:48AM +0100, Xavier Leroy wrote:

> The ZINC / OCaml VM handling of curried function application (an
> instance of the push-enter model) pretty much requires that parameters
> are passed on a stack.  For native code generation, it is much more
> efficient to pass the first N parameters in processor registers.  This
> doesn't fit the ZINC model at all.

Just out of curiosity, what model does the native compiler use when
evaluating functions of unknown arity (List.map for example).

Dave

