Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 6AF96BB81
	for <caml-list@yquem.inria.fr>; Thu, 11 Nov 2004 11:48:52 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iABAmpAr009767
	for <caml-list@yquem.inria.fr>; Thu, 11 Nov 2004 11:48:52 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA07619 for <caml-list@pauillac.inria.fr>; Thu, 11 Nov 2004 11:48:51 +0100 (MET)
Received: from paris.dvs1.informatik.tu-darmstadt.de (paris.dvs1.informatik.tu-darmstadt.de [130.83.166.129])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iABAmoa7029700
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Thu, 11 Nov 2004 11:48:51 +0100
Received: by paris.dvs1.informatik.tu-darmstadt.de (Postfix, from userid 11060)
	id 7D6384EB67; Thu, 11 Nov 2004 11:48:50 +0100 (CET)
Date: Thu, 11 Nov 2004 11:48:49 +0100
From: "Wesley W. Terpstra" <terpstra@gkec.tu-darmstadt.de>
To: caml-list@inria.fr
Subject: Patch: kill() undex win32
Message-ID: <20041111104847.GA5087@muffin>
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary="+HP7ph2BbKc20aGI"
Content-Disposition: inline
User-Agent: Mutt/1.5.6+20040722i
X-Miltered: at concorde with ID 41934393.004 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 41934392.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; tu-darmstadt:01 ocaml:01 terminate:01 msdn:01 ocaml:01 msdn:01 otherlibs:01 makefile:01 otherlibs:01 makefile:01 mkdir:01 sendrecv:01 sockopt:01 unixsupport:01 windir:01 
X-Attachments: name="ocaml-win32-terminate.patch" 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 


--+HP7ph2BbKc20aGI
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline

Good evening.

I think it would be useful if the win32 version of ocaml could at least
terminate child processes. I am not a windows expert at all, and I do not
own VC++ so I cannot test this patch (is there a free licence for it?).

However, from reading the MSDN [1] it seems that to kill a process, the
method to use is TerminateProcess and has been present since Win95. The
attached patch adds to ocaml-3.08.1 a simple version of kill which
terminates a process.

Could someone who has VC++ verify if it works?
Do others think that this functionality would be useful?
Could something like this be present in the next version of OCaml?

Thanks!

[1] http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dllproc/base/terminateprocess.asp

-- 
Wesley W. Terpstra

--+HP7ph2BbKc20aGI
Content-Type: text/plain; charset=us-ascii
Content-Disposition: attachment; filename="ocaml-win32-terminate.patch"

diff -uN otherlibs/win32unix.orig/Makefile.nt otherlibs/win32unix/Makefile.nt
--- otherlibs/win32unix.orig/Makefile.nt	2004-05-30 10:17:06.000000000 +0200
+++ otherlibs/win32unix/Makefile.nt	2004-11-11 11:34:58.000000000 +0100
@@ -30,7 +30,7 @@
   mkdir.c open.c pipe.c read.c rename.c \
   select.c sendrecv.c \
   shutdown.c sleep.c socket.c sockopt.c startup.c stat.c \
-  system.c unixsupport.c windir.c winwait.c write.c
+  system.c unixsupport.c windir.c winwait.c winkill.c write.c
 
 # Files from the ../unix directory
 UNIX_FILES = access.c addrofstr.c chdir.c chmod.c cst2constr.c \
diff -uN otherlibs/win32unix.orig/unix.ml otherlibs/win32unix/unix.ml
--- otherlibs/win32unix.orig/unix.ml	2004-06-22 19:18:50.000000000 +0200
+++ otherlibs/win32unix/unix.ml	2004-11-11 11:40:45.000000000 +0100
@@ -385,7 +385,8 @@
   | F_TRLOCK
 
 external lockf : file_descr -> lock_command -> int -> unit = "unix_lockf"
-let kill pid signo = invalid_arg "Unix.kill not implemented"
+external kill : int -> int -> unit = "win_killpid"
+
 type sigprocmask_command = SIG_SETMASK | SIG_BLOCK | SIG_UNBLOCK
 let sigprocmask cmd sigs = invalid_arg "Unix.sigprocmask not implemented"
 let sigpending () = invalid_arg "Unix.sigpending not implemented"
diff -uN otherlibs/win32unix.orig/winkill.c otherlibs/win32unix/winkill.c
--- otherlibs/win32unix.orig/winkill.c	1970-01-01 01:00:00.000000000 +0100
+++ otherlibs/win32unix/winkill.c	2004-11-11 11:33:50.000000000 +0100
@@ -0,0 +1,33 @@
+/***********************************************************************/
+/*                                                                     */
+/*                           Objective Caml                            */
+/*                                                                     */
+/*   Pascal Cuoq and Xavier Leroy, projet Cristal, INRIA Rocquencourt  */
+/*                                                                     */
+/*  Copyright 1996 Institut National de Recherche en Informatique et   */
+/*  en Automatique.  All rights reserved.  This file is distributed    */
+/*  under the terms of the GNU Library General Public License, with    */
+/*  the special exception on linking described in file ../../LICENSE.  */
+/*                                                                     */
+/***********************************************************************/
+
+/* $Id: winwait.c,v 1.14 2002/06/07 09:49:41 xleroy Exp $ */
+
+#include <windows.h>
+#include <mlvalues.h>
+#include <alloc.h>
+#include <memory.h>
+#include "unixsupport.h"
+#include <sys/types.h>
+
+CAMLprim value win_killpid(value sig, value vpid_req)
+{
+  /* we ignore the passed signal */
+  HANDLE pid_req = (HANDLE) Long_val(vpid_req);
+
+  if (! TerminateProcess(pid_req, 0x80)) {
+    win32_maperr(GetLastError());
+    uerror("killpid", Nothing);
+  }
+  return Val_unit;
+}

--+HP7ph2BbKc20aGI--

