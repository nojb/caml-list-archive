Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id C0CAABB81
	for <caml-list@yquem.inria.fr>; Thu, 11 Nov 2004 13:28:49 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iABCSnV7022408
	for <caml-list@yquem.inria.fr>; Thu, 11 Nov 2004 13:28:49 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA10554 for <caml-list@pauillac.inria.fr>; Thu, 11 Nov 2004 13:28:49 +0100 (MET)
Received: from mta1.cl.cam.ac.uk (mta1.cl.cam.ac.uk [128.232.0.15])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iABCSmIR007378
	for <caml-list@inria.fr>; Thu, 11 Nov 2004 13:28:48 +0100
Received: from zonule.cl.cam.ac.uk
	([128.232.9.23] helo=cl.cam.ac.uk ident=[62ryl8kSnckXvHt4CXJXy2yq/bFwuTUC])
	by mta1.cl.cam.ac.uk with esmtp (Exim 3.092 #1)
	id 1CSE4C-00045B-00; Thu, 11 Nov 2004 12:28:44 +0000
X-Mailer: exmh version 2.6.3-CL 04/04/2003 with nmh-1.0.4
X-Exmh-Isig-CompType: repl
X-Exmh-Isig-Folder: cslists/caml
To: Luca Pascali <pasckosky2000@yahoo.it>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Native executable symtable 
In-reply-to: Your message of "Thu, 11 Nov 2004 13:09:32 +0100."
             <4193567C.1040905@yahoo.it> 
Mime-Version: 1.0
Content-Type: text/plain
Date: Thu, 11 Nov 2004 12:28:44 +0000
From: Keith Wansbrough <Keith.Wansbrough@cl.cam.ac.uk>
Message-Id: <E1CSE4C-00045B-00@mta1.cl.cam.ac.uk>
X-Miltered: at concorde with ID 41935B01.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 41935B00.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 symtable:01 wrote:01 wrote:01 ...:98 natively:01 supported:01 native:02 string:03 module:03 module:03 executable:03 executable:03 elf:03 luca:04 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

Luca Pascali wrote:

> Keith Wansbrough wrote:
[..]
> >The brute-force way is to make sure that you know one of the values in
> >the table (the CRC of an unchanging module, say), and then just scan
> >through the executable searching for that value as a bit-pattern.
[..]
> Ok. Sounds fine.
> But for the application we thought is not applicable.
[..]
> So we do not know those values, and we cannot search for them in the file.

Make sure there is a value you do know.  For example, write a module 
containing just a big string.  Require that it is always included in 
any executable supported by your system.  Compute its CRC.  Now you 
have a starting-point for searching.

> It will be more useful for us to know where to find those values in the 
> natively compiled file and if this solution is cross platform or not.

No solution will be completely cross-platform; different platforms
have different executable formats.  But if you support say ELF and PE
(COFF), you'll cover a lot of platforms...

--KW 8-)


