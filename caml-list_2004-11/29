Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 384ADBC29
	for <caml-list@yquem.inria.fr>; Thu,  4 Nov 2004 21:40:39 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iA4KecKK032543
	for <caml-list@yquem.inria.fr>; Thu, 4 Nov 2004 21:40:38 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA00400 for <caml-list@pauillac.inria.fr>; Thu, 4 Nov 2004 21:40:38 +0100 (MET)
Received: from mail.physik.uni-muenchen.de (mail.physik.uni-muenchen.de [192.54.42.129])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iA4KebDW023757
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Thu, 4 Nov 2004 21:40:38 +0100
Received: from localhost (unknown [127.0.0.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id 9975320066;
	Thu,  4 Nov 2004 21:40:37 +0100 (CET)
Received: from mail.physik.uni-muenchen.de ([127.0.0.1])
 by localhost (mail.physik.uni-muenchen.de [127.0.0.1]) (amavisd-new, port 10024)
 with LMTP id 06364-01-92; Thu,  4 Nov 2004 21:40:35 +0100 (CET)
Received: from mailhost.cip.physik.uni-muenchen.de (kaiser.cip.physik.uni-muenchen.de [141.84.136.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id E4CF920040;
	Thu,  4 Nov 2004 21:40:35 +0100 (CET)
Received: from eiger.cip.physik.uni-muenchen.de (eiger.cip.physik.uni-muenchen.de [141.84.136.54])
	by mailhost.cip.physik.uni-muenchen.de (Postfix) with ESMTP
	id D60D526E89; Thu,  4 Nov 2004 21:40:35 +0100 (CET)
Received: by eiger.cip.physik.uni-muenchen.de (Postfix, from userid 3092)
	id DD9833EBA; Thu,  4 Nov 2004 21:40:35 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by eiger.cip.physik.uni-muenchen.de (Postfix) with ESMTP
	id DB4CC2D885; Thu,  4 Nov 2004 21:40:35 +0100 (CET)
Date: Thu, 4 Nov 2004 21:40:35 +0100 (CET)
From: Thomas Fischbacher <Thomas.Fischbacher@Physik.Uni-Muenchen.DE>
To: John Prevost <j.prevost@gmail.com>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Arg parsing
In-Reply-To: <d849ad2a041104072810753c71@mail.gmail.com>
Message-ID: <Pine.LNX.4.58.0411042138450.3293@eiger.cip.physik.uni-muenchen.de>
References: <Pine.LNX.4.58.0410262153470.18883@eiger.cip.physik.uni-muenchen.de>
  <20041026201338.GA29858@force.stwing.upenn.edu> 
 <Pine.LNX.4.58.0410272015430.20206@eiger.cip.physik.uni-muenchen.de> 
 <d849ad2a04102715138f2f1e4@mail.gmail.com> 
 <Pine.LNX.4.58.0410281443300.10402@eiger.cip.physik.uni-muenchen.de> 
 <d849ad2a04102807567237a975@mail.gmail.com> 
 <Pine.LNX.4.58.0411041541060.12372@eiger.cip.physik.uni-muenchen.de>
 <d849ad2a041104072810753c71@mail.gmail.com>
X-BOFH: Daemons did it
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: by amavisd-new at physik.uni-muenchen.de
X-Miltered: at concorde with ID 418A93C6.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 418A93C5.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 parsing:01 prevost:01 wrote:01 parsing:01 struct:01 argv:01 ocaml:01 ...:98 cip:98 cip:98 lambda:01 lambda:01 precisely:01 argument:01 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 


On Thu, 4 Nov 2004, John Prevost wrote:

> Perhaps if you explained why you want to do this, it would be easier
> for us to help you.  For example, if you're using #use to test out
> argument parsing code, perhaps this could help you:
> 
> module Sys =
>   struct
>     include Sys
>     let argv = [| "testprogram"; "my"; "arguments"; "for"; "testing" |]
>   end
> 
> Other than that, I'm having a *really* hard time figuring out why you
> would want to examine your command line arguments from an interactive
> program.

That's precisely what I want to do. And I do not see why I should have to 
bend over backwards and write such extra code for a task as simple as that 
which could be easily resolved by just making the ocaml interpreter accept 
a '--' arg properly...

-- 
regards,               tf@cip.physik.uni-muenchen.de              (o_
 Thomas Fischbacher -  http://www.cip.physik.uni-muenchen.de/~tf  //\
(lambda (n) ((lambda (p q r) (p p q r)) (lambda (g x y)           V_/_
(if (= x 0) y (g g (- x 1) (* x y)))) n 1))                  (Debian GNU)

