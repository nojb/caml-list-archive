Return-Path: <skaller@users.sourceforge.net>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 13420BC2F
	for <caml-list@yquem.inria.fr>; Thu, 25 Nov 2004 16:53:41 +0100 (CET)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iAPFrcAA021771
	for <caml-list@yquem.inria.fr>; Thu, 25 Nov 2004 16:53:40 +0100
Received: from [192.168.1.200] (ppp217-171.lns1.syd3.internode.on.net [203.122.217.171])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id iAPFrW4Y068786;
	Fri, 26 Nov 2004 02:23:33 +1030 (CST)
Subject: Re: [Caml-list] Objective Caml release 3.08.2
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: =?ISO-8859-1?Q?Fr=E9d=E9ric?= Gava <frederic.gava@wanadoo.fr>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <004f01c4d2fd$b87d6140$b18780d9@mshome.net>
References: <75E02BC8-3EEA-11D9-A6E2-00039310CAE8@inria.fr>
	 <004f01c4d2fd$b87d6140$b18780d9@mshome.net>
Content-Type: text/plain; charset=UTF-8
Organization: 
Message-Id: <1101398012.9291.48.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 26 Nov 2004 02:53:32 +1100
Content-Transfer-Encoding: 8bit
X-Miltered: at concorde with ID 41A60002.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 sourceforge:01 gava:01 wrote:01 stdlib:01 associative:01 elt:01 elt:01 iter:01 bug:01 glebe:01 ric:98 deliberate:98 061:98 nsw:01 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

On Fri, 2004-11-26 at 01:47, Frédéric Gava wrote:

> 
> > - stdlib: wrong order in Set.fold (PR#3161)
> 
> Why an order for the fold operator ?

Because Set.t is an ordered container,
and order matters for folds if the operator being folded
isn't associative.

These functions are deterministic and depend on order:

Set.min_elt, Set.max_elt, Set.elements, Set.fold, Set.iter

Set.choose, however, chooses at random, and Set.for_all
doesn't appear to be ordered either (is that a bug
in the doc or deliberate?)

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



