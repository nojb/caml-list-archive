Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 09016BC29
	for <caml-list@yquem.inria.fr>; Sat,  6 Nov 2004 16:47:11 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iA6FlAv6002583
	for <caml-list@yquem.inria.fr>; Sat, 6 Nov 2004 16:47:10 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA14635 for <caml-list@pauillac.inria.fr>; Sat, 6 Nov 2004 16:47:10 +0100 (MET)
Received: from biscayne-one-station.mit.edu (BISCAYNE-ONE-STATION.MIT.EDU [18.7.7.80])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iA6Fl93N025115
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Sat, 6 Nov 2004 16:47:10 +0100
Received: from outgoing.mit.edu (OUTGOING-AUTH.MIT.EDU [18.7.22.103])
	by biscayne-one-station.mit.edu (8.12.4/8.9.2) with ESMTP id iA6Fl8JT020159
	for <caml-list@inria.fr>; Sat, 6 Nov 2004 10:47:08 -0500 (EST)
Received: from psi-phi.mit.edu (PSI-PHI.MIT.EDU [18.187.1.35])
	(authenticated bits=56)
        (User authenticated as jfc@ATHENA.MIT.EDU)
	by outgoing.mit.edu (8.12.4/8.12.4) with ESMTP id iA6Fl61V029130
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <caml-list@inria.fr>; Sat, 6 Nov 2004 10:47:07 -0500 (EST)
Received: (from jfc@localhost) by psi-phi.mit.edu (8.12.9)
	id iA6Fl6ga001951; Sat, 6 Nov 2004 10:47:06 -0500
Message-Id: <200411061547.iA6Fl6ga001951@psi-phi.mit.edu>
To: caml-list@inria.fr
Subject: Re: [Caml-list] 64-bit OCaml?
In-Reply-To: Your message of "Sat, 06 Nov 2004 11:06:30 +0100."
             <20041106100630.GB26835@yquem.inria.fr> 
Date: Sat, 06 Nov 2004 10:47:06 -0500
From: John Carr <jfc@MIT.EDU>
X-Scanned-By: MIMEDefang 2.42
X-Miltered: at nez-perce with ID 418CF1FE.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 418CF1FD.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 jfc:01 bignums:01 heap:01 aligned:01 slower:01 integer:01 floats:01 arithmetic:01 crypto:03 exploiting:07 accesses:07 edu:07 john:08 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 


> Also, the only situations where 64-bit code is beneficial are 1- large
> integer arithmetic (bignums, crypto), and 2- exploiting more than 4 Gb
> of RAM.

3 - some floating point intensive code if unaligned accesses are slow

On 32 bit machines heap values are only 32 bit aligned and loads and
stores of 64 bit floats may be slower due to misalignment.  The
performance impact varies by CPU.

