Return-Path: <frederic.gava@wanadoo.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id B8867BC2F
	for <caml-list@yquem.inria.fr>; Thu, 25 Nov 2004 15:46:30 +0100 (CET)
Received: from smtp10.wanadoo.fr (smtp10.wanadoo.fr [193.252.22.21])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iAPEkU9t023274
	for <caml-list@yquem.inria.fr>; Thu, 25 Nov 2004 15:46:30 +0100
Received: from me-wanadoo.net (unknown [127.0.0.1])
	by mwinf1001.wanadoo.fr (SMTP Server) with SMTP id 60B8D1800085;
	Thu, 25 Nov 2004 15:46:30 +0100 (CET)
Received: from nono (ARouen-106-1-35-177.w217-128.abo.wanadoo.fr [217.128.135.177])
	by mwinf1001.wanadoo.fr (SMTP Server) with SMTP id 0662E1800087;
	Thu, 25 Nov 2004 15:46:29 +0100 (CET)
Message-ID: <004f01c4d2fd$b87d6140$b18780d9@mshome.net>
From: =?iso-8859-1?Q?Fr=E9d=E9ric_Gava?= <frederic.gava@wanadoo.fr>
To: <caml-list@yquem.inria.fr>
Cc: "Damien Doligez" <damien.doligez@inria.fr>
References: <75E02BC8-3EEA-11D9-A6E2-00039310CAE8@inria.fr>
Subject: Re: [Caml-list] Objective Caml release 3.08.2
Date: Thu, 25 Nov 2004 15:47:42 +0100
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 8bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.50.4133.2400
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
X-Miltered: at nez-perce with ID 41A5F046.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; gava:01 gava:01 caml-list:01 damien:01 damien:01 caml-list:01 stdlib:01 async:01 unspecified:01 doligez:01 doligez:01 caml:02 caml:02 objective:02 objective:02 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=2.2 required=5.0 tests=DNS_FROM_RFC_ABUSE,
	DNS_FROM_RFC_POST,DNS_FROM_RFC_WHOIS autolearn=disabled version=3.0.0
X-Spam-Level: **

----- Original Message -----
From: "Damien Doligez" <damien.doligez@inria.fr>
To: "caml announce" <caml-announce@inria.fr>
Sent: Wednesday, November 24, 2004 2:06 PM
Subject: [Caml-list] Objective Caml release 3.08.2


> - stdlib: wrong order in Set.fold (PR#3161)

Why an order for the fold operator ? The fold operator is used in many
parallel applications and in these cases, the order is not specified (it is
done in parallel). Peraps add a new operator to the interface (scan ? or
async_fold ?) where the order is unspecified (another set's operators like
choose do not specified the order). In this case, it would be possible to
write a true parallel implementation of fold (every process "folds" a part
of the set and them they "fold" there tempory results) .

Frédéric Gava.


