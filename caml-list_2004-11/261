Return-Path: <K4ng@codefx.org>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id CF753BC51
	for <caml-list@yquem.inria.fr>; Mon, 29 Nov 2004 06:31:24 +0100 (CET)
Received: from postfix4-2.free.fr (postfix4-2.free.fr [213.228.0.176])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iAT5VO8q013232
	for <caml-list@yquem.inria.fr>; Mon, 29 Nov 2004 06:31:24 +0100
Received: from [10.22.2.3] (home.lemarsu.com [81.57.199.180])
	by postfix4-2.free.fr (Postfix) with ESMTP id 4D5E91C76DB
	for <caml-list@yquem.inria.fr>; Mon, 29 Nov 2004 06:31:23 +0100 (CET)
Message-ID: <41AAB3D0.7080700@codefx.org>
Date: Mon, 29 Nov 2004 06:29:52 +0100
From: Michel Pastor <K4ng@codefx.org>
User-Agent: Mozilla Thunderbird 0.8 (X11/20041124)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Initialize C library intarface
X-Enigmail-Version: 0.86.0.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 41AAB42C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 stubs:01 mlvalues:01 camlprim:01 stubs:01 camlprim:01 camlparam:01 camlreturn:01 argv:01 ocamlc:01 ocamlc:01 gcc:01 mli:01 ocamlmklib:01 -dllib:01 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

Hi,
I've a little problem with the initialization of my home made C
library binding for ocaml. Example:

***  BEGIN binding_stubs.c ***
#include <caml/mlvalues.h>

CAMLprim value   _binding_stubs_initialize(void) {
    /* intialization stuff */
}

CAMLprim value   _binding_stubs_dostuff(value data)
    CAMLparam1(data);
    /* do stuff with data */
    CAMLreturn(somevalue);
}
*** END binding_stubs.c ***

*** BEGIN binding.ml ***
external intialize : unit -> unit = "_binding_stubs_initialize";;
external dostuff : string -> sometype = "_binding_stubs_dostuff";;
let _ = initialize ();;
*** END binding.ml ***

*** BEGIN test.ml ***
open Binding;;
let _ = ignore (dostuff Sys.argv.(0));;
*** END test.ml ***

ocamlc -i binding.ml
ocamlc -c -cc gcc -ccopt '-fPIC -Wall' binding_stubs.c
ocamlc -c -w A binding.mli
ocamlc -c -w A binding.ml
ocamlmklib -o binding_stubs binding_stubs.o
ocamlc -a -dllib dllbinding_stubs.so -custom -cclib -lbinding_stubs -o 
binding.cma binding.cmo
ocamlopt -c -w A binding.ml
ocamlopt -a -cclib -lbinding_stubs -o binding.cmxa binding.cmx
ocamlc -o test -I . -I /sw/lib binding.cma test.ml
ocamlopt -o testx -I . -I /sw/lib binding.cmxa test.ml
ocamlmktop binding.cma -I . -o binding_caml

When I launch either the native or bytecode test application my 
initialization
code isn't executed but when I launch the ocaml top it is.
After some investigations I found that the initialization is executed in
the native and bytecode code only when I call a caml value from within
the binding module. My problem is that my binding is a pure C binding for
a C library so I don't have any "pure" caml value but only external 
declarations.
So I would know if it is possible to use a code similar to the example to
automatically call external C initialization in a pure "external" ocaml 
module
or if it is possible for that to be an ocaml bug.

thanks,
 - Michel

