Return-Path: <jmg@gaillourdet.net>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 1FEE0BC28
	for <caml-list@yquem.inria.fr>; Sun, 21 Nov 2004 18:52:56 +0100 (CET)
Received: from m14s26.vip-server.net (cray.gaillourdet.net [80.190.204.60])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iALHqt90018955
	for <caml-list@yquem.inria.fr>; Sun, 21 Nov 2004 18:52:55 +0100
Received: from dijkstra.gaillourdet.net (m14s26.vip-server.net [80.190.204.60])
	by m14s26.vip-server.net (Postfix) with ESMTP id 1342494BF8
	for <caml-list@yquem.inria.fr>; Sun, 21 Nov 2004 18:50:44 +0100 (CET)
From: Jean-Marie Gaillourdet <jmg@gaillourdet.net>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Native executable symtable
Date: Sun, 21 Nov 2004 21:42:29 +0100
User-Agent: KMail/1.7.1
References: <E1CSE4C-00045B-00@mta1.cl.cam.ac.uk> <Pine.LNX.4.61.0411202210230.1123@home.oyster.ru> <20041121155909.GA18549@annexia.org>
In-Reply-To: <20041121155909.GA18549@annexia.org>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200411212142.29950.jmg@gaillourdet.net>
X-Miltered: at nez-perce with ID 41A0D5F7.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 symtable:01 dynlink:01 bytecode:01 ocaml:01 ocaml:01 recompiled:01 compiler:01 runtime:01 byte:01 runtimes:01 sun's:01 native:02 native:02 caml:02 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.0
X-Spam-Level: 

Hi,

Am Sonntag, 21. November 2004 16:59 schrieb Richard Jones:
> It'd be very useful for mod_caml - mod_caml uses Dynlink to load the
> "scripts" and handlers, and hence is limited to bytecode.  Native code
> dynamic linking would come in useful.  I'd rather it was part of core
> OCaml, or available as a separate library which didn't require OCaml
> itself to be recompiled.

Actually, my impression of the ocaml development is, ocaml is going into the 
same direction as e.g. Java. They are developing a jit compiler to improve 
the performance of the interpreted environment. This is the direction of the 
future as it allows to adapt the native code at runtime, based upon live 
profiling results. We aren't there yet, but this is the direction industry 
and academic world are heading for. Just look at Microsoft's .NET and Sun's 
Java environemt and the huge number of academic papers talking about 
interesting issues with those environemnts. Therefore it might be the right 
time to stop about whining and lamenting the missing native ocaml shared 
library support and to start accepting byte code runtimes as appropriate even 
for performace critical applications. 

Regards,
  Jean-Marie Gaillourdet 

