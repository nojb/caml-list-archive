Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id A0DBDBC29
	for <caml-list@yquem.inria.fr>; Sat,  6 Nov 2004 11:06:32 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iA6A6W0c001027
	for <caml-list@yquem.inria.fr>; Sat, 6 Nov 2004 11:06:32 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA03265 for <caml-list@pauillac.inria.fr>; Sat, 6 Nov 2004 11:06:31 +0100 (MET)
Received: from yquem.inria.fr (yquem.inria.fr [128.93.8.37])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iA6A6U5a001018;
	Sat, 6 Nov 2004 11:06:30 +0100
Received: by yquem.inria.fr (Postfix, from userid 18180)
	id 52B1CBC29; Sat,  6 Nov 2004 11:06:30 +0100 (CET)
Date: Sat, 6 Nov 2004 11:06:30 +0100
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: David McClain <dmcclain1@mindspring.com>
Cc: caml <caml-list@inria.fr>
Subject: Re: [Caml-list] 64-bit OCaml?
Message-ID: <20041106100630.GB26835@yquem.inria.fr>
References: <00dd01c4c3b5$70525f80$0401000a@dylan>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <00dd01c4c3b5$70525f80$0401000a@dylan>
User-Agent: Mutt/1.3.28i
X-Miltered: at nez-perce with ID 418CA228.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 418CA226.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 rebuilding:01 ocaml:01 compiler:01 bytecoded:01 gcc:01 gcc:01 ocamlopt:01 powerpc:01 bignums:01 pointers:01 tier:98 config:01 compile:01 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

> I just obtained a new iMac G5 here. My cursory understanding is that this is
> a 64 bit core processor. However, when I attempted to run config for
> rebuilding the OCaml system, it reports a 32 bit system. What can or must I
> do to coax OCaml to become a 64 bit system for this processor?

As others have explained, the first thing you need is a 64-bit kernel
and a development environment (C compiler, linker, libraries) that
handles 64-bit code.  The next release of Mac OS X is rumored to offer
all this.

Once this is available, you should be able to compile the bytecoded
part of OCaml to 64-bit code using e.g. configure -cc "gcc -m64"
or whatever gcc options that select the generation of 64-bit apps.

However, ocamlopt will not work out of the box.  Some changes to the
asm code generator are required to produce 64-bit code.  In the case
of the PowerPC, the changes are relatively small.  Still, I can't
perform them until we have G5 machines at INRIA, which may take a while.
(Pretty much the only Apple hardware we buy are Powerbooks, and it's
unclear when G5 Powerbooks will be mainstream.)

Also, the only situations where 64-bit code is beneficial are 1- large
integer arithmetic (bignums, crypto), and 2- exploiting more than 4 Gb
of RAM.  In all other cases, 64-bit code is actually a waste,
since pointers occupy twice as much memory as with 32-bit code.

So, I expect 64-bit computing to take off when machines commonly have
4 Gb of RAM or more, which should take a few more years.  Caml will
have no problems adapting to this trend, since it's 64-bit clean from
the start.  (Caml Special Light, the ancestor of OCaml, was developed
circa 1995 on a 64-bit Alpha, then backported to 32-bit
architectures.)  I expect that at that time our "tier 1" architectures
will be x86-64 and PPC-64.

- Xavier Leroy

