Received: (from weis@localhost) by pauillac.inria.fr (8.6.10/8.6.6) id JAA08153 for caml-redistribution; Mon, 13 May 1996 09:54:55 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.6.10/8.6.6) with ESMTP id CAA03126 for <caml-list@pauillac.inria.fr>; Sat, 11 May 1996 02:17:03 +0200
Received: from wildtype.Stanford.EDU (wildtype.Stanford.EDU [171.65.22.207]) by concorde.inria.fr (8.7.1/8.7.1) with ESMTP id CAA07071 for <caml-list@pauillac.inria.fr>; Sat, 11 May 1996 02:16:43 +0200 (MET DST)
Received: (from arc@localhost) by wildtype.Stanford.EDU (8.7.5/8.7.1) id RAA24934 for caml-list@pauillac.inria.fr; Fri, 10 May 1996 17:16:38 -0700 (PDT)
Date: Fri, 10 May 1996 17:16:38 -0700 (PDT)
From: Andrew Conway <arc@wildtype.Stanford.EDU>
Message-Id: <199605110016.RAA24934@wildtype.Stanford.EDU>
To: caml-list@pauillac.inria.fr
Subject: O'Caml & modules
Sender: weis
Status: O



Thanks for O'caml. I haven't had a chance to try it yet,
but the type system looks both interesting and useful.

Remember a while back we were having a discussion on the merits
of allowing local module definitions? It appears to me that these
are very very similar to the constructor of an object.

Does this mean that the infrastructure necessary to add
local module definitions is already partially in place? If so,
it could be a useful addition (although arugably one could just
use an object instead of a module, but it is aesthetically unpleasing.

One might want, for instance, a module giving packed-n-bit
vectors, where n is a parameter to a multiply called
function. One would then use an object to refer to a specific
bit vector, using a function from the above mentioned module,
which may get a little messy.

Anyway, I just thought this would be a good idea to re-bring
up this thread.

Thanks again,

Andrew.




