Received: (from weis@localhost) by pauillac.inria.fr (8.6.10/8.6.6) id JAA08170 for caml-redistribution; Mon, 13 May 1996 09:56:28 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.6.10/8.6.6) with ESMTP id DAA03807 for <caml-list@pauillac.inria.fr>; Mon, 13 May 1996 03:06:36 +0200
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1]) by concorde.inria.fr (8.7.1/8.7.1) with ESMTP id DAA27063 for <caml-list@pauillac.inria.fr>; Mon, 13 May 1996 03:06:32 +0200 (MET DST)
Received: from cinnamon.kurims.kyoto-u.ac.jp (cinnamon.kurims.kyoto-u.ac.jp [130.54.16.38]) by kurims.kurims.kyoto-u.ac.jp (8.7.3/3.4W2) with SMTP id KAA23699 for <caml-list@pauillac.inria.fr>; Mon, 13 May 1996 10:06:23 +0900 (JST)
From: Jacques GARRIGUE <garrigue@kurims.kyoto-u.ac.jp>
Date: Mon, 13 May 96 10:06:23 JST
Message-Id: <9605130106.AA11092@cinnamon>
To: caml-list@pauillac.inria.fr
In-Reply-To: <9605101257.AA06291@gr6.u-strasbg.fr> (boos@gr6.u-strasbg.fr)
Subject: Upcoming O'Labl
Sender: weis
Status: O


O'Caml comes, so what is happening to Label Special Light ?

Question 1 (Christian Boos <boos@gr6.u-strasbg.fr>)

 > Another  one  is that the  very   interesting contribution of  Jacques
 > Garrigue   and  Jun P.  Furuse  (labeled  and   optional  arguments to
 > functions) hasn't  merged with the   mainstream. Will this happen  one
 > day, at least optionaly (sort of -withlabels option) ?

No idea, I'm not the one who decides. But this may take some time, as
the following explains.

Question 2 (myself)

	 Will labeled arguments be ported to O'Caml ?

Yes, I'm working on it and have already an alpha version. Must be
checked carefully since the source changed a lot. I hope I can release 
it this week.

It is even more than labeled and optional arguments, since there are
also new polymorphic variants. This should mix nicely with objects.

However there are a number of problems, which will certainly not be
solved in the first release. That is, objects are breaking the basic
assumption of labels and comptionals compiling: that the actual type
of a function is known when it is applied. This is no longer true with 
methods. This means that there will be restrictions on the use of
labels in method definitions :-(, otherwise integration should go
smoothly.

 > Anyway, Caml is still going better and better ... That's great !

True ! But I didn't think CSL would disappear so quickly !

	Jacques







