Return-Path: <Gregory.Lafitte@lif.univ-mrs.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id A0A06BB9A
	for <caml-list@yquem.inria.fr>; Fri, 28 Oct 2005 00:13:03 +0200 (CEST)
Received: from sMtp.neuf.fr (sp604002mt.neufgp.fr [84.96.92.61])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j9RMD3qM031160
	for <caml-list@yquem.inria.fr>; Fri, 28 Oct 2005 00:13:03 +0200
Received: from [192.168.0.2] ([84.102.33.173]) by sp604002mt.gpm.neuf.ld
 (Sun Java System Messaging Server 6.2-4.03 (built Sep 22 2005))
 with ESMTP id <0IP1008JZH7JR5N2@sp604002mt.gpm.neuf.ld> for
 caml-list@yquem.inria.fr; Fri, 28 Oct 2005 00:02:07 +0200 (CEST)
Date: Thu, 27 Oct 2005 23:59:27 +0200
From: Gregory Lafitte <Gregory.Lafitte@lif.univ-mrs.fr>
Subject: Re: [Caml-list] Compiling for Mac OS 64 bit?
To: Xavier.Leroy@inria.fr
Cc: caml-list@yquem.inria.fr
Message-id: <D0BC0BF7-96A4-481F-9B96-AB5B3DE36D6D@lif.univ-mrs.fr>
MIME-version: 1.0
X-Mailer: Apple Mail (2.734)
Content-type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Content-transfer-encoding: 7BIT
X-Miltered: at concorde with ID 436150EF.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 irisa:01 irisa:01 gcc:01 libc:01 caml-list:01 ocaml:01 ocamlopt:01 ocamlopt:01 ...:98 2005,:98 wrote:01 kernel:01 native:02 compiling:02 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=DNS_FROM_RFC_ABUSE,
	FORGED_RCVD_HELO autolearn=disabled version=3.0.3

If you don't have access to a G5 at INRIA (there seems to be some at  
IRISA, http://www.irisa.fr/paris/General/apple.htm),
I would be very happy to provide you with an account on a G5 machine  
with a ppc64 Linux
(64bit kernel, gcc, libc, ...).

Gregory Lafitte

In the caml-list, on October 27th 2005, Xavier Leroy wrote:

> I've been asked to research the use of Ocaml in high-performance
> computing applications on Mac OS X. I take this to mean (a) 64-bit
> applications (the client says so) and (b) compiled applications.
>

As you found out, ocamlopt currently cannot generate PPC64 code.
So, it's either bytecode-only in 64-bit mode, or native code in 32-bit
mode.

A PPC64 port of ocamlopt looks reasonably simple, but that will have
to wait until a Mac G5 lands here at INRIA.



