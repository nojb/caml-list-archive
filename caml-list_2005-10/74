Return-Path: <jtbryant@valdosta.edu>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 11F0CBB9A
	for <caml-list@yquem.inria.fr>; Thu,  6 Oct 2005 22:51:51 +0200 (CEST)
Received: from mailx.valdosta.edu (VO44360.valdosta.edu [168.18.130.251])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j96Kpnxt000368
	for <caml-list@yquem.inria.fr>; Thu, 6 Oct 2005 22:51:50 +0200
Received: from blazemail.valdosta.edu (blazemail.valdosta.edu [168.18.130.208])
	by mailx.valdosta.edu (8.13.4/8.13.4) with ESMTP id j96Kpm5r007620
	for <caml-list@yquem.inria.fr>; Thu, 6 Oct 2005 16:51:48 -0400 (EDT)
	(envelope-from jtbryant@valdosta.edu)
Received: from starlight.valdosta.edu (starlight.valdosta.edu [168.18.148.146])
 by blazemail.valdosta.edu
 (iPlanet Messaging Server 5.2 HotFix 2.04 (built Feb  8 2005))
 with ESMTP id <0INY003GSHYCRI@blazemail.valdosta.edu> for
 caml-list@yquem.inria.fr; Thu, 06 Oct 2005 16:51:48 -0400 (EDT)
Date: Thu, 06 Oct 2005 16:53:33 -0400
From: Jonathan Bryant <jtbryant@valdosta.edu>
Subject: Raw Sockets
To: caml-list@yquem.inria.fr
Message-id: <1128632013.24718.4.camel@starlight>
MIME-version: 1.0
X-Mailer: Ximian Evolution 1.4.5 (1.4.5-17)
Content-type: text/plain
Content-transfer-encoding: 7BIT
X-PMX-Version: 5.0.2.153301, Antispam-Engine: 2.0.3.2, Antispam-Data: 2005.10.6.24
X-Miltered: at concorde with ID 43458E65.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; sockets:01 ocaml:01 byte:01 ocaml:01 gotchas:01 sockets:01 structures:01 handles:03 library:03 written:06 anybody:07 edu:07 maybe:07 things:12 ethernet:12 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

Does anybody have any information on using SOCK_RAW in OCaml?  At this
level, things like byte ordering matter, so I would like to know if
OCaml handles this automatically or not, as well as any other gotchas
involved with using raw sockets in OCaml.  Also, are there any
structures for handling Ethernet/IP/TCP headers already written?  Maybe
in another library?  Or am I going to have to write these myself?

Thanks,
--Jonathan

