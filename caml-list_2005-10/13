Return-Path: <skaller@users.sourceforge.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id EA0F6BB94
	for <caml-list@yquem.inria.fr>; Mon,  3 Oct 2005 02:42:08 +0200 (CEST)
Received: from ash25e.internode.on.net (ash25e.internode.on.net [203.16.214.182])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j930g6eQ032259
	for <caml-list@yquem.inria.fr>; Mon, 3 Oct 2005 02:42:08 +0200
Received: from rosella (ppp16-174.lns2.syd7.internode.on.net [59.167.16.174])
	by ash25e.internode.on.net (8.12.9/8.12.6) with ESMTP id j930fxln086871;
	Mon, 3 Oct 2005 10:11:59 +0930 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: Ant:  Re: Ant:  Re: [Caml-list] Avoiding shared data
From: skaller <skaller@users.sourceforge.net>
To: Martin Chabr <martin_chabr@yahoo.de>
Cc: Pal-Kristian Engstad <pal_engstad@naughtydog.com>,
	caml-list@yquem.inria.fr
In-Reply-To: <20051001210520.64728.qmail@web26809.mail.ukl.yahoo.com>
References: <20051001210520.64728.qmail@web26809.mail.ukl.yahoo.com>
Content-Type: text/plain
Date: Mon, 03 Oct 2005 10:41:58 +1000
Message-Id: <1128300118.10449.136.camel@rosella>
Mime-Version: 1.0
X-Mailer: Evolution 2.2.1.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 43407E5E.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 avoiding:01 recursive:01 stack:01 compilers:01 wrote:01 sourceforge:01 tail:01 data:02 functional:02 functional:02 cps:02 pal-kristian:03 optimization:03 overflow:04 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Sat, 2005-10-01 at 23:05 +0200, Martin Chabr wrote:
> Hello Pal-Kristian,
> 
> I agree with you that functional code written in a
> tail recursive style is hard to read. Sometimes you
> have to do it that way if you want to avoid a stack
> overflow.
> 
> I hope that one day functional language compilers will
> do that optimization for you - convert a
> non-tail-recursive code into a tail-recursive one. Do
> you know of some progress in that direction?

Isn't that just CPS? 

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

