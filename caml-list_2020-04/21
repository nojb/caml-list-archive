Return-Path: <SRS0=+s2f=56=polytechnique.org=alan.schmitt@bounces.m4x.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 584CA7F42C
	for <caml-list@sympa.inria.fr>; Tue, 14 Apr 2020 09:28:15 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=Pass smtp.pra=alan.schmitt@polytechnique.org; spf=Pass smtp.mailfrom=SRS0=+s2f=56=polytechnique.org=alan.schmitt@bounces.m4x.org; spf=Pass smtp.helo=postmaster@mx1.polytechnique.org
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  alan.schmitt@polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=pra; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=+s2f=56=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="alan.schmitt@polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  SRS0=+s2f=56=polytechnique.org=alan.schmitt@bounces.m4x.org
  designates 129.104.30.34 as permitted sender)
  identity=mailfrom; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=+s2f=56=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="SRS0=+s2f=56=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  postmaster@mx1.polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=helo; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=+s2f=56=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="postmaster@mx1.polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
IronPort-PHdr: =?us-ascii?q?9a23=3A5rVvJxx8bcwYX53XCy+O+j09IxM/srCxBDY+r6Qd?=
 =?us-ascii?q?0ewQIJqq85mqBkHD//Il1AaPBtqLra8cw8Pt8IneGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2K3zUvHyp7DQWF13gMhB5?=
 =?us-ascii?q?Pay1QdaT3IyL0LX4/4LVKU0cgCW7SbdtKlOwoBmH8oFcipRkYO55nhDWpFNMev?=
 =?us-ascii?q?9K3iVpKUOXm1D7/MjmuNZo+iFU/vYg7NJoUKPgfq1+Q6YcRD8hNngd4MzwqQKF?=
 =?us-ascii?q?ShGF52cVVmsRglxFHlvr9hb/C771uy2yjeF93SiGIYWiRLQ9X3K55KduSQP0oD?=
 =?us-ascii?q?8AMy8l/WrXjM1pka8dpwiu8U8si7XIaZ2YYaItNpjWeskXEDEZB5oDZ2l6Goq5?=
 =?us-ascii?q?KrA3Ia8ZJ+8B/tvloF8fsRa1BQ+tHf7ijDhSiS2vhPBo46EaCQjDmTcYMZcOvX?=
 =?us-ascii?q?DT9o6nMbdLF/iyyLjUwD7DafJPxDq775LHIEl48KO8GIloeM+U8nEBUgbMj1Ge?=
 =?us-ascii?q?s4vgZmzH3OMQtWOW9KxlCfLpjHQo+Vh8?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AhAwBcZZVehyIeaIFmHAEBAQEBBwEBE?=
 =?us-ascii?q?QEEBAEBgXuBJYFwVTIqhByJAoV8hR+FKpEtgRADXgEDAQwYAQ4FAQIEAQGGVx0?=
 =?us-ascii?q?GAQUzEwIQAQEFAQEBAgECAwQBEwEBAQoLCQgphV0MgjsFAwQZC4MNASEEBmUjA?=
 =?us-ascii?q?xQHAwIRARcBFAoXARIagwwBgnwEAQqRYZpPgSp/M4Q4AQMDgQ+DN4FADQITfxe?=
 =?us-ascii?q?FJIZrJg+BTD+DI1Bsgk4OCwEBAQEBgSMdAQERgyEXgkcEjh4kAgGIf4gWkQJ7B?=
 =?us-ascii?q?4JFfQSGC3KJXYYSglOBBYdBjDSEXCGPMocYghqFRIplgxeBPyqBeTMaMIMsCV8?=
 =?us-ascii?q?NmhsXg1CEWTuFQz8zAgEBgR4BAQUTCwGLY1qBaQEB?=
X-IPAS-Result: =?us-ascii?q?A0AhAwBcZZVehyIeaIFmHAEBAQEBBwEBEQEEBAEBgXuBJYF?=
 =?us-ascii?q?wVTIqhByJAoV8hR+FKpEtgRADXgEDAQwYAQ4FAQIEAQGGVx0GAQUzEwIQAQEFA?=
 =?us-ascii?q?QEBAgECAwQBEwEBAQoLCQgphV0MgjsFAwQZC4MNASEEBmUjAxQHAwIRARcBFAo?=
 =?us-ascii?q?XARIagwwBgnwEAQqRYZpPgSp/M4Q4AQMDgQ+DN4FADQITfxeFJIZrJg+BTD+DI?=
 =?us-ascii?q?1Bsgk4OCwEBAQEBgSMdAQERgyEXgkcEjh4kAgGIf4gWkQJ7B4JFfQSGC3KJXYY?=
 =?us-ascii?q?SglOBBYdBjDSEXCGPMocYghqFRIplgxeBPyqBeTMaMIMsCV8NmhsXg1CEWTuFQ?=
 =?us-ascii?q?z8zAgEBgR4BAQUTCwGLY1qBaQEB?=
X-IronPort-AV: E=Sophos;i="5.72,381,1580770800"; 
   d="scan'208,217";a="345807389"
X-MGA-submission: =?us-ascii?q?MDEmKVFyW0oPtUgeaDEs1RRSgXBAjrJTUYZ7Rq?=
 =?us-ascii?q?nyN5bFIVodZS+5vKmdFT+NbHHz6lJC75JAAcLdfT2fCX8HALt3FxUtGq?=
 =?us-ascii?q?08iLISvPpOSAyez44IatpF/8I757h95R4NKbGmvj/ETLWiw0a01iVeo7?=
 =?us-ascii?q?Cacj1ie1UjSLWXdR6XdlN5gg=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Apr 2020 09:28:13 +0200
Received: from set (cbg35-2-78-242-14-140.fbx.proxad.net [78.242.14.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id 5E44556492E;
	Tue, 14 Apr 2020 09:28:11 +0200 (CEST)
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr, comp@lists.orbitalfox.eu
Date: Tue, 14 Apr 2020 09:28:10 +0200
Message-ID: <878siy1q7p.fsf@polytechnique.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Apr 14 09:28:11 2020 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000000, queueID=D4F6E56492F
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Hello

Here is the latest OCaml Weekly News, for the week of April 07 to 14,
2020.

Table of Contents
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

Announcing dune-deps: produces a project-centric dependency graph
OCamlformat 0.14.0
Dune 2.5.0
Old CWN


Announcing dune-deps: produces a project-centric dependency graph
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/announcing-dune-deps-produces-a-project-cent=
ric-dependency-graph/5451/3>


Martin Jambon announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Since the original announcement, I received some good feedback from
  users working on large projects. Thank you!

  The latest version released today is 1.2.0. It is already available on
  opam-repository (thank you @kit-ty-kate). The changes since the
  original release, besides bug fixes, include:

  =E2=80=A2 Ability to select or ignore dune files and folders to scan. For
    example, `dune-deps foo bar -x bar/test' uses all the dune files
    found in folders `foo' and `bar' but will ignore `bar/test'. This is
    useful for ignoring uninteresting parts of the project and for
    ignoring parse errors (see bug [#4]).
  =E2=80=A2 Executable name disambiguation. For example, private executable=
s of
    the same name like `foo/main' and `bar/baz/main' are now rendered as
    `main<foo>' and `main<baz>' respectively instead of just `main'.
  =E2=80=A2 Optional exclusion of all executables or all external libraries=
 with
    `--no-exe' and `--no-ext'.
  =E2=80=A2 Ability to show only the dependencies and/or the reverse
    dependencies of selected libraries. See below.

  Whole-project graphs for large projects tend to be unreadable. To deal
  with that, I added support for an "hourglass view" (=E2=8C=9B) option for
  showing only the dependencies and reverse dependencies of a component
  of interest.

  The following is obtained with `-h opam-client' on the opam project:

  <https://aws1.discourse-cdn.com/standard11/uploads/ocaml/original/2X/6/66=
098faac9fd6681e3c0f4fe357aef8ff34bcaf2.png>

  Please [let us know] if this works for your favorite projects! The
  source code of dune-deps makes it somewhat easier now to experiment
  with new strategies for eliminating nodes. See the `Filter' and
  `Filterable' modules.

  Check out `dune-deps --help' for detailed documentation on the
  options.


[#4] <https://github.com/mjambon/dune-deps/issues/4>

[let us know] <https://github.com/mjambon/dune-deps/issues>


Sean Grove said and Martin Jambon replied
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

        That=E2=80=99s a nice idea - it=E2=80=99d be great to have this ava=
ilable
        as a GitHub action so anyone could do this with just a
        click or two!

  So, I made a [generic yaml workflow] that people can stick into their
  git/github project. This will automatically maintain the dependency
  graph `.deps/deps.png' which can be included in a readme.


[generic yaml workflow] <https://github.com/mjambon/dune-deps-action>


OCamlformat 0.14.0
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ann-ocamlformat-0-14-0/5435/21>


Etienne Millon announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  As described in this thread, ocamlformat 0.14.0 introduced a new
  algorithm to determine how documentation comments are placed. We
  underestimated the impact of making this the default, and this means
  that many unwanted diffs were present for 0.13.0 -> 0.14.0 upgrades.

  We are going to prepare a 0.14.1 release next week reverting this
  behavior back to the 0.13.0 defaults. Users still on 0.13.0 are
  encouraged to wait for this and upgrade directly to 0.14.1.

  Sorry for the inconvenience, and thanks for the feedback!


Dune 2.5.0
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ann-dune-2-5-0/5494/1>


Rudi Grinberg announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  The dune team is pleased to announce the release of dune 2.5.0. This
  release has been brewing for a while and contains a few interesting
  features. I'll highlight some of the bigger ones:

  =E2=80=A2 The coq support has been thoroughly extended. There's now suppo=
rt
    for both composition of coq libraries in the same workspace and
    extraction of coq code to OCaml.

  =E2=80=A2 There's a new `$ dune upgrade' subcommand to help you upgrade d=
une
    files from 1.x to 2.x

  =E2=80=A2 `$ dune utop' will now load ppx preprocessors to the toplevel. =
Ppx
    authors might enjoy this style of interactive development.

  =E2=80=A2 There's a new `(subdir ..)' stanza that can be used to evaluate
    stanzas in sub directories. This makes it possible to have a single
    dune file for an entire project (generated or not).

  I'd like to thank everyone who contributed to dune 2.5.0. Your help is
  greatly appreciated.

  Here's the full change log:


2.5.0 (09/04/2020)
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C

  =E2=80=A2 Add a `--release' option meaning the same as `-p' but without t=
he
    package filtering. This is useful for custom `dune' invocation in
    opam files where we don't want `-p' (#3260, @diml)

  =E2=80=A2 Fix a bug introduced in 2.4.0 causing `.bc' programs to be built
    with `-custom' by default (#3269, fixes #3262, @diml)

  =E2=80=A2 Allow contexts to be defined with local switches in workspace f=
iles
    (#3265, fix #3264, @rgrinberg)

  =E2=80=A2 Delay expansion errors until the rule is used to build something
    (#3261, fix #3252, @rgrinberg, @diml)

  =E2=80=A2 [coq] Support for theory dependencies and compositional builds =
using
    new field `(theories ...)' (#2053, @ejgallego, @rgrinberg)

  =E2=80=A2 From now on, each version of a syntax extension must be explici=
tely
    tied to a minimum version of the dune language. Inconsistent
    versions in a `dune-project' will trigger a warning for version
    <=3D2.4 and an error for versions >2.4 of the dune language. (#3270,
    fixes #2957, @voodoos)

  =E2=80=A2 [coq] Bump coq lang version to 0.2. New coq features presented =
this
    release require this version of the coq lang. (#3283, @ejgallego)

  =E2=80=A2 Prevent installation of public executables disabled using the
    `enabled_if' field.  Installation will now simply skip such
    executables instead of raising an error. (#3195, @voodoos)

  =E2=80=A2 `dune upgrade' will now try to upgrade projects using versions =
<2.0
    to version 2.0 of the dune language. (#3174, @voodoos)

  =E2=80=A2 Add a `top' command to integrate dune with any toplevel, not ju=
st
    utop. It is meant to be used with the new `#use_output' directive of
    OCaml 4.11 (#2952, @mbernat, @diml)

  =E2=80=A2 Allow per-package `version' in generated `opam' files (#3287,
    @toots)

  =E2=80=A2 [coq] Introduce the `coq.extraction' stanza. It can be used to
    extract OCaml sources (#3299, fixes #2178, @rgrinberg)

  =E2=80=A2 Load ppx rewriters in dune utop and add pps field to toplevel
    stanza. Ppx extensions will now be usable in the toplevel (#3266,
    fixes #346, @stephanieyou)

  =E2=80=A2 Add a `(subdir ..)' stanza to allow evaluating stanzas in sub
    directories.  (#3268, @rgrinberg)

  =E2=80=A2 Fix a bug preventing one from running inline tests in multiple =
modes
    (#3352, @diml)

  =E2=80=A2 Allow the use of the `%{profile}' variable in the `enabled_if' =
field
    of the library stanza. (#3344, @mrmr1993)

  =E2=80=A2 Allow the use of `%{ocaml_version}' variable in `enabled_if' fi=
eld
    of the library stanza. (#3339, @voodoos)

  =E2=80=A2 Fix dune build freezing on MacOS when cache is enabled. (#3249,
    fixes ##2973, @artempyanykh)


Old CWN
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  [online].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <http://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <http://alan.petitepomme.net/cwn/cwn.rss>

[online] <http://lists.idyll.org/listinfo/caml-news-weekly/>

[Alan Schmitt] <http://alan.petitepomme.net/>


--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2020-04-14 Tue 09:26 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org mode" />
<style type=3D"text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
<script type=3D"text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2019 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target =3D document.getElementById(id);
   if(null !=3D target) {
     elem.cacheClassElem =3D elem.className;
     elem.cacheClassTarget =3D target.className;
     target.className =3D "code-highlighted";
     elem.className   =3D "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target =3D document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className =3D elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className =3D elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"http://alan.petitepomme.net/cwn/2020.04.07.html">Previous Week</=
a> <a href=3D"http://alan.petitepomme.net/cwn/index.html">Up</a> <a href=3D=
"http://alan.petitepomme.net/cwn/2020.04.21.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of April 07 to 14, 2020.
</p>

<div id=3D"table-of-contents">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents">
<ul>
<li><a href=3D"#1">Announcing dune-deps: produces a project-centric depende=
ncy graph</a></li>
<li><a href=3D"#2">OCamlformat 0.14.0</a></li>
<li><a href=3D"#3">Dune 2.5.0</a></li>
<li><a href=3D"#orgb793630">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-org19dcd40" class=3D"outline-2">
<h2 id=3D"1">Announcing dune-deps: produces a project-centric dependency gr=
aph</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/announcing-dune-deps-produc=
es-a-project-centric-dependency-graph/5451/3">https://discuss.ocaml.org/t/a=
nnouncing-dune-deps-produces-a-project-centric-dependency-graph/5451/3</a>
</p>
</div>

<div id=3D"outline-container-orgd391826" class=3D"outline-3">
<h3 id=3D"orgd391826">Martin Jambon announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgd391826">
<p>
Since the original announcement, I received some good feedback from users w=
orking on large projects. Thank you!
</p>

<p>
The latest version released today is 1.2.0. It is already available on opam=
-repository (thank you @kit-ty-kate). The
changes since the original release, besides bug fixes, include:
</p>

<ul class=3D"org-ul">
<li>Ability to select or ignore dune files and folders to scan. For example=
, <code>dune-deps foo bar -x bar/test</code> uses all the dune files found =
in folders <code>foo</code> and <code>bar</code> but will ignore <code>bar/=
test</code>. This is useful for ignoring uninteresting parts of the project=
 and for ignoring parse errors (see bug <a href=3D"https://github.com/mjamb=
on/dune-deps/issues/4">#4</a>).</li>
<li>Executable name disambiguation. For example, private executables of the=
 same name like <code>foo/main</code> and <code>bar/baz/main</code> are now=
 rendered as <code>main&lt;foo&gt;</code> and <code>main&lt;baz&gt;</code> =
respectively instead of just <code>main</code>.</li>
<li>Optional exclusion of all executables or all external libraries with <c=
ode>--no-exe</code> and <code>--no-ext</code>.</li>
<li>Ability to show only the dependencies and/or the reverse dependencies o=
f selected libraries. See below.</li>
</ul>

<p>
Whole-project graphs for large projects tend to be unreadable. To deal with=
 that, I added support for an "hourglass
view" (=E2=8C=9B) option for showing only the dependencies and reverse depe=
ndencies of a component of interest.
</p>

<p>
The following is obtained with <code>-h opam-client</code> on the opam proj=
ect:
</p>


<div class=3D"figure">
<p><img src=3D"https://aws1.discourse-cdn.com/standard11/uploads/ocaml/orig=
inal/2X/6/66098faac9fd6681e3c0f4fe357aef8ff34bcaf2.png" alt=3D"66098faac9fd=
6681e3c0f4fe357aef8ff34bcaf2.png" />
</p>
</div>

<p>
Please <a href=3D"https://github.com/mjambon/dune-deps/issues">let us know<=
/a> if this works for your favorite projects! The
source code of dune-deps makes it somewhat easier now to experiment with ne=
w strategies for eliminating nodes. See
the <code>Filter</code> and <code>Filterable</code> modules.
</p>

<p>
Check out <code>dune-deps --help</code> for detailed documentation on the o=
ptions.
</p>
</div>
</div>


<div id=3D"outline-container-org7b13b82" class=3D"outline-3">
<h3 id=3D"org7b13b82">Sean Grove said and Martin Jambon replied</h3>
<div class=3D"outline-text-3" id=3D"text-org7b13b82">
<blockquote>
<p>
That=E2=80=99s a nice idea - it=E2=80=99d be great to have this available a=
s a GitHub action so anyone could do this with just a
click or two!
</p>
</blockquote>

<p>
So, I made a <a href=3D"https://github.com/mjambon/dune-deps-action">generi=
c yaml workflow</a> that people can stick into their
git/github project. This will automatically maintain the dependency graph <=
code>.deps/deps.png</code> which can be included in a
readme.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org6a46a06" class=3D"outline-2">
<h2 id=3D"2">OCamlformat 0.14.0</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-ocamlformat-0-14-0/5435=
/21">https://discuss.ocaml.org/t/ann-ocamlformat-0-14-0/5435/21</a>
</p>
</div>

<div id=3D"outline-container-org7aaddbe" class=3D"outline-3">
<h3 id=3D"org7aaddbe">Etienne Millon announced</h3>
<div class=3D"outline-text-3" id=3D"text-org7aaddbe">
<p>
As described in this thread, ocamlformat 0.14.0 introduced a new algorithm =
to determine how
documentation comments are placed. We underestimated the impact of making t=
his the default, and this means that many
unwanted diffs were present for 0.13.0 -&gt; 0.14.0 upgrades.
</p>

<p>
We are going to prepare a 0.14.1 release next week reverting this behavior =
back to the 0.13.0 defaults. Users still
on 0.13.0 are encouraged to wait for this and upgrade directly to 0.14.1.
</p>

<p>
Sorry for the inconvenience, and thanks for the feedback!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-orgb95d377" class=3D"outline-2">
<h2 id=3D"3">Dune 2.5.0</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-dune-2-5-0/5494/1">http=
s://discuss.ocaml.org/t/ann-dune-2-5-0/5494/1</a>
</p>
</div>

<div id=3D"outline-container-orgb9329c8" class=3D"outline-3">
<h3 id=3D"orgb9329c8">Rudi Grinberg announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgb9329c8">
<p>
The dune team is pleased to announce the release of dune 2.5.0. This releas=
e has been brewing for a while and
contains a few interesting features. I'll highlight some of the bigger ones:
</p>

<ul class=3D"org-ul">
<li>The coq support has been thoroughly extended. There's now support for b=
oth composition of coq libraries in the same workspace and extraction of co=
q code to OCaml.</li>

<li>There's a new <code>$ dune upgrade</code> subcommand to help you upgrad=
e dune files from 1.x to 2.x</li>

<li><code>$ dune utop</code> will now load ppx preprocessors to the topleve=
l. Ppx authors might enjoy this style of interactive development.</li>

<li>There's a new <code>(subdir ..)</code> stanza that can be used to evalu=
ate stanzas in sub directories. This makes it possible to have a single dun=
e file for an entire project (generated or not).</li>
</ul>

<p>
I'd like to thank everyone who contributed to dune 2.5.0. Your help is grea=
tly appreciated.
</p>

<p>
Here's the full change log:
</p>
</div>

<div id=3D"outline-container-orgfdb50df" class=3D"outline-4">
<h4 id=3D"orgfdb50df">2.5.0 (09/04/2020)</h4>
<div class=3D"outline-text-4" id=3D"text-orgfdb50df">
<ul class=3D"org-ul">
<li>Add a <code>--release</code> option meaning the same as <code>-p</code>=
 but without the
package filtering. This is useful for custom <code>dune</code> invocation i=
n opam
files where we don't want <code>-p</code> (#3260, @diml)</li>

<li>Fix a bug introduced in 2.4.0 causing <code>.bc</code> programs to be b=
uilt
with <code>-custom</code> by default (#3269, fixes #3262, @diml)</li>

<li>Allow contexts to be defined with local switches in workspace files (#3=
265,
fix #3264, @rgrinberg)</li>

<li>Delay expansion errors until the rule is used to build something (#3261=
, fix
#3252, @rgrinberg, @diml)</li>

<li>[coq] Support for theory dependencies and compositional builds using
new field <code>(theories ...)</code> (#2053, @ejgallego, @rgrinberg)</li>

<li>From now on, each version of a syntax extension must be explicitely tie=
d to a
minimum version of the dune language. Inconsistent versions in a
<code>dune-project</code> will trigger a warning for version &lt;=3D2.4 and=
 an error for
versions &gt;2.4 of the dune language. (#3270, fixes #2957, @voodoos)</li>

<li>[coq] Bump coq lang version to 0.2. New coq features presented this rel=
ease
require this version of the coq lang. (#3283, @ejgallego)</li>

<li>Prevent installation of public executables disabled using the <code>ena=
bled_if</code> field.
Installation will now simply skip such executables instead of raising an
error. (#3195, @voodoos)</li>

<li><code>dune upgrade</code> will now try to upgrade projects using versio=
ns &lt;2.0 to version
2.0 of the dune language. (#3174, @voodoos)</li>

<li>Add a <code>top</code> command to integrate dune with any toplevel, not=
 just
utop. It is meant to be used with the new <code>#use_output</code> directiv=
e of
OCaml 4.11 (#2952, @mbernat, @diml)</li>

<li>Allow per-package <code>version</code> in generated <code>opam</code> f=
iles (#3287, @toots)</li>

<li>[coq] Introduce the <code>coq.extraction</code> stanza. It can be used =
to extract OCaml
sources (#3299, fixes #2178, @rgrinberg)</li>

<li>Load ppx rewriters in dune utop and add pps field to toplevel stanza. P=
px
extensions will now be usable in the toplevel
(#3266, fixes #346, @stephanieyou)</li>

<li>Add a <code>(subdir ..)</code> stanza to allow evaluating stanzas in su=
b directories.
(#3268, @rgrinberg)</li>

<li>Fix a bug preventing one from running inline tests in multiple modes
(#3352, @diml)</li>

<li>Allow the use of the <code>%{profile}</code> variable in the <code>enab=
led_if</code> field of the
library stanza. (#3344, @mrmr1993)</li>

<li>Allow the use of <code>%{ocaml_version}</code> variable in <code>enable=
d_if</code> field of the
library stanza. (#3339, @voodoos)</li>

<li>Fix dune build freezing on MacOS when cache is enabled. (#3249, fixes #=
#2973,
@artempyanykh)</li>
</ul>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-orgb793630" class=3D"outline-2">
<h2 id=3D"orgb793630">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-orgb793630">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"http://alan.petitepomme.net/cwn/">the archive</a> or the <a=
 href=3D"http://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archives<=
/a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname">
<p>
<a href=3D"http://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

