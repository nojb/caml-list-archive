Return-Path: <alan.schmitt@polytechnique.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id A0078E020C
	for <caml-list@sympa.inria.fr>; Tue, 29 Dec 2020 11:00:32 +0100 (CET)
X-IronPort-AV: E=Sophos;i="5.78,457,1599516000"; 
   d="scan'208,217";a="484769690"
Received: from cbg35-2-78-242-14-140.fbx.proxad.net (HELO set) ([78.242.14.140])
  by mail2-relais-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Dec 2020 11:00:06 +0100
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr,
 comp@lists.orbitalfox.eu
Date: Tue, 29 Dec 2020 10:59:57 +0100
Message-ID: <8735zpnd9e.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: base64

SGVsbG8NCg0KSGVyZSBpcyB0aGUgbGF0ZXN0IE9DYW1sIFdlZWtseSBOZXdzLCBmb3IgdGhlIHdl
ZWsgb2YgRGVjZW1iZXIgMjIgdG8gMjksDQoyMDIwLg0KDQpUYWJsZSBvZiBDb250ZW50cw0K4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCnBweF9k
ZXJpdmluZ195YW1sIDAuMS4wDQpBIEhlcm9rdSBidWlsZHBhY2sgZm9yIE9DYW1sDQpvcGFtLWR1
bmUtbGludCAtIGtlZXAgb3BhbSBhbmQgZHVuZSBkZXBlbmRlbmNpZXMgaW4gc3luYw0KU2NpcmVw
LCBhIHV0aWxpdHkgZm9yIGxpdGVyYXRlIHByb2dyYW1taW5nDQpDYW1lbCBDYWxlbmRhciBmb3Ig
MjAyMQ0KT2xkIENXTg0KDQoNCnBweF9kZXJpdmluZ195YW1sIDAuMS4wDQrilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZAN
Cg0KICBBcmNoaXZlOg0KICA8aHR0cHM6Ly9kaXNjdXNzLm9jYW1sLm9yZy90L2Fubi1wcHgtZGVy
aXZpbmcteWFtbC0wLTEtMC83MDA3LzE+DQoNCg0KUGF0cmljayBGZXJyaXMgYW5ub3VuY2VkDQri
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIANCg0KICBJJ20gcHJvdWQgdG8gYW5ub3VuY2UgdGhlIGZpcnN0IHJlbGVh
c2UgKGFuZCBteSBmaXJzdCByZWxlYXNlKSBvZg0KICBbcHB4X2Rlcml2aW5nX3lhbWxdLiBJZiB5
b3UgYXJlIGZhbWlsaWFyIHdpdGggdGhlIGV4Y2VsbGVudA0KICBbcHB4X2Rlcml2aW5nX3lvanNv
bl0gdGhlbiB0aGlzIGxpYnJhcnkgc2hvdWxkIGNvbWUgYXMgbm8gc3VycHJpc2UuIEluDQogIGZh
Y3QgaXQgaGVscGVkIG1lIGEgbG90IGluIHdyaXRpbmcgdGhpcyBwcHgsIHNvIHRoYW5rIHlvdSB0
byBpdHMNCiAgY3JlYXRvcnMvbWFpbnRhaW5lcnMuDQoNCg0KW3BweF9kZXJpdmluZ195YW1sXSA8
aHR0cHM6Ly9naXRodWIuY29tL3BhdHJpY29mZXJyaXMvcHB4X2Rlcml2aW5nX3lhbWw+DQoNCltw
cHhfZGVyaXZpbmdfeW9qc29uXSA8aHR0cHM6Ly9naXRodWIuY29tL29jYW1sLXBweC9wcHhfZGVy
aXZpbmdfeW9qc29uPg0KDQpJbnN0YWxsYXRpb24NCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKV
jOKVjOKVjOKVjA0KDQogIOKUjOKUgOKUgOKUgOKUgA0KICDilIIgJCBvcGFtIHVwZGF0ZQ0KICDi
lIIgJCBvcGFtIGluc3RhbGwgcHB4X2Rlcml2aW5nX3lhbWwNCiAg4pSU4pSA4pSA4pSA4pSADQoN
Cg0KVXNhZ2UNCuKVjOKVjOKVjOKVjOKVjA0KDQogIFBweF9kZXJpdmluZ195YW1sIGNvbnZlcnRz
IHlvdXIgT0NhbWwgdHlwZXMgdG8gdGhlICJiYXNpYyIgW09DYW1sIFlhbWwNCiAgdmFsdWUgdHlw
ZV0gKHRoZSBvbmUgdGhhdCBpcyBjdXJyZW50bHkgY29tcGF0aWJsZSB3aXRoIGV6anNvbm0pLiBT
bw0KICBmb3IgZXhhbXBsZSB5b3UgY2FuIGhhdmU6DQoNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKU
giB0eXBlIHQgPSB7IHRpdGxlOiBzdHJpbmc7IGF1dGhvcnM6IHN0cmluZyBsaXN0IH0gW0BAZGVy
aXZpbmcgeWFtbF0NCiAg4pSCIA0KICDilIIgbGV0ICgpID0NCiAg4pSCICAgbGV0IHYgPSB7IHRp
dGxlID0gIllhbWwgUFBYISI7IGF1dGhvcnMgPSBbICJQYXRyaWNrIEZlcnJpcyIgXSB9IGluDQog
IOKUgiAgIGxldCB5YW1sID0gdG9feWFtbCB2IGluDQogIOKUgiAgIFlhbWwucHAgRm9ybWF0LnN0
ZF9mb3JtYXR0ZXIgeWFtbDsNCiAg4pSCICAgbWF0Y2ggb2ZfeWFtbCB5YW1sIHdpdGgNCiAg4pSC
ICAgICB8IE9rIHQgLT4gRm9ybWF0LnByaW50X3N0cmluZyB0LnRpdGxlDQogIOKUgiAgICAgfCBF
cnJvciAoYE1zZyBtKSAtPiBmYWlsd2l0aCBtDQogIOKUlOKUgOKUgOKUgOKUgA0KDQogIFRoZSBw
cHggZ2VuZXJhdGVzIHR3byBmdW5jdGlvbnM6DQoNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiB2
YWwgb2ZfeWFtbCA6IFlhbWwudmFsdWUgLT4gdCBZYW1sLnJlcw0KICDilIIgdmFsIHRvX3lhbWwg
OiB0IC0+IFlhbWwudmFsdWUNCiAg4pSU4pSA4pSA4pSA4pSADQoNCiAgQW5kIHdoZW4gYnVpbHQg
d2l0aCB0aGlzIGR1bmUgZmlsZToNCg0KICDilIzilIDilIDilIDilIANCiAg4pSCIChleGVjdXRh
YmxlDQogIOKUgiAgKG5hbWUgbWFpbikNCiAg4pSCICAobGlicmFyaWVzIHlhbWwpDQogIOKUgiAg
KHByZXByb2Nlc3MNCiAg4pSCICAgKHBwcyBwcHhfZGVyaXZpbmdfeWFtbCkpKQ0KICDilJTilIDi
lIDilIDilIANCg0KICBUaGUgZm9sbG93aW5nIG91dHB1dCBpcyBnZW5lcmF0ZWQ6DQoNCiAg4pSM
4pSA4pSA4pSA4pSADQogIOKUgiB0aXRsZTogWWFtbCBQUFghDQogIOKUgiBhdXRob3JzOg0KICDi
lIIgLSBQYXRyaWNrIEZlcnJpcw0KICDilIIgWWFtbCBQUFghDQogIOKUlOKUgOKUgOKUgOKUgA0K
DQogIFRoZSBbUkVBRE1FXSBjb250YWlucyBzb21lIG1vcmUgaW5mb3JtYXRpb24gYW5kIHRoZSBs
aWJyYXJ5IGlzIHN0aWxsIGENCiAgbGl0dGxlIHJvdWdoIGFyb3VuZCB0aGUgZWRnZXMsIGVzcGVj
aWFsbHkgd2l0aCBlcnJvciByZXBvcnRpbmcsIGJ1dA0KICBJJ20gY3VycmVudGx5IHVzaW5nIGl0
IGluIGEgZmV3IHBsYWNlcyBzdWNoIGFzIGFuICJvY2FtbC1pZmllZCINCiAgW2dpdGh1YiBhY3Rp
b25zXSBsaWJyYXJ5IChwcHhfZGVyaXZpbmdfeWFtbCdzIFt0ZXN0IHdvcmtmbG93XSB3YXMNCiAg
YXV0b21hdGljYWxseSBnZW5lcmF0ZWQgd2l0aCBpdCA6c3BhcmtsZXM6KS4gVGhpcyBpcyBhIG5p
Y2UgZXhhbXBsZSBvZg0KICBob3cgaXQgY2FuIGJlIHVzZWQgaW4gYSBmYWlybHkgc3RyYWlnaHRm
b3J3YXJkIHdheSB0byBnZW5lcmF0ZSBPQ2FtbA0KICB2ZXJzaW9ucyBvZiB0aGUgbWFueSBwcm9q
ZWN0cyB0aGF0IHVzZSBZYW1sIGZvciBjb25maWd1cmF0aW9uIGZpbGVzLg0KDQogIEhhcHB5IHlh
bWwtaW5nIDopDQoNCg0KW09DYW1sIFlhbWwgdmFsdWUgdHlwZV0NCjxodHRwczovL2dpdGh1Yi5j
b20vYXZzbS9vY2FtbC15YW1sL2Jsb2IvNmRlOGZhNjkyNmQzOTEzMzRiOTQ1NzU0NjE5YTY0ODU3
ZDM1MmU1ZC9saWIvdHlwZXMubWwjTDQ0Pg0KDQpbUkVBRE1FXQ0KPGh0dHBzOi8vZ2l0aHViLmNv
bS9wYXRyaWNvZmVycmlzL3BweF9kZXJpdmluZ195YW1sI2ltcGxlbWVudGF0aW9uLWRldGFpbHM+
DQoNCltnaXRodWIgYWN0aW9uc10gPGh0dHBzOi8vZ2l0aHViLmNvbS9wYXRyaWNvZmVycmlzL29w
YW0tZ2l0aHViLXdvcmtmbG93Pg0KDQpbdGVzdCB3b3JrZmxvd10NCjxodHRwczovL2dpdGh1Yi5j
b20vcGF0cmljb2ZlcnJpcy9wcHhfZGVyaXZpbmdfeWFtbC9ibG9iL21haW4vLmdpdGh1Yi93b3Jr
Zmxvd3MvdGVzdC55bWw+DQoNCg0KQSBIZXJva3UgYnVpbGRwYWNrIGZvciBPQ2FtbA0K4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToNCiAgPGh0dHBzOi8vZGlzY3Vzcy5v
Y2FtbC5vcmcvdC9hbm4tYS1oZXJva3UtYnVpbGRwYWNrLWZvci1vY2FtbC83MDEyLzE+DQoNCg0K
cm9kZHkgYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIANCg0KICBJIHdyb3RlIFthIEhlcm9rdSBidWlsZHBhY2tdIGZvciBPQ2FtbCB3ZWIgYXBw
cyB0aGF0IHVzZSBvcGFtL2R1bmUuDQoNCg0KW2EgSGVyb2t1IGJ1aWxkcGFja10NCjxodHRwczov
L2dpdGh1Yi5jb20vcm9kZHl5YWdhL2hlcm9rdS1idWlsZHBhY2stb2NhbWw+DQoNCg0Kb3BhbS1k
dW5lLWxpbnQgLSBrZWVwIG9wYW0gYW5kIGR1bmUgZGVwZW5kZW5jaWVzIGluIHN5bmMNCuKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIEFy
Y2hpdmU6DQogIDxodHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3QvYW5uLW9wYW0tZHVuZS1saW50
LWtlZXAtb3BhbS1hbmQtZHVuZS1kZXBlbmRlbmNpZXMtaW4tc3luYy83MDE0LzE+DQoNCg0KVGhv
bWFzIExlb25hcmQgYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCg0KICBXZSdyZSBwbGVhc2Vk
IHRvIGFubm91bmNlIHRoZSBmaXJzdCByZWxlYXNlIG9mIFtvcGFtLWR1bmUtbGludF0uIFRoaXMN
CiAgbGl0dGxlIHRvb2wgY2hlY2tzIHRoYXQgZXZlcnkgb2NhbWxmaW5kIGRlcGVuZGVuY3kgbGlz
dGVkIGluIHlvdXINCiAgYGR1bmUnIGZpbGVzIGhhcyB0aGUgY29ycmVzcG9uZGluZyBvcGFtIHBh
Y2thZ2UgbGlzdGVkIGFzIGEgZGVwZW5kZW5jeQ0KICBpbiB5b3VyIGAqLm9wYW0nIGZpbGUocyku
DQoNCiAgZS5nLg0KDQogIOKUjOKUgOKUgOKUgOKUgA0KICDilIIgJCBjZCBjaGFycnVhDQogIOKU
giAkIG9wYW0gZHVuZS1saW50DQogIOKUgiBjaGFycnVhLWNsaWVudC5vcGFtOiBjaGFuZ2VzIG5l
ZWRlZDoNCiAg4pSCICAgInRjcGlwIiB7d2l0aC10ZXN0ICYgPj0gNi4wLjB9ICAgICAgICAgICBb
ZnJvbSB0ZXN0L2NsaWVudCwgdGVzdC9jbGllbnQvbHd0XQ0KICDilIIgY2hhcnJ1YS1zZXJ2ZXIu
b3BhbTogY2hhbmdlcyBuZWVkZWQ6DQogIOKUgiAgICJwcHhfY3N0cnVjdCIge3dpdGgtdGVzdCAm
ID49IDYuMC4wfSAgICAgW2Zyb20gKHBweCksIHRlc3RdDQogIOKUgiAgICJ0Y3BpcCIge3dpdGgt
dGVzdCAmID49IDYuMC4wfSAgICAgICAgICAgW2Zyb20gdGVzdF0NCiAg4pSCIGNoYXJydWEtdW5p
eC5vcGFtOiBjaGFuZ2VzIG5lZWRlZDoNCiAg4pSCICAgImNzdHJ1Y3QtbHd0IiB7Pj0gNi4wLjB9
ICAgICAgICAgICAgICAgICBbZnJvbSB1bml4XQ0KICDilIIgICAiaXBhZGRyIiB7Pj0gNS4wLjF9
ICAgICAgICAgICAgICAgICAgICAgIFtmcm9tIHVuaXhdDQogIOKUgiAgICJ0Y3BpcCIgez49IDYu
MC4wfSAgICAgICAgICAgICAgICAgICAgICAgW2Zyb20gdW5peF0NCiAg4pSCIGNoYXJydWEub3Bh
bTogT0sNCiAg4pSCIE5vdGU6IHZlcnNpb24gbnVtYmVycyBhcmUganVzdCBzdWdnZXN0aW9ucyBi
YXNlZCBvbiB0aGUgY3VycmVudGx5IGluc3RhbGxlZCB2ZXJzaW9uLg0KICDilIIgV3JpdGUgY2hh
bmdlcz8gW3ldIHkNCiAg4pSCIFdyb3RlICIuL2NoYXJydWEtY2xpZW50Lm9wYW0iDQogIOKUgiBX
cm90ZSAiLi9jaGFycnVhLXNlcnZlci5vcGFtIg0KICDilIIgV3JvdGUgIi4vY2hhcnJ1YS11bml4
Lm9wYW0iDQogIOKUlOKUgOKUgOKUgOKUgA0KDQogIElmIHlvdXIgcHJvamVjdCBnZW5lcmF0ZXMg
dGhlIG9wYW0gZmlsZXMgZnJvbSBgZHVuZS1wcm9qZWN0JywgdGhlbiBpdA0KICB3aWxsIHVwZGF0
ZSB5b3VyIGBkdW5lLXByb2plY3QnIGluc3RlYWQuDQoNCiAgSXQgY2FuIGFsc28gYmUgdXNlZnVs
IHRvIHJ1biB0aGlzIGluIENJLiBJdCB3aWxsIGV4aXQgd2l0aCBhIG5vbi16ZXJvDQogIGV4aXQg
c3RhdHVzIGlmIGFueXRoaW5nIG5lZWRzIHRvIGJlIGNoYW5nZWQuIFtvY2FtbC1jaV0gcnVucyB0
aGlzDQogIGF1dG9tYXRpY2FsbHkgYXMgcGFydCBvZiB0aGUgImxpbnQtb3BhbSIgY2hlY2suDQoN
Cg0KW29wYW0tZHVuZS1saW50XSA8aHR0cHM6Ly9naXRodWIuY29tL29jdXJyZW50L29wYW0tZHVu
ZS1saW50Pg0KDQpbb2NhbWwtY2ldIDxodHRwczovL2NpLm9jYW1sbGFicy5pby8+DQoNCg0KU2Np
cmVwLCBhIHV0aWxpdHkgZm9yIGxpdGVyYXRlIHByb2dyYW1taW5nDQrilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZANCg0K
ICBBcmNoaXZlOg0KICA8aHR0cHM6Ly9kaXNjdXNzLm9jYW1sLm9yZy90L3NjaXJlcC1hLXV0aWxp
dHktZm9yLWxpdGVyYXRlLXByb2dyYW1taW5nLzcwMTYvMT4NCg0KDQpQaGlsaXBwZSBhbm5vdW5j
ZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gA0KDQogIEkgd3JvdGUgYSB1dGlsaXR5IGNhbGxlZCBbc2NpcmVwXSB0byByZW5kZXIgYSBtYXJr
ZG93biBmaWxlIHdpdGggT0NhbWwNCiAgY29kZSBibG9ja3MgYXMgYW4gSFRNTCBkb2N1bWVudCwg
d2hpY2ggcHJvdmlkZXMgc29tZSBzdXBwb3J0IGZvcg0KICBncmFwaGljcy4gSGVyZSBhcmUgc29t
ZSBleGFtcGxlcyBvZiBnZW5lcmF0ZWQgZG9jdW1lbnRzOiBbb25lIGJhc2VkIG9uDQogIHZnXSwg
YW5kIFthbm90aGVyIHVzaW5nIG93bC1wbHBsb3RdLg0KDQogIEl0IGNhbiBhbHNvIGJlIHVzZWQg
ZG93bnN0cmVhbSBvZiBbbWR4XSBhcyBhIG1hcmtkb3duLXRvLWh0bWwNCiAgY29udmVydGVyIHRo
YXQgZGV0ZWN0cyBwaWN0dXJlcyBpbiB0aGUgdG9wbGV2ZWwncyBzdGFuZGFyZCBvdXRwdXQgYW5k
DQogIHJlbmRlcnMgdGhlbSBpbiB0aGUgZmluYWwgZG9jdW1lbnQuDQoNCiAgSXQgaXMgcmVhbGx5
IGEgaGFjaywgYW5kIGl0IGlzIHBvb3JseSBkb2N1bWVudGVkLCBidXQgSSdtIGFkdmVydGlzaW5n
DQogIGl0IGluIGNhc2UgaXQgbWlnaHQgYmUgdXNlZnVsIHRvIG90aGVycy4NCg0KDQpbc2NpcmVw
XSA8aHR0cHM6Ly9naXRodWIuY29tL3B2ZWJlci9zY2lyZXA+DQoNCltvbmUgYmFzZWQgb24gdmdd
IDxodHRwOi8vcHZlYmVyLmdpdGh1Yi5pby9zY2lyZXAvZm9sZC5odG1sPg0KDQpbYW5vdGhlciB1
c2luZyBvd2wtcGxwbG90XSA8aHR0cDovL3B2ZWJlci5naXRodWIuaW8vc2NpcmVwL2RhbXBlZC5o
dG1sPg0KDQpbbWR4XSA8aHR0cHM6Ly9naXRodWIuY29tL3JlYWx3b3JsZG9jYW1sL21keD4NCg0K
DQpDYW1lbCBDYWxlbmRhciBmb3IgMjAyMQ0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZTogPGh0
dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcvdC9jYW1lbC1jYWxlbmRhci1mb3ItMjAyMS83MDIwLzE+
DQoNCg0KRmxvcmVudCBNb25uaWVyIGFubm91bmNlZA0K4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCiAg
SSB3b3VsZCBsaWtlIHRvIHNoYXJlIHdpdGggeW91IGEgW2NhbWVsIGNhbGVuZGFyIGZvciAyMDIx
IGluIHBkZl0gd2l0aA0KICB0aGUgbmljZSB0aGVtZSBmcm9tIG9jYW1sIGRvdCBvcmcuDQoNCiAg
SXQgd2FzIGdlbmVyYXRlZCBmcm9tIGFuIG9jYW1sIHNjcmlwdCB0aGF0IHlvdSBjYW4gZmluZCBp
biB0aGlzIHJlcG86DQogIFtzdmcgY2FsZW5kYXIgZ2VuZXJhdG9yXS4NCg0KICBTZXZlcmFsIHNj
cmlwdHMgYXJlIGF2YWlsYWJsZSwgeW91IGNhbiBmaW5kIHNvbWUgcmVzdWx0cyBvbiB0aGlzIFt3
ZWINCiAgcGFnZV0uDQoNCiAgQXQgdGhlIGJlZ2lubmluZyBvZiAyMDIwIEkgd2FzIHNlYXJjaGlu
ZyBmb3IgYSBmcmVlIHNvZnR3YXJlIHRvDQogIGdlbmVyYXRlIGNhbGVuZGFycyBpbiBTVkcgdGhh
dCBJIGNvdWxkIGN1c3RvbWlzZSBmb3IgbXkgb3duIHVzZSwgYnV0IEkNCiAgd2FzIHVuYWJsZSB0
byBpbnN0YWxsIHRoZSBQZXJsIHNjcmlwdCB0aGF0IGV4aXN0cyAoaXQgaGFzIGEgbG90IG9mDQog
IGRlcGVuZGVuY2llcyBhbmQgdGhlIGVycm9yIG1lc3NhZ2Ugd2hlbiBJIHRyeSB0byBpbnN0YWxs
IGl0IGRpZG4ndA0KICBoZWxwIHVzIHRvIGZpbmQgd2hhdCdzIHdyb25nIHdpdGggaXQpLg0KDQog
IFRoaXMgZXhwbGFpbnMgdGhlIGRlc2lnbiBvZiB0aGVzZSBzY3JpcHRzLCB0aGF0IGFyZSBtYWRl
IHRvIHdvcmsNCiAgd2l0aG91dCBhbnkgZGVwZW5kZW5jaWVzIGFuZCB3aXRob3V0IGFueSBjb21w
aWxhdGlvbi4gVGhlcmUncyBjb2RlDQogIGR1cGxpY2F0aW9uLCBidXQgZXZlcnkgc2NyaXB0IG9u
bHkgbmVlZCB0aGUgb2NhbWwgaW50ZXJwcmV0ZXIgdG8gYmUNCiAgcnVuLCBzbyBtb3N0IHBlb3Bs
ZSBjb21mb3J0YWJsZSB3aXRoIHRoZSBjb21tYW5kIGxpbmUgc2hvdWxkIGJlIGFibGUNCiAgdG8g
dXNlIGl0Lg0KDQogIChJIGFsc28gdHJpZWQgdG8gc2VsbCBzb21lIFtvbiBFdHN5XSBidXQgZGlk
bid0IHNvbGQgYSBzaW5nbGUgb25lLikNCg0KICBCeSBkZWZhdWx0IDEyIGxhbmd1YWdlcyBhcmUg
aW5jbHVkZWQgaW4gZXZlcnkgc2NyaXB0LCBidXQgeW91IGNhbg0KICBnZW5lcmF0ZSB0aGUgY2Fs
ZW5kYXJzIGZvciBtb3JlIHRoYW4gMjAwIGxhbmd1YWdlcyBpZiB5b3UgdXNlIFt0aGVzZQ0KICBk
YXRlcyBsb2NhbGVzXSB0aGF0IGNvbWUgZnJvbSB0aGUgQ0xEUiByZXBvc2l0b3J5Lg0KDQogIFlv
dSBjYW4gYWxzbyBzd2l0Y2ggbW9uZGF5IGZpcnN0IG9yIHN1bmRheSBmaXJzdC4NCg0KICBUaGVz
ZSBnZW5lcmF0b3JzIGFyZSBwcm92aWRlZCB1bmRlciBabGliIGxpY2Vuc2UuDQoNCiAgSSBob3Bl
IHNvbWUgd2lsbCBlbmpveSENCg0KDQpbY2FtZWwgY2FsZW5kYXIgZm9yIDIwMjEgaW4gcGRmXQ0K
PGh0dHA6Ly9kZWNhcG9kZTMxNC5mcmVlLmZyL2NhbC9jYWwtY2FtZWwvY2FsLWNhbWVsLTIwMjEt
ZW4ucGRmPg0KDQpbc3ZnIGNhbGVuZGFyIGdlbmVyYXRvcl0gPGh0dHBzOi8vZ2l0aHViLmNvbS9m
Y2NtL29jYW1sLWNhbC1zdmc+DQoNClt3ZWIgcGFnZV0gPGh0dHA6Ly9kZWNhcG9kZTMxNC5mcmVl
LmZyL2NhbC8+DQoNCltvbiBFdHN5XSA8aHR0cHM6Ly93d3cuZXRzeS5jb20vZnIvc2hvcC9EZWNh
cG9kZT4NCg0KW3RoZXNlIGRhdGVzIGxvY2FsZXNdIDxodHRwczovL2dpdGh1Yi5jb20vZmNjbS9E
YXRlTG9jYWxlLW9jYW1sPg0KDQoNCk9sZCBDV04NCuKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQog
IElmIHlvdSBoYXBwZW4gdG8gbWlzcyBhIENXTiwgeW91IGNhbiBbc2VuZCBtZSBhIG1lc3NhZ2Vd
IGFuZCBJJ2xsIG1haWwNCiAgaXQgdG8geW91LCBvciBnbyB0YWtlIGEgbG9vayBhdCBbdGhlIGFy
Y2hpdmVdIG9yIHRoZSBbUlNTIGZlZWQgb2YgdGhlDQogIGFyY2hpdmVzXS4NCg0KICBJZiB5b3Ug
YWxzbyB3aXNoIHRvIHJlY2VpdmUgaXQgZXZlcnkgd2VlayBieSBtYWlsLCB5b3UgbWF5IHN1YnNj
cmliZQ0KICBbb25saW5lXS4NCg0KICBbQWxhbiBTY2htaXR0XQ0KDQoNCltzZW5kIG1lIGEgbWVz
c2FnZV0gPG1haWx0bzphbGFuLnNjaG1pdHRAcG9seXRlY2huaXF1ZS5vcmc+DQoNClt0aGUgYXJj
aGl2ZV0gPGh0dHA6Ly9hbGFuLnBldGl0ZXBvbW1lLm5ldC9jd24vPg0KDQpbUlNTIGZlZWQgb2Yg
dGhlIGFyY2hpdmVzXSA8aHR0cDovL2FsYW4ucGV0aXRlcG9tbWUubmV0L2N3bi9jd24ucnNzPg0K
DQpbb25saW5lXSA8aHR0cDovL2xpc3RzLmlkeWxsLm9yZy9saXN0aW5mby9jYW1sLW5ld3Mtd2Vl
a2x5Lz4NCg0KW0FsYW4gU2NobWl0dF0gPGh0dHA6Ly9hbGFuLnBldGl0ZXBvbW1lLm5ldC8+DQoN
Cg==
--=-=-=
Content-Type: text/html
Content-Disposition: inline

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2020-12-29 Tue 10:57 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>OCaml Weekly News</title>
<meta name="generator" content="Org mode" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style type="text/css">#table-of-contents h2 { display: none } .title { display: none } .authorname { text-align: right }</style>
<style type="text/css">.outline-2 {border-top: 1px solid black;}</style>
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="content">
<h1 class="title">OCaml Weekly News</h1>
<p>
<a href="http://alan.petitepomme.net/cwn/2020.12.22.html">Previous Week</a> <a href="http://alan.petitepomme.net/cwn/index.html">Up</a> <a href="http://alan.petitepomme.net/cwn/2021.01.05.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of December 22 to 29, 2020.
</p>

<div id="table-of-contents">
<h2>Table of Contents</h2>
<div id="text-table-of-contents">
<ul>
<li><a href="#1">ppx_deriving_yaml 0.1.0</a></li>
<li><a href="#2">A Heroku buildpack for OCaml</a></li>
<li><a href="#3">opam-dune-lint - keep opam and dune dependencies in sync</a></li>
<li><a href="#4">Scirep, a utility for literate programming</a></li>
<li><a href="#5">Camel Calendar for 2021</a></li>
<li><a href="#org972d6af">Old CWN</a></li>
</ul>
</div>
</div>


<div id="outline-container-org72cc626" class="outline-2">
<h2 id="1">ppx_deriving_yaml 0.1.0</h2>
<div class="outline-text-2" id="text-1">
<p>
Archive: <a href="https://discuss.ocaml.org/t/ann-ppx-deriving-yaml-0-1-0/7007/1">https://discuss.ocaml.org/t/ann-ppx-deriving-yaml-0-1-0/7007/1</a>
</p>
</div>

<div id="outline-container-org840acfd" class="outline-3">
<h3 id="org840acfd">Patrick Ferris announced</h3>
<div class="outline-text-3" id="text-org840acfd">
<p>
I'm proud to announce the first release (and my first release) of
<a href="https://github.com/patricoferris/ppx_deriving_yaml">ppx_deriving_yaml</a>. If you are familiar with the
excellent <a href="https://github.com/ocaml-ppx/ppx_deriving_yojson">ppx_deriving_yojson</a> then this library
should come as no surprise. In fact it helped me a lot in writing this ppx, so thank you to its
creators/maintainers.
</p>
</div>

<div id="outline-container-orge3db6f3" class="outline-4">
<h4 id="orge3db6f3">Installation</h4>
<div class="outline-text-4" id="text-orge3db6f3">
<pre class="example">
$ opam update
$ opam install ppx_deriving_yaml
</pre>
</div>
</div>

<div id="outline-container-org811d974" class="outline-4">
<h4 id="org811d974">Usage</h4>
<div class="outline-text-4" id="text-org811d974">
<p>
Ppx_deriving_yaml converts your OCaml types to the "basic" <a href="https://github.com/avsm/ocaml-yaml/blob/6de8fa6926d391334b945754619a64857d352e5d/lib/types.ml#L44">OCaml Yaml value
type</a>
(the one that is currently compatible with ezjsonm). So for example you can have:
</p>

<div class="org-src-container">
<pre class="src src-ocaml"><span style="color: #000000; font-weight: bold;">type</span> <span style="color: #228b22;">t</span> = { title: string; authors: string list } <span style="color: #483d8b;">[@@deriving yaml]</span>

<span style="color: #000000; font-weight: bold;">let</span> () =
  <span style="color: #000000; font-weight: bold;">let</span> <span style="color: #a0522d;">v</span> = { title = <span style="color: #8b2252;">"Yaml PPX!"</span>; authors = [ <span style="color: #8b2252;">"Patrick Ferris"</span> ] } <span style="color: #000000; font-weight: bold;">in</span>
  <span style="color: #000000; font-weight: bold;">let</span> <span style="color: #a0522d;">yaml</span> = to_yaml v <span style="color: #000000; font-weight: bold;">in</span>
  <span style="color: #228b22;">Yaml.</span>pp <span style="color: #228b22;">Format.</span>std_formatter yaml;
  <span style="color: #a020f0;">match</span> of_yaml yaml <span style="color: #a020f0;">with</span>
    | <span style="color: #000000; background-color: #ffffff;">Ok</span> t -&gt; <span style="color: #228b22;">Format.</span>print_string t.title
    | <span style="color: #000000; background-color: #ffffff;">Error</span> (<span style="color: #000000; background-color: #ffffff;">`Msg</span> m) -&gt; <span style="color: #483d8b;">failwith</span> m
</pre>
</div>

<p>
The ppx generates two functions:
</p>

<div class="org-src-container">
<pre class="src src-ocaml"><span style="color: #000000; font-weight: bold;">val</span> <span style="color: #0000ff;">of_yaml</span> : <span style="color: #228b22;">Yaml.</span>value -&gt; t <span style="color: #228b22;">Yaml.</span>res
<span style="color: #000000; font-weight: bold;">val</span> <span style="color: #0000ff;">to_yaml</span> : t -&gt; <span style="color: #228b22;">Yaml.</span>value
</pre>
</div>

<p>
And when built with this dune file:
</p>

<pre class="example">
(executable
 (name main)
 (libraries yaml)
 (preprocess
  (pps ppx_deriving_yaml)))
</pre>

<p>
The following output is generated:
</p>

<div class="org-src-container">
<pre class="src src-yaml">title: Yaml PPX!
authors:
- Patrick Ferris
Yaml PPX!
</pre>
</div>

<p>
The <a href="https://github.com/patricoferris/ppx_deriving_yaml#implementation-details">README</a> contains some
more information and the library is still a little rough around the edges, especially with error
reporting, but I'm currently using it in a few places such as an "ocaml-ified" <a href="https://github.com/patricoferris/opam-github-workflow">github
actions</a> library (ppx_deriving_yaml's <a href="https://github.com/patricoferris/ppx_deriving_yaml/blob/main/.github/workflows/test.yml">test
workflow</a> was
automatically generated with it :sparkles:). This is a nice example of how it can be used in a fairly
straightforward way to generate OCaml versions of the many projects that use Yaml for configuration
files.
</p>

<p>
Happy yaml-ing :)
</p>
</div>
</div>
</div>
</div>




<div id="outline-container-org55bc280" class="outline-2">
<h2 id="2">A Heroku buildpack for OCaml</h2>
<div class="outline-text-2" id="text-2">
<p>
Archive: <a href="https://discuss.ocaml.org/t/ann-a-heroku-buildpack-for-ocaml/7012/1">https://discuss.ocaml.org/t/ann-a-heroku-buildpack-for-ocaml/7012/1</a>
</p>
</div>

<div id="outline-container-org4df84d9" class="outline-3">
<h3 id="org4df84d9">roddy announced</h3>
<div class="outline-text-3" id="text-org4df84d9">
<p>
I wrote <a href="https://github.com/roddyyaga/heroku-buildpack-ocaml">a Heroku buildpack</a> for OCaml web apps
that use opam/dune.
</p>
</div>
</div>
</div>




<div id="outline-container-org1b6fdca" class="outline-2">
<h2 id="3">opam-dune-lint - keep opam and dune dependencies in sync</h2>
<div class="outline-text-2" id="text-3">
<p>
Archive: <a href="https://discuss.ocaml.org/t/ann-opam-dune-lint-keep-opam-and-dune-dependencies-in-sync/7014/1">https://discuss.ocaml.org/t/ann-opam-dune-lint-keep-opam-and-dune-dependencies-in-sync/7014/1</a>
</p>
</div>

<div id="outline-container-orge58e0be" class="outline-3">
<h3 id="orge58e0be">Thomas Leonard announced</h3>
<div class="outline-text-3" id="text-orge58e0be">
<p>
We're pleased to announce the first release of
<a href="https://github.com/ocurrent/opam-dune-lint">opam-dune-lint</a>. This little tool checks that every
ocamlfind dependency listed in your <code>dune</code> files has the corresponding opam package listed as a
dependency in your <code>*.opam</code> file(s).
</p>

<p>
e.g.
</p>

<pre class="example">
$ cd charrua
$ opam dune-lint
charrua-client.opam: changes needed:
  "tcpip" {with-test &amp; &gt;= 6.0.0}           [from test/client, test/client/lwt]
charrua-server.opam: changes needed:
  "ppx_cstruct" {with-test &amp; &gt;= 6.0.0}     [from (ppx), test]
  "tcpip" {with-test &amp; &gt;= 6.0.0}           [from test]
charrua-unix.opam: changes needed:
  "cstruct-lwt" {&gt;= 6.0.0}                 [from unix]
  "ipaddr" {&gt;= 5.0.1}                      [from unix]
  "tcpip" {&gt;= 6.0.0}                       [from unix]
charrua.opam: OK
Note: version numbers are just suggestions based on the currently installed version.
Write changes? [y] y
Wrote "./charrua-client.opam"
Wrote "./charrua-server.opam"
Wrote "./charrua-unix.opam"
</pre>

<p>
If your project generates the opam files from <code>dune-project</code>, then it will update your <code>dune-project</code>
instead.
</p>

<p>
It can also be useful to run this in CI. It will exit with a non-zero exit status if anything needs to
be changed. <a href="https://ci.ocamllabs.io/">ocaml-ci</a> runs this automatically as part of the "lint-opam"
check.
</p>
</div>
</div>
</div>




<div id="outline-container-org89e6a5b" class="outline-2">
<h2 id="4">Scirep, a utility for literate programming</h2>
<div class="outline-text-2" id="text-4">
<p>
Archive: <a href="https://discuss.ocaml.org/t/scirep-a-utility-for-literate-programming/7016/1">https://discuss.ocaml.org/t/scirep-a-utility-for-literate-programming/7016/1</a>
</p>
</div>

<div id="outline-container-org2d2435c" class="outline-3">
<h3 id="org2d2435c">Philippe announced</h3>
<div class="outline-text-3" id="text-org2d2435c">
<p>
I wrote a utility called <a href="https://github.com/pveber/scirep">scirep</a> to render a markdown file with
OCaml code blocks as an HTML document, which provides some support for graphics. Here are some examples
of generated documents: <a href="http://pveber.github.io/scirep/fold.html">one based on vg</a>, and <a href="http://pveber.github.io/scirep/damped.html">another using
owl-plplot</a>.
</p>

<p>
It can also be used downstream of <a href="https://github.com/realworldocaml/mdx">mdx</a> as a markdown-to-html
converter that detects pictures in the toplevel's standard output and renders them in the final
document.
</p>

<p>
It is really a hack, and it is poorly documented, but I'm advertising it in case it might be useful to
others.
</p>
</div>
</div>
</div>




<div id="outline-container-orgdbafb61" class="outline-2">
<h2 id="5">Camel Calendar for 2021</h2>
<div class="outline-text-2" id="text-5">
<p>
Archive: <a href="https://discuss.ocaml.org/t/camel-calendar-for-2021/7020/1">https://discuss.ocaml.org/t/camel-calendar-for-2021/7020/1</a>
</p>
</div>

<div id="outline-container-org1d8edd1" class="outline-3">
<h3 id="org1d8edd1">Florent Monnier announced</h3>
<div class="outline-text-3" id="text-org1d8edd1">
<p>
I would like to share with you a <a href="http://decapode314.free.fr/cal/cal-camel/cal-camel-2021-en.pdf">camel calendar for 2021 in
pdf</a> with the nice theme from ocaml dot
org.
</p>

<p>
It was generated from an ocaml script that you can find in this repo: <a href="https://github.com/fccm/ocaml-cal-svg">svg calendar
generator</a>.
</p>

<p>
Several scripts are available, you can find some results on this <a href="http://decapode314.free.fr/cal/">web
page</a>.
</p>

<p>
At the beginning of 2020 I was searching for a free software to generate calendars in SVG that I could
customise for my own use, but I was unable to install the Perl script that exists (it has a lot of
dependencies and the error message when I try to install it didn't help us to find what's wrong with
it).
</p>

<p>
This explains the design of these scripts, that are made to work without any dependencies and without
any compilation. There's code duplication, but every script only need the ocaml interpreter to be run,
so most people comfortable with the command line should be able to use it.
</p>

<p>
(I also tried to sell some <a href="https://www.etsy.com/fr/shop/Decapode">on Etsy</a> but didn't sold a single
one.)
</p>

<p>
By default 12 languages are included in every script, but you can generate the calendars for more than
200 languages if you use <a href="https://github.com/fccm/DateLocale-ocaml">these dates locales</a> that come from
the CLDR repository.
</p>

<p>
You can also switch monday first or sunday first.
</p>

<p>
These generators are provided under Zlib license.
</p>

<p>
I hope some will enjoy!
</p>
</div>
</div>
</div>




<div id="outline-container-org972d6af" class="outline-2">
<h2 id="org972d6af">Old CWN</h2>
<div class="outline-text-2" id="text-org972d6af">
<p>
If you happen to miss a CWN, you can <a href="mailto:alan.schmitt@polytechnique.org">send me a message</a> and I'll mail it to you, or go take a look at <a href="http://alan.petitepomme.net/cwn/">the archive</a> or the <a href="http://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archives</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a href="http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class="authorname">
<p>
<a href="http://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--
