Return-Path: <lukstafi@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 002AE7F707
	for <caml-list@sympa.inria.fr>; Tue, 10 Dec 2013 23:52:24 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  lukstafi@gmail.com) identity=pra; client-ip=74.125.82.49;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="lukstafi@gmail.com";
  x-sender="lukstafi@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  lukstafi@gmail.com designates 74.125.82.49 as permitted
  sender) identity=mailfrom; client-ip=74.125.82.49;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="lukstafi@gmail.com";
  x-sender="lukstafi@gmail.com"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-wg0-f49.google.com) identity=helo;
  client-ip=74.125.82.49;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="lukstafi@gmail.com";
  x-sender="postmaster@mail-wg0-f49.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvECANOap1JKfVIxlGdsb2JhbABZDoQEuSGBGAgWDgEBAQEHCwsJEiqCJQEBBAEnGQEbHQEDDAYFBAc7IgERAQUBHAYTh28BAwkGpV+MWYMJhD0KGScNZIYDEQEFDI55B4Q0BJgUkCYYKYQWQDs
X-IPAS-Result: AvECANOap1JKfVIxlGdsb2JhbABZDoQEuSGBGAgWDgEBAQEHCwsJEiqCJQEBBAEnGQEbHQEDDAYFBAc7IgERAQUBHAYTh28BAwkGpV+MWYMJhD0KGScNZIYDEQEFDI55B4Q0BJgUkCYYKYQWQDs
X-IronPort-AV: E=Sophos;i="4.93,867,1378850400"; 
   d="scan'208";a="48163571"
Received: from mail-wg0-f49.google.com ([74.125.82.49])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 10 Dec 2013 23:52:17 +0100
Received: by mail-wg0-f49.google.com with SMTP id x12so5550243wgg.4
        for <caml-list@inria.fr>; Tue, 10 Dec 2013 14:52:16 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=Qpg1BcZUBFa6LJmY5/XaL48oYh7bL8SqAUxR9HOELGY=;
        b=RVO7x1i+RYEG5smlUWKyC6/AOc41K2Gjeidj6zvBWjKyYcjFzEdEeM5Ve7fEgCJEsO
         t/K1zgi42HpfGLyLLcbX1UmnyPhWcqxTOrlmN3yx8v5q2HrU/Do9AUAPGi1eCvHViJUL
         OtVuiWo+Bvrk+e27mCIEuOWGxe+Kc9w9Rzjj7NoHPzjMRV9K4aMZazMfl1/lPa83fGvY
         inQq7x6+6DiS0cIyhgIGXzTXtUi9lD2oJnu0ax/TGwg5EzQmz0FDFs6E/gD6bp1R5OiW
         OvgXm38G7koBsr6Xe0NdXaGVw8zn4eSikGJry5nOLo+DLw0AhFDTDPhaJVdGtS9oY7qk
         YBKA==
X-Received: by 10.194.95.198 with SMTP id dm6mr13571316wjb.57.1386715936127;
 Tue, 10 Dec 2013 14:52:16 -0800 (PST)
MIME-Version: 1.0
Received: by 10.227.36.201 with HTTP; Tue, 10 Dec 2013 14:51:56 -0800 (PST)
In-Reply-To: <83E00BC5-3599-4702-873E-0FD6863050CC@math.nagoya-u.ac.jp>
References: <CAJMfKEWLZdj8ceGxOUU=uUFdrH8aE+emiY5_eLfOHzfqoPwpqA@mail.gmail.com>
 <CAJMfKEU6=ddcuFHj909L9kU0B1jN3kYm-aXY24th8b6vtaV9_A@mail.gmail.com>
 <CAJMfKEWEcbFaQs2fPRj9xah+RTSkpmywpg2fsbusmacndViXQg@mail.gmail.com>
 <CAJMfKEUWRYj5w23-3EOSJuoMGhuAX+164rAE_+fKwvArfYA4hw@mail.gmail.com>
 <CAJMfKEUURCt4hs9sUNpextFZOafcRz=cQNm0i0uPwfyeZiNuvA@mail.gmail.com>
 <CAJMfKEW9TVbuBWwwA+6zwKS+dr0kmOW_fWDD+Z=PcT0+m7ADqw@mail.gmail.com> <83E00BC5-3599-4702-873E-0FD6863050CC@math.nagoya-u.ac.jp>
From: Lukasz Stafiniak <lukstafi@gmail.com>
Date: Tue, 10 Dec 2013 23:51:56 +0100
Message-ID: <CAJMfKEWY2EUtpzLX8KWUMOK7=dGvGmNcDBwLZxERMa3MTNdoqA@mail.gmail.com>
To: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
Cc: OCaml Mailing List <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=047d7bb03a50c7014604ed35f6de
Subject: Re: [Caml-list] Polymorphic recursion and GADTs

--047d7bb03a50c7014604ed35f6de
Content-Type: text/plain; charset=ISO-8859-1

On Tue, Dec 10, 2013 at 11:43 PM, Jacques Garrigue <
garrigue@math.nagoya-u.ac.jp> wrote:

>
> As always, Gabriel's answer is correct, but I have two remarks.
> First, concerning your first example where you needed annotations on the
> local function,
> you can actually avoid that by using pattern matching rather than function
> application:
>
> I realized that after posting :-)


>
> Now, for the above example, of course you don't need to annotate the
> "function" construct,
> but if you want to name the rigid variables 't47 and 't59, you can do that
> through eta-expansion:
>
> let rec eval : type a . (a term -> a) =
>   function Lit i -> i | IsZero x -> is_zero (eval x)
>     | Plus (x, y) -> plus (eval x) (eval y)
>     | If (b, t, e) -> if_then (eval b) (eval t) (eval e)
>     | Pair (x, y) -> (eval x, eval y)
>     | Fst p -> (fun (type b) p -> let ((x, y): (a * b)) = eval p in x) p
>     | Snd p -> (fun (type b) p -> let ((x, y): (b * a)) = eval p in y) p
>
> Not very clean, so we need to do something about it.
>
> I do not need it, I am just exploring ways of outputting that information
in case someone would find it useful (under the big conditional that
someone would find InvarGenT useful in the first place, rather than just
cool...)

--047d7bb03a50c7014604ed35f6de
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_extra"><div class=3D"gmail_quote">On T=
ue, Dec 10, 2013 at 11:43 PM, Jacques Garrigue <span dir=3D"ltr">&lt;<a hre=
f=3D"mailto:garrigue@math.nagoya-u.ac.jp" target=3D"_blank">garrigue@math.n=
agoya-u.ac.jp</a>&gt;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex"><div class=3D"HOEnZb"><div class=3D"h5"><br>
</div></div>As always, Gabriel&#39;s answer is correct, but I have two rema=
rks.<br>
First, concerning your first example where you needed annotations on the lo=
cal function,<br>
you can actually avoid that by using pattern matching rather than function =
application:<br>
<div class=3D"im"><br></div></blockquote><div>I realized that after posting=
 :-)</div><div>=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0=
 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div class=3D"im"><b=
r></div>

Now, for the above example, of course you don&#39;t need to annotate the &q=
uot;function&quot; construct,<br>
but if you want to name the rigid variables &#39;t47 and &#39;t59, you can =
do that through eta-expansion:<br>
<div class=3D"im"><br>
let rec eval : type a . (a term -&gt; a) =3D<br>
</div><div class=3D"im">=A0 function Lit i -&gt; i | IsZero x -&gt; is_zero=
 (eval x)<br>
=A0 =A0 | Plus (x, y) -&gt; plus (eval x) (eval y)<br>
=A0 =A0 | If (b, t, e) -&gt; if_then (eval b) (eval t) (eval e)<br>
=A0 =A0 | Pair (x, y) -&gt; (eval x, eval y)<br>
</div>=A0 =A0 | Fst p -&gt; (fun (type b) p -&gt; let ((x, y): (a * b)) =3D=
 eval p in x) p<br>
=A0 =A0 | Snd p -&gt; (fun (type b) p -&gt; let ((x, y): (b * a)) =3D eval =
p in y) p<br>
<br>
Not very clean, so we need to do something about it.<br>
<span class=3D"HOEnZb"><font color=3D"#888888"><br></font></span></blockquo=
te><div>I do not need it, I am just exploring ways of outputting that infor=
mation in case someone would find it useful (under the big conditional that=
 someone would find InvarGenT useful in the first place, rather than just c=
ool...)</div>

</div></div></div>

--047d7bb03a50c7014604ed35f6de--
