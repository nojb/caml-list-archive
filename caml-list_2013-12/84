Return-Path: <gmalecha@cs.harvard.edu>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 996887EE99
	for <caml-list@sympa.inria.fr>; Wed, 11 Dec 2013 21:28:54 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  gmalecha@cs.harvard.edu) identity=pra;
  client-ip=140.247.173.28;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gmalecha@cs.harvard.edu";
  x-sender="gmalecha@cs.harvard.edu";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  gmalecha@cs.harvard.edu) identity=mailfrom;
  client-ip=140.247.173.28;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gmalecha@cs.harvard.edu";
  x-sender="gmalecha@cs.harvard.edu";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail.eecs.harvard.edu) identity=helo;
  client-ip=140.247.173.28;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gmalecha@cs.harvard.edu";
  x-sender="postmaster@mail.eecs.harvard.edu";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aq8BAMnKqFKM960cnGdsb2JhbABZFoMpU4MDo1GTI4EVHg4BAQEBAQgUCTyCJQEBBAEjVgULCQILDSoCAiEBEgEFARwGEwiHaAMJBg2WW49bjAaIUw1XhjsXjHWCEweCbIFIBIlCjGeBa4EwiyqDTBgphHM
X-IPAS-Result: Aq8BAMnKqFKM960cnGdsb2JhbABZFoMpU4MDo1GTI4EVHg4BAQEBAQgUCTyCJQEBBAEjVgULCQILDSoCAiEBEgEFARwGEwiHaAMJBg2WW49bjAaIUw1XhjsXjHWCEweCbIFIBIlCjGeBa4EwiyqDTBgphHM
X-IronPort-AV: E=Sophos;i="4.93,873,1378850400"; 
   d="scan'208";a="40549284"
Received: from eecs-mail.seas.harvard.edu (HELO mail.eecs.harvard.edu) ([140.247.173.28])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 11 Dec 2013 21:28:37 +0100
Received: from mail-vc0-f182.google.com (mail-vc0-f182.google.com [209.85.220.182])
	(using TLSv1 with cipher RC4-SHA (128/128 bits))
	(No client certificate requested)
	by mail.eecs.harvard.edu (Postfix) with ESMTP id 09B21B0202
	for <caml-list@inria.fr>; Wed, 11 Dec 2013 15:28:36 -0500 (EST)
Received: by mail-vc0-f182.google.com with SMTP id lc6so5985521vcb.41
        for <caml-list@inria.fr>; Wed, 11 Dec 2013 12:28:35 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=DymHgyrgyssr7fygxVxq8tHcsPHcatQKay5Ty6dLteY=;
        b=ICODXImaT6Dj1wHV/qrMbB3Apt9HdpiOfbsYZRC0qP+hLjM0jHqf50lbmVOCMhRDAx
         9bXm4H/MTg4id2n9Yl0EhxIHX3iZrMe6KwAUU56Rz8rJgYtwPauvVuKCR9triX0DxwDM
         eY4mzKpQDUI4hbRpBXwif28ch1C+3b9C9XoDXeJDMWQgZMNgCrENu7aRNRrbgjS3PKkd
         VkiaAzEBJpSCQUlE9+UXubmhh64JhNbgX2RLUBc8LmcP8W3g1dPYksOtfqV3yUWVVUEz
         +d/wj2/wYX7FuiTT1U1h/DhzoEFDRpcRitt/KO6EmkEn+tFKdLFWmYvQgYIwQwvokoOA
         aBaQ==
X-Received: by 10.58.210.66 with SMTP id ms2mr1401728vec.10.1386793715737;
 Wed, 11 Dec 2013 12:28:35 -0800 (PST)
MIME-Version: 1.0
Received: by 10.52.181.37 with HTTP; Wed, 11 Dec 2013 12:27:55 -0800 (PST)
In-Reply-To: <CAPFanBEndoUa2nd0w9h54tLdaZ_R7_tW6wupHU4E8We+qZGkhg@mail.gmail.com>
References: <CAGraiHJiA5mG8HGz8ShjmPgaOXsydpgPK6Orbamu4tnx9cBy3g@mail.gmail.com>
 <CAPFanBEndoUa2nd0w9h54tLdaZ_R7_tW6wupHU4E8We+qZGkhg@mail.gmail.com>
From: Gregory Malecha <gmalecha@cs.harvard.edu>
Date: Wed, 11 Dec 2013 15:27:55 -0500
Message-ID: <CAGraiHKhp+yYvqzzZrEfm0Yj14GWMW_n7n6gpojywOJk7EUfww@mail.gmail.com>
To: Gabriel Scherer <gabriel.scherer@gmail.com>
Cc: caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=047d7bd6ae8ccdb0df04ed481288
X-Validation-by: gmalecha@cs.harvard.edu
Subject: Re: [Caml-list] ocamlbuild plugins and external libraries

--047d7bd6ae8ccdb0df04ed481288
Content-Type: text/plain; charset=UTF-8

Thanks Gabriel --

I couldn't figure out how to get the package included, which you do with
-use-ocamlfind.


On Wed, Dec 11, 2013 at 1:03 AM, Gabriel Scherer
<gabriel.scherer@gmail.com>wrote:

> Since 4.01, ocamlbuild supports a new (experimental) option "-plugin-tag"
> that allows to specify (built-in) ocamlbuild tags to use when compiling
> myocamlbuild.ml. If you package coq-paths using findlib, you can then use
>
>   ocamlbuild -use-ocamlfind -plugin-tag "package(coq-path)" ...
>
>
> On Tue, Dec 10, 2013 at 11:20 PM, Gregory Malecha <gmalecha@cs.harvard.edu
> > wrote:
>
>> Hello --
>>
>> I have several ocamlbuild plugins that are very similar and I'm trying to
>> figure out how to refactor them. I pulled out a bunch of definitions into
>> another file (coq_paths.ml) and then said 'open Coq_paths' in '
>> myocamlbuild.ml'. But when I do this, ocamlbuild can no longer build the
>> plugin, not even if foo.cmo already exists in the _build directory.
>>
>> After hacking on this for a long time (and digging through the ocamlbuild
>> sources) I found that you can write a Makefile that will build
>> myocamlbuild.cmo using ocamlbuild without a plugin, and then manually link
>> this against ocamlbuild.cmo and to produce a custom version of ocamlbuild
>> that uses the plugin (this is exactly what ocamlbuild does). My question
>> is: 'is there any nicer way to do this?' I'm including my Makefile below:
>>
>> OCAMLBUILDDIR=$(shell ocamlfind query ocamlbuild)
>>
>> all: _build/coq_builder
>>         @ ./_build/coq_builder -no-plugin coq.otarget
>>
>> _build/coq_builder: myocamlbuild.ml coq_paths.ml
>>         @ echo "building builder...."
>>         @ ocamlbuild -cflags -I,`ocamlfind query ocamlbuild` -no-plugin
>> myocamlbuild.cmo
>>         @ ocamlc.opt unix.cma -I $(OCAMLBUILDDIR)
>> $(OCAMLBUILDDIR)/ocamlbuildlib.cma \
>>            _build/coq_paths.cmo _build/myocamlbuild.cmo \
>>            $(OCAMLBUILDDIR)/ocamlbuild.cmo -o _build/coq_builder
>>         @ echo "done"
>>
>> clean:
>>         ocamlbuild -clean
>>
>> Thanks in advance.
>>
>> --
>> gregory malecha
>> http://www.people.fas.harvard.edu/~gmalecha/
>>
>
>


-- 
gregory malecha
http://www.people.fas.harvard.edu/~gmalecha/

--047d7bd6ae8ccdb0df04ed481288
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Thanks Gabriel --<div><br></div><div>I couldn&#39;t figure=
 out how to get the package included, which you do with -use-ocamlfind.</di=
v></div><div class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On We=
d, Dec 11, 2013 at 1:03 AM, Gabriel Scherer <span dir=3D"ltr">&lt;<a href=
=3D"mailto:gabriel.scherer@gmail.com" target=3D"_blank">gabriel.scherer@gma=
il.com</a>&gt;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex"><div dir=3D"ltr"><div>Since 4.01, ocamlbuild=
 supports a new (experimental) option &quot;-plugin-tag&quot; that allows t=
o specify (built-in) ocamlbuild tags to use when compiling <a href=3D"http:=
//myocamlbuild.ml" target=3D"_blank">myocamlbuild.ml</a>. If you package co=
q-paths using findlib, you can then use<br>



</div><br>=C2=A0 ocamlbuild -use-ocamlfind -plugin-tag &quot;package(coq-pa=
th)&quot; ...<br><div><div></div></div></div><div class=3D"HOEnZb"><div cla=
ss=3D"h5"><div class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On =
Tue, Dec 10, 2013 at 11:20 PM, Gregory Malecha <span dir=3D"ltr">&lt;<a hre=
f=3D"mailto:gmalecha@cs.harvard.edu" target=3D"_blank">gmalecha@cs.harvard.=
edu</a>&gt;</span> wrote:<br>



<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex"><div dir=3D"ltr">Hello --<div><br></div><div=
>I have several ocamlbuild plugins that are very similar and I&#39;m trying=
 to figure out how to refactor them. I pulled out a bunch of definitions in=
to another file (<a href=3D"http://coq_paths.ml" target=3D"_blank">coq_path=
s.ml</a>) and then said &#39;open Coq_paths&#39; in &#39;<a href=3D"http://=
myocamlbuild.ml" target=3D"_blank">myocamlbuild.ml</a>&#39;. But when I do =
this, ocamlbuild can no longer build the plugin, not even if foo.cmo alread=
y exists in the _build directory.</div>





<div><br></div><div>After hacking on this for a long time (and digging thro=
ugh the ocamlbuild sources) I found that you can write a Makefile that will=
 build myocamlbuild.cmo using ocamlbuild without a plugin, and then manuall=
y link this against ocamlbuild.cmo and to produce a custom version of ocaml=
build that uses the plugin (this is exactly what ocamlbuild does). My quest=
ion is: &#39;is there any nicer way to do this?&#39; I&#39;m including my M=
akefile below:</div>





<div><br></div><div><div><font face=3D"courier new, monospace">OCAMLBUILDDI=
R=3D$(shell ocamlfind query ocamlbuild)</font></div><div><font face=3D"cour=
ier new, monospace"><br></font></div><div><font face=3D"courier new, monosp=
ace">all: _build/coq_builder</font></div>





<div><font face=3D"courier new, monospace">=C2=A0 =C2=A0 =C2=A0 =C2=A0 @ ./=
_build/coq_builder -no-plugin coq.otarget</font></div><div><font face=3D"co=
urier new, monospace"><br></font></div><div><font face=3D"courier new, mono=
space">_build/coq_builder: <a href=3D"http://myocamlbuild.ml" target=3D"_bl=
ank">myocamlbuild.ml</a> <a href=3D"http://coq_paths.ml" target=3D"_blank">=
coq_paths.ml</a></font></div>





<div><font face=3D"courier new, monospace">=C2=A0 =C2=A0 =C2=A0 =C2=A0 @ ec=
ho &quot;building builder....&quot;</font></div><div><font face=3D"courier =
new, monospace">=C2=A0 =C2=A0 =C2=A0 =C2=A0 @ ocamlbuild -cflags -I,`ocamlf=
ind query ocamlbuild` -no-plugin myocamlbuild.cmo</font></div>





<div><font face=3D"courier new, monospace">=C2=A0 =C2=A0 =C2=A0 =C2=A0 @ oc=
amlc.opt unix.cma -I $(OCAMLBUILDDIR) $(OCAMLBUILDDIR)/ocamlbuildlib.cma \<=
/font></div><div><font face=3D"courier new, monospace">=C2=A0 =C2=A0 =C2=A0=
 =C2=A0 =C2=A0 =C2=A0_build/coq_paths.cmo _build/myocamlbuild.cmo \</font><=
/div>





<div><font face=3D"courier new, monospace">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0$(OCAMLBUILDDIR)/ocamlbuild.cmo -o _build/coq_builder</font></div=
><div><font face=3D"courier new, monospace">=C2=A0 =C2=A0 =C2=A0 =C2=A0 @ e=
cho &quot;done&quot;</font></div><div><font face=3D"courier new, monospace"=
><br>





</font></div><div><font face=3D"courier new, monospace">clean:</font></div>=
<div><font face=3D"courier new, monospace">=C2=A0 =C2=A0 =C2=A0 =C2=A0 ocam=
lbuild -clean</font></div><div><font face=3D"courier new, monospace"><br></=
font></div><div><font face=3D"arial, helvetica, sans-serif">Thanks in advan=
ce.</font></div>



<span><font color=3D"#888888">

<div><br></div>-- <br><div dir=3D"ltr">gregory malecha<br><div><a href=3D"h=
ttp://www.people.fas.harvard.edu/~gmalecha/" target=3D"_blank">http://www.p=
eople.fas.harvard.edu/~gmalecha/</a></div></div>
</font></span></div></div>
</blockquote></div><br></div>
</div></div></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>=
<div dir=3D"ltr">gregory malecha<br><div><a href=3D"http://www.people.fas.h=
arvard.edu/~gmalecha/" target=3D"_blank">http://www.people.fas.harvard.edu/=
~gmalecha/</a></div>

</div>
</div>

--047d7bd6ae8ccdb0df04ed481288--
