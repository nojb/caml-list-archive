Return-Path: <gabriel.scherer@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 1FB637EE99
	for <caml-list@sympa.inria.fr>; Wed, 11 Dec 2013 07:04:16 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  gabriel.scherer@gmail.com) identity=pra;
  client-ip=209.85.214.48;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  gabriel.scherer@gmail.com designates 209.85.214.48 as
  permitted sender) identity=mailfrom; client-ip=209.85.214.48;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-bk0-f48.google.com) identity=helo;
  client-ip=209.85.214.48;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="postmaster@mail-bk0-f48.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ArACANr/p1LRVdYwm2dsb2JhbABZDgiDKVOmYYlxiFGBGAgWDgEBAQEBBgsLCRQogiUBAQQBQAEbHQEDAQsGBQsDOCIBEQEFARwGE4dvAQMJBg2lcIxZgwmEPQoZJw1khgMRAQUMjnkHhDQEmBSBMIssg0oYKYQWQDs
X-IPAS-Result: ArACANr/p1LRVdYwm2dsb2JhbABZDgiDKVOmYYlxiFGBGAgWDgEBAQEBBgsLCRQogiUBAQQBQAEbHQEDAQsGBQsDOCIBEQEFARwGE4dvAQMJBg2lcIxZgwmEPQoZJw1khgMRAQUMjnkHhDQEmBSBMIssg0oYKYQWQDs
X-IronPort-AV: E=Sophos;i="4.93,870,1378850400"; 
   d="scan'208";a="48208468"
Received: from mail-bk0-f48.google.com ([209.85.214.48])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 11 Dec 2013 07:03:57 +0100
Received: by mail-bk0-f48.google.com with SMTP id r7so123872bkg.35
        for <caml-list@inria.fr>; Tue, 10 Dec 2013 22:03:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=yrJJmVbJvu73Khh8Odmkx8Q1qRKo/Vh5+xgKrkfbfu4=;
        b=wxKK86MlScg45nfU+4RQwwIAIo4V3bVyGK1VL+UHGiBzusxdr0HL3q7TzxGUjmBd/Y
         mztS12cXy5uT4RmBh7IqU2J0c80TyRnB18DJdJUkYbeZm876xA2G3isRb8upvRStfNd3
         4AmW+QtI/Zif0qorJpq6heYRRLOiFDkE+5RBb66XwJwqhwYpufVhuLC1TSvjPatBTj1B
         wQryQWkuBI8yt9q+0E7Yt4w82W4nCkEQ5uWzJEUJVts0IgrqMU1peDoaOQ6T7C7gxKSD
         UA0ZXgreKp/8LuEW73Nulg22+mramXbR2Siba1ORoIEn0Zo1QZweSCEx1UrOffGkAHNx
         CLtA==
X-Received: by 10.204.172.145 with SMTP id l17mr609615bkz.26.1386741836715;
 Tue, 10 Dec 2013 22:03:56 -0800 (PST)
MIME-Version: 1.0
Received: by 10.204.122.72 with HTTP; Tue, 10 Dec 2013 22:03:16 -0800 (PST)
In-Reply-To: <CAGraiHJiA5mG8HGz8ShjmPgaOXsydpgPK6Orbamu4tnx9cBy3g@mail.gmail.com>
References: <CAGraiHJiA5mG8HGz8ShjmPgaOXsydpgPK6Orbamu4tnx9cBy3g@mail.gmail.com>
From: Gabriel Scherer <gabriel.scherer@gmail.com>
Date: Wed, 11 Dec 2013 07:03:16 +0100
Message-ID: <CAPFanBEndoUa2nd0w9h54tLdaZ_R7_tW6wupHU4E8We+qZGkhg@mail.gmail.com>
To: Gregory Malecha <gmalecha@cs.harvard.edu>
Cc: caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=bcaec52c5f5b92c2cc04ed3bfef9
Subject: Re: [Caml-list] ocamlbuild plugins and external libraries

--bcaec52c5f5b92c2cc04ed3bfef9
Content-Type: text/plain; charset=ISO-8859-1

Since 4.01, ocamlbuild supports a new (experimental) option "-plugin-tag"
that allows to specify (built-in) ocamlbuild tags to use when compiling
myocamlbuild.ml. If you package coq-paths using findlib, you can then use

  ocamlbuild -use-ocamlfind -plugin-tag "package(coq-path)" ...


On Tue, Dec 10, 2013 at 11:20 PM, Gregory Malecha
<gmalecha@cs.harvard.edu>wrote:

> Hello --
>
> I have several ocamlbuild plugins that are very similar and I'm trying to
> figure out how to refactor them. I pulled out a bunch of definitions into
> another file (coq_paths.ml) and then said 'open Coq_paths' in '
> myocamlbuild.ml'. But when I do this, ocamlbuild can no longer build the
> plugin, not even if foo.cmo already exists in the _build directory.
>
> After hacking on this for a long time (and digging through the ocamlbuild
> sources) I found that you can write a Makefile that will build
> myocamlbuild.cmo using ocamlbuild without a plugin, and then manually link
> this against ocamlbuild.cmo and to produce a custom version of ocamlbuild
> that uses the plugin (this is exactly what ocamlbuild does). My question
> is: 'is there any nicer way to do this?' I'm including my Makefile below:
>
> OCAMLBUILDDIR=$(shell ocamlfind query ocamlbuild)
>
> all: _build/coq_builder
>         @ ./_build/coq_builder -no-plugin coq.otarget
>
> _build/coq_builder: myocamlbuild.ml coq_paths.ml
>         @ echo "building builder...."
>         @ ocamlbuild -cflags -I,`ocamlfind query ocamlbuild` -no-plugin
> myocamlbuild.cmo
>         @ ocamlc.opt unix.cma -I $(OCAMLBUILDDIR)
> $(OCAMLBUILDDIR)/ocamlbuildlib.cma \
>            _build/coq_paths.cmo _build/myocamlbuild.cmo \
>            $(OCAMLBUILDDIR)/ocamlbuild.cmo -o _build/coq_builder
>         @ echo "done"
>
> clean:
>         ocamlbuild -clean
>
> Thanks in advance.
>
> --
> gregory malecha
> http://www.people.fas.harvard.edu/~gmalecha/
>

--bcaec52c5f5b92c2cc04ed3bfef9
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>Since 4.01, ocamlbuild supports a new (experimental) =
option &quot;-plugin-tag&quot; that allows to specify (built-in) ocamlbuild=
 tags to use when compiling <a href=3D"http://myocamlbuild.ml">myocamlbuild=
.ml</a>. If you package coq-paths using findlib, you can then use<br>

</div><br>=A0 ocamlbuild -use-ocamlfind -plugin-tag &quot;package(coq-path)=
&quot; ...<br><div><div></div></div></div><div class=3D"gmail_extra"><br><b=
r><div class=3D"gmail_quote">On Tue, Dec 10, 2013 at 11:20 PM, Gregory Male=
cha <span dir=3D"ltr">&lt;<a href=3D"mailto:gmalecha@cs.harvard.edu" target=
=3D"_blank">gmalecha@cs.harvard.edu</a>&gt;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex"><div dir=3D"ltr">Hello --<div><br></div><div=
>I have several ocamlbuild plugins that are very similar and I&#39;m trying=
 to figure out how to refactor them. I pulled out a bunch of definitions in=
to another file (<a href=3D"http://coq_paths.ml" target=3D"_blank">coq_path=
s.ml</a>) and then said &#39;open Coq_paths&#39; in &#39;<a href=3D"http://=
myocamlbuild.ml" target=3D"_blank">myocamlbuild.ml</a>&#39;. But when I do =
this, ocamlbuild can no longer build the plugin, not even if foo.cmo alread=
y exists in the _build directory.</div>



<div><br></div><div>After hacking on this for a long time (and digging thro=
ugh the ocamlbuild sources) I found that you can write a Makefile that will=
 build myocamlbuild.cmo using ocamlbuild without a plugin, and then manuall=
y link this against ocamlbuild.cmo and to produce a custom version of ocaml=
build that uses the plugin (this is exactly what ocamlbuild does). My quest=
ion is: &#39;is there any nicer way to do this?&#39; I&#39;m including my M=
akefile below:</div>



<div><br></div><div><div><font face=3D"courier new, monospace">OCAMLBUILDDI=
R=3D$(shell ocamlfind query ocamlbuild)</font></div><div><font face=3D"cour=
ier new, monospace"><br></font></div><div><font face=3D"courier new, monosp=
ace">all: _build/coq_builder</font></div>



<div><font face=3D"courier new, monospace">=A0 =A0 =A0 =A0 @ ./_build/coq_b=
uilder -no-plugin coq.otarget</font></div><div><font face=3D"courier new, m=
onospace"><br></font></div><div><font face=3D"courier new, monospace">_buil=
d/coq_builder: <a href=3D"http://myocamlbuild.ml" target=3D"_blank">myocaml=
build.ml</a> <a href=3D"http://coq_paths.ml" target=3D"_blank">coq_paths.ml=
</a></font></div>



<div><font face=3D"courier new, monospace">=A0 =A0 =A0 =A0 @ echo &quot;bui=
lding builder....&quot;</font></div><div><font face=3D"courier new, monospa=
ce">=A0 =A0 =A0 =A0 @ ocamlbuild -cflags -I,`ocamlfind query ocamlbuild` -n=
o-plugin myocamlbuild.cmo</font></div>



<div><font face=3D"courier new, monospace">=A0 =A0 =A0 =A0 @ ocamlc.opt uni=
x.cma -I $(OCAMLBUILDDIR) $(OCAMLBUILDDIR)/ocamlbuildlib.cma \</font></div>=
<div><font face=3D"courier new, monospace">=A0 =A0 =A0 =A0 =A0 =A0_build/co=
q_paths.cmo _build/myocamlbuild.cmo \</font></div>



<div><font face=3D"courier new, monospace">=A0 =A0 =A0 =A0 =A0 =A0$(OCAMLBU=
ILDDIR)/ocamlbuild.cmo -o _build/coq_builder</font></div><div><font face=3D=
"courier new, monospace">=A0 =A0 =A0 =A0 @ echo &quot;done&quot;</font></di=
v><div><font face=3D"courier new, monospace"><br>



</font></div><div><font face=3D"courier new, monospace">clean:</font></div>=
<div><font face=3D"courier new, monospace">=A0 =A0 =A0 =A0 ocamlbuild -clea=
n</font></div><div><font face=3D"courier new, monospace"><br></font></div><=
div><font face=3D"arial, helvetica, sans-serif">Thanks in advance.</font></=
div>

<span class=3D"HOEnZb"><font color=3D"#888888">

<div><br></div>-- <br><div dir=3D"ltr">gregory malecha<br><div><a href=3D"h=
ttp://www.people.fas.harvard.edu/~gmalecha/" target=3D"_blank">http://www.p=
eople.fas.harvard.edu/~gmalecha/</a></div></div>
</font></span></div></div>
</blockquote></div><br></div>

--bcaec52c5f5b92c2cc04ed3bfef9--
