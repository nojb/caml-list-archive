Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA00795 for caml-redistribution; Fri, 29 Jan 1999 18:47:53 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA10631 for <caml-list@pauillac.inria.fr>; Fri, 29 Jan 1999 13:47:30 +0100 (MET)
Received: from miss.wu-wien.ac.at (miss.wu-wien.ac.at [137.208.107.17])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id NAA06706
	for <caml-list@inria.fr>; Fri, 29 Jan 1999 13:47:24 +0100 (MET)
Received: (from mottl@localhost)
	by miss.wu-wien.ac.at (8.9.0/8.9.0) id NAA16185;
	Fri, 29 Jan 1999 13:47:22 +0100 (MET)
From: Markus Mottl <mottl@miss.wu-wien.ac.at>
Message-Id: <199901291247.NAA16185@miss.wu-wien.ac.at>
Subject: Re: If i had a hammer...
To: Gerd.Stolpmann@darmstadt.netsurf.de
Date: Fri, 29 Jan 1999 13:47:22 +0100 (MET)
Cc: caml-list@inria.fr (OCAML)
In-Reply-To: <99012822230502.10116@schneemann> from "Gerd Stolpmann" at Jan 28, 99 10:24:28 pm
X-Mailer: ELM [version 2.4 PL21]
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
Sender: weis

> - Define a standard for documentation (very important for free software
>   development) -- we can simply use an existing one such as 'info'
>   or 'perldoc', or simply define a directory structure for html-pages

Good documentation is certainly a necessity!

> - Define a standard how to compile and install projects such that they
>   can be used together
> 
> For the latter, I think a meta-makefile mechanism would be appropriate.
> As Ocaml links always statically, there should be a tool
> 
> - that has as input a descriptive request what modules should be linked in
> 
> - that outputs a perfect Makefile that knows the linking order and automatically
>   calls ocamlc/ocamlopt/ocamlmktop -- whatever meets the given requests best

Although certainly not perfect (improvement suggestions welcome),
you might want to download my Makefiles which automate a great part
of the building process: it handles ocamllex- and ocamlyacc-files,
threads-library, automatic dependency calculation, building of byte code
and native code, as executable or as library.

Link: http://miss.wu-wien.ac.at/~mottl/ocaml_sources/intro.html

The distribution comes with an example.

[snip]
> read manuals very carefully to get the modules working. It should not be
> necessary to study and configure makefiles to do a simple thing like a
> software installation (people often think that installation is a simple
> process and a more or less an unproductive task).

What I really like about the distribution of OCAML and its tools: they
compile out-of-the-box (at least on all the machines I've tested).
Whoever has tried to compile or correctly install e.g. Mercury or (my
god!!) GHC, is certainly able to honour this...

Best regards,
Markus

-- 
Markus Mottl, mottl@miss.wu-wien.ac.at, http://miss.wu-wien.ac.at/~mottl



