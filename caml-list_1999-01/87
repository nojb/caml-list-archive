Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA27641 for caml-redistribution; Sun, 24 Jan 1999 22:39:26 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA29736 for <caml-list@pauillac.inria.fr>; Sun, 24 Jan 1999 22:25:40 +0100 (MET)
Received: from goose.prod.itd.earthlink.net (goose.prod.itd.earthlink.net [207.217.120.18])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id WAA08341
	for <caml-list@inria.fr>; Sun, 24 Jan 1999 22:25:37 +0100 (MET)
Received: from maya (1Cust241.tnt1.league-city.tx.da.uu.net [208.251.183.241])
	by goose.prod.itd.earthlink.net (8.8.7/8.8.5) with SMTP id NAA15936
	for <caml-list@inria.fr>; Sun, 24 Jan 1999 13:25:36 -0800 (PST)
From: Miles Egan <cullenx@earthlink.net>
Reply-To: cullenx@earthlink.net
To: caml-list@inria.fr
Subject: Looking for a nail
Date: Sun, 24 Jan 1999 15:06:05 -0600
X-Mailer: KMail [version 0.7.9]
Content-Type: text/plain
MIME-Version: 1.0
Message-Id: <99012415253804.01196@maya>
Content-Transfer-Encoding: 8bit
Sender: weis

I've been working with OCaml on my own for the past two weeks or so and
think I'm finally ready to take on a real project.  I feel like I've just come
upon a beautiful new hammer and I want to find some nails to hit with it.

I'd like to work on something that might help raise OCaml's visibility among
the Linux hacker community.  A few projects have occurred to me already:

1.  Extend OCaml's Unix library.  What's already there is very useful, but
there are quite a few functions missing.  I'd be happy to help fill this out,
although I'm new enough to OCaml and functional programming that I'm still not
sure if some Unix functions were omitted because of their stateful semantics.

2.  Build a GTK+ wrapper.  I know there was some discussion of this earlier. 
Is anyone still working on this?  I think a robust, comprehensive GTK+
interface would make OCaml a stronger candidate for a lot of burgeoning
open-source projects.  Again, I'm new enough to this that I'm still not sure if
languages like OCaml are a good fit for GUI work, but it seems to me that
OCaml's mix of imperative and functional features should provide enough
flexibility for something like this.

3.  Rewrite some of the GNU build tools, autoconf, automake etc. in OCaml.  It
seems to me that OCaml would be a marvelous language for building these kinds
of tools; their current m4 / perl implementation seems inelegant to me.  On the
other hand, the FSF seems to favor scheme, so they may not be receptive to
OCaml implementations ( I haven't asked ).

I'd appreciate any criticisms of these projects or any suggestions for others. 
My goal is to do my small part to promote OCaml ( while having fun hacking
with it ) and to try to show the open-source community what a boon a tool like
OCaml can be.  With a bit of luck, maybe one day I can earn a living writing
OCaml instead of C++. :)

--
miles



