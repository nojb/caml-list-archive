Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA03638 for caml-redistribution; Tue, 26 Jan 1999 18:42:36 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA16831 for <caml-list@pauillac.inria.fr>; Mon, 25 Jan 1999 21:53:19 +0100 (MET)
Received: from irritatie.cs.kun.nl (irritatie.cs.kun.nl [131.174.33.129])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id VAA02992
	for <caml-list@inria.fr>; Mon, 25 Jan 1999 21:53:17 +0100 (MET)
Received: (from tews@localhost)
	by irritatie.cs.kun.nl (8.8.7/8.8.7) id VAA21739;
	Mon, 25 Jan 1999 21:53:53 +0100
Date: Mon, 25 Jan 1999 21:53:53 +0100
Message-Id: <199901252053.VAA21739@irritatie.cs.kun.nl>
From: Hendrik Tews <tews@irritatie.cs.kun.nl>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
To: Caml Mailing List <caml-list@inria.fr>
Subject: Re: Looking for a nail 
X-Mailer: VM 6.22 under 19.15 XEmacs Lucid
Sender: weis

Hi,

   Miles> hammer and I want to find some nails to hit with it.
   
1. Bringing ocamletags to live again. I keep a copy, which
compiles under 2.01 and reads 2.01 files, but does not create
much tags for classes. I am willing to through this into the
pool (if Francois Rouaix agrees).

2. The yacc and lex interface of ocaml could be a tuned up. Some
ideas:

- use a oo interface for lexers and parsers, this would provide a
much butter way of adding state information to lexers and parsers
[cf Christian Lindig's mail "Proposal for new Lexing Module
(long)" from Mon, 18 Jan 1999] 
by simply inheriting from the library classes.

- adding start conditions a la flex to ocamllex

- adding a tool for generating perfect hash functions for keyword
recognition a la gperf; It would be great, if the hash function
generator could read the set of keywords from annotations in the
.mly file. I have a rather primitive version, which could be used
as a starting point.

Bye,

Hendrik



