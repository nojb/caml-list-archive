Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA22940 for caml-redistribution; Thu, 28 Jan 1999 13:25:02 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA02752 for <caml-list@pauillac.inria.fr>; Thu, 28 Jan 1999 13:17:21 +0100 (MET)
Received: from buffalo.ens-lyon.fr (buffalo.ens-lyon.fr [140.77.1.8])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id NAA10392
	for <caml-list@inria.fr>; Thu, 28 Jan 1999 13:17:20 +0100 (MET)
Received: from bellecour (bellecour [140.77.191.101])
	by buffalo.ens-lyon.fr (8.9.1a/8.9.1) with SMTP id NAA01450
	for <caml-list@inria.fr>; Thu, 28 Jan 1999 13:17:18 +0100 (MET)
Date: Thu, 28 Jan 1999 13:17:16 +0100 (MET)
From: Nicolas Ollinger <nollinge@ens-lyon.fr>
X-Sender: nollinge@bellecour
To: caml-list@inria.fr
Subject: Base d'objets persistante (was : Marshaling pour les objets ?)
Message-ID: <Pine.GSO.3.96.990128130807.21937A-100000@bellecour>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: weis

Bonjour,

Dans un message precedent, Jerome Vouillon ecrivait :
 
> > Nous venons de nous apercevoir que le marshaling n'etait pas supporte
> > pour les objets OCaml 2.0, y'a t'il une raison pour cela ? Est ce prevu
> > dans le futur ?
>
> La difficulte avec les objets est de retrouver leurs classes
> lorsqu'ils sont decodes. Je ne sais pas du tout comment faire.
>
> Dans le cas ou les programmes qui ecrivent et lisent des objets sont
> en fait les meme, il serait possible de transmettre la classe
> (c'est-a-dire en fait l'ensemble des methodes) de la meme maniere que
> l'on peut alors transmettre des fermetures. Mais cela ne serait pas
> tres efficace.

Serait-il possible, sans trop de pbs techniques, de gerer une sorte
de base persistante d'objets OCaml ? C'est-a-dire, stocker sur disque
(ou ailleurs...) la hierarchie des classes ET les instances. Ainsi,
au decodage d'un objet, si on ne connait pas la classe, on la lit sur
le disque.

L'idee est de tagger certains objets comme persistants. A l'utilisateur
de donner les routines de lecture/ecriture sur le disque.

Je n'ai que peu d'idee de la complexite d'une telle realisation, mais
je serais tres interesse par des pistes, docs (modules Oo, Obj,
structure du parser et du byterunner), etc.

Le but final etant la realisation d'un petit moteur de BdOO en OCaml,
un peu a la maniere du langage ColdC (http://www.cold.org).

Nicolas.
--
+-------------------------------------------------------------------+
|Nicolas Ollinger            -=Nopid=-        <nollinge@ens-lyon.fr>|
+-------------------------------------------------------------------+
ENS Lyon - Magistere Informatique et Modelisation - 2eme Annee  DMI97
Student                            <http://www.ens-lyon.fr/~nollinge>
---------------------------------------------------------------------



