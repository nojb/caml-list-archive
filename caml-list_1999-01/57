Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA25349 for caml-redistribution; Wed, 20 Jan 1999 14:04:26 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA13850 for <caml-list@pauillac.inria.fr>; Wed, 20 Jan 1999 13:03:34 +0100 (MET)
Received: from irritatie.cs.kun.nl (irritatie.cs.kun.nl [131.174.33.129])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id NAA00771
	for <caml-list@inria.fr>; Wed, 20 Jan 1999 13:03:32 +0100 (MET)
Received: (from tews@localhost)
	by irritatie.cs.kun.nl (8.8.7/8.8.7) id NAA09916;
	Wed, 20 Jan 1999 13:03:57 +0100
Date: Wed, 20 Jan 1999 13:03:57 +0100
Message-Id: <199901201203.NAA09916@irritatie.cs.kun.nl>
From: Hendrik Tews <tews@irritatie.cs.kun.nl>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
To: caml-list@inria.fr
Subject: Re: Obj module
In-Reply-To: <19990120112904E.garrigue@kurims.kyoto-u.ac.jp>
References: <199901191309.OAA31814@irritatie.cs.kun.nl>
	<19990120112904E.garrigue@kurims.kyoto-u.ac.jp>
X-Mailer: VM 6.22 under 19.15 XEmacs Lucid
Sender: weis

Hi,

Jacques GARRIGUE writes:
   Date: Wed, 20 Jan 1999 11:29:04 +0900
   Subject: Re: Obj module
   
   From: Hendrik Tews <tews@irritatie.cs.kun.nl>
   
   > where can I find documentation on the Obj module in the standard
   > library?
   
   There is (intentionally) no documentation to this module.

Ok, I would not expect a complete documentation of this module.
But I thought it would be possible to make statements like

If in a program

    let super_inst : super_class = (sub_inst : sub_class :> super_class)

is accepted by the compiler, then it is save to do

    let re_sub = (Obj.magic(super_inst) : sub_class)

Does this hold in general, or only in the current implementation,
or not even there?

   But it shall be rather easy to understand once you read the chapter on
   interfacing with C in the reference manual, which gives lots of
   information about how values are represented physically.
   
This is true. But I wanted to use it together with object types.
And I was not able to find something about the layout of the
method suites and how method dispatch is implemented.

Bye,

Hendrik



