Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA07181 for caml-redistribution; Thu, 21 Jan 1999 16:34:03 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA06687 for <caml-list@pauillac.inria.fr>; Thu, 21 Jan 1999 15:42:22 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id PAA26224;
	Thu, 21 Jan 1999 15:42:20 +0100 (MET)
Received: (from gimenez@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA19110; Thu, 21 Jan 1999 15:42:20 +0100 (MET)
Date: Thu, 21 Jan 1999 15:42:20 +0100 (MET)
From: Eduardo Gimenez <Eduardo.Gimenez@inria.fr>
Message-Id: <199901211442.PAA19110@pauillac.inria.fr>
To: caml-list@inria.fr
CC: Eduardo.Gimenez@inria.fr
Subject: Prefix operators in ocaml
Sender: weis


Hello,

Which is the "prefix" name in Ocaml for the multiplication on
integers? The symbols (+), (/), etc. work fine for the other
arithmetic operations, but the symbol (*) does not.

Similarly, is there any prefix name for the list constructor (a::l) ?
I am thinking in something like (::) .... 

Of course, I could define a function with the same behavior:
# let cons x y = x::y;;
val cons : 'a -> 'a list -> 'a list = <fun>

but this does not enable to write down expressions like 
match x with cons (a,l) -> l.

PS: I am working in the context of automatic generation of ocaml code,
and being able to have a uniform treatment for datatype constructors
would simplify things a lot....

Thanks in advance,
Eduardo Gimenez.



