Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA17509 for caml-redistribution; Wed, 27 Jan 1999 19:27:47 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA18261 for <caml-list@pauillac.inria.fr>; Tue, 26 Jan 1999 20:21:37 +0100 (MET)
Received: from kronstadt.transbay.net (ip55251.transbay.net [209.133.55.251])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id UAA27916
	for <caml-list@inria.fr>; Tue, 26 Jan 1999 20:21:30 +0100 (MET)
Received: (from itz@localhost)
	by kronstadt.transbay.net (8.8.6/8.8.6) id LAA23249;
	Tue, 26 Jan 1999 11:20:47 -0800
Date: Tue, 26 Jan 1999 11:20:47 -0800
Message-Id: <199901261920.LAA23249@kronstadt.transbay.net>
From: Ian T Zimmerman <itz@transbay.net>
To: caml-list@inria.fr
In-reply-to: <199901252053.VAA21739@irritatie.cs.kun.nl> (message from Hendrik
	Tews on Mon, 25 Jan 1999 21:53:53 +0100)
Subject: Re: Looking for a nail
Sender: weis

> Date: Mon, 25 Jan 1999 21:53:53 +0100
> From: Hendrik Tews <tews@irritatie.cs.kun.nl>
> X-Gnus-Article-Number: 99   Tue Jan 26 11:02:09 1999
> 
> 1. Bringing ocamletags to live again. I keep a copy, which compiles
> under 2.01 and reads 2.01 files, but does not create much tags for
> classes. I am willing to through this into the pool (if Francois
> Rouaix agrees).

An etags generator (written in Elisp) is part of current snapshot of
the Emacs subdirectory.  It is exactly as precise/correct as the imenu
generator :-) If you want to see it and can't wait for next release,
write me.

>  2. The yacc and lex interface of ocaml could be a tuned up. Some
> ideas:

>  - use a oo interface for lexers and parsers, this would provide a
> much butter way of adding state information to lexers and parsers
> [cf Christian Lindig's mail "Proposal for new Lexing Module (long)"
> from Mon, 18 Jan 1999] by simply inheriting from the library
> classes.

No.  Sorry, but I don't want to be forced to use classes.  I want to
be able to use Ocaml as a "better ML" only.  This also applies to
Markus' proposal about the standard library.


>  - adding start conditions a la flex to ocamllex

I haven't thought of this really hard, but I bet there is already a
way to do that.  If there isn't, I would think hard again to find a
cleaner, more functional (less stateful) way to do it.  If the current
condition is kept in a global as in flex, that just drops again the
reentrancy that Christian has been working so hard to achieve.

>  - adding a tool for generating perfect hash functions for keyword
> recognition a la gperf; It would be great, if the hash function
> generator could read the set of keywords from annotations in the
> .mly file. I have a rather primitive version, which could be used as
> a starting point.

Yes, I like this one.

-- 
Ian T Zimmerman                        <itz@transbay.net>
I came to the conclusion that what was wrong about the guillotine
was that the condemned man had no chance at all, absolutely none.
Albert Camus, _The Outsider_



