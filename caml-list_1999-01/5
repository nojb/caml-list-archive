Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA25364 for caml-redistribution; Wed, 6 Jan 1999 09:56:29 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA22939 for <caml-list@pauillac.inria.fr>; Tue, 5 Jan 1999 23:14:32 +0100 (MET)
Received: from schneemann.darmstadt.netsurf.de (board-124.darmstadt.netsurf.de [194.163.86.252])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id XAA15220
	for <caml-list@inria.fr>; Tue, 5 Jan 1999 23:14:29 +0100 (MET)
Received: (from gerd@localhost)
	by schneemann.darmstadt.netsurf.de (8.8.8/8.8.8) id XAA17370;
	Tue, 5 Jan 1999 23:09:03 +0100
From: Gerd Stolpmann <gerd@darmstadt.netsurf.de>
Message-Id: <199901052209.XAA17370@schneemann.darmstadt.netsurf.de>
Subject: ANNOUNCEMENT: JavaCaml
To: caml-list@inria.fr, joachim.schrod@dresner-bank.com, joachim.schrod@npc.de,
        klaus.schrod@dresdner-bank.com, smurf@dauenhauer.de
Date: Tue, 5 Jan 1999 23:09:03 +0100 (CET)
X-Mailer: ELM [version 2.4ME+ PL37 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: weis

Hi,

after two weeks of work I can announce JavaCaml, a reimplementation of the
Objective Caml bytecode interpreter in Java. As you expect after this
introduction, JavaCaml is slow, it is even very slow. But it is still
usable for many purposes that only want to provide a user interface for a
background service.

My motivation to program JavaCaml was to have an alternative for these bad
server-side applications, hacked in some of these fashionable languages
that can do anything even without concept. As being a client-side runtime
environment it is in JavaCaml no problem to preserve the current state,
and because of the high-level language facilities of Ocaml it is possible
to make user interfaces for structures that are more complicated than
simple lists.

I have made a homepage with much more information about JavaCaml, the
sources, and even two demos:

http://people.darmstadt.netsurf.de/Gerd.Stolpmann/javacaml

The current interpreter should be considered as experimental and does
currently not support all OCaml features. In detail, the object-oriented
concepts and many libraries are missing. But one important library already
works: Str, implementing regular expressions.

It would be nice to write what you think about the project. Especially, I
would welcome results of tests, suggestions for a good network API,
comments about the code quality, and, of course, anybody who helps me in
the further development.

A lot of fun, and a happy new year,

Gerd Stolpmann, Gerd.Stolpmann@darmstadt.netsurf.de




