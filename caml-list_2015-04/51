Return-Path: <info@gerd-stolpmann.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 88E3A7FCCB
	for <caml-list@sympa.inria.fr>; Thu,  9 Apr 2015 18:45:23 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  info@gerd-stolpmann.de) identity=pra;
  client-ip=212.227.17.10;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="info@gerd-stolpmann.de";
  x-sender="info@gerd-stolpmann.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  info@gerd-stolpmann.de) identity=mailfrom;
  client-ip=212.227.17.10;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="info@gerd-stolpmann.de";
  x-sender="info@gerd-stolpmann.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mout.kundenserver.de) identity=helo;
  client-ip=212.227.17.10;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="info@gerd-stolpmann.de";
  x-sender="postmaster@mout.kundenserver.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0BXBQBtqyZVnAoR49Rcgx09XLwviWUKhX0CgUE8EAEBAQEBAQERAQEBAQEGDQkJFC6EIAEBAwFVJAULC0ZXBhMJiBkMCbdlIW8NlSwBAQEBAQUBAQEBHosrhFYmB4ItDEGBMwWGHosnAYMsh2qFQQONSoQTbQEBgkEBAQE
X-IPAS-Result: A0BXBQBtqyZVnAoR49Rcgx09XLwviWUKhX0CgUE8EAEBAQEBAQERAQEBAQEGDQkJFC6EIAEBAwFVJAULC0ZXBhMJiBkMCbdlIW8NlSwBAQEBAQUBAQEBHosrhFYmB4ItDEGBMwWGHosnAYMsh2qFQQONSoQTbQEBgkEBAQE
X-IronPort-AV: E=Sophos;i="5.11,550,1422918000"; 
   d="asc'?scan'208";a="132414674"
Received: from mout.kundenserver.de ([212.227.17.10])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 09 Apr 2015 18:45:23 +0200
Received: from office1.lan.sumadev.de ([178.4.18.152]) by
 mrelayeu.kundenserver.de (mreue102) with ESMTPSA (Nemesis) id
 0MAdeV-1YZKsz0vcJ-00BuMG; Thu, 09 Apr 2015 18:45:22 +0200
Received: from [192.168.5.106] (thinkpad.lan.sumadev.de [192.168.5.106])
	by office1.lan.sumadev.de (Postfix) with ESMTPSA id 483F0DC05D;
	Thu,  9 Apr 2015 18:45:21 +0200 (CEST)
Message-ID: <1428597912.4056.107.camel@thinkpad.lan.sumadev.de>
From: Gerd Stolpmann <info@gerd-stolpmann.de>
To: Daniel =?ISO-8859-1?Q?B=FCnzli?= <daniel.buenzli@erratique.ch>
Cc: Dario Teixeira <dario.teixeira@nleyten.com>, caml-list@inria.fr
Date: Thu, 09 Apr 2015 18:45:12 +0200
In-Reply-To: <46483E4AF51B46A3B3F91B3B5CFE8249@erratique.ch>
References: <2f9c74beafcf41f3ab30324fb1ece739@nleyten.com>
	 <55257AAD.6030004@zoho.com> <5297cdaceccd6db2a60700bf686ccfb7@nleyten.com>
	 <1428576994.22412.21.camel@e130.lan.sumadev.de>
	 <d8a23c877189537c81524be5df2b4377@nleyten.com>
	 <46483E4AF51B46A3B3F91B3B5CFE8249@erratique.ch>
Content-Type: multipart/signed; micalg="pgp-sha1"; protocol="application/pgp-signature";
	boundary="=-lR0b6Ls8/FNnXbfgs8xo"
X-Mailer: Evolution 3.10.4-0ubuntu2 
Mime-Version: 1.0
X-Provags-ID:  V03:K0:JtFuUGz0+LtmC3ENNs5wAszXuqFdlfEjiD7RvtGyPAgh5J/KkwT
 jEot0MhjLyGnTUlTSczqdalTFchF+Qif0RpeIz443WnFEmKLQAHH5v5W0PTd11dXh+KYuKW
 Ohr4r4+kp91TLYr5JMMtFeCYyJ2B8rsSuUt1aTLI/eYdjy78BLICMx7FPTDNrVRw6tGkqll
 7SI/KLpyvDPLaY8bICNlQ==
X-UI-Out-Filterresults: notjunk:1;
Subject: Re: [Caml-list] META file standards for ppx extensions


--=-lR0b6Ls8/FNnXbfgs8xo
Content-Type: text/plain; charset="ISO-8859-15"
Content-Transfer-Encoding: quoted-printable

Am Donnerstag, den 09.04.2015, 17:33 +0200 schrieb Daniel B=FCnzli:
> In the assemblage project we are quite interested in seeing packages as n=
amed entities providing flags/and or objects to use in a given command exec=
ution context (defined as pre-processing, compiling, linking, etc. see [1] =
for more details).
>=20
> During the first build ("configure") we want to `ocamlfind query` package=
s for the right flags in each context and cache them so that we don't have =
to go through ocamlfind during the compilation (which slows down things qui=
te a bit).=20
>=20
> Is there an invocation that allow us to get the flags or objects to use, =
the following don't seem to work:
>=20
> > ocamlfind query -predicates ppx -pp lwt.ppx
> > ocamlfind query -pp lwt.ppx=20
>=20
>=20
> and I don't see an obvious specifier for `-format` I can use.=20

ocamlfind query -format '%(ppx)' lwt.ppx

-pp is not meant for ppx.

> It would be nice in general if ocamlfind would allow us to use `ocamlfind=
 query` in obvious ways so that we can exactly reproduce what it does when =
whatever `ocamlfind TOOL -pkg PKG1,PKG2,PKG3` is being invoked.=20

E.g.

ocamlfind ocamlc -only-show ...

then get the command from stdout and run it as often as you want.

Gerd

> I'm not working on this at the moment and don't have these things in my h=
ead but I remember that it proved to be quite challenging (if not impossibl=
e) to achieve that goal.=20
>=20
> Best,
>=20
> Daniel
>=20
> [1] http://samoht.github.io/assemblage/Assemblage.Ctx.html
>=20
>=20
>=20

--=20
------------------------------------------------------------
Gerd Stolpmann, Darmstadt, Germany    gerd@gerd-stolpmann.de
My OCaml site:          http://www.camlcity.org
Contact details:        http://www.camlcity.org/contact.html
Company homepage:       http://www.gerd-stolpmann.de
------------------------------------------------------------


--=-lR0b6Ls8/FNnXbfgs8xo
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: This is a digitally signed message part
Content-Transfer-Encoding: 7bit

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQEcBAABAgAGBQJVJqyYAAoJEAaM4b9ZLB5T9vcH/iaBindvZmFVJSFr2FXkxwOC
uEGkxDj3IuhKzeKRojAMcH0WT8eDpUHqhWUlswmiVpMHlMBNUnZimbzkPSHhPJxH
NgRWzsqPMrW5pQVm/HZ5tE8HUlRKCyqn0BBCt0k33Xa0QhbysadR6ULktcccKpG/
nST+J7rkWXvVSUSQQJ/pIM5ddKduZqaNTnxfz++QNYdDBirjRkjNVOhPgLONqc4J
SbXK0GKlldTEi8QJ++7m5e99nCEL9FjK/fA2eQ3v4777QeNHCimKenhfUz9tawe7
a4pUXJscBUj5B+yqEHxNuQXasYCZCxi7vx1COC0Tf+iKD/73hBIgfJu0NISbxx0=
=kBke
-----END PGP SIGNATURE-----

--=-lR0b6Ls8/FNnXbfgs8xo--

