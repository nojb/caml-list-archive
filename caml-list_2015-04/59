Return-Path: <daniel.buenzli@erratique.ch>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id C2F317FCF0
	for <caml-list@sympa.inria.fr>; Fri, 10 Apr 2015 11:42:27 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  daniel.buenzli@erratique.ch) identity=pra;
  client-ip=74.55.86.74;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="daniel.buenzli@erratique.ch";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  daniel.buenzli@erratique.ch) identity=mailfrom;
  client-ip=74.55.86.74;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="daniel.buenzli@erratique.ch";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@smtp.webfaction.com) identity=helo;
  client-ip=74.55.86.74;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="postmaster@smtp.webfaction.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0CxAAArmidVnEpWN0pch0zJJAKBdxABAQEBAQEBEQEBAQEBBg0JCRQuhCABAQQjVhALGgImAgJHEAYbiCIEt22WWAEBCAEBAQEegSGJC3+ESTMHgmgvgRYBBKIYD41NhBODMAEBAQ
X-IPAS-Result: A0CxAAArmidVnEpWN0pch0zJJAKBdxABAQEBAQEBEQEBAQEBBg0JCRQuhCABAQQjVhALGgImAgJHEAYbiCIEt22WWAEBCAEBAQEegSGJC3+ESTMHgmgvgRYBBKIYD41NhBODMAEBAQ
X-IronPort-AV: E=Sophos;i="5.11,556,1422918000"; 
   d="scan'208";a="109109534"
Received: from mail6.webfaction.com (HELO smtp.webfaction.com) ([74.55.86.74])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 10 Apr 2015 11:42:26 +0200
Received: from [172.20.10.2] (207.228.197.178.dynamic.wless.zhbmb00p-cgnat.res.cust.swisscom.ch [178.197.228.207])
	by smtp.webfaction.com (Postfix) with ESMTP id CB2E959A443B;
	Fri, 10 Apr 2015 09:42:22 +0000 (UTC)
Date: Fri, 10 Apr 2015 11:42:16 +0200
From: =?utf-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: =?utf-8?Q?Fran=C3=A7ois_Bobot?= <francois.bobot@cea.fr>
Cc: caml-list@inria.fr
Message-ID: <6C2BFE0C79F1491BAEB633BE70A6CE4D@erratique.ch>
In-Reply-To: <55278F9D.8030607@cea.fr>
References: <2f9c74beafcf41f3ab30324fb1ece739@nleyten.com>
 <55257AAD.6030004@zoho.com>
 <5297cdaceccd6db2a60700bf686ccfb7@nleyten.com>
 <1428576994.22412.21.camel@e130.lan.sumadev.de>
 <d8a23c877189537c81524be5df2b4377@nleyten.com>
 <46483E4AF51B46A3B3F91B3B5CFE8249@erratique.ch>
 <1428597912.4056.107.camel@thinkpad.lan.sumadev.de>
 <9CB3F43413964B9F93581B26AD6B391B@erratique.ch>
 <1428618115.4451.6.camel@zotac>
 <C55070AB7ACF493F95485F4D225B6DC9@erratique.ch> <55278F9D.8030607@cea.fr>
X-Mailer: sparrow 1.6.4 (build 1178)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Subject: Re: [Caml-list] META file standards for ppx extensions

Le vendredi, 10 avril 2015 =C3=A0 10:53, Fran=C3=A7ois Bobot a =C3=A9crit :
> Just by curiosity, why do you want to separate the preprocessing from the=
 compilation and not let
> ocaml do the piping? Is it for efficiency?

Maybe Thomas will have other comments to make since I personally stay away =
from the pre-processing cancer.=20=20

But for one thing you can perfectly imagine doing a source pre-processing s=
tep before making a distribution, so that final users don't need to install=
 the pre-processor you are using. Besides if you have a decent build system=
 which finely tracks dependencies for minimal rebuilds you can perfectly im=
agine to not re-pre-process a file if only a *compilation* option changes.

In general it's better if the base compilation tools do not try to do too m=
uch/output many files in one go so that build systems can 1) trivially infe=
r their outputs 2) reasonably rely on fs modification times to equate them =
with concrete content modification 3) be really in charge of composing the =
build pipeline.=20=20

It's all about having a *composable* toolchain vs. inflexible monolithic bl=
ack boxes.=20=20

Best,

Daniel


