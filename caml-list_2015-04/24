Return-Path: <drupyog+caml@zoho.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 044447FCEF
	for <caml-list@sympa.inria.fr>; Fri,  3 Apr 2015 00:18:51 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  drupyog+caml@zoho.com) identity=pra; client-ip=74.201.84.155;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="drupyog+caml@zoho.com";
  x-sender="drupyog+caml@zoho.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  drupyog+caml@zoho.com designates 74.201.84.155 as permitted
  sender) identity=mailfrom; client-ip=74.201.84.155;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="drupyog+caml@zoho.com";
  x-sender="drupyog+caml@zoho.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@sender1.zohomail.com) identity=helo;
  client-ip=74.201.84.155;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="drupyog+caml@zoho.com";
  x-sender="postmaster@sender1.zohomail.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0CjAACqvx1Vm5tUyUpchDaDFchRAoFMTAEBAQEBARIBAQEBAQYLCwkULoQfAQQBIyABNAMDCwsEHRYLAgIJAwIBAgFFBgEMCAEBiBYBAwEEBAgEtFZwhGgCjSMiKCWFGgELARgHiymFAIJogUWRdYZ5ggGBHRGBAYRfiXKDSIIkHYFSbYJDAQEB
X-IPAS-Result: A0CjAACqvx1Vm5tUyUpchDaDFchRAoFMTAEBAQEBARIBAQEBAQYLCwkULoQfAQQBIyABNAMDCwsEHRYLAgIJAwIBAgFFBgEMCAEBiBYBAwEEBAgEtFZwhGgCjSMiKCWFGgELARgHiymFAIJogUWRdYZ5ggGBHRGBAYRfiXKDSIIkHYFSbYJDAQEB
X-IronPort-AV: E=Sophos;i="5.11,513,1422918000"; 
   d="scan'208,217";a="108175693"
Received: from sender1.zohomail.com ([74.201.84.155])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-MD5; 03 Apr 2015 00:18:49 +0200
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; 
  s=zapps768; d=zoho.com; 
  h=message-id:date:from:user-agent:mime-version:to:subject:references:in-reply-to:content-type; 
  b=VvISn3dIYXHFyzpkQiTJ7EnVgN4IAAlKQpztAqIQMk70Gi4+2FGGyPDoH0Vq+sm1D9KD5fpy3LMT
    WrtnYbJwbhSllNuufvbhILBYwfpC9/EksjARXsDaJHhrq5x0/Z/y  
Received: from [192.168.1.8] (did75-8-82-228-42-129.fbx.proxad.net [82.228.42.129]) by mx.zohomail.com
	with SMTPS id 1428013119946243.66824664036926; Thu, 2 Apr 2015 15:18:39 -0700 (PDT)
Message-ID: <551DC03D.7050905@zoho.com>
Date: Fri, 03 Apr 2015 00:18:37 +0200
From: Drup <drupyog+caml@zoho.com>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:31.0) Gecko/20100101 Thunderbird/31.5.0
MIME-Version: 1.0
To: Kenneth Adam Miller <kennethadammiller@gmail.com>, 
 caml-list@inria.fr
References: <CAK7rcp_+02ZbrmocUXkJaE0wrO72=2huWAbssG3sxsnWkBio=g@mail.gmail.com>	<CAMu2m2K274ET548zYTB-mipK0cwm_vsv019qbHyHTkHs1gC0KQ@mail.gmail.com>	<CAK7rcp9HWw6A8FWzRKXAT_Vgo-FWtwDQS2qA=TuEvf5fKsebkA@mail.gmail.com>	<551DB78D.1040705@zoho.com>	<CAK7rcp_yb_gb4uziNkDHMBZFSCt_om85JWZ8p_bi94eDpB1AgA@mail.gmail.com> <CAK7rcp_CT-meuKnqmgeNE-Gj6t4iR+_N829TZibHm7DbX6sh_A@mail.gmail.com>
In-Reply-To: <CAK7rcp_CT-meuKnqmgeNE-Gj6t4iR+_N829TZibHm7DbX6sh_A@mail.gmail.com>
Content-Type: multipart/alternative;
 boundary="------------020509040009090304040305"
Subject: Re: [Caml-list] Mathematical Expression Library

This is a multi-part message in MIME format.
--------------020509040009090304040305
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit


> Can you also explain in more depth your justification of Z3 doing 
> expression simplification on my behalf for anything submitted? That 
> was also my guess, but I didn't have that substantiated before my 
> colleagues, so I wanted to be thorough.
Knowledge of Z3, I guess ? It calls the simplification function (which 
is exposed as Z3.Expr.simplify in the ml-ng bindings) before solving. 
It's a bit more complicated when in the so-called "interactive" mode but 
still doing it. Note that the function is still useful when printing the 
formula for debugging purposes.

>
>     Shape?? I don't know what you mean.
>
I mean that, for a solver like Z3, two encodings of the same problem can 
result in different results (between UNSAT and UNKNOWN, in particular) 
and can result, and that's more sneaky, in completely different 
performance profiles. Solvers (and Z3 in particular) uses heuristics to 
know which branches to solve first so it's rather guess-y.

You mostly notice that when trying them though, it's rather pointless to 
try to guess in advance, since it's very implementation-sensible.

>
>     In any case, my plan was to use OCamlgraph and some hash-consing
>     to construct correspondingly equivalent semantics, then reason
>     about it in a distributed fashion.
>
If you are looking to encode an SSA control flow graph in Z3's SMT, I 
have the code to do that. I could extract it and get it into shape. It's 
based on llvm's IR, but It should be fairly reusable. Tell me if you are 
interested.



--------------020509040009090304040305
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: 7bit

<html>
  <head>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type">
  </head>
  <body bgcolor="#FFFFFF" text="#000000">
    <div class="moz-cite-prefix"><br>
    </div>
    <blockquote
cite="mid:CAK7rcp_CT-meuKnqmgeNE-Gj6t4iR+_N829TZibHm7DbX6sh_A@mail.gmail.com"
      type="cite">
      <div dir="ltr">Can you also explain in more depth your
        justification of Z3 doing expression simplification on my behalf
        for anything submitted? That was also my guess, but I didn't
        have that substantiated before my colleagues, so I wanted to be
        thorough.</div>
    </blockquote>
    Knowledge of Z3, I guess ? It calls the simplification function
    (which is exposed as Z3.Expr.simplify in the ml-ng bindings) before
    solving. It's a bit more complicated when in the so-called
    "interactive" mode but still doing it. Note that the function is
    still useful when printing the formula for debugging purposes.<br>
    <br>
    <blockquote
cite="mid:CAK7rcp_CT-meuKnqmgeNE-Gj6t4iR+_N829TZibHm7DbX6sh_A@mail.gmail.com"
      type="cite">
      <div class="gmail_extra"><br>
        <div class="gmail_quote">
          <blockquote class="gmail_quote" style="margin:0 0 0
            .8ex;border-left:1px #ccc solid;padding-left:1ex">
            <div dir="ltr">Shape?? I don't know what you mean.</div>
          </blockquote>
        </div>
      </div>
    </blockquote>
    I mean that, for a solver like Z3, two encodings of the same problem
    can result in different results (between UNSAT and UNKNOWN, in
    particular) and can result, and that's more sneaky, in completely
    different performance profiles. Solvers (and Z3 in particular) uses
    heuristics to know which branches to solve first so it's rather
    guess-y. <br>
    <br>
    You mostly notice that when trying them though, it's rather
    pointless to try to guess in advance, since it's very
    implementation-sensible.<br>
    <br>
    <blockquote
cite="mid:CAK7rcp_CT-meuKnqmgeNE-Gj6t4iR+_N829TZibHm7DbX6sh_A@mail.gmail.com"
      type="cite">
      <div class="gmail_extra">
        <div class="gmail_quote">
          <blockquote class="gmail_quote" style="margin:0 0 0
            .8ex;border-left:1px #ccc solid;padding-left:1ex">
            <div dir="ltr">
              <div><br>
              </div>
              <div>In any case, my plan was to use OCamlgraph and some
                hash-consing to construct correspondingly equivalent
                semantics, then reason about it in a distributed
                fashion.</div>
            </div>
          </blockquote>
        </div>
      </div>
    </blockquote>
    If you are looking to encode an SSA control flow graph in Z3's SMT,
    I have the code to do that. I could extract it and get it into
    shape. It's based on llvm's IR, but It should be fairly reusable.
    Tell me if you are interested.<br>
    <br>
    <br>
  </body>
</html>

--------------020509040009090304040305--

