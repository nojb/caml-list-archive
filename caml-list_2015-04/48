Return-Path: <daniel.buenzli@erratique.ch>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 67BC77FCF0
	for <caml-list@sympa.inria.fr>; Thu,  9 Apr 2015 17:33:49 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  daniel.buenzli@erratique.ch) identity=pra;
  client-ip=74.55.86.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="daniel.buenzli@erratique.ch";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  daniel.buenzli@erratique.ch) identity=mailfrom;
  client-ip=74.55.86.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="daniel.buenzli@erratique.ch";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@smtp.webfaction.com) identity=helo;
  client-ip=74.55.86.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="postmaster@smtp.webfaction.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0CAAQDUmiZVnEpWN0pcg1pcgxXDCYV9AoF6EAEBAQEBAQERAQEBAQEGDQkJFC6EIAEBAwEjVgULCxoCJgICRxAGG4gaCAQJty2WWAEBAQcCAR+BIYoKhHwHgmgvgRYFlHKHaoU1D41KhBNtAQGCQQEBAQ
X-IPAS-Result: A0CAAQDUmiZVnEpWN0pcg1pcgxXDCYV9AoF6EAEBAQEBAQERAQEBAQEGDQkJFC6EIAEBAwEjVgULCxoCJgICRxAGG4gaCAQJty2WWAEBAQcCAR+BIYoKhHwHgmgvgRYFlHKHaoU1D41KhBNtAQGCQQEBAQ
X-IronPort-AV: E=Sophos;i="5.11,550,1422918000"; 
   d="scan'208";a="132400778"
Received: from mail6.webfaction.com (HELO smtp.webfaction.com) ([74.55.86.74])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 09 Apr 2015 17:33:43 +0200
Received: from [172.20.10.2] (95.234.197.178.dynamic.wless.lssmb00p-cgnat.res.cust.swisscom.ch [178.197.234.95])
	by smtp.webfaction.com (Postfix) with ESMTP id 17E5320EF7C9;
	Thu,  9 Apr 2015 15:33:38 +0000 (UTC)
Date: Thu, 9 Apr 2015 17:33:33 +0200
From: =?utf-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: Dario Teixeira <dario.teixeira@nleyten.com>
Cc: caml-list@inria.fr
Message-ID: <46483E4AF51B46A3B3F91B3B5CFE8249@erratique.ch>
In-Reply-To: <d8a23c877189537c81524be5df2b4377@nleyten.com>
References: <2f9c74beafcf41f3ab30324fb1ece739@nleyten.com>
 <55257AAD.6030004@zoho.com>
 <5297cdaceccd6db2a60700bf686ccfb7@nleyten.com>
 <1428576994.22412.21.camel@e130.lan.sumadev.de>
 <d8a23c877189537c81524be5df2b4377@nleyten.com>
X-Mailer: sparrow 1.6.4 (build 1178)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Subject: Re: [Caml-list] META file standards for ppx extensions

In the assemblage project we are quite interested in seeing packages as named entities providing flags/and or objects to use in a given command execution context (defined as pre-processing, compiling, linking, etc. see [1] for more details).

During the first build ("configure") we want to `ocamlfind query` packages for the right flags in each context and cache them so that we don't have to go through ocamlfind during the compilation (which slows down things quite a bit). 

Is there an invocation that allow us to get the flags or objects to use, the following don't seem to work:

> ocamlfind query -predicates ppx -pp lwt.ppx
> ocamlfind query -pp lwt.ppx 


and I don't see an obvious specifier for `-format` I can use. 

It would be nice in general if ocamlfind would allow us to use `ocamlfind query` in obvious ways so that we can exactly reproduce what it does when whatever `ocamlfind TOOL -pkg PKG1,PKG2,PKG3` is being invoked. 

I'm not working on this at the moment and don't have these things in my head but I remember that it proved to be quite challenging (if not impossible) to achieve that goal. 

Best,

Daniel

[1] http://samoht.github.io/assemblage/Assemblage.Ctx.html


