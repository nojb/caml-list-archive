Return-Path: <kennethadammiller@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 4F9CD7FCEF
	for <caml-list@sympa.inria.fr>; Thu,  2 Apr 2015 22:05:12 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  kennethadammiller@gmail.com) identity=pra;
  client-ip=209.85.214.169;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="kennethadammiller@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  kennethadammiller@gmail.com designates 209.85.214.169 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.214.169;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="kennethadammiller@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ob0-f169.google.com) identity=helo;
  client-ip=209.85.214.169;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="postmaster@mail-ob0-f169.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0C0AAD4nx1Vm6nWVdFcgkWBFVAMBYMQsmGPcYV9AoFFB0wBAQEBAQESAQEBAQEGCwsJFC6EHgEBAQMBEhEdARsdAQMMBgULDSoCAiEBAREBBQEcBhMih3gBAwkIDak3PjGLOIFrgneNKAoZJw1UhF4BAQEBAQEEAQEBAQEBFgEFDosbgkeCMgeCaIFFBZRfhD6BTYEdOoxCgmeBfhIjgQwJhC0iMYJDAQEB
X-IPAS-Result: A0C0AAD4nx1Vm6nWVdFcgkWBFVAMBYMQsmGPcYV9AoFFB0wBAQEBAQESAQEBAQEGCwsJFC6EHgEBAQMBEhEdARsdAQMMBgULDSoCAiEBAREBBQEcBhMih3gBAwkIDak3PjGLOIFrgneNKAoZJw1UhF4BAQEBAQEEAQEBAQEBFgEFDosbgkeCMgeCaIFFBZRfhD6BTYEdOoxCgmeBfhIjgQwJhC0iMYJDAQEB
X-IronPort-AV: E=Sophos;i="5.11,512,1422918000"; 
   d="scan'208";a="108162670"
Received: from mail-ob0-f169.google.com ([209.85.214.169])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 02 Apr 2015 22:05:11 +0200
Received: by obvd1 with SMTP id d1so146103014obv.0
        for <caml-list@inria.fr>; Thu, 02 Apr 2015 13:05:09 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=vp4vg41ZC8o4PbIvAkMVE9Ol9kYXxTCI9O5FZV5RmoY=;
        b=CRtGIPz13p2S+qoHp5R71cZCkquPihJW/TJpeS7IDtrpD3MXjkmx7FTOZmK2Q2ptwy
         93H6Kz7p3PLVYbAt7O7xk7FMzjt+3kA7pPVFctWK2Vv2aBHbjNBFfxs1TN+QaUEM3Vd1
         tZQ84foioTt4BKK2iHCdNgthlkV30AzaKGj3hN6eTjws75wvaxtnCZGIKhtD9JaOUQIW
         7wPS1ArZjuC2nQa2S8filosDi5yGpvZsOg0dwazrS+u9elTA0njasF6dvyjaLnxsXz39
         202WZvWREAwLpW1lUXqVMBUGxPjEvlW97HqwLp3b901b3a/TUumOXK9cQByd3nWoaYIe
         DFPA==
MIME-Version: 1.0
X-Received: by 10.60.133.144 with SMTP id pc16mr38267341oeb.0.1428005109758;
 Thu, 02 Apr 2015 13:05:09 -0700 (PDT)
Received: by 10.202.185.8 with HTTP; Thu, 2 Apr 2015 13:05:09 -0700 (PDT)
In-Reply-To: <CAMu2m2L_Eqz1W1EP15xdVX5xzWb2_z4LS7x1tfwBFkfObQ76gA@mail.gmail.com>
References: <CAK7rcp_+02ZbrmocUXkJaE0wrO72=2huWAbssG3sxsnWkBio=g@mail.gmail.com>
	<CAMu2m2K274ET548zYTB-mipK0cwm_vsv019qbHyHTkHs1gC0KQ@mail.gmail.com>
	<CAK7rcp9HWw6A8FWzRKXAT_Vgo-FWtwDQS2qA=TuEvf5fKsebkA@mail.gmail.com>
	<CAMu2m2L_Eqz1W1EP15xdVX5xzWb2_z4LS7x1tfwBFkfObQ76gA@mail.gmail.com>
Date: Thu, 2 Apr 2015 16:05:09 -0400
Message-ID: <CAK7rcp9BTXx49nvdB_vrwoefnVXigAf-ToLj=s3NW4XLAjoykg@mail.gmail.com>
From: Kenneth Adam Miller <kennethadammiller@gmail.com>
To: Ashish Agarwal <agarwal1975@gmail.com>
Cc: caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=047d7b4728664e01040512c359da
Subject: Re: [Caml-list] Mathematical Expression Library

--047d7b4728664e01040512c359da
Content-Type: text/plain; charset=UTF-8

Well, the concern is that equivalent expressions that might arise in our
scenario be more difficult than they need to be. In expression
simplification, we keep the equivalent expression that is produced,
replacing the original. In this way then next time we feed that expression
input, or try to solve on it, we can get results for much less work.

Am I right? I'm not too too familiar with SMT solvers-it's a different,
highly specialized field, so I just need to use them for my purposes.

On Thu, Apr 2, 2015 at 3:57 PM, Ashish Agarwal <agarwal1975@gmail.com>
wrote:

> > need to simplify expressions before I submit them to SMT solvers
>
> Why? Is the input language of the solver you're using not rich enough for
> your needs. The notion of "simplify" can be not so simple depending on the
> language and your needs.
>
> On Thu, Apr 2, 2015 at 3:47 PM, Kenneth Adam Miller <
> kennethadammiller@gmail.com> wrote:
>
>> I predominantly need to simplify expressions before I submit them to SMT
>> solvers. I'm quite concerned about not reimplementing a difficult and
>> already solved problem, and I'm pretty sure that this is part of work of
>> the solvers. I'm pretty sure that Z3 provides a simplify function. Would it
>> be better to cache the result of the simplify function?
>>
>> On Thu, Apr 2, 2015 at 3:36 PM, Ashish Agarwal <agarwal1975@gmail.com>
>> wrote:
>>
>>> If you don't find anything else, maybe some of our old code from PADL
>>> 2010 can help as a starting point [1]. Probably it'll be easier to put
>>> something together from scratch, assuming you don't care about performance
>>> or need variables.
>>>
>>> [1] http://ashishagarwal.org/2010/01/18/automating-mp-transformations/
>>>
>>>
>>> On Thu, Apr 2, 2015 at 1:16 PM, Kenneth Adam Miller <
>>> kennethadammiller@gmail.com> wrote:
>>>
>>>> Is there a library somewhere where I can represent and simplify simple
>>>> bit operation expressions? Add, subtract, exclusive or, or, and, divide,
>>>> multiply, modulus, composed recursively, and operations on the expression
>>>> type, such as simplify?
>>>>
>>>
>>>
>>
>

--047d7b4728664e01040512c359da
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Well, the concern is that equivalent expressions that migh=
t arise in our scenario be more difficult than they need to be. In expressi=
on simplification, we keep the equivalent expression that is produced, repl=
acing the original. In this way then next time we feed that expression inpu=
t, or try to solve on it, we can get results for much less work.<div><br></=
div><div>Am I right? I&#39;m not too too familiar with SMT solvers-it&#39;s=
 a different, highly specialized field, so I just need to use them for my p=
urposes.</div></div><div class=3D"gmail_extra"><br><div class=3D"gmail_quot=
e">On Thu, Apr 2, 2015 at 3:57 PM, Ashish Agarwal <span dir=3D"ltr">&lt;<a =
href=3D"mailto:agarwal1975@gmail.com" target=3D"_blank">agarwal1975@gmail.c=
om</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"marg=
in:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr"=
><span class=3D"">&gt;=C2=A0<span style=3D"font-size:12.8000001907349px">ne=
ed to simplify expressions before I submit them to SMT solvers</span><div><=
span style=3D"font-size:12.8000001907349px"><br></span></div></span><div><s=
pan style=3D"font-size:12.8000001907349px">Why? Is the input language of th=
e solver you&#39;re using not rich enough for your needs. The notion of &qu=
ot;simplify&quot; can be not so simple depending on the language and your n=
eeds.</span></div></div><div class=3D"HOEnZb"><div class=3D"h5"><div class=
=3D"gmail_extra"><br><div class=3D"gmail_quote">On Thu, Apr 2, 2015 at 3:47=
 PM, Kenneth Adam Miller <span dir=3D"ltr">&lt;<a href=3D"mailto:kennethada=
mmiller@gmail.com" target=3D"_blank">kennethadammiller@gmail.com</a>&gt;</s=
pan> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex=
;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">I predominan=
tly need to simplify expressions before I submit them to SMT solvers. I&#39=
;m quite concerned about not reimplementing a difficult and already solved =
problem, and I&#39;m pretty sure that this is part of work of the solvers. =
I&#39;m pretty sure that Z3 provides a simplify function. Would it be bette=
r to cache the result of the simplify function?</div><div><div><div class=
=3D"gmail_extra"><br><div class=3D"gmail_quote">On Thu, Apr 2, 2015 at 3:36=
 PM, Ashish Agarwal <span dir=3D"ltr">&lt;<a href=3D"mailto:agarwal1975@gma=
il.com" target=3D"_blank">agarwal1975@gmail.com</a>&gt;</span> wrote:<br><b=
lockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px =
#ccc solid;padding-left:1ex"><div dir=3D"ltr">If you don&#39;t find anythin=
g else, maybe some of our old code from PADL 2010 can help as a starting po=
int [1]. Probably it&#39;ll be easier to put something together from scratc=
h, assuming you don&#39;t care about performance or need variables.<div><br=
></div><div>[1]=C2=A0<a href=3D"http://ashishagarwal.org/2010/01/18/automat=
ing-mp-transformations/" target=3D"_blank">http://ashishagarwal.org/2010/01=
/18/automating-mp-transformations/</a></div><div><br></div></div><div><div>=
<div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On Thu, Apr 2, 20=
15 at 1:16 PM, Kenneth Adam Miller <span dir=3D"ltr">&lt;<a href=3D"mailto:=
kennethadammiller@gmail.com" target=3D"_blank">kennethadammiller@gmail.com<=
/a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"margin:=
0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Is=
 there a library somewhere where I can represent and simplify simple bit op=
eration expressions? Add, subtract, exclusive or, or, and, divide, multiply=
, modulus, composed recursively, and operations on the expression type, suc=
h as simplify?</div>
</blockquote></div><br></div>
</div></div></blockquote></div><br></div>
</div></div></blockquote></div><br></div>
</div></div></blockquote></div><br></div>

--047d7b4728664e01040512c359da--
