Return-Path: <vincent.rahli@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id A5D0BBBAF
	for <caml-list@yquem.inria.fr>; Fri,  4 Jun 2010 23:12:44 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvcBADsJCUxKfVK0mGdsb2JhbACePQgVAQEBAQEICQwHESKuXYIBhSouiE8BAQMFhRIE
X-IronPort-AV: E=Sophos;i="4.53,363,1272837600"; 
   d="scan'208";a="64011320"
Received: from mail-wy0-f180.google.com ([74.125.82.180])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 04 Jun 2010 23:12:44 +0200
Received: by wyb34 with SMTP id 34so1347497wyb.39
        for <caml-list@yquem.inria.fr>; Fri, 04 Jun 2010 14:12:43 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:received:date:message-id
         :subject:from:to:content-type;
        bh=FhjdD0MraAv6+SyUq+BygWLq8zixpnvWwO4q8xXjR10=;
        b=LMwS5mP7pQbU3IERpk+DUPoNmFfgR/Nlwv4JpSrpWu+WKGG+phkj8tG4PFzjSKqZh2
         0lF+Cq+ZHXGYvf2HtRd0aBZ/FoEkbnzcLucldhJ7ALJEdxp7I5e8HihAenNYl37HBK8I
         I+ms/Q/i91dWsAaBbAoz9GXDuhT1H/D6BWGwE=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:date:message-id:subject:from:to:content-type;
        b=R4GqsTAD8ZjdOp5DUBFy8AUO/T4A7OHJH52w8hbSOkEGk02ePciWKnNqE1rnkghB42
         AiF46xSvfB/eLd3RHqeEQ6lCJvYzBx9x8DpENIoNK2d05hIXz29ahI193VTmk8/BepsV
         5RhtkTqzx+/KEEFnR/eUfPIFbMR80BLIpj7r0=
MIME-Version: 1.0
Received: by 10.216.161.67 with SMTP id v45mr122888wek.26.1275685963387; Fri, 
	04 Jun 2010 14:12:43 -0700 (PDT)
Received: by 10.216.86.4 with HTTP; Fri, 4 Jun 2010 14:12:43 -0700 (PDT)
Date: Fri, 4 Jun 2010 22:12:43 +0100
Message-ID: <AANLkTikQE7NQMVUR5mpO8t7ZJi4cfORWdRwauYH8xigG@mail.gmail.com>
Subject: Release of version 0.5 of the ULTRA type error slicer for SML
From: rahli vincent <vincent.rahli@gmail.com>
To: caml-list@yquem.inria.fr
Content-Type: multipart/alternative; boundary=0016e64c3986b16cec04883ac802
X-Spam: no; 0.00; datatype:01 inference:01 emacs:01 checker:01 functors:01 functor:01 generations:01 datatype:01 inference:01 emacs:01 checker:01 functors:01 functor:01 generations:01 ubuntu:98 

--0016e64c3986b16cec04883ac802
Content-Type: text/plain; charset=ISO-8859-1

We are happy to announce the release of the version 0.5 of our type
error slicing software for the SML programming language.

Major improvements over the previous release:
  * Handling of the SML 'open' feature.
  * Handling of the SML datatype replication feature.
  * Type error slices can now be displayed in a terminal window or in
    a web browser.
  * We supply Ubuntu and Fedora packages.

Other less important improvement is:
  * We improved our minimisation algorithm.

Even more changes are documented in the ChangeLog file.

The aim of our type error slicer is to provide useful type error
reports for pieces of code written in SML:
  * It identifies all of the program points that contribute to a type
    error, including the spot with the actual programming error that
    caused the type error.
  * It highlights these program points in the original, unchanged
    source code.
  * It avoids showing internal details of the operation of the type
    inference machinery.

New Ubuntu (Debian based) and Fedora (Red-Hat based) packages of our
type error slicer can be found at this URL:
  http://www.macs.hw.ac.uk/ultra/compositional-analysis/type-error-slicing/

We will also shortly release a plain archive of our type error
slicer.

At the time of the release of version 0.4, we forgot to update the web
demo.  We have now updated our web demo from version 0.3 to version 0.5.

Known limitations:
  * We have not yet built the software for other operating systems
    than Linux.
  * The currently supported user interfaces are via a terminal window,
    GNU Emacs (or our web demo).  We are currently developing a Vim
    interface.
  * Some type errors are not yet discovered (the user will need to
    rely on their usual type checker in these cases).  Notable spots
    where the implementation is incomplete are functors (you can work
    around this by including signatures on functor applications),
    equality types.
  * Concerning fixity declarations, programs are parsed as though the
    declarations were not there, which gives wrong results.
  * We don't yet handle overloaded constants (for example 1 is always
    of type int).
  * The details of the SML basis library are incomplete (fortunately
    the user can add any additional details they are using).
  * The software does not currently scale well to very large programs
    (we are still improving this).  It is currently suitable for small
    programs and use in teaching.
  * We do not report free identifiers anymore.
  * We have some known issues ';' that can lead to incorrect
    constraint generations and so to wrong type error messages.  We
    are currently working on a new version of the slicer that will fix
    this issue.

Best wishes,

Vincent Rahli and Joe Wells

--0016e64c3986b16cec04883ac802
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

We are happy to announce the release of the version 0.5 of our type<br>erro=
r slicing software for the SML programming language.<br><br>Major improveme=
nts over the previous release:<br>=A0 * Handling of the SML &#39;open&#39; =
feature.<br>
=A0 * Handling of the SML datatype replication feature.<br>=A0 * Type error=
 slices can now be displayed in a terminal window or in<br>=A0=A0=A0 a web =
browser.<br>=A0 * We supply Ubuntu and Fedora packages.<br><br>Other less i=
mportant improvement is:<br>
=A0 * We improved our minimisation algorithm.<br><br>Even more changes are =
documented in the ChangeLog file.<br><br>The aim of our type error slicer i=
s to provide useful type error<br>reports for pieces of code written in SML=
:<br>
=A0 * It identifies all of the program points that contribute to a type<br>=
=A0=A0=A0 error, including the spot with the actual programming error that<=
br>=A0=A0=A0 caused the type error.<br>=A0 * It highlights these program po=
ints in the original, unchanged<br>
=A0=A0=A0 source code.<br>=A0 * It avoids showing internal details of the o=
peration of the type<br>=A0=A0=A0 inference machinery.<br><br>New Ubuntu (D=
ebian based) and Fedora (Red-Hat based) packages of our<br>type error slice=
r can be found at this URL:<br>
=A0 <a href=3D"http://www.macs.hw.ac.uk/ultra/compositional-analysis/type-e=
rror-slicing/">http://www.macs.hw.ac.uk/ultra/compositional-analysis/type-e=
rror-slicing/</a><br><br>We will also shortly release a plain archive of ou=
r type error<br>
slicer.<br><br>At the time of the release of version 0.4, we forgot to upda=
te the web<br>demo.=A0 We have now updated our web demo from version 0.3 to=
 version 0.5.<br><br>Known limitations:<br>=A0 * We have not yet built the =
software for other operating systems<br>
=A0=A0=A0 than Linux.<br>=A0 * The currently supported user interfaces are =
via a terminal window,<br>=A0=A0=A0 GNU Emacs (or our web demo).=A0 We are =
currently developing a Vim<br>=A0=A0=A0 interface.<br>=A0 * Some type error=
s are not yet discovered (the user will need to<br>
=A0=A0=A0 rely on their usual type checker in these cases).=A0 Notable spot=
s<br>=A0=A0=A0 where the implementation is incomplete are functors (you can=
 work<br>=A0=A0=A0 around this by including signatures on functor applicati=
ons),<br>=A0=A0=A0 equality types.<br>
=A0 * Concerning fixity declarations, programs are parsed as though the<br>=
=A0=A0=A0 declarations were not there, which gives wrong results.<br>=A0 * =
We don&#39;t yet handle overloaded constants (for example 1 is always<br>=
=A0=A0=A0 of type int).<br>
=A0 * The details of the SML basis library are incomplete (fortunately<br>=
=A0=A0=A0 the user can add any additional details they are using).<br>=A0 *=
 The software does not currently scale well to very large programs<br>=A0=
=A0=A0 (we are still improving this).=A0 It is currently suitable for small=
<br>
=A0=A0=A0 programs and use in teaching.<br>=A0 * We do not report free iden=
tifiers anymore.<br>=A0 * We have some known issues &#39;;&#39; that can le=
ad to incorrect<br>=A0=A0=A0 constraint generations and so to wrong type er=
ror messages.=A0 We<br>
=A0=A0=A0 are currently working on a new version of the slicer that will fi=
x<br>=A0=A0=A0 this issue.<br><br>Best wishes,<br><br>Vincent Rahli and Joe=
 Wells<br>

--0016e64c3986b16cec04883ac802--

