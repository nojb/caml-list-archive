Return-Path: <goswin-v-b@web.de>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id E314EBC57
	for <caml-list@yquem.inria.fr>; Wed,  9 Jun 2010 17:11:51 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkMCAPJLD0zZSMDdkWdsb2JhbACeSxUBAQEBCQsKBxEDH74chRgE
X-IronPort-AV: E=Sophos;i="4.53,391,1272837600"; 
   d="scan'208";a="60961635"
Received: from fmmailgate01.web.de ([217.72.192.221])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 09 Jun 2010 17:11:51 +0200
Received:  from smtp08.web.de  ( [172.20.5.216])
	by fmmailgate01.web.de (Postfix) with ESMTP id 18AA015E1EB19;
	Wed,  9 Jun 2010 17:11:51 +0200 (CEST)
Received: from [78.43.204.177] (helo=frosties.localdomain)
	by smtp08.web.de with asmtp (TLSv1:AES256-SHA:256)
	(WEB.DE 4.110 #4)
	id 1OMMwY-0000Af-00; Wed, 09 Jun 2010 17:11:51 +0200
Received: from mrvn by frosties.localdomain with local (Exim 4.72)
	(envelope-from <goswin-v-b@web.de>)
	id 1OMMwY-0005Ms-H9; Wed, 09 Jun 2010 17:11:50 +0200
From: Goswin von Brederlow <goswin-v-b@web.de>
To: Jacques Carette <carette@mcmaster.ca>
Cc: Till Varoquaux <till@pps.jussieu.fr>, caml-list@inria.fr
Subject: Re: [Caml-list] Why is this allowed?
References: <4C03CBD3.3010606@mcmaster.ca>
	<AANLkTilMuMbRly7ZhDt97tZyvkzATpv4_eT0Zwub4hq9@mail.gmail.com>
	<4C03DBA6.8020208@mcmaster.ca>
Date: Wed, 09 Jun 2010 17:11:50 +0200
In-Reply-To: <4C03DBA6.8020208@mcmaster.ca> (Jacques Carette's message of
	"Mon, 31 May 2010 11:54:14 -0400")
Message-ID: <87mxv4nsuh.fsf@frosties.localdomain>
User-Agent: Gnus/5.110009 (No Gnus v0.9) XEmacs/21.4.22 (linux, no MULE)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: goswin-v-b@web.de
X-Sender: goswin-v-b@web.de
X-Provags-ID: V01U2FsdGVkX19EsQ1WxvDbKvrDiILHIs6t9Qfey5Zlr6tjKxvy
	E41PYrcy+GUBdwd3xfrJsbj7y0g63oObsKUj2ZkUClIIVjktku
	q6kCWKY7s=
X-Spam: no; 0.00; 'problem':01 ocaml:01 serialize:01 arbitrarily:01 ocaml:01 mfg:98 typing:01 typing:01 caml-list:01 writes:01 arbitrary:02 mcmaster:02 seems:03 jacques:03 jacques:03 

Jacques Carette <carette@mcmaster.ca> writes:

> Nice trick - but my 'problem' [1] regards arbitrary valid OCaml code
> and how to serialize code values.  The issue seems to be that one
> needs to attach an arbitrarily large typing environment to each part
> of a value, as there is no global typing environment which will do the
> job (because of shadowing).
>
> Jacques

This is no different from

let x = 1
let x = 2

Shadowing is totally allowed in ocaml.

MfG
        Goswin

