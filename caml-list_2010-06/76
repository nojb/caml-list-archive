Return-Path: <garrigue@math.nagoya-u.ac.jp>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 8CFC2BC57
	for <caml-list@yquem.inria.fr>; Wed,  9 Jun 2010 07:47:00 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjwFALLHDkyFBoIF/2dsb2JhbACSMo0DrxKOJgEEhRY
X-IronPort-AV: E=Sophos;i="4.53,389,1272837600"; 
   d="scan'208";a="52013925"
Received: from rabbit.math.nagoya-u.ac.jp (HELO mailhost.math.nagoya-u.ac.jp) ([133.6.130.5])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 09 Jun 2010 07:46:59 +0200
Received: from mailhost.math.nagoya-u.ac.jp (localhost [127.0.0.1])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTP id A9E4EB637;
	Wed,  9 Jun 2010 14:46:56 +0900 (JST)
Received: from mailhost.math.nagoya-u.ac.jp (camel-172 [172.16.254.4])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTP id 6AC048894;
	Wed,  9 Jun 2010 14:46:56 +0900 (JST)
DKIM-Signature: v=1; a=rsa-sha1; c=relaxed; d=math.nagoya-u.ac.jp; h=
	date:message-id:to:cc:subject:from:in-reply-to:references
	:mime-version:content-type:content-transfer-encoding; s=alpha;
	 bh=z3ngPGPjz5VQEUBcVZNP33xgowA=; b=lN/cHEyfMesOZ91ywdzZekA/65gk
	Fo/XhKArmNhcCt1CV8WFDxLUjn/B+ZZULIxr8WOTipzEWLcxQutIgdh+hpETUt7q
	KDu8+JtpID72hW+XIiMzpxgFtJ/4qj8y2xl2GD+6OVO5a77e8iRZWRC/bGszl6eL
	KtGiirX7MJ410u0=
DomainKey-Signature: a=rsa-sha1; h=Received:Date:Message-Id:To:Cc:Subject:From:In-Reply-To:References:X-Mailer:Mime-Version:Content-Type:Content-Transfer-Encoding; b=j42cKh4ry502JStXEMQR0CiD2WCNoAkxlkkTVDl5Qir2QIlKU84V2TEpDJ0IFbVGwucijJxwYsdFUVpJl+jEEaSUn4860LxGad1q5xw5tjcZdBeq7iGp6goA3abIdAkUlK/Upnkhj2LXO83/wCZEskjV/+QMGuaS/B81YhGnR6U=; c=nofws; d=math.nagoya-u.ac.jp; q=dns; s=alpha
Received: from localhost (bsdserver02 [172.16.249.2])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTP id 30A1A8893;
	Wed,  9 Jun 2010 14:46:56 +0900 (JST)
Date: Wed, 09 Jun 2010 02:34:35 +0100 (BST)
Message-Id: <20100609.023435.258059346.garrigue@math.nagoya-u.ac.jp>
To: kaustuv.chaudhuri@inria.fr
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Converting variants with only constant
 constructors to integers
From: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <AANLkTikRe85mNn83G8zU6JCQzjj2VkRlQQN1DOy1146q@mail.gmail.com>
References: <AANLkTimcF7VHWskWk3ZINn_ySH4oxIHFvFP1mXmqtw1x@mail.gmail.com>
	<AANLkTilJ6R6MPCY7d2E7IcjFzITMIJipHd2yyH-02TfD@mail.gmail.com>
	<AANLkTikRe85mNn83G8zU6JCQzjj2VkRlQQN1DOy1146q@mail.gmail.com>
X-Mailer: Mew version 6.2 on Emacs 23.0.95 / Mule 6.0 (HANACHIRUSATO)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; variants:01 constructors:01 integers:01 polymorphism:01 abstr:01 abstr:01 compilation:01 compiler:01 ocaml:01 1.0:98 1.0:98 wrote:01 caml-list:01 unsafe:01 heuristic:02 

From: Kaustuv Chaudhuri <kaustuv.chaudhuri@inria.fr>
> On Tue, Jun 8, 2010 at 4:37 PM, Jacques Garrigue
> <garrigue@math.nagoya-u.ac.jp> wrote:
>> Of course intify can cause a segmentation fault!
>>
>> # let arr = Array.of_list [intify 1.0; 0];;
>> Segmentation fault
> 
> This may be splitting hairs, but the reason that fails is that
> Array.of_list's ad hoc polymorphism heuristic assumes that if the
> first element of the list is allocated, then all elements are
> allocated. Merely changing the order works.
> 
>   # Array.of_list [Obj.repr 0 ; Obj.repr 1.0] ;;
>   - : Obj.t array = [|<abstr>; <abstr>|]
> 
> Which one of Obj.repr of Array.of_list to blame, if that's the right
> word, is not that relevant to any code a sane person might write.

No, this is not an heuristic, but a compilation method based on the
assumption that values of the same type have the same representation.
This is enforced by the compiler, but by using the Obj module, which
is out of the safe realm, you can break this invariant.
So, from the point of view of the ocaml specification, Obj.repr is
clearly to blame (and defined as unsafe to start with).

Jacques Garrigue

