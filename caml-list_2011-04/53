Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p38AemcM014074
	for <caml-list@sympa-roc.inria.fr>; Fri, 8 Apr 2011 12:40:48 +0200
X-IronPort-AV: E=Sophos;i="4.63,322,1299452400"; 
   d="scan'208,217";a="92524921"
Received: from zmbs1.inria.fr ([128.93.142.14])
  by mail4-relais-sop.national.inria.fr with ESMTP; 08 Apr 2011 12:40:43 +0200
Date: Fri, 8 Apr 2011 12:40:42 +0200 (CEST)
From: Emilie Balland <emilie.balland@inria.fr>
To: caml-list@inria.fr
Message-ID: <1020389207.1202077.1302259242936.JavaMail.root@zmbs1.inria.fr>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_1202076_812442519.1302259242935"
X-Originating-IP: [194.199.1.140]
X-Mailer: Zimbra 6.0.10_GA_2692 (ZimbraWebClient - FF3.0 (Mac)/6.0.10_GA_2692)
Subject: [Caml-list] DSL 2011 - Last CFP


------=_Part_1202076_812442519.1302259242935
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable


=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D Call for Papers =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=20

DSL 2011: Conference on Domain-Specific Languages=20
(IFIP sponsorship pending approval)=20

6-8 September 2011, Bordeaux, France=20

http://dsl2011.bordeaux.inria.fr/=20

IMPORTANT DATES=20

* 2011-04-18 : Abstracts due=20
* 2011-04-25 : Submissions due=20
* 2011-06-10 : Authors notified of decisions=20
* 2011-07-11 : Final manuscripts due=20
* 2011-09-05 : Distilled tutorials=20
* 2011-09-06 / 2011-09-08 : Main conference=20

CALL FOR PAPERS=20

Domain-specific languages have long been a popular way to shorten=20
the distance from ideas to products in software engineering. On one=20
hand, the interface of a DSL lets domain experts express high-level=20
concepts succinctly in familiar notation, such as grammars for text or=20
scripts for animation, and often provides guarantees and tools that take=20
advantage of the specifics of the domain to help write and maintain=20
these particular programs. On the other hand, the implementation of a=20
DSL can automate many tasks traditionally performed by a few experts=20
to turn a specification into an executable, thus making this expertise=20
available widely. Overall, a DSL thus mediates a collaboration between=20
its users and implementers that results in software that is more usable,=20
more portable, more reliable, and more understandable.=20


These benefits of DSLs have been delivered in domains old and new, such=20
as signal processing, data mining, and Web scripting. Widely known=20
examples of DSLs include Matlab, Verilog, SQL, LINQ, HTML, OpenGL,=20
Macromedia Director, Mathematica, Maple, AutoLisp/AutoCAD, XSLT, RPM,=20
Make, lex/yacc, LaTeX, PostScript, and Excel. Despite these successes,=20
the adoption of DSLs have been stunted by the lack of general tools and=20
principles for developing, compiling, and verifying domain-specific=20
programs. General support for building and using DSLs is thus urgently=20
needed. Languages that straddle the line between the domain-specific=20
and the general-purpose, such as Perl, Tcl/Tk, and JavaScript, suggest=20
that such support be based on modern notions of language design and=20
software engineering. The goal of this conference, following the last=20
one in 2009, is to explore how present and future DSLs can fruitfully=20
draw from and potentially enrich these notions.=20


We seek research papers on the theory and practice of DSLs, including=20
but not limited to the following topics.=20


* Foundations, including semantics, formal methods, type theory, and=20
complexity theory=20
* Language design, including concrete syntax, semantics, and types=20
* Software engineering, including domain analysis, software design,=20
and round-trip engineering=20
* Modularity and composability of DSLs=20
* Software processes, including metrics for software and language=20
evaluation=20
* Implementation, including parsing, compiling, program generation,=20
program analysis, transformation, optimization, and parallelization=20
* Reverse engineering, re-engineering, design discovery, automated=20
refactoring=20
* Hardware/software codesign=20
* Programming environments and tools, including visual languages,=20
debuggers, testing, and verification=20
* Teaching DSLs and the use of DSLs in teaching=20
* Case studies in any domain, especially the general lessons they=20
provide for DSL design and implementation=20


The conference will include a visit to the city of Bordeaux, a tour=20
and tasting at the wine museum and cellar, and a banquet at La Belle=20
=C9poque.=20

INSTRUCTIONS FOR AUTHORS=20

Papers will be judged on the depth of their insight and the extent=20
to which they translate specific experience into general lessons=20
for software engineers and DSL designers and implementers. Where=20
appropriate, papers should refer to actual languages, tools, and=20
techniques, provide pointers to full definitions, proofs, and=20
implementations, and include empirical results.=20

Proceedings will be published in Electronic Proceedings in Theoretical=20
Computer Science ( http://info.eptcs.org/) . Submissions and final=20
manuscripts should be at most 25 pages in EPTCS format.=20

PROGRAM COMMITTEE=20

* Emilie Balland (INRIA)=20
* Olaf Chitil (University of Kent)=20
* Zo=E9 Drey (IRIT)=20
* Nate Foster (Cornell University)=20
* Mayer Goldberg (Ben-Gurion University)=20
* Shan Shan Huang (LogicBlox)=20
* Sam Kamin (University of Illinois at Urbana-Champaign)=20
* Jerzy Karczmarczuk (University of Caen)=20
* Jan Midtgaard (Aarhus University)=20
* Keiko Nakata (Tallinn University of Technology)=20
* Klaus Ostermann (University of Marburg)=20
* Jeremy Siek (University of Colorado at Boulder)=20
* Tony Sloane (Macquarie University)=20
* Josef Svenningsson (Chalmers University of Technology)=20
* Paul Tarau (University of North Texas)=20
* Dana N. Xu (INRIA)=20

ORGANIZERS=20

Local chair: Emilie Balland (INRIA)=20
Program chairs: Olivier Danvy (Aarhus University),=20
Chung-chieh Shan (Rutgers University)=20


------------------------------------------------------------------------=

------=_Part_1202076_812442519.1302259242935
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<html><head><style type=3D'text/css'>p { margin: 0; }</style></head><body><=
div style=3D'font-family: Times New Roman; font-size: 12pt; color: #000000'=
><div style=3D"font-family: Times New Roman; font-size: 12pt; color: rgb(0,=
 0, 0);">=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D Call for Papers =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D<br><br>DSL 2011: Conference on D=
omain-Specific Languages <br>(IFIP sponsorship pending approval) <br><br>6-=
8 September 2011, Bordeaux, France <br><br><span class=3D"Object" id=3D"OBJ=
_PREFIX_DWT314"><span class=3D"Object" id=3D"OBJ_PREFIX_DWT360"><a target=
=3D"_blank" href=3D"http://dsl2011.bordeaux.inria.fr/">http://dsl2011.borde=
aux.inria.fr/</a></span></span> <br><br>
IMPORTANT DATES <br>
<br>
* <span class=3D"Object" id=3D"OBJ_PREFIX_DWT317"><span class=3D"Object" id=
=3D"OBJ_PREFIX_DWT318"><span class=3D"Object" id=3D"OBJ_PREFIX_DWT361">2011=
-04-18</span></span></span>: Abstracts due <br>
* <span class=3D"Object" id=3D"OBJ_PREFIX_DWT319"><span class=3D"Object" id=
=3D"OBJ_PREFIX_DWT320"><span class=3D"Object" id=3D"OBJ_PREFIX_DWT362">2011=
-04-25</span></span></span>: Submissions due <br>
* <span class=3D"Object" id=3D"OBJ_PREFIX_DWT321"><span class=3D"Object" id=
=3D"OBJ_PREFIX_DWT322"><span class=3D"Object" id=3D"OBJ_PREFIX_DWT363">2011=
-06-10</span></span></span>: Authors notified of decisions <br>
* <span class=3D"Object" id=3D"OBJ_PREFIX_DWT323"><span class=3D"Object" id=
=3D"OBJ_PREFIX_DWT324"><span class=3D"Object" id=3D"OBJ_PREFIX_DWT364">2011=
-07-11</span></span></span>: Final manuscripts due <br>
* <span class=3D"Object" id=3D"OBJ_PREFIX_DWT325"><span class=3D"Object" id=
=3D"OBJ_PREFIX_DWT326"><span class=3D"Object" id=3D"OBJ_PREFIX_DWT365">2011=
-09-05</span></span></span>: Distilled tutorials <br>
* <span class=3D"Object" id=3D"OBJ_PREFIX_DWT327"><span class=3D"Object" id=
=3D"OBJ_PREFIX_DWT329"><span class=3D"Object" id=3D"OBJ_PREFIX_DWT366">2011=
-09-06</span></span></span>/<span class=3D"Object" id=3D"OBJ_PREFIX_DWT328"=
><span class=3D"Object" id=3D"OBJ_PREFIX_DWT330"><span class=3D"Object" id=
=3D"OBJ_PREFIX_DWT367">2011-09-08</span></span></span>: Main conference <br=
><br>CALL FOR PAPERS <br><br>Domain-specific languages have long been a pop=
ular way to shorten <br>the distance from ideas to products in software eng=
ineering. On one <br>hand, the interface of a DSL lets domain experts expre=
ss high-level <br>concepts succinctly in familiar notation, such as grammar=
s for text or <br>scripts for animation, and often provides guarantees and =
tools that take <br>advantage of the specifics of the domain to help write =
and maintain <br>these particular programs. On the other hand, the implemen=
tation of a <br>DSL can automate many tasks traditionally performed by a fe=
w experts <br>to turn a specification into an executable, thus making this =
expertise <br>available widely. Overall, a DSL thus mediates a collaboratio=
n between <br>its users and implementers that results in software that is m=
ore usable, <br>more portable, more reliable, and more understandable. <br>=
<br><br>These benefits of DSLs have been delivered in domains old and new, =
such <br>as signal processing, data mining, and Web scripting. Widely known=
 <br>examples of DSLs include Matlab, Verilog, SQL, LINQ, HTML, OpenGL, <br=
>Macromedia Director, Mathematica, Maple, AutoLisp/AutoCAD, XSLT, RPM, <br>=
Make, lex/yacc, LaTeX, PostScript, and Excel. Despite these successes, <br>=
the adoption of DSLs have been stunted by the lack of general tools and <br=
>principles for developing, compiling, and verifying domain-specific <br>pr=
ograms. General support for building and using DSLs is thus urgently <br>ne=
eded. Languages that straddle the line between the domain-specific <br>and =
the general-purpose, such as Perl, Tcl/Tk, and JavaScript, suggest <br>that=
 such support be based on modern notions of language design and <br>softwar=
e engineering. The goal of this conference, following the last <br>one in 2=
009, is to explore how present and future DSLs can fruitfully <br>draw from=
 and potentially enrich these notions. <br><br><br>We seek research papers =
on the theory and practice of DSLs, including <br>but not limited to the fo=
llowing topics. <br><br><br>* Foundations, including semantics, formal meth=
ods, type theory, and <br>complexity theory <br>* Language design, includin=
g concrete syntax, semantics, and types <br>* Software engineering, includi=
ng domain analysis, software design, <br>and round-trip engineering <br>* M=
odularity and composability of DSLs <br>* Software processes, including met=
rics for software and language <br>evaluation <br>* Implementation, includi=
ng parsing, compiling, program generation, <br>program analysis, transforma=
tion, optimization, and parallelization <br>* Reverse engineering, re-engin=
eering, design discovery, automated <br>refactoring <br>* Hardware/software=
 codesign <br>* Programming environments and tools, including visual langua=
ges, <br>debuggers, testing, and verification <br>* Teaching DSLs and the u=
se of DSLs in teaching <br>* Case studies in any domain, especially the gen=
eral lessons they <br>provide for DSL design and implementation <br><br><br=
>The conference will include a visit to the city of Bordeaux, a tour <br>an=
d tasting at the wine museum and cellar, and a banquet at La Belle <br>=C9p=
oque. <br><br>INSTRUCTIONS FOR AUTHORS <br><br>Papers will be judged on the=
 depth of their insight and the extent <br>to which they translate specific=
 experience into general lessons <br>for software engineers and DSL designe=
rs and implementers. Where <br>appropriate, papers should refer to actual l=
anguages, tools, and <br>techniques, provide pointers to full definitions, =
proofs, and <br>implementations, and include empirical results. <br><br>Pro=
ceedings will be published in Electronic Proceedings in Theoretical <br>Com=
puter Science (<span class=3D"Object" id=3D"OBJ_PREFIX_DWT315"><span class=
=3D"Object" id=3D"OBJ_PREFIX_DWT316"><span class=3D"Object" id=3D"OBJ_PREFI=
X_DWT368"><a target=3D"_blank" href=3D"http://info.eptcs.org/%29">http://in=
fo.eptcs.org/)</a></span></span></span>. Submissions and final <br>manuscri=
pts should be at most 25 pages in EPTCS format. <br><br>PROGRAM COMMITTEE <=
br><br>* Emilie Balland (INRIA) <br>* Olaf Chitil (University of Kent) <br>=
* Zo=E9 Drey (IRIT) <br>* Nate Foster (Cornell University) <br>* Mayer Gold=
berg (Ben-Gurion University) <br>* Shan Shan Huang (LogicBlox) <br>* <span =
class=3D"Object" id=3D"OBJ_PREFIX_DWT331"><span class=3D"Object" id=3D"OBJ_=
PREFIX_DWT332"><span class=3D"Object" id=3D"OBJ_PREFIX_DWT369">Sam</span></=
span></span> Kamin (University of Illinois at Urbana-Champaign) <br>* Jerzy=
 Karczmarczuk (University of Caen) <br>* Jan Midtgaard (Aarhus University) =
<br>* Keiko Nakata (Tallinn University of Technology) <br>* Klaus Ostermann=
 (University of Marburg) <br>* Jeremy Siek (University of Colorado at Bould=
er) <br>* Tony Sloane (Macquarie University) <br>* Josef Svenningsson (Chal=
mers University of Technology) <br>* Paul Tarau (University of North Texas)=
 <br>* Dana N. Xu (INRIA) <br><br>ORGANIZERS <br><br>Local chair: Emilie Ba=
lland (INRIA) <br>Program chairs: Olivier Danvy (Aarhus University), <br>Ch=
ung-chieh Shan (Rutgers University) <br><br><br>---------------------------=
---------------------------------------------</div></div></body></html>=

------=_Part_1202076_812442519.1302259242935--
