Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p3QJG1UD008168
	for <caml-list@sympa-roc.inria.fr>; Tue, 26 Apr 2011 21:16:01 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AucCAHUZt03RVdo2mGdsb2JhbACYNY0mCBQBAQEBAQgJDQcUJasPiniCJ4VLNIheAQEDBoVwBI5Bihc6g1E
X-IronPort-AV: E=Sophos;i="4.64,270,1301868000"; 
   d="scan'208";a="93889864"
Received: from mail-yi0-f54.google.com ([209.85.218.54])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 26 Apr 2011 21:15:59 +0200
Received: by yie12 with SMTP id 12so555298yie.27
        for <caml-list@inria.fr>; Tue, 26 Apr 2011 12:15:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:date:message-id:subject:from:to
         :content-type;
        bh=EZyB1zEzr53OdGDJKo+7hcOMXVgnca2QHj6iaLQbuMA=;
        b=quDhPSJ02F/PPmI/5GzPmFOGgmo/wsTpMAHTxpCzqI0ccPXYdsIz+sboyIJKcSyomz
         GXsTFSgdaUktipP9wqWOYLmUw5FdgHmRbCtGvu4jB5qjW/MEQQlDV6MdLQw0iL65Olur
         DKgSktFzIvmtM72WNUcab4jHxbm2ln9UnBGPE=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:date:message-id:subject:from:to:content-type;
        b=AIAyBTkgwZZWz3Us66URiv4q4vcIMwB200JBj3BEqqG4DQsXGBXDkYhwknXxVjIPeO
         jnxlf7J9kCqjv9JSC6glYSQTazcVK+CyRnQwZGDEmHOMmB6i8euKAaZnpq/0dd81p/As
         YkhI/ADos6DqJ2MAFtNjQQqFL5ATd35diuSj8=
MIME-Version: 1.0
Received: by 10.101.39.9 with SMTP id r9mr712191anj.147.1303845357441; Tue, 26
 Apr 2011 12:15:57 -0700 (PDT)
Received: by 10.100.10.1 with HTTP; Tue, 26 Apr 2011 12:15:57 -0700 (PDT)
Date: Tue, 26 Apr 2011 21:15:57 +0200
Message-ID: <BANLkTikK2CLn1zoeA2i8DSMdCoEFsO9j6g@mail.gmail.com>
From: Peter Ronnquist <peter.ronnquist@gmail.com>
To: caml-list@inria.fr
Content-Type: text/plain; charset=ISO-8859-1
X-Validation-by: peter.ronnquist@gmail.com
Subject: [Caml-list] f#/mono vs ocaml runtime system - open gl animation screen tearing.

Hi all,

I have been experimenting with f# and mono on debian linux and
compared it with ocaml.
I am interested in visual presentations for example games and in my
tests f# + mono + opentk was able to make completely smooth animations
using opengl (opentk) on debian 6.0 (squeeze).

Ocaml + lablgl gives "stutters" in the animation within the period of
a couple of seconds. The animation runs smooth for a couple of seconds
and then the animation update is disturbed with the result that the
image is "teared". The tearing lasts only for a fraction of second but
is visible for a trained eye.

I suspected that the GC could be a cause for this and I tried to
manipulate the GC settings but I could not get a completely smooth
animation for a longer period of time.

This is completely acceptable for many applications but for making a
game or for the meticulous graphical applicaton user it is not ideal.

My thought is that maybe f#/mono unboxes more values than ocaml and in
this way the GC doesn't need to work as hard?

My question really is if you think it is worthwhile to investigate the
runtime system for mono and compare it with the runtime system for
ocaml to locate the differences that might influence the animation and
then even update the ocaml runtime system to use a similar strategy
as the f# runtime system?

I would be interested in this but it would be nice to first hear from
the list if this is a good idea. I also read in the Jane Street blog
(http://ocaml.janestreet.com/?q=node/89) that ocamlpro might work on
the ocaml runtime system (including unboxing).

Best Regards
Peter Ronnquist
