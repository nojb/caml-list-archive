Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p3KCrjdM020661
	for <caml-list@sympa-roc.inria.fr>; Wed, 20 Apr 2011 14:53:45 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnABAIzWrk3VhjEVmWdsb2JhbACXcY1LFAEBAQEBCAsLBxQliG++ZIVxBJIhBw
X-IronPort-AV: E=Sophos;i="4.64,246,1301868000"; 
   d="scan'208";a="106326857"
Received: from ihsmtp01cons.lis.interhost.com ([213.134.49.21])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 20 Apr 2011 14:53:40 +0200
Received: from [192.168.1.64] ([178.166.9.223]) by ihsmtp01cons.lis.interhost.com with Microsoft SMTPSVC(6.0.3790.3959);
	 Wed, 20 Apr 2011 13:53:30 +0100
Message-ID: <4DAED747.5060105@inescporto.pt>
Date: Wed, 20 Apr 2011 13:53:27 +0100
From: Hugo Ferreira <hmf@inescporto.pt>
User-Agent: Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.14) Gecko/20110223 Thunderbird/3.1.8
MIME-Version: 1.0
To: caml-list@inria.fr
References: <2054357367.219171.1300974318806.JavaMail.root@zmbs4.inria.fr>	<4D8BD02D.1010505@inria.fr>	<4D8C73C8.6020801@inescporto.pt>	<1301055903.8429.314.camel@thinkpad>	<341494683.237537.1301057887481.JavaMail.root@zmbs4.inria.fr>	<4D8C944A.9060601@inria.fr>	<4D8CB859.9040709@inescporto.pt>	<4D8CDDCC.4010000@ens-lyon.org>	<4D8CEAA4.2030403@inescporto.pt>	<BANLkTikKSVLZcffTn6Ku8eZUyDdDT8cykA@mail.gmail.com>	<1303244809.8429.1272.camel@thinkpad>	<4DAE9278.4050701@inescporto.pt> <BANLkTi=1s8_Yq9O52BiWapjNmbpP74EQ5A@mail.gmail.com>
In-Reply-To: <BANLkTi=1s8_Yq9O52BiWapjNmbpP74EQ5A@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 20 Apr 2011 12:53:30.0882 (UTC) FILETIME=[F3461620:01CBFF59]
Subject: Re: [Caml-list] Efficient OCaml multicore -- roadmap?

On 04/20/2011 01:30 PM, Markus Mottl wrote:
> On Wed, Apr 20, 2011 at 03:59, Hugo Ferreira<hmf@inescporto.pt>  wrote:
>> Agreed. Currently I am using messaging via sexplib to send data-sets to
>> slaves for processing and returns results to a master process the same
>> way. But my objective is to share data structures and return partial
>> results to a master process. Returning results requires messaging.
>
> Btw., why not use bin-prot instead of sexplib for messaging?  It is
> not human-readable, but otherwise comparable in convenience.  It is
> very much more efficient (especially for numeric data), both in terms
> of processing speed and storage requirements.
>

Most of the data-set and the results are symbolic (sets of clauses in
predicate logic) which are passed on as text to be parsed. Don't know
if bin-prot helps any in this context.

Thanks for the suggestion.
Hugo F.

> Regards,
> Markus
>

