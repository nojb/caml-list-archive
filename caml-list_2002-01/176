Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA20822; Thu, 17 Jan 2002 19:33:25 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA20581 for <caml-list@pauillac.inria.fr>; Thu, 17 Jan 2002 19:33:24 +0100 (MET)
Received: from bastion.artisan.com ([209.144.161.130])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g0HIXNX17015
	for <caml-list@inria.fr>; Thu, 17 Jan 2002 19:33:23 +0100 (MET)
Received: from ypmaster.artisan.com (ypmaster [172.16.2.1])
	by bastion.artisan.com (8.9.2/8.9.2) with ESMTP id KAA26805;
	Thu, 17 Jan 2002 10:34:26 -0800 (PST)
Received: from reggie.artisan.com (reggie [172.16.10.83])
	by ypmaster.artisan.com (8.9.2/8.9.2-arti) with ESMTP id KAA28912;
	Thu, 17 Jan 2002 10:33:06 -0800 (PST)
Received: (from johnm@localhost)
	by reggie.artisan.com (8.9.2/8.9.2) id KAA07206;
	Thu, 17 Jan 2002 10:33:06 -0800 (PST)
X-Authentication-Warning: reggie.artisan.com: johnm set sender to johnm@artisan.com using -f
From: John Malecki <johnm@artisan.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15431.6370.86918.38285@reggie.artisan.com>
Date: Thu, 17 Jan 2002 10:33:06 -0800
To: Doug Bagley <doug@bagley.org>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] error messages to stdout?
In-Reply-To: <15429.56844.510694.554970@ns.bagley.org>
References: <15429.3000.625598.380078@ns.bagley.org>
	<87n0ze9ivj.dlv@wanadoo.fr>
	<15429.56844.510694.554970@ns.bagley.org>
X-Mailer: VM 7.00 under Emacs 20.4.1
X-Organization: Artisan Components, Inc.
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Doug Bagley wrote (2002-01-16T14:09:48-0600):
 > 
 > Anyway, I have a workaround, I wrote a "trampoline" program that can
 > be used in place of the toplevel interpreter and does the compilation
 > transparently for lazy persons such as myself.
 > 
 > It essentially turns any compiled language into a scripting language.
 > If anyone is interested in it ... I could clean it up for public
 > consumption.

Hi Doug,

I'd be interested in the trampoline program.

At the moment we are operating in a homogeneous computing environment.
Sooner or later we will add some a different computer architecture to
our pool and I was thinking about how to take advantage of compiling
byte-code once and using it on all platforms.  This has the advantage
that a developer can compile once, on any one platform, and make that
program immediately available on all other machine architectures.

I'm not sure of the best way to do this.  I was thinking of using the
bash MACHTYPE environment variable and then install the byte-code
program in /usr/local/bin but have the 1st line of that file say

   #! /usr/local/bin/ocamlrun.$MACHTYPE

Unfortunately the loader does not perform environment variable
expansion.  I tried other tricks but I couldn't find a simple "1
liner".  I'm still looking for something simple.  If anyone has any
ideas I'd like to hear them.

(Yes, there are probably automount tricks I could use but I'm looking
for a solution that will work for people without administrator
privileges.)


-cheers
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

