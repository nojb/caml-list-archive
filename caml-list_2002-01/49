Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA12162; Tue, 8 Jan 2002 20:15:50 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA11824 for <caml-list@pauillac.inria.fr>; Tue, 8 Jan 2002 20:15:49 +0100 (MET)
Received: from smtpout.mac.com ([204.179.120.86])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g08JFlr24741
	for <caml-list@inria.fr>; Tue, 8 Jan 2002 20:15:47 +0100 (MET)
Received: from smtp-relay01.mac.com (server-source-si02 [10.13.10.6])
	by smtpout.mac.com (8.12.1/8.10.2/1.0) with ESMTP id g08JFj6L010347
	for <caml-list@inria.fr>; Tue, 8 Jan 2002 11:15:46 -0800 (PST)
Received: from asmtp02.mac.com ([10.13.10.66]) by
          smtp-relay01.mac.com (Netscape Messaging Server 4.15 relay01 Jun
          21 2001 23:53:48) with ESMTP id GPMW6900.1JQ for
          <caml-list@inria.fr>; Tue, 8 Jan 2002 11:15:45 -0800 
Received: from smeagol.ece.ucsb.edu ([128.111.56.20]) by
          asmtp02.mac.com (Netscape Messaging Server 4.15 asmtp02 Jun 21
          2001 23:53:48) with ESMTP id GPMW6900.V7O for
          <caml-list@inria.fr>; Tue, 8 Jan 2002 11:15:45 -0800 
Date: Tue, 8 Jan 2002 11:15:26 -0800
Mime-Version: 1.0 (Apple Message framework v480)
Content-Type: text/plain; charset=US-ASCII; format=flowed
Subject: [Caml-list] Complex stuff
From: shiv@mac.com
To: caml-list@inria.fr
Content-Transfer-Encoding: 7bit
Message-Id: <123971FA-046C-11D6-9430-003065BDAA76@mac.com>
X-Mailer: Apple Mail (2.480)
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Sorry to bring this up again ...

I know that the Ocaml team might be implementing complex numbers in 
Ocaml.

However, I need complex support now and I was wondering what the best 
way to proceed would be, if I want to port the code over to the native 
complex support as and when it becomes available?

I need the basic arithmetic and trignometric operations and bigarray 
(complex32, complex64 and fortran layout) support.

I could borrow the basic arithmetic and trignometric stuff from Psilab 
or even Clean libraries. Should I represent complex numbers as tuples or 
record (tuples I guess, since that is what Psilab does)?

What about the bigarray support? The basic stuff I can roll on my own, 
unless somebody else has already done it and can provide me with code. 
How about the bracket notation? Do I need to use camlp4 to get a.{i,j} 
to return a complex number and a.{i,j} <- to store a complex number in 
(i,j)th position (etc..)?

The reason I need the a.{i,j} notation is that I already have real 
number versions of my code and the complex versions will be identical. 
However, for performance reasons I cannot use functors. So I intend to 
do cut-and-paste!

Any advice and/or code will be appreciated.

Thanks,

--shiv--

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

