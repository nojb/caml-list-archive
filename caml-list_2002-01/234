Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA20165; Thu, 24 Jan 2002 16:46:36 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA20200 for caml-list@pauillac.inria.fr; Thu, 24 Jan 2002 16:46:35 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA09779 for <caml-list@pauillac.inria.fr>; Wed, 23 Jan 2002 12:20:30 +0100 (MET)
Received: from mail12.speakeasy.net (mail12.speakeasy.net [216.254.0.212])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g0NBKTf16356
	for <caml-list@inria.fr>; Wed, 23 Jan 2002 12:20:29 +0100 (MET)
Received: (qmail 28021 invoked from network); 23 Jan 2002 11:20:27 -0000
Received: from unknown (HELO speakeasy.net) ([64.81.145.152]) (envelope-sender <arty@speakeasy.net>)
          by mail12.speakeasy.net (qmail-ldap-1.03) with SMTP
          for <caml-list@inria.fr>; 23 Jan 2002 11:20:27 -0000
Message-ID: <3C4EAA51.FF12EC95@speakeasy.net>
Date: Wed, 23 Jan 2002 06:19:29 -0600
From: art <arty@speakeasy.net>
X-Mailer: Mozilla 4.75 [en] (X11; U; Linux 2.4.1 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: [Caml-list] ocaml in the kernel (again)
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I found the idea of ocaml code in the kernel intriguing enough to do
some digging.
It turns out that ocamlopt can compile a viable kernel if you try hard
enough, and
this allows the C parts of the kernel to give caml code a shot at
initialization,
including allowing ocaml code to register callbacks, etc that will be
called when
the kernel is running.  The following page describes what's there, which
while not
perfectly complete is enough to work with reasonably.  This may be a
nice
opportunity to do a project like foxnet, but to get everything except
the ethernet
physical-layer driver into a nicer language.  One might consider that
code thus
written would be less exploitable by a malicious hacker than equivalent
C code.

http://64.81.145.152/~arty/caml.html

Art
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

