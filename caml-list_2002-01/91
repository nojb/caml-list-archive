Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA24603; Fri, 11 Jan 2002 22:01:05 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA24502 for <caml-list@pauillac.inria.fr>; Fri, 11 Jan 2002 22:01:04 +0100 (MET)
Received: from plink.bolt-action.com (node-d8e9cca3.powerinter.net [216.233.204.163])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g0BL13P02611
	for <caml-list@inria.fr>; Fri, 11 Jan 2002 22:01:03 +0100 (MET)
Received: from checkerlap.d6.com (silencer.bolt-action.com [216.233.204.162])
	by plink.bolt-action.com (8.9.3/8.9.3) with ESMTP id OAA03423
	for <caml-list@inria.fr>; Fri, 11 Jan 2002 14:47:41 -0800
Message-Id: <4.3.2.7.2.20020111130235.00dc17f0@arda.pair.com>
X-Sender: checker@arda.pair.com
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Fri, 11 Jan 2002 13:05:32 -0800
To: caml-list@inria.fr
From: Chris Hecker <checker@d6.com>
Subject: [Caml-list] Fwd: better garbage collection?
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


I'm not remotely knowledgable on GC, but a friend forwarded this to me, so maybe it's interesting to the list?  Or maybe everybody already knows about this and it's boring.  Whichever.  ;)  Can anybody with a clue contrast this with Ocaml's GC strategy?

>Generation-based collection techniques alleviate the problem somewhat by concentrating collection efforts on small but hopefully gainful areas of memory, the so-called young generations. This reduces the need for collecting the remaining large memory area, the old, or mature, generation, but in no way obviates it. Traditionally, conventional techniques have been employed for old generation collection, leading to pauses which, although less frequent, are still highly disruptive. 
>
>Recently, Hudson & Moss have introduced an exciting new algorithm, the Train Algorithm, for performing efficient incremental collection of old generation space [HM92]. Using the algorithm, generational collectors can be extended to provide non-disruptive collection of all generational areas. 

http://www.daimi.au.dk/~beta/Papers/Train/train.html

Chris

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

