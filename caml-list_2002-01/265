Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA00122; Sat, 26 Jan 2002 02:46:39 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA00421 for <caml-list@pauillac.inria.fr>; Sat, 26 Jan 2002 02:46:34 +0100 (MET)
Received: from favie.faith.gr.jp (favie.faith.gr.jp [61.127.175.250])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g0Q1kWf10925
	for <caml-list@inria.fr>; Sat, 26 Jan 2002 02:46:32 +0100 (MET)
Received: from localhost (dhcp7.faith.gr.jp [192.168.1.17])
	by favie.faith.gr.jp (8.9.3/8.9.3) with ESMTP id KAA07659;
	Sat, 26 Jan 2002 10:46:28 +0900
To: itz@speakeasy.org
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Compiler ActiveDVI (CVS)
In-Reply-To: <86pu3ylywc.fsf@speakeasy.org>
References: <20020125151002.B16553@dpt-info.u-strasbg.fr>
	<20020126075921Y.garrigue@kurims.kyoto-u.ac.jp>
	<86pu3ylywc.fsf@speakeasy.org>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20020126104546G.garrigue@kurims.kyoto-u.ac.jp>
Date: Sat, 26 Jan 2002 10:45:46 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 40
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello Ian,

> Jacques> If you start to mess around with the directories, this is not
> Jacques> very helpful for anybody. 
> 
> Yes, it is: to people with experience on Debian, but none on Ocaml.
> Which is exactly the sort of people that would install a binary
> package, I think.

The point is that the "right" way to compile an extension to ocaml is
to use ocamlc, which will automatically add /usr/lib/ocaml to the
include path. If the caml subdirectory is not there, this will not be
very useful. Using ocamlc will also set properly some compilation
flags for thread compliance, and make sure you can build a dll.

Since these headers will preferably _not_ be used by gcc directly,
they don't need to be in the standard hierarchy.

Another problem is that both ocaml's (unfortunately limited)
documentation, and ocaml developpers base themselves on a standard
installation. If you start messing around, you end-up with the kind of
quiproquo we are seeing here.

> The way I did it when I built Ocaml from sources was with a symlink,
> so that it existed in both places.

A symlink avoids all these problems. And if you do it yourself, you
know that you're doing something nonstandard, and will no bother the
developpers with this.
 
> BTW, /usr/include/ocaml (to match the package name) would be a better
> name. 

That seems a good idea too.

By the way, all my comments do not intend to criticize the work of
packagers. I know this is a hard task. I just hope we could end up
with a better way to combine efforts.

Jacques Garrigue
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

