Return-Path: <SRS0=VY8U=BA=polytechnique.org=alan.schmitt@bounces.m4x.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 3F574E004D
	for <caml-list@sympa.inria.fr>; Tue, 21 Jul 2020 16:43:10 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=Pass smtp.pra=alan.schmitt@polytechnique.org; spf=Pass smtp.mailfrom=SRS0=VY8U=BA=polytechnique.org=alan.schmitt@bounces.m4x.org; spf=Pass smtp.helo=postmaster@mx1.polytechnique.org
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  alan.schmitt@polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=pra; client-ip=129.104.30.34;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="SRS0=VY8U=BA=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="alan.schmitt@polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  SRS0=VY8U=BA=polytechnique.org=alan.schmitt@bounces.m4x.org
  designates 129.104.30.34 as permitted sender)
  identity=mailfrom; client-ip=129.104.30.34;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="SRS0=VY8U=BA=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="SRS0=VY8U=BA=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  postmaster@mx1.polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=helo; client-ip=129.104.30.34;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="SRS0=VY8U=BA=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="postmaster@mx1.polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
IronPort-PHdr: =?us-ascii?q?9a23=3AgeVGqRT7sZp9HRtGeImTV91t9tpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZheGt8tkgFKBZ4jH8fUM07OQ7/m+HzBeqsvd+Fk5M7V0Hycfjs?=
 =?us-ascii?q?sXmwFySOWkMmbcaMDQUiohAc5ZX0Vk9XzoeWJcGcL5ekGA6ibqtW1aFRrwLxd6?=
 =?us-ascii?q?KfroEYDOkcu3y/qy+5rOaAlUmTaxe7x/IAi3oAnLucQbgIRuJ6Y+xxDUvnZGZu?=
 =?us-ascii?q?NayH9yK1mOhRj8/MCw/JBi8yRUpf0s8tNLXLv5caolU7FWFSwqPG8p6sLlsxnD?=
 =?us-ascii?q?VhaP6WAHUmoKiBpIAhPK4w/8U5zsryb1rOt92C2dPc3rUbA5XCmp4ql3RBP0ji?=
 =?us-ascii?q?oMKjk2/nzKisxrlKJUvg6upwBxzY7TZYGaLvt+fqXAdt8eSmdMWsNdWipBDo2/?=
 =?us-ascii?q?aYsPEesBPf1Zr4bmo1sBswa1BAerBOP11zBInWL90ak03ug9FA3L2hErEdATv3?=
 =?us-ascii?q?TOtNj7NLkcX/27wqfLwjrMc+hb1i3h5IXSaB0tve2AULB2fMHMyUcvDQTFjlCI?=
 =?us-ascii?q?pIH5OzOazOINuHWG4eV8VeKvjm8nqx1tojOywcojkI3JiZgTylze7iV23IY1Jd?=
 =?us-ascii?q?i5SE5nfd6pC4NQtyaeN4p2XsMtXX1nuCY8yr0HoJ67YTYFxI4gxx7FZPyKao6F?=
 =?us-ascii?q?6Q/sW+iNOzl3nm5leK6hiBao90it0u3xWMe03lpUriRInNnCuH8M2hHR7sWKV/?=
 =?us-ascii?q?tz80av1zuNyw3f9vxJL04omafFNZIs3KI9moYdv0rDHyL7hEv4gqGQe0459Oao?=
 =?us-ascii?q?7OHnba/npp+aL4J0kh/xMrgvmsyjH+s4Kg8OX22e+euizrHj+1P2QKlSgv0xjq?=
 =?us-ascii?q?bWqpXaJcABqq6+GQ9V3Z4v6xm+Dze60NQYgGIIIEhZdxKAiojlI17OIPHkDfe/?=
 =?us-ascii?q?nlSjiy1nx/HBPrH5A5XNKGLDkLb7crpn5U5c0hI/zdFC6JNUDrEBJOj/WkjrtN?=
 =?us-ascii?q?zXCBIyLg+6w/7/BdlgyI8TXXiDDrKFPK7dq1OF6P4jL/OCaYIaoDrwKPko6+Tw?=
 =?us-ascii?q?gXI2llIRZ7Sl0JgJZHyiA/hqPliVbHzxidkbC2gKpBAxTOnyhV2CTzFTY3GyUr?=
 =?us-ascii?q?o55jA0FY6qF5/DRoepgL2BwCe0AIFZZmBAClCNCHfoapuLV+0LaCKILc9tij0E?=
 =?us-ascii?q?Vb6/RI89zRyiqRH2xr59IubJ5iEVuojv2dZp6+HJmxw/+iR4D8GH3GGMS2F0kH?=
 =?us-ascii?q?kIRzgz3K1nvEJz1kqN3bRgjvNXF9Ne5P1GXx8nOJPA1+F6E9fyWgbBf9eVVlmp?=
 =?us-ascii?q?XtWmATcwTtIo3t8BfVxxG9K4jhDMxyelGbsVmKaNBJAu6aLTw3jxJ8N8y3bayK?=
 =?us-ascii?q?kslEIpQsxSNW2gmqFw6RPTC5TMk0iWmKemb6Mc3DTC9Gub12qBoFlYUBJsUaXC?=
 =?us-ascii?q?RX0QelHZrdH95k/bS7+uCK8nMhdaxM6ZKqpKb8Xpgk9cSPfiPtTeeWOxlH2qCR?=
 =?us-ascii?q?aG3LPfJLbtLi8ZwyOXQBwAjAY7+WmAcw4zGnHl6yjVEzokXRq7aFzq2e1/s2+g?=
 =?us-ascii?q?CE443gWOKUp72OzxshUcgPjZT/IIwpoFvj0gonN6BhL11NXTE/KEphF9Z+Nbe9?=
 =?us-ascii?q?k8/F5D22XJ8QFgbbK6KKU3r1oXdUxMtEPr1glrQtFJlcEs6mghzA9zNb6wyFRF?=
 =?us-ascii?q?Zi+V1pD2O6TKJy/15h/5OP2e4U3XzNvDovRH0/8/sVi241DwRxgStk5/2twQ6E?=
 =?us-ascii?q?Oyo5DDDQ4cS5X0Cxll/R9nobrXeW84u5OS0mdjY/Dt723ynukxDe5g8S6OOtdS?=
 =?us-ascii?q?NKTeT133A5RcH8+qOfAnkFivbwsZMaZV7qFmZpr6JcvD47aiOaNbpBzjlX5Oud?=
 =?us-ascii?q?EvykWI5jZxQe7O3o8YzrefxATVDjo=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DaBACK/hZffSIeaIFgHQEBAQEJARIBB?=
 =?us-ascii?q?QUBggoCgSGBGAFdVTIshDOJAYsjhTuNVIUUA2ABAwEMGAEMBwECBAEBhAiCTwI?=
 =?us-ascii?q?dBgEFMxMCEAEBBQEBAQIBAwMEARMBAQsUCIYMDEMBAQQLAYFiDAwDA4MkASEKZ?=
 =?us-ascii?q?SMDFAcDAhEBFwEUChcBEhqDDYJ8BAEKkFabeoEyhDsBAwIOAw8vg3mBQA0CE4E?=
 =?us-ascii?q?WAYU4R4Jug14mD4FMP4ERgmJsgkUMCwEBAQEBAYETIAYBAYM2gmAEj0Uka5F1g?=
 =?us-ascii?q?iKPWFwoB4JggQgEC4ZDfIpWhliEGZsvIZFgh1MHcoFbhXeKOwWESYFAKoFJHgw?=
 =?us-ascii?q?HMxowgngBAQExCWANkg+BPoEmgXU7hUEDPzMCAQEzAgYBBwEBAwl1AQEFEwsBX?=
 =?us-ascii?q?oJ+iHcQF4IeAQE?=
X-IPAS-Result: =?us-ascii?q?A0DaBACK/hZffSIeaIFgHQEBAQEJARIBBQUBggoCgSGBGAF?=
 =?us-ascii?q?dVTIshDOJAYsjhTuNVIUUA2ABAwEMGAEMBwECBAEBhAiCTwIdBgEFMxMCEAEBB?=
 =?us-ascii?q?QEBAQIBAwMEARMBAQsUCIYMDEMBAQQLAYFiDAwDA4MkASEKZSMDFAcDAhEBFwE?=
 =?us-ascii?q?UChcBEhqDDYJ8BAEKkFabeoEyhDsBAwIOAw8vg3mBQA0CE4EWAYU4R4Jug14mD?=
 =?us-ascii?q?4FMP4ERgmJsgkUMCwEBAQEBAYETIAYBAYM2gmAEj0Uka5F1giKPWFwoB4JggQg?=
 =?us-ascii?q?EC4ZDfIpWhliEGZsvIZFgh1MHcoFbhXeKOwWESYFAKoFJHgwHMxowgngBAQExC?=
 =?us-ascii?q?WANkg+BPoEmgXU7hUEDPzMCAQEzAgYBBwEBAwl1AQEFEwsBXoJ+iHcQF4IeAQE?=
X-IronPort-AV: E=Sophos;i="5.75,379,1589234400"; 
   d="scan'208,217";a="460693886"
X-MGA-submission: =?us-ascii?q?MDHMzo+Gt1M/0smT6i4/49mjNJVrxmwHmpncpA?=
 =?us-ascii?q?tnnM0H5HeA+XlqK+5zVLAO1fBLp2fLSi2C0Y7kZdoYuXTXHsDI+oKbK/?=
 =?us-ascii?q?iHUw0rXdDFAqI1StKJpAgcGF2Kizj+TNyONQhhqnGgoG5SqfXqM6NRlr?=
 =?us-ascii?q?eTRwwRFa7INh9PvhmyJafeyw=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 21 Jul 2020 16:42:21 +0200
Received: from set (lfbn-orl-1-1118-111.w86-244.abo.wanadoo.fr [86.244.182.111])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id 44CF5561218;
	Tue, 21 Jul 2020 16:42:17 +0200 (CEST)
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr, comp@lists.orbitalfox.eu
Date: Tue, 21 Jul 2020 16:42:16 +0200
Message-ID: <871rl5aq0n.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Jul 21 16:42:20 2020 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000002, queueID=6694956122A
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Hello

Here is the latest OCaml Weekly News, for the week of July 14 to 21,
2020.

Table of Contents
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

Dune-release: version 1.4.0 released
Using AF_XDP sockets for high-performance packet processing in OCaml
Ubase 0.03
clangml 4.2.0: OCaml bindings for Clang API (for C and C++ parsing)
Old CWN


Dune-release: version 1.4.0 released
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90

  Archive:
  [https://discuss.ocaml.org/t/dune-release-version-1-4-0-released/6103/1]


Sonja Heinze announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  This post is about [dune-release], a tool that helps users release
  their packages to Opam in a fast and organized manner. You can install
  it via `opam install dune-release'.

  On behalf of the dune-release team at Tarides, I'm happy to announce
  the new dune-release [1.4.0 release]. The release includes two new
  subcommands described below and a variety of bug fixes and user
  experience improvements. In particular, we've put some work into
  improving the error handling and reporting.

  One of the new subcommands is `dune-release config' , which inspects
  and edits dune-release's global configuration, such as git related,
  opam related and github related data. For example, if you insert a
  typo when being asked for your github id during your first release
  with dune-release, you can correct it comfortably with that new
  subcommand.

  The other new subcommand is `dune-release delegate-info', which helps
  users with an alternative release workflow to integrate dune-release
  into it: imagine you want to use dune-release only for a couple of
  things, such as tagging the distribution and creating the distribution
  tarball and the documentation.  In that case, now you can integrate
  the work done by dune-release into your individual release workflow by
  accessing the path to the created tarball etc via `dune-release
  delegate-info'. It forms part of the broader change in progress
  described in the following post:
  [https://discuss.ocaml.org/t/replacing-dune-release-delegates/4767]


[dune-release] https://github.com/ocamllabs/dune-release/#readme

[1.4.0 release]
https://github.com/ocamllabs/dune-release/releases/tag/1.4.0


Using AF_XDP sockets for high-performance packet processing in OCaml
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90

  Archive:
  [https://discuss.ocaml.org/t/using-af-xdp-sockets-for-high-performance-pa=
cket-processing-in-ocaml/6106/1]


suttonshire announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I just wanted to share a fun result from a project I've been hacking
  on.  [ocaml-xsk] is a binding to AF_XDP interface of libbpf.

  AF_XDP is an address family in Linux for high-performance packet
  processing. With an AF_XDP socket a packet bypasses most of the kernel
  networking stack and is passed directly to userspace program.
  Depending on the configuration packets can be passed from the NIC
  without any data copies on either Rx or Tx. If you're interested in
  this kind of stuff here are a couple very useful resources:

  =E2=80=A2 [https://github.com/torvalds/linux/blob/master/Documentation/ne=
tworking/af_xdp.rst]
  =E2=80=A2 [https://github.com/xdp-project/xdp-tutorial/tree/master/advanc=
ed03-AF_XDP]

  The cool part is that without installing large dependencies like DPDK
  you can get packets into your program basically as fast as your NIC
  can provide them! It turns out this is true even if your program is
  written in OCaml. Using ocaml-xsk I could receive or transmit 64 byte
  UDP packets at 14.8M packets per second. This is the limit for a
  10Gb/s NIC.

  I'm still trying to figure out the best interface for AF_XDP. There
  are several resources to manage, and simple receive and transmit
  operations actually require a few steps. But it's encouraging know
  OCaml doesn't get in the way of packet throughput.


[ocaml-xsk] https://github.com/suttonshire/ocaml-xsk


Ubase 0.03
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90

  Archive: [https://discuss.ocaml.org/t/ann-ubase-0-03/6115/1]


sanette announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

  I'm happy to announce the release of [ubase], a tiny library whose
  only purpose is to remove diacritics (accents, etc.) from utf8-encoded
  strings using the latin alphabet.

  It was created after the discussion:
  [https://discuss.ocaml.org/t/simplify-roman-utf8/4398].

  It's now available from `opam':

  `opam install ubase'

  This also installs an executable that you may use in a shell, for
  instance:

  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 $ ubase "et gr=C3=B8nt tr=C3=A6"
  =E2=94=82 et gront trae
  =E2=94=82=20
  =E2=94=82 $ ubase Anh xin l=E1=BB=97i c=C3=A1c em b=C3=A9 v=C3=AC =C4=91=
=C3=A3 =C4=91=E1=BB=81 t=E1=BA=B7ng cu=E1=BB=91n s=C3=A1ch n=C3=A0y cho m=
=E1=BB=99t =C3=B4ng ng=C6=B0=E1=BB=9Di l=E1=BB=9Bn.
  =E2=94=82 Anh xin loi cac em be vi da de tang cuon sach nay cho mot ong n=
guoi lon.
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  More info [here].


[ubase] https://github.com/sanette/ubase

[here] https://sanette.github.io/ubase/


clangml 4.2.0: OCaml bindings for Clang API (for C and C++ parsing)
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90

  Archive:
  [https://discuss.ocaml.org/t/ann-clangml-4-2-0-ocaml-bindings-for-clang-a=
pi-for-c-and-c-parsing/6123/1]


Thierry Martinez announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80

  We are happy to announce the new clangml 4.2.0 release.  Clangml
  provides bindings for all versions of Clang, from 3.4 to the not yet
  released 10.0.1.

  The library can be installed via opam: `opam install clangml' The
  documentation is online:
  [https://memcad.gitlabpages.inria.fr/clangml/]

  This new release improves C++ support, including C++20 specific
  constructs.

  All Clang C/C++ attributes should now be supported.  You may have a
  look to the interface of the new auto-generated module [`Attributes'].

  There is now a lazy version of the AST (`Clang.Lazy.Ast'): this is
  useful to explore large ASTs efficiently (note that Clang parsing
  itself can still be slow; the lazy part only concerns the conversion
  into the `Clang.Lazy.Ast' datatypes).


[`Attributes']
https://memcad.gitlabpages.inria.fr/clangml/doc/clangml/Clang__/Attributes/


Old CWN
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  [online].

  [Alan Schmitt]


[send me a message] mailto:alan.schmitt@polytechnique.org

[the archive] http://alan.petitepomme.net/cwn/

[RSS feed of the archives] http://alan.petitepomme.net/cwn/cwn.rss

[online] http://lists.idyll.org/listinfo/caml-news-weekly/

[Alan Schmitt] http://alan.petitepomme.net/


--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2020-07-21 Tue 16:40 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org mode" />
<style type=3D"text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
<script type=3D"text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2019 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target =3D document.getElementById(id);
   if(null !=3D target) {
     elem.cacheClassElem =3D elem.className;
     elem.cacheClassTarget =3D target.className;
     target.className =3D "code-highlighted";
     elem.className   =3D "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target =3D document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className =3D elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className =3D elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"http://alan.petitepomme.net/cwn/2020.07.14.html">Previous Week</=
a> <a href=3D"http://alan.petitepomme.net/cwn/index.html">Up</a> <a href=3D=
"http://alan.petitepomme.net/cwn/2020.07.28.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of July 14 to 21, 2020.
</p>

<div id=3D"table-of-contents">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents">
<ul>
<li><a href=3D"#1">Dune-release: version 1.4.0 released</a></li>
<li><a href=3D"#2">Using AF_XDP sockets for high-performance packet process=
ing in OCaml</a></li>
<li><a href=3D"#3">Ubase 0.03</a></li>
<li><a href=3D"#4">clangml 4.2.0: OCaml bindings for Clang API (for C and C=
++ parsing)</a></li>
<li><a href=3D"#org31cd382">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-orgc29966d" class=3D"outline-2">
<h2 id=3D"1"><a id=3D"orgc29966d"></a>Dune-release: version 1.4.0 released<=
/h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/dune-release-version-1-4-0-=
released/6103/1">https://discuss.ocaml.org/t/dune-release-version-1-4-0-rel=
eased/6103/1</a>
</p>
</div>

<div id=3D"outline-container-orgb6bc954" class=3D"outline-3">
<h3 id=3D"orgb6bc954">Sonja Heinze announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgb6bc954">
<p>
This post is about <a href=3D"https://github.com/ocamllabs/dune-release/#re=
adme">dune-release</a>, a tool that helps
users release their packages to Opam in a fast and organized manner. You ca=
n install it via <code>opam
install dune-release</code>.
</p>

<p>
On behalf of the dune-release team at Tarides, I'm happy to announce the ne=
w dune-release <a href=3D"https://github.com/ocamllabs/dune-release/release=
s/tag/1.4.0">1.4.0
release</a>. The release includes two new
subcommands described below and a variety of bug fixes and user experience =
improvements. In particular,
we've put some work into improving the error handling and reporting.
</p>

<p>
One of the new subcommands is <code>dune-release config</code> , which insp=
ects and edits dune-release's global
configuration, such as git related, opam related and github related data. F=
or example, if you insert a
typo when being asked for your github id during your first release with dun=
e-release, you can correct
it comfortably with that new subcommand.
</p>

<p>
The other new subcommand is <code>dune-release delegate-info</code>, which =
helps users with an alternative release
workflow to integrate dune-release into it: imagine you want to use dune-re=
lease only for a couple of
things, such as tagging the distribution and creating the distribution tarb=
all and the documentation.
In that case, now you can integrate the work done by dune-release into your=
 individual release workflow
by accessing the path to the created tarball etc via <code>dune-release del=
egate-info</code>. It forms part of the
broader change in progress described in the following
post: <a href=3D"https://discuss.ocaml.org/t/replacing-dune-release-delegat=
es/4767">https://discuss.ocaml.org/t/replacing-dune-release-delegates/4767<=
/a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org27142f9" class=3D"outline-2">
<h2 id=3D"2"><a id=3D"org27142f9"></a>Using AF_XDP sockets for high-perform=
ance packet processing in OCaml</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/using-af-xdp-sockets-for-hi=
gh-performance-packet-processing-in-ocaml/6106/1">https://discuss.ocaml.org=
/t/using-af-xdp-sockets-for-high-performance-packet-processing-in-ocaml/610=
6/1</a>
</p>
</div>

<div id=3D"outline-container-org15dccbb" class=3D"outline-3">
<h3 id=3D"org15dccbb">suttonshire announced</h3>
<div class=3D"outline-text-3" id=3D"text-org15dccbb">
<p>
I just wanted to share a fun result from a project I've been hacking on.
<a href=3D"https://github.com/suttonshire/ocaml-xsk">ocaml-xsk</a> is a  bi=
nding to AF_XDP interface of libbpf.
</p>

<p>
AF_XDP is an address family in Linux for high-performance packet processing=
. With an AF_XDP socket a
packet bypasses most of the kernel networking stack and is passed directly =
to userspace program.
Depending on the configuration packets can be passed from the NIC without a=
ny data copies on either Rx
or Tx. If you're interested in this kind of stuff here are a couple very us=
eful resources:
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://github.com/torvalds/linux/blob/master/Documentation/=
networking/af_xdp.rst">https://github.com/torvalds/linux/blob/master/Docume=
ntation/networking/af_xdp.rst</a></li>
<li><a href=3D"https://github.com/xdp-project/xdp-tutorial/tree/master/adva=
nced03-AF_XDP">https://github.com/xdp-project/xdp-tutorial/tree/master/adva=
nced03-AF_XDP</a></li>
</ul>

<p>
The cool part is that without installing large dependencies like DPDK you c=
an get packets into your
program basically as fast as your NIC can provide them! It turns out this i=
s true even if your program
is written in OCaml. Using ocaml-xsk I could receive or transmit 64 byte UD=
P packets at 14.8M packets
per second. This is the limit for a 10Gb/s NIC.
</p>

<p>
I'm still trying to figure out the best interface for AF_XDP. There are sev=
eral resources to manage,
and simple receive and transmit operations actually require a few steps. Bu=
t it's encouraging know
OCaml doesn't get in the way of packet throughput.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org08e11fe" class=3D"outline-2">
<h2 id=3D"3"><a id=3D"org08e11fe"></a>Ubase 0.03</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-ubase-0-03/6115/1">http=
s://discuss.ocaml.org/t/ann-ubase-0-03/6115/1</a>
</p>
</div>

<div id=3D"outline-container-org1fcba34" class=3D"outline-3">
<h3 id=3D"org1fcba34">sanette announced</h3>
<div class=3D"outline-text-3" id=3D"text-org1fcba34">
<p>
I'm happy to announce the release of <a href=3D"https://github.com/sanette/=
ubase">ubase</a>, a tiny library whose
only purpose is to remove diacritics (accents, etc.) from utf8-encoded stri=
ngs using the latin
alphabet.
</p>

<p>
It was created after the discussion: <a href=3D"https://discuss.ocaml.org/t=
/simplify-roman-utf8/4398">https://discuss.ocaml.org/t/simplify-roman-utf8/=
4398</a>.
</p>

<p>
It's now available from <code>opam</code>:
</p>

<p>
<code>opam install ubase</code>
</p>

<p>
This also installs an executable that you may use in a shell, for instance:
</p>

<pre class=3D"example">
$ ubase "et gr=C3=B8nt tr=C3=A6"
et gront trae

$ ubase Anh xin l=E1=BB=97i c=C3=A1c em b=C3=A9 v=C3=AC =C4=91=C3=A3 =C4=91=
=E1=BB=81 t=E1=BA=B7ng cu=E1=BB=91n s=C3=A1ch n=C3=A0y cho m=E1=BB=99t =C3=
=B4ng ng=C6=B0=E1=BB=9Di l=E1=BB=9Bn.
Anh xin loi cac em be vi da de tang cuon sach nay cho mot ong nguoi lon.
</pre>

<p>
More info <a href=3D"https://sanette.github.io/ubase/">here</a>.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-orgdca2d55" class=3D"outline-2">
<h2 id=3D"4"><a id=3D"orgdca2d55"></a>clangml 4.2.0: OCaml bindings for Cla=
ng API (for C and C++ parsing)</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-clangml-4-2-0-ocaml-bin=
dings-for-clang-api-for-c-and-c-parsing/6123/1">https://discuss.ocaml.org/t=
/ann-clangml-4-2-0-ocaml-bindings-for-clang-api-for-c-and-c-parsing/6123/1<=
/a>
</p>
</div>

<div id=3D"outline-container-org9827af9" class=3D"outline-3">
<h3 id=3D"org9827af9">Thierry Martinez announced</h3>
<div class=3D"outline-text-3" id=3D"text-org9827af9">
<p>
We are happy to announce the new clangml 4.2.0 release.  Clangml provides b=
indings for all versions of
Clang, from 3.4 to the not yet released 10.0.1.
</p>

<p>
The library can be installed via opam: <code>opam install clangml</code>
The documentation is online: <a href=3D"https://memcad.gitlabpages.inria.fr=
/clangml/">https://memcad.gitlabpages.inria.fr/clangml/</a>
</p>

<p>
This new release improves C++ support, including C++20 specific constructs.
</p>

<p>
All Clang C/C++ attributes should now be supported.  You may have a look to=
 the interface of the new
auto-generated module
<a href=3D"https://memcad.gitlabpages.inria.fr/clangml/doc/clangml/Clang__/=
Attributes/"><code>Attributes</code></a>.
</p>

<p>
There is now a lazy version of the AST (<code>Clang.Lazy.Ast</code>): this =
is useful to explore large ASTs
efficiently (note that Clang parsing itself can still be slow; the lazy par=
t only concerns the
conversion into the <code>Clang.Lazy.Ast</code> datatypes).
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org31cd382" class=3D"outline-2">
<h2 id=3D"org31cd382">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org31cd382">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"http://alan.petitepomme.net/cwn/">the archive</a> or the <a=
 href=3D"http://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archives<=
/a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname">
<p>
<a href=3D"http://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

