Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q27BnOJi026448
	for <caml-list@sympa-roc.inria.fr>; Wed, 7 Mar 2012 12:49:24 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AsQOAFxKV0/RVdY2kGdsb2JhbABCgi8EY4IrrlACAoEECCIBAQEBCQkNBxQEI4IjAg8dARscAgMSEA8CBRYLAgsDAgECARERAQUBIg0IAQEeh2YEB58Ggl0KiyhMgnGFRD+BDAEFC4EkiRcqgSmDQIEWBJVBhWSBOocbPYQE
X-IronPort-AV: E=Sophos;i="4.73,545,1325458800"; 
   d="scan'208";a="148016778"
Received: from mail-bk0-f54.google.com ([209.85.214.54])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 07 Mar 2012 12:49:19 +0100
Received: by bkcjc3 with SMTP id jc3so9367898bkc.27
        for <caml-list@inria.fr>; Wed, 07 Mar 2012 03:49:18 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:subject
         :content-type:content-transfer-encoding;
        bh=7w8CXGG3mb/mu/DNSNRaauiGz8CYghh5DWAkR4B8TLY=;
        b=Pqr6G7ZiskQLUH2fA1Vjs2AemTs1/Ry+rISJJu8JH985zcmS9umu3p6MMgIVA6wz0o
         xYeQvJ69/AntlUXQGcRJ+ZAajUokRjjnImo3aSx1mssVYnPK6Rsg3A2nqJX4AXa4Rkwb
         GYDwXYp/hyNgCw+vDKqMRUwN33fS1MY2qLormSIOdUThH0QhMVsY4KZSxnX1LCquc424
         ECwIV4SDGV38DcQrzcj6iksTFU85FZ/R0DZizzkdWliIzDDTlpcOLv6WPeenbFiFzM30
         zKEsqUjWm2rMF4iJQuLnUcdkkblPk9f9Gq7YQW9QFjPA1UXinrY6IdL7U7SdrSYSM+2I
         qqFw==
Received: by 10.205.117.15 with SMTP id fk15mr705741bkc.133.1331120958676;
        Wed, 07 Mar 2012 03:49:18 -0800 (PST)
Received: from [172.27.6.206] ([213.106.240.92])
        by mx.google.com with ESMTPS id m3sm29999492bkz.0.2012.03.07.03.49.17
        (version=SSLv3 cipher=OTHER);
        Wed, 07 Mar 2012 03:49:17 -0800 (PST)
Message-ID: <4F574B3C.5000207@gmail.com>
Date: Wed, 07 Mar 2012 11:49:16 +0000
From: =?UTF-8?B?TWF0ZWogS2/FocOtaw==?=
 <5764c029b688c1c0d24a2e97cd764f@gmail.com>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:10.0.1) Gecko/20120216 Thunderbird/10.0.1
MIME-Version: 1.0
To: Caml List <caml-list@inria.fr>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
Subject: [Caml-list] concerning using of `deriving' syntactic plugin

Hi,

I would like to print out the response of a modified Ocaml's typechecker
to various inputs.

One way to do it would be to write a pretty-printer by hand.

Before I do that, I would like to apply "deriving" machinery:
http://code.google.com/p/deriving/wiki/Introduction
to this (chore) job.

In some cases I do not know what to do.

E.g., file "types/types.mli" contains the following definition:

  and value_kind =
      Val_reg
    | Val_prim of Primitive.description
    | Val_ivar of mutable_flag * string
    | Val_self of
        (Ident.t * type_expr) Meths.t ref *
        (Ident.t * mutable_flag * virtual_flag * type_expr) Vars.t ref *
      string * type_expr
    | Val_anc of (string * Ident.t) list * string
    | Val_unbound

If I add

  deriving (Show)

at the end of the above definition, I get an error:

  Error: Unbound module Meths.Show_t

That is expected but I am not sure what to do. That is, I am not sure
what is the official way to "deriving"-sify the "Meth" module which
defined in the following way:

  module Meths = Map.Make(OrderedString)

without the need to modify files "map.ml{i,}".

Is something like that possible?

Thank you very much in advance for any help.
