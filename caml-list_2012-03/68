Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q27H6mTd008367
	for <caml-list@sympa-roc.inria.fr>; Wed, 7 Mar 2012 18:06:48 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgMFAFmUV0/VuiYS/2dsb2JhbABEhF5Wr2iBB4IKAQEEAQwXVgULCQIaAiYCAiE2BhOIAwmnHZI2gS+ICoYggRYElUCLIoR2gmQ
X-IronPort-AV: E=Sophos;i="4.73,545,1325458800"; 
   d="scan'208";a="148086430"
Received: from solaria.dimino.org ([213.186.38.18])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/ADH-AES256-SHA; 07 Mar 2012 18:06:43 +0100
Received: from caladan (caladan.dim [10.200.42.14])
	by solaria.dimino.org (Postfix) with ESMTP id 6F2C980053;
	Wed,  7 Mar 2012 18:06:42 +0100 (CET)
Received: from caladan.esterel-technologies.com (localhost [127.0.0.1])
	by caladan (Postfix) with ESMTP id 4464DFF911;
	Wed,  7 Mar 2012 18:06:27 +0100 (CET)
Date: Wed, 7 Mar 2012 18:06:26 +0100
From: =?UTF-8?B?SsOpcsOpbWll?= Dimino <jeremie@dimino.org>
To: Matej =?UTF-8?B?S2/FocOtaw==?=
 <5764c029b688c1c0d24a2e97cd764f@gmail.com>
Cc: Caml List <caml-list@inria.fr>
Message-ID: <20120307180626.19ea8cf1@caladan.esterel-technologies.com>
In-Reply-To: <4F579064.4020004@gmail.com>
References: <4F574B3C.5000207@gmail.com>
	<CAPFanBE=DrYN8WZxVs8eB2DK8KhLE-uAzegSM8FVTz7HMydwig@mail.gmail.com>
	<4F579064.4020004@gmail.com>
X-Mailer: Claws Mail 3.8.0 (GTK+ 2.24.9; x86_64-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id q27H6mTd008367
Subject: Re: [Caml-list] concerning using of `deriving' syntactic plugin

Le Wed, 07 Mar 2012 16:44:20 +0000,
Matej Košík <5764c029b688c1c0d24a2e97cd764f@gmail.com> a écrit :

> The above problem can indeed be solved, i.e. pretty-printer can be
> generated in this way. The tricky part is to figure out how to define
> the "Show_t" module definition, which is non-obvious.

If you can modify the definition of Meths the easiest way is:

module Meths = struct
  include Map.Make(OrderedString)
  module Show_t = Show.Show_map(OrderedString)(Show.Show_string)
end

-- 
Jérémie

