Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q2GHNvUI010393
	for <caml-list@sympa-roc.inria.fr>; Fri, 16 Mar 2012 18:23:57 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aj8DACp2Y0+GoCGhhWdsb2JhbABChT6fMpFoAQEBCgsLBRYnggkBAQQBIQFMCwULBQYOCgEDBQQCGgMCDxIkEgYTEQGHcwULp0MBkiaBLIgnhhGBGQSIVI0Siy6Hbg
X-IronPort-AV: E=Sophos;i="4.73,598,1325458800"; 
   d="scan'208";a="149829020"
Received: from postman1.riken.jp (HELO postman.riken.jp) ([134.160.33.161])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 16 Mar 2012 18:23:51 +0100
Received: from postman.riken.jp (postman1.riken.jp [127.0.0.1])
	by postman.riken.jp (Postfix) with SMTP id 6D16F32C010B;
	Sat, 17 Mar 2012 02:23:48 +0900 (JST)
Received: from postman1.riken.jp (postman1.riken.jp [127.0.0.1])
	by postman.riken.jp (Postfix) with ESMTP id 3CE7E32A008C;
	Sat, 17 Mar 2012 02:23:48 +0900 (JST)
Date: Sat, 17 Mar 2012 02:23:48 +0900
From: Francois????Charles Matthieu????Berenger <Berenger@riken.jp>
To: Edgar Friendly <thelema314@gmail.com>
Cc: Philippe Veber <philippe.veber@gmail.com>,
        "caml-list@inria.fr" <caml-list@inria.fr>
Message-Id: <1331918628011613.Berenger@riken.jp>
In-Reply-To: <4F634AD1.20402@gmail.com>
References: <CAOOOohQV+nYWyTXFU-sKdLkJSNAAkZH+=UCkwKEpnxjAiE=ORg@mail.gmail.com>
 <4F634AD1.20402@gmail.com>
X-Priority: 3
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-2022-jp
Content-Transfer-Encoding: 7bit
X-PMX-Version: 5.6.0.2009776, Antispam-Engine: 2.7.2.376379, Antispam-Data: 2011.10.4.82414
Subject: Re: Re: [Caml-list] Efficient scanning of large strings from
 files

ｈｉ　philippe,

i am curious, is your string a dna sequencｅｓｏ　ｔｈａｔ　ｓ　ｗｈｙ　ｉｔ　ｉｓ　ｓｏ　ｌｏｎｇ？

ｒｅｇａｒｄｓ，ｆ


On Fri, 16 Mar 2012 10:14:41 -0400
Edgar Friendly <thelema314@gmail.com> wrote:

> On 03/16/2012 09:03 AM, Philippe Veber wrote:
> > Dear camlers,
> >
> > Say that you'd like to search a regexp on a file with lines so long that
> > you'd rather not load them entirely at once. If you can bound the size
> > of a match by k << length of a line, then you know that you can only
> > keep a small portion of the line in memory to search the regexp.
> > Typically you'd like to access substrings of size k from left to right.
> > I guess such a thing should involve buffered inputs and avoid copying
> > strings as much as possible. My question is as follows: has anybody
> > written a library to access these substrings gracefully and with decent
> > performance?
> > Cheers,
> >    Philippe.
> >
> This is tricky to do, as incremental matching implies DFA-based 
> matching, but returning matching substrings implies backtrack-based 
> matching.  The re2 library returns matching substrings by matching 
> forward to find the end of patterns, and then matching backwards on the 
> reversed regex from that point to find their beginning.  I don't know if 
> even it supports this on incremental input.
> 
> Subject to the assumption that starting to match implies either 
> finishing or aborting a match (i.e. once you've started to match your 
> regex, no other match will start before either this match attempt 
> finishes successful or not), this is not unreasonable to do.  Without 
> this assumption, it requires tracking many match start locations and 
> somehow knowing which of them match or fail to match.  I'm not sure this 
> has been done before.
> 
> E.
> 
> -- 
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/wws/info/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
> 



