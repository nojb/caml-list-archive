Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q2DFQ87f028240
	for <caml-list@sympa-roc.inria.fr>; Tue, 13 Mar 2012 16:26:12 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Av0EAHJmX0+NTDBj/2dsb2JhbABDtWOBB4IJAQEFOk8LGAklDwEEKDSICwMHvFyNQ4MiBJVQkCOCZg
X-IronPort-AV: E=Sophos;i="4.73,577,1325458800"; 
   d="scan'208";a="149119460"
Received: from os.inf.tu-dresden.de ([141.76.48.99])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 13 Mar 2012 16:26:12 +0100
Received: from [2002:8d4c:3001:48:222:68ff:fe19:71d] (helo=blau.inf.tu-dresden.de)
	by os.inf.tu-dresden.de with esmtpsa (TLSv1:AES256-SHA:256) (Exim 4.77)
	id 1S7Tc3-0003nB-Pe
	for caml-list@yquem.inria.fr; Tue, 13 Mar 2012 16:26:11 +0100
Received: from tews by blau.inf.tu-dresden.de with local (Exim 4.72)
	(envelope-from <tews@os.inf.tu-dresden.de>)
	id 1S7Tc3-0000g0-9s
	for caml-list@yquem.inria.fr; Tue, 13 Mar 2012 16:26:11 +0100
From: Hendrik Tews <tews@os.inf.tu-dresden.de>
To: caml-list@yquem.inria.fr
References: <20311.8986.272649.248196@blau.inf.tu-dresden.de>
	<20120307101101.2629f29d@alcazar>
Date: Tue, 13 Mar 2012 16:26:11 +0100
In-Reply-To: <20120307101101.2629f29d@alcazar> (Maxence Guesdon's message of
	"Wed, 7 Mar 2012 10:11:01 +0100")
Message-ID: <6x62e88quk.fsf@blau.inf.tu-dresden.de>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/23.2 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Validation-by: tews@os.inf.tu-dresden.de
Subject: Re: [Caml-list] ocamldoc: Howto crossreference another library?

Maxence Guesdon <Maxence.Guesdon@inria.fr> writes:

   Hendrik Tews <tews@os.inf.tu-dresden.de> wrote:
   > 
   >     (** Uses {!print_endline} *)
   >     let f () = print_endline "Hello"
   > 
   > What do I have to do such that ocamldoc generates a
   > crossreference to 
   > file:///usr/share/doc/ocaml-doc/ocaml.html/libref/Pervasives.html#VALprint_endline
   > ?

   OCamldoc can only create links to elements it knows about, i.e. in modules
   given on command line (or loaded from a dump).
   So the answer is: you can't.

After some discussion in the bug tracker, it turns out that one
can get pretty far with a ocamldoc custom generator that uses the
undocumented feature of custom text elements.

See http://askra.de/software/misc/odoc_xref.ml for my preliminary
version of such a generator.

Bye,

Hendrik
