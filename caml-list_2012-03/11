Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q21MWP6E028771
	for <caml-list@sympa-roc.inria.fr>; Thu, 1 Mar 2012 23:32:25 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ah4FADT4T0/VuiYS/2dsb2JhbABDhFxVrlmBB4F9AQEEAQwXBFIFCwkCGgIYDgICIRwaBhOIAQmnDpF7gS+HbIQEEgIKBgQHAwEEAwUJDRQDAQIBAgKFBwhUGIIbgRYElToBixuHWA
X-IronPort-AV: E=Sophos;i="4.73,513,1325458800"; 
   d="scan'208";a="133928022"
Received: from solaria.dimino.org ([213.186.38.18])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/ADH-AES256-SHA; 01 Mar 2012 23:32:21 +0100
Received: from locris.home (AToulouse-552-1-147-230.w2-6.abo.wanadoo.fr [2.6.74.230])
	(using TLSv1 with cipher DHE-RSA-AES128-SHA (128/128 bits))
	(No client certificate requested)
	by solaria.dimino.org (Postfix) with ESMTPSA id A142380081;
	Thu,  1 Mar 2012 23:32:20 +0100 (CET)
Date: Thu, 1 Mar 2012 23:32:19 +0100
From: =?UTF-8?B?SsOpcsOpbWll?= Dimino <jeremie@dimino.org>
To: Thomas Gazagnaire <thomas.gazagnaire@gmail.com>
Cc: caml-list@inria.fr
Message-ID: <20120301233219.76dc0b32@locris.home>
In-Reply-To: <D0364741-7C37-4E9A-B33D-056DD1883B3B@gmail.com>
References: <066176AC-436B-496D-A472-37973A2791E9@gmail.com>
	<20120301225258.3cb2618b@locris.home>
	<D0364741-7C37-4E9A-B33D-056DD1883B3B@gmail.com>
X-Mailer: Claws Mail 3.8.0 (GTK+ 2.24.9; x86_64-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id q21MWP6E028771
Subject: Re: [Caml-list] compiling static preprocessors

Le Thu, 1 Mar 2012 23:25:25 +0100,
Thomas Gazagnaire <thomas.gazagnaire@gmail.com> a écrit :

> So I suppose the OCaml grammar is not yet registered when type-conv
> tries to remove the rule. Oh dear... Any thoughts on this one?

Ah yes, camlp4 modules initialization may be delayed, try to link
this code after camlp4 modules and before type-conv ones:

  Camlp4.Register.iter_and_take_callbacks
    (fun (name, callback)-> callback ())

-- 
Jérémie

