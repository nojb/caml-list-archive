Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA29423; Thu, 15 Aug 2002 11:04:32 +0200 (MET DST)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA29413 for caml-list@pauillac.inria.fr; Thu, 15 Aug 2002 11:04:32 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA07208 for <caml-list@pauillac.inria.fr>; Mon, 12 Aug 2002 19:31:31 +0200 (MET DST)
Received: from swordfish.cs.caltech.edu (swordfish.cs.caltech.edu [131.215.44.124])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g7CHVTX25453
	for <caml-list@inria.fr>; Mon, 12 Aug 2002 19:31:30 +0200 (MET DST)
Received: from orchestra.cs.caltech.edu (orchestra.cs.caltech.edu [131.215.44.20])
	by swordfish.cs.caltech.edu (Postfix) with ESMTP
	id 1B388DF272; Mon, 12 Aug 2002 10:31:28 -0700 (PDT)
Received: (from mvanier@localhost)
	by orchestra.cs.caltech.edu (8.11.6/8.9.3) id g7CHVRD14574;
	Mon, 12 Aug 2002 10:31:27 -0700
Date: Mon, 12 Aug 2002 10:31:27 -0700
Message-Id: <200208121731.g7CHVRD14574@orchestra.cs.caltech.edu>
X-Authentication-Warning: orchestra.cs.caltech.edu: mvanier set sender to mvanier@cs.caltech.edu using -f
From: Michael Vanier <mvanier@cs.caltech.edu>
To: yrashk@openeas.org
Cc: caml-list@inria.fr
In-reply-to: <02081217191500.26326@rashko.ilt.kharkov.ua> (yrashk@openeas.org)
Subject: Re: [Caml-list] Namespace proposal
References:  <02081217191500.26326@rashko.ilt.kharkov.ua>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


The namespace proposal brings up a related issue.  Is there any interest in
having a more formal process for making requests for enhancements to the
ocaml language analogous to (e.g.) the Python Enhancement Proposals (PEPs)
for python (http://www.python.org/peps) or similar processes for perl,
ruby, and java?  I can see advantages and disadvantages to this approach.
The advantage is that there is an organized record of proposals, commentary
on proposals, etc.  The disadvantage is that I suspect that a lot of
feature requests might be unimplementable or require a huge amount of
research to see if they're implementable (e.g. generically overloaded
operators), as opposed to PEPs, which are generally fairly trivial.  What
do people think?

Ocaml forever,

Mike
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

