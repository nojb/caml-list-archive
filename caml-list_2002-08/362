Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA23323; Wed, 21 Aug 2002 17:48:36 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA23325 for <caml-list@pauillac.inria.fr>; Wed, 21 Aug 2002 17:48:35 +0200 (MET DST)
Received: from bastion.artisan.com (bastion.artisan.com [209.144.161.130])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g7LFmYn27243
	for <caml-list@inria.fr>; Wed, 21 Aug 2002 17:48:34 +0200 (MET DST)
Received: from ypmaster.artisan.com (ypmaster [172.16.2.1])
	by bastion.artisan.com (8.9.2/8.9.2) with ESMTP id IAA07770;
	Wed, 21 Aug 2002 08:48:29 -0700 (PDT)
Received: from granite.artisan.com (granite [172.16.10.97])
	by ypmaster.artisan.com (8.9.2/8.9.2-arti) with ESMTP id IAA02963;
	Wed, 21 Aug 2002 08:48:25 -0700 (PDT)
Received: (from bpr@localhost)
	by granite.artisan.com (8.9.2/8.9.2) id IAA06261;
	Wed, 21 Aug 2002 08:48:25 -0700 (PDT)
X-Authentication-Warning: granite.artisan.com: bpr set sender to bpr@artisan.com using -f
From: Brian Rogoff <bpr@artisan.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15715.46665.366229.38824@granite.artisan.com>
Date: Wed, 21 Aug 2002 08:48:25 -0700
To: Diego-Olivier.FERNANDEZ-PONS@cicrp.jussieu.fr
Cc: caml-list@inria.fr
Subject: Re: Polymorphic recursion 9Was Re: [Caml-list] Doubly-linked list)
References: <15713.5541.413031.271962@granite.artisan.com>
	<Pine.A32.3.95.1020821094217.35716C-100000@ibm1.cicrp.jussieu.fr>
X-Mailer: VM 7.00 under Emacs 20.7.1
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Diego Olivier Fernandez Pons writes:
> I do not agree with your analysis since I really do not believe anyone
> could think that polymorphic recursion is useless. 

Every feature in a programming language has to be evaluated in a large 
context. There are lot's of useful features that OCaml doesn't have. Would
you add them all? 

I never said polymorphic recursion was useless, and I'd like direct support
for it added, so your claim that my analysis suggests it's uselessness
indicates that I am communicating very badly. I'll just be quiet on this 
topic. 

> Your trick 

Actually, Jacques Garrigue's trick

http://caml.inria.fr/archives/199809/msg00032.html

but I just noticed that OCaml 3.05 has the same first class polymorphism on 
records and since there was no use of class features like dynamic binding
that a record dictionary is even better. 

BTW, the Caml mailing list archive is a really great resource. 

-- Brian
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

