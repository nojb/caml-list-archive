Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id FAA22196; Fri, 2 Aug 2002 05:32:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id FAA22159 for <caml-list@pauillac.inria.fr>; Fri, 2 Aug 2002 05:32:34 +0200 (MET DST)
Received: from str12.sobor.org (adsl-63-198-183-99.dsl.snfc21.pacbell.net [63.198.183.99])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g723WWf09504
	for <caml-list@inria.fr>; Fri, 2 Aug 2002 05:32:33 +0200 (MET DST)
Received: from quasar.ipa.nw.ru (unknown [192.168.123.51])
	by str12.sobor.org (Postfix) with ESMTP id 8E93099860
	for <caml-list@inria.fr>; Thu,  1 Aug 2002 20:32:04 -0700 (PDT)
Message-ID: <3D49FD72.68388864@quasar.ipa.nw.ru>
Date: Thu, 01 Aug 2002 20:33:06 -0700
From: "Alexander V. Voinov" <avv@quasar.ipa.nw.ru>
Organization: Fear of the Lord is the beginning of wisdom
X-Mailer: Mozilla 4.75 [en] (Windows NT 5.0; U)
X-Accept-Language: en
MIME-Version: 1.0
To: "caml-list@inria.fr" <caml-list@inria.fr>
Subject: [Caml-list] ocaml-3.05: a performance experience
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi All,

I have an application, which parses a huge XML file and stores resulting
records to a database.

The file is parsed using PXP, but in a 'pulldom' manner, by extracting
(to a Buffer) first level tags manually with pcre, then an array insert
of 30000 recognized and accumulated records is performed. DB access
takes a small fraction of the run time.

Compiled with ocaml-3.04 it took 1h40m+-5m of 'user' process time and
occupied about 340M in RAM. With 3.05 it took 2h40m+-5m and occupied
250M. 

Is this the consequence of the new GC strategy? Actually I'd tolerate
large footprint for the sake of more speed.

It's also interesting to note, than in the case of 3.04 the footprint of
the application starts from 330M and slowly expands to 350M. With 3.05
it starts with 250M and then almost does not expand till the end.

Sparc Solaris 2.7, gcc 3.0.4.

A previous version of this app, written in Python with PyXML, runs 3-4
times slower than the 3.04 version and takes 20M in RAM.

Alexander
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

