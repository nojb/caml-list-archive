Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA00185; Fri, 23 Aug 2002 14:42:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA32756 for <caml-list@pauillac.inria.fr>; Fri, 23 Aug 2002 14:42:33 +0200 (MET DST)
Received: from mel-rto6.wanadoo.fr (smtp-out-6.wanadoo.fr [193.252.19.25])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g7NCgWv28372;
	Fri, 23 Aug 2002 14:42:32 +0200 (MET DST)
Received: from mel-rta7.wanadoo.fr (193.252.19.61) by mel-rto6.wanadoo.fr (6.5.007)
        id 3D6246E80014198C; Fri, 23 Aug 2002 14:42:32 +0200
Received: from iliana (80.9.105.210) by mel-rta7.wanadoo.fr (6.5.007)
        id 3D49FF14007554F9; Fri, 23 Aug 2002 14:42:32 +0200
Received: from luther by iliana with local (Exim 3.35 #1 (Debian))
	id 17iDi6-0000FP-00; Fri, 23 Aug 2002 14:38:42 +0200
Date: Fri, 23 Aug 2002 14:38:32 +0200
To: Xavier Leroy <xavier.leroy@inria.fr>
Cc: Tim Freeman <tim@fungible.com>, caml-list@inria.fr
Subject: Re: [Caml-list] Why are type functions postfix?
Message-ID: <20020823123832.GA940@iliana>
References: <20020812190521.587CF7F66@lobus.fungible.com> <20020823112404.C28346@pauillac.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20020823112404.C28346@pauillac.inria.fr>
User-Agent: Mutt/1.4i
From: Sven LUTHER <luther@dpt-info.u-strasbg.fr>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, Aug 23, 2002 at 11:24:04AM +0200, Xavier Leroy wrote:
> > In OCAML and other ML dialects I've used, you say:
> > 
> >    let x: int ref = ref 3
> > 
> > Is there any reason that type functions like the first "ref" are
> > postfix, unlike function application like the second "ref" that is
> > prefix?
> 
> I think it's mostly historical: the original LCF ML used the postfix
> syntax, and this syntax was kept in SML as well as in Caml.

Is it not because in the type notation, int ref is similar to int list,
while in the function application, ref 3 is similar to a constructor
application like Some 3 for example ?

Or are you saying that even this kind of notations come from the
original LCF ML ?

Friendly,

Sven Luther
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

