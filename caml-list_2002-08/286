Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA19265; Fri, 16 Aug 2002 12:41:00 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA19626 for <caml-list@pauillac.inria.fr>; Fri, 16 Aug 2002 12:40:59 +0200 (MET DST)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g7GAewj19116
	for <caml-list@inria.fr>; Fri, 16 Aug 2002 12:40:58 +0200 (MET DST)
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.9.3/8.9.3/Debian 8.9.3-21) id MAA31297;
	Fri, 16 Aug 2002 12:40:52 +0200
Date: Fri, 16 Aug 2002 12:40:52 +0200
From: Markus Mottl <markus@oefai.at>
To: malc <malc@pulsesoft.com>
Cc: Richard Nyberg <rnyberg@it.su.se>, caml-list@inria.fr
Subject: Re: [Caml-list] Bigarray access speed
Message-ID: <20020816104052.GA31103@fichte.ai.univie.ac.at>
Mail-Followup-To: malc <malc@pulsesoft.com>,
	Richard Nyberg <rnyberg@it.su.se>, caml-list@inria.fr
References: <20020815225004.GA5959@gromit.it.su.se> <Pine.LNX.4.44.0208161417580.941-100000@home.oyster.ru>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.44.0208161417580.941-100000@home.oyster.ru>
User-Agent: Mutt/1.4i
Organization: Austrian Research Institute for Artificial Intelligence
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 16 Aug 2002, malc wrote:
> Bigarrays(of at least floats) can have a slight edge over normals arrays.
> To get maximal speed of the inner loops data needs to be naturally 
> aligned. OCaml does nothing to enforce it for non-big arrays. Bigarrays on 
> the other hand are mmaped(4k on IA32) and you get perfectly aligned data 
> for free. I was thinking that maybe Array can be extended with
> make[create]_aligned, for speed/space tradeoff.

Additionally, it would also be nice to have a specialized "create"
function for (naturally unboxed) float arrays such that they need not
be initialized with a given float value. This may be beneficial for
algorithms that allocate work space whose contents is not necessarily
fully needed but filled on demand.

Regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

