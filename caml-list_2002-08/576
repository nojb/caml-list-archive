Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA32573; Sat, 31 Aug 2002 20:01:51 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA00042 for caml-list@pauillac.inria.fr; Sat, 31 Aug 2002 20:01:49 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA07865 for <caml-list@pauillac.inria.fr>; Fri, 30 Aug 2002 16:05:45 +0200 (MET DST)
Received: from dirf.bris.ac.uk (dirf.bris.ac.uk [137.222.10.72])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g7UE5iD14995
	for <caml-list@inria.fr>; Fri, 30 Aug 2002 16:05:44 +0200 (MET DST)
Received: from cs.bris.ac.uk (actually host lunaleka.cs.bris.ac.uk) 
          by dirf.bris.ac.uk with SMTP-PRIV with ESMTP;
          Fri, 30 Aug 2002 15:05:33 +0100
Received: from hua.cs.bris.ac.uk (hua [137.222.102.70]) 
          by cs.bris.ac.uk (8.9.3/8.9.3) with ESMTP id PAA17838;
          Fri, 30 Aug 2002 15:04:09 +0100 (BST)
Received: from localhost by hua.cs.bris.ac.uk (8.9.3) id PAA14312;
          Fri, 30 Aug 2002 15:04:08 +0100 (BST)
Date: Fri, 30 Aug 2002 15:04:07 +0100 (BST)
From: J Farrand <farrand@cs.bris.ac.uk>
X-X-Sender:  <farrand@hua>
To: Vitaly Lugovsky <vsl@ontil.ihep.su>
cc: David Frese <dfrese@dfrese.de>, SooHyoung Oh <shoh@duonix.com>,
        Caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Q: safe language
In-Reply-To: <Pine.LNX.4.33.0208301746580.2776-100000@ontil.ihep.su>
Message-ID: <Pine.GSO.4.33.0208301500340.14264-100000@hua>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


On Fri, 30 Aug 2002, Vitaly Lugovsky wrote:

>  No. In this place program may be expecting some structure, which can
> contain NIL. There is no other way in lisp to define structures - so, any
> code accepting lists will accept any alien structure. Is is type safety?
> No way! Dynamically typed languages can't be safe.

"Safe" is not the same as "Type Safe".  ISTR safe means that a program
written in the language will not cause a machine level error.  So for
example, C is not safe because you can derefence a bad pointer etc. and
cause a seg fault.  LISP is safe.  Even though you can apply a function to
arguments of the wrong type, LISP has well defined behaviour for dealing
with this.  (That behaviour might just be that the runtime prints an error
a halts the program, but still better than what C would do, which is
basically anything...)

--
Jim Farrand, ML Group,               mailto:farrand@cs.bris.ac.uk
Department of Computer Science,      http://www.cs.bris.ac.uk/~farrand
University of Bristol,               tel: +44-(0)117-954-5254
Woodland Road, Bristol, BS8 1UB, UK
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

