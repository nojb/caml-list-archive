Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA19496; Sat, 31 Aug 2002 00:15:33 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA19616 for <caml-list@pauillac.inria.fr>; Sat, 31 Aug 2002 00:15:32 +0200 (MET DST)
Received: from hirsch.in-berlin.de (hirsch.in-berlin.de [192.109.42.6])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g7UMFFD17038
	for <caml-list@inria.fr>; Sat, 31 Aug 2002 00:15:16 +0200 (MET DST)
Received: from hirsch.in-berlin.de (localhost [127.0.0.1])
	by hirsch.in-berlin.de (8.12.1/8.12.1/Debian -2) with ESMTP id g7UMF5BB010303
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NOT);
	Sat, 31 Aug 2002 00:15:05 +0200
Received: (from uucp@localhost)
	by hirsch.in-berlin.de (8.12.1/8.12.1/Debian -2) with UUCP id g7UMF2jt010295;
	Sat, 31 Aug 2002 00:15:02 +0200
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: caml-list@inria.fr
Received: from localhost (oliver@localhost) by first.in-berlin.de (8.7.6/8.7.3) with SMTP id XAA00880; Fri, 30 Aug 2002 23:44:06 +0200
Date: Fri, 30 Aug 2002 23:44:06 +0200 (MET DST)
From: Oliver Bandel <oliver@first.in-berlin.de>
To: Vitaly Lugovsky <vsl@ontil.ihep.su>
cc: J Farrand <farrand@cs.bris.ac.uk>, David Frese <dfrese@dfrese.de>,
        SooHyoung Oh <shoh@duonix.com>, Caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Q: safe language
In-Reply-To: <Pine.LNX.4.33.0208301818100.2776-100000@ontil.ihep.su>
Message-ID: <Pine.LNX.3.95.1020830234039.685D-100000@first.in-berlin.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi,

On Fri, 30 Aug 2002, Vitaly Lugovsky wrote:

> On Fri, 30 Aug 2002, J Farrand wrote:
[...]
> >  Even though you can apply a function to
> > arguments of the wrong type, LISP has well defined behaviour for dealing
> > with this. 
> 
>  And C runtime environment can have a well defined behaviour of what to do 
> with wrong pointers.
[...]

Well, C (which means ANSI-C or ISO 9899-C) says nothing about
how your environment is behaving. There are a lot of holes
in the C-standard and these holes are "undefined behaviour",
"implementation dependent" and similar...


But I agree that integer-border-problems in Ocaml
are not very fine. This is a hole in Ocaml.

(But if known, you can handle it; there are much more
 holes in C than in Ocaml.)

Ciao,
   Oliver

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

