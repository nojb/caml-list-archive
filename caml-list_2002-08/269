Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA05541; Thu, 15 Aug 2002 19:25:16 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA05487 for <caml-list@pauillac.inria.fr>; Thu, 15 Aug 2002 19:25:15 +0200 (MET DST)
Received: from dewberry.cc.columbia.edu (dewberry.cc.columbia.edu [128.59.59.68])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g7FHPEn04615
	for <caml-list@inria.fr>; Thu, 15 Aug 2002 19:25:14 +0200 (MET DST)
Received: from there (tw304h3.cpmc.columbia.edu [156.111.84.180])
	by dewberry.cc.columbia.edu (8.9.3/8.9.3) with SMTP id NAA12685;
	Thu, 15 Aug 2002 13:25:12 -0400 (EDT)
Message-Id: <200208151725.NAA12685@dewberry.cc.columbia.edu>
Content-Type: text/plain;
  charset="iso-8859-1"
From: Oleg <oleg_inconnu@myrealbox.com>
To: Michael Hicks <mwh@cs.umd.edu>, caml-list@inria.fr
Subject: Re: [Caml-list] Cyclic ?!
Date: Thu, 15 Aug 2002 13:26:28 -0400
X-Mailer: KMail [version 1.3.2]
References: <000301c24468$6cb5b350$6601a8c0@hicks>
In-Reply-To: <000301c24468$6cb5b350$6601a8c0@hicks>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi

I'm not sure I understand you. If the two definitions are equivalent WRT 
Empty <-> None & Node <-> Some name substitution, then the fact that the 
compiler accepts one, but not the other must be a bug, yes?

Regards
Oleg

On Thursday 15 August 2002 10:31 am, Michael Hicks wrote:
> If memory serves, ML datatypes elegantly overload about three distrinct
> type-theoretic constructs.  In particular, the variant tags in the data
> type definition double as the "witnesses" to coercions between an
> iso-recursive type and its "unrolling" of one level.  Without going into
> detail, this is why you can define something like
>
> type foo = Rec of foo;;
>
> but you can't define
>
> type foo = foo;;
>
> The latter definition is in the style of "equi-recursive" types, in
> which a recursive type is equivalent any number of its unrollings.  This
> formulation is harder to typecheck, as I recall.  There is a similar
> analogy between the two definitions of bin_tree that you present.
>
> Mike
>
> -----Original Message-----
> From: owner-caml-list@pauillac.inria.fr
> [mailto:owner-caml-list@pauillac.inria.fr] On Behalf Of Oleg
> Sent: Wednesday, August 14, 2002 10:20 PM
> To: caml-list@inria.fr
> Subject: [Caml-list] Cyclic ?!
>
> Hi
>
> I'm puzzled by the following compiler behavior:
>
> If I define bin_tree as
>
> type 'a bin_tree =
>            Empty
>
>          | Node of 'a bin_tree * 'a * 'a bin_tree
>
> the compiler accepts it. OTOH if I define it as
>
> type 'a bin_tree = ('a bin_tree * 'a * 'a bin_tree) option
>
> It gives an error: "The type abbreviation bin_tree is cyclic".
> Why??? And what's the difference between the two, really?
>
> Thanks
> Oleg
> -------------------
> To unsubscribe, mail caml-list-request@inria.fr Archives:
> http://caml.inria.fr
> Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ:
> http://caml.inria.fr/FAQ/
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

