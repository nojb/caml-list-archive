Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA25878; Tue, 13 Aug 2002 16:30:17 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA25879 for <caml-list@pauillac.inria.fr>; Tue, 13 Aug 2002 16:30:16 +0200 (MET DST)
Received: from hickory.cc.columbia.edu (hickory.cc.columbia.edu [128.59.59.202])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g7DEUEb09622
	for <caml-list@inria.fr>; Tue, 13 Aug 2002 16:30:15 +0200 (MET DST)
Received: from there (tw304h3.cpmc.columbia.edu [156.111.84.180])
	by hickory.cc.columbia.edu (8.9.3/8.9.3) with SMTP id KAA23206;
	Tue, 13 Aug 2002 10:30:12 -0400 (EDT)
Message-Id: <200208131430.KAA23206@hickory.cc.columbia.edu>
Content-Type: text/plain;
  charset="iso-8859-1"
From: Oleg <oleg_inconnu@myrealbox.com>
To: Diego Olivier Fernandez Pons <Diego-Olivier.FERNANDEZ-PONS@cicrp.jussieu.fr>
Subject: Re: [Caml-list] Doubly-linked list
Date: Tue, 13 Aug 2002 10:30:59 -0400
X-Mailer: KMail [version 1.3.2]
Cc: caml-list@inria.fr
References: <Pine.A32.3.95.1020813125617.63202A-100000@ibm1.cicrp.jussieu.fr>
In-Reply-To: <Pine.A32.3.95.1020813125617.63202A-100000@ibm1.cicrp.jussieu.fr>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tuesday 13 August 2002 07:00 am, Diego Olivier Fernandez Pons wrote:
> I will be soon releasing a data structure library (september) which
> includes a port of EDiSon (GHC/hslibs/data/Edison in the GHC CVS), all
> data structures that were in Okasaki's purely functional data
> structures book and some more (weight balanced trees, cartesian trees,
> priority search queues, ...)
>
> It uses an uniform data representation for the programmer to chose
> after the program has been profiled and without changing much code.

Will it include imperative doubly-linked list or are all data types going to 
be purely functional? It's hard for me to think of an efficient purely 
functional doubly-linked list.

Regards,
Oleg
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

