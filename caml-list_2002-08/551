Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA10365; Fri, 30 Aug 2002 17:32:01 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA10189 for <caml-list@pauillac.inria.fr>; Fri, 30 Aug 2002 17:32:00 +0200 (MET DST)
Received: from mg.ihep.su (mg.ihep.su [194.190.161.38])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g7UFVxD24877
	for <caml-list@inria.fr>; Fri, 30 Aug 2002 17:32:00 +0200 (MET DST)
Received: by mg.ihep.su (Postfix, from userid 65436)
	id 9C921B552E; Fri, 30 Aug 2002 19:31:59 +0400 (MSD)
Received: from ontil.ihep.su (ontil.ihep.su [194.190.161.63])
	by mg.ihep.su (Postfix) with ESMTP
	id D7171B535C; Fri, 30 Aug 2002 19:31:58 +0400 (MSD)
Received: from localhost (vsl@localhost)
	by ontil.ihep.su (8.11.6/8.11.6) with ESMTP id g7UFVM104154;
	Fri, 30 Aug 2002 19:31:22 +0400
Date: Fri, 30 Aug 2002 19:31:22 +0400 (MSD)
From: Vitaly Lugovsky <vsl@ontil.ihep.su>
To: Nicolas Cannasse <warplayer@free.fr>
Cc: Caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Q: safe language
In-Reply-To: <002101c25034$4f17da80$bd00a8c0@mini2k>
Message-ID: <Pine.LNX.4.33.0208301926240.4099-100000@ontil.ihep.su>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 30 Aug 2002, Nicolas Cannasse wrote:

> >  Run C in a bytecode "safe" environment (there are some C implementations
> > with this functionality) - and it will become a "safe language"?
> 
> True.
> If you choose the following definition "safe : which does not fail" then you
> have
> 
> C < "safe" C < Lisp < OCaml
> 
> But you can't ensure the total safety of your program without using a
> theorem prover such as COQ.
> Simple OCaml sample :
> 
> List.hd [];;

 [] is a correct argument for hd, but list (x y) is not a correct when 
you're expecting 3-d vector (x y z). So, well, I don't see the difference
between "safety" and "type safety".


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

