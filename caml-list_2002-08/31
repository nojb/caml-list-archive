Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA27404; Fri, 2 Aug 2002 11:58:00 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA27393 for <caml-list@pauillac.inria.fr>; Fri, 2 Aug 2002 11:57:59 +0200 (MET DST)
Received: from web11208.mail.yahoo.com (web11208.mail.yahoo.com [216.136.131.190])
	by nez-perce.inria.fr (8.11.1/8.11.1) with SMTP id g729vvf15090
	for <caml-list@inria.fr>; Fri, 2 Aug 2002 11:57:58 +0200 (MET DST)
Message-ID: <20020802095756.99352.qmail@web11208.mail.yahoo.com>
Received: from [195.224.189.78] by web11208.mail.yahoo.com via HTTP; Fri, 02 Aug 2002 02:57:56 PDT
Date: Fri, 2 Aug 2002 02:57:56 -0700 (PDT)
From: Noel Welsh <noelwelsh@yahoo.com>
Subject: RE: ocaml, simd, & fftwgel RE: [Caml-list] Caml productivity.
To: "Gurr, David \(MED, self\)" <David.Gurr@med.ge.com>
Cc: caml-list@inria.fr
In-Reply-To: <D4DBD8568F05D511A1C20002A55C008C09C294F6@uswaumsx03medge.med.ge.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

--- "Gurr, David (MED, self)" <David.Gurr@med.ge.com>
wrote:
> 
> But do they do a better job than fftwgel or Spiral
> or Atlas?

I have no idea :)
 
> Is SAC available for public inspection?

Yeah: http://www.informatik.uni-kiel.de/~sacbase/

I couldn't find a paper that describes how ATLAS is
implemented. I'm guessing the most important
optimisations are blocking (dependant on the cache
size) and condensing consequetive array transversals.
SAC does both these optimisations.

> Once you do this, it is much less
> clear what
> the value added of the C compiler is.  In
> particular, the amount of 
> refinement that would be needed to get ocamlopt to
> match C compilers
> at this task might be relatively small ... since C
> is notoriously
> difficult to optimize even without SIMD.

Yeah, it is kinda ironic that C is famous for
generating such fast C.  The functional model (pure
functional code is essentially an SSA register
machine) is much closer to current hardware than the C
every-has-an-address/stack model.  So it should be
possible to get fast code out of a functional language
with less effort than C.  It is also a bit amusing,
and a bit sad, that Java and .Net both use a stack
model (it's like they want slow code!)

Noel

__________________________________________________
Do You Yahoo!?
Yahoo! Health - Feel better, live better
http://health.yahoo.com
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

