Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA13139; Sun, 18 Aug 2002 02:42:07 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA13148 for <caml-list@pauillac.inria.fr>; Sun, 18 Aug 2002 02:42:06 +0200 (MET DST)
Received: from moutng.kundenserver.de (moutng.kundenserver.de [212.227.126.176])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g7I0fgj10887
	for <caml-list@inria.fr>; Sun, 18 Aug 2002 02:41:44 +0200 (MET DST)
Received: from [212.227.126.160] (helo=mrelayng0.kundenserver.de)
	by moutng2.kundenserver.de with esmtp (Exim 3.35 #2)
	id 17gE8S-00058g-00
	for caml-list@inria.fr; Sun, 18 Aug 2002 02:41:40 +0200
Received: from [80.129.103.120] (helo=gate.gerd-stolpmann.de)
	by mrelayng0.kundenserver.de with asmtp (Exim 3.35 #2)
	id 17gE8S-0003bM-00
	for caml-list@inria.fr; Sun, 18 Aug 2002 02:41:40 +0200
Received: from ice.gerd-stolpmann.de (ice.gerd-stolpmann.de [192.168.0.13])
	by gate.gerd-stolpmann.de (Postfix) with ESMTP id 2EF8FCCDD
	for <caml-list@inria.fr>; Sun, 18 Aug 2002 02:41:38 +0200 (CEST)
Received: from ice (localhost [127.0.0.1])
	by ice.gerd-stolpmann.de (Postfix) with ESMTP id 7415AB0C7
	for <caml-list@inria.fr>; Sun, 18 Aug 2002 02:41:38 +0200 (CEST)
Date: Sun, 18 Aug 2002 02:41:37 +0200
From: Gerd Stolpmann <info@gerd-stolpmann.de>
To: caml-list@inria.fr
Subject: [Caml-list] Announcement: PXP 1.1.91 (development version)
Message-ID: <20020818004137.GC996@ice.gerd-stolpmann.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-15
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
X-Mailer: Balsa 1.3.6
Lines: 46
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi list,

a new development version of PXP is available. The changes:

- In addition to the "push" parser, there is now also a
  "pull" parser to process XML documents in an event-based
  way. Recall the difference: A push parser invokes a
  callback function supplied by the user to send the events
  to the user program, as in

  let handler event = ... in
  process_entity ... handler ...

  A pull parser returns a function, and by calling the function
  the user gets the next event:

  let next_event = create_pull_parser ... in
  let event = next_event() 

  An interesting application of pull parsing is that one can
  easily build a stream from such a parser:

  let stream = Stream.from next_event

  Stream parsers can be used to analyze the XML document. The
  PXP distribution contains an example of that.

- There is a new entry point for event-based parsers: Entry_expr.
  It parses a single element, a single processing instruction,
  a single comment, or whitespace.

- The curly braces {, {{, }}, and } can now be used inside
  attributes to invoke escape parsing (calling another parser
  from PXP). In the previous version 1.1.90, this worked only
  in character data nodes.
  
The new version can be found at the usual place:

http://www.ocaml-programming.de/packages/pxp-1.1.91.tar.gz

Gerd

------------------------------------------------------------
Gerd Stolpmann * Viktoriastr. 45 * 64293 Darmstadt * Germany 
gerd@gerd-stolpmann.de          http://www.gerd-stolpmann.de
------------------------------------------------------------
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

