Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA20256; Tue, 27 Aug 2002 11:59:33 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA20202 for <caml-list@pauillac.inria.fr>; Tue, 27 Aug 2002 11:59:32 +0200 (MET DST)
Received: from postfix2-2.free.fr (postfix2-2.free.fr [213.228.0.140])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g7R9xVn27229;
	Tue, 27 Aug 2002 11:59:31 +0200 (MET DST)
Received: from imp1-1.pro.proxad.net (imp1-1.pro.proxad.net [212.27.35.86])
	by postfix2-2.free.fr (Postfix) with ESMTP
	id E1A9E5F757; Tue, 27 Aug 2002 11:59:30 +0200 (CEST)
Received: by imp1-1.pro.proxad.net (Postfix, from userid 33)
	id C3D6578202; Tue, 27 Aug 2002 11:59:30 +0200 (MEST)
To: Xavier Leroy <xavier.leroy@inria.fr>
Subject: Re: [Caml-list] Hashtbl.hash and Hashtbl.hash_param
Message-ID: <1030442366.3d6b4d7eb7db1@imp.pro.proxad.net>
Date: Tue, 27 Aug 2002 11:59:26 +0200 (MEST)
From: jeanmarc.eber@lexifi.com
Cc: sebastien FURIC <sebastien.furic@tni-valiosys.com>, caml-list@inria.fr
References: <3D6653C0.F895EC59@tni.fr> <20020827102435.A17823@pauillac.inria.fr>
In-Reply-To: <20020827102435.A17823@pauillac.inria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
User-Agent: IMP/PHP IMAP webmail program 2.2.42
X-Originating-IP: 207.45.248.21
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Quoting Xavier Leroy <xavier.leroy@inria.fr>:

> 
> However, we need to think twice before changing the hashing function,
> because this would cause trouble to users that store hashtables in
> files using output_value/input_value: if the hash function changes
> before writing and reading, the hashtable read becomes unusable.
> 
> Hence, a request for OCaml users: if you use hashtables whose keys are
> structured data (not just strings or integers), *and* your program
> stores hashtables to files, *and* it's important for you that these
> persistent hashtables can be read back with future versions of OCaml,
> then please drop me a line.
> 

That is an important point that should, I think, at least be clearly said.
Personally, I always thought that values written with output_value (more
generally marshaled ocaml values) were only guaranteed to be compatible for a
given version of ocaml. I never considered output_value as a "long term" storing
solution, but only a "short term" one (good example: *.cmo ans *.cmi files
generated by the ocaml compiler), not to speak about calculated hash values...

Personally, I *want* the ocaml team to be able to change internal
representation, optimize hash functions etc in the hope that this produces an
even better system! (BTW, I may be wrong, but didn’t some tags change between
3.04 and 3.05, but maybe this didn’t change marshaled values ?)

More generally, the concept and importance of 100% backward compatibility
should be discussed. I can not hope for 100% backward compatibility and hope
for big progresses on the ocaml compiler... no ? If people really want 100%
compatibilty, they should stay with an ocaml version.

Conclusion: personally, I don’t want progress of the compiler made difficult by
a 100% backward compatibility "religion". What do other users of ocaml think
about it? (I agree that this is of course a question that is as old as the
existence of computer languages: its more a question about what stage of
development we think ocaml has reached now)

Jean-Marc Eber
LexiFi
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

