Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA20973; Mon, 28 May 2001 14:46:21 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA21052 for <caml-list@pauillac.inria.fr>; Mon, 28 May 2001 14:46:21 +0200 (MET DST)
Received: from verdot.inria.fr (verdot.inria.fr [128.93.11.7])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f4SCkKj07942
	for <caml-list@inria.fr>; Mon, 28 May 2001 14:46:20 +0200 (MET DST)
Received: (from ddr@localhost)
	by verdot.inria.fr (8.9.3/8.9.3) id OAA20985
	for caml-list@inria.fr; Mon, 28 May 2001 14:46:20 +0200
Date: Mon, 28 May 2001 14:46:20 +0200
From: Daniel de Rauglaudre <daniel.de_rauglaudre@inria.fr>
To: caml-list@inria.fr
Subject: [Caml-list] Lazy.Value
Message-ID: <20010528144620.G13297@verdot.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0us
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I may say nonsense, but is it possible to generalize things like:
   ref (Lazy.Value [])

It would help me to have 'a streams (for the empty one) without an
horrible hack in the present implementation which even create bugs in
some circumstances.

I am writing a library (and a syntax) for functional streams and
parsers in Camlp4. I did not put my hack in that version, but the
result is that the empty one is of type '_a Fstream.t.

-- 
Daniel de RAUGLAUDRE
daniel.de_rauglaudre@inria.fr
http://cristal.inria.fr/~ddr/
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

