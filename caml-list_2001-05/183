Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA13869; Mon, 28 May 2001 02:04:07 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA13859 for <caml-list@pauillac.inria.fr>; Mon, 28 May 2001 02:04:07 +0200 (MET DST)
Received: from mta6.snfc21.pbi.net (mta6.snfc21.pbi.net [206.13.28.240])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f4S045r27514;
	Mon, 28 May 2001 02:04:05 +0200 (MET DST)
Received: from checkerlap.d6.com ([64.160.52.153])
 by mta6.snfc21.pbi.net (Sun Internet Mail Server sims.3.5.2000.01.05.12.18.p9)
 with ESMTP id <0GE000DBCQUK7A@mta6.snfc21.pbi.net>; Sun,
 27 May 2001 17:03:57 -0700 (PDT)
Date: Sun, 27 May 2001 17:06:12 -0700
From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] lisp -> ocaml
In-reply-to: <20010527150119.A8468@pauillac.inria.fr>
X-Sender: def6@shell16.ba.best.com
To: Xavier Leroy <Xavier.Leroy@inria.fr>, Miles Egan <miles@caddr.com>
Cc: caml-list@inria.fr
Message-id: <4.3.2.7.2.20010527170201.02754820@shell16.ba.best.com>
MIME-version: 1.0
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Content-type: text/plain; charset="us-ascii"
References: <20010522093341.A97425@caddr.com> <20010522093341.A97425@caddr.com>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


>> Isn't there something that could be done with the toplevel libraries?
>> The toplevel prints variant ctors correctly.
>...
>record labels.  In a separately-compiled program, this typing
>information is available at compile-time, but not at run-time.

Right, I just meant in a program known to be running under the toplevel, would it be possible to use the typing information that's already there?  Those functions aren't available right now, but I don't see why they couldn't be.  

> val new_property: unit -> 'a property
>val put_property: atom -> 'a property -> 'a -> unit
>val get_property: atom -> 'a property -> 'a
>...

I'm confused by what this code is trying to do.  Maybe I don't know enough about lisp to know how this code maps to it, but what's an example code snippet you'd use this code for?

Chris


-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

