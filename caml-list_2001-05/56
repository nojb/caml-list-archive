Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA21092; Wed, 9 May 2001 03:35:24 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA20962 for <caml-list@pauillac.inria.fr>; Wed, 9 May 2001 03:35:22 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f491ZJj13226
	for <caml-list@inria.fr>; Wed, 9 May 2001 03:35:20 +0200 (MET DST)
Received: from localhost (mikan.kurims.kyoto-u.ac.jp [130.54.16.202])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3/3.7W) with ESMTP id KAA10389;
	Wed, 9 May 2001 10:35:14 +0900 (JST)
To: ravi@ittc.ukans.edu
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] External C functions
In-Reply-To: <Pine.LNX.4.10.10105072220320.826-100000@elroy.ittc.ukans.edu>
References: <Pine.LNX.4.10.10105072220320.826-100000@elroy.ittc.ukans.edu>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20010509103514Y.garrigue@kurims.kyoto-u.ac.jp>
Date: Wed, 09 May 2001 10:35:14 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 31
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Ravi Chamarty <ravi@ittc.ukans.edu>

>  I would like to use a C library which has a number of Pthread operations
> used in it. What would be the limitations of the Caml system if I write a
> wrapper around it's API ? These wrappers would be using the API provided
> by  the C library. The C library threads interact among one another. Are
> there any special concerns I should be aware of ?
> 
>  Specifically, I would be interested in knowing if I could run and
> schedule two or more threads within the C system. 

Having multiple threads within the C system is not a problem at all.
For instance we linked the mozilla widget inside a Caml program,
itself using native threads, and this worked OK.  The only constraint
proper to Caml is that no more than one Caml thread can be running at
once, but this does not affect pure C threads.

However, one has to be careful about callbacks: if a Caml callback is
called from a C thread, and this C thread is not the thread which was
called from Caml, then the callback will only run after the original
thread gives the control back to Caml. This is then very easy to
deadlock. Worse, if your Caml program isn't compiled with threads,
there is no locking involved, and you end up running two Caml thread
simultaneously, for an happy crash.

Cheers,

---------------------------------------------------------------------------
Jacques Garrigue      Kyoto University     garrigue at kurims.kyoto-u.ac.jp
		<A HREF=http://wwwfun.kurims.kyoto-u.ac.jp/~garrigue/>JG</A>

-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

