Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA16712; Thu, 31 May 2001 18:12:31 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA16671 for <caml-list@pauillac.inria.fr>; Thu, 31 May 2001 18:12:30 +0200 (MET DST)
Received: from shell5.ba.best.com (shell5.ba.best.com [206.184.139.136])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f4VGCTf15535
	for <caml-list@inria.fr>; Thu, 31 May 2001 18:12:29 +0200 (MET DST)
Received: from localhost (bpr@localhost)
	by shell5.ba.best.com (8.9.3/8.9.2/best.sh) with ESMTP id JAA12104;
	Thu, 31 May 2001 09:12:27 -0700 (PDT)
Date: Thu, 31 May 2001 09:12:27 -0700 (PDT)
From: Brian Rogoff <bpr@best.com>
To: Peter Ronnquist <pronnquist@yahoo.com>
cc: caml-list@inria.fr
Subject: Re: [Caml-list] report describing optimization of numerical computing
 of the ocaml compiler.
In-Reply-To: <20010531151515.3484.qmail@web11503.mail.yahoo.com>
Message-ID: <Pine.BSF.4.21.0105310853050.8508-100000@shell5.ba.best.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 31 May 2001, Peter Ronnquist wrote:
> This report describes adjustments of the ocaml
> compiler to support better optimization of arrays for
> numerical computing.
> 
> http://www.cs.cornell.edu/Courses/cs612/2001SP/projects/ocaml-arrays/OCaml.pdf
> 
> Is this something that is considered to be included in
> future versions of ocaml?

Wow, the paper is dated May 7, 2001 and you already want to know if it is 
going to be in a future version. At this rate, INRIA will need a time
machine to peer into the future for developments!

Seriously, I remember reading that the implementors are looking a lot more
at making OCaml a better vehicle for scientific computing, so I suppose we 
can expect more in the future. I've been looking a little bit at SAC
lately (http://www.informatik.uni-kiel.de/~sacbase/), it is a strict
language based on C with some high level array constructs. It's very
interesting, and maybe when I get some more free time I'll hack up a 
SAC like interface to Bigarrays using P4. Yes, I know that the efficiency 
will not be good since SAC relies on optimizations of its "with-loop" 
construct to match C/Fortran performance, but the experiment would be to 
determine how comfortable SAC-in-OCaml really is. 

I think it's great that all of these scientific computing folks are coming
to Caml, as this will really strengthen the community by adding a new set 
of perspectives. When I was in gradual school it seemed that the numerics 
folks and the language theory folks didn't communicate, and that was a
shame. OCaml should be the premier scientific computing language in addition
to being the premier symbolic processing language!

-- Brian


-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

