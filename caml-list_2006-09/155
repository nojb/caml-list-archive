Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 409FEBC69
	for <caml-list@yquem.inria.fr>; Mon, 25 Sep 2006 15:40:14 +0200 (CEST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k8PDeB7m028513
	for <caml-list@inria.fr>; Mon, 25 Sep 2006 15:40:13 +0200
Received: from rosella (ppp14-47.lns2.syd7.internode.on.net [59.167.14.47])
	by smtp3.adl2.internode.on.net (8.13.6/8.13.5) with ESMTP id k8PDe2fY006844;
	Mon, 25 Sep 2006 23:10:03 +0930 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] Regarding SMP computing
From: skaller <skaller@users.sourceforge.net>
To: Jacques Carette <carette@mcmaster.ca>
Cc: caml-list@inria.fr
In-Reply-To: <4517C7FE.8080102@mcmaster.ca>
References: <4517C7FE.8080102@mcmaster.ca>
Content-Type: text/plain
Date: Mon, 25 Sep 2006 23:40:02 +1000
Message-Id: <1159191602.5339.98.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4517DC3B.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; peyton-jones:01 heap:01 compaction:01 heap:01 threads:01 2006:98 sourceforge:01 wrote:01 garbage:01 minor:01 minor:01 caml-list:01 ghc:01 ghc:01 jacques:03 

On Mon, 2006-09-25 at 08:13 -0400, Jacques Carette wrote:
> Over on Haskell-cafe, Simon Peyton-Jones says:
> "GHC 6.6 (release candidate available) supports parallel execution on 
> SMP machines.
> 
> Garbage collection is not parallelised yet, something we plan to fix
> this autumn."
> 
> A bit of competition is a good thing, isn't it?

Actually this isn't quite accurate, at least as I understand it.
GHC already does have fully parallel minor heap allocation
and compaction etc using a per-thread minor heap, 
but the major collection isn't only not parallel .. 
it isn't even concurrent.

[Using Cheng's terminology, parallel collection implies
multiple collector threads can cooperate so that the system
can scale to very large numbers of CPUs by allowing more
than one CPU to run the collector in simultaneously,
'merely' concurrent includes collectors limited to a
single collector thread]

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

