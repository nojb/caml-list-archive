Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 4D25ABC69
	for <caml-list@yquem.inria.fr>; Mon, 18 Sep 2006 15:23:31 +0200 (CEST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k8IDNS5B003888
	for <caml-list@inria.fr>; Mon, 18 Sep 2006 15:23:30 +0200
Received: from rosella (ppp14-47.lns2.syd7.internode.on.net [59.167.14.47])
	by smtp3.adl2.internode.on.net (8.13.6/8.13.5) with ESMTP id k8IDNJfe070985;
	Mon, 18 Sep 2006 22:53:20 +0930 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] Re: The Future Possibility of Concurrent Garbage
	Collection?
From: skaller <skaller@users.sourceforge.net>
To: Stefan Monnier <monnier@iro.umontreal.ca>
Cc: caml-list@inria.fr
In-Reply-To: <jwvvenl2uhi.fsf-monnier+gmane.comp.lang.caml.inria@gnu.org>
References: <fd3d4e9d0609140840t740eef5ey6eee999ebe6b42e5@mail.gmail.com>
	 <B4FCDE83-36F4-4FA6-9B11-06283C88CB76@inria.fr>
	 <891bd3390609150729k27b7acf8rc9b12f1e08eae93@mail.gmail.com>
	 <wwubqpdr392.fsf@tandem.cs.ru.nl>
	 <jwvvenl2uhi.fsf-monnier+gmane.comp.lang.caml.inria@gnu.org>
Content-Type: text/plain
Date: Mon, 18 Sep 2006 23:23:19 +1000
Message-Id: <1158585799.15083.45.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 450E9DD0.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; sourceforge:01 garbage:01 caml-list:01 concurrent:03 concurrent:03 cases:08 john:08 felix:09 felix:09 possibility:10 explain:11 end:11 successor:13 price:84 use:16 


> The main cost of a concurrent GC is that the application code has to be
> changed to cooperate with the GC.  So if you want to be able to use the same
> application code for both the concurrent and the non-concurrent GC, you end
> up paying the price of concurrent GC in both cases :-(

Can you explain this in more detail?

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

