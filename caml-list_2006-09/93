Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 29FD5BB83
	for <caml-list@yquem.inria.fr>; Thu, 14 Sep 2006 04:13:23 +0200 (CEST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id k8E2DKuV030872
	for <caml-list@inria.fr>; Thu, 14 Sep 2006 04:13:22 +0200
Received: from rosella (ppp14-47.lns2.syd7.internode.on.net [59.167.14.47])
	by smtp1.adl2.internode.on.net (8.13.6/8.13.5) with ESMTP id k8E2D5GV065728;
	Thu, 14 Sep 2006 11:43:07 +0930 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] Type system infering 'a and '_a
From: skaller <skaller@users.sourceforge.net>
To: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
Cc: tom.primozic@gmail.com, caml-list@inria.fr
In-Reply-To: <20060914.092410.105434224.garrigue@math.nagoya-u.ac.jp>
References: <c1490a380609130910s37d76ed6k4c73f2c6df9e1cee@mail.gmail.com>
	 <20060914.092410.105434224.garrigue@math.nagoya-u.ac.jp>
Content-Type: text/plain
Date: Thu, 14 Sep 2006 12:13:05 +1000
Message-Id: <1158199985.5405.69.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 4508BAC0.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; variants:01 variants:01 polymorphism:01 inference:01 coercions:01 2006:98 sourceforge:01 wrote:01 polymorphic:01 minor:01 caml-list:01 garrigue:03 jacques:03 thu:05 usual:06 

On Thu, 2006-09-14 at 09:24 +0900, Jacques Garrigue wrote:
> From: Tom <tom.primozic@gmail.com>

> The main role of a type system is not to be smart, just to be correct :-)

Bull! Ordinary variants are correct. Polymorphic variants are SMART :)
Second order polymorphism for class and record fields .. that's
pretty smart too. Particularly the fact it works with the usual
type inference with only minor hiccups (occasionally you need
some coercions).

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

