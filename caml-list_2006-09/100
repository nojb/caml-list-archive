Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id DC376BBBB
	for <caml-list@yquem.inria.fr>; Thu, 14 Sep 2006 19:05:12 +0200 (CEST)
Received: from ash25e.internode.on.net (ash25e.internode.on.net [203.16.214.182])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id k8EH5ABe027697
	for <caml-list@yquem.inria.fr>; Thu, 14 Sep 2006 19:05:12 +0200
Received: from rosella (ppp14-47.lns2.syd7.internode.on.net [59.167.14.47])
	by ash25e.internode.on.net (8.13.6/8.13.5) with ESMTP id k8EH4vHD034666;
	Fri, 15 Sep 2006 02:34:58 +0930 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] The Future Possibility of Concurrent Garbage
	Collection?
From: skaller <skaller@users.sourceforge.net>
To: Jim Battin <jrbattin@gmail.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <fd3d4e9d0609140840t740eef5ey6eee999ebe6b42e5@mail.gmail.com>
References: <fd3d4e9d0609140840t740eef5ey6eee999ebe6b42e5@mail.gmail.com>
Content-Type: text/plain
Date: Fri, 15 Sep 2006 03:04:57 +1000
Message-Id: <1158253497.24982.155.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 45098BC6.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; scalable:01 threads:01 2006:98 sourceforge:01 wrote:01 doligez:01 garbage:01 caml-list:01 algorithms:03 concurrent:03 concurrent:03 suggests:04 parallel:05 parallel:05 thu:05 

On Thu, 2006-09-14 at 10:40 -0500, Jim Battin wrote:
>  Prior to that, there appears to have been some
> academic research regarding concurrent GC (Doligez, Leroy).

There's some more recent stuff eg

"Scalable Real-time parallel GC for SMP", Cheng 

(sorry lost the URL ..) which suggests an implementation
for ML like language is quite possible. This paper
describes an algorithms for *parallel* collection,
not merely concurrent collection, that is, multiple
threads (multiple CPUs) participating in the collection.

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

