Return-Path: <jfc@MIT.EDU>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.1 required=5.0 tests=AWL,SPF_SOFTFAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id A62CABC50
	for <caml-list@yquem.inria.fr>; Sun, 17 Sep 2006 00:55:58 +0200 (CEST)
Received: from biscayne-one-station.mit.edu (BISCAYNE-ONE-STATION.MIT.EDU [18.7.7.80])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k8GMtvQB001103
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Sun, 17 Sep 2006 00:55:58 +0200
Received: from outgoing.mit.edu (OUTGOING-AUTH.MIT.EDU [18.7.22.103])
	by biscayne-one-station.mit.edu (8.13.6/8.9.2) with ESMTP id k8GMtlaS021286;
	Sat, 16 Sep 2006 18:55:51 -0400 (EDT)
Received: from contents-vnder-pressvre.mit.edu (CONTENTS-VNDER-PRESSVRE.MIT.EDU [18.7.16.67])
	(authenticated bits=56)
        (User authenticated as jfc@ATHENA.MIT.EDU)
	by outgoing.mit.edu (8.13.6/8.12.4) with ESMTP id k8GMtaxS017483
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT);
	Sat, 16 Sep 2006 18:55:36 -0400 (EDT)
Received: (from jfc@localhost) by contents-vnder-pressvre.mit.edu (8.12.9.20060308)
	id k8GMtZKC014923; Sat, 16 Sep 2006 18:55:35 -0400 (EDT)
Message-Id: <200609162255.k8GMtZKC014923@contents-vnder-pressvre.mit.edu>
To: Oliver Bandel <oliver@first.in-berlin.de>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] OCamlon 64 Bit-Sun compiled as 32-Bit
In-Reply-To: Your message of "Sat, 16 Sep 2006 20:55:14 +0200."
             <20060916185514.GA6087@first.in-berlin.de> 
Date: Sat, 16 Sep 2006 18:55:35 -0400
From: John Carr <jfc@MIT.EDU>
X-Scanned-By: MIMEDefang 2.42
X-Miltered: at concorde with ID 450C80FD.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml-:01 compile:01 slower:01 caml-list:01 integer:01 tar:01 int:01 int:01 native:02 objects:02 module:03 jfc:04 jfc:04 fix:04 fix:04 


INRIA does not support 64 bit native code on SPARC
because they do not have any such systems.  I have
a patch for version 3.09.1:

http://www.mit.edu/~jfc/ocaml-3.09.1-sparc64.tar.gz

Tk will not compile with this patch (this is a longstanding
problem that I intend to fix, but I want to fix it right
rather than accomodating the awful code generated for large
inner module initializers).

You may find 32 bit code to be adequate for your needs.

My program that uses Int32 and Int64 runs significantly
faster in 64 bit mode.  You can also expect floating point
to be faster.  Ordinary integer code is likely to be slower
because all the objects are bigger.

