Return-Path: <tews@cs.ru.nl>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 1E465BB83
	for <caml-list@yquem.inria.fr>; Wed, 13 Sep 2006 17:54:29 +0200 (CEST)
Received: from pandora.cs.kun.nl (pandora.cs.kun.nl [131.174.33.4])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k8DFsSDE014731
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Wed, 13 Sep 2006 17:54:28 +0200
Received: from tandem.cs.ru.nl [131.174.142.18]  (helo=tandem.cs.ru.nl)
	by pandora.cs.kun.nl (8.13.7/5.9) with ESMTP id k8DFsM9m028174
	for <caml-list@inria.fr>; Wed, 13 Sep 2006 17:54:22 +0200 (MEST)
Received: from tews by tandem.cs.ru.nl with local (Exim 4.63)
	(envelope-from <tews@tandem.cs.ru.nl>)
	id 1GNX5d-0007H2-9g
	for caml-list@inria.fr; Wed, 13 Sep 2006 17:55:53 +0200
From: Hendrik Tews <tews@cs.ru.nl>
To: caml users <caml-list@inria.fr>
Subject: Re: [Caml-list] 3.09.3 release candidate 2
References: <0A29CC70-FA05-432A-9DF5-8B98F6E573F3@inria.fr>
	<4E2C1762-63F0-4540-8639-056C1C86528A@inria.fr>
	<wwuy7snq4go.fsf@tandem.cs.ru.nl>
	<cd67f63a0609130805j42935b13s22e086e560a20ded@mail.gmail.com>
	<1158161553.6133.236.camel@rosella.wigram>
Date: Wed, 13 Sep 2006 17:55:53 +0200
In-Reply-To: <1158161553.6133.236.camel@rosella.wigram>
	(skaller@users.sourceforge.net's message of "Thu, 14 Sep 2006 01:32:33
	+1000")
Message-ID: <wwuu03bpxpy.fsf@tandem.cs.ru.nl>
User-Agent: Gnus/5.110006 (No Gnus v0.6) Emacs/21.4 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Scanned-By: MIMEDefang 2.56 on 131.174.33.4
X-Miltered: at concorde with ID 450829B4.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; hendrik:01 tews:01 tews:01 cmo:01 gramlib:01 camlp:01 cmxa:01 plexer:01 cmx:01 camlp:01 bytecode:01 cmo:01 grepping:01 gramlib:01 explicitely:01 


   > I do not understand why you do need .cmo files when you have a library
   > (gramlib.cma or camlp4.cma) that includes these modules (note that .a
   > and .cmxa are also available for native linking).

But with this line of reasoning, plexer.{o,cmx} should not be
installed either, shouln't it?

   because these are *camlp4* modules, camlp4 loads bytecode
   (only) dynamically from a single cmo file (only).

No, for me it was like that:
- first I didn't know, there is library with these modules 
  (how to find out what library contains a given module without
  grepping through the build log?)
- linking gramlib does not work, because the module is not
  explicitely referenced (only during runtime the program does a
  dynlink on something else that needs the given module)

I could fix that with adding an artificial reference like

module XXX = Plexer


(I could still imagine some camlp4 application szenario, where
you need to use -linkall, but don't want to link all of
gramlib.cma. Then you would need the cmo itself, right? However,
this was not the case in my application.)

Bye,

Hendrik

