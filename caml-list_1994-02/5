Received: by pauillac.inria.fr; Fri, 11 Feb 94 09:13:58 +0100
Received: from margaux.inria.fr by pauillac.inria.fr; Thu, 10 Feb 94 20:58:32 +0100
Received: from concorde.inria.fr by margaux.inria.fr, Thu, 10 Feb 94 20:58:29 +0100
Received: from Tamuz.Stanford.EDU by concorde.inria.fr; Thu, 10 Feb 1994 20:58:27 +0100
Received:  by Tamuz.Stanford.EDU (5.61/25-theory-eef) id AA24871; Thu, 10 Feb 94 11:47:36 -0800
From: Xavier Leroy <xavier@Theory.Stanford.EDU>
Message-Id: <9402101947.AA24871@Tamuz.Stanford.EDU>
Subject: Re: Uncaught exception: Out_of_memory
To: jairo@cesma.usb.ve (Jairo A. Medina)
Date: Thu, 10 Feb 1994 11:47:34 -0800 (PST)
Cc: caml-list@margaux.inria.fr, jairo@cesma.usb.ve
In-Reply-To: <9402101609.AA01844@Pantaleon > from "Jairo A. Medina" at Feb 10, 94 12:09:51 pm
Content-Type: text
Content-Length: 827       
Sender: weis@pauillac.inria.fr
Status: O

> #t2list c;;
> Uncaught exception: Out_of_memory
>
> 	How can i increase the memory handled by the camllight system?

Caml Light has (almost) no "hard" limits on memory: it will allocate
as much as needed, unless the memory resources of the machine are
exhausted. On a Unix machine without soft limits or memory quotas,
this means the whole swap space, and there's not much you can do to go
beyond that limit.

Most often, the "Out_of_memory" error is caused by a looping program,
e.g. a non-terminating recursion that causes the stacks to grow
infinitely. (See the discussion at the end of the chapter on the
runtime system in the Caml Light manual.)

Another likely cause is trying to allocate a string or array of an
unreasonable size.

Try to trace some of your functions to see what's going on.

Regards,

- Xavier Leroy



