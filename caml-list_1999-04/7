Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA07090 for caml-redistribution; Tue, 6 Apr 1999 08:37:20 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA30845 for <caml-list@pauillac.inria.fr>; Tue, 6 Apr 1999 04:07:05 +0200 (MET DST)
Received: from simon.cs.cornell.edu (SIMON.CS.CORNELL.EDU [128.84.154.10])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id EAA07640;
	Tue, 6 Apr 1999 04:07:03 +0200 (MET DST)
Received: from cloyd.cs.cornell.edu (CLOYD.CS.CORNELL.EDU [128.84.227.15])
	by simon.cs.cornell.edu (8.9.3/8.9.3/R-2.3) with ESMTP id WAA29683;
	Mon, 5 Apr 1999 22:07:01 -0400 (EDT)
Received: from CS.Cornell.EDU (IDENT:nogin@GULAG.CS.CORNELL.EDU [128.84.248.53])
	by cloyd.cs.cornell.edu (8.9.3/8.9.3/M-2.2) with ESMTP id WAA00999;
	Mon, 5 Apr 1999 22:06:59 -0400 (EDT)
Sender: weis
Message-ID: <37096C42.1659E46B@CS.Cornell.EDU>
Date: Mon, 05 Apr 1999 22:06:59 -0400
From: Alexey Nogin <nogin@cs.cornell.edu>
Organization: Cornell University, department of Computer Science
X-Mailer: Mozilla 4.08 [en] (X11; U; Linux 2.0.37 i686)
MIME-Version: 1.0
To: Xavier Leroy <Xavier.Leroy@inria.fr>
CC: caml-list@inria.fr, Jason Hickey <jyh@cs.cornell.edu>,
        Alexei Kopylov <kopylov@cs.cornell.edu>,
        Paul Stodghill <stodghil@cs.cornell.edu>
Subject: Re: Upgrade from OCaml 2.01 to OCaml 2.02 made things _slower_!
References: <19990305114112.34610@pauillac.inria.fr> <36E73321.D37B49F6@CS.Cornell.EDU> <19990311104442.30284@pauillac.inria.fr>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit

Xavier Leroy wrote:

> > Also, I was doing some performance mesurements (using P6 performance
> > counter support patches for Linux by Erik Hendriks -
> > http://beowulf.gsfc.nasa.gov/software/ ) when I upgraded, so I have some
> > information (and can get more of it) on the performance counters for my
> > program under both 2.01 and 2.02. In particular, the number of requests
> > from the processor to the L1 data cache became 2%-3% bigger.
>
> That's more meaningful.  The two new optimizations in 2.02 (closed
> toplevel functions and allocation coalescing) should reduce the number
> of memory accesses.  Allocation coalescing might increase register
> pressure locally, causing other stuff to be spilled on the stack,
> though.

I tried backing up allocation coalescing (by backing up changes 1.8 -> 1.9
and 1.10 -> 1.11 of asmcomp/senectgen.ml), but that only increased the number
of memory accesses. Do you have another guess what else was changed between
2.01 and 2.02 that could have caused the increase of the number of memory
accesses?

> Is there any way you could get a per-function profile of
> memory requests? (like on the Alpha with the Digital Unix tools).

I do not think so. I could do something in the gprof-style to record the # of
memory requests at each function call, but such mesurement would probably be
too inefficient and inaccurate (since mesurement code would produce too many
memory accesses by itself). We also tried to run our code (MetaPRL,
http://ensemble01.cs.cornell.edu:12000/cvsweb/~checkout~/meta-prl/doc/htmlman/default.html
) under RSIM simulator, but could not make it work.

Alexey
--------------------------------------------------------------
Home Page: http://www.cs.cornell.edu/nogin/
E-Mail: nogin@cs.cornell.edu (office), ayn2@cornell.edu (home)
Office: Upson 4139, tel: 1-607-255-4934
ICQ #: 24708107 (office), 24678341 (home)




