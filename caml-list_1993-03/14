Received: by margaux.inria.fr, Mon, 22 Mar 93 10:52:33 +0100
Received: from givry.inria.fr by margaux.inria.fr, Fri, 19 Mar 93 15:54:43 +0100
Received: by givry.inria.fr; Fri, 19 Mar 1993 15:54:42 +0100
Message-Id: <199303191454.AA03885@givry.inria.fr>
From: Francis Dupont <dupont@givry>
To: cr@dcs.ed.ac.uk
Cc: xavier@theory.stanford.edu, caml-list@margaux
Subject: Re: streams 
In-Reply-To: Your message of Thu, 18 Mar 1993 22:28:19 GMT.
             <8280.9303182228@damsay.dcs.ed.ac.uk> 
Date: Fri, 19 Mar 1993 15:54:39 +0100
Sender: weis@margaux
X-Charset: ASCII
X-Char-Esc: 29
Status: O

A propos de streams (flux dans le Val de Loire), en Lazy CAML c'est
un type liste sans contructeur [] (appele aussi 'Nil) et avec un
constructeur :: (appele aussi 'Cons) lazy (paresseux).
Un exemple figure dans ma these dans la section sur les applications
de l'evaluation paresseuse, en haut de la page 53:

type 'a stream = { lazy Hd : 'a ; lazy Tl : 'a stream };;

(PS: comme il n'y a qu'un seul constructeur on ne met pas de type somme).
(PS: une variante consiste a ne rendre que Tl paresseux).
Les valeurs de ce type sont toujours infinies et necessitent donc
une evaluation paresseux (implicite ou explicite, cad codee avec des fonctions)

Francis.Dupont@inria.fr


