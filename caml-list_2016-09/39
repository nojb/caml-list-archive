Return-Path: <kakadu.hafanana@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 9AB617F613
	for <caml-list@sympa.inria.fr>; Tue, 13 Sep 2016 17:31:55 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=kakadu.hafanana@gmail.com; spf=Pass smtp.mailfrom=kakadu.hafanana@gmail.com; spf=None smtp.helo=postmaster@mail-wm0-f47.google.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  kakadu.hafanana@gmail.com) identity=pra;
  client-ip=74.125.82.47;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="kakadu.hafanana@gmail.com";
  x-sender="kakadu.hafanana@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  kakadu.hafanana@gmail.com designates 74.125.82.47 as
  permitted sender) identity=mailfrom; client-ip=74.125.82.47;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="kakadu.hafanana@gmail.com";
  x-sender="kakadu.hafanana@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-wm0-f47.google.com) identity=helo;
  client-ip=74.125.82.47;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="kakadu.hafanana@gmail.com";
  x-sender="postmaster@mail-wm0-f47.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AmEgUYBKxv1b4J1k8S9mcpTZWNBhigK39O0sv0rFi?=
 =?us-ascii?q?tYgVKvTxwZ3uMQTl6Ol3ixeRBMOAuqsC1LKd4/ioGTRZp83Q6DZaKN0EfiRGoP?=
 =?us-ascii?q?1epxYnDs+BBB+zB9/RRAt+Iv5/UkR49WqwK0lfFZW2TVTTpnqv8WxaQU2nZkJL?=
 =?us-ascii?q?L+j4UrTfk96wn7jrvcaCOkMX3HHtOfsydEzw9lSJ8JFOwMNLEeUY8lPxuHxGeu?=
 =?us-ascii?q?BblytDBGm4uFLC3Pq254Np6C9KuvgspIZqWKT+eLkkH/QDVGx1e0h83sDgtAHC?=
 =?us-ascii?q?QA2T/TNcFzxOylsbNTPY9wn3VYvdtS7zt+w1mHXLfJ6+cbdhcDRL96qCADXlkM?=
 =?us-ascii?q?4CPj5xpH/UjM1YnatdrB+x4QZild36eoaQYdl3farRYJtORmNCV8pMESxIDIq6?=
 =?us-ascii?q?Zo0GJ+UENOdc6YL6og1d/lOFGQCwCba3mXdzjXjs0Ph/jr0s?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CgAwClG9hXfy9SfUpdHAEBBAEBCgEBG?=
 =?us-ascii?q?AEFAQsBgw8BAQEBATw5fAeBMqU1Y4RQX41VJIV6AoFFBzwQAQEBAQEBAQEBAQE?=
 =?us-ascii?q?SAQEJCwsJFzGCMgQBFQWCEQEBAgISER0BGxILAQMMBgMCCw0CAgkdAgIiAREBB?=
 =?us-ascii?q?QEKEgYTEhCIDQEDFw6TVo9FgTI+Mos9gWqCXgWDZwoZJwMKU4JUAQEBAQYBAQE?=
 =?us-ascii?q?BGwIGEHaJeYRAgwKCWgEEhmYMiC2KRoIvg3aJK4I8fIwqjFiCORMegRE1gwWBe?=
 =?us-ascii?q?Tk0AYYggUABAQE?=
X-IPAS-Result: =?us-ascii?q?A0CgAwClG9hXfy9SfUpdHAEBBAEBCgEBGAEFAQsBgw8BAQE?=
 =?us-ascii?q?BATw5fAeBMqU1Y4RQX41VJIV6AoFFBzwQAQEBAQEBAQEBAQESAQEJCwsJFzGCM?=
 =?us-ascii?q?gQBFQWCEQEBAgISER0BGxILAQMMBgMCCw0CAgkdAgIiAREBBQEKEgYTEhCIDQE?=
 =?us-ascii?q?DFw6TVo9FgTI+Mos9gWqCXgWDZwoZJwMKU4JUAQEBAQYBAQEBGwIGEHaJeYRAg?=
 =?us-ascii?q?wKCWgEEhmYMiC2KRoIvg3aJK4I8fIwqjFiCORMegRE1gwWBeTk0AYYggUABAQE?=
X-IronPort-AV: E=Sophos;i="5.30,329,1470693600"; 
   d="scan'208";a="193009641"
Received: from mail-wm0-f47.google.com ([74.125.82.47])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 13 Sep 2016 17:31:47 +0200
Received: by mail-wm0-f47.google.com with SMTP id c131so118736167wmh.0
        for <caml-list@inria.fr>; Tue, 13 Sep 2016 08:31:47 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=Lk8pVFPzQnhs1yTKeHyZ4jTBKjho1Kk8jZKuJvpHPlU=;
        b=gr+jaoQy+TRineCOd1fpjyd03fO2381TbkDEquj4cKoPYdoMuwfOrHyj//rAzD7QGk
         lYbYwmUaOYwdw/t8WG2CzC6uxSjX5ScdXU0juAt8Z6PcibW1+Ah1wzOnfvNQ4G0kKmkw
         0iu07d8kEoham9IjRLjnQp5SvDmdqDEOyJ/DYhBhtkIA3lD8mRu7V76Ung5zVBU0eN6k
         rjKjgZoI4eO/zXeCJg3qo0AJcq1NxG3ABFYIzTiQwEhW3LFcL3f5gMqh/hH3FcUsv7B1
         8gotQtHUAQxEURsI+Ouiipr7MxftG1+cSG5zBm61CxMaCS+LwvBqXZh2fgl4xJEDjH8g
         WBsw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=Lk8pVFPzQnhs1yTKeHyZ4jTBKjho1Kk8jZKuJvpHPlU=;
        b=MA8SE5+FCywRAtZyJxOb7vgwK48NAokb1JpjFDsAsQZmRYPNWtEYsLlXSxL8O7sJCK
         ba3zhChbmbnq7F3DwZFjxxPCdplQNik8ib6Q+ikYowaiszDoBooPzVATsykSTnJyvdKq
         MMyN8Tv01dg7fK2a9rwpxlwqsgGWrTNgSg6UFP7Zg0t40q/B+5yGLAuJQuMV84yRIB7A
         BT3IJ9YWtXk/VgWny3fYa2MbtgX/nKxy+Fl2ar9OabfdJrV9e5h7vhWnD3zWnez26YRD
         hPghSpMfepyiz3tQWjv1zIqEB2nATjPjBqf9RNVwB8+AGnb08wadPRs5Ye/9Gsnn9Phk
         O0OQ==
X-Gm-Message-State: AE9vXwPkaoJxwbfP3wIddGmr4iiuTKStpCiSLBYbIIPAFMgu8XKkXNLY4EaksG24zUvR58MpO+SN8RGxcGGYwg==
X-Received: by 10.28.193.207 with SMTP id r198mr1409572wmf.49.1473780706569;
 Tue, 13 Sep 2016 08:31:46 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.80.178.230 with HTTP; Tue, 13 Sep 2016 08:31:23 -0700 (PDT)
In-Reply-To: <337861473779549@web6h.yandex.ru>
References: <337861473779549@web6h.yandex.ru>
From: Kakadu <kakadu.hafanana@gmail.com>
Date: Tue, 13 Sep 2016 18:31:23 +0300
Message-ID: <CAGmVoG1naW+w5WL=5VV5aBHrHphy-Bze6vZ_J15-vED_NBwfLg@mail.gmail.com>
To: =?UTF-8?B?0JDQvdC00YDQtdC5INCR0LXRgNCz0LzQsNC9?= <vkni@yandex.ru>
Cc: Caml List <caml-list@inria.fr>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Subject: Re: [Caml-list] type-safe printf

Functional unparsing by Olivier Danvy can be related article.
http://www.brics.dk/RS/98/12/BRICS-RS-98-12.pdf


Happy hacking,
Kakadu

On Tue, Sep 13, 2016 at 6:12 PM, =D0=90=D0=BD=D0=B4=D1=80=D0=B5=D0=B9 =D0=
=91=D0=B5=D1=80=D0=B3=D0=BC=D0=B0=D0=BD <vkni@yandex.ru> wrote:
> Hello,
>
> is there a good article or just short explanation how compile-type checki=
ng of Printf arguments works?
>
> Does it require special compiler support like in C++ compilers/analyzers,=
 or one can somehow do the trick of parsing string literal using Ocaml lang=
uage itself? (actually latter does not look possible to me)
>
> Thanks,
>     Andrey.
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
