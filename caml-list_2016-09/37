Return-Path: <vkni@yandex.ru>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 8E2427F613
	for <caml-list@sympa.inria.fr>; Tue, 13 Sep 2016 17:12:31 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=vkni@yandex.ru; spf=Pass smtp.mailfrom=vkni@yandex.ru; spf=None smtp.helo=postmaster@forward7p.cmail.yandex.net
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  vkni@yandex.ru) identity=pra; client-ip=87.250.241.192;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="vkni@yandex.ru"; x-sender="vkni@yandex.ru";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  vkni@yandex.ru designates 87.250.241.192 as permitted sender)
  identity=mailfrom; client-ip=87.250.241.192;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="vkni@yandex.ru"; x-sender="vkni@yandex.ru";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@forward7p.cmail.yandex.net) identity=helo;
  client-ip=87.250.241.192;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="vkni@yandex.ru";
  x-sender="postmaster@forward7p.cmail.yandex.net";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3A+7z2/xORScn8MrO1xTMl6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0K/rzrarrMEGX3/hxlliBBdydsKMdzbWO+PC4ESxYuNDa7yBEKMQNHzY+yu?=
 =?us-ascii?q?wo3CUYSPafDkP6KPO4JwcbJ+9lEGFfwnegLEJOE9z/bVCB6le77DoVBwmtfVEt?=
 =?us-ascii?q?fre9ScbuiJG83uW2vpnSeBlghTynYLo0Ig/lgx/Ws5w/gWJ6J0954BbRS35Be6?=
 =?us-ascii?q?wC22BuJHqClhDw69f25oM1oHcYgO4o68MVCfayRK8/V7ENVDk=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DABABrFthXh8Dx+lddRwEXAQYBgwMBA?=
 =?us-ascii?q?QEBAYFxhXZonjeTPYIDgzSCYAEJgU45EwEBAQEBAQEBAQEBEgEBAQoLCQkZL0E?=
 =?us-ascii?q?SgV8Ygl4BATiJfwEDG7AThS4BAQWDZQFKA4M9HQiPVDeBfguDB48kikaCZIxsg?=
 =?us-ascii?q?VgBjgmQUyACgzaBW22DR4NJAQEB?=
X-IPAS-Result: =?us-ascii?q?A0DABABrFthXh8Dx+lddRwEXAQYBgwMBAQEBAYFxhXZonje?=
 =?us-ascii?q?TPYIDgzSCYAEJgU45EwEBAQEBAQEBAQEBEgEBAQoLCQkZL0ESgV8Ygl4BATiJf?=
 =?us-ascii?q?wEDG7AThS4BAQWDZQFKA4M9HQiPVDeBfguDB48kikaCZIxsgVgBjgmQUyACgza?=
 =?us-ascii?q?BW22DR4NJAQEB?=
X-IronPort-AV: E=Sophos;i="5.30,329,1470693600"; 
   d="scan'208";a="236308127"
Received: from forward7p.cmail.yandex.net ([87.250.241.192])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 13 Sep 2016 17:12:30 +0200
Received: from mxback14h.mail.yandex.net (mxback14h.mail.yandex.net [84.201.187.48])
	by forward7p.cmail.yandex.net (Yandex) with ESMTP id 952C921396
	for <caml-list@inria.fr>; Tue, 13 Sep 2016 18:12:29 +0300 (MSK)
Received: from web6h.yandex.ru (web6h.yandex.ru [84.201.186.35])
	by mxback14h.mail.yandex.net (nwsmtp/Yandex) with ESMTP id eUp8zUw5NF-CTAa1kHq;
	Tue, 13 Sep 2016 18:12:29 +0300
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yandex.ru; s=mail; t=1473779549;
	bh=GR2cZVdZrlHiax+jjrBhvm/Zv60FsZ5KzOfwiZ2gCUA=;
	h=From:To:Subject:Message-Id:Date;
	b=bCtRo0I3qg1bixbq2XXNGyEBvLQGOaq3JRqMn9R7cXcwPnokVhnrZYO+XgWbB5nuZ
	 Hisuo+Tp0+HG90xQK3SuQU0slbuqlCfFgqYV9THARVCnMYugPVVdbH8RZkxzxpJ9sx
	 2KW8dDctJoGYu+67hdxCXgXlujTxLYOl78I+4g1k=
Received: by web6h.yandex.ru with HTTP;
	Tue, 13 Sep 2016 18:12:29 +0300
From: =?utf-8?B?0JDQvdC00YDQtdC5INCR0LXRgNCz0LzQsNC9?= <vkni@yandex.ru>
To: caml-list@inria.fr
MIME-Version: 1.0
Message-Id: <337861473779549@web6h.yandex.ru>
X-Mailer: Yamail [ http://yandex.ru ] 5.0
Date: Tue, 13 Sep 2016 18:12:29 +0300
Content-Transfer-Encoding: 7bit
Content-Type: text/plain
X-Validation-by: vkni@yandex.ru
Subject: [Caml-list] type-safe printf

Hello,

is there a good article or just short explanation how compile-type checking of Printf arguments works?

Does it require special compiler support like in C++ compilers/analyzers, or one can somehow do the trick of parsing string literal using Ocaml language itself? (actually latter does not look possible to me)

Thanks,
    Andrey.
