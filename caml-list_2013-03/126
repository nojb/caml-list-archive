Return-Path: <oliver@first.in-berlin.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 449177EE8A;
	Fri, 15 Mar 2013 17:01:06 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=pra;
  client-ip=192.109.42.8;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=mailfrom;
  client-ip=192.109.42.8;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@einhorn.in-berlin.de) identity=helo;
  client-ip=192.109.42.8;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="postmaster@einhorn.in-berlin.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AtkJAAZFQ1HAbSoIiWdsb2JhbABDh1lat0qFGgEDAYFnFg4BAQEVEhQEJIIqAQEEAQwXDwFGBQsJAgkPAgIFIQICDwUYMYghBgSVIZsDknIVgQ6MXDldB4ItMmEDjkSIFoEgkm4
X-IPAS-Result: AtkJAAZFQ1HAbSoIiWdsb2JhbABDh1lat0qFGgEDAYFnFg4BAQEVEhQEJIIqAQEEAQwXDwFGBQsJAgkPAgIFIQICDwUYMYghBgSVIZsDknIVgQ6MXDldB4ItMmEDjkSIFoEgkm4
X-IronPort-AV: E=Sophos;i="4.84,850,1355094000"; 
   d="scan'208";a="6650613"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 15 Mar 2013 17:00:47 +0100
X-Envelope-From: oliver@first.in-berlin.de
Received: from first (e178037077.adsl.alicedsl.de [85.178.37.77])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id r2FG0jLh029389
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT);
	Fri, 15 Mar 2013 17:00:46 +0100
Received: by first (Postfix, from userid 1000)
	id 882C315400E6; Fri, 15 Mar 2013 17:00:45 +0100 (CET)
Date: Fri, 15 Mar 2013 17:00:45 +0100
From: oliver <oliver@first.in-berlin.de>
To: Gabriel Kerneis <kerneis@pps.jussieu.fr>
Cc: Jeremie Dimino <jdimino@janestreet.com>, caml-list@inria.fr,
        ocsigen@inria.fr
Message-ID: <20130315160045.GA5664@siouxsie>
References: <CALScVYmU7zEXbgdS21gGrq8iFvgVs0FWieKipRE9WtOM+PxeEg@mail.gmail.com>
 <5142E780.7060806@hars.de>
 <CANhEzE5_OtOjxw5xAYd0S5pSwO906oXcXg=ZFu9+YnwGRLZ+Eg@mail.gmail.com>
 <20130315124345.GB3262@siouxsie>
 <CANhEzE56Sd1CphY=QWU-p0=PgJrQF_UwfdLB4kfwgr+d_q9agA@mail.gmail.com>
 <20130315141735.GA4697@siouxsie>
 <20130315142715.GC4697@siouxsie>
 <CANhEzE48OVPjkbOsNoM9WCwY6z2evHvg1qJiufsCff_KZ5F72Q@mail.gmail.com>
 <20130315151134.GA5194@siouxsie>
 <20130315154414.GB6473@kerneis.info>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20130315154414.GB6473@kerneis.info>
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
Subject: Re: [Caml-list] BUG in unix.ml (was: strange errors when linking
 lwt.unix)

On Fri, Mar 15, 2013 at 03:44:14PM +0000, Gabriel Kerneis wrote:
> Oliver,
> 
> > I don't know why you are telling me this.
> > i did not asked about it.
> 
> Jérémie is kindly trying to show you why you are mistaken.

I did not see it from his explanation that signal(2) is not called.



> When you say:
> 
> > > > Just by your activation of signal function - not blocking, but handling
> > > > "Sys.Signal_handle" but with the unreliable signal semantics this has
> > > > cause the problems.
> > > >
> > > > signal(2) opened the pandoras box.
> 
> This is wrong.  Because OCaml does not call signal(2).  At all.  So there is no
> "pandora box" to open, no "unreliable signal semantics" used.
> 
>           Sys.set_signal = sigaction(2)
>                          ≠ signal(2)


From this kind of explanation I see more.

The problem occures when using the signal handler from Sys,
not from unix module.
It was stated that the unix module is doing things wrong.
But the Unix signalling mechanism was not used.

I wait for an example which uses Unix module for the signals
and fails.

have not seen it so far.

So, then interaction of Sys- and Unix.-module may be a problem.

But the Code did not used Unix-module.

So it's also wrong to state Unix module makes problems and is buggy,
if the example don't uses it for the signal handling.

I had the assumption that Sys-module uses signal(2).
It may be wrong (did not eplored the sources).
But then there is the problem, not in Unix-module.

Also I wonder why threads were mentioned.
In the test code via the list was nothing from Thread-module
involved.



> 
> (And sigprocmask(2) is irrelevant here: it is also part of the "reliable
> semantics", but does something different from sigaction(2), as Jérémie told
> you.)

I never said that sigrpocmask or sigactiona re non-reliable.

signal(2) is non-reliable.
That was my point, toigether with Assumption of signal(2) in Sys-sighandlers.




> 
> > But if you wish to explain it to yourself, go on.
> 
> You are not only rude but also completely missing the point here.

You also missed my point.

What I have overlooked at the beginning was, that
Sys.* was used and not Unix.*
and when I saw that later, I was a bit astouned and confused.

So I removed the Sys.* signal stuff.
Then there was no problem in the code.

I'm still waiting for the code that shows that unix.ml is buggy.

If Sys.<signalstuff> is also using sigprocmask/sigactio/sig[^nal]foobar
then Sys.* is the problem.

That was my point.

Maybe I was not clear in explaining this.

So... back to beginning of the Thread:  where is Unix module failing on signals?

Ciao,
   Oliver
