Return-Path: <oliver@first.in-berlin.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id C90C77EE80
	for <caml-list@sympa.inria.fr>; Sat, 23 Mar 2013 02:25:21 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=pra;
  client-ip=192.109.42.8;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=mailfrom;
  client-ip=192.109.42.8;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@einhorn.in-berlin.de) identity=helo;
  client-ip=192.109.42.8;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="postmaster@einhorn.in-berlin.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmIMAMQBTVHAbSoIe2dsb2JhbABDiDG4I4UTAwGBaRYOAQEWJgQkgiQBAQUjVhALCQ8CAgUhAgIPBRgxiCcEr1+SHBWBDo0YXQeCLTJhA45LiBiUEA
X-IPAS-Result: AmIMAMQBTVHAbSoIe2dsb2JhbABDiDG4I4UTAwGBaRYOAQEWJgQkgiQBAQUjVhALCQ8CAgUhAgIPBRgxiCcEr1+SHBWBDo0YXQeCLTJhA45LiBiUEA
X-IronPort-AV: E=Sophos;i="4.84,896,1355094000"; 
   d="scan'208";a="8920535"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 23 Mar 2013 02:25:21 +0100
X-Envelope-From: oliver@first.in-berlin.de
Received: from first (e178012227.adsl.alicedsl.de [85.178.12.227])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id r2N1PJlp024305
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT);
	Sat, 23 Mar 2013 02:25:19 +0100
Received: by first (Postfix, from userid 1000)
	id E45C215400E6; Sat, 23 Mar 2013 02:25:18 +0100 (CET)
Date: Sat, 23 Mar 2013 02:25:18 +0100
From: oliver <oliver@first.in-berlin.de>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: "'Yaron Minsky'" <yminsky@janestreet.com>, caml-list@inria.fr
Message-ID: <20130323012518.GA3899@siouxsie>
References: <fa.e3jKyg6bl9+vTkPgypQ4ZRzEoos@ifi.uio.no>
 <878v5lca2c.fsf@li195-236.members.linode.com>
 <CAGmVoG15XvxWb9SEkV_uj3v7SwB4r9W0K9=8UDPVEEGghkDBoQ@mail.gmail.com>
 <9813208.KJBpLPkkvX@groupon>
 <069c01ce25ab$a9cf3f10$fd6dbd30$@ffconsultancy.com>
 <CACLX4jTuV-M5HYDgbJdE9H5EC_FbCfy5uw4CvpKUTk5cJw=VdA@mail.gmail.com>
 <06b901ce25ca$cc415be0$64c413a0$@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <06b901ce25ca$cc415be0$64c413a0$@ffconsultancy.com>
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
Subject: Re: [Caml-list] Re: Haskell vs OCaml

On Thu, Mar 21, 2013 at 12:26:56AM -0000, Jon Harrop wrote:
> Yaron wrote:
> > I don't think OCaml is unfriendly to commercial users
> 
> I meant that few people buy or sell commercial OCaml code compared to .NET,
> particularly when the target market is OCaml programmers themselves. We
> tried with products like Smoke and Presenta but hit problems that don't
> exist on alternatives like .NET. Smoke was made difficult by a combinatorial
> explosion with brittle bindings that required us to recompile and re-release
> for every minor version increment of either OCaml itself or LablGL. In
> essence, OCaml bytecode was not designed to be redistributable. We were
> forced to drop Presenta when we found that around 80% of beta testers
> experienced segmentation faults even though it was 100% pure OCaml code.
[...]
> Presenta is obviously a counter-example for reliability. 100% OCaml code
> isn't supposed to be able to segfault...
[...]

"OCaml bytecode was not designed to be redistributable", so you used native code
 instead of bytecode?

Mem-eating code (e.g. non-tailrec stuff) gives Stack_overflow-exception for bytecode,
but Segfault for native code.

Maybe that was the reason?

Ciao,
   Oliver
