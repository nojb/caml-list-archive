Return-Path: <ontologiae@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 79F167EE80
	for <caml-list@sympa.inria.fr>; Fri, 15 Mar 2013 14:35:17 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  ontologiae@gmail.com) identity=pra; client-ip=209.85.215.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ontologiae@gmail.com";
  x-sender="ontologiae@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  ontologiae@gmail.com designates 209.85.215.173 as permitted
  sender) identity=mailfrom; client-ip=209.85.215.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ontologiae@gmail.com";
  x-sender="ontologiae@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ea0-f173.google.com) identity=helo;
  client-ip=209.85.215.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ontologiae@gmail.com";
  x-sender="postmaster@mail-ea0-f173.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: At8BAJkiQ1HRVdetiGdsb2JhbABDiDi7DYFPgWQIFg4BAQEKCRQUBCSCKgEBBAEjHQEbHgMBCwYFBAEGNwICIgERAQUBHAYBEgiHeQEDCQYMpCeLY0+Ce4R2ChknDVmIfAEFDI8FC4ItgRMDllqBH44BFimELjs
X-IPAS-Result: At8BAJkiQ1HRVdetiGdsb2JhbABDiDi7DYFPgWQIFg4BAQEKCRQUBCSCKgEBBAEjHQEbHgMBCwYFBAEGNwICIgERAQUBHAYBEgiHeQEDCQYMpCeLY0+Ce4R2ChknDVmIfAEFDI8FC4ItgRMDllqBH44BFimELjs
X-IronPort-AV: E=Sophos;i="4.84,850,1355094000"; 
   d="scan'208";a="6628903"
Received: from mail-ea0-f173.google.com ([209.85.215.173])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 15 Mar 2013 14:35:16 +0100
Received: by mail-ea0-f173.google.com with SMTP id h14so1580415eak.32
        for <caml-list@inria.fr>; Fri, 15 Mar 2013 06:35:16 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=x-received:mime-version:in-reply-to:references:from:date:message-id
         :subject:to:content-type;
        bh=n6dKUzn6owUDTY2HRwgzymhyO8le8R4/h7F8Edv913Y=;
        b=szAVQMvnsV/7q6gWNDzNozko6ftSHz5BWWgxcWOZmGHaZ4Yu3R0oKptAEJ4mwOeCQ0
         tFB1Y+cF7U17JfANdThoTkvV1LkhH+Sz+Bs0UabqPyHVESNHvOiuG/rIn6fD4dP3+3++
         yDfjAf+9i2tTPa+CoLaQCB2UZHB9Vg9QmODXdhE5Q+0NKT4vVb5V9XkH6Hz7LqMSXLuQ
         3TFZDncYGY+cGwvlrtMKts22Jq4QhfYeQY9gOb5haeX6lVVblImyGF8MlGIZh6f8HWEC
         m129ccsoPJ6s1NbW0b4TLy/5zEXmjHiZCtoHuL6aVhuWs+gYTvR5djQ1ZbxnyH7qKyr9
         Bi8Q==
X-Received: by 10.14.179.5 with SMTP id g5mr18277242eem.41.1363354515944; Fri,
 15 Mar 2013 06:35:15 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.223.61.194 with HTTP; Fri, 15 Mar 2013 06:34:55 -0700 (PDT)
In-Reply-To: <010801ce201f$afd6ad80$0f840880$@ffconsultancy.com>
References: <00ba01ce200c$d23f1910$76bd4b30$@ffconsultancy.com>
 <CABkc=AM91=+O-BOt_uUvW7T4YG2vJ_WU7-BtQQHnpL-yuVR34g@mail.gmail.com> <010801ce201f$afd6ad80$0f840880$@ffconsultancy.com>
From: Pierre-Alexandre Voye <ontologiae@gmail.com>
Date: Fri, 15 Mar 2013 14:34:55 +0100
Message-ID: <CANnJ5GeEmvJni+Kf06wXf14s4zZXhLug9JRSfAW8XazQc6dmLQ@mail.gmail.com>
To: Jon Harrop <jon@ffconsultancy.com>, caml-list <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=047d7b603fe6a05ef704d7f6b591
Subject: Re: [Caml-list] Case study in optimization: porting a compiler from
 OCaml to F#


--047d7b603fe6a05ef704d7f6b591
Content-Type: text/plain; charset=UTF-8

2013/3/13 Jon Harrop <jon@ffconsultancy.com>

>
>
> > I am thinking pre-forked processes communicating with pipes?
>
> That would work but it would be a lot of effort compared to
> Array.Parallel.map in F#.
>

So you could maybe use Parmap.map ?

Parmap.parmap ~ncores:4 funct (Parmap.L elem_list)




-- 
---------------------
https://twitter.com/#!/ontologiae/
http://linuxfr.org/users/montaigne

--047d7b603fe6a05ef704d7f6b591
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><br><div class=3D"gmail_extra"><br><br><div class=3D"gmail=
_quote">2013/3/13 Jon Harrop <span dir=3D"ltr">&lt;<a href=3D"mailto:jon@ff=
consultancy.com" target=3D"_blank">jon@ffconsultancy.com</a>&gt;</span><br>=
<blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-=
left:1px solid rgb(204,204,204);padding-left:1ex">


<br>
<div><br>
&gt; I am thinking pre-forked processes communicating with pipes?<br>
<br>
</div>That would work but it would be a lot of effort compared to<br>
Array.Parallel.map in F#.
<div></div></blockquote></div><br></div><div class=3D"gmail_extra">So you c=
ould maybe use Parmap.map ?<br><pre><span>Parmap</span><span>.</span><span>=
parmap</span> <span>~</span><span>ncores</span><span>:4</span> <span>funct<=
/span> <span>(</span><span>Parmap</span><span>.</span><span>L</span> elem_l=
ist<span>)</span></pre>


<br></div><div class=3D"gmail_extra"><br clear=3D"all"><br>-- <br>---------=
------------<br><a href=3D"https://twitter.com/#%21/ontologiae/" target=3D"=
_blank">https://twitter.com/#!/ontologiae/</a><br><a href=3D"http://linuxfr=
.org/users/montaigne" target=3D"_blank">http://linuxfr.org/users/montaigne<=
/a><br>



</div></div>

--047d7b603fe6a05ef704d7f6b591--
