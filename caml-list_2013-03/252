Return-Path: <sebastien-ocaml@chimrod.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 537957EE7A
	for <caml-list@sympa.inria.fr>; Wed, 27 Mar 2013 11:01:03 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  sebastien-ocaml@chimrod.com) identity=pra;
  client-ip=212.27.42.1;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="sebastien-ocaml@chimrod.com";
  x-sender="sebastien-ocaml@chimrod.com";
  x-conformance=sidf_compatible
Received-SPF: PermError (mail2-smtp-roc.national.inria.fr: cannot
  correctly interpret sender authenticity information from
  domain of sebastien-ocaml@chimrod.com) identity=mailfrom;
  client-ip=212.27.42.1;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="sebastien-ocaml@chimrod.com";
  x-sender="sebastien-ocaml@chimrod.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@smtp1-g21.free.fr) identity=helo;
  client-ip=212.27.42.1;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="sebastien-ocaml@chimrod.com";
  x-sender="postmaster@smtp1-g21.free.fr";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AtcBAJnCUlHUGyoBlGdsb2JhbABDgmZUAcBRgQIWDgEBAQEHDQkJFAMlgiABBTIBBTQKAhELEg8WDwkDAgECATcOEwgBAYgRA78AjxcWgyoDkyGEZYRgjhQ
X-IPAS-Result: AtcBAJnCUlHUGyoBlGdsb2JhbABDgmZUAcBRgQIWDgEBAQEHDQkJFAMlgiABBTIBBTQKAhELEg8WDwkDAgECATcOEwgBAYgRA78AjxcWgyoDkyGEZYRgjhQ
X-IronPort-AV: E=Sophos;i="4.84,917,1355094000"; 
   d="scan'208";a="9541323"
Received: from smtp1-g21.free.fr ([212.27.42.1])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 27 Mar 2013 11:01:02 +0100
Received: from goku.chimrod.com (unknown [IPv6:2a01:e35:8ac8:ee0:7271:bcff:feb1:adf4])
	by smtp1-g21.free.fr (Postfix) with ESMTP id 76FF194010F
	for <caml-list@inria.fr>; Wed, 27 Mar 2013 11:00:57 +0100 (CET)
Received: from goku.chimrod.com (localhost [127.0.0.1])
	by goku.chimrod.com (Postfix) with ESMTP id 328971F6A3
	for <caml-list@inria.fr>; Wed, 27 Mar 2013 11:00:55 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.3.2 (2011-06-06) on goku.chimrod.com
X-Spam-Level: 
Received: from [127.0.0.1] (localhost [127.0.0.1])
	(using TLSv1 with cipher ECDHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by goku.chimrod.com (Postfix) with ESMTPS
	for <caml-list@inria.fr>; Wed, 27 Mar 2013 11:00:55 +0100 (CET)
Message-ID: <5152C354.7060708@chimrod.com>
Date: Wed, 27 Mar 2013 11:00:52 +0100
From: =?ISO-8859-1?Q?S=E9bastien_Dailly?= <sebastien-ocaml@chimrod.com>
User-Agent: Mozilla/5.0 (Windows NT 6.1; rv:17.0) Gecko/20130307 Thunderbird/17.0.4
MIME-Version: 1.0
To: caml-list@inria.fr
References: <CAOOOohSzgcZxLOu9qUX1Box1eKyK-DEX7zrEM2GXzjs372jLpQ@mail.gmail.com>
In-Reply-To: <CAOOOohSzgcZxLOu9qUX1Box1eKyK-DEX7zrEM2GXzjs372jLpQ@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 8bit
Subject: Re: [Caml-list] Master-slave architecture behind an ocsigen server.

Le 26/03/2013 15:29, Philippe Veber a écrit :
> Dear all,
>
> I'm developping an ocsigen website doing some scientific calculations.
> Up to now, the calculations were done in the same process that runs the
> server. In order to gain in scalability (and maybe stability too), I
> would like to run those calculations in a separate (pool of)
> process(es). As this is a pretty typical setup, I guess quite a few
> people have already done that. So I'd like to hear some suggestions on
> what library to use in this particular context. It seems to me that the
> release library [1] should do the job and is lwt-friendly, but there are
> maybe other good options?
>

This make me think of the python celery project[1]. It rely on rabbitMQ 
for storing the task to execute and ensure persistance. The project just 
handle the message and give them to the registered worker.

I found ocamlmq[2] wich could match, but didn't test it.

[1] http://celeryproject.org/
[2] https://github.com/mfp/ocamlmq

-- 
Sébastien Dailly
