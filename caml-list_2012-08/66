Return-Path: <jesper.louis.andersen@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by sympa.inria.fr (Postfix) with ESMTPS id 1FC7A7ED5C
	for <caml-list@sympa.inria.fr>; Wed,  8 Aug 2012 20:23:25 +0200 (CEST)
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  jesper.louis.andersen@gmail.com) identity=pra;
  client-ip=209.85.214.182;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="jesper.louis.andersen@gmail.com";
  x-sender="jesper.louis.andersen@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail4-smtp-sop.national.inria.fr: domain of
  jesper.louis.andersen@gmail.com designates 209.85.214.182 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.214.182;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="jesper.louis.andersen@gmail.com";
  x-sender="jesper.louis.andersen@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ob0-f182.google.com) identity=helo;
  client-ip=209.85.214.182;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="jesper.louis.andersen@gmail.com";
  x-sender="postmaster@mail-ob0-f182.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhgCAOmtIlDRVda2kGdsb2JhbABFhgGzVQgiAQEBAQkJDQcUBCOCIAEBAQMBEgIPHQEbHQEDAQsGBQsPAiYCAiIBEQEFARwGEwgah1sBAwYGnFAJA4tUT4JxhU0KGScNV4hxAQUMgRWJcYVOgRIDlUmOMj6EAA
X-IronPort-AV: E=Sophos;i="4.77,734,1336341600"; 
   d="scan'208";a="152709101"
Received: from mail-ob0-f182.google.com ([209.85.214.182])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 08 Aug 2012 20:23:24 +0200
Received: by obbun3 with SMTP id un3so2846830obb.27
        for <caml-list@inria.fr>; Wed, 08 Aug 2012 11:23:22 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=mdfqTspogc1XQbh4l7wHotM4MwMU8v9pYtNQwg1I2gs=;
        b=c2AS5H00JeBSbW5Pzt3TUXvadx6saaGdlmrT3C4iCg0OcgHQjqQRFfOOxJMn8jNAjF
         dVEuCLbM9xp+CyWs62WSMfsKoisTpX3Xjq9C+lTXcBXgRL6L2l1Z6yffDsPm9kH+sKW7
         iU5iIGyTYFzssL6deRWVCGUc31Wa8johTNlG2zpy22si2LeVeAwzkIA2ZTlHPDJ5Ny0O
         pYEEvlGpvjqcUcDCi8LEx0Ybb5FZ4ac7p/bGpYSPuCbPzJuzyyIS/9/6wQxcUtO+ULfS
         XPOkVEL0aDM9j59NN18lAfZrAageqawjUIrXK90vGuzrYlWxI2cN/ZDIaiQdepNW2Pji
         2vjQ==
Received: by 10.182.177.7 with SMTP id cm7mr1869184obc.17.1344450202861; Wed,
 08 Aug 2012 11:23:22 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.182.231.33 with HTTP; Wed, 8 Aug 2012 11:22:52 -0700 (PDT)
In-Reply-To: <5022A9FE.4050006@frisch.fr>
References: <CAMT7qiTJD4hFd4Jr0tKCzhmR=ngN0yV9Pw6CCgEfRPP6a6DYvg@mail.gmail.com>
 <501F9855.6080709@frisch.fr> <CAMT7qiTCnxbAwbPSiXxxm3EBFVyTad98YqxxxveoPkhepKbCkA@mail.gmail.com>
 <501F9DB9.2050805@frisch.fr> <CAMT7qiR=7LS3211gkA2HOVwB+BQj81cs1efjy3eBESgqW03s5g@mail.gmail.com>
 <501FAB4A.107@frisch.fr> <CAMT7qiTNb651mvo3+iOX5fvGbWXv5yotMUBM2bvXkEURB=--bg@mail.gmail.com>
 <5022A9FE.4050006@frisch.fr>
From: Jesper Louis Andersen <jesper.louis.andersen@gmail.com>
Date: Wed, 8 Aug 2012 20:22:52 +0200
Message-ID: <CAGrdgiUeyVXoG=jQN6EYUREXkdPG1PgyWw_U4t3veMSXzmXxQw@mail.gmail.com>
To: Alain Frisch <alain@frisch.fr>
Cc: Dmitry Bely <dmitry.bely@gmail.com>, caml-list@inria.fr
Content-Type: text/plain; charset=UTF-8
Subject: Re: [Caml-list] Compiler bug?

On Wed, Aug 8, 2012 at 8:03 PM, Alain Frisch <alain@frisch.fr> wrote:

> I'm not sure, someone else would have to reply!  I guess that these
> registers are supposed to be preserved by the callee in the x64 ABI (and
> obviously, they don't hold pointers to OCaml values, so they don't have to
> be tracked by the GC).

Also, the GC itself will not be using Floating Point code at all, so
we can save a lot by not saving/restoring these values on the stack.
It is akin to what the Linux kernel does: trap on the first FP
instruction and only then do work to save/restore the FP context - but
here we know a priori we never will access FP. By doing so we can cut
the time to the GC call down - and reap the benefits by having a
faster GC cycle.

-- 
J.
