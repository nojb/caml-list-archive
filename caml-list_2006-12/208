Return-Path: <perrin@apotheon.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 0C3E9BC0A
	for <caml-list@yquem.inria.fr>; Thu, 21 Dec 2006 23:19:46 +0100 (CET)
Received: from host15.ipowerweb.com (host15.ipowerweb.com [66.235.219.115])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id kBLMJi6r014568
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@yquem.inria.fr>; Thu, 21 Dec 2006 23:19:45 +0100
Received: from c-24-9-123-251.hsd1.co.comcast.net ([24.9.123.251] helo=apotheon.com)
	by host15.ipowerweb.com with esmtp (Exim 4.52)
	id 1GxWGK-0003Go-GG; Thu, 21 Dec 2006 14:19:40 -0800
Received: by apotheon.com (Postfix, from userid 1000)
	id 0EFDA333CC; Thu, 21 Dec 2006 15:19:21 -0700 (MST)
Date: Thu, 21 Dec 2006 15:19:21 -0700
From: Chad Perrin <perrin@apotheon.com>
To: Serge Aleynikov <serge@hq.idt.net>
Cc: Chad Perrin <perrin@apotheon.com>, caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Scripting in ocaml
Message-ID: <20061221221921.GM9440@apotheon.com>
References: <6dbd4d000612201941wcd4b09anc503a13889576512@mail.gmail.com> <20061221153413.8f99e8ed.mle+ocaml@mega-nerd.com> <1166685756.5337.4.camel@rosella.wigram> <458A8C7B.7050204@hq.idt.net> <1166709162.5653.11.camel@rosella.wigram> <458AA143.3090303@hq.idt.net> <20061221202520.GG9440@apotheon.com> <458AF864.20902@hq.idt.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <458AF864.20902@hq.idt.net>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Antivirus-Scanner: Clean mail though you should still use an Antivirus
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - host15.ipowerweb.com
X-AntiAbuse: Original Domain - yquem.inria.fr
X-AntiAbuse: Originator/Caller UID/GID - [47 12] / [47 12]
X-AntiAbuse: Sender Address Domain - apotheon.com
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Miltered: at concorde with ID 458B0880.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 run-time:01 ocaml:01 statically:01 runtime:01 compile-time:01 runtime:01 wrote:01 wrote:01 typing:01 typing:01 caml-list:01 unsafe:01 checking:02 checking:02 

On Thu, Dec 21, 2006 at 04:11:00PM -0500, Serge Aleynikov wrote:
> Chad Perrin wrote:
> > On Thu, Dec 21, 2006 at 09:59:15AM -0500, Serge Aleynikov wrote:
> >> I believe that introducing strict typing in the language might help in
> >> bridging static typing and dynamic loading.  Strict typing would allow
> >> to do run-time type verification and type-specific guard checks.
> >> Though, this would no longer be Ocaml as we know it today.  ;-)
> >
> > I think you lost me.  What do you mean by "strict typing" such that
> > OCaml doesn't do it?  From what I've seen, OCaml is both statically and
> > strongly typed.
> >
> 
> What I meant by "strict typing" was performing type checks *at runtime*, 
> i.e. that there are no unsafe operations.

So, basically, by "strict typing" you mean something like both
compile-time and runtime type checking?  If it was *only* runtime type
checking, you'd just be using a dynamic type system (the opposite of
static typing, basically).

-- 
CCD CopyWrite Chad Perrin [ http://ccd.apotheon.org ]
"The first rule of magic is simple. Don't waste your time waving your
hands and hopping when a rock or a club will do." - McCloctnick the Lucid

