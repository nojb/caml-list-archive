Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 11F02BC0A
	for <caml-list@yquem.inria.fr>; Sun, 24 Dec 2006 04:30:09 +0100 (CET)
Received: from ipmail02.adl2.internode.on.net (ipmail02.adl2.internode.on.net [203.16.214.141])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id kBO3U6cW014976
	for <caml-list@yquem.inria.fr>; Sun, 24 Dec 2006 04:30:08 +0100
Received: from ppp14-213.lns2.syd7.internode.on.net (HELO rosella) ([59.167.14.213])
  by ipmail02.adl2.internode.on.net with ESMTP; 24 Dec 2006 14:00:06 +1030
X-IronPort-AV: i="4.12,208,1165152600"; 
   d="scan'208"; a="64171520:sNHT23707971"
Subject: Re: [Caml-list] Scripting in ocaml
From: skaller <skaller@users.sourceforge.net>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <200612231850.04578.jon@ffconsultancy.com>
References: <6dbd4d000612201941wcd4b09anc503a13889576512@mail.gmail.com>
	 <1166709162.5653.11.camel@rosella.wigram> <458AA143.3090303@hq.idt.net>
	 <200612231850.04578.jon@ffconsultancy.com>
Content-Type: text/plain
Date: Sun, 24 Dec 2006 14:30:04 +1100
Message-Id: <1166931004.25424.35.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 458DF43E.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 run-time:01 run-time:01 sourceforge:01 wrote:01 caml-list:01 static:03 static:03 guess:04 interpreter:07 definition:07 blocks:07 mean:08 invariant:08 stuff:08 

On Sat, 2006-12-23 at 18:50 +0000, Jon Harrop wrote:

> What do you mean by "run-time static analysis"? Surely if something is 
> analysed at run-time then it cannot be static by definition?

Run time control flow analysis analysing invariant code blocks,
so you could say it is 'run time static analysis' because
it is done at run time, but analysing stuff which is 'static' :)

A JIT interpreter might do such stuff.

I guess this what was intended?

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

