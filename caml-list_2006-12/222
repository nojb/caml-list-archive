Return-Path: <tom.primozic@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.4 required=5.0 tests=AWL,HTML_MESSAGE,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id EF0C6BC0A
	for <caml-list@yquem.inria.fr>; Fri, 22 Dec 2006 17:51:37 +0100 (CET)
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.171])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id kBMGpbgT025911
	for <caml-list@yquem.inria.fr>; Fri, 22 Dec 2006 17:51:37 +0100
Received: by ug-out-1314.google.com with SMTP id q2so3460639uge
        for <caml-list@yquem.inria.fr>; Fri, 22 Dec 2006 08:51:37 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=WvnVCMj2F0fFr0jyZCYeDGEY4kLwoNfwEIQTF3d7TL/dHcs/xjKc193709+4VwBKDe68NmRqR8qgyw1fjVEMIJP3kNDvZsxx0weF76/IqCUvRKKryxgHLqjEMaal+bfpedLNL4Dzz7ARFTFRY07a12/CoriLTwlDhsx9s2IwEEM=
Received: by 10.82.153.5 with SMTP id a5mr2157114bue.1166806297090;
        Fri, 22 Dec 2006 08:51:37 -0800 (PST)
Received: by 10.82.100.16 with HTTP; Fri, 22 Dec 2006 08:51:36 -0800 (PST)
Message-ID: <c1490a380612220851h1e9fe047q3978b70c3a9b01bd@mail.gmail.com>
Date: Fri, 22 Dec 2006 17:51:36 +0100
From: Tom <tom.primozic@gmail.com>
To: "=?UTF-8?Q?Daniel_B=C3=BCnzli?=" <daniel.buenzli@epfl.ch>
Subject: Re: strong/weak typing terminology (was Re: [Caml-list] Scripting in ocaml)
Cc: "Chad Perrin" <perrin@apotheon.com>,
	"Jon Harrop" <jon@ffconsultancy.com>, caml-list@yquem.inria.fr
In-Reply-To: <3EC73FC3-41A6-4FB1-9549-29286A6568CC@epfl.ch>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_69619_26825357.1166806296907"
References: <6dbd4d000612201941wcd4b09anc503a13889576512@mail.gmail.com>
	 <20061221153413.8f99e8ed.mle+ocaml@mega-nerd.com>
	 <1166685756.5337.4.camel@rosella.wigram> <458A8C7B.7050204@hq.idt.net>
	 <1166709162.5653.11.camel@rosella.wigram>
	 <458AA143.3090303@hq.idt.net> <20061221202520.GG9440@apotheon.com>
	 <DCBCB457-1A02-4AE6-8712-4A7D41FD1E3D@epfl.ch>
	 <20061221221650.GL9440@apotheon.com>
	 <3EC73FC3-41A6-4FB1-9549-29286A6568CC@epfl.ch>
X-j-chkmail-Score: MSGID : 458C0D19.002 on discorde : j-chkmail score : X : 0/20 1 0.000 -> 1
X-Miltered: at discorde with ID 458C0D19.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 statically:01 haskell:01 compiler:01 runtime:01 semantics:01 statically:01 haskell:01 compiler:01 runtime:01 semantics:01 javascript:98 W8:98 W6:98 W12:98 
X-Attachments: cset="UTF-8" cset="UTF-8" 

------=_Part_69619_26825357.1166806296907
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

>
>
> Later he gives the following chart
>
>         |Statically checked       | Dynamically checked
> -------------------------------------------------
> safe   | ML, Haskell, Java, etc. | Lisp, Scheme, Perl, Postscript, etc
> unsafe | C, C++, etc.            |
>
>
But this chart is not expressive enough... I believe that the properties
implied by "weak/strong" refer to the ability (or the disability) of the
compiler/runtime (or rather semantics of the language) to change types at
will (actually, whenever this seems useful, in cases such as "string" + 7 or
"9" - "3").

This category would include C and C++ (implicit conversions of numbers) and
certainly dynamically checked languages such as php, javascript, (probably
also) Ruby, Python, ...

I believe that these languages need to be distinguished.

- Tom

------=_Part_69619_26825357.1166806296907
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

<div><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;"><br>Later he gives the following chart<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|Statically checked&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; | Dynamically checked
<br>-------------------------------------------------<br>safe&nbsp;&nbsp; | ML, Haskell, Java, etc. | Lisp, Scheme, Perl, Postscript, etc<br>unsafe | C, C++, etc.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|<br><br></blockquote></div><br>But this chart is not expressive enough... I believe that the properties implied by &quot;weak/strong&quot; refer to the ability (or the disability) of the compiler/runtime (or rather semantics of the language) to change types at will (actually, whenever this seems useful, in cases such as &quot;string&quot; + 7 or &quot;9&quot; - &quot;3&quot;). 
<br><br>This category would include C and C++ (implicit conversions of numbers) and certainly dynamically checked languages such as php, javascript, (probably also) Ruby, Python, ...<br><br>I believe that these languages need to be distinguished. 
<br><br>- Tom<br>

------=_Part_69619_26825357.1166806296907--

