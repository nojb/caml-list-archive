Return-Path: <perrin@apotheon.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 96626BC0A
	for <caml-list@yquem.inria.fr>; Fri, 22 Dec 2006 19:53:01 +0100 (CET)
Received: from host15.ipowerweb.com (host15.ipowerweb.com [66.235.219.115])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id kBMIqxpH027327
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@yquem.inria.fr>; Fri, 22 Dec 2006 19:53:01 +0100
Received: from c-24-9-123-251.hsd1.co.comcast.net ([24.9.123.251] helo=apotheon.com)
	by host15.ipowerweb.com with esmtp (Exim 4.52)
	id 1GxpVn-0001Rr-RR
	for caml-list@yquem.inria.fr; Fri, 22 Dec 2006 10:52:56 -0800
Received: by apotheon.com (Postfix, from userid 1000)
	id 1D8D9333CC; Fri, 22 Dec 2006 11:52:36 -0700 (MST)
Date: Fri, 22 Dec 2006 11:52:36 -0700
From: Chad Perrin <perrin@apotheon.com>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Scripting in ocaml
Message-ID: <20061222185236.GA23003@apotheon.com>
References: <6dbd4d000612201941wcd4b09anc503a13889576512@mail.gmail.com> <458AF864.20902@hq.idt.net> <20061221221921.GM9440@apotheon.com> <200612221237.32390.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200612221237.32390.jon@ffconsultancy.com>
User-Agent: Mutt/1.5.13 (2006-08-11)
X-Antivirus-Scanner: Clean mail though you should still use an Antivirus
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - host15.ipowerweb.com
X-AntiAbuse: Original Domain - yquem.inria.fr
X-AntiAbuse: Originator/Caller UID/GID - [47 12] / [47 12]
X-AntiAbuse: Sender Address Domain - apotheon.com
X-Source: 
X-Source-Args: 
X-Source-Dir: 
X-Miltered: at discorde with ID 458C298B.003 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 compile-time:01 runtime:01 runtime:01 inference:01 run-time:01 compilers:01 wrote:01 wrote:01 dynamically:01 typing:01 typing:01 caml-list:01 lisp:01 lisp:01 

On Fri, Dec 22, 2006 at 12:37:32PM +0000, Jon Harrop wrote:
> On Thursday 21 December 2006 22:19, Chad Perrin wrote:
> > So, basically, by "strict typing" you mean something like both
> > compile-time and runtime type checking?  If it was *only* runtime type
> > checking, you'd just be using a dynamic type system (the opposite of
> > static typing, basically).
> 
> As many Lisp compilers try to do type inference and check types at run-time 
> (giving warnings), Lisp is not dynamically typed according to your argument. 
> Moreover, this is a property of the implementation and not of the language.

By that argument, you might as well say that all type system
characteristics are properties of the implementation, and not the
language.  Ultimately, anything you do in designing a language must be
reflected in the implementation.

That doesn't mean it's "just an implementation detail", though.

-- 
CCD CopyWrite Chad Perrin [ http://ccd.apotheon.org ]
"The first rule of magic is simple. Don't waste your time waving your
hands and hopping when a rock or a club will do." - McCloctnick the Lucid

