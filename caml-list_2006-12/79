Return-Path: <av1474@comtv.ru>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 9CB7FBC0A
	for <caml-list@yquem.inria.fr>; Sun, 10 Dec 2006 07:35:33 +0100 (CET)
Received: from comtv.ru (comtv.ru [217.10.32.17])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id kBA6ZWe0031139
	for <caml-list@inria.fr>; Sun, 10 Dec 2006 07:35:33 +0100
X-UCL: actv
Received: from av1474.oops ([10.0.66.9] verified)
  by comtv.ru (CommuniGate Pro SMTP 4.1.8)
  with ESMTP id 10238891; Sun, 10 Dec 2006 09:35:46 +0300
Date: Sun, 10 Dec 2006 09:36:06 +0300 (MSK)
From: malc <av1474@comtv.ru>
X-X-Sender: malc@home.oyster.ru
To: Brian Hurt <bhurt@spnz.org>
Cc: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Today's inflamatory opinion: exceptions are bad
In-Reply-To: <Pine.LNX.4.64.0612100925060.545@home.oyster.ru>
Message-ID: <Pine.LNX.4.64.0612100933550.545@home.oyster.ru>
References: <Pine.LNX.4.64.0612091823020.24657@barrayar.nyct.net>
 <Pine.LNX.4.64.0612100925060.545@home.oyster.ru>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed
X-Miltered: at concorde with ID 457BAAB5.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; malc:01 malc:01 ocaml:01 option':01 new':98 vale:98 wrote:01 wrote:01 caml-list:01 exceptions:01 exceptions:01 caml:02 snip:02 types:03 generally:03 

On Sun, 10 Dec 2006, malc wrote:

> On Sat, 9 Dec 2006, Brian Hurt wrote:
>
>> 
>> I think I've come to the conclusion that exceptions are bad.
>> 
>> In Ocaml, they're useless in many cases, and in most cases wrong. Avoiding 
>> them generally makes for better code.  There are two vague types of 
>> exceptions- those the program can, and probably should- handle, and those 
>> that the program can't, and probably should even try to, handle.
>>

[..snip..]

And also there is `new' and, to the best of my knowlege, it's not
possible to return a `class option' should one want to dwelve into
O of Caml.

--
vale

