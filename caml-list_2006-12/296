Return-Path: <mle+ocaml@mega-nerd.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id CD4F9BC0A
	for <caml-list@yquem.inria.fr>; Sun, 31 Dec 2006 23:54:48 +0100 (CET)
Received: from smtp.syd.people.net.au (smtp.syd.people.net.au [218.214.225.98])
	by discorde.inria.fr (8.13.6/8.13.6) with SMTP id kBVMskHR013366
	for <caml-list@yquem.inria.fr>; Sun, 31 Dec 2006 23:54:47 +0100
Received: (qmail 30536 invoked from network); 31 Dec 2006 22:54:49 -0000
Received: from unknown (HELO coltrane.mega-nerd.net) (218.214.64.136)
  by smtp.syd.people.net.au with SMTP; 31 Dec 2006 22:54:49 -0000
Received: from coltrane (coltrane [192.168.1.101])
	by coltrane.mega-nerd.net (Postfix) with SMTP id A7D967B6B
	for <caml-list@yquem.inria.fr>; Mon,  1 Jan 2007 09:54:43 +1100 (EST)
Date: Mon, 1 Jan 2007 09:54:43 +1100
From: Erik de Castro Lopo <mle+ocaml@mega-nerd.com>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] ANNOUNCE : libsndfile-ocaml alpha
Message-Id: <20070101095443.4ac5275f.mle+ocaml@mega-nerd.com>
In-Reply-To: <1167591914.5340.1.camel@rosella.wigram>
References: <20061222155407.ebe6c272.mle+ocaml@mega-nerd.com>
	<45923DC2.9000504@ujf-grenoble.fr>
	<20061227211046.656615d0.mle+ocaml@mega-nerd.com>
	<20061231080756.66e89d6c.mle+ocaml@mega-nerd.com>
	<1167535885.27287.66.camel@rosella.wigram>
	<20061231152305.694fd3e9.mle+ocaml@mega-nerd.com>
	<1167591914.5340.1.camel@rosella.wigram>
Organization: Erik Conspiracy Secret Labs
X-Mailer: Sylpheed version 2.3.0beta5 (GTK+ 2.8.20; i486-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 45983FB6.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 ocaml's:01 1.0:98 1.0:98 neck:98 wrote:01 caml-list:01 ints:01 data:02 floats:02 floats:02 python:02 algorithms:03 depends:04 

skaller wrote:

> > Since it is already possible to read Ocaml floats (which are normalised
> > to the range [-1.0, 1.0]) why would anyone want to ready any other data
> > type?
> 
> Performance or space issues?

It depends on what is being done. For any signal processing algorithms,
anything other than floats normalised to [-1.0, 1.0] is a huge pain in
the neck. Any performance increases that might be acheived using ints
would be sqandered by the extra processing required to deal with scaling
issues and Ocaml's 31 bit floats.

Erik
-- 
+-----------------------------------------------------------+
  Erik de Castro Lopo
+-----------------------------------------------------------+
Saying Python is easier than C++ is like saying that turning a 
light  switch on or off is easier than operating a nuclear reactor.

