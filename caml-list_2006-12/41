Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 325C0BC0B
	for <caml-list@yquem.inria.fr>; Thu,  7 Dec 2006 13:17:17 +0100 (CET)
Received: from pih-relay06.plus.net (pih-relay06.plus.net [212.159.14.133])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id kB7CHEIt025115
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Thu, 7 Dec 2006 13:17:15 +0100
Received: from [80.229.56.224] (helo=[10.0.0.5])
	 by pih-relay06.plus.net with esmtp (Exim) id 1GsIBd-000494-Q1
	for caml-list@yquem.inria.fr; Thu, 07 Dec 2006 12:17:14 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] time profiling and nested function inlining
Date: Thu, 7 Dec 2006 12:14:29 +0000
User-Agent: KMail/1.9.5
References: <4C40AFBA-AE30-4C22-B2A5-170FDA130B64@lrde.epita.fr> <613020E3-8A60-4FA9-975E-F2AD5E0E28DB@epfl.ch> <8E63D477-08E0-485C-A250-6E90A699A253@lrde.epita.fr>
In-Reply-To: <8E63D477-08E0-485C-A250-6E90A699A253@lrde.epita.fr>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Message-Id: <200612071214.29263.jon@ffconsultancy.com>
X-Miltered: at discorde with ID 4578064B.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; inlining:01 compiler:01 ocamlopt:01 ocamlopt:01 ocaml:01 frog:98 wrote:01 caml-list:01 caml:02 compiling:02 objective:02 -ccopt:03 -ccopt:03 nested:04 profiling:04 

On Thursday 07 December 2006 10:43, Qu=F4c Peyrot wrote:
> in the former,  the compiler doesn't detect the invariant "array.(i)"
> and keeps it inside the inner loop.
> I tried to pass -ccopt -O3 to ocamlopt but it didn't seem to change
> anything.

Ocamlopt doesn't do that optimisation and -ccopt won't have any effect unle=
ss=20
you're compiling C code.

=2D-=20
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

