Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA22247 for caml-red; Mon, 19 Jun 2000 16:45:41 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA18066 for <caml-list@pauillac.inria.fr>; Mon, 19 Jun 2000 16:31:49 +0200 (MET DST)
Received: from nef.ens.fr (nef.ens.fr [129.199.96.32])
	by nez-perce.inria.fr (8.10.0/8.10.0) with ESMTP id e5JEVmf09988
	for <caml-list@inria.fr>; Mon, 19 Jun 2000 16:31:48 +0200 (MET DST)
Received: from basilic.ens.fr (basilic.ens.fr [129.199.99.48])
          by nef.ens.fr (8.10.1/1.01.28121999) with ESMTP id e5JEVmo14243
          for <caml-list@inria.fr>; Mon, 19 Jun 2000 16:31:48 +0200 (CEST)
Received: from localhost by basilic.ens.fr (8.9.2/jb-1.1)
	id QAA02388 for <caml-list@inria.fr>; Mon, 19 Jun 2000 16:31:47 +0200 (MET DST)
X-Authentication-Warning: basilic.ens.fr: monniaux owned process doing -bs
Date: Mon, 19 Jun 2000 16:31:47 +0200 (MET DST)
From: David Monniaux <David.Monniaux@ens.fr>
X-Sender: monniaux@basilic.ens.fr
To: Liste CAML <caml-list@inria.fr>
Subject: Pervasives.compare: slow?
Message-ID: <Pine.GSO.4.03.10006191610270.1655-100000@basilic.ens.fr>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=ISO-8859-1
Content-Transfer-Encoding: 8BIT
Sender: weis@pauillac.inria.fr

I used Pervasives.compare as a comparison function between hash values
(16-byte strings). Pervasives.compare is a polymorphic hack that works by
induction on the type information left for the garbage collector; even if
you specify Pervasives.compare : string -> string -> int, it still invokes
the polymorphic function.

There is apparently a 20-25% performance penalty using this form instead
of a simple comparison procedure for 16-byte strings. I suspect the
performance hit is even higher for more complex data structures.

Would it be possible to have ad hoc generated comparison functions? That
sounds like it needs including polytypic features into the language, which
is some very big stuff.

Perhaps including a String.compare function would be easier.

Regards,

David Monniaux            http://www.di.ens.fr/~monniaux
Laboratoire d'informatique de l'École Normale Supérieure,
Paris, France



