Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA29781 for caml-red; Fri, 23 Jun 2000 16:16:26 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA14378 for <caml-list@pauillac.inria.fr>; Thu, 22 Jun 2000 22:46:40 +0200 (MET DST)
Received: from jaune.inria.fr (jaune.inria.fr [128.93.11.80])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e5MKkcP28666;
	Thu, 22 Jun 2000 22:46:38 +0200 (MET DST)
Received: (from ddr@localhost)
	by jaune.inria.fr (8.8.7/8.8.7) id WAA32610;
	Thu, 22 Jun 2000 22:46:38 +0200
Date: Thu, 22 Jun 2000 22:46:38 +0200
From: Daniel de Rauglaudre <daniel.de_rauglaudre@inria.fr>
To: =?iso-8859-1?Q?David_Mentr=E9?= <David.Mentre@irisa.fr>
Cc: caml-list@inria.fr
Subject: Re: How to cleanly encode "quasi-constants"?
Message-ID: <20000622224638.E28348@jaune.inria.fr>
References: <wd8g0q8xs0o.fsf@parate.irisa.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <wd8g0q8xs0o.fsf@parate.irisa.fr>; from David.Mentre@irisa.fr on Tue, Jun 20, 2000 at 05:59:35PM +0200
Sender: weis@pauillac.inria.fr

> Right now, I'm using constants (let var = ...) or mutable references
> (let var := ...) to encode such things.
> 
> However I'm not satisfied. With constants, I obviously can only modify
> them at compile time. With mutables, I can modify them but potentially
> at any time, meaning potential bugs.

I am not sure I understand your point, but the construction "let var =
..." does not define *compile time* constants: the expression "..." is
computed at *run time*. It can be any computation.

Typically, a program using the Xlib would start with:
    let dpy = xOpenDisplay "" in ...

The computation of xOpenDisplay "" is a very complicated computation of the
Xlib, creating a connection to the X server. But the variable "dpy" is not
mutable and then is never modified nor modifiable in the rest of the program.

-- 
Daniel de RAUGLAUDRE
daniel.de_rauglaudre@inria.fr
http://cristal.inria.fr/~ddr/


