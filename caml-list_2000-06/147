Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA03821 for caml-red; Fri, 30 Jun 2000 17:31:27 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA31890 for <caml-list@pauillac.inria.fr>; Fri, 30 Jun 2000 02:41:23 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.10.0/8.10.0) with ESMTP id e5U0fGH05564
	for <caml-list@inria.fr>; Fri, 30 Jun 2000 02:41:17 +0200 (MET DST)
Received: from localhost (sansho.kurims.kyoto-u.ac.jp [130.54.16.90])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3/3.7W) with ESMTP id JAA12209;
	Fri, 30 Jun 2000 09:41:08 +0900 (JST)
To: pfitzen@informatik.uni-tuebingen.de
Cc: caml-list@inria.fr
In-Reply-To: Your message of "Wed, 28 Jun 2000 19:16:45 +0200 (MET DST)"
	<200006281716.TAA02282@sunstroke.informatik.uni-tuebingen.de>
References: <200006281716.TAA02282@sunstroke.informatik.uni-tuebingen.de>
X-Mailer: Mew version 1.93 on Emacs 20.5 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20000630094051Z.garrigue@kurims.kyoto-u.ac.jp>
Date: Fri, 30 Jun 2000 09:40:51 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 980905(IM100)
Lines: 25
Sender: weis@pauillac.inria.fr

From: Juergen Pfitzenmaier <pfitzen@informatik.uni-tuebingen.de>

> when defining a lot of variants the following message seems to restrictive:
>    Too many constructors -- maximum is 248 constructors
> 
> What is the reason for this ? Can this limit be pushed higher ?

This is a hard-coded limit, so there is no magical compiler option to
raise it. There can be no more than 248 nonconstant constructors in a
variant type.

However, if your constructors are constant (they have no parameter),
then this is a now corrected bug. See PR#117 in the caml bug tracking
system.
With the corrected version of the compiler, you may use 2^31 constant
constructors independently of the 248 nonconstant ones.

As a temporary workaround you may use polymorphic variants: it should
be possible to use tens of thousands of both constant and nonconstant
constructors in the same type.

Jacques
---------------------------------------------------------------------------
Jacques Garrigue      Kyoto University     garrigue at kurims.kyoto-u.ac.jp
		<A HREF=http://wwwfun.kurims.kyoto-u.ac.jp/~garrigue/>JG</A>


