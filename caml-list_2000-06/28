Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA26457 for caml-red; Thu, 8 Jun 2000 22:27:46 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA05079 for <caml-list@pauillac.inria.fr>; Thu, 8 Jun 2000 00:16:03 +0200 (MET DST)
Received: from emissary.ot.com.au (emissary.ot.com.au [203.42.249.64])
	by nez-perce.inria.fr (8.10.0/8.10.0) with SMTP id e57MG0L29388
	for <caml-list@inria.fr>; Thu, 8 Jun 2000 00:16:01 +0200 (MET DST)
Received: (qmail 21439 invoked from network); 7 Jun 2000 22:15:58 -0000
Received: from unknown (HELO druid.in.ot.com.au) (10.70.80.5)
  by 10.70.15.1 with SMTP; 7 Jun 2000 22:15:58 -0000
Received: (qmail 6725 invoked from network); 7 Jun 2000 22:15:58 -0000
Received: from unknown (HELO in.ot.com.au) (10.70.82.63)
  by druid.in.ot.com.au with SMTP; 7 Jun 2000 22:15:58 -0000
Message-ID: <393EC99D.AC69267@in.ot.com.au>
Date: Thu, 08 Jun 2000 08:15:57 +1000
From: Max Skaller <maxs@in.ot.com.au>
X-Mailer: Mozilla 4.61 [en] (X11; I; Linux 2.2.12-20 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: Daniel Ortmann <ortmann@vnet.ibm.com>
CC: caml-list@inria.fr
Subject: Re: Reverse-Engineering Bytecode: A Possible Commercial Objection To 
	O'Caml
References: <200006062047.QAA08876@northrelay03.pok.ibm.com>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis

Daniel Ortmann wrote:

> ... it occurs to me that companies may be concerned about the ease of "reverse
> engineering" their byte compiled software modules and thus object to Objective
> Caml.

I actually don't think this is a problem, although I'm not sure.
If it were, the solution would be to embed the runtime and bytecodes
inside an executable, and encrypt the bytecode. In that case,
being able to run the bytecodes _from a memory image_ rather than a disk
file would be the only real requirement. Configuring licence servers
etc should be left to the producer of the product.

Because the whole of the ocaml system is open, 
all of this is already possible. If there is a problem here,
it is the lack of availability of consultancy from ocaml experts 
to assist in the embedding task.

-- 
John (Max) Skaller at OTT [Open Telecommications Ltd]
mailto:maxs@in.ot.com.au      -- at work
mailto:skaller@maxtal.com.au  -- at home



