Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA05535 for caml-redist; Fri, 21 Apr 2000 19:26:56 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA01652 for <caml-list@pauillac.inria.fr>; Fri, 21 Apr 2000 02:42:19 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id CAA05106
	for <caml-list@inria.fr>; Fri, 21 Apr 2000 02:42:17 +0200 (MET DST)
Received: from localhost (sansho.kurims.kyoto-u.ac.jp [130.54.16.90])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3/3.7W) with ESMTP id JAA01031;
	Fri, 21 Apr 2000 09:41:21 +0900 (JST)
To: maxs@in.ot.com.au, vsl@ontil.ihep.su
Cc: caml-list@inria.fr
Subject: Re: When functional languages can be accepted by industry?
In-Reply-To: Your message of "Thu, 20 Apr 2000 11:44:07 +1000"
	<38FE60E7.5D117555@in.ot.com.au>
References: <38FE60E7.5D117555@in.ot.com.au>
X-Mailer: Mew version 1.93 on Emacs 20.5 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20000421094121P.garrigue@kurims.kyoto-u.ac.jp>
Date: Fri, 21 Apr 2000 09:41:21 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 980905(IM100)
Lines: 59
Sender: weis

> Vitaly Lugovsky wrote:
> >
> > P.S. Maybe, all that we need, is a RAD tool for ocaml? It can
> > look like a better module finder ("module name" -> "file name" is not
> > a good idea. Paths in Java is much better), and a lot of reusable
> > modules for common tasks (database, GUI)...

There are two different problems with RADs

* making one requires lots of work, and is not necessarily very
  rewarding for the author, who himself can probably work
  without. That's the reason you don't find many RADs in the open
  source community.
  You can find an embryo of such a thing in lablgtk for instance, but
  I have no idea whether it will become really a full fledge RAD some
  day.

* it is not so clear how useful it would be for a language like ocaml.
  Code in ocaml is much more compact than in C++ or JAVA, so that code
  generation is not so useful in itself. I agree that this might be
  nice for beginners, but if it is nice for beginners only, then it's
  even harder to find the workforce.

As for paths versus module=file name, well, there were discussions
among developpers, and it is not so clear which is best, considering
also that this has to be integrated transparently with the
module/functor system.
>From a language abstraction point of view, the idea of writing file
paths inside programs doesn't sound so nice. A simpler solution would
be to provide an easy way to indicate which package one wants to use
from the ocamlc command line. Something like having "-I +package"
automatically expanded to "-I /usr/local/lib/ocaml/package".

From: Max Skaller <maxs@in.ot.com.au>

> 	There already is one: the lablbrowser. It's quite
> good functionally -- but the interface sucks.

Name has changed, it is now ocamlbrowser.
As Vitaly answered, this is not a RAD, but more a kind of IDE, more
centered on library browsing than project building.

As always I admire how constructive your comments are :-)

The interface is that way because I like it that way:
* the main functionality is in one small window that I can keep on my
  screen all the time.
* there is one window by module, because I often want to browse
  several modules simultaneously.
* editor functionality is reduced to a minimum, because real
  programmers use emacs anyway.

If you don't like the interface you could explain why, and say what
you think would be a nice interface, for instance.

Jacques
---------------------------------------------------------------------------
Jacques Garrigue      Kyoto University     garrigue at kurims.kyoto-u.ac.jp
		<A HREF=http://wwwfun.kurims.kyoto-u.ac.jp/~garrigue/>JG</A>



