Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA06620 for caml-redistribution@pauillac.inria.fr; Tue, 11 Apr 2000 19:58:37 +0200 (MET DST)
Resent-Message-Id: <200004111758.TAA06620@pauillac.inria.fr>
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA28584 for <caml-list@pauillac.inria.fr>; Tue, 11 Apr 2000 19:58:15 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id TAA12249;
	Tue, 11 Apr 2000 19:58:08 +0200 (MET DST)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA24145; Tue, 11 Apr 2000 19:58:08 +0200 (MET DST)
Message-ID: <20000411195808.62154@pauillac.inria.fr>
Date: Tue, 11 Apr 2000 19:58:08 +0200
From: Pierre Weis <Pierre.Weis@inria.fr>
To: "Dennis (Gang) Chen" <Dennis.G.Chen@motorola.com>
Cc: caml-list@inria.fr
Subject: Re: When functional languages can be accepted by industry?
References: <38E7F364.5D24BB7C@motorola.com> <14572.49274.910966.673172@cylinder.csl.sri.com> <38ED71B6.30118608@motorola.com> <14574.1721.508470.790475@cylinder.csl.sri.com> <38F270CF.221F5BD0@motorola.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.89.1
In-Reply-To: <38F270CF.221F5BD0@motorola.com>; from Dennis (Gang) Chen on Tue, Apr 11, 2000 at 09:54:47AM +0930
Resent-From: weis@pauillac.inria.fr
Resent-Date: Tue, 11 Apr 2000 19:58:37 +0200
Resent-To: caml-redistribution@pauillac.inria.fr

> The deletion operation described in these papers will rebuild a tree. Therefore,
> it does not seem to be comparably efficient with those implementations in
> imperative languages.

Don't forget that there is (almost) no restriction on side-effects in
Caml: if this is crucial for your program, you can implement lists as
an imperative data type of your own, and then use destructive update
to perform the deletion operation in the required complexity. Just be
aware that list sharing will be difficult as for any other imperative
implementation of lists.

Best regards,

-- 
Pierre Weis

INRIA, Projet Cristal, http://pauillac.inria.fr/~weis


