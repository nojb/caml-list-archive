Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA15448 for caml-redistribution@pauillac.inria.fr; Thu, 13 Apr 2000 16:40:09 +0200 (MET DST)
Resent-Message-Id: <200004131440.QAA15448@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA07850 for <caml-list@pauillac.inria.fr>; Thu, 13 Apr 2000 15:38:14 +0200 (MET DST)
Received: from indigo.recherche.enac.fr (indigo.recherche.enac.fr [195.220.158.66])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id PAA07559
	for <caml-list@inria.fr>; Thu, 13 Apr 2000 15:38:13 +0200 (MET DST)
Received: from rouge.recherche.enac.fr (root@rouge.recherche.enac.fr [195.220.158.70]) by indigo.recherche.enac.fr (8.8.6 (PHNE_14041)/8.6.11) with ESMTP id PAA03734 for <caml-list@inria.fr>; Thu, 13 Apr 2000 15:38:12 +0200 (METDST)
Received: from recherche.enac.fr (alliot@localhost [127.0.0.1]) by rouge.recherche.enac.fr (8.9.3/8.6.11) with ESMTP id PAA18910 for <caml-list@inria.fr>; Thu, 13 Apr 2000 15:38:12 +0200
X-Authentication-Warning: rouge.recherche.enac.fr: Host alliot@localhost [127.0.0.1] claimed to be recherche.enac.fr
Sender: alliot@recherche.enac.fr
Message-ID: <38F5CDC3.2071CC29@recherche.enac.fr>
Date: Thu, 13 Apr 2000 15:38:12 +0200
From: jean-marc alliot <alliot@recherche.enac.fr>
Organization: Laboratoire d'Optimisation Globale
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12 i686)
X-Accept-Language: fr-FR
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: When functional languages can be accepted by industry?
References: <38E7F364.5D24BB7C@motorola.com>
		<14572.49274.910966.673172@cylinder.csl.sri.com>
		<38ED71B6.30118608@motorola.com>
		<14574.1721.508470.790475@cylinder.csl.sri.com>
		<38F270CF.221F5BD0@motorola.com>
		<20000411195808.62154@pauillac.inria.fr>
		<38F3D520.9CD19485@motorola.com> <14581.28385.615880.93928@pc89.lri.fr>
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Resent-From: weis@pauillac.inria.fr
Resent-Date: Thu, 13 Apr 2000 16:40:09 +0200
Resent-To: caml-redistribution@pauillac.inria.fr

I don't want to be caught in a religion war, but I think that our own
experience can be interesting.

We are a small laboratory working inside a much larger structure (the
Centre d'Etudes de la Navigation Aérienne, or CENA), which belongs
itself to a much larger structure (the Direction Générale de l'Aviation
Civile, or DGAC).
For people who do not know the french system, you can consider  the CENA
somewhat like a small MITRE Corporation in the USA, and the DGAC is the
french equivalent of the Federal Aviation Administration.

Software development is a vital concern for our administration. Air
Trafic Control systems are highly dependant on computers and computer
programs. Very large amount of money are spent for software development
and software support (I don't have the exact figures, but it should be
around  50 M$ (million dollars). I can be wrong but the magnitude is
correct).

Currently, CAML is not used in what we call industrial development. On
the opposite it is used for R&D. Inside our lab we all develop in CAML
and some of the softwares we have developped are now used in other R&D
ATC centers, but also used for some more operational applications, like
the evaluation of airspace sectoring.

Here is an extremely (IMHO) interesting example, which was out first
real experience  in CAML. We had an arithmetic traffic simulator written
in C a few years ago (a traffic simulator is something which reads raw
flight plans, makes aircraft fly, and writes lot of interesting
statistics about air traffic sector overloading, air traffic conflicts
and can even solve conflicts).
This software had become difficult to maintain over the years. It was
quite large, with lot of features. We decided to rewrite it completely
in CAML.
The results were better than anything we might have expected. The size
of the code was reduced by a factor of 4, lot of bugs were solved and it
became only slightly slower (10%).

I don't think that CAML needs anything more to be accepted by industry,
from a technical point of view. I have developped applications in many
different languages(ADA, C, C++,...), and I began to use CAML much
later. Even if I would not be as harsh as Jean-Christophe Filliatre, I
agree with him very much. CAML is fast, easy to use, reliable, its
standard library is powerful, strong typing corrects lot of bugs,
dynamic typing is a real comfort compared to ADA.
Moreover, the CAML team is certainly one of the most brilliant and
efficient development team I have dealt with. The language has always
evolved smoothly and (according to me) in the right direction. Questions
are always answered quickly and with a real kindness. You can't ask for
more.

I think that what CAML needs is time. When some of my (and others) young
students will become software project managers, it will be easier for
CAML to become an industry standard.
Let's go teaching CAML !




