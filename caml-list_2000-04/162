Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA25439 for caml-redist; Fri, 28 Apr 2000 12:03:34 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA26655 for <caml-list@pauillac.inria.fr>; Fri, 28 Apr 2000 02:22:58 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id CAA17305
	for <caml-list@pauillac.inria.fr>; Fri, 28 Apr 2000 02:22:56 +0200 (MET DST)
Received: from localhost (sansho.kurims.kyoto-u.ac.jp [130.54.16.90])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3/3.7W) with ESMTP id JAA15769;
	Fri, 28 Apr 2000 09:22:27 +0900 (JST)
To: tkb@tkb.mpl.com, alliot@recherche.enac.fr
Cc: caml-list@pauillac.inria.fr
Subject: Re: LablTk in Objective Caml 3.00
In-Reply-To: Your message of "Wed, 26 Apr 2000 16:02:43 -0400 (EDT)"
	<14599.19299.666187.535414@tkb.mpl.com>
References: <14599.19299.666187.535414@tkb.mpl.com>
X-Mailer: Mew version 1.93 on Emacs 20.5 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20000428092226C.garrigue@kurims.kyoto-u.ac.jp>
Date: Fri, 28 Apr 2000 09:22:26 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 980905(IM100)
Lines: 27
Sender: weis

From: "T. Kurt Bond" <tkb@tkb.mpl.com>

> I noticed that all the ?width options and ?height options for things
> like Label.create and Canvas.create have type int; Why don't these
> actually have type Tk.units so that one can specify them in any of the
> normal Tk screen units: Inches, Millimeters, Centimeters, Points, or
> Pixels, just like you can using raw Tcl/Tk or OcamlTk ? 

The answer is in the LablTk section of the manual:

27.1   Module Tk: basic functions and types for LablTk
Dimensions 
  type units = [`Pix int|`Cm float|`In float|`Mm float|`Pt float]
  val pixels : units -> int
     Converts various on-screen units to pixels, respective to the
     default display. Available units are pixels, centimeters, inches,
     millimeters and points

Having to write units always explicitly was just a pain. This way you
can either write directly in pixels, or convert from another unit.
There is a very small glitch: if your application is intended to run
on several displays with different dpi's, you must use the
Winfo.pixels or Winfo.fpixels functions.

---------------------------------------------------------------------------
Jacques Garrigue      Kyoto University     garrigue at kurims.kyoto-u.ac.jp
		<A HREF=http://wwwfun.kurims.kyoto-u.ac.jp/~garrigue/>JG</A>



