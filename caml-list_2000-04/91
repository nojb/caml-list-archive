Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA26675 for caml-redistribution@pauillac.inria.fr; Wed, 19 Apr 2000 20:58:42 +0200 (MET DST)
Resent-Message-Id: <200004191858.UAA26675@pauillac.inria.fr>
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA02738 for <caml-list@pauillac.inria.fr>; Wed, 19 Apr 2000 19:40:40 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id TAA10411;
	Wed, 19 Apr 2000 19:40:37 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA22590; Wed, 19 Apr 2000 19:40:37 +0200 (MET DST)
Message-ID: <20000419194037.51245@pauillac.inria.fr>
Date: Wed, 19 Apr 2000 19:40:37 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Ohad Rodeh <orodeh@cs.huji.ac.il>, caml-list@inria.fr
Subject: Re: C++ & Caml: name clash
References: <38FC05D8.61652265@in.ot.com.au> <Pine.LNX.4.20_heb2.08.0004181054550.12299-100000@zigzag.cs.huji.ac.il>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.89.1
In-Reply-To: <Pine.LNX.4.20_heb2.08.0004181054550.12299-100000@zigzag.cs.huji.ac.il>; from Ohad Rodeh on Tue, Apr 18, 2000 at 11:08:13AM +0300
Resent-From: weis@pauillac.inria.fr
Resent-Date: Wed, 19 Apr 2000 20:58:42 +0200
Resent-To: caml-redistribution@pauillac.inria.fr

>   My second problem has to do with a name clash between 
> the g++ standard library, and the alloc.h file from Caml. 
> It turns out that the function "alloc" is defined by g++
> in file /usr/include/g++-2/stl_alloc.h as:
> 	typedef class __default_alloc_template<true,0> alloc
> In caml it is defined in include/alloc.h as:
> 	value alloc(mlsize_t, tag_t) 
> 
>   This does not allow compiling a file that #includes both 
> Caml and g++ header files. 

The easiest solution, it seems, would be to split your source in two
files, one in plain C (or perhaps C++ but not using the STL)
containing just the Caml wrappers for your functions, and another one
defining your functions in C++ with STL without reference to the Caml
include files.

Hope this helps,

- Xavier Leroy


