Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA30845 for caml-redistribution@pauillac.inria.fr; Wed, 19 Apr 2000 20:57:45 +0200 (MET DST)
Resent-Message-Id: <200004191857.UAA30845@pauillac.inria.fr>
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA28487 for <caml-list@pauillac.inria.fr>; Wed, 19 Apr 2000 17:58:10 +0200 (MET DST)
Received: from localhost.localdomain (stan105.zip.com.au [61.8.17.105])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id RAA07328
	for <caml-list@inria.fr>; Wed, 19 Apr 2000 17:57:50 +0200 (MET DST)
Received: from maxtal.com.au (IDENT:root@localhost [127.0.0.1])
	by localhost.localdomain (8.9.3/8.8.7) with ESMTP id BAA07037;
	Thu, 20 Apr 2000 01:57:13 +1000
Sender: root@localhost.localdomain
Message-ID: <38FDD758.6E2022BB@maxtal.com.au>
Date: Thu, 20 Apr 2000 01:57:12 +1000
From: John Max Skaller <skaller@maxtal.com.au>
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12-20 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: luther@dpt-info.u-strasbg.fr
CC: jean-marc alliot <alliot@recherche.enac.fr>, caml-list@inria.fr
Subject: Re: When functional languages can be accepted by industry?
References: <14572.49274.910966.673172@cylinder.csl.sri.com> <38ED71B6.30118608@motorola.com> <14574.1721.508470.790475@cylinder.csl.sri.com> <38F270CF.221F5BD0@motorola.com> <20000411195808.62154@pauillac.inria.fr> <38F3D520.9CD19485@motorola.com> <14581.28385.615880.93928@pc89.lri.fr> <38F5FCFA.2D7F3C3B@maxtal.com.au> <38FB08D3.B6E5B5E0@recherche.enac.fr> <38FB4EA3.7AE9895@maxtal.com.au> <20000418125301.A22923@lambda.u-strasbg.fr>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Resent-From: weis@pauillac.inria.fr
Resent-Date: Wed, 19 Apr 2000 20:57:44 +0200
Resent-To: caml-redistribution@pauillac.inria.fr

Sven LUTHER wrote:
> 
> On Tue, Apr 18, 2000 at 03:49:23AM +1000, John Max Skaller wrote:
> >       No doubt the compiler I'm writing in Ocaml will be fast enough.
> > But there is no way CAML will compete with the C++ code the compiler
> > generates.
> > [At least not the way the CAML bytecode interpreter is written]
> 
> Bytecode, ...
> 
> what about the native code compiler ?

	Too hard I guess. The bytecode compiler can probably
be modified to be stackless, and thus support a huge number
of concurrent threads via continuations. It is not so easy to
generate native code with these properties.

> If you are comparing Ocaml to C++, at least use similar stuff. Or else you
> should compare to bytecode java, or interpreted C++ (if such a thing exists).

	I am. I am generating C++ code which could well be the
same performance as a bytecode interpreter, if it didn't use the 
'C' stack, since that is the reason I'm generating C++ code
rather than using the bytecode interpreter. :-)

-- 
John (Max) Skaller, mailto:skaller@maxtal.com.au
10/1 Toxteth Rd Glebe NSW 2037 Australia voice: 61-2-9660-0850
checkout Vyper http://Vyper.sourceforge.net
download Interscript http://Interscript.sourceforge.net


