Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA06714 for caml-redistribution@pauillac.inria.fr; Thu, 13 Apr 2000 10:15:59 +0200 (MET DST)
Resent-Message-Id: <200004130815.KAA06714@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA21462 for <weis@pauillac.inria.fr>; Thu, 13 Apr 2000 03:23:06 +0200 (MET DST)
Received: from motgate.mot.com (motgate.mot.com [129.188.136.100])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id DAA18712;
	Thu, 13 Apr 2000 03:23:05 +0200 (MET DST)
Received: [from mothost.mot.com (mothost.mot.com [129.188.137.101]) by motgate.mot.com (motgate 2.1) with ESMTP id SAA13943; Wed, 12 Apr 2000 18:23:03 -0700 (MST)]
Received: [from fraser.asc.corp.mot.com (fraser.asc.corp.mot.com [217.1.104.8]) by mothost.mot.com (MOT-mothost 2.0) with ESMTP id SAA08136; Wed, 12 Apr 2000 18:22:56 -0700 (MST)]
Received: from motorola.com (jaguar [217.1.104.76])
	by fraser.asc.corp.mot.com (8.8.7/8.8.7) with ESMTP id KAA25146;
	Thu, 13 Apr 2000 10:52:52 +0930 (CST)
Sender: dchen@asc.corp.mot.com
Message-ID: <38F521A7.BBB3CA23@motorola.com>
Date: Thu, 13 Apr 2000 10:53:51 +0930
From: "Dennis (Gang) Chen" <Dennis.G.Chen@motorola.com>
Organization: Motorola Australia Software Centre
X-Mailer: Mozilla 4.5 [en] (X11; I; SunOS 5.5.1 sun4u)
X-Accept-Language: en
MIME-Version: 1.0
To: David Brown <caml-list@davidb.org>
CC: Pierre Weis <Pierre.Weis@inria.fr>, caml-list@inria.fr
Subject: Re: When functional languages can be accepted by industry?
References: <38E7F364.5D24BB7C@motorola.com> <14572.49274.910966.673172@cylinder.csl.sri.com> <38ED71B6.30118608@motorola.com> <14574.1721.508470.790475@cylinder.csl.sri.com> <38F270CF.221F5BD0@motorola.com> <20000411195808.62154@pauillac.inria.fr> <38F3D520.9CD19485@motorola.com> <20000412110604.A23481@davidb.org>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Resent-From: weis@pauillac.inria.fr
Resent-Date: Thu, 13 Apr 2000 10:15:58 +0200
Resent-To: caml-redistribution@pauillac.inria.fr

> I'm not sure I understand what features of pointers in C you want.  Yes,
> arbitrary pointer arithmetic is not available.  But, when you work with
> mutable data structures in ocaml, the things you assign behave a lot like
> pointers in C or C++.

Thank you very much. Now I find that a mutable linked list can indeed be elegantly
implemented in ocaml, e.g.:

type 'a mlist = Empty | Node of 'a mlist ref * 'a ref;;

This is what I didn't realized before.

Cheers.


--
Dennis Gang CHEN    Senior Software Engineer
Motorola Australia Software Centre, Electronic Design Automation
2 Second Avenue, Mawson Lakes, SA 5095, Australia
phone: +61 8 8203 3560,  mailto: Dennis.G.Chen@motorola.com




