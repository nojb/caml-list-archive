Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA15364 for caml-redistribution@pauillac.inria.fr; Thu, 13 Apr 2000 13:26:35 +0200 (MET DST)
Resent-Message-Id: <200004131126.NAA15364@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA28936 for <weis@pauillac.inria.fr>; Thu, 13 Apr 2000 08:53:23 +0200 (MET DST)
Received: from ext.lri.fr (ext.lri.fr [129.175.15.4])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id IAA28070;
	Thu, 13 Apr 2000 08:53:23 +0200 (MET DST)
Received: from pc89.lri.fr (pc89 [129.175.8.108])
          by ext.lri.fr (8.9.3/jtpda-5.3.2) with ESMTP id IAA20483
          ; Thu, 13 Apr 2000 08:53:22 +0200 (MET DST)
Received: by pc89.lri.fr
	(8.8.7/feuille) id IAA28785
	; Thu, 13 Apr 2000 08:53:21 +0200
X-Authentication-Warning: pc89.lri.fr: filliatr set sender to filliatr@pc89.lri.fr using -f
From: Jean-Christophe Filliatre <Jean-Christophe.Filliatre@lri.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <14581.28385.615880.93928@pc89.lri.fr>
Date: Thu, 13 Apr 2000 08:53:21 +0200 (MEST)
To: "Dennis (Gang) Chen" <Dennis.G.Chen@motorola.com>
Cc: Pierre Weis <Pierre.Weis@inria.fr>, caml-list@inria.fr
Subject: Re: When functional languages can be accepted by industry?
In-Reply-To: <38F3D520.9CD19485@motorola.com>
References: <38E7F364.5D24BB7C@motorola.com>
	<14572.49274.910966.673172@cylinder.csl.sri.com>
	<38ED71B6.30118608@motorola.com>
	<14574.1721.508470.790475@cylinder.csl.sri.com>
	<38F270CF.221F5BD0@motorola.com>
	<20000411195808.62154@pauillac.inria.fr>
	<38F3D520.9CD19485@motorola.com>
X-Mailer: VM 6.49 under Emacs 20.3.1
Reply-To: Jean-Christophe.Filliatre@lri.fr (Jean-Christophe Filliatre)
Resent-From: weis@pauillac.inria.fr
Resent-Date: Thu, 13 Apr 2000 13:26:35 +0200
Resent-To: caml-redistribution@pauillac.inria.fr


> more attractive than C++. In ocaml, there are arrays, structures
> and objects etc, but no such things like pointers in C.

Wrong. You have references, which are quite better than pointers (they
are typed, and necessarily initialized)

> 1. Current functional languages do not have enough library support:

Please. ocaml has  the most wonderful standard library  that any other
language  has ever had.  Have a  look in  the reference  manual before
stating such non-sense.

> 2. Functional languages do not well support the use of dynamic
> data structures which requires mutable operations for achieving the
> efficiency;

Wrong. And you should stop thinking that efficiency means mutable data
structures. Once again, read Okasaki's book.

> It is no doubt that functional languages will continue to succeed in
> eduacation,  research,  high  level  specification,  formal  program
> verification, fast prototyping, etc. But,  it appears to me that, in
> industry, the second approach might succeed in most cases.

Your arguments  are not the good  ones. People in industry  do not use
functional programming for other reasons: because this is not in their
culture, because  they don't know,  because they have not  been taught
functional programming. Some of  them, like you, think that functional
programming languages are inefficient, but they are wrong.

-- 
Jean-Christophe FILLIATRE
  mailto:Jean-Christophe.Filliatre@lri.fr
  http://www.lri.fr/~filliatr


