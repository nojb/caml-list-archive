Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA10103; Thu, 8 Apr 2004 09:52:00 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA10545 for <caml-list@pauillac.inria.fr>; Thu, 8 Apr 2004 09:51:59 +0200 (MET DST)
Received: from oxy.exomi.com (fa-3-0-0.fw.exomi.com [217.169.64.99])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i387qqjq023787
	for <caml-list@inria.fr>; Thu, 8 Apr 2004 09:52:52 +0200
Received: from [127.0.0.1] (localhost [127.0.0.1])
	by oxy.exomi.com (Postfix) with ESMTP
	id 17AD51A6B87; Thu,  8 Apr 2004 10:52:50 +0300 (EEST)
In-Reply-To: <Pine.LNX.4.44.0404080046270.25700-100000@localhost.localdomain>
References: <Pine.LNX.4.44.0404080046270.25700-100000@localhost.localdomain>
Mime-Version: 1.0 (Apple Message framework v613)
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <BB5F1F48-8931-11D8-992F-000393863F70@exomi.com>
Content-Transfer-Encoding: 7bit
Cc: Ocaml Mailing List <caml-list@inria.fr>,
        Issac Trotts <ijtrotts@ucdavis.edu>
From: Ville-Pertti Keinonen <will@exomi.com>
Subject: Re: [Caml-list] Dynamically evaluating OCaml code
Date: Thu, 8 Apr 2004 10:52:49 +0300
To: Brian Hurt <bhurt@spnz.org>
X-Mailer: Apple Mail (2.613)
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 dynamically:01 pragmatic:01 pragmatic:01 ocaml:01 ocaml:01 supported:01 native:02 wrote:03 macos:04 intermediate:05 cvs:05 platforms:05 64,:06 supports:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 130


On Apr 8, 2004, at 9:24 AM, Brian Hurt wrote:

> As a side note, I don't see Ocaml as a science project.  It's a 
> pragmatic
> language, in that it doesn't automatically assume it knows what's best,

To add another point why OCaml is a pragmatic and usable language - 
OCaml has far better platform support than some even more established 
languages.  It's the only language I might choose for my personal 
projects other than C/C++ that supports native code for all of the 
relevant platforms I currently have access to.  I have FreeBSD/amd64, 
FreeBSD/x86, Linux/x86 and MacOS X machines, all of which run OCaml 
fine, and use various machines at work that should be supported 
(although the last time I tried, the CVS version built and worked on 
Tru64 but not Solaris/SPARC or HP-UX/PA).

Of course I'm not counting languages that use C or C++ as an 
intermediate language.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

