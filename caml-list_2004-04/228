Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA11713; Sat, 10 Apr 2004 12:14:55 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA11884 for <caml-list@pauillac.inria.fr>; Sat, 10 Apr 2004 12:14:54 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i3AAFmjq016565
	for <caml-list@inria.fr>; Sat, 10 Apr 2004 12:15:49 +0200
Received: from [192.168.1.200] (ppp116-94.lns1.syd2.internode.on.net [150.101.116.94])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i3AAElvM030138;
	Sat, 10 Apr 2004 19:44:48 +0930 (CST)
Subject: Re: [Caml-list] String.map => Question to the OCaml-team
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Jon Harrop <jdh30@cam.ac.uk>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <200404091328.53282.jdh30@cam.ac.uk>
References: <20040409110138.GA1333@first.in-berlin.de>
	 <200404091328.53282.jdh30@cam.ac.uk>
Content-Type: text/plain
Message-Id: <1081592086.20677.256.camel@pelican>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 10 Apr 2004 20:14:46 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 ocaml-team:01 sourceforge:01 2004:99 2004:99 oliver:01 bandel:01 val:01 char:01 char:01 val:01 ironically:01 9660:01 glebe:01 nsw:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 228

On Fri, 2004-04-09 at 22:28, Jon Harrop wrote:
> On Friday 09 April 2004 12:01 pm, Oliver Bandel wrote:
> > it's nice to have a String.iter, but more functional would
> > be to have a String.map function.
> 
> Would that be:
> 
> val map : (char -> char) -> string -> string
> 
> or
> 
> val map : (char -> 'a) -> string -> 'a list
> 
> ?
> 
> But yes, ironically, now that I return to coding I need exactly this function 
> (the latter, actually). :)

And I need:

val map: (char -> string) -> string -> string

which is by far the most common need. An example is:

map to_UTF8 latin1_string

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

