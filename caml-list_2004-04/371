Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA06689; Thu, 15 Apr 2004 10:17:06 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA06485 for <caml-list@pauillac.inria.fr>; Thu, 15 Apr 2004 10:17:04 +0200 (MET DST)
Received: from tcs.inf.tu-dresden.de (orchid.inf.tu-dresden.de [141.76.75.101])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i3F8H3YM025296
	for <caml-list@inria.fr>; Thu, 15 Apr 2004 10:17:04 +0200
Received: from ithif51.inf.tu-dresden.de (ithif51 [141.76.75.51])
	by tcs.inf.tu-dresden.de (8.12.9/8.12.9) with ESMTP id i3F8H36f009739
	for <caml-list@inria.fr>; Thu, 15 Apr 2004 10:17:03 +0200 (MET DST)
Received: from tews by ithif51.inf.tu-dresden.de with local (Exim 3.36 #1 (Debian))
	id 1BE23T-0006mC-00
	for <caml-list@inria.fr>; Thu, 15 Apr 2004 10:17:03 +0200
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <16510.17663.1463.981075@ithif51.inf.tu-dresden.de>
Date: Thu, 15 Apr 2004 10:17:03 +0200
To: caml-list@inria.fr
Subject: Re: [Caml-list] Real Time Ocaml
In-Reply-To: <20040414161227.14830.qmail@web12404.mail.yahoo.com>
References: <20040414161227.14830.qmail@web12404.mail.yahoo.com>
X-Mailer: VM 7.18 under Emacs 21.3.1
From: Hendrik Tews <tews@tcs.inf.tu-dresden.de>
X-Scanned-By: MIMEDefang 2.33 (www . roaringpenguin . com / mimedefang) at tcs.inf.tu-dresden.de
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 hendrik:01 tews:01 tews:01 typeful:01 hendrik:01 citeseer:01 cardelli:01 typeful:01 cornell:01 invoke:01 compiler:01 tu-dresden:01 ocaml:01 ocaml:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 371

Erol Akarsu writes:
   
   Have we tried to run Ocaml application on any real
   time os?
   
I believe, in order to use Ocaml for real time applications you
have to go (at least) the way sketched in Section 9.2 of Luca
Cardellis "Typeful Programming" [1]:

- identify the subset of Ocaml that is heap allocation free
- possibly modify the compiler to enlarge the heap allocation
  free subset
- make sure any programm in this subset does not invoke the
  garbage collector

You also have to do something about signal delivery. 
Then you can write your real time application in this heap
allocation free subset. You could even write the ocaml garbage
collector in Ocaml then.


Of course as others pointed out, depending on your real time
needs Ocaml might already be completely satisfactory. Another
example of Ocaml code in a time critical environment is provided
by the Ensemble project [2]. Garbage collection does not pose any
problems there.


Bye,

Hendrik

[1] http://citeseer.ist.psu.edu/cardelli89typeful.html
[2] http://www.cs.cornell.edu/Info/Projects/Ensemble/index.htm

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

