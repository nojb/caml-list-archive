Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA16863; Thu, 1 Apr 2004 00:03:11 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA19483 for <caml-list@pauillac.inria.fr>; Thu, 1 Apr 2004 00:03:10 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i2VM3qjq029964
	for <caml-list@pauillac.inria.fr>; Thu, 1 Apr 2004 00:03:54 +0200
Received: from [192.168.1.200] (ppp113-158.lns1.syd3.internode.on.net [150.101.113.158])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i2VM32UK025116
	for <caml-list@pauillac.inria.fr>; Thu, 1 Apr 2004 07:33:03 +0930 (CST)
Subject: [Caml-list] Re: Ocamlgraph build error
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: caml-list@pauillac.inria.fr
Content-Type: text/plain
Message-Id: <1080770580.13854.126.camel@pelican>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 01 Apr 2004 08:03:01 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; sourceforge:01 pelican:01 usr:01 ocamlc:01 bitv:01 bitv:01 ocamldep:01 9660:01 glebe:01 compiler:01 compiler:01 int:01 int:01 nsw:01 snail:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
X-IMAPbase: 1082028074 375
Status: O
X-Status: 
X-Keywords:                     
X-UID: 1



[skaller@pelican] /usr/local/src/ocamlgraph-0.70>ocamlc bitv.ml
File "bitv.ml", line 561, characters 57-67:
Integer literal exceeds the range of representable integers of type int

[The actual failure is in ocamldep]

let of_int32_s i = match Sys.word_size with
  | 32 -> { length = 32;
            bits = [| (Int32.to_int i) land max_int;
                      let hi = Int32.shift_right_logical i 30 in
                      (Int32.to_int hi) land 3 |] }
  | 64 -> { length = 32; bits = [| (Int32.to_int i) land 0xffffffff |] }
  | _ -> assert false


Seems the fault is in the constant 0xffffffff which of course
isn't a valid int on my 32 bit machine. You could use

	(0xffff lsl 16) lor 0xffff

instead in the hope the compiler doesn't fold it,
but ultimately if the compiler is smart enough 
you really must use conditional compilation.

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

