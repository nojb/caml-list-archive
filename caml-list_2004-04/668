Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA02537; Mon, 26 Apr 2004 03:45:31 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA01843 for <caml-list@pauillac.inria.fr>; Mon, 26 Apr 2004 03:45:30 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i3Q1jRjq020032
	for <caml-list@inria.fr>; Mon, 26 Apr 2004 03:45:28 +0200
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3p2-20030924/3.7W) with ESMTP id KAA05266;
	Mon, 26 Apr 2004 10:45:21 +0900 (JST)
Date: Mon, 26 Apr 2004 10:45:21 +0900 (JST)
Message-Id: <20040426.104521.68535941.garrigue@kurims.kyoto-u.ac.jp>
To: ben@socialtools.net
Cc: caml-list@inria.fr
Subject: [Caml-list] Re: Proposal: community standard library project
From: Jacques GARRIGUE <garrigue@kurims.kyoto-u.ac.jp>
In-Reply-To: <408A64CB.40500@socialtools.net>
References: <20040423211628.GE6783@excelhustler.com>
	<20040423222829.GH848@speakeasy.org>
	<408A64CB.40500@socialtools.net>
X-Mailer: Mew version 4.0.64 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at = by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; jacques:01 library':01 incompatible:01 api:01 interfacing:01 reviews:99 jacques:01 unicode:01 ocaml:01 ocaml:01 garrigue:01 garrigue:01 modules:02 objects:02 clearer:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Benjamin Geer <ben@socialtools.net>

> I'm envisaging a new 'community standard library' project which would 
> supplement (and perhaps partly replace) INRIA's standard library, and in 
> which:
> 
>    * Libraries would be categorised according to function, e.g.
>      data structures, Unicode, I/O, network protocols, etc.
> 
>    * No duplicate or incompatible functionality would be allowed
>      in each functional area.  People would have to cooperate
>      to make their stuff work together.
> 
>    * Minimum standards of portability, documentation, etc. would be
>      checked.
> 
>    * Everything would be released via GODI.

Writing down this makes clearer part of the problem with ocaml and/or
its community: your second point would be very hard to satisfy.

Why? Because ocaml gives you many ways to define an API for any
functionality. And does not try to decide which is better. So you can
only end up with duplicate libraries, according to personal tastes.
Not only there are plenty of duplicate libraries around, but I'm sure
that many ocaml programmers prefer to create their own private library
rather than using some available one.

You can be functional or imperative, use optional arguments or not,
use objects or modules, etc...
Even interfacing a C library can be done in many different ways...

This does not mean that people should not cooperate, just that you
cannot force them to.

The 1st point is reasonable. This is already what the humps are
doing, but a system allowing requests for new functionalities would be
nice too.
The 3rd point, I would rather see it as having more
meta-documentation, ie information on libraries without having to
download and install: requirements, extensiveness, quality of the
documentation, user reviews...
The last point is clear enough.

Jacques Garrigue

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

