Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA06094; Thu, 8 Apr 2004 15:48:50 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA05400 for <caml-list@pauillac.inria.fr>; Thu, 8 Apr 2004 15:48:48 +0200 (MET DST)
Received: from gatekeeper.elmer.external.excelhustler.com (gatekeeper.excelhustler.com [68.99.114.105])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i38DmlYM018243
	for <caml-list@inria.fr>; Thu, 8 Apr 2004 15:48:47 +0200
Received: from chatterbox.elmer.internal.excelhustler.com (unknown [192.168.0.12])
	(using TLSv1 with cipher EDH-RSA-DES-CBC3-SHA (168/168 bits))
	(Client CN "chatterbox.elmer.internal.excelhustler.com", Issuer "excelhustler.com" (not verified))
	by gatekeeper.elmer.external.excelhustler.com (Postfix) with ESMTP
	id E6B74E0140; Thu,  8 Apr 2004 08:48:46 -0500 (CDT)
Received: from localhost (localhost [127.0.0.1])
	by chatterbox.elmer.internal.excelhustler.com (Postfix) with ESMTP
	id B05A25C006; Thu,  8 Apr 2004 08:48:46 -0500 (CDT)
Received: from wile.internal.excelhustler.com (wile.internal.excelhustler.com [192.168.1.34])
	by chatterbox.elmer.internal.excelhustler.com (Postfix) with ESMTP
	id 8154A5C005; Thu,  8 Apr 2004 08:48:46 -0500 (CDT)
Received: by wile.internal.excelhustler.com (Postfix, from userid 1000)
	id 271FD1B065; Thu,  8 Apr 2004 08:48:47 -0500 (CDT)
Date: Thu, 8 Apr 2004 08:48:47 -0500
From: John Goerzen <jgoerzen@complete.org>
To: Vasili Galchin <vasiliocaml@yahoo.com>
Cc: Benjamin Geer <ben@socialtools.net>, skaller@users.sourceforge.net,
        Dustin Sallings <dustin@spy.net>,
        Kenneth Knowles <kknowles@berkeley.edu>,
        caml-list <caml-list@inria.fr>
Subject: Re: OCaml's Cathedral & Bazaar (was Re: [Caml-list] Completeness of "Unix" run-time library)
Message-ID: <20040408134847.GE29195@excelhustler.com>
References: <4072E7C4.5090008@socialtools.net> <20040407230810.619.qmail@web41205.mail.yahoo.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20040407230810.619.qmail@web41205.mail.yahoo.com>
User-Agent: Mutt/1.5.5.1+cvs20040105i
X-Scanned-By: clamscan at chatterbox.elmer.internal.excelhustler.com
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; ocaml's:01 caml-list:01 run-time:01 2004:99 haskell:01 haskell:01 terrible:01 pervasive:01 prolog:01 reinventing:01 ocamlodbc:01 ocaml:01 ocaml:01 0700,:01 lazy:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 140

On Wed, Apr 07, 2004 at 04:08:10PM -0700, Vasili Galchin wrote:
> I (Vasili) mean wide use of OCaml in the industry. An
> example of a FPL that has little chance is Haskell. I
> saw one poster on haskell group call it a science
> project. I agree. The Haskell is nibbling around the
> edges but not providing industrial-strength libraries,
> etc. Fortunately OCAML seems to have a big base and a
> lot of people working on various projects. HOWEVER,
> core functionality like IPV6 socket library code is
> not checked in! Why?

These are good points.  One thing that must *constantly* be considered
by someone looking at a language is the size, flexibility, and quality
of libraries available to help reduce the time to implement a project.
Haskell is absolutely terrible in this regard, so while I actually
prefer its more pervasive lazy evaluation (or even that of a logic
language like Prolog), the fact that I would have to be doing a
tremendous amount of wheel reinventing quickly soured me on Haskell.

OCaml is better, good enough to be a player, but not good enough to be a
good tool.  Here are some examples:

 * OCaml has no library for IMAP.

 * OCamlDBI supports only two database servers.  OcamlODBC supports many
   more through the system's ODBC support, but loads the entire result
   set into memory before handing it over to the user, which makes it
   unusable for many serious projects.

 * Your socket-related point is completely accurate and on-target.

 * String processing and list processing -- especially slicing -- remain
   weaknesses.

 * Time calculations and formatting are also largely missing.

-- John

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

