Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA30656; Fri, 30 Apr 2004 17:53:12 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA30615 for <caml-list@pauillac.inria.fr>; Fri, 30 Apr 2004 17:53:10 +0200 (MET DST)
Received: from herd.plethora.net (herd.plethora.net [205.166.146.1])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i3UFr9EV003706
	for <caml-list@inria.fr>; Fri, 30 Apr 2004 17:53:09 +0200
Received: from bhurt.plethora.net (bhurt.plethora.net [205.166.146.49])
	by herd.plethora.net (8.11.6/8.10.1) with ESMTP id i3UFr5R27877;
	Fri, 30 Apr 2004 10:53:06 -0500 (CDT)
Date: Fri, 30 Apr 2004 10:58:19 -0500 (CDT)
From: Brian Hurt <bhurt@spnz.org>
X-X-Sender: bhurt@localhost.localdomain
To: Jon Harrop <jdh30@cam.ac.uk>
cc: caml-list@inria.fr
Subject: Re: [Caml-list] [ANN] The Missing Library
In-Reply-To: <200404280613.19547.jdh30@cam.ac.uk>
Message-ID: <Pine.LNX.4.44.0404301031200.9460-100000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Miltered: at nez-perce with ID 40927665.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 2004:99 equivalents:01 implemented:01 implemented:01 matricies:01 algos:01 lapack:01 ocaml:01 ocaml:01 imho:01 trivial:01 iterators:02 iterators:02 complex:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Sorry for the delay on the response- I'm way behind on my email...

On Wed, 28 Apr 2004, Jon Harrop wrote:

> On Wednesday 28 April 2004 5:31 am, Brian Hurt wrote:
> > It's been too long since I've used the STL- what data structures and
> > algorithms does it provide?
> 
> The main thing is that it is iterator-centric, so you pass iterators around 
> instead of containers. 

Just for the record, you *can* do this just fine in Ocaml.  Ext-lib is 
already doing this.  This isn't a limitation of the language, it's a 
feature lack of the core library.

> These iterators are classified according to their abilities (e.g. 
> trivial, forward, random-access etc.). 

I don't think having lots of different types of iterators is all that 
usefull.  Once you get beyond a simple linear walk through the data 
structure, the nature of the data structure becomes important.

> I'm not saying that these things can't be done in ocaml, just that you
> can do them easily in C++ using the STL. I'd be very interested to hear
> ocaml equivalents though! If you want to know more about the STL then I
> suggest you refer back to Stepanov's ramblings, rather than looking at
> the "standard"  which was, unfortunately, bastardised by a committee...

Much of what you listed is either a) already implemented in the standard
library, or b) implemented in Ext-Lib.  The only stuff I noticed which we
lacked were the numerical stuff- 2D matricies/numerical algorithms and
complex numbers.  As you note, complex really needs to be a builtin.  And, 
IMHO, numerical algos really need to be a whole library by themselves- see 
LAPACK as an example.

--
"Usenet is like a herd of performing elephants with diarrhea -- massive,
difficult to redirect, awe-inspiring, entertaining, and a source of
mind-boggling amounts of excrement when you least expect it."
                                - Gene Spafford 
Brian


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

