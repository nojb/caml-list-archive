Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA18503; Wed, 14 Apr 2004 18:41:51 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA18506 for <caml-list@pauillac.inria.fr>; Wed, 14 Apr 2004 18:41:49 +0200 (MET DST)
Received: from aomori.annexia.org (annexia.force9.co.uk [212.56.101.183])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i3EGfnYM026081
	for <caml-list@inria.fr>; Wed, 14 Apr 2004 18:41:49 +0200
Received: from rich by aomori.annexia.org with local (Exim 3.36 #1 (Debian))
	id 1BDnSO-0004ka-00
	for <caml-list@inria.fr>; Wed, 14 Apr 2004 17:41:48 +0100
Date: Wed, 14 Apr 2004 17:41:48 +0100
To: caml-list@inria.fr
Subject: [Caml-list] Why not 'include' in an .mli file?
Message-ID: <20040414164148.GA18109@redhat.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.5.1+cvs20040105i
From: Richard Jones <rich@annexia.org>
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; mli:01 end-user:01 'open:01 mli:01 ocamlc:01 pcre:01 postgres:01 dbi:99 autoconf:01 automake:01 compiles:01 rpms:01 ltd:98 modules:02 modules:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 337


I have a library which for various reasons is split into two modules,
called them Analysis_p and Analysis.

I want end-user programs to be able to 'open Analysis', and get all
the symbols from both modules.  This is simple enough using the
'include' directive:

analysis.ml:	include Analysis_p
		(* plus a few extra functions *)

However when I added an analysis.mli file, I found that I could not
automatically 'include' symbols from Analysis_p.  The following
doesn't work:

analysis.mli:	include Analysis_p
		(* plus a few extra prototypes *)

ocamlc -w s -g -I +pcre -I +postgres -I +dbi -c analysis.mli
File "analysis.mli", line 1, characters 8-24:
Unbound module type Analysis_p

Instead it seems, as far as I can see, that I have to list out all the
prototypes again in analysis.mli.  Is this so?  If so, it's a pain for
me, and means that prototypes for one function exist in two different
places (also I don't control Analysis_p directly, so it requires extra
coordination).

Rich.

-- 
Richard Jones. http://www.annexia.org/ http://www.j-london.com/
Merjis Ltd. http://www.merjis.com/ - improving website return on investment
MAKE+ is a sane replacement for GNU autoconf/automake. One script compiles,
RPMs, pkgs etc. Linux, BSD, Solaris. http://www.annexia.org/freeware/makeplus/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

