Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA11454; Wed, 28 Apr 2004 19:32:09 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA11441 for <caml-list@pauillac.inria.fr>; Wed, 28 Apr 2004 19:32:08 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i3SHW5YM002995
	for <caml-list@inria.fr>; Wed, 28 Apr 2004 19:32:06 +0200
Received: from [192.168.1.200] (ppp119-113.lns1.syd2.internode.on.net [150.101.119.113])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i3SHVvk2028220;
	Thu, 29 Apr 2004 03:02:03 +0930 (CST)
Subject: Re: [Caml-list] [ANN] The Missing Library
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: james woodyatt <jhw@wetware.com>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <93ADD9EA-9936-11D8-BD03-000A958FF2FE@wetware.com>
References: <Pine.LNX.4.44.0404272326450.9460-100000@localhost.localdomain>
	 <200404280613.19547.jdh30@cam.ac.uk>
	 <1083141467.9537.845.camel@pelican.wigram>
	 <200404281018.14913.jdh30@cam.ac.uk>
	 <1083151482.9537.904.camel@pelican.wigram>
	 <93ADD9EA-9936-11D8-BD03-000A958FF2FE@wetware.com>
Content-Type: text/plain
Message-Id: <1083173516.9537.1162.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 29 Apr 2004 03:31:57 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 woodyatt:01 iterator:01 inverted:01 abstraction:01 monadic:01 convoluted:01 haskell:01 glue:01 9660:01 glebe:01 compiler:01 ocaml:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 2004-04-29 at 03:07, james woodyatt wrote:
> On 28 Apr 2004, at 04:24, skaller wrote:
> >
> > to say another way: an iterator IS just a control inverted
> > HOF, indeed, the (abstraction of) the List.iter HOF.
> 
> Also not precisely true,

[]

> With Ocaml, monadic programming is a little more convoluted than with 
> Haskell, but it's not at all out of the bounds of reality.  I do it all 
> the time, 

If you find a simple enough example I'd love to see it.
I have quite a lot of 'multi-pass' phases in my Felix compiler
where i build temporary data structures in between.

I'd love to glue some of these together to eliminate building
whole data structures. For example I have phases:

	tokeniser -> rewrite token stream -> parser ->
	macro expansion and constant folding ->
	desugaring (syntactic term rewriting) ->
	lifting (separate declarations from executable code)

which can almost certainly be glued together, if only
I knew how (without rewriting the algorithms completely).


-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

