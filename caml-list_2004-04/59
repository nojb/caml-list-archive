Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id HAA13726; Tue, 6 Apr 2004 07:17:27 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA13508 for <caml-list@pauillac.inria.fr>; Tue, 6 Apr 2004 07:17:26 +0200 (MET DST)
Received: from pop19.ucdavis.edu (pop19.ucdavis.edu [169.237.105.29])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i365HOYM026329
	for <caml-list@inria.fr>; Tue, 6 Apr 2004 07:17:25 +0200
Received: from mallorn (mallorn.ucdavis.edu [128.120.141.141])
	by pop19.ucdavis.edu (8.12.10/8.12.9/it-std-5.2.0) with SMTP id i365HNiI002012
	for <caml-list@inria.fr>; Mon, 5 Apr 2004 22:17:23 -0700 (PDT)
Received: by mallorn (sSMTP sendmail emulation); Mon,  5 Apr 2004 22:23:31 -0700
From: "Issac Trotts" <ijtrotts@ucdavis.edu>
Date: Mon, 5 Apr 2004 22:23:31 -0700
To: caml-list@inria.fr
Subject: Re: [Caml-list] failwith, raise and type inference
Message-ID: <20040406052331.GA25906@mallorn>
Mail-Followup-To: ijtrotts@ucdavis.edu, caml-list@inria.fr
References: <200404022028.WAA20083@pauillac.inria.fr> <20040405225238.33087.qmail@web40613.mail.yahoo.com> <20040406100751U.garrigue@kurims.kyoto-u.ac.jp>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20040406100751U.garrigue@kurims.kyoto-u.ac.jp>
User-Agent: Mutt/1.5.5.1+cvs20040105i
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; issac:01 trotts:01 ijtrotts:01 caml-list:01 failwith:01 inference:01 foo:01 precedences:01 parens:01 issac:01 trotts:01 ijtrotts:01 ucdavis:02 ucdavis:02 thread:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 59

> This doesn't look very much related to the original thread.
> But you just have to find an operator with the right associativity.
> 
>     let (@<) f x = f x ;;
>     print_string @< String.capitalize  @< "foo" ^ "bar" ;;
> 
> Since the first character decides the associativity, you might also
> choose @@, @>, or anything you like. ^^, ^@, ... would have the same
> associativity and precedence also.
> Look at section 6.7 of the manual for infix operators and their
> precedences.

Why not just use parens?

-- 
Issac Trotts
http://mallorn.ucdavis.edu/~ijtrotts
(w) 530-757-8789

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

