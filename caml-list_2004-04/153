Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA15459; Thu, 8 Apr 2004 17:23:44 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA15446 for <caml-list@pauillac.inria.fr>; Thu, 8 Apr 2004 17:23:43 +0200 (MET DST)
Received: from calmail-cr.berkeley.edu (mailfarm.Berkeley.EDU [128.32.61.106])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i38FNfYM032572
	for <caml-list@inria.fr>; Thu, 8 Apr 2004 17:23:41 +0200
Received: from [64.162.212.212] (HELO tallman.kefka.frap.net)
  by calmail-cr.berkeley.edu (CommuniGate Pro SMTP 4.1.8)
  with SMTP id 13155861; Thu, 08 Apr 2004 08:23:38 -0700
Received: by tallman.kefka.frap.net (sSMTP sendmail emulation); Thu, 8 Apr 2004 08:23:01 -0700
Date: Thu, 8 Apr 2004 08:23:01 -0700
From: Kenneth Knowles <kknowles@berkeley.edu>
To: John Goerzen <jgoerzen@complete.org>
Cc: Ocaml Mailing List <caml-list@inria.fr>
Subject: Re: [Caml-list] Dynamically evaluating OCaml code
Message-ID: <20040408152301.GA18372@tallman.kefka.frap.net>
References: <20020104004356.GA1672@mev> <Pine.LNX.4.44.0404080046270.25700-100000@localhost.localdomain> <20040408133727.GC29195@excelhustler.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20040408133727.GC29195@excelhustler.com>
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; knowles:99 caml-list:01 dynamically:01 toying:01 generic:01 univie:01 ocaml:01 ocaml:01 address:96 markus:04 i'm:07 www:91 i've:09 idea:11 evaluating:11 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 153


> I've been toying with the
> idea of writing a generic build system for OCaml to address this point
> though.

If you haven't already, take a look at the OCamlMakefile here:
http://www.ai.univie.ac.at/~markus/home/ocaml_sources.html

and ocamlconf (by yours truly) here:
http://kenn.frap.net/ocamlconf/

One of them may your needs, but if not I'm sure the authors would appreciate a
description of their insufficiencies.

Kenn

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

