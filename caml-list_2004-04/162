Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA24535; Thu, 8 Apr 2004 18:37:54 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA19661 for <caml-list@pauillac.inria.fr>; Thu, 8 Apr 2004 18:37:53 +0200 (MET DST)
Received: from quick.recoil.org (quick.recoil.org [194.70.3.133])
	by concorde.inria.fr (8.12.10/8.12.10) with SMTP id i38GbqYM011552
	for <caml-list@inria.fr>; Thu, 8 Apr 2004 18:37:53 +0200
Received: (qmail 17054 invoked by uid 10000); 8 Apr 2004 16:37:52 -0000
Date: Thu, 8 Apr 2004 17:37:52 +0100
From: Anil Madhavapeddy <anil@recoil.org>
To: ijtrotts@ucdavis.edu, caml-list@inria.fr
Subject: Re: [Caml-list] OpenGL
Message-ID: <20040408163752.GA4315@quick.recoil.org>
References: <200404081611.25475.jdh30@cam.ac.uk> <20040407160739.GB13223@mev>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20040407160739.GB13223@mev>
User-Agent: Mutt/1.4.1i
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 2004:99 issac:01 trotts:01 2004:99 real-world:01 inaccurate:01 low-level:01 api:01 lablgl:01 lablgl:01 ocaml:01 ocaml:01 0700,:01 imho:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 162

On Wed, Apr 07, 2004 at 09:07:39AM -0700, Issac Trotts wrote:
> On Thu, Apr 08, 2004 at 04:11:25PM +0100, Jon Harrop wrote:
> > 
> > On Thursday 08 April 2004 3:53 pm, John Goerzen wrote:
> > > I'm just saying that I think that
> > > "Ocaml has a robust set of tools for real-world uses" is inaccurate.
> > 
> > Yes, I agree. Personally, I would like to see a carefully thought out 
> > interface to OpenGL, GLU etc. They are very stable and mature libraries which 
> > were superbly thought out but, unfortunately, suffer from a low-level API 
> > which sometimes ends up in a lot of "void *" raw data getting passed around 
> > and kept. I do not know of an existing, elegant interface to these libraries 
> > in any functional language and, IMHO, it would be a big but very worthwhile 
> > undertaking to create such an interface. I think this would make a good PhD 
> > for someone...
> 
> Did you look at LablGL?

LablGL provides an almost 1-1 mapping between the C and OCaml OpenGL
calls... it works really well when working with the simpler bits of
OpenGL, but it rapidly descends into using a bunch of raw types for
things like the GLU tessellator.

Still, Ocaml/LablGL is a great combination for me so far - drawing
individual scene elements functionally, and rendering them with
'imperative glue' seems a natural fit for Ocaml.

-- 
Anil Madhavapeddy                                 http://anil.recoil.org
University of Cambridge                          http://www.cl.cam.ac.uk

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

