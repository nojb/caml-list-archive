Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA12805; Fri, 30 Apr 2004 22:02:20 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA12597 for <caml-list@pauillac.inria.fr>; Fri, 30 Apr 2004 22:02:18 +0200 (MET DST)
Received: from woodstock.1969.ws (64-215-156-42.eosinc.net [64.215.156.42])
	by concorde.inria.fr (8.12.10/8.12.10) with SMTP id i3UK2GSH013709
	for <caml-list@inria.fr>; Fri, 30 Apr 2004 22:02:17 +0200
Received: (qmail 28875 invoked from network); 30 Apr 2004 19:59:46 -0000
Received: from karl.1969.ws (HELO 1969.ws) (10.3.2.15)
  by woodstock.1969.ws with SMTP; 30 Apr 2004 19:59:46 -0000
Message-ID: <4092B0B3.9040904@1969.ws>
Date: Fri, 30 Apr 2004 13:01:55 -0700
From: Karl Zilles <zilles@1969.ws>
Organization: 1969 Communications,  Inc.
User-Agent: Mozilla Thunderbird 0.5 (Windows/20040207)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Matthieu Sozeau <mattam@altern.org>
CC: caml-list@inria.fr
Subject: Re: [Caml-list] "List.index" or "List.unique" functions?
References: <20040430175429.GB11118@online.fr> <4092A448.6080909@1969.ws> <20040430192927.GA9010@mattam.ath.cx>
In-Reply-To: <20040430192927.GA9010@mattam.ath.cx>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4092B0C8.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 matthieu:01 2004:99 0700,:01 wrote:03 wrote:03 recursive:03 recursive:03 tail:03 tail:03 accumulator:05 functions:05 fri:07 lists:91 index:91 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Matthieu Sozeau wrote:
> On Fri, Apr 30, 2004 at 12:08:56PM -0700, Karl Zilles wrote:
> 
>>List.rev is not tail recursive, so you wouldn't want to use this 
>>function on industrial size lists.
> 
> 
> List.rev and List.rev_map are tail recursive, unlike map. It can be
> really benefical sometimes to use an accumulator in a recursive
> function and reverse it at the end (it certainly wouldn't if List.rev
> was not tail recursive).

You're right.  Not sure how that got into my head.  Thanks for the 
correction.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

