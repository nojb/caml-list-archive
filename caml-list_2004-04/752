Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA05823; Wed, 28 Apr 2004 15:01:41 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA05816 for <caml-list@pauillac.inria.fr>; Wed, 28 Apr 2004 15:01:40 +0200 (MET DST)
Received: from aomori.annexia.org (annexia.force9.co.uk [212.56.101.183])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i3SD1dYM020832
	for <caml-list@inria.fr>; Wed, 28 Apr 2004 15:01:40 +0200
Received: from rich by aomori.annexia.org with local (Exim 3.36 #1 (Debian))
	id 1BIoh0-0005Rz-00
	for <caml-list@inria.fr>; Wed, 28 Apr 2004 14:01:38 +0100
Date: Wed, 28 Apr 2004 14:01:38 +0100
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Re: Common IO structure
Message-ID: <20040428130138.GA20907@redhat.com>
References: <016401c42bc4$b6438840$19b0e152@warp> <20040428.004358.45522587.yoriyuki@mbg.ocn.ne.jp> <016501c42c73$24e64b30$ef01a8c0@warp> <20040428.015800.126758722.yoriyuki@mbg.ocn.ne.jp> <408EEE3E.7050008@socialtools.net> <20040428034415.GB19564@complete.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20040428034415.GB19564@complete.org>
User-Agent: Mutt/1.5.5.1+cvs20040105i
From: Richard Jones <rich@annexia.org>
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 2004:99 2004:99 nio:99 api:01 model:01 api:01 type-safe:01 ltd:98 caml:01 caml:01 classes:03 wrote:03 wrote:03 library:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, Apr 27, 2004 at 10:44:15PM -0500, John Goerzen wrote:
> On Wed, Apr 28, 2004 at 12:35:26AM +0100, Benjamin Geer wrote:
> > In Java there are two I/O libraries, the original one (java.io)[1] and 
> > the new one (java.nio)[2].  The old one has the virtue of being easy to 
> > understand and use, and flexible enough for many situations.  The basic 
> 
> Uh, no.  I don't have the API reference in front of me, but I seem to
> recall somewhere around a dozen or so predefined classes for doing
> I/O...  all sorts of StreamReaders, etc, etc.  Please do not model
> anything after this horribly bloated API.

Agreed!  The java.io.* stuff is a great example of what NOT to do.

Rich.

-- 
Richard Jones. http://www.annexia.org/ http://www.j-london.com/
Merjis Ltd. http://www.merjis.com/ - improving website return on investment
Perl4Caml lets you use any Perl library in your type-safe Objective
CAML programs. http://www.merjis.com/developers/perl4caml/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

