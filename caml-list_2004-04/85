Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id EAA00268; Wed, 7 Apr 2004 04:18:38 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA01198 for <caml-list@pauillac.inria.fr>; Wed, 7 Apr 2004 04:18:36 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i372JQjq031288
	for <caml-list@inria.fr>; Wed, 7 Apr 2004 04:19:27 +0200
Received: from [192.168.1.200] (ppp116-94.lns1.syd2.internode.on.net [150.101.116.94])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i372IJKg098592;
	Wed, 7 Apr 2004 11:48:31 +0930 (CST)
Subject: Re: [Caml-list] Function forward declaration?
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <1081279717.16531.6.camel@qrnik>
References: <60532B15DF92FD4693AA89B2F7E01D8F013F29EC@tmex02>
	 <00cf01c41bd6$391b53a0$0203a8c0@hoedic>
	 <Pine.LNX.4.58.0404061024550.11492@grace.speakeasy.net>
	 <20040406175320.GA19840@redhat.com>  <1081279717.16531.6.camel@qrnik>
Content-Type: text/plain
Message-Id: <1081304297.19232.550.camel@pelican>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 07 Apr 2004 12:18:18 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 marcin:01 'qrczak':01 kowalczyk:01 val:01 val:01 endl:01 pelican:01 flx:01 flx:01 9660:01 glebe:01 int:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 85

On Wed, 2004-04-07 at 05:28, Marcin 'Qrczak' Kowalczyk wrote:

> What would this code do?
> 
>    val g : unit -> int
>    let f () = g ()
>    let x = f ()
>    let y = x + 1
>    let g () = y

Executing the equivalent Felix program:
-----------------------
include "std";

fun f () = { return g (); }
val x = f ();
val y:int = x + 1;
fun g () = { return y; }

print x; print " "; print y; endl;
----------------------
[skaller@pelican] ~/links/flx>flx aa
0 1
-----------------------
By luck, y starts at 0 :)


-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

