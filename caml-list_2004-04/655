Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA08384; Sun, 25 Apr 2004 18:31:00 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA08001 for <caml-list@pauillac.inria.fr>; Sun, 25 Apr 2004 18:30:58 +0200 (MET DST)
Received: from hotmail.com (bay7-f107.bay7.hotmail.com [64.4.11.107])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i3PGUvjq002234
	for <caml-list@inria.fr>; Sun, 25 Apr 2004 18:30:57 +0200
Received: from mail pickup service by hotmail.com with Microsoft SMTPSVC;
	 Sun, 25 Apr 2004 09:30:56 -0700
Received: from 66.139.227.205 by by7fd.bay7.hotmail.msn.com with HTTP;
	Sun, 25 Apr 2004 16:30:56 GMT
X-Originating-IP: [66.139.227.205]
X-Originating-Email: [writetosafi@hotmail.com]
X-Sender: writetosafi@hotmail.com
From: "mohammad siddiqui" <writetosafi@hotmail.com>
To: jdh30@cam.ac.uk, caml-list@inria.fr
Subject: Re: [Caml-list] help
Date: Sun, 25 Apr 2004 16:30:56 +0000
Mime-Version: 1.0
Content-Type: text/plain; format=flowed
Message-ID: <BAY7-F107rcR4ZDgC8100004e0f@hotmail.com>
X-OriginalArrivalTime: 25 Apr 2004 16:30:56.0184 (UTC) FILETIME=[AF18F380:01C42AE2]
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 model:01 model:01 caml-list:01 2004:99 adept:01 bug:01 faq:01 faq:01 beginner's:01 beginners:01 quotient:01 bin:01 compiler:01 caml-bugs:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


John,

I tried exactly what you have told. Its is fine when we just have one 
element in an array of words. If we have more than one, changing the value 
of one changes the values of the rest of the elements.

for example , if the test_model is initialiazed like this:

let test_model =
{ sv_num=0; at_upper_bound=0; b=0.; supvec=Array.make 2
{ docnum=0; queryid=0; costfactor=0.; twonorm_sq=0.; words=Array.make 1
{ wnum=ref 0; weight=0. } }; alpha=0. };

now if i change the values , it chnages all th elements of the array 
"supvec" in model

test_model.supvec.(0).words.(0).wnum := 1;

# test_model;;
- : model =
{sv_num = 0; at_upper_bound = 0; b = 0.;
supvec =
  [|{docnum = 0; queryid = 0; costfactor = 0.; twonorm_sq = 0.;
     words = [|{wnum = {contents = 1}; weight = 0.}|]};
    {docnum = 0; queryid = 0; costfactor = 0.; twonorm_sq = 0.;
     words = [|{wnum = {contents = 1}; weight = 0.}|]}|];
alpha = 0.}

Thanks,

Mohammad S Siddiqui.


it changes the values of wnum in all elements of model.supvec.
{ sv_num=0; at_upper_bound=0; b=0.; supvec=[
{ docnum=0; queryid=0; costfactor=0.; twonorm_sq=0.; words=Array.make 1
{ wnum=ref 0; weight=0. } }; alpha=0. };


>From: Jon Harrop <jdh30@cam.ac.uk>
>To: caml-list@inria.fr
>Subject: Re: [Caml-list] help
>Date: Sun, 25 Apr 2004 13:13:37 +0100
>
>
>I sent you this as an e-mail on Friday:
>
>The following types are a start for your conversion:
>
>type fnum=int and fval=float;
>
>type word = { wnum: fnum ref; weight: fval }
>type doc = { docnum: int; queryid: int; costfactor: float; twonorm_sq: 
>float;
>words: word array }
>type model = { sv_num: int; at_upper_bound: int; b: float; supvec: doc 
>array;
>alpha: float };
>
>The following line creates an example "model" with its values filled in:
>
>let test_model = { sv_num=0; at_upper_bound=0; b=0.; supvec=Array.make 1
>{ docnum=0; queryid=0; costfactor=0.; twonorm_sq=0.; words=Array.make 1
>{ wnum=ref 0; weight=0. } }; alpha=0. };
>
>I deliberately made "wnum" a reference so that it can be set:
>
>test_model.supvec.(0).words.(0).wnum := 1;
>
>If you want to do a really direct conversion then you probably want to make
>each of the fields in each of the records a reference (as I did with 
>"wnum").
>However, you may wish to exercise the functional programming side of ocaml
>and write functions which replace data structures, instead of altering them
>in an imperative style. Although this is unintuitive at first, because an
>imperative language would do lots of copying and deleting of data 
>structures,
>the ocaml compiler is very adept at performing only the changes which are
>made to a data structure...
>
>HTH.
>
>Cheers,
>Jon.
>
>-------------------
>To unsubscribe, mail caml-list-request@inria.fr Archives: 
>http://caml.inria.fr
>Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: 
>http://caml.inria.fr/FAQ/
>Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

_________________________________________________________________
Test your ‘Travel Quotient’ and get the chance to win your dream trip! 
http://travel.msn.com

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

