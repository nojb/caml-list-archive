Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA08798; Fri, 16 Apr 2004 22:03:36 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA08870 for <caml-list@pauillac.inria.fr>; Fri, 16 Apr 2004 22:03:35 +0200 (MET DST)
Received: from postfix4-2.free.fr (postfix4-2.free.fr [213.228.0.176])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i3GK3YYM008164;
	Fri, 16 Apr 2004 22:03:34 +0200
Received: from univ-savoie.fr (grenoble-1-62-147-73-198.dial.proxad.net [62.147.73.198])
	by postfix4-2.free.fr (Postfix) with ESMTP
	id C2B9B93CD7; Fri, 16 Apr 2004 22:03:32 +0200 (CEST)
Message-ID: <40808273.2060604@univ-savoie.fr>
Date: Fri, 16 Apr 2004 21:03:47 -0400
From: Christophe Raffalli <christophe.raffalli@univ-savoie.fr>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6) Gecko/20040115
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Damien Doligez <damien.doligez@inria.fr>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Thread in OCaml
References: <407FB5BA.10607@univ-savoie.fr> <432746EE-8FC1-11D8-806C-00039310CAE8@inria.fr>
In-Reply-To: <432746EE-8FC1-11D8-806C-00039310CAE8@inria.fr>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 8bit
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; raffalli:01 raffalli:01 univ-savoie:01 caml-list:01 allocating:01 invalidates:01 pointers:01 read-only:01 threads:01 speedup:01 savoie:01 chablais:01 73376:01 univ-savoie:01 lama:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> 
> Allocating can call the GC, and the GC can move values around, which
> invalidates pointers.  Even read-only access to the heap is impossible
> during the GC.

I beleived that only the compaction Gc moved value.
But I guess that value are mover from the minor heap to the major heap ...

>> If you think a typical Caml program spend 20% of time during 
>> allocation(which include GC) then 5 threads could run concurrently on 
>> 5 CPUs with some speedup (up to 5 times in the best case).
> 
> 
> If only it was so easy to make a good concurrent GC...

Will there be one for OCaml
-- 
Christophe Raffalli
Université de Savoie
Batiment Le Chablais, bureau 21
73376 Le Bourget-du-Lac Cedex

tél: (33) 4 79 75 81 03
fax: (33) 4 79 75 87 42
mail: Christophe.Raffalli@univ-savoie.fr
www: http://www.lama.univ-savoie.fr/~RAFFALLI
---------------------------------------------
IMPORTANT: this mail is signed using PGP/MIME
At least Enigmail/Mozilla, mutt or evolution
can check this signature
---------------------------------------------

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

