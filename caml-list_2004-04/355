Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA00722; Wed, 14 Apr 2004 22:36:41 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA31556 for <caml-list@pauillac.inria.fr>; Wed, 14 Apr 2004 22:36:41 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i3EKbAjq018303;
	Wed, 14 Apr 2004 22:37:10 +0200
Received: from bourg.inria.fr (bourg.inria.fr [128.93.11.100]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA01233; Wed, 14 Apr 2004 22:36:08 +0200 (MET DST)
Received: from starynke by bourg.inria.fr with local (Exim 4.31)
	id 1BDr6g-0004FG-Hv; Wed, 14 Apr 2004 22:35:38 +0200
Date: Wed, 14 Apr 2004 22:35:38 +0200
To: "Brandon J. Van Every" <vanevery@indiegamedesign.com>, caml-list@inria.fr
Subject: Re: [Caml-list] recompiling bytecode
Message-ID: <20040414203538.GA16279@bourg.inria.fr>
References: <1081945187.20677.710.camel@pelican> <OOEALCJCKEBJBIJHCNJDIEPPHAAB.vanevery@indiegamedesign.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <OOEALCJCKEBJBIJHCNJDIEPPHAAB.vanevery@indiegamedesign.com>
User-Agent: Mutt/1.5.5.1+cvs20040105i
From: Basile Starynkevitch <basile.starynkevitch@inria.fr>
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 basile:01 basile:01 2004:99 brandon:99 2004:99 cannasse:01 binary-only:01 compilations:01 cobol:01 compiles:01 gcc:01 bootstrap:01 gcc:01 bootstrap:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 355

On Wed, Apr 14, 2004 at 11:21:01AM -0700, Brandon J. Van Every wrote:
> skaller wrote:
> > On Wed, 2004-04-14 at 17:50, Nicolas Cannasse wrote:
> >
> > > Other way of thinking is : what do we need in order to get
> > > binary-only distributions ? [....]
> > >  [re: having to recompile everything]
> >
> > Who cares?
> >
> > I've worked on code where turnaround for compilations were:
> >
> > 1970's -- overnight (Fortran)
> > 1980's -- 2-3 hours (Cobol/Pl1)
> > 1990's -- 20-40 minutes (C/C++)
> > 2000's -- 10-60 seconds (Ocaml)
> 
> Because you are not compiling programs large enough and often enough for
> this to become sheer hell? 

Even if Ocaml compiles much faster that Gcc, compile time still counts
a bit. Consider for example the compile time of the compiler compiling
itself:

with ocaml: make world opt bootstrap is around 10 minutes
with gcc: make bootstrap is about an hour.

(the x86 machines I work on are at home 2Ghz, at work 1GHz).

And there is something more that compilation time: correctly handling
the package dependencies, which has been discussed a lot on this list
recently.

Actually, compilation times still count (but there are features in
Ocaml, notably its module system, which help a lot - compare Ocaml
module compilation to C++ template compilation for example).

Regards
-- 
Basile STARYNKEVITCH -- basile dot starynkevitch at inria dot fr
Project cristal.inria.fr - INRIA Rocquencourt
http://cristal.inria.fr/~starynke --- all opinions are only mine 

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

