Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA06346; Thu, 8 Apr 2004 15:50:49 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA06103 for <caml-list@pauillac.inria.fr>; Thu, 8 Apr 2004 15:50:48 +0200 (MET DST)
Received: from tweli.aber.ac.uk (tweli.aber.ac.uk [144.124.16.41])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i38Dpfjq000791
	for <caml-list@inria.fr>; Thu, 8 Apr 2004 15:51:41 +0200
Received: from localhost.localdomain ([127.0.0.1] helo=tweli.aber.ac.uk)
	by tweli.aber.ac.uk with esmtp (Exim 4.20)
	id 1BBZva-0003oi-9q
	for caml-list@inria.fr; Thu, 08 Apr 2004 14:50:46 +0100
Received: from pcsbf.dcs.aber.ac.uk ([193.60.10.80] helo=aber.ac.uk)
	by tweli.aber.ac.uk with esmtp (Exim 4.20)
	id 1BBZus-0003ll-CU
	for caml-list@inria.fr; Thu, 08 Apr 2004 14:50:02 +0100
Message-ID: <407566DF.3040402@aber.ac.uk>
Date: Thu, 08 Apr 2004 14:51:11 +0000
From: Sebastien Ferre <sbf@aber.ac.uk>
Organization: UWA, Computer Science
User-Agent: Mozilla/5.0 (X11; U; Linux i586; en-US; rv:1.0.1) Gecko/20020823 Netscape/7.0
X-Accept-Language: fr-FR, en
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: [Caml-list] swapping large data structures from/to files
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit
X-Sophos-Scanned: from sbf@aber.ac.uk virus scanned OK
X-UWA-Mid: 1BBZus-0003ll-CU
X-UWA-Originating-IP: 193.60.10.80
X-UWA-Bounce-Filter: aHIY86sO3lw
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; aber:99 persistency:01 ndbm:01 persistency:01 ocaml:01 nodes:02 similarly:03 library:03 sebastien:03 data:03 data:03 rewrite:04 efficiency:05 efficient:05 structures:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 142

Hi Caml-ists,

I am interested in handling so large data structures
that they don't fit in main memory. I need 2 things:

1. Persistency of the data structure, preferably in
a file (similarly to NDBM, say).

2. Customized swapping strategy of elements of the data
structure, what should be more efficient than the
virtual memory.

Typically, my data structure is a DAG, and I wish to
keep in memory only a limited amount of nodes at a time.
Hence the necessaty for swapping. It is also important
to have as much as possible in memory, and not merely
accessing the file, for efficiency reasons.

Has anything be done in this direction ?
The library Dbm is fine to me for the persistency,
but it does not work on every platform :-(.
( Would Dbm be difficult to rewrite in OCaml ?)

Thanks,
Sébastien Ferré

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

