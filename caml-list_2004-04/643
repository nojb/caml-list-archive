Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA20848; Sun, 25 Apr 2004 11:11:07 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA20824 for <caml-list@pauillac.inria.fr>; Sun, 25 Apr 2004 11:11:06 +0200 (MET DST)
Received: from smtp.mbg.ocn.ne.jp (mbg.ocn.ne.jp [210.190.142.181])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i3P9B5YM031658
	for <caml-list@inria.fr>; Sun, 25 Apr 2004 11:11:05 +0200
Received: from localhost (p25079-adsau14honb7-acca.tokyo.ocn.ne.jp [220.111.75.79])
	by smtp.mbg.ocn.ne.jp (Postfix) with ESMTP
	id 6A2696471; Sun, 25 Apr 2004 18:11:03 +0900 (JST)
Date: Sun, 25 Apr 2004 18:11:00 +0900 (JST)
Message-Id: <20040425.181100.78702024.yoriyuki@mbg.ocn.ne.jp>
To: ayerkes@speakeasy.net
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] swig like library...
From: Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp>
In-Reply-To: <20040424202443.05043abc.ayerkes@speakeasy.net>
References: <OOEALCJCKEBJBIJHCNJDOEGOHBAB.vanevery@indiegamedesign.com>
	<1082837516.9537.114.camel@pelican.wigram>
	<20040424202443.05043abc.ayerkes@speakeasy.net>
X-Mailer: Mew version 3.3 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 swig:01 yamagata:01 yoriyuki:01 yoriyuki:01 yerkes:01 ayerkes:01 caml-list:01 swig:01 2004:99 bottleneck:01 forking:01 malloc:01 yamagata:01 ocaml:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: art yerkes <ayerkes@speakeasy.net>
Subject: Re: [Caml-list] swig like library...
Date: Sat, 24 Apr 2004 20:24:43 -0500

> I agree that the lack of further automation is a bottleneck for SWIG
> users. I have considered forking some of the core type functions into the
> ocaml module for that reason.

I think swig is nice.  It does the supposed job, quick and dirty
interface to C.

I have only minor complaints.  First, the access to structure fields
involves searching assoc lists, using string as a key.  As a result,
my program spends a lot of time in comparing strings.  A possible and
easy improvement is making access functions for structure fields
accessible from the outside.

Another problem, which may not be a swig problem, is that my program
occasionally crash.  malloc in a structure creation function (new_*)
causes seg fault.  Could you give me a suggestion where I have to
look?

--
Yamagata Yoriyuki

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

