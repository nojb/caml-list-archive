Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA28043; Mon, 26 Apr 2004 16:56:13 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA28553 for <caml-list@pauillac.inria.fr>; Mon, 26 Apr 2004 16:56:12 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i3QEu7YM030133
	for <caml-list@inria.fr>; Mon, 26 Apr 2004 16:56:10 +0200
Received: from [192.168.1.200] (ppp119-113.lns1.syd2.internode.on.net [150.101.119.113])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i3QEtwZq065545;
	Tue, 27 Apr 2004 00:25:59 +0930 (CST)
Subject: Re: [Caml-list] Re: Common IO structure
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Nicolas Cannasse <warplayer@free.fr>
Cc: Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp>, caml-list <caml-list@inria.fr>
In-Reply-To: <015701c42b9a$00065730$ef01a8c0@warp>
References: <007501c429de$7aee90b0$19b0e152@warp>
	 <20040425.175623.71081314.yoriyuki@mbg.ocn.ne.jp>
	 <00cb01c42afd$7fc1b430$19b0e152@warp>
	 <20040426.221606.71081508.yoriyuki@mbg.ocn.ne.jp>
	 <015701c42b9a$00065730$ef01a8c0@warp>
Content-Type: text/plain
Message-Id: <1082991357.9537.539.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 27 Apr 2004 00:55:57 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 cannasse:01 extlib:01 extlib:01 char:01 outputs:01 char:01 buffer:01 buffer:01 9660:01 glebe:01 nicolas:01 nsw:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, 2004-04-27 at 00:23, Nicolas Cannasse wrote:

> Some infos for people who doesn't know about ExtLib IO module :
> ExtLib IO library is bi-polymorphic for performances reasons : it as two
> polymorphic types parameters. A file input for example is a (char,string)
> IO.input so there is two things we can write : chars and strings. Outputs
> have a third parameter that is "what is returned by the close function" : a
> file output is a (char,string,unit) IO.ouput , and a buffer output is a
> (char,string,string) IO.output (the contents of the buffer is returned when
> the ouput is closed).

That's pretty nice concept.

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

