Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA11364; Thu, 15 Apr 2004 19:22:08 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA12066 for <caml-list@pauillac.inria.fr>; Thu, 15 Apr 2004 19:22:07 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i3FHM4YM006654
	for <caml-list@inria.fr>; Thu, 15 Apr 2004 19:22:05 +0200
Received: from [192.168.1.200] (ppp117-181.lns1.syd2.internode.on.net [150.101.117.181])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i3FHM0Zq057300;
	Fri, 16 Apr 2004 02:52:02 +0930 (CST)
Subject: Re: [Caml-list] Camomile-0.5.0
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp>
Cc: caml-list <caml-list@inria.fr>, ocaml-i18n@orcaware.com
In-Reply-To: <20040416.012529.21602566.yoriyuki@mbg.ocn.ne.jp>
References: <20040416.012529.21602566.yoriyuki@mbg.ocn.ne.jp>
Content-Type: text/plain
Message-Id: <1082049719.20677.1262.camel@pelican>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 16 Apr 2004 03:22:00 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 yamagata:01 yoriyuki:01 camomile:01 pervasives:01 char:01 buffer:01 yea:99 collation:01 locale:01 locale:01 deficient:01 api:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 2004-04-16 at 02:25, Yamagata Yoriyuki wrote:

> Camomile is a comprehensive Unicode library for OCaml.  Changes from
> the previous version are,
> 
> * Internationalized Pervasives, Char, String, Buffer modules

Yea! 

> * Search strings by matching collation
> * Binding to ISO C Locale.

I have a question here. The C locale concept does need
a binding, unfortunately. However it is well known
this is a seriously deficient hack, and the use
of C locales should be strongly discouraged.

C++ uses an imperfect but much better concept: locale's
are independent objects which can be passed as arguments
to locale sensitive operations.

So there is an ISO Standard for handling locale information
properly, albiet a C++ one.

In the C world a number of different strategies are used
to handle this problem. Microsoft is the most advanced,
having several different API available for i18n support.
Unix solutions also exist .. more than one :D

I an wondering what your ideas are for the way forward
for Ocaml. 

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

