Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA12985; Wed, 28 Apr 2004 09:06:29 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA12970 for <caml-list@pauillac.inria.fr>; Wed, 28 Apr 2004 09:06:28 +0200 (MET DST)
Received: from postfix3-1.free.fr (postfix3-1.free.fr [213.228.0.44])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i3S76RYM030369
	for <caml-list@inria.fr>; Wed, 28 Apr 2004 09:06:27 +0200
Received: from warp (lns-th2-5f-81-56-197-80.adsl.proxad.net [81.56.197.80])
	by postfix3-1.free.fr (Postfix) with SMTP
	id B01FCC4488; Wed, 28 Apr 2004 09:06:26 +0200 (CEST)
Message-ID: <005801c42cef$34441720$ef01a8c0@warp>
From: "Nicolas Cannasse" <warplayer@free.fr>
To: "Benjamin Geer" <ben@socialtools.net>,
        "Yamagata Yoriyuki" <yoriyuki@mbg.ocn.ne.jp>
Cc: <caml-list@inria.fr>
References: <016401c42bc4$b6438840$19b0e152@warp>	<20040428.004358.45522587.yoriyuki@mbg.ocn.ne.jp>	<016501c42c73$24e64b30$ef01a8c0@warp> <20040428.015800.126758722.yoriyuki@mbg.ocn.ne.jp> <408EEE3E.7050008@socialtools.net>
Subject: Re: [Caml-list] Re: Common IO structure
Date: Wed, 28 Apr 2004 09:05:35 +0200
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1409
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; cannasse:01 warplayer:01 caml-list:01 python:01 cannasse:01 nicolas:01 nicolas:01 byte:01 byte:01 imho:01 int:01 int:01 perl:03 abstract:03 boolean:04 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

[...]
> > I'm interested in (potential) users of IO libraries.  Could someone
> > comment on IO system of Jave, Perl, Python, for example?
>
> In Java there are two I/O libraries, the original one (java.io)[1] and
[...]

For information, here's the java.io.InputStream documentation. All input
streams need to implement theses functions :

 int available()
 void close()
 void mark(int readlimit)
 boolean markSupported()
 abstract  int read()
 int read(byte[] b)
 int read(byte[] b, int off, int len)
 void reset()
 long skip(long n)

IMHO, there is too much, and seekable stream should already be a special
kind of input streams.

Regards,
Nicolas Cannasse

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

