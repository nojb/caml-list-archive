Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA30998; Fri, 16 Apr 2004 16:38:20 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA30909 for <caml-list@pauillac.inria.fr>; Fri, 16 Apr 2004 16:38:18 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i3GEdJjq002515
	for <caml-list@inria.fr>; Fri, 16 Apr 2004 16:39:20 +0200
Received: from [192.168.1.200] (ppp117-65.lns1.syd2.internode.on.net [150.101.117.65])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i3GEc9k2083416;
	Sat, 17 Apr 2004 00:08:10 +0930 (CST)
Subject: Re: [Caml-list] build tools - good vs. fast, both cheap
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: "Brandon J. Van Every" <vanevery@indiegamedesign.com>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <OOEALCJCKEBJBIJHCNJDAEBHHBAB.vanevery@indiegamedesign.com>
References: <OOEALCJCKEBJBIJHCNJDAEBHHBAB.vanevery@indiegamedesign.com>
Content-Type: text/plain
Message-Id: <1082126288.20063.69.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 17 Apr 2004 00:38:08 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 brandon:99 all-ocaml:01 misses:01 crappy:01 crappy:01 bootstrap:01 dependencies:01 tarballs:01 autoconf:01 9660:01 glebe:01 ocaml:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 2004-04-16 at 16:31, Brandon J. Van Every wrote:

> So where are we?  We're having the age old engineering argument, "good,
> fast, cheap, pick any two."  We're all open source developers so we're
> all cheap.  :-)  We've got one camp that sees an all-OCaml build +
> package management system as the goal.  Count me in on that, and I will
> label it the "GOOD AND CHEAP" camp.  We've got another camp that sees
> getting any build + package management system together as quickly as
> possible from readily available parts as the goal.  I will label it the
> "FAST AND CHEAP" camp.

Ok, then my opinion is that this analysis misses the point.

We can do both. First hack together any crappy code that works,
then make something elegant -- using the crappy code to help
bootstrap the effort.

How do we do this? Well, one thing must NOT be crappy,
even for the crappy code -- and that is the specification.
Writing a package manager isn't the problem, IMHO. 
The problem is defining what a package IS, where the pieces go,
and how dependencies are stated.. etc etc.

> What is the ultimate goal?  I say, the ultimate goal is total ease of
> use for an OCaml developer. 

NO! Ocaml developers don't need package managers, we're nerds,
we'll happily use tarballs, CVS .. and even .. gasp .. autoconf.. :D

Package managers are for our CLIENTS.

I want to build something which USES your code,
and be able to distribute MY code and not yours .. and know
my client can get it easily .. preferably my build script
will do that automatically in a uniform way for your code,
fred's code, Joe's code and Mary's code .. 

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

