Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA02668; Tue, 13 Apr 2004 21:49:00 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA02259 for <caml-list@pauillac.inria.fr>; Tue, 13 Apr 2004 21:48:59 +0200 (MET DST)
Received: from mail.davidb.org (adsl-64-172-240-129.dsl.sndg02.pacbell.net [64.172.240.129])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i3DJnwjq011497
	for <caml-list@inria.fr>; Tue, 13 Apr 2004 21:49:58 +0200
Received: from davidb by mail.davidb.org with local (Exim 3.36 #1 (Debian))
	id 1BDTtu-0007Cc-00; Tue, 13 Apr 2004 12:48:54 -0700
Date: Tue, 13 Apr 2004 12:48:54 -0700
From: David Brown <caml-list@davidb.org>
To: Christophe Raffalli <raffalli@univ-savoie.fr>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Scheduling thread problem kernel 2.6
Message-ID: <20040413194854.GB27613@davidb.org>
References: <407B9D6F.70800@univ-savoie.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <407B9D6F.70800@univ-savoie.fr>
User-Agent: Mutt/1.5.4i
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 caml-list:01 2004:99 raffalli:01 threads:01 wrappers:01 wrappers:01 runtime:01 kernel:01 christophe:01 ocaml:01 caml:01 blocking:01 blocking:01 0200,:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 282

On Tue, Apr 13, 2004 at 09:57:35AM +0200, Christophe Raffalli wrote:
> 
> Message posted to comp.os.linux.misc and caml-list.
> 
> I am having a scheduling problem with a Caml program that uses two threads:
> - one CPU intensive thread
> - one interface thread (using Glut + OpenGL) and often doing nothing

What wrappers are you using to call to the interface.  Are there any
blocking calls in it?  You might check the wrappers to these calls to
make sure that they call enter_blocking_section, and
leave_blocking_section.  Otherwise, the entire ocaml runtime will be
blocked.

Dave

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

