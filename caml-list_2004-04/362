Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA16345; Thu, 15 Apr 2004 03:40:17 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA16670 for <caml-list@pauillac.inria.fr>; Thu, 15 Apr 2004 03:40:16 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i3F1eCYM000307
	for <caml-list@inria.fr>; Thu, 15 Apr 2004 03:40:13 +0200
Received: from [192.168.1.200] (ppp116-94.lns1.syd2.internode.on.net [150.101.116.94])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i3F1dJZq032148;
	Thu, 15 Apr 2004 11:09:19 +0930 (CST)
Subject: Re: [Caml-list] recompiling bytecode
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: "Brandon J. Van Every" <vanevery@indiegamedesign.com>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <OOEALCJCKEBJBIJHCNJDIEPPHAAB.vanevery@indiegamedesign.com>
References: <OOEALCJCKEBJBIJHCNJDIEPPHAAB.vanevery@indiegamedesign.com>
Content-Type: text/plain
Message-Id: <1081993158.20677.948.camel@pelican>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 15 Apr 2004 11:39:19 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 brandon:99 compilations:01 cobol:01 ocamlopt:01 9660:01 glebe:01 ocaml:01 ocaml:01 recompile:01 recompile:01 bytecode:01 interfaces:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 362

On Thu, 2004-04-15 at 04:21, Brandon J. Van Every wrote:
> skaller wrote:

> > Who cares?
> >
> > I've worked on code where turnaround for compilations were:
> >
> > 1970's -- overnight (Fortran)
> > 1980's -- 2-3 hours (Cobol/Pl1)
> > 1990's -- 20-40 minutes (C/C++)
> > 2000's -- 10-60 seconds (Ocaml)
> 
> Because you are not compiling programs large enough and often enough for
> this to become sheer hell?  

No, I recompile every 20 seconds when I'm fixing bugs.
True, my current project only has around 60 ml files.

I certainly HAVE worked on systems where compile time
was an issue. That is the point of the data above:
I know all about it.

My build system does have 'dependency analysis'.
Its a simple linear order. I find that is perfectly
acceptable. If I change the parser it's a small pain,
since it's at the head of the list :D

But there is very little choice. Ocamlopt requires
the linear ordering to transmit optimisation information
forward. So you can't just recompile modules based on
dependency on interfaces (as you can in C).

And I'm ecstatic! Ocaml is so fast!

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

