Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA10956; Wed, 7 Apr 2004 16:15:22 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA10921 for <caml-list@pauillac.inria.fr>; Wed, 7 Apr 2004 16:15:21 +0200 (MET DST)
Received: from aomori.annexia.org (annexia.force9.co.uk [212.56.101.183])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i37EFKYM031553
	for <caml-list@inria.fr>; Wed, 7 Apr 2004 16:15:20 +0200
Received: from rich by aomori.annexia.org with local (Exim 3.36 #1 (Debian))
	id 1BBDpn-0001ja-00
	for <caml-list@inria.fr>; Wed, 07 Apr 2004 15:15:19 +0100
Date: Wed, 7 Apr 2004 15:15:19 +0100
Cc: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Function forward declaration?
Message-ID: <20040407141519.GA6618@redhat.com>
References: <60532B15DF92FD4693AA89B2F7E01D8F013F29EC@tmex02> <00cf01c41bd6$391b53a0$0203a8c0@hoedic> <Pine.LNX.4.58.0404061024550.11492@grace.speakeasy.net> <20040406175320.GA19840@redhat.com> <1081279717.16531.6.camel@qrnik> <002901c41c65$b53e4c50$19b0e152@warp> <1081345936.19232.579.camel@pelican>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1081345936.19232.579.camel@pelican>
User-Agent: Mutt/1.5.5.1+cvs20040105i
From: Richard Jones <rich@annexia.org>
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 2004:99 'return':99 crm:99 consultancy:99 ltd:98 compiler:01 compiler:01 ocaml:01 ocaml:01 imho:01 wrote:03 hack:03 variable:03 viewpoint:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 90

On Wed, Apr 07, 2004 at 11:52:17PM +1000, skaller wrote:
> IMHO it isn't forward calling that is broken, 
> but global variables.

A somewhat controversial viewpoint ...  While minimising the use of
global variables might be a theoretical desirable goal, they are very
useful when you're actually writing real programs under the schedule
pressure for real users..

> > and this can be checked by the compiler.
> 
> How? *** 
> 
> What do you suggest if the compiler
> is not sure if a variable is initialised or not?
> Java bans, Felix allows, Ocaml forces the programmer
> to hack.

The trouble seems to be that I have a perfectly practical and
reasonable desire to see prototypes added to the language, because,
believe it or now, it helps to solve some problems in the Real World.
Now if there's some deep reason why it's actually impossible I would
understand, but plenty of other languages (eg. C) seem to have
prototypes and they get along just fine.

(Same, by the way, goes for a 'return' statement which OCaml is crying
out for).

Rich.

-- 
Richard Jones. http://www.annexia.org/ http://www.j-london.com/
Merjis Ltd. http://www.merjis.com/ - improving website return on investment
http://www.winwinsales.co.uk/ - CRM improvement consultancy

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

