Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA03801; Wed, 28 Apr 2004 18:10:39 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA03789 for <caml-list@pauillac.inria.fr>; Wed, 28 Apr 2004 18:10:38 +0200 (MET DST)
Received: from xanadu.ece.ucsb.edu (xanadu.ece.ucsb.edu [128.111.56.51])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i3SGAaYM021482
	for <caml-list@inria.fr>; Wed, 28 Apr 2004 18:10:37 +0200
Received: from [128.111.56.252] (gimli.ece.ucsb.edu [128.111.56.252])
	by xanadu.ece.ucsb.edu (8.12.10/8.12.10) with ESMTP id i3SGAZeO002123
	for <caml-list@inria.fr>; Wed, 28 Apr 2004 09:10:35 -0700 (PDT)
Mime-Version: 1.0 (Apple Message framework v613)
In-Reply-To: <1083154175.9537.944.camel@pelican.wigram>
References: <Pine.LNX.4.44.0404272326450.9460-100000@localhost.localdomain> <1083140676.9537.831.camel@pelican.wigram> <1083151902.29774.18.camel@localhost.localdomain> <1083154175.9537.944.camel@pelican.wigram>
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <927F2151-992E-11D8-AABC-000393942C76@ece.ucsb.edu>
Content-Transfer-Encoding: 7bit
From: Shivkumar Chandrasekaran <shiv@ece.ucsb.edu>
Subject: [Caml-list] Re: [ANN] The Missing Library
Date: Wed, 28 Apr 2004 09:10:31 -0700
To: caml-list@inria.fr
X-Mailer: Apple Mail (2.613)
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; shivkumar:01 shiv:01 generic:01 --shiv--:01 functorial:01 expressive:01 'map':01 polynomial:01 'map':01 ocaml:01 ocaml:01 off-topic:01 purely:02 wrote:03 library:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Again, this might be off-topic, but the purely functional language 
Clean (as of version 2.0 at least) supposedly can do this via ``generic 
programming''. It is not clear though how useful it is.

--shiv--


On Apr 28, 2004, at 5:09 AM, skaller wrote:

> I suggest you try it. I don't know how to answer the question.
> I think the answer is 'C++ templates provide functorial
> polymorphism (polyadicity), Ocaml has no such expressive power.'
>
> HOF's like 'map' and 'fold' make sense
> for polynomial data structures -- lists and trees etc.
> But you have to write 'List.map' or 'Array.map'. There
> is no single 'map' which works for all data structures
> in Ocaml.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

