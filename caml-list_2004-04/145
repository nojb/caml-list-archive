Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA11928; Thu, 8 Apr 2004 16:56:18 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA11387 for <caml-list@pauillac.inria.fr>; Thu, 8 Apr 2004 16:56:17 +0200 (MET DST)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i38EuGYM028390
	for <caml-list@inria.fr>; Thu, 8 Apr 2004 16:56:16 +0200
Received: from fichte.ai.univie.ac.at (markus@localhost [127.0.0.1])
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-6.6) with ESMTP id i38Eu7Hn018764;
	Thu, 8 Apr 2004 16:56:07 +0200
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-6.6) id i38Eu6Hr018763;
	Thu, 8 Apr 2004 16:56:06 +0200
Date: Thu, 8 Apr 2004 16:56:06 +0200
From: Markus Mottl <markus@oefai.at>
To: John Goerzen <jgoerzen@complete.org>
Cc: Ocaml Mailing List <caml-list@inria.fr>
Subject: Re: [Caml-list] Dynamically evaluating OCaml code
Message-ID: <20040408145606.GA18473@fichte.ai.univie.ac.at>
Mail-Followup-To: John Goerzen <jgoerzen@complete.org>,
	Ocaml Mailing List <caml-list@inria.fr>
References: <20020104004356.GA1672@mev> <Pine.LNX.4.44.0404080046270.25700-100000@localhost.localdomain> <20040408133727.GC29195@excelhustler.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20040408133727.GC29195@excelhustler.com>
User-Agent: Mutt/1.4.1i
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 dynamically:01 char:01 hurts:01 lacks:01 productive:01 productive:01 ocaml:01 ocaml:01 mottl:02 silly:02 string:03 string:03 wrote:03 interface:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 145

On Thu, 08 Apr 2004, John Goerzen wrote:
> Also, there is no string_of_char function (I'd have to use fill).

That's not quite true: there is "String.make", which does what you want.

> Similar complaints exist for working with subsets of lists; it's really
> too hard to say "replace elements 4 through 9 with this", "delete
> elements 4 through 9", "return elements 4 through 9", etc.

Yes, it's hard to do this with the current standard library.  The question
is: who needs these functions anyway?  I can't remember ever having felt
a need for them.

> (While we're at it, I think it's silly that there is a list and an
> array type).

I beg your pardon - what else do you have in mind???

> Yes, I could write functions to do all of this, but my point is that
> I shouldn't have to.

The point of the standard library is not to have a function for every
imaginable problem but to have ones that cover standard problems.

> This library problem hurts productivity, and in some cases makes OCaml
> less productive than even C.

Things are not half as bad as you describe them here.  There may be
cases where C is more productive - because you happen to have a library
function for the problem.  But even in this case you can just interface
to C, which is really not that difficult.

There are surely cases where the OCaml standard library lacks generally
useful functionality, but it's usually good enough for most problems.

Regards,
Markus

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

