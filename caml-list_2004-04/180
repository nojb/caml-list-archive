Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA07366; Thu, 8 Apr 2004 21:53:23 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA07306 for <caml-list@pauillac.inria.fr>; Thu, 8 Apr 2004 21:53:22 +0200 (MET DST)
Received: from host1.stonesfair.com (host1.stonesfair.com [208.184.191.145])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i38JsFjq011539
	for <caml-list@inria.fr>; Thu, 8 Apr 2004 21:54:15 +0200
Received: from mev (63-217-154-71.greystoneapts.com [63.217.154.71])
	by host1.stonesfair.com (8.12.8/8.12.8) with ESMTP id i38Ja8dP003517
	for <caml-list@inria.fr>; Thu, 8 Apr 2004 12:36:08 -0700
Received: from ijtrotts by mev with local (Exim 3.35 #1 (Debian))
	id 1BBfZY-0003ew-00
	for <caml-list@inria.fr>; Thu, 08 Apr 2004 12:52:24 -0700
Date: Thu, 8 Apr 2004 12:52:24 -0700
To: caml-list@inria.fr
Subject: Re: [Caml-list] Dynamically evaluating OCaml code
Message-ID: <20040408195224.GC13798@mev>
Mail-Followup-To: ijtrotts@ucdavis.edu, caml-list@inria.fr
References: <20020104004356.GA1672@mev> <20040408133727.GC29195@excelhustler.com> <20040408145606.GA18473@fichte.ai.univie.ac.at> <200404081631.26461.jdh30@cam.ac.uk>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200404081631.26461.jdh30@cam.ac.uk>
User-Agent: Mutt/1.3.28i
From: Issac Trotts <ijtrotts@ucdavis.edu>
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 dynamically:01 issac:01 trotts:01 ijtrotts:01 2004:99 2004:99 gcaml:01 issac:01 trotts:01 ijtrotts:01 ocaml:01 ocaml:01 binary:02 mottl:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 180

On Thu, Apr 08, 2004 at 04:31:26PM +0100, Jon Harrop wrote:
> On Thursday 08 April 2004 3:56 pm, Markus Mottl wrote:
> > On Thu, 08 Apr 2004, John Goerzen wrote:
> > > Similar complaints exist for working with subsets of lists; it's really
> > > too hard to say "replace elements 4 through 9 with this", "delete
> > > elements 4 through 9", "return elements 4 through 9", etc.
> >
> > Yes, it's hard to do this with the current standard library.  The question
> > is: who needs these functions anyway?  I can't remember ever having felt
> > a need for them.
> 
> I could do with them! There are numerous such functions (and nice 
> implementations, like "List.nth -1 l" fetching the last element, more 
> powerful flatten etc.) which Mathematica has and which I miss.

GCaml has the ability to do this kind of total flattenning of nested
lists.  OCaml cannot do it unless you re-express your nested lists as
binary trees or something similar.

-- 
Issac Trotts
http://mallorn.ucdavis.edu/~ijtrotts
(w) 530-757-8789

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

