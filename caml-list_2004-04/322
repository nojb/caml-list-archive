Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA30412; Wed, 14 Apr 2004 13:56:19 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA29497 for <caml-list@pauillac.inria.fr>; Wed, 14 Apr 2004 13:56:18 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i3EBvGjq020441
	for <caml-list@inria.fr>; Wed, 14 Apr 2004 13:57:18 +0200
Received: from [192.168.1.200] (ppp116-94.lns1.syd2.internode.on.net [150.101.116.94])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i3EBsRk2033813;
	Wed, 14 Apr 2004 21:24:29 +0930 (CST)
Subject: Re: [Caml-list] Re: GODI vs. Ocamake
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Nicolas Cannasse <warplayer@free.fr>
Cc: "Brandon J. Van Every" <vanevery@indiegamedesign.com>,
        caml-list <caml-list@inria.fr>
In-Reply-To: <005e01c421f5$2dd45210$ef01a8c0@warp>
References: <OOEALCJCKEBJBIJHCNJDIEOPHAAB.vanevery@indiegamedesign.com>
	 <005e01c421f5$2dd45210$ef01a8c0@warp>
Content-Type: text/plain
Message-Id: <1081943666.20677.685.camel@pelican>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 14 Apr 2004 21:54:27 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 ocamake:01 sourceforge:01 2004:99 cannasse:01 ocamake:01 model:01 python:01 python:01 interscript:01 interscript:01 9660:01 glebe:01 ocaml:01 nicolas:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 322

On Wed, 2004-04-14 at 17:50, Nicolas Cannasse wrote:

> The idea to enable OCamake to be highly configurable would be to have an
> "Ocamake Library" and then you'll write a file "makefile.ml" using that
> library in order to ease compilation and ensure you're writing a
> system-idependant makefile. Then you'll run ocamake (the tool) that will
> dynamicly load the makefile.ml in order to execute it.

Yes. I agree with this model. The first order of the day
is to throw out make and replace it with a general purpose
language + a library which make writing program building
programs easier.

To put this another way, I regard 'autoconf' as one
of the worst evils around. The correct solution is
a combination of Standards and a full scale programming
language -- not hacked up special purpose tools which
are so grossly inadequate they need yet *another*
tool to configure them .. and still don't work right.

For this reason the Felix build processes uses
a high power general purpose language, namely Python.

The package manager is a high power general purpose
programming language, namely Python.

The two processes are one and the same and integrated
with a library of support functions and some lightweight
architecture, namely Interscript, my literate programming,
build, and package management tool .. also written
entirely in Python.

So in theory, it can build and install anything on
any operating system, provided only that Python
and a reasonable subset of the standard distribution's
libraries is installed.

Had I commenced the interscript project more recently,
I might have chosen the bytecode interpreter of Ocaml
instead of Python.

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

