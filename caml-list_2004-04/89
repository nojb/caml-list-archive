Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA08383; Wed, 7 Apr 2004 15:52:42 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA09183 for <caml-list@pauillac.inria.fr>; Wed, 7 Apr 2004 15:52:41 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i37DrUjq011814
	for <caml-list@inria.fr>; Wed, 7 Apr 2004 15:53:32 +0200
Received: from [192.168.1.200] (ppp116-94.lns1.syd2.internode.on.net [150.101.116.94])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i37DqHKg017411;
	Wed, 7 Apr 2004 23:22:21 +0930 (CST)
Subject: Re: [Caml-list] Function forward declaration?
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Nicolas Cannasse <warplayer@free.fr>
Cc: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>,
        caml-list <caml-list@inria.fr>
In-Reply-To: <002901c41c65$b53e4c50$19b0e152@warp>
References: <60532B15DF92FD4693AA89B2F7E01D8F013F29EC@tmex02>
	 <00cf01c41bd6$391b53a0$0203a8c0@hoedic>
	 <Pine.LNX.4.58.0404061024550.11492@grace.speakeasy.net>
	 <20040406175320.GA19840@redhat.com> <1081279717.16531.6.camel@qrnik>
	 <002901c41c65$b53e4c50$19b0e152@warp>
Content-Type: text/plain
Message-Id: <1081345936.19232.579.camel@pelican>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 07 Apr 2004 23:52:17 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 cannasse:01 marginally:01 stupid:01 9660:01 glebe:01 compiler:01 compiler:01 ocaml:01 nicolas:01 imho:01 imho:01 nsw:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 89

On Wed, 2004-04-07 at 16:01, Nicolas Cannasse wrote:
> > What would this code do?

> What about "compilation error : recursive calls in forward declaration" ?

That's the whole point of having
forward declarations though  .. :)

> And what would this code do ?
> 
> let f () = while true do () done

It blocks a thread. Not even marginally stupid,
a very common and correct construction at the heart
of every operating system, it even has a name "wait loop".

> IMHO, function forward
> declaration is such a thing : very useful in most of the cases, still
> theoricaly broken (as your example show), 

IMHO it isn't forward calling that is broken, 
but global variables.

> and this can be checked by the compiler.

How? *** 

What do you suggest if the compiler
is not sure if a variable is initialised or not?
Java bans, Felix allows, Ocaml forces the programmer
to hack.

*** This isn't a dumb question. Sophisticated algorithms
can chase down uninitialised values. The question is,
is it sensible in a language to have an error condition
be so elusive that a human can't determine whether
the error will be issued or not?

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

