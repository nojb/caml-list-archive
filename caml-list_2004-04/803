Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA25404; Thu, 29 Apr 2004 08:56:40 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA25403 for <caml-list@pauillac.inria.fr>; Thu, 29 Apr 2004 08:56:39 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i3T6uZjq015575
	for <caml-list@inria.fr>; Thu, 29 Apr 2004 08:56:37 +0200
Received: from [192.168.1.200] (ppp114-169.lns1.syd3.internode.on.net [150.101.114.169])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i3T6uOZq035801;
	Thu, 29 Apr 2004 16:26:25 +0930 (CST)
Subject: Re: [Caml-list] Calling Ocaml from Python
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Max Powers <max_powers280@hotmail.com>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <BAY9-F17aqyeODnxpi80006c096@hotmail.com>
References: <BAY9-F17aqyeODnxpi80006c096@hotmail.com>
Content-Type: text/plain
Message-Id: <1083221783.9537.1299.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 29 Apr 2004 16:56:24 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 python:01 sourceforge:01 2004:99 swig:01 python:01 swig:01 9660:01 glebe:01 ocaml:01 ocaml:01 nsw:01 snail:02 parser:02 parser:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 2004-04-29 at 15:58, Max Powers wrote:

> So as I see it I've got the following options:
> 1) write the parser in ocaml. Wrap ocaml in C then wrap that using SWIG into 
> a python module.
> 2) write the parser in C. Use SWIG to generate Ocaml and python modules.
> 3) write the parser in python. Use Pycaml to call the python module from 
> Ocaml.

Ocaml is well suited to parsing and analysing
the parsed terms. If you head for (2) or (3) one needs
to ask why bother using Ocaml at all?

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

