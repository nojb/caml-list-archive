Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA11035; Thu, 1 Apr 2004 16:09:03 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA10929 for <caml-list@pauillac.inria.fr>; Thu, 1 Apr 2004 16:09:02 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i31E9jjq005014
	for <caml-list@pauillac.inria.fr>; Thu, 1 Apr 2004 16:09:46 +0200
Received: from [192.168.1.200] (ppp113-158.lns1.syd3.internode.on.net [150.101.113.158])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i31E8gwn062230;
	Thu, 1 Apr 2004 23:38:42 +0930 (CST)
Subject: Re: [Caml-list] exene and ocaml ?
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Ville-Pertti Keinonen <will@exomi.com>
Cc: skaller@users.sourceforge.net, briand@aracnet.com,
        caml-list@pauillac.inria.fr
In-Reply-To: <6C27A642-83BE-11D8-96B0-000393863F70@exomi.com>
References: <16491.38344.186267.44292@soggy.deldotd.com>
	 <BE2D84E8-83AD-11D8-96B0-000393863F70@exomi.com>
	 <1080807590.13854.260.camel@pelican>
	 <6C27A642-83BE-11D8-96B0-000393863F70@exomi.com>
Content-Type: text/plain
Message-Id: <1080828521.13854.358.camel@pelican>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 02 Apr 2004 00:08:41 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 threading:01 implemented:01 posix:01 threads:01 threading:01 real-world:01 practicality:01 conceptually:01 'real:01 model:01 misses:01 'real:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 17

On Thu, 2004-04-01 at 19:24, Ville-Pertti Keinonen wrote:
> On Apr 1, 2004, at 11:19 AM, skaller wrote:

> Yes, my "reasonably well" was in the context of current expectations 
> and tools.  I'd really love for OCaml to have efficient threading 
> (especially if they were implemented using continuations).
> 
> I wouldn't use or recommend a massively multithreaded approach unless 
> there was a practical and efficient enough environment available.  

Indeed it would be a disaster to use Posix threads for this ..

> CML, 
> Oz and presumably Felix would be efficient enough in their threading 
> concepts, but don't seem to have the real-world practicality of OCaml 
> (or mainstream languages).  I'll admit to not having tested Felix yet, 
> although I've downloaded it quite some time ago.

Conceptually, Felix is much more 'real world' in some ways than
Ocaml: it is designed to use the C/C++
object model directly, it is designed to allow almost seamless
binding to C/C++ at the source code and object code level.
For example to map a C++ type T for use in Felix you just write:

	type T = "T";

and to make a function

	T f(T);

available you just write:

	fun f: T -> T = "f($1)";

Where Felix misses out on the 'real world' part is of course
maturity: its pre-alpha, and currently there is only one
user who is trying to build a game with it; I don't even
use it myself at this stage (other than building artificial
tests).

--

John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

