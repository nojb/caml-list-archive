Return-Path: <Jean-Christophe.Filliatre@lri.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 9FB35BC6B
	for <caml-list@yquem.inria.fr>; Thu,  8 Nov 2007 15:52:13 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAGCxMkfAXQInh2dsb2JhbACPAAEBAQgKKQ
X-IronPort-AV: E=Sophos;i="4.21,389,1188770400"; 
   d="scan'208";a="4033016"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 08 Nov 2007 15:52:13 +0100
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id lA8EqCw4017001
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Thu, 8 Nov 2007 15:52:13 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ao8CAGCxMkeBrw8E/2dsb2JhbAA
X-IronPort-AV: E=Sophos;i="4.21,389,1188770400"; 
   d="scan'208";a="4033013"
Received: from ext.lri.fr ([129.175.15.4])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 08 Nov 2007 15:52:12 +0100
Received: from localhost (localhost [127.0.0.1])
	by ext.lri.fr (Postfix) with ESMTP id 90B32A477D;
	Thu,  8 Nov 2007 15:52:12 +0100 (CET)
X-Virus-Scanned: Debian amavisd-new at lri.fr
Received: from ext.lri.fr ([127.0.0.1])
	by localhost (ext.lri.fr [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id F5vMJW2+P6no; Thu,  8 Nov 2007 15:52:12 +0100 (CET)
Received: from [129.175.4.117] (lri4-117 [129.175.4.117])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by ext.lri.fr (Postfix) with ESMTP id 786CDA466F;
	Thu,  8 Nov 2007 15:52:12 +0100 (CET)
Message-ID: <47332472.8030800@lri.fr>
Date: Thu, 08 Nov 2007 16:00:02 +0100
From: =?UTF-8?B?SmVhbi1DaHJpc3RvcGhlIEZpbGxpw6J0cmU=?= <Jean-Christophe.Filliatre@lri.fr>
User-Agent: Thunderbird 1.5.0.14pre (X11/20071023)
MIME-Version: 1.0
To: Till Varoquaux <till.varoquaux@gmail.com>
Cc: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Search for the smallest possible possible Ocaml	segfault....
References: <9d3ec8300711080617g1b023711o1a8f9aa50b7874@mail.gmail.com>
In-Reply-To: <9d3ec8300711080617g1b023711o1a8f9aa50b7874@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-Miltered: at concorde with ID 4733229C.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; filliatre:01 lri:01 ocaml:01 segfault:01 ocaml:01 segfault:01 bytecode:01 nativecode:01 -unsafe:01 lri:01 filliatr:01 wrote:01 caml-list:01 marshal:01 compiling:02 

Till Varoquaux wrote:
>  what is the smallest possible ocaml program you
> can come up with that leads to a reproducible segfault without using
> FFI's Obj or Marshal. 

and I guess you mean in both bytecode and nativecode and without
compiling with -unsafe, right?


-- 
Jean-Christophe Filli√¢tre
http://www.lri.fr/~filliatr/

