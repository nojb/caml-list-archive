Return-Path: <jeremy.yallop@ed.ac.uk>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id CBB26BC6B
	for <caml-list@yquem.inria.fr>; Thu,  8 Nov 2007 17:08:13 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAGvDMkfAXQInh2dsb2JhbACPAAEBAQgKKYEP
X-IronPort-AV: E=Sophos;i="4.21,389,1188770400"; 
   d="scan'208";a="19078934"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 08 Nov 2007 17:08:09 +0100
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id lA8G88cc022204
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Thu, 8 Nov 2007 17:08:09 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAPPCMkeB15VHn2dsb2JhbACPAAEBAQEHBAYJIIEP
X-IronPort-AV: E=Sophos;i="4.21,389,1188770400"; 
   d="scan'208";a="5592109"
Received: from lmtp2.ucs.ed.ac.uk ([129.215.149.71])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 08 Nov 2007 17:08:08 +0100
Received: from [129.215.164.36] (liszt.inf.ed.ac.uk [129.215.164.36])
	by lmtp2.ucs.ed.ac.uk (8.13.8/8.13.7) with ESMTP id lA8G7uAr021342;
	Thu, 8 Nov 2007 16:07:56 GMT
Message-ID: <47333433.40401@ed.ac.uk>
Date: Thu, 08 Nov 2007 16:07:15 +0000
From: Jeremy Yallop <jeremy.yallop@ed.ac.uk>
User-Agent: Mozilla-Thunderbird 2.0.0.6 (X11/20071009)
MIME-Version: 1.0
To: Till Varoquaux <till.varoquaux@gmail.com>
Cc: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Search for the smallest possible possible Ocaml	segfault....
References: <9d3ec8300711080617g1b023711o1a8f9aa50b7874@mail.gmail.com>
In-Reply-To: <9d3ec8300711080617g1b023711o1a8f9aa50b7874@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Edinburgh-Scanned: at lmtp2.ucs.ed.ac.uk
    with MIMEDefang 2.52, Sophie, Sophos Anti-Virus
X-Scanned-By: MIMEDefang 2.52 on 129.215.149.71
X-Miltered: at concorde with ID 47333468.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 segfault:01 bug:01 ocaml:01 segfault:01 bug:01 scanf:01 sscanf:01 printf:01 printf:01 'x':01 val:01 wrote:01 caml-list:01 marshal:01 

Till Varoquaux wrote:
> I have a  open bug in ocaml
> (http://caml.inria.fr/mantis/view.php?id=4321) that leads very simply
> to a segfault. The bug has been there for more than 4 months and is
> still marked as "new". Since it seems to be stalling I thought I might
> give it a gentle prod: what is the smallest possible ocaml program you
> can come up with that leads to a reproducible segfault without using
> FFI's Obj or Marshal. Here is mine:
> 
> Scanf.sscanf  "\"%2$c%1$s\"" "%{%c%s%}" (fun f->Printf.printf f 'x' "xy");;

I've already reported this (on the mailing list) and it's probably been 
fixed by now, but in OCaml 3.10.0:

      !((object val virtual x:'a method x=x end)#x)

Jeremy.

