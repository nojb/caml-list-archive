Return-Path: <shawjef3@msu.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 013FEBC6B
	for <caml-list@yquem.inria.fr>; Fri, 30 Nov 2007 03:15:43 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAGsBT0fAXQInh2dsb2JhbACPQAEBAQgKKQ
X-IronPort-AV: E=Sophos;i="4.23,231,1194217200"; 
   d="scan'208";a="19831655"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 30 Nov 2007 03:15:43 +0100
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id lAU2Fgb0028795
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Fri, 30 Nov 2007 03:15:43 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAGsBT0cjCUt/n2dsb2JhbACPQAEBAQEHBAYJIA
X-IronPort-AV: E=Sophos;i="4.23,231,1194217200"; 
   d="scan'208";a="19831654"
Received: from sys27.mail.msu.edu ([35.9.75.127])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 30 Nov 2007 03:15:42 +0100
Received: from shawjef3 by sys27.mail.msu.edu with local (Exim 4.63 #1)
	id 1IxvPp-00006G-35
	for caml-list@inria.fr; Thu, 29 Nov 2007 21:15:41 -0500
From: "Jeffrey Loren Shaw" <shawjef3@msu.edu>
To: caml-list@inria.fr
Subject: Re: list module with O(1) append function
Date: Thu, 29 Nov 2007 21:15:40 -0500
Mime-Version: 1.0
Content-Type: text/plain; format=flowed; charset="utf-8"
Content-Transfer-Encoding: 7bit
Message-Id: <E1IxvPp-00006G-35@sys27.mail.msu.edu>
X-Virus: None found by Clam AV
X-Miltered: at concorde with ID 474F724E.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 functions:01 append:02 append:02 module:03 module:03 library:03 let:03 cons:04 cons:04 function:08 wondering:09 using:15 edu:15 jeffrey:20 

tail-rec cons: 

let cons a l =
 Append ([a], l) 


Also, me and zmdkrbou at freenode.net #ocaml are wondering what exactly the 
performance characteristics of this list module are. Specifically, when the 
lists are constructed only using library functions.

