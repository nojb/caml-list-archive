Return-Path: <RABIH.ELCHAAR@sgam.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.4 required=5.0 tests=AWL,HTML_MESSAGE,NO_REAL_NAME,
	SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 69AB9BC69
	for <caml-list@yquem.inria.fr>; Thu, 22 Nov 2007 17:42:09 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAKlARUfPLfoknmdsb2JhbACCc4tHdgEBBwQGKYEP
X-IronPort-AV: E=Sophos;i="4.21,452,1188770400"; 
   d="scan'208,217";a="6082864"
Received: from parmail03.sgcib.com ([207.45.250.36])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 22 Nov 2007 17:42:08 +0100
X-IronPort-AV: i="4.21,452,1188770400"; 
   d="scan'208,217"; a="186083236:sNHT1357929292"
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----_=_NextPart_001_01C82D26.93E44ADF"
X-MimeOLE: Produced By Microsoft Exchange V6.5.7226.0
Subject: RE: [Caml-list] C libs from Ocaml libs
Date: Thu, 22 Nov 2007 17:41:49 +0100
Message-ID: <0172C3AE3A0E964797AF43E206C1048F0ED53C@FRCOR-EXMB06.europe.am.socgen>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: [Caml-list] C libs from Ocaml libs
Thread-Index: AcgsbUdvxHHkUaVyRIOAuy8IO1boswAuIM8g
From: <RABIH.ELCHAAR@sgam.com>
To: <viktor.tron.ml@gmail.com>, <caml-list@yquem.inria.fr>
X-OriginalArrivalTime: 22 Nov 2007 16:41:50.0305 (UTC) FILETIME=[94796510:01C82D26]
X-NAI-Spam-Rules: 1 Rules triggered
	BAYES_01=-1.2
X-Spam: no; 0.00; libs:01 ocaml:01 libs:01 cmxa:01 lib:01 appending:01 makefile:01 dirs:01 camljava:01 gsl:01 cmxa:01 jni:01 lib:01 libpath:01 ocamllib:01 

This is a multi-part message in MIME format.

------_=_NextPart_001_01C82D26.93E44ADF
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

Hello Viktor,

I think that some libraries are missing in the link phase.

=20

When a x.cmxa is generated, a x.lib is also generated. You need to pass it =
to the linker when you are generating a c executable or dll, even if you us=
e the .cmxas in your output-obj, because all the relevant code is not just =
there.

=20

I am appending the makefile of some internal code that generated a C Win32 =
dll.

=20

Hope this helps.

=20

JAVA_INC=3D$(JNIINCLUDES)

DIRS=3D-w y -w p -I +camljava -I +gsl -I +schedule -I +ocamlDM -I ../common=
/       =20

LIBS=3Drschedule.cmxa ocamlDMManager.cmxa jni_init.cmxa common.cmxa=20

all: Engine.dll

=20

install: all

            cp Engine.dll ../../bin

=20

# supposes that the linker has access to the j2sdk lib

# rabih /libpath:"d:/appli/j2sdk1.4.1_05/lib"=20

Engine.dll: ocamllib.obj Engine.obj

            link /nologo /dll /out:Engine.dll \

            /libpath:$(OCAML_LIB) /libpath:$(OCAML_CAMLJAVA) /libpath:$(JDK=
HOME)/lib \

            /libpath:$(OCAML_LIB)/schedule /libpath:$(OCAML_LIB)/ocamlDM /l=
ibpath:$(OCAML_LIB)/gsl /NODEFAULTLIB:libc \

            jvm.lib jni.lib  rschedule.lib ocamlDMManager.lib \

            Engine.obj  ocamllib.obj \

            libasmrun.lib libcamljni.lib

=20

Engine.obj: Engine.h Engine.c

            cl /c $(JAVA_INC) -I$(OCAML_LIB) Engine.c

=20

=20

%=2Ecmx: %.mf

            ocamlopt $(DIRS) -c -dtypes $<

=20

=20

ocamllib.obj:ocaml _Engine.cmx

            ocamlopt -dtypes $(DIRS) -output-obj -o ocamllib.obj  $(LIBS) $^

=20

depend:

            echo -n > .depend

            ocamldep $(DIRS) ocaml_Engine.mf >.depend

=20

clean:

            rm -f *.obj

            rm -f *.dll

            rm -f *.lib

            rm -f *.exp

            rm -f *.cm*

            rm -f *.h

            rm -f *~

=20

include .depend

include ../Makefile.config

=20

________________________________

De : caml-list-bounces@yquem.inria.fr [mailto:caml-list-bounces@yquem.inria=
.fr] De la part de viktor tron
Envoy=E9 : mercredi 21 novembre 2007 19:35
=C0 : Caml Mailing List
Objet : Re: [Caml-list] C libs from Ocaml libs

=20

=20

On 21/11/2007, Alain Frisch <alain@frisch.fr > wrote:

viktor tron wrote:
> This is super! how is this on MacOS, I recall one of your comment earlier=
 (on this list?)
> that it doesn't work or something.

Everything should work fine under Mac OS X x86. For PowerPC, I believe=20
that "ocamlc -output-obj -o XXX.so" should be ok but that "ocamlopt
-output-obj -o XXX.so" does not work.

> well, I tried.
> ar -rs foo_caml.o foo_stub.o
> gcc -o foo_test.native foo_test.c -L. -lchainfreq_native -L/sw/lib/ocaml=20

What is the name of the library you want to produce?


sorry, let me be very explicit then:

0)=20
I believed that the following=20
creates the c object containing:=20
(a) main ocaml implementation of foo (b) export API (c) C binding to API (d=
) ocaml startup code=20

$ ocamlopt -output-obj -o foo_caml.o foo.cmxa foo_stub.c foo_export.ml

now I create a lib

$ ar rs libfoo.a foo_caml.o

and happy ever after. Nope.
No matter how I link it with a main c test, I get undefined symbols for sta=
rtup code=20

$ gcc -o foo_test foo_test.c -L. -lfoo -lasmrun

In fact, the following variants don't work:

1)=20
$ ocamlopt -output-obj -o foo_caml.o foo.cmxa foo_stub.c foo_export.ml
$ ar -rs libfoo.a /sw/lib/ocaml/libasmrun.a foo_caml.o=20
$ gcc -o foo_test foo_test.c -L. -lfoo

2)
$ ocamlopt -output-obj -o foo_caml.o foo.cmxa foo_stub.c foo_export.ml
$ cp /sw/lib/ocaml/libasmrun.a libfoo.a=20
$ ar -rs libfoo.a foo_caml.o=20
$ gcc -o foo_test foo_test.c -L. -lfoo=20

so it seems I have to compile foo_stub.o separately...

but even if I do:

3)
$ ocamlopt -output-obj -o foo_caml.o foo.cmxa foo_stub.c foo_export.ml
$ ocamlopt foo_stub.c
$ ar -rs libfoo.a foo_caml.o foo_stub.o=20
$ gcc -o foo_test foo_test.c -L. -lfoo -L/sw/lib/ocaml -lasmrun

4)
$ ocamlopt -output-obj -o foo_caml.o foo.cmxa foo_stub.c foo_export.ml
$ ocamlopt foo_stub.c
$ ar -rs libfoo.a /sw/lib/ocaml/libasmrun.a foo_caml.o=20
$ gcc -o foo_test foo_test.c -L. -lfoo

both fail, the only thing that works is when
(a) I compile stub and caml objects separately AND=20
(b) use copy to bootstrap the runtime

$ ocamlopt -output-obj -o foo_caml.o foo.cmxa foo_stub.c foo_export.ml
$ ocamlopt foo_stub.c
$ cp /sw/lib/ocaml/libasmrun.a libfoo.a=20
$ ar -rs libfoo.a foo_caml.o foo_stub.o
$ gcc -o foo_test foo_test.c -L. -lfoo

In fact ocamlopt does pretty enigmatic things in the background and ar is a=
n entire mystery with this=20
copy thing.=20
If anyone can make me understand the above, I'd be forever grateful.

thanks
Viktor

=20

Ce message et toutes les pieces jointes (ci-apres le "message") sont confid=
entiels et etablis a l'intention exclusive de ses destinataires.=20
Toute utilisation ou diffusion non autorisee est interdite.=20
Tout message electronique est susceptible d'alteration.=20
Societe Generale Asset Management et ses filiales declinent toute responsab=
ilite au titre de ce message s'il a ete altere, deforme ou falsifie.=20
 =20
Decouvrez l'offre et les services de Societe Generale Asset Management sur =
le site www.sgam.fr=20
 =20
                                ********=20
 =20
This message and any attachments (the "message") are confidential and inten=
ded solely for the addressees.=20
Any unauthorised use or dissemination is prohibited.=20
E-mails are susceptible to alteration.=20
Neither Societe Generale Asset Management nor any of its subsidiaries or af=
filiates shall be liable for the message if altered, changed or falsified.=20
=20
Find out more about Societe Generale Asset Management's proposal on www.sga=
m=2Ecom

------_=_NextPart_001_01C82D26.93E44ADF
Content-Type: text/html; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<html xmlns:v=3D"urn:schemas-microsoft-com:vml" xmlns:o=3D"urn:schemas-micr=
osoft-com:office:office" xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Diso-8859-1">
<meta name=3DGenerator content=3D"Microsoft Word 11 (filtered medium)">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"\@SimSun";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:blue;
	text-decoration:underline;}
span.EmailStyle18
	{mso-style-type:personal-reply;
	font-family:Arial;
	color:navy;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;}
div.Section1
	{page:Section1;}
-->
</style>

</head>

<body lang=3DFR link=3Dblue vlink=3Dblue>

<div class=3DSection1>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>Hello Viktor,<o:p><=
/o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>I think that some
libraries are missing in the link phase.<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>When a x.cmxa is
generated, a x.lib is also generated. You need to pass it to the linker when
you are generating a c executable or dll, even if you use the .cmxas in your
output-obj, because all the relevant code is not just there.<o:p></o:p></sp=
an></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>I am appending the
makefile of some internal code that generated a C Win32 dll.<o:p></o:p></sp=
an></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>Hope this helps.<o:=
p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>JAVA_INC=3D$(JNIINC=
LUDES)<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>DIRS=3D-w y -w p -I=
 +camljava
-I +gsl -I +schedule -I +ocamlDM -I ../common/=A0=A0=A0=A0=A0=A0=A0 <o:p></=
o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>LIBS=3Drschedule.cm=
xa
ocamlDMManager.cmxa jni_init.cmxa common.cmxa <o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>all: Engine.dll<o:p=
></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>install: all<o:p></=
o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 cp Engine.dll
.=2E/../bin<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'># supposes that the
linker has access to the j2sdk lib<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'># rabih /libpath:&q=
uot;d:/appli/j2sdk1.4.1_05/lib&quot;
<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>Engine.dll: ocamlli=
b=2Eobj
Engine.obj<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 link /nologo /dll
/out:Engine.dll \<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 /libpath:$(OCAML_LIB)
/libpath:$(OCAML_CAMLJAVA) /libpath:$(JDKHOME)/lib \<o:p></o:p></span></fon=
t></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 /libpath:$(OCAML_LIB)/schedule
/libpath:$(OCAML_LIB)/ocamlDM /libpath:$(OCAML_LIB)/gsl /NODEFAULTLIB:libc =
\<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 jvm.lib jni.lib=A0
rschedule.lib ocamlDMManager.lib \<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 Engine.obj=A0
ocamllib.obj \<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 libasmrun.lib
libcamljni.lib<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>Engine.obj: Engine.h
Engine.c<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 </span></font><font
size=3D2 color=3Dnavy face=3DArial><span lang=3DIT style=3D'font-size:10.0p=
t;font-family:
Arial;color:navy'>cl /c $(JAVA_INC) -I$(OCAML_LIB) Engine.c<o:p></o:p></spa=
n></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
IT
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
IT
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span style=
=3D'font-size:
10.0pt;font-family:Arial;color:navy'>%.cmx: %.mf<o:p></o:p></span></font></=
p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span style=
=3D'font-size:
10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0 ocam=
lopt $(DIRS) -c -dtypes $&lt;<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span style=
=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span style=
=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span style=
=3D'font-size:
10.0pt;font-family:Arial;color:navy'>ocamllib.obj:ocaml _Engine.cmx<o:p></o=
:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span style=
=3D'font-size:
10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0 ocam=
lopt -dtypes $(DIRS) -output-obj
-o ocamllib.obj=A0 $(LIBS) $^<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span style=
=3D'font-size:
10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>depend:<o:p></o:p><=
/span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 echo -n &gt; .depend<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 ocamldep $(DIRS)
ocaml_Engine.mf &gt;.depend<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>clean:<o:p></o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 rm -f *.obj<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 rm -f *.dll<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 rm -f *.lib<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 rm -f *.exp<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 rm -f *.cm*<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 rm -f *.h<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>=A0=A0=A0=A0=A0=A0=
=A0=A0=A0=A0=A0 rm -f *~<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>include .depend<o:p=
></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>include ../Makefile=
.config<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<div>

<div class=3DMsoNormal align=3Dcenter style=3D'text-align:center'><font siz=
e=3D3
face=3D"Times New Roman"><span style=3D'font-size:12.0pt'>

<hr size=3D2 width=3D"100%" align=3Dcenter tabindex=3D-1>

</span></font></div>

<p class=3DMsoNormal><b><font size=3D2 face=3DTahoma><span style=3D'font-si=
ze:10.0pt;
font-family:Tahoma;font-weight:bold'>De&nbsp;:</span></font></b><font size=
=3D2
face=3DTahoma><span style=3D'font-size:10.0pt;font-family:Tahoma'>
caml-list-bounces@yquem.inria.fr [mailto:caml-list-bounces@yquem.inria.fr] =
<b><span
style=3D'font-weight:bold'>De la part de</span></b> viktor tron<br>
<b><span style=3D'font-weight:bold'>Envoy=E9&nbsp;:</span></b> mercredi 21 =
novembre
2007 19:35<br>
<b><span style=3D'font-weight:bold'>=C0&nbsp;:</span></b> Caml Mailing List=
<br>
<b><span style=3D'font-weight:bold'>Objet&nbsp;:</span></b> Re: [Caml-list]=
 C
libs from Ocaml libs</span></font><o:p></o:p></p>

</div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span style=3D=
'font-size:
12.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal style=3D'margin-bottom:12.0pt'><font size=3D3
face=3D"Times New Roman"><span style=3D'font-size:12.0pt'><o:p>&nbsp;</o:p>=
</span></font></p>

<div>

<p class=3DMsoNormal><span class=3Dgmailquote><font size=3D3 face=3D"Times =
New Roman"><span
style=3D'font-size:12.0pt'>On 21/11/2007, <b><span style=3D'font-weight:bol=
d'>Alain
Frisch</span></b> &lt;<a href=3D"mailto:alain@frisch.fr" target=3D"_blank">=
alain@frisch.fr
</a>&gt; wrote:</span></font></span><o:p></o:p></p>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span style=3D=
'font-size:
12.0pt'>viktor tron wrote:<br>
&gt; This is super! how is this on MacOS, I recall one of your comment earl=
ier
(on this list?)<br>
&gt; that it doesn't work or something.<br>
<br>
Everything should work fine under Mac OS X x86. For PowerPC, I believe <br>
that &quot;ocamlc -output-obj -o XXX.so&quot; should be ok but that
&quot;ocamlopt<br>
-output-obj -o XXX.so&quot; does not work.<br>
<br>
&gt; well, I tried.<br>
&gt; ar -rs foo_caml.o foo_stub.o<br>
&gt; gcc -o foo_test.native foo_test.c -L. -lchainfreq_native -L/sw/lib/oca=
ml <br>
<br>
What is the name of the library you want to produce?<o:p></o:p></span></fon=
t></p>

<div>

<p class=3DMsoNormal style=3D'margin-bottom:12.0pt'><font size=3D3
face=3D"Times New Roman"><span style=3D'font-size:12.0pt'><br>
sorry, let me be very explicit then:<br>
<br>
0) <br>
I believed that the following <br>
creates the&nbsp;c object containing: <br>
(a) main ocaml implementation of foo (b) export API (c) C binding to API (d)
ocaml startup code <br>
<br>
$ ocamlopt -output-obj -o foo_caml.o foo.cmxa&nbsp;foo_stub.c foo_export.ml=
<br>
<br>
now I create a&nbsp;lib<br>
<br>
$ ar rs libfoo.a foo_caml.o<br>
<br>
and happy ever after. Nope.<br>
No&nbsp;matter&nbsp;how&nbsp;I&nbsp;link&nbsp;it&nbsp;with&nbsp;a&nbsp;main=
&nbsp;c&nbsp;test,&nbsp;I&nbsp;get&nbsp;undefined&nbsp;symbols&nbsp;for&nbs=
p;startup&nbsp;code
<br>
<br>
$ gcc -o foo_test foo_test.c -L. -lfoo -lasmrun<br>
<br>
In fact, the following variants don't work:<br>
<br>
1) <br>
$ ocamlopt -output-obj -o foo_caml.o foo.cmxa foo_stub.c foo_export.ml<br>
$ ar -rs libfoo.a /sw/lib/ocaml/libasmrun.a&nbsp;foo_caml.o <br>
$ gcc -o foo_test foo_test.c -L. -lfoo<br>
<br>
2)<br>
$ ocamlopt -output-obj -o foo_caml.o foo.cmxa foo_stub.c foo_export.ml<br>
$ cp&nbsp;/sw/lib/ocaml/libasmrun.a&nbsp;libfoo.a <br>
$ ar -rs libfoo.a foo_caml.o <br>
$ gcc -o foo_test foo_test.c -L. -lfoo <br>
<br>
so it seems I have to compile foo_stub.o separately...<br>
<br>
but even if I do:<br>
<br>
3)<br>
$ ocamlopt -output-obj -o foo_caml.o foo.cmxa foo_stub.c foo_export.ml<br>
$ ocamlopt foo_stub.c<br>
$ ar -rs libfoo.a foo_caml.o&nbsp;foo_stub.o <br>
$ gcc -o foo_test foo_test.c -L. -lfoo -L/sw/lib/ocaml -lasmrun<br>
<br>
4)<br>
$ ocamlopt -output-obj -o foo_caml.o foo.cmxa foo_stub.c foo_export.ml<br>
$ ocamlopt foo_stub.c<br>
$ ar -rs libfoo.a /sw/lib/ocaml/libasmrun.a foo_caml.o <br>
$ gcc -o foo_test foo_test.c -L. -lfoo<br>
<br>
both fail, the only thing that works is when<br>
(a) I compile stub and caml objects separately AND&nbsp;<br>
(b)&nbsp;use&nbsp;copy&nbsp;to&nbsp;bootstrap&nbsp;the&nbsp;runtime<br>
<br>
$ ocamlopt -output-obj -o foo_caml.o foo.cmxa foo_stub.c foo_export.ml<br>
$ ocamlopt foo_stub.c<br>
$ cp&nbsp;/sw/lib/ocaml/libasmrun.a&nbsp;libfoo.a <br>
$ ar -rs libfoo.a foo_caml.o foo_stub.o<br>
$ gcc -o foo_test foo_test.c -L. -lfoo<br>
<br>
In fact ocamlopt does pretty enigmatic things in the background and ar is an
entire mystery with this <br>
copy thing. <br>
If anyone can make me understand the above, I'd be forever grateful.<br>
<br>
thanks<br>
Viktor<o:p></o:p></span></font></p>

</div>

</div>

<p class=3DMsoNormal style=3D'margin-bottom:12.0pt'><font size=3D3
face=3D"Times New Roman"><span style=3D'font-size:12.0pt'><o:p>&nbsp;</o:p>=
</span></font></p>

</div>

<pre>Ce message et toutes les pieces jointes (ci-apres le "message") sont c=
onfidentiels et etablis a l'intention exclusive de ses destinataires.=20
Toute utilisation ou diffusion non autorisee est interdite.=20
Tout message electronique est susceptible d'alteration.=20
Societe Generale Asset Management et ses filiales declinent toute responsab=
ilite au titre de ce message s'il a ete altere, deforme ou falsifie.=20
 =20
Decouvrez l'offre et les services de Societe Generale Asset Management sur =
le site www.sgam.fr=20
 =20
                                ********=20
 =20
This message and any attachments (the "message") are confidential and inten=
ded solely for the addressees.=20
Any unauthorised use or dissemination is prohibited.=20
E-mails are susceptible to alteration.=20
Neither Societe Generale Asset Management nor any of its subsidiaries or af=
filiates shall be liable for the message if altered, changed or falsified.=20
=20
Find out more about Societe Generale Asset Management's proposal on www.sga=
m=2Ecom
</pre></body>

</html>

------_=_NextPart_001_01C82D26.93E44ADF--

