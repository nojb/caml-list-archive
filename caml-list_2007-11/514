Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id D40F1BC6B
	for <caml-list@yquem.inria.fr>; Thu, 29 Nov 2007 09:20:39 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ao8CALQFTkfUnw7Ulmdsb2JhbACCOY0MAQEBAQcEBiIH
X-IronPort-AV: E=Sophos;i="4.23,228,1194217200"; 
   d="scan'208";a="4723286"
Received: from ptb-relay01.plus.net ([212.159.14.212])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 29 Nov 2007 09:20:39 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay01.plus.net with esmtp (Exim) id 1IxedR-0006GP-RS
	for caml-list@yquem.inria.fr; Thu, 29 Nov 2007 08:20:37 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Help with simple ocaml memoization problem
Date: Thu, 29 Nov 2007 08:11:28 +0000
User-Agent: KMail/1.9.5
References: <cfb58d850711281917j2fe6efb6uee50068285736ec2@mail.gmail.com> <cfb58d850711282212r64eddad3u713e2eb743526b0a@mail.gmail.com> <005301c83260$15d1a850$017ca8c0@countertenor>
In-Reply-To: <005301c83260$15d1a850$017ca8c0@countertenor>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200711290811.29007.jon@ffconsultancy.com>
X-Spam: no; 0.00; ocaml:01 memoization:01 hash:01 ocaml:01 stdlib:01 frog:98 wrote:01 caml-list:01 inefficient:02 slower:02 benchmark:04 problem:05 space:07 space:07 quite:08 

On Thursday 29 November 2007 08:16, David Allsopp wrote:
> Map is often slower (though hash tables potentially waste a lot of space...

The Map implementation in the OCaml stdlib is also quite inefficient. I did a 
little benchmark once and discovered that Maps actually waste more space than 
Hashtbls.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

