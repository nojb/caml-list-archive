Return-Path: <camaradetux@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.7 required=5.0 tests=AWL,HTML_10_20,HTML_MESSAGE,
	SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 58656BC6C
	for <caml-list@yquem.inria.fr>; Thu,  8 Nov 2007 16:55:16 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAADDAMkfRVca9kmdsb2JhbACCc4wNAQEBAQcCBik
X-IronPort-AV: E=Sophos;i="4.21,389,1188770400"; 
   d="scan'208";a="4204712"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 08 Nov 2007 16:55:16 +0100
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id lA8FtFgN021299
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Thu, 8 Nov 2007 16:55:16 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAADDAMkfRVca9kmdsb2JhbACCc4wNAQEBAQcCBik
X-IronPort-AV: E=Sophos;i="4.21,389,1188770400"; 
   d="scan'208";a="4204710"
Received: from rv-out-0910.google.com ([209.85.198.189])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 08 Nov 2007 16:55:14 +0100
Received: by rv-out-0910.google.com with SMTP id f5so152094rvb
        for <caml-list@inria.fr>; Thu, 08 Nov 2007 07:55:13 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        bh=ImrOXVRFuJDoMvUDaFTQ/0zxMXtxX7UcHceJAy3miws=;
        b=GXu9Kx2ajBBsNJe9GZe75xjIaBWtH2njUPkefG3PphehcVPGuLrCM1WaGzSWp7Vy2smdWmA554eAqOnVYowSxKTJn/iNzDy6TxZ9Rm9dhkZPCXifL7bDJlXqaF1z3AUwtZQnMMXk3CrsTyL0VdqIMEC1NtLViYtDv2V1vZbhBRk=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=ZVriXhc6xClx7P3azfQqPR5YWYs5qblCfH7r0rNI1qfziZgOmFJCInFG1YDD2pb4eJYufmsisq4wolH1S9X3HT6mRP75MF7N7NrbWXgaeTXlmafJJK0snVQdNqolrhFcWQn//Lb7tD7hr/xA3aPs/6HtnTiNKw83sjvCnuuPKCU=
Received: by 10.141.50.17 with SMTP id c17mr333291rvk.1194537313834;
        Thu, 08 Nov 2007 07:55:13 -0800 (PST)
Received: by 10.141.45.3 with HTTP; Thu, 8 Nov 2007 07:55:13 -0800 (PST)
Message-ID: <666572260711080755l7d4c282bo85499ac92db8092b@mail.gmail.com>
Date: Thu, 8 Nov 2007 16:55:13 +0100
From: Adrien <camaradetux@gmail.com>
To: "Till Varoquaux" <till.varoquaux@gmail.com>
Subject: Re: [Caml-list] Search for the smallest possible possible Ocaml segfault....
Cc: "=?ISO-8859-1?Q?Jean-Christophe_Filli=E2tre?=" <Jean-Christophe.Filliatre@lri.fr>,
	caml-list <caml-list@inria.fr>
In-Reply-To: <9d3ec8300711080717x7e64434dge09f65fbb8783815@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_22246_15910654.1194537313825"
References: <9d3ec8300711080617g1b023711o1a8f9aa50b7874@mail.gmail.com>
	 <47332472.8030800@lri.fr>
	 <9d3ec8300711080717x7e64434dge09f65fbb8783815@mail.gmail.com>
X-Miltered: at concorde with ID 47333163.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 segfault:01 bytecode:01 ocaml:01 segfault:01 iirc:01 ocaml-:01 bytecode:01 iirc:01 ocaml-:01 morality:98 morality:98 graph:01 graph:01 caml-list:01 

------=_Part_22246_15910654.1194537313825
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

With the bytecode interpreter, I've been able to make ocaml segfault by
using Graphics.
I don't know how reproductible this is but iirc, I had to
Graphics.open_graph "" then close the window with the cross on the window
and last reuse Graphics.open_graph "" (has maybe to be done twice with a
Graphics.close_graph() between).
I encountered this on ocaml-3.10.0 under linux. I did not try to reproduce
it as it wasn't my goal and right now I don't have ocaml available. Anyway,
this or something very similar would raise a fatal I/O error which
surprinsigly was sometimes fatal to the bytecode interpreter but not always.

Morality : use close_graph() ;)


 ---

Adrien Nader

------=_Part_22246_15910654.1194537313825
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

With the bytecode interpreter, I&#39;ve been able to make ocaml segfault by using Graphics.<br>I don&#39;t know how reproductible this is but iirc, I had to Graphics.open_graph &quot;&quot; then close the window with the cross on the window and last reuse 
Graphics.open_graph &quot;&quot; (has maybe to be done twice with a Graphics.close_graph() between).<br>I encountered this on ocaml-3.10.0 under linux. I did not try to reproduce it as it wasn&#39;t my goal and right now I don&#39;t have ocaml available. Anyway, this or something very similar would raise a fatal I/O error which surprinsigly was sometimes fatal to the bytecode interpreter but not always.
<br><br>Morality : use close_graph() ;)<br><br><br>&nbsp;---<br><br>Adrien Nader<br><br>

------=_Part_22246_15910654.1194537313825--

