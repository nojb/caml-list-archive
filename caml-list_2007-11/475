Return-Path: <jeanmarc.eber@lexifi.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id F1204BC6B
	for <caml-list@yquem.inria.fr>; Tue, 27 Nov 2007 11:23:56 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAA5/S0fB/BYXlmdsb2JhbACPQQEBAQEHBAYiBw
X-IronPort-AV: E=Sophos;i="4.23,219,1194217200"; 
   d="scan'208";a="6224471"
Received: from smtp25.orange.fr ([193.252.22.23])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 27 Nov 2007 11:23:56 +0100
Received: from me-wanadoo.net (localhost [127.0.0.1])
	by mwinf2559.orange.fr (SMTP Server) with ESMTP id 3573F1C000A5
	for <caml-list@yquem.inria.fr>; Tue, 27 Nov 2007 11:23:56 +0100 (CET)
Received: from [192.168.1.58] (APuteaux-154-1-91-10.w83-204.abo.wanadoo.fr [83.204.166.10])
	by mwinf2559.orange.fr (SMTP Server) with ESMTP id F2E111C00086;
	Tue, 27 Nov 2007 11:23:55 +0100 (CET)
X-ME-UUID: 20071127102355994.F2E111C00086@mwinf2559.orange.fr
Message-ID: <474BF061.2070604@lexifi.com>
Date: Tue, 27 Nov 2007 11:24:33 +0100
From: Jean-Marc EBER <jeanmarc.eber@lexifi.com>
User-Agent: Thunderbird 2.0.0.9 (Windows/20071031)
MIME-Version: 1.0
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Floating exception
References: <47471716.3020304@irisa.fr> <200711232236.39691.jon@ffconsultancy.com>
In-Reply-To: <200711232236.39691.jon@ffconsultancy.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit
X-Spam: no; 0.00; lexifi:01 ocaml:01 trivial:01 bindings:01 ocamlopt:01 jeanmarc:01 eber:01 eber:01 binaries:01 exception:01 caml-list:01 jean-marc:01 jean-marc:01 behaviour:01 binary:02 

Could you please elaborate ?
Afer many years of industrial use and commercial distribution of OCaml generated 
binaries especially in the Win32 world (our clients run our software that 
includes non trivial bindings to external C routines on many different versions 
of Windows and hardware configurations), we could not notice this buggy behaviour.

Jean-Marc Eber


Jon Harrop a Ã©crit :
> 
> Too many of our users found the binary generated by ocamlopt to be unusably 
> unreliable, typically due to random segfaulting that we could not reproduce. 

