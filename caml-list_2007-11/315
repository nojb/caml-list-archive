Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 77BEEBC69
	for <caml-list@yquem.inria.fr>; Thu, 15 Nov 2007 15:52:16 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApkZAKLrO0fUnw7XYmdsb2JhbACCOow8FQQGEBk
X-IronPort-AV: E=Sophos;i="4.21,420,1188770400"; 
   d="scan'208";a="4525680"
Received: from fhw-relay07.plus.net ([212.159.14.215])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 15 Nov 2007 15:52:16 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by fhw-relay07.plus.net with esmtp (Exim) id 1Isg4l-0004G6-EJ
	for caml-list@yquem.inria.fr; Thu, 15 Nov 2007 14:52:15 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Compiler feature - useful or not?
Date: Thu, 15 Nov 2007 14:43:11 +0000
User-Agent: KMail/1.9.5
References: <Pine.LNX.4.64.0711140116030.17159@martin.ec.wink.com> <20071115105320.GA29693@snarc.org> <473C4E27.60506@mcmaster.ca>
In-Reply-To: <473C4E27.60506@mcmaster.ca>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200711151443.11860.jon@ffconsultancy.com>
X-Spam: no; 0.00; compiler:01 camlp:01 ocaml:01 ocaml:01 camlp:01 trivial:01 48,:98 frog:98 wrote:01 caml-list:01 construct:02 dialects:03 jacques:03 fork:05 thousands:91 

On Thursday 15 November 2007 13:48, Jacques Carette wrote:
> Personally, I think the best situation would be if camlp4 were
> unnecessary.  But there is a lot of PL research to be done before that's
> possible...

How much more PL research do we need to tell us that OCaml is crying out for 
a "try .. finally" construct?

> - It splinters the language into dialects.

Fork the OCaml distribution instead of using camlp4.

There are now thousands of OCaml programmers dying for trivial additions like 
this, many of whom would contribute if they could and a single forked dialect 
would improve in practical terms much faster than the current OCaml is.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

