Return-Path: <waterson@maubi.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 51141BC69
	for <caml-list@yquem.inria.fr>; Mon, 12 Nov 2007 06:56:18 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ah4FADZ6N0dLAQv9/2dsb2JhbACBWw
X-IronPort-AV: E=Sophos;i="4.21,403,1188770400"; 
   d="scan'208";a="5685781"
Received: from adsl-75-1-11-253.dsl.scrm01.sbcglobal.net (HELO lumpy.maubi.net) ([75.1.11.253])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 12 Nov 2007 06:56:17 +0100
Received: from [192.168.1.15] ([75.1.11.254])
	by lumpy.maubi.net (8.13.6/8.13.6) with ESMTP id lAC5r7wI019372
	for <caml-list@yquem.inria.fr>; Sun, 11 Nov 2007 21:53:07 -0800 (PST)
	(envelope-from waterson@maubi.net)
Mime-Version: 1.0 (Apple Message framework v752.3)
Content-Transfer-Encoding: 7bit
Message-Id: <86183D4E-184A-4F26-84F9-93411D070B38@maubi.net>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
To: caml-list@yquem.inria.fr
From: Chris Waterson <waterson@maubi.net>
Subject: debugging memory leaks
Date: Sun, 11 Nov 2007 21:56:06 -0800
X-Mailer: Apple Mail (2.752.3)
X-Spam: no; 0.00; ocaml:01 minimally:01 allocations:01 warmly:01 heap:01 heap:01 enumerate:01 caml:02 objects:02 executable:03 debugging:03 chris:06 chris:06 useful:09 memory:09 

I have a fairly substantial OCaml application that leaks memory.   
What tools or techniques do people use to track down memory leaks?   
Minimally, is there a way to enumerate the live objects in the heap?

I've tried "valgrind" on a natively-compiled executable, but all the  
"real" allocations are hidden in the Caml heap, so it's not very useful.

Any recommendations would be warmly welcomed.  Thanks in advance...

chris

