Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id C7E30BC6B
	for <caml-list@yquem.inria.fr>; Tue, 27 Nov 2007 12:28:08 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAANKNS0fUnw7WiGdsb2JhbACCOY0FAQEBCAQGERiBDg
X-IronPort-AV: E=Sophos;i="4.23,219,1194217200"; 
   d="scan'208";a="4967513"
Received: from ptb-relay03.plus.net ([212.159.14.214])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 27 Nov 2007 12:28:08 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay03.plus.net with esmtp (Exim) id 1Iwybn-0005tx-Cc
	for caml-list@yquem.inria.fr; Tue, 27 Nov 2007 11:28:07 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Floating exception
Date: Tue, 27 Nov 2007 11:19:25 +0000
User-Agent: KMail/1.9.5
References: <47471716.3020304@irisa.fr> <200711232236.39691.jon@ffconsultancy.com> <474BF061.2070604@lexifi.com>
In-Reply-To: <474BF061.2070604@lexifi.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Message-Id: <200711271119.26078.jon@ffconsultancy.com>
X-Spam: no; 0.00; ocamlopt:01 ocaml:01 bindings:01 lablgl:01 bytecode:01 dependencies:01 ocaml:01 trivial:01 bindings:01 lablgtk:01 pulled:98 frog:98 wrote:01 wrote:01 compile:01 

On Tuesday 27 November 2007 10:24, you wrote:
> Jon Harrop a =C3=A9crit :
> > Too many of our users found the binary generated by ocamlopt to be
> > unusably unreliable, typically due to random segfaulting that we could
> > not reproduce.
>
> Could you please elaborate ?

There isn't really anything more that I can add. We wrote the OCaml the=20
obvious way (no unsafe code) and used the conventional bindings (LablGL) an=
d=20
distributed the binary, only to find that too many people had reliability=20
problems for it to be a viable product so we pulled it.

Now we're trying to give it away in bytecode form and even that is a major=
=20
PITA because we need to install and compile against (including dependencies=
)=20
several different minor-minor versions of OCaml just to garner enough=20
interest to find out (from the only person who has given us feedback having=
=20
managed to compile it out of 75 downloads so far this month) that even thes=
e=20
trivial demos don't work.

My guess is that the glut libraries installed on these computers are causin=
g=20
the problems. Perhaps we should write bindings to GLX or use LablGTK2 to=20
evade glut and see what happens but, of course, we cannot reproduce the=20
problem here and there are a huge number of variations we could try without=
=20
having any real idea of what is going wrong.

=2D-=20
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

