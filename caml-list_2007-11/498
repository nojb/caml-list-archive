Return-Path: <alain@frisch.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 81F4EBC6B
	for <caml-list@yquem.inria.fr>; Wed, 28 Nov 2007 19:15:59 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAGo/TUfB/BYfhWdsb2JhbACPPgEBAQgEBg8TBw
X-IronPort-AV: E=Sophos;i="4.23,225,1194217200"; 
   d="scan'208";a="5029141"
Received: from smtp20.orange.fr ([193.252.22.31])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 28 Nov 2007 19:15:59 +0100
Received: from me-wanadoo.net (localhost [127.0.0.1])
	by mwinf2021.orange.fr (SMTP Server) with ESMTP id C99EC1C000CD
	for <caml-list@yquem.inria.fr>; Wed, 28 Nov 2007 19:15:58 +0100 (CET)
Received: from [192.168.1.59] (APuteaux-154-1-91-10.w83-204.abo.wanadoo.fr [83.204.166.10])
	by mwinf2021.orange.fr (SMTP Server) with ESMTP id 987E11C000CB;
	Wed, 28 Nov 2007 19:15:58 +0100 (CET)
X-ME-UUID: 20071128181558624.987E11C000CB@mwinf2021.orange.fr
Message-ID: <474DB04B.30909@frisch.fr>
Date: Wed, 28 Nov 2007 19:15:39 +0100
From: Alain Frisch <alain@frisch.fr>
User-Agent: Thunderbird 2.0.0.9 (Windows/20071031)
MIME-Version: 1.0
To: Raj <rajb@rice.edu>
Cc: Caml mailing list <caml-list@yquem.inria.fr>
Subject: Re: [Caml-list] Disabling the OCaml garbage collector
References: <ECF91B46-A0FC-46FD-BFAD-7BE07CEF1C85@rice.edu>	<474C48C5.708@starynkevitch.net> <474DADF7.5020204@rice.edu>
In-Reply-To: <474DADF7.5020204@rice.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; frisch:01 frisch:01 ocaml:01 mutable:01 ocaml:01 garbage:01 wrote:01 caml-list:01 alain:01 alain:01 explicitly:02 caml:02 caml:02 in-place:02 objects:02 

Raj wrote:
> The issue for me is that I need to be able to modify mutable objects in 
> OCaml (eg. array-modification in-place) from both OCaml and C/Python. 
> However, the OCaml GC moves things around while the execution is in 
> C/Python and this crashes my program.

Are you sure?

The OCaml GC is triggered only when Caml memory blocks are allocated 
(from Caml or C code) or when you call it explicitly.

-- Alain

