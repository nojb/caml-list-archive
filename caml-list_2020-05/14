Return-Path: <SRS0=tH0r=62=polytechnique.org=alan.schmitt@bounces.m4x.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 004A87EEE8
	for <caml-list@sympa.inria.fr>; Tue, 12 May 2020 09:45:39 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=Pass smtp.pra=alan.schmitt@polytechnique.org; spf=Pass smtp.mailfrom=SRS0=tH0r=62=polytechnique.org=alan.schmitt@bounces.m4x.org; spf=Pass smtp.helo=postmaster@mx1.polytechnique.org
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  alan.schmitt@polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=pra; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=tH0r=62=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="alan.schmitt@polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  SRS0=tH0r=62=polytechnique.org=alan.schmitt@bounces.m4x.org
  designates 129.104.30.34 as permitted sender)
  identity=mailfrom; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=tH0r=62=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="SRS0=tH0r=62=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  postmaster@mx1.polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=helo; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=tH0r=62=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="postmaster@mx1.polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
IronPort-PHdr: =?us-ascii?q?9a23=3ASTpFXhcT/gwfUmUOxNu2dqiulGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc25ZxyN2/xhgRfzUJnB7Loc0qyK6v2mCDVLuMzY+Fk5M7V0Hycfjs?=
 =?us-ascii?q?sXmwFySOWkMmbcaMDQUiohAc5ZX0Vk9XzoeWJcGcL5ekGA6ibqtW1aFRrwLxd6?=
 =?us-ascii?q?KfroEYDOkcu3y/qy+5rOaAlUmTaxe7x/IAi2oAnLssQanIRuJrsvxhfUv3BFZ/?=
 =?us-ascii?q?lYyWR0KFyJgh3y/N2w/Jlt8yRRv/Iu6ctNWrjkcqo7ULJVEi0oP3g668P3uxbD?=
 =?us-ascii?q?SxCP5mYHXWUNjhVIGQnF4wrkUZr3ryD3q/By2CiePc3xULA0RTGv5LplRRP0lC?=
 =?us-ascii?q?sKMSMy/2bKhMxtl6JbuAyuqABjw4DaZ4GVMeBxfqLbfdgHQWZMUcJcWylHD4+8?=
 =?us-ascii?q?bIUPCfQBPedDr4n8vFQOqQWxDhSiBePo0D9Hm2T21rA+3+kvDQ3K2QotFM8Mvn?=
 =?us-ascii?q?vJttX4LKccX/6owqfGzjvMYO9Z1Czn54TUaB0su+2AUa5yfMfX1EIhFxnFjlKV?=
 =?us-ascii?q?qYH9Iz6V0v4Cs26G5OR9Se2vi2snqwBtojiz28whjZPGhoYPxVDC7yl525o6Jd?=
 =?us-ascii?q?29SE56fd6kDIBdtzmdN4tyQsIiX39ntzo6yr0AuJ67ZTUKx4o9yx7YcfyHfJGF?=
 =?us-ascii?q?7xT+X+mePTl2nmhqeK6jhxms60igzPXxW8m73VpWrCdIjMXBu24T2hDP6MWKRe?=
 =?us-ascii?q?Zx8luh1zuT1w3e6P1JLE43mKfaJJAswaA8mJUSvEndAyL6hEX4gq+Ye0gi5+Om?=
 =?us-ascii?q?5ePnYrD8qZ+dMY95khn+Pboymsy+HeQ3LBAOX2+e+eS5yrLv50v5T6tWjvEula?=
 =?us-ascii?q?nWrIrVJcEfpqKjBA9VyIkj5w6wDzenzNQYnWQHI0lfdB2biIjpPknCIP/5Dfej?=
 =?us-ascii?q?h1Sjiixky+raMb3mB5XBNmXDn6vhfbZ890FT0gUzzddF651KF74BPer/Wk73tN?=
 =?us-ascii?q?zCDx82KRa4w+j9CNll2YMeWH6PAq+EMKzJq1OE/P4gI+6JZIMNpjb9KuMl5+P0?=
 =?us-ascii?q?gn89gl8dYbSp0oYWaHC/BPhpP0KZYX/0jtcOEGcKogo+TPHxh1GYUD5TYG6+X6?=
 =?us-ascii?q?Mh6TA7DIKmCZ3PRoe3gLyO2iqwA55YZnheB1yRD3vlc5+IV+oQZC+dOMNsnCAI?=
 =?us-ascii?q?WaKvRoIuzR2jtgz3x6B5Iufb5CEUr4/v2ddv6+HOmhw+6Tp5BNmH3W6XVWF7hG?=
 =?us-ascii?q?YISic23K9hpUx9zU+O0a13gvBFD9BT//RJUgM6NJ7A0eN1F9DyWgTAfteQVVap?=
 =?us-ascii?q?XM+qATYrTtI+29MOYkB9FMu+jh3bwiamHbsYm6aWCJAo/a/QxXb8K9pnx3vI26?=
 =?us-ascii?q?Qtl1wmTdFONW2iiK5/7Q/TB4vRnkuEi6ikaLgQ0TbR9GmB0WaOpllVXQ9uXajd?=
 =?us-ascii?q?RXAfYU/WrNTl5kzcU7CuCbInMgpYyc6fNKRGcNrpjU9JRPr7ItveZ3i+m2GqCR?=
 =?us-ascii?q?aT2ryMbI/qe2QB3CXBE0ULiAcT/WuANQciGCihuHjSDDlhGFPgeU/s9vN+qHyj?=
 =?us-ascii?q?Qk8u0w6Kd1Fh16ay+hMNmfOTUfYT3rYdtCclqjV0B0q90snNC9uAogphZL9Tbc?=
 =?us-ascii?q?k84FdBz2LZthZyMoauL6B41RYidFE9u1zonV0jDppGucw1qjUswRYkberS20xH?=
 =?us-ascii?q?PXvQiZvvPJXTK3Lu51auZ7/S3hfZytnAvu8E4fE87lHipx2BF0w48nwh3cMRm3?=
 =?us-ascii?q?Cb443iCAsJTYm3VVw99gRzo7/dcm8w+tD6z3ppZICwuzmK4NkpAeo51l70dtNW?=
 =?us-ascii?q?NuWfHw/3EtEGL9CpLP02llOpaBMdIe0U87Q7aZD1P8Ca0bKmab4z1Amtin5Ktd?=
 =?us-ascii?q?8sixPex29HUufNmq097bSd1wqDWS37iQ7+4MrwhIZPaCpUGzavjy/+C9wIP/Eg?=
 =?us-ascii?q?TcMwEW6rZvaP6JBmnZe0CixA81qyG14N2MmoYAefKVvn0l8JjBlFkTmcgSK9ig?=
 =?us-ascii?q?dMvXQpo66YhnecxvS7MgIAPn9XSWJii1b1PIXyiMoVDhGl?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0D8BgCuU7pehyIeaIFmg3WBFgFdVTIsg?=
 =?us-ascii?q?2RAgV2HJIV5hR+FMpJJA1APAQMBDBgBBQ4BAgQBAYMOgTYCF4F4HQYBBTMTAhA?=
 =?us-ascii?q?BAQUBAQECAQIDBAETAQEBCgsJCCmFMQgkDII7DAwDA4MgAQoOCQQGOwQBCRwjA?=
 =?us-ascii?q?wwIAQYDAgQNARcBFAoXARIUBoMMAYJ8BAEKkzSbeX8zhDoBAwMCCwMBDgkmhBG?=
 =?us-ascii?q?BQA0CE4EWhSyDHYN7D4FMP4ERgmJsgk4OCwEBAQEBGYEGIQEBCE4ZgkWCYASOI?=
 =?us-ascii?q?y0kaYgziDyCD5AQB4JNfwSGI3WFf4QFhiaCXIEOh1mRdyGPfIcudYE3hVWOI4E?=
 =?us-ascii?q?/KoFHHgwHMxowIiGCNQEBATEJXw1WjGGCXwEFMBeDT2pUgSaBdTuFRD8zAgEBA?=
 =?us-ascii?q?TICBgEHAQEDCXUBAQUTCwGLSYIfAQE?=
X-IPAS-Result: =?us-ascii?q?A0D8BgCuU7pehyIeaIFmg3WBFgFdVTIsg2RAgV2HJIV5hR+?=
 =?us-ascii?q?FMpJJA1APAQMBDBgBBQ4BAgQBAYMOgTYCF4F4HQYBBTMTAhABAQUBAQECAQIDB?=
 =?us-ascii?q?AETAQEBCgsJCCmFMQgkDII7DAwDA4MgAQoOCQQGOwQBCRwjAwwIAQYDAgQNARc?=
 =?us-ascii?q?BFAoXARIUBoMMAYJ8BAEKkzSbeX8zhDoBAwMCCwMBDgkmhBGBQA0CE4EWhSyDH?=
 =?us-ascii?q?YN7D4FMP4ERgmJsgk4OCwEBAQEBGYEGIQEBCE4ZgkWCYASOIy0kaYgziDyCD5A?=
 =?us-ascii?q?QB4JNfwSGI3WFf4QFhiaCXIEOh1mRdyGPfIcudYE3hVWOI4E/KoFHHgwHMxowI?=
 =?us-ascii?q?iGCNQEBATEJXw1WjGGCXwEFMBeDT2pUgSaBdTuFRD8zAgEBATICBgEHAQEDCXU?=
 =?us-ascii?q?BAQUTCwGLSYIfAQE?=
X-IronPort-AV: E=Sophos;i="5.73,383,1583190000"; 
   d="scan'208,217";a="348368842"
X-MGA-submission: =?us-ascii?q?MDHWoUukpS6tm23xTMiglys3FUaZWfIs8B/1Kk?=
 =?us-ascii?q?FbWrRJAJVfb9ASU2fAuTpfwO0V45Z7uAKhTQ2yhAzvlSSZhKrVNA03VF?=
 =?us-ascii?q?B6eDfstrajIYUfoHEitbfIAUefmLlwFMowNWsKIs7NNVLjANSyFV3hEi?=
 =?us-ascii?q?opQ4qmcMWGtgIe+oNKxdsIpg=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 12 May 2020 09:45:29 +0200
Received: from set (cbg35-2-78-242-14-140.fbx.proxad.net [78.242.14.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id 17B3F565712;
	Tue, 12 May 2020 09:45:27 +0200 (CEST)
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr, comp@lists.orbitalfox.eu
Date: Tue, 12 May 2020 09:45:26 +0200
Message-ID: <87h7wl38bt.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue May 12 09:45:27 2020 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.072187, queueID=820F45657A7
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: base64

SGVsbG8NCg0KSGVyZSBpcyB0aGUgbGF0ZXN0IE9DYW1sIFdlZWtseSBOZXdz
LCBmb3IgdGhlIHdlZWsgb2YgTWF5IDA1IHRvIDEyLA0KMjAyMC4NCg0KVGFi
bGUgb2YgQ29udGVudHMNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQpMb29raW5nIGZvciAibG92ZWx5
LCBpZGlvbWF0aWMiIGV4YW1wbGVzIG9mIE9jYW1sIHVzZWQgZm9yIHNoZWxs
LXNjcmlwdGluZyBpbiB0aGUgbWFubmVyIG9mIFBlcmwvUHl0aG9uIChidXQg
ZXNwLiBQZXJsKQ0KQXJlIHRoZXJlIGxlYXJuaW5nIG1hdGVyaWFscyBmb3Ig
T0NhbWwgZm9yIHRob3NlIHdpdGggbm8gcHJvZ3JhbW1pbmcgZXhwZXJpZW5j
ZT8NCkR1bmUgbWVldGluZyBub3Rlcw0KT0NhbWwgNC4xMS4wLCBmaXJzdCBh
bHBoYSByZWxlYXNlDQpPQ2FtbCBVc2VycyBhbmQgRGV2ZWxvcGVycyBNZWV0
aW5nIDIwMjANClZTQ29kZSBQbGF0Zm9ybSBQbHVnaW4gMC41LjANCk90aGVy
IE9DYW1sIE5ld3MNCk9sZCBDV04NCg0KDQpMb29raW5nIGZvciAibG92ZWx5
LCBpZGlvbWF0aWMiIGV4YW1wbGVzIG9mIE9jYW1sIHVzZWQgZm9yIHNoZWxs
LXNjcmlwdGluZyBpbiB0aGUgbWFubmVyIG9mIFBlcmwvUHl0aG9uIChidXQg
ZXNwLiBQZXJsKQ0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToNCiAgW2h0dHBzOi8vZGlzY3Vzcy5v
Y2FtbC5vcmcvdC9sb29raW5nLWZvci1sb3ZlbHktaWRpb21hdGljLWV4YW1w
bGVzLW9mLW9jYW1sLXVzZWQtZm9yLXNoZWxsLXNjcmlwdGluZy1pbi10aGUt
bWFubmVyLW9mLXBlcmwtcHl0aG9uLWJ1dC1lc3AtcGVybC81NzAzLzEzXQ0K
DQoNCkNvbnRpbnVpbmcgdGhpcyB0aHJlYWQsIENoZXQgTXVydGh5IHNhaWQg
YW5kIEFhcm9uIEwuIFplbmcgcmVwbGllZA0K4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
DQoNCiAgICAgICAg4oCiIG5lZWRzIHRvIGJlIE9jYW1sIGNvZGUsIG5vdCBh
biBpbnRlcnByZXRlci4gSSBtZWFuLCBpZg0KICAgICAgICAgIEnigJltIG5v
dCBnb2luZyB0byB3cml0ZSBpdCBpbiBPY2FtbCwgSSBtaWdodCBhcyB3ZWxs
DQogICAgICAgICAgd3JpdGUgaW4gUGVybCwgeWVzPw0KDQogIEkgdGhpbmsg
c2hleHAgbWlnaHQgZGVzZXJ2ZSBhbm90aGVyIGxvb2suICBJdCdzIG5vdCBh
biBpbnRlcnByZXRlciBmb3INCiAgYSBzZXhwLWJhc2VkIHNoZWxsIGxhbmd1
YWdlLCBhcyBpdHMgbmFtZSBtaWdodCB1bmZvcnR1bmF0ZWx5DQogIGRlY2Vp
dmluZ2x5IHN1Z2dlc3QuICBJdCdzIHJlYWxseSBhIERTTCBmb3IgY29uc3Ry
dWN0aW5nIHNoZWxsDQogIHBpcGVsaW5lcyB1c2luZyBhIGAnYSBQcm9jZXNz
LnQnIG1vbmFkLiAgVGhlIHMtZXhwcmVzc2lvbiBwYXJ0IGlzDQogIGFkdmVy
dGlzaW5nIHRoYXQgeW91IGNhbiBkZWJ1ZyBhbmQgdHJhY2UgdGhlIGFjdGlv
bnMgcGVyZm9ybWVkIHVzaW5nDQogIHMtZXhwcmVzc2lvbnMuDQoNCiAgICAg
ICAgVGhlIHNlY29uZC1tb3N0LWltcG9ydGFudCBwYXJ0IG9mIFBlcmwvQmFz
aCBzY3JpcHRpbmcgaXMNCiAgICAgICAgc3RyaW5nLWhhbmRsaW5nLiBBbmQg
aXTigJlzIGNlcnRhaW5seSB0aGUgcGFydCBvZiBPY2FtbA0KICAgICAgICB0
aGF04oCZcyBtb3N0IHBhaW5mdWwgd2hlbiB3cml0aW5nIHNjcmlwdHMuIExl
dOKAmXMgc3RpcHVsYXRlDQogICAgICAgIHRoYXQgdGhlcmUgYXJlIG5pY2Ug
bGlicmFyaWVzIHRvIG1ha2UgdGhpcyBlYXN5LiBJ4oCZbSBhbg0KICAgICAg
ICBPY2FtbCBiaWdvdCwgSSBoYXZlIHRvIGJlbGlldmUgdGhpcyBhbnl3YXkg
KmdyaW4qIC4gVGhpcw0KICAgICAgICBsaWJyYXJ5IGRvZXNu4oCZdCBzZWVt
IHRvIHVzZSAnZW0sIG5vciBjaG9vc2UvcHJvbW90ZSBhDQogICAgICAgIHBh
cnRpY3VsYXIgc2V0IG9mIHN1Y2ggbGlicmFyaWVzLg0KDQogIEkndmUgZm91
bmQgW0Jhc2VdIHBsdXMgW1JlXSB0byBiZSBzdWZmaWNpZW50IGZvciBtb3N0
IG9mIG15DQogIHN0cmluZy1tYW5pcHVsYXRpb24gbmVlZHMuICBJdCdzIG5l
dmVyIGdvaW5nIHRvIGJlIGFzIGNvbmNpc2UgYXMNCiAgUGVybCdzIGJ1aWx0
LWluICJtYWdpYyIgc3VwcG9ydCBmb3IgcmVnZXhwcywgYnV0IHlvdSBnYWlu
IGV4cGxpY2l0bmVzcw0KICBhbmQgY2xhcml0eSwgd2hpY2ggaXMgcGFydCBv
ZiB0aGUgYmVuZWZpdCBvZiBPQ2FtbCBhbnl3YXkuDQoNCg0KW0Jhc2VdIGh0
dHBzOi8vZ2l0aHViLmNvbS9qYW5lc3RyZWV0L2Jhc2UvDQoNCltSZV0gaHR0
cHM6Ly9naXRodWIuY29tL29jYW1sL29jYW1sLXJlDQoNCg0KQ2hldCBNdXJ0
aHkgc2FpZCBhbmQgRG9ubiBDYXZlIHJlcGxpZWQNCuKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgA0KDQogICAgICAgIEl04oCZcyBub3QgYXMgdHJpdmlhbCBp
biBPY2FtbCwgZm9yIG1hbnkgY29tcGxpY2F0ZWQgcmVhc29ucw0KICAgICAg
ICB0aGF0IGJvaWwgZG93biB0byDigJxnZWUsIHN0cmluZy1oYW5kbGluZyBp
cyBhIFBJVEHigJ0uDQoNCiAgUmVhbGx5PyAgaGFkbid0IG5vdGljZWQuICBI
YSBoYS4NCg0KICBJIGNvdWxkIG5ldmVyIHJlYWxseSBnZXQgdXJnZSBmb3Ig
UGVybCwgYnV0IEkgdXNlIGl0cyBhbmNlc3RvciBhd2sgYQ0KICBsb3QsIGFu
ZCBJJ20gdHJ5aW5nIG91dCBzb21lIGF3ay1saWtlIHNpbXBsZSBzdHJpbmcg
ZnVuY3Rpb25zLCBsaWtlDQoNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiBs
ZXQgc3RybGVuID0gU3RyaW5nLmxlbmd0aA0KICDilIIgbGV0IHN1YiBzIGkg
biA9IGxldCBiID0gc3RybGVuIHMNCiAg4pSCICAgICAgaW4gaWYgaSA8IGIN
CiAg4pSCIAkgdGhlbiBsZXQgbiA9IG1pbiBuIChiIC0gaSkNCiAg4pSCIAkg
aW4gU3RyaW5nLnN1YiBzIGkgbg0KICDilIIgICAgIGVsc2UgIiINCiAg4pSC
ICgqIHN1YnN0cmluZyB0byBlbmQgb2YgbGluZSAqKQ0KICDilIIgbGV0IHN1
YnN0ciBhIGkgPSBpZiBpIDwgc3RybGVuIGENCiAg4pSCICAgICAgdGhlbiBT
dHJpbmcuc3ViIGEgaSAoKHN0cmxlbiBhKSAtIGkpDQogIOKUgiAgICAgIGVs
c2UgIiINCiAg4pSCIGxldCBtYXRjaHJlIHQgcyA9IHRyeQ0KICDilIIgICAg
ICBTdHIuc2VhcmNoX2ZvcndhcmQgdCBzIDANCiAg4pSCICAgICAgd2l0aCB8
IE5vdF9mb3VuZCAtPiAtMQ0KICDilJTilIDilIDilIDilIANCg0KICBldGMu
DQoNCiAgU28gIm9wZW4gQXdrIiBnZXRzIG1lIGEgaGFuZGZ1bCBvZiBtb3Jl
IGJhc2ljIHZhcmlhdGlvbnMgb24gY29tbW9uDQogIHN0cmluZyBmdW5jdGlv
bnMsIHdpdGggbGVzcyBlbGFib3JhdGUgcGFyYW1ldGVycywgbm8gbm9ybWFs
DQogIGV4Y2VwdGlvbnMsIGV0Yy4gIEluY2x1ZGluZyBhIGxpbmUgYnkgbGlu
ZSBmaWxlIHByb2Nlc3NpbmcgZnVuY3Rpb24uDQogIEkgaGF2ZSBqdXN0IG5l
d2x5IHN0YXJ0ZWQgb24gdGhpcyBhbmQgaGF2ZW4ndCB1c2VkIGl0IGV4dGVu
c2l2ZWx5LCBidXQNCiAgaXQgc2VlbXMgZmFpcmx5IHByb21pc2luZy4gIE5v
IHdhY2t5IHN5bnRheCBvciBoeXBlciBpbnRlbGxpZ2VudA0KICBzdHJpbmcg
cHJvY2Vzc2luZywgbm8gcGFja2FnZXMsIGp1c3QgYSBmZXcgZG96ZW4gbGlu
ZXMgb2YgY2hlYXRlcg0KICBmdW5jdGlvbnMuDQoNCiAgIkF3ayIgaXMgYSBt
aXNub21lciwgaW4gdGhhdCB0aGVyZSdzIGxpdHRsZSBjb3JyZXNwb25kZW5j
ZSBiZXR3ZWVuDQogIHRoaXMgYW5kIGF3aywgaXQgd2FzIGp1c3Qgd2hhdCBp
bnNwaXJlZCBtZSB0byB0cnkgaXQuDQoNCg0KUmFwaGHDq2wgUHJvdXN0IHNh
aWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgA0KDQogIEkgZG9uJ3QgdGhpbmsgaXQncyBsb3Zl
bHkgYW5kIEkgaGF2ZSBubyBpZGVhIGlmIGl0IGlzIGlkaW9tYXRpYywgYnV0
IEkNCiAgbWFkZSBhIGZldyBzY3JpcHRzIG9mIG15IG93biBpbiBPQ2FtbCB1
c2luZyB0aGUgc2FtZSBsaWJyYXJ5IHRoYXQNCiAgb3RoZXIgbWVudGlvbmVk
OiBgYm9zJw0KDQogIOKAoiBbdHlwZXBhc3NdIHVzZXMgYHhkb3Rvb2wnIHRv
IHR5cGUgcGFzc3dvcmRzIGZyb20gdGhlIGBwYXNzd29yZCcNCiAgICBwYXNz
d29yZCBtYW5hZ2VyDQogIOKAoiBbY29ubl0gd3JhcHMgYHdwYV9zdXBwbGlj
YW50JywgYGRoY3BjZCcsIGBpcCcsIGFuZCBvdGhlciBuZXR3b3JrDQogICAg
bWFuYWdlbWVudCBDTEkNCiAg4oCiIFtsYXB0b3Atc3RhdHVzXSBmZXRjaGVz
IHN0YXR1cyBpbmZvcm1hdGlvbiBmb3IgbGFwdG9wcyAoZS5nLiwNCiAgICBi
YXR0ZXJ5IGxldmVsKSBhbmQgcHJpbnRzIGl0IGluIGEgbmljZWx5IGZvcm1h
dHRlZCBmb3JtDQogIOKAoiBbYmFrZWxpdGVdIGluY3JlYXNlcyBvciBkZWNy
ZWFzZXMgc2NyZWVuIGJyaWdodG5lc3MNCg0KDQpbdHlwZXBhc3NdIGh0dHBz
Oi8vZ2l0bGFiLmNvbS9yYXBoYWVsLXByb3VzdC90eXBlcGFzcw0KDQpbY29u
bl0gaHR0cHM6Ly9naXRsYWIuY29tL3JhcGhhZWwtcHJvdXN0L2Nvbm4NCg0K
W2xhcHRvcC1zdGF0dXNdIGh0dHBzOi8vZ2l0bGFiLmNvbS9yYXBoYWVsLXBy
b3VzdC9sYXB0b3Atc3RhdHVzDQoNCltiYWtlbGl0ZV0gaHR0cHM6Ly9naXRs
YWIuY29tL3JhcGhhZWwtcHJvdXN0L2Jha2VsaXRlDQoNCg0KVmFzaWxlIFJv
dGFydSBhbHNvIHNhaWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQog
IFtodHRwczovL2dpdGh1Yi5jb20vaGFtbWVybGFiL2dlbnNwaW9dDQoNCg0K
R2FicmllbCBSYWRhbm5lIGFsc28gc2FpZA0K4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSADQoNCiAgSSBoYXZlIG5vIHBhcnRpY3VsYXIgb3Bpbmlv
biBhYm91dCB0aGUgcmVzdCwgYnV0IGF0IGxlYXN0IG9uIHRoZSByZWdleA0K
ICBzaWRlLCB0aGlzIG1pZ2h0IGJlIG9mIGludGVyZXN0Og0KICBbaHR0cHM6
Ly9naXRodWIuY29tL3BhdXJrZWRhbC9wcHhfcmVnZXhwXQ0KDQogIElmIHRo
YXQncyBzdGlsbCBub3QgZ29vZCBlbm91Z2gsIEkgd291bGQgYmUgdmVyeSBp
bnRlcmVzdGVkIGJ5DQogIHN1Z2dlc3Rpb25zIG9uIGhvdyB0byBtYWtlIGl0
IG1vcmUgY29udmVuaWVudC4gOikNCg0KDQpPQ2FtbFVzZXIgcHJvcG9zZWQN
CuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgA0KDQogIEknbSBub3Qgc3VyZSBhYm91dCBpZGlvbWF0aWMs
IGJ1dCBJIGRvIGhhdmUgYSB1dG9wIGNvbmZpZyB0aGF0IEkgdXNlDQogIHRv
IGRvIHNvbWUgb25lLW9mZiBzY3JpcHRpbmcgaW4gT0NhbWwgdGhhdCB1c2Vz
IGBzaGV4cCcNCg0KICDilIzilIDilIDilIDilIANCiAg4pSCICN1c2UgInRv
cGZpbmQiDQogIOKUgiAjd2FybmluZ3MgIithIg0KICDilIIgI3RocmVhZA0K
ICDilIIgI3JlcXVpcmUgInBweF9qYW5lLGNvcmUiDQogIOKUgiAjcmVxdWly
ZSAic2hleHAucHJvY2VzcyINCiAg4pSCICNyZXF1aXJlICJsYW1iZGFzb3Vw
Ig0KICDilIIgbW9kdWxlIExpc3QnID0gTGlzdA0KICDilIIgb3BlbiBTaGV4
cF9wcm9jZXNzDQogIOKUgiBvcGVuIFNoZXhwX3Byb2Nlc3MuSW5maXgNCiAg
4pSCIG9wZW4gQ29yZQ0KICDilIIgDQogIOKUgiBtb2R1bGUgSHRtbCA9IHN0
cnVjdA0KICDilIIgICAgIGluY2x1ZGUgU291cA0KICDilIIgDQogIOKUgiAg
ICAgbGV0IG9mX3N0cmluZyA9IHBhcnNlDQogIOKUgiBlbmQNCiAg4pSCIA0K
ICDilIIgbGV0IHJlYWRfbGluZXMgY21kID0NCiAg4pSCICAgICBldmFsIChj
YWxsIGNtZCB8LSByZWFkX2FsbCkNCiAg4pSCIDs7DQogIOKUgiANCiAg4pSC
IGxldCB3Z2V0IHVybCA9DQogIOKUgiAgICAgcmVhZF9saW5lcyBbIndnZXQi
OyAiLU8iOyAiLSI7IHVybF0NCiAg4pSCIDs7DQogIOKUgiANCiAg4pSCIGxl
dCBjaHJvbWVfY3VybCB1cmwgPQ0KICDilIIgICAgIHJlYWRfbGluZXMgWyJj
dXJsIjsgIi1rIjsgIi1zQSI7ICJDaHJvbWUiOyAiLUwiOyB1cmw7ICItbyI7
ICItIl0NCiAg4pSCIDs7DQogIOKUgiANCiAg4pSCIGxldCBzcGxpdF9saW5l
cyA9IFN0cmluZy5zcGxpdCB+b246J1xuJw0KICDilIIgbGV0IGZpbHRlcl9s
aW5lcyBzdWJzdHJpbmcgPSBMaXN0LmZpbHRlciB+ZjpTdHJpbmcuKGlzX3N1
YnN0cmluZyB+c3Vic3RyaW5nKQ0KICDilIIgbGV0IHRvX2h0bWwgPSBIdG1s
Lm9mX3N0cmluZw0KICDilIIgbGV0IGZpbmRfaHRtbCBwYXQgaHRtbCA9IEh0
bWwuKGh0bWwgJCQgcGF0KQ0KICDilIIgDQogIOKUgiBsZXQgKCUpID0gRm4u
Y29tcG9zZQ0KICDilJTilIDilIDilIDilIANCg0KICBUaGVuIGEgc2ltcGxl
IHNjcmlwdCBjYWxsZWQgYHNoZXhwJyBpbiBteSBwYXRoOg0KICDilIzilIDi
lIDilIDilIANCiAg4pSCIHV0b3AgLWluaXQgfi9iaW4vb2NhbWwtc2hleHAt
Y29uZmlnDQogIOKUlOKUgOKUgOKUgOKUgA0KDQogIEkgYWRkIGxpdHRsZSBo
ZWxwZXIgZnVuY3Rpb25zIGFzIEkgY29tZSB1cG9uIHRoZW0uIEkgZmluZCBp
dCdzIG11Y2gNCiAgZWFzaWVyIHRvIHRyYW5zaXRpb24gdG8gYSBmaWxlLCBv
ciBmdWxsIHByb2dyYW0gd2hlbiBJIG5lZWQNCiAgaXQuIEV4YW1wbGUgcHJv
Z3JhbToNCg0KICDilIzilIDilIDilIDilIANCiAg4pSCIHV0b3AgIyByZWFk
X2xpbmVzIFsic2Vuc29ycyJdIHw+IHNwbGl0X2xpbmVzIHw+IGZpbHRlcl9s
aW5lcyAiQ29yZSAwIjs7DQogIOKUgiAtIDogc3RyaW5nIGxpc3QgPQ0KICDi
lIIgWyJDb3JlIDA6ICAgICAgICArNjMuMMKwQyAgKGhpZ2ggPSArODQuMMKw
QywgY3JpdCA9ICsxMDAuMMKwQykiXQ0KICDilJTilIDilIDilIDilIANCg0K
DQpBbnRvbiBLb2Noa292IHNhaWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIE5vdCBleGFj
dGx5IE9DYW1sLCBidXQgY2FuIGJlIG1hZGUgd2l0aCB0aGUgT0NhbWwgc3lu
dGF4IGFzIHdlbGwgLSBzZWUNCiAgW0JBVFNIXS4NCg0KDQpbQkFUU0hdIGh0
dHBzOi8vZ2l0aHViLmNvbS9iYXRzaC1kZXYtdGVhbS9CYXRzaA0KDQoNCkJp
a2FsIExlbSBhbHNvIHNhaWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEkganVzdCBm
b3VuZCB0aGlzIC0gW2h0dHBzOi8vZ2l0aHViLmNvbS9TaGFtb1gvY2FzaF0u
IEBDaGV0X011cnRoeQ0KICBUaGlzIG1heSBiZSB0aGUgY2xvc2VzdCB0byBv
Y2FtbCBzaGVsbCBzY3JpcHRpbmcgZXhwZXJpZW5jZSByZSBwZXJsLg0KDQoN
CkFyZSB0aGVyZSBsZWFybmluZyBtYXRlcmlhbHMgZm9yIE9DYW1sIGZvciB0
aG9zZSB3aXRoIG5vIHByb2dyYW1taW5nIGV4cGVyaWVuY2U/DQrilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZANCg0KICBBcmNoaXZlOg0KICBbaHR0cHM6Ly9kaXNjdXNzLm9j
YW1sLm9yZy90L2FyZS10aGVyZS1sZWFybmluZy1tYXRlcmlhbHMtZm9yLW9j
YW1sLWZvci10aG9zZS13aXRoLW5vLXByb2dyYW1taW5nLWV4cGVyaWVuY2Uv
NTY4NC85XQ0KDQoNCkNvbnRpbnVpbmcgdGhpcyB0aHJlYWFkLCBMdWNfTUwg
c2FpZA0K4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCiAgQmVmb3JlIHN0dWR5aW5n
IG1vcmUgY29tcGxleCBib29rcywgaXQncyBhIGdvb2QgaWRlYSB0byBmaXJz
dCBnZXQgYW4NCiAgb3ZlcnZpZXcuDQoNCiAgW09DYW1sIGZvciB0aGUgU2tl
cHRpY2FsIC8gT0NhbWwgaW4gYSBOdXRzaGVsbF0gOiB0aGUgdGl0bGUgaXMg
ZnVubnk7DQogIGl0cyBtYWluIGFkdmFudGFnZSBpcyB0aGF0IGl0IGNvdmVy
cyBtb3N0IE9DYW1sIGNvbmNlcHRzIGluICoyMSBzaG9ydA0KICBzZWN0aW9u
cyogd2hlcmUgeW91IGNhbiBleHBlcmltZW50IGJ5IHlvdXJzZWxmIG9uIHNp
bXBsZSBidXQgZXNzZW50aWFsDQogIHRoaW5ncy4NCg0KICBUaGUgYm9va3Mv
Y291cnNlcyBhbHJlYWR5IG1lbnRpb25lZCBhcmUgbmljZS4gWW91IGNhbiBh
bHNvIGNvbnNpZGVyDQogIHRoaXMgb25lIHRoYXQgb2ZmZXJzIG1hbnkgZXhh
bXBsZXMvZXhlcmNpc2VzIGFuZCBhbHNvIGEgZ29vZCBvdmVydmlldzoNCiAg
W0RldmVsb3BpbmcgQXBwbGljYXRpb25zIFdpdGggT2JqZWN0aXZlIENhbWxd
Lg0KDQogIExFIExBTkdBR0UgQ0FNTCBtZW50aW9uZWQgYnkgQG5vamIgaXMg
YW4gZXhjZWxsZW50IGJvb2suIFdyaXR0ZW4gaW4NCiAgQ2FtbCBMaWdodCwg
aXQncyBlYXN5IHRvIHR1cm4gaXQgYnkgeW91cnNlbGYgaW50byBPQ2FtbC4g
SXQgb2ZmZXJzIGENCiAgZ3JlYXQgY2hhbmNlIHRvIGxlYXJuIGhvdyB0byBk
byBhIGxvdCBvZiB0aGluZ3MgaW4gKnB1cmUqIENhbWwgd2l0aA0KICBvbmx5
IHN0ZGxpYiBhbmQgYSBzaW1wbGUgc3ludGF4IGV4dGVuc2lvbiBzeXN0ZW0g
KHVzZSBjYW1scDUgKGkuZS4gdGhlDQogICJnZW51aW5lIGNhbWxwNCIpIHRo
YXQgaXMgZmluZSBmb3IgdGhhdC4gSXQgd29ya3Mgb3V0IG9mIHRoZSBib3gg
dG8NCiAgZGVhbCB3aXRoIHN0cmVhbXMgYW5kIGl0J3MgYSBjaGFuY2UgdG8g
dW5kZXJzdGFuZCB3aGF0IGlzIGENCiAgTEwoMSkvcmVjdXJzaXZlIGRlc2Nl
bnQgcGFyc2VyKS4NCg0KDQpbT0NhbWwgZm9yIHRoZSBTa2VwdGljYWwgLyBP
Q2FtbCBpbiBhIE51dHNoZWxsXQ0KaHR0cHM6Ly93d3cyLmxpYi51Y2hpY2Fn
by5lZHUva2VpdGgvb2NhbWwtY2xhc3MvY2xhc3MtMDEuaHRtbA0KDQpbRGV2
ZWxvcGluZyBBcHBsaWNhdGlvbnMgV2l0aCBPYmplY3RpdmUgQ2FtbF0NCmh0
dHBzOi8vY2FtbC5pbnJpYS5mci9wdWIvZG9jcy9vcmVpbGx5LWJvb2svDQoN
Cg0KRHVuZSBtZWV0aW5nIG5vdGVzDQrilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZANCg0KICBBcmNoaXZl
OiBbaHR0cHM6Ly9kaXNjdXNzLm9jYW1sLm9yZy90L2R1bmUtbWVldGluZy1u
b3Rlcy81NzEwLzFdDQoNCg0KSsOpcsOpbWllIERpbWlubyBhbm5vdW5jZWQN
CuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEkganVzdCB3YW50
ZWQgdG8gcHVibGljaXNlIHRoYXQgd2UgYXJlIG5vdyBwdWJsaXNoaW5nIHRo
ZSBub3RlcyBmcm9tDQogIG91ciBEdW5lIG1lZXRpbmdzIG9uIHRoZSB3aWtp
Og0KDQogIFtodHRwczovL2dpdGh1Yi5jb20vb2NhbWwvZHVuZS93aWtpXQ0K
DQogIFRoZXNlIG1lZXRpbmdzIGhhcHBlbiB2aWEgdmlkZW8tY29uZmVyZW5j
ZSBldmVyeSB0d28gd2Vla3MuIElmIHlvdSBhcmUNCiAgaW50ZXJlc3RlZCBp
biBmb2xsb3dpbmcgdGhlIGRldmVsb3BtZW50IG9mIER1bmUgbW9yZSBjbG9z
ZWx5LCB0aGlzIGlzDQogIGdvb2QgcGxhY2UgdG8gbG9vayBhdC4NCg0KDQpP
Q2FtbCA0LjExLjAsIGZpcnN0IGFscGhhIHJlbGVhc2UNCuKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0K
DQogIEFyY2hpdmU6DQogIFtodHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3Qv
b2NhbWwtNC0xMS0wLWZpcnN0LWFscGhhLXJlbGVhc2UvNTcxNi8xXQ0KDQoN
Cm9jdGFjaHJvbiBhbm5vdW5jZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIFRoZSBz
ZXQgb2YgbmV3IGZlYXR1cmVzIGZvciB0aGUgZnV0dXJlIHZlcnNpb24gNC4x
MS4wIG9mIE9DYW1sIGhhcw0KICBiZWVuIGZyb3plbi4gIEluIHRoZSBuZXh0
IGZldyBtb250aHMsIHRoZSBPQ2FtbCBjb21waWxlciB0ZWFtIGlzDQogIGZv
Y3VzaW5nIG9uIGJ1ZyBodW50aW5nIGFuZCBmaXhpbmcuDQoNCiAgRm9yIHRo
aXMgcmVsZWFzZSBjeWNsZSwgd2UgaGF2ZSBkZWNpZGVkIHRvIHRlc3QgcHVi
bGlzaGluZyByZWd1bGFybHkNCiAgYWxwaGEgdmVyc2lvbnMgb2YgT0NhbWwg
NC4xMS4wIGluIG9yZGVyIHRvIGhlbHAgZmVsbG93IGhhY2tlcnMgam9pbiB1
cw0KICBlYXJseSBpbiBvdXIgYnVnIGh1bnRpbmcgYW5kIG9wYW0gZWNvc3lz
dGVtIGZpeGluZyBmdW4uICBPbmNlIHRoZSBvcGFtDQogIGVjb3N5c3RlbSBp
cyBpbiBzaGFwZSwgdGhlc2UgYWxwaGEgcmVsZWFzZXMgd2lsbCBtb3JwaCBp
bnRvIHRoZSB1c3VhbA0KICBiZXRhIGFuZCByZWxlYXNlIGNhbmRpZGF0ZSBy
ZWxlYXNlcy4NCg0KICBJZiB5b3UgZmluZCBhbnkgYnVncywgcGxlYXNlIHJl
cG9ydCB0aGVtIGhlcmU6DQogICBbaHR0cHM6Ly9naXRodWIuY29tL29jYW1s
L29jYW1sL2lzc3Vlc10NCg0KICBUaGUgY29tcGlsZXIgY2FuIGJlIGluc3Rh
bGxlZCBhcyBhbiBPUEFNIHN3aXRjaCB3aXRoIG9uZSBvZiB0aGUNCiAgZm9s
bG93aW5nIGNvbW1hbmRzDQogIOKUjOKUgOKUgOKUgOKUgA0KICDilIIgb3Bh
bSBzd2l0Y2ggY3JlYXRlIG9jYW1sLXZhcmlhbnRzLjQuMTEuMCthbHBoYTEg
LS1yZXBvc2l0b3JpZXM9ZGVmYXVsdCxiZXRhPWdpdCtodHRwczovL2dpdGh1
Yi5jb20vb2NhbWwvb2NhbWwtYmV0YS1yZXBvc2l0b3J5LmdpdA0KICDilJTi
lIDilIDilIDilIANCiAgb3INCiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiBv
cGFtIHN3aXRjaCBjcmVhdGUgb2NhbWwtdmFyaWFudHMuNC4xMS4wK2FscGhh
MStWQVJJQU5UIC0tcmVwb3NpdG9yaWVzPWRlZmF1bHQsYmV0YT1naXQraHR0
cHM6Ly9naXRodWIuY29tL29jYW1sL29jYW1sLWJldGEtcmVwb3NpdG9yeS5n
aXQNCiAg4pSU4pSA4pSA4pSA4pSADQogIHdoZXJlIHlvdSByZXBsYWNlIFZB
UklBTlQgd2l0aCBvbmUgb2YgdGhlc2U6IGFmbCwgZmxhbWJkYSwgZnAsDQog
IGZwK2ZsYW1iZGENCg0KICBUaGUgc291cmNlIGNvZGUgZm9yIHRoZSBhbHBo
YSBpcyBhbHNvIGF2YWlsYWJsZSBhdCB0aGVzZSBhZGRyZXNzZXM6DQoNCiAg
W2h0dHBzOi8vZ2l0aHViLmNvbS9vY2FtbC9vY2FtbC9hcmNoaXZlLzQuMTEu
MCthbHBoYTEudGFyLmd6XQ0KICBbaHR0cHM6Ly9jYW1sLmlucmlhLmZyL3B1
Yi9kaXN0cmliL29jYW1sLTQuMTEvb2NhbWwtNC4xMS4wK2FscGhhMS50YXIu
Z3pdDQoNCiAgSWYgeW91IGFyZSBpbnRlcmVzdGVkIGJ5IHRoZSBvbmdvaW5n
IGxpc3Qgb2YgbmV3IGZlYXR1cmVzIGFuZCBmaXhlZA0KICBidWdzLCB0aGUg
dXBkYXRlZCBjaGFuZ2UgbG9nIGZvciBPQ2FtbCA0LjExLjAgaXMgYXZhaWxh
YmxlIGF0Og0KDQogIFtodHRwczovL2dpdGh1Yi5jb20vb2NhbWwvb2NhbWwv
YmxvYi80LjExL0NoYW5nZXNdDQoNCg0KT0NhbWwgVXNlcnMgYW5kIERldmVs
b3BlcnMgTWVldGluZyAyMDIwDQrilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZANCg0KICBBcmNoaXZlOg0KICBbaHR0cHM6Ly9kaXNjdXNzLm9jYW1sLm9y
Zy90L29jYW1sLXVzZXJzLWFuZC1kZXZlbG9wZXJzLW1lZXRpbmctMjAyMC81
NDU0LzJdDQoNCg0KSXZhbiBHb3RvdmNoaXRzIGFubm91bmNlZA0K4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCiAgRHVlIHRvIHRoZSBtdWx0
aXBsZSByZXF1ZXN0cyBhbmQgc2luY2UgSUNGUCB3aWxsIGJlIG5vdyBvZmZp
Y2lhbGx5DQogIGhlbGQgb25saW5lIHdpdGggYSBzaWduaWZpY2FudGx5IHJl
ZHVjZWQgZmVlLCB3ZSBkZWNpZGVkIHRvIGV4dGVuZCB0aGUNCiAgc3VibWlz
c2lvbiBkZWFkbGluZSB0aWxsIHRoZSBlbmQgb2YgdGhpcyBtb250aC4gV2Ug
YXJlIGhvcGluZyB0bw0KICBhdHRyYWN0IGEgbGFyZ2VyIGFuZCBtb3JlIGRp
dmVyc2UgYXVkaWVuY2UgdGhpcyB5ZWFyLCBnaXZlbiB0aGF0IHRoZQ0KICBu
ZXcgZm9ybWF0IGlzIG1vcmUgYWNjZXNzaWJsZSBib3RoIHRyYXZlbC13aXNl
IGFuZCBmaW5hbmNpYWxseS4NCg0KICBQbGVhc2UsIHNoYXJlIHRoZSBuZXdz
IHdpZGVseSENCg0KDQpJbXBvcnRhbnQgRGF0ZXMgKHVwZGF0ZWQpDQrilYzi
lYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzi
lYzilYzilYzilYzilYzilYzilYzilYzilYwNCg0KICDigKIgVGFsayBwcm9w
b3NhbCBzdWJtaXNzaW9uIGRlYWRsaW5lOiBNYXkgMjl0aCwgMjAyMCwgQW9F
DQogIOKAoiBBdXRob3IgTm90aWZpY2F0aW9uOiBKdWx5IDE3dGgsIDIwMjAN
CiAg4oCiIE9DYW1sIFdvcmtzaG9wOiBBdWd1c3QgMjh0aCwgMjAyMA0KDQoN
ClZTQ29kZSBQbGF0Zm9ybSBQbHVnaW4gMC41LjANCuKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6DQogIFto
dHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3QvYW5uLXZzY29kZS1wbGF0Zm9y
bS1wbHVnaW4tMC01LTAvNTc1Mi8xXQ0KDQoNClJ1ZGkgR3JpbmJlcmcgYW5u
b3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCg0KICBUaGlzIHJl
bGVhc2UgY29udGFpbnMgYSBjb3VwbGUgb2YgbWFqb3IgaW1wcm92ZW1lbnRz
Og0KDQogIOKAoiBTeW50YXggaGlnaGxpZ2h0aW5nIGlzIHZhc3RseSBpbXBy
b3ZlZC4gVGhlcmUncyBub3cgaGlnaGxpZ2h0aW5nIGZvcg0KICAgIG1hbnkg
bW9yZSBmaWxldHlwZXMsIGFuZCB0aGUgY29yZSBoaWdobGlnaHRpbmcgZm9y
IE9DYW1sIGlzIGZhciBtb3JlDQogICAgYWNjdXJhdGUuDQogIOKAoiBUaGVy
ZSdzIGludGVncmF0aW9uIHdpdGggcGFja2FnZSBtYW5hZ2VycyBzdWNoIGFz
IG9wYW0gYW5kIGVzeS4gT25lDQogICAgbWF5IG5vdyBleHBsaWNpdGx5IHVz
ZSB0aGVtIHRvIGV4cGxpY2l0bHkgc2VsZWN0IHRoZSBzYW5kYm94IHRoYXQN
CiAgICBjb250YWlucyB0aGUgbHNwIHNlcnZlciBhbmQgcmVsYXRlZCB0b29s
cy4NCg0KICBVbmRlciB0aGUgaG9vZCwgdGhlIGVudGlyZSBwbHVnaW4gd2Fz
IHJld3JpdHRlbiBmcm9tIHR5cGVzY3JpcHQgdG8NCiAgT0NhbWwgKGJ1Y2ts
ZXNjcmlwdCkuIFRoaXMgc2hvdWxkIGhvcGVmdWxseSBtYWtlIGNvbnRyaWJ1
dGlvbiBtb3JlDQogIGFjY2Vzc2libGUgdG8gT0NhbWwgaGFja2Vycy4NCg0K
ICBJJ2QgbGlrZSB0byB0aGFuayBAcnVzdHlrZXksIEBtbnhuLCBAcHJvbWV0
aGVhbnNhY3JpZmljZSwgYW5kIEBpbWJza3kNCiAgZm9yIHRoZWlyIGNvbnRy
aWJ1dGlvbnMgdG8gdGhpcyByZWxlYXNlLiBUaGVpciBoZWxwIGlzIHRoZSBy
ZWFzb24gZm9yDQogIHRoaXMgdmFzdGx5IGltcHJvdmVkIHZlcnNpb24gb2Yg
dGhlIHBsdWdpbi4NCg0KICBBcyB1c3VhbCwgdGhlIHBsdWdpbiBpcyBhdmFp
bGFibGUgZGlyZWN0bHkgdXNpbmcgdnNjb2RlJ3MgZXh0ZW5zaW9uDQogIG1h
cmtldCBwbGFjZS4gSSdsbCBsZWF2ZSBhIGxpbmsgdG8gdGhlIHBsdWdpbiBb
aGVyZV0gdG8gYXZvaWQNCiAgY29uZnVzaW9uIHdpdGggdGhlIG1hbnkgb3Ro
ZXIgT0NhbWwgcGx1Z2lucyBhdmFpbGFibGUuDQoNCiAgUGxlYXNlIHJlcG9y
dCBhbnkgaXNzdWVzIG9uIHRoZSBbYnVnIHRyYWNrZXJdDQoNCg0KW2hlcmVd
DQpodHRwczovL21hcmtldHBsYWNlLnZpc3VhbHN0dWRpby5jb20vaXRlbXM/
aXRlbU5hbWU9b2NhbWxsYWJzLm9jYW1sLXBsYXRmb3JtDQoNCltidWcgdHJh
Y2tlcl0gaHR0cHM6Ly9naXRodWIuY29tL29jYW1sbGFicy92c2NvZGUtb2Nh
bWwtcGxhdGZvcm0vaXNzdWVzDQoNCg0KT3RoZXIgT0NhbWwgTmV3cw0K4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
DQoNCkZyb20gdGhlIG9jYW1sY29yZSBwbGFuZXQgYmxvZw0K4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCiAgSGVy
ZSBhcmUgbGlua3MgZnJvbSBtYW55IE9DYW1sIGJsb2dzIGFnZ3JlZ2F0ZWQg
YXQgW09DYW1sIFBsYW5ldF0uDQoNCiAg4oCiIFtPY3NpZ2VuIFN0YXJ0IDIu
MTggcmVsZWFzZWRdDQogIOKAoiBbT2NzaWdlbiBUb29sa2l0IDIuNyB3aXRo
IG5ldyB3aWRnZXQgT3RfdG9uZ3VlXQ0KDQoNCltPQ2FtbCBQbGFuZXRdIGh0
dHA6Ly9vY2FtbC5vcmcvY29tbXVuaXR5L3BsYW5ldC8NCg0KW09jc2lnZW4g
U3RhcnQgMi4xOCByZWxlYXNlZF0NCmh0dHBzOi8vb2NzaWdlbi5naXRodWIu
aW8vYmxvZy8yMDIwLzA1LzA1L29zLw0KDQpbT2NzaWdlbiBUb29sa2l0IDIu
NyB3aXRoIG5ldyB3aWRnZXQgT3RfdG9uZ3VlXQ0KaHR0cHM6Ly9vY3NpZ2Vu
LmdpdGh1Yi5pby9ibG9nLzIwMjAvMDUvMDQvb3QvDQoNCg0KT2xkIENXTg0K
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgSWYgeW91IGhhcHBlbiB0byBt
aXNzIGEgQ1dOLCB5b3UgY2FuIFtzZW5kIG1lIGEgbWVzc2FnZV0gYW5kIEkn
bGwgbWFpbA0KICBpdCB0byB5b3UsIG9yIGdvIHRha2UgYSBsb29rIGF0IFt0
aGUgYXJjaGl2ZV0gb3IgdGhlIFtSU1MgZmVlZCBvZiB0aGUNCiAgYXJjaGl2
ZXNdLg0KDQogIElmIHlvdSBhbHNvIHdpc2ggdG8gcmVjZWl2ZSBpdCBldmVy
eSB3ZWVrIGJ5IG1haWwsIHlvdSBtYXkgc3Vic2NyaWJlDQogIFtvbmxpbmVd
Lg0KDQogIFtBbGFuIFNjaG1pdHRdDQoNCg0KW3NlbmQgbWUgYSBtZXNzYWdl
XSBtYWlsdG86YWxhbi5zY2htaXR0QHBvbHl0ZWNobmlxdWUub3JnDQoNClt0
aGUgYXJjaGl2ZV0gaHR0cDovL2FsYW4ucGV0aXRlcG9tbWUubmV0L2N3bi8N
Cg0KW1JTUyBmZWVkIG9mIHRoZSBhcmNoaXZlc10gaHR0cDovL2FsYW4ucGV0
aXRlcG9tbWUubmV0L2N3bi9jd24ucnNzDQoNCltvbmxpbmVdIGh0dHA6Ly9s
aXN0cy5pZHlsbC5vcmcvbGlzdGluZm8vY2FtbC1uZXdzLXdlZWtseS8NCg0K
W0FsYW4gU2NobWl0dF0gaHR0cDovL2FsYW4ucGV0aXRlcG9tbWUubmV0Lw0K
DQo=

--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2020-05-12 Tue 09:39 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org mode" />
<style type=3D"text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
<script type=3D"text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2019 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target =3D document.getElementById(id);
   if(null !=3D target) {
     elem.cacheClassElem =3D elem.className;
     elem.cacheClassTarget =3D target.className;
     target.className =3D "code-highlighted";
     elem.className   =3D "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target =3D document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className =3D elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className =3D elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"http://alan.petitepomme.net/cwn/2020.05.05.html">Previous Week</=
a> <a href=3D"http://alan.petitepomme.net/cwn/index.html">Up</a> <a href=3D=
"http://alan.petitepomme.net/cwn/2020.05.19.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of May 05 to 12, 2020.
</p>

<div id=3D"table-of-contents">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents">
<ul>
<li><a href=3D"#1">Looking for "lovely, idiomatic" examples of Ocaml used f=
or shell-scripting in the manner of Perl/Python (but esp. Perl)</a></li>
<li><a href=3D"#2">Are there learning materials for OCaml for those with no=
 programming experience?</a></li>
<li><a href=3D"#3">Dune meeting notes</a></li>
<li><a href=3D"#4">OCaml 4.11.0, first alpha release</a></li>
<li><a href=3D"#5">OCaml Users and Developers Meeting 2020</a></li>
<li><a href=3D"#6">VSCode Platform Plugin 0.5.0</a></li>
<li><a href=3D"#7">Other OCaml News</a></li>
<li><a href=3D"#org019999d">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-org43fc4fc" class=3D"outline-2">
<h2 id=3D"1"><a id=3D"org43fc4fc"></a>Looking for "lovely, idiomatic" examp=
les of Ocaml used for shell-scripting in the manner of Perl/Python (but esp=
. Perl)</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/looking-for-lovely-idiomati=
c-examples-of-ocaml-used-for-shell-scripting-in-the-manner-of-perl-python-b=
ut-esp-perl/5703/13">https://discuss.ocaml.org/t/looking-for-lovely-idiomat=
ic-examples-of-ocaml-used-for-shell-scripting-in-the-manner-of-perl-python-=
but-esp-perl/5703/13</a>
</p>
</div>

<div id=3D"outline-container-org204d81d" class=3D"outline-3">
<h3 id=3D"org204d81d">Continuing this thread, Chet Murthy said and Aaron L.=
 Zeng replied</h3>
<div class=3D"outline-text-3" id=3D"text-org204d81d">
<blockquote>
<ul class=3D"org-ul">
<li>needs to be Ocaml code, not an interpreter. I mean, if I=E2=80=99m not =
going to write it in Ocaml, I might as well write in Perl, yes?</li>
</ul>
</blockquote>

<p>
I think shexp might deserve another look.  It's not an interpreter for a se=
xp-based shell language, as its name might
unfortunately deceivingly suggest.  It's really a DSL for constructing shel=
l pipelines using a <code>'a Process.t</code> monad.
The s-expression part is advertising that you can debug and trace the actio=
ns performed using s-expressions.
</p>

<blockquote>
<p>
The second-most-important part of Perl/Bash scripting is string-handling. A=
nd it=E2=80=99s certainly the part of Ocaml that=E2=80=99s
most painful when writing scripts. Let=E2=80=99s stipulate that there are n=
ice libraries to make this easy. I=E2=80=99m an Ocaml
bigot, I have to believe this anyway <b>grin</b> . This library doesn=E2=80=
=99t seem to use 'em, nor choose/promote a particular
set of such libraries.
</p>
</blockquote>

<p>
I've found <a href=3D"https://github.com/janestreet/base/">Base</a> plus <a=
 href=3D"https://github.com/ocaml/ocaml-re">Re</a> to be sufficient
for most of my string-manipulation needs.  It's never going to be as concis=
e as Perl's built-in "magic" support for
regexps, but you gain explicitness and clarity, which is part of the benefi=
t of OCaml anyway.
</p>
</div>
</div>


<div id=3D"outline-container-orgafb6559" class=3D"outline-3">
<h3 id=3D"orgafb6559">Chet Murthy said and Donn Cave replied</h3>
<div class=3D"outline-text-3" id=3D"text-orgafb6559">
<blockquote>
<p>
It=E2=80=99s not as trivial in Ocaml, for many complicated reasons that boi=
l down to =E2=80=9Cgee, string-handling is a PITA=E2=80=9D.
</p>
</blockquote>

<p>
Really?  hadn't noticed.  Ha ha.
</p>

<p>
I could never really get urge for Perl, but I use its ancestor awk a lot, a=
nd I'm trying out some awk-like simple
string functions, like
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">let</span> <span style=3D"color: #a0522d;">strlen</span> =3D <span sty=
le=3D"color: #228b22;">String.</span>length
<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #0000ff;">sub</span> <span style=3D"color: #a0522d;">s</span> <s=
pan style=3D"color: #a0522d;">i</span> <span style=3D"color: #a0522d;">n</s=
pan> =3D <span style=3D"color: #000000; font-weight: bold;">let</span> <spa=
n style=3D"color: #a0522d;">b</span> =3D strlen s
     <span style=3D"color: #000000; font-weight: bold;">in</span> <span sty=
le=3D"color: #a020f0;">if</span> i &lt; b
         <span style=3D"color: #a020f0;">then</span> <span style=3D"color: =
#000000; font-weight: bold;">let</span> <span style=3D"color: #a0522d;">n</=
span> =3D min n (b - i)
         <span style=3D"color: #000000; font-weight: bold;">in</span> <span=
 style=3D"color: #228b22;">String.</span>sub s i n
    <span style=3D"color: #a020f0;">else</span> <span style=3D"color: #8b22=
52;">""</span>
<span style=3D"color: #b22222;">(* </span><span style=3D"color: #b22222;">s=
ubstring to end of line </span><span style=3D"color: #b22222;">*)</span>
<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #0000ff;">substr</span> <span style=3D"color: #a0522d;">a</span>=
 <span style=3D"color: #a0522d;">i</span> =3D <span style=3D"color: #a020f0=
;">if</span> i &lt; strlen a
     <span style=3D"color: #a020f0;">then</span> <span style=3D"color: #228=
b22;">String.</span>sub a i ((strlen a) - i)
     <span style=3D"color: #a020f0;">else</span> <span style=3D"color: #8b2=
252;">""</span>
<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #0000ff;">matchre</span> <span style=3D"color: #a0522d;">t</span=
> <span style=3D"color: #a0522d;">s</span> =3D <span style=3D"color: #a020f=
0;">try</span>
     <span style=3D"color: #228b22;">Str.</span>search_forward t s 0
     <span style=3D"color: #a020f0;">with</span> | <span style=3D"color: #4=
83d8b;">Not_found</span> -&gt; -1
</pre>
</div>

<p>
etc.
</p>

<p>
So "open Awk" gets me a handful of more basic variations on common string f=
unctions, with less elaborate parameters,
no normal exceptions, etc.  Including a line by line file processing functi=
on.  I have just newly started on this and
haven't used it extensively, but it seems fairly promising.  No wacky synta=
x or hyper intelligent string processing,
no packages, just a few dozen lines of cheater functions.
</p>

<p>
"Awk" is a misnomer, in that there's little correspondence between this and=
 awk, it was just what inspired me to try
it.
</p>
</div>
</div>


<div id=3D"outline-container-org67b943a" class=3D"outline-3">
<h3 id=3D"org67b943a">Rapha=C3=ABl Proust said</h3>
<div class=3D"outline-text-3" id=3D"text-org67b943a">
<p>
I don't think it's lovely and I have no idea if it is idiomatic, but I made=
 a few scripts of my own in OCaml using
the same library that other mentioned: <code>bos</code>
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://gitlab.com/raphael-proust/typepass">typepass</a> use=
s <code>xdotool</code> to type passwords from the <code>password</code> pas=
sword manager</li>
<li><a href=3D"https://gitlab.com/raphael-proust/conn">conn</a> wraps <code=
>wpa_supplicant</code>, <code>dhcpcd</code>, <code>ip</code>, and other net=
work management CLI</li>
<li><a href=3D"https://gitlab.com/raphael-proust/laptop-status">laptop-stat=
us</a> fetches status information for laptops (e.g., battery level) and pri=
nts it in a nicely formatted form</li>
<li><a href=3D"https://gitlab.com/raphael-proust/bakelite">bakelite</a> inc=
reases or decreases screen brightness</li>
</ul>
</div>
</div>


<div id=3D"outline-container-org506b1ad" class=3D"outline-3">
<h3 id=3D"org506b1ad">Vasile Rotaru also said</h3>
<div class=3D"outline-text-3" id=3D"text-org506b1ad">
<p>
<a href=3D"https://github.com/hammerlab/genspio">https://github.com/hammerl=
ab/genspio</a>
</p>
</div>
</div>


<div id=3D"outline-container-orgadb7c7a" class=3D"outline-3">
<h3 id=3D"orgadb7c7a">Gabriel Radanne also said</h3>
<div class=3D"outline-text-3" id=3D"text-orgadb7c7a">
<p>
I have no particular opinion about the rest, but at least on the regex side=
, this might be of interest:
<a href=3D"https://github.com/paurkedal/ppx_regexp">https://github.com/paur=
kedal/ppx_regexp</a>
</p>

<p>
If that's still not good enough, I would be very interested by suggestions =
on how to make it more convenient. :)
</p>
</div>
</div>


<div id=3D"outline-container-org147b6da" class=3D"outline-3">
<h3 id=3D"org147b6da">OCamlUser proposed</h3>
<div class=3D"outline-text-3" id=3D"text-org147b6da">
<p>
I'm not sure about idiomatic, but I do have a utop config that I use to do =
some one-off scripting in OCaml that uses
<code>shexp</code>
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #708090;">#use</span> <s=
pan style=3D"color: #8b2252;">"topfind"</span>
<span style=3D"color: #708090;">#warnings</span> <span style=3D"color: #8b2=
252;">"+a"</span>
<span style=3D"color: #708090;">#thread</span>
<span style=3D"color: #708090;">#require</span> <span style=3D"color: #8b22=
52;">"ppx_jane,core"</span>
<span style=3D"color: #708090;">#require</span> <span style=3D"color: #8b22=
52;">"shexp.process"</span>
<span style=3D"color: #708090;">#require</span> <span style=3D"color: #8b22=
52;">"lambdasoup"</span>
<span style=3D"color: #000000; font-weight: bold;">module</span> <span styl=
e=3D"color: #228b22;">List'</span> =3D <span style=3D"color: #228b22;">List=
</span>
<span style=3D"color: #000000; font-weight: bold;">open </span><span style=
=3D"color: #228b22;">Shexp_process</span>
<span style=3D"color: #000000; font-weight: bold;">open </span><span style=
=3D"color: #228b22;">Shexp_process.Infix</span>
<span style=3D"color: #000000; font-weight: bold;">open </span><span style=
=3D"color: #228b22;">Core</span>

<span style=3D"color: #000000; font-weight: bold;">module</span> <span styl=
e=3D"color: #228b22;">Html</span> =3D <span style=3D"color: #000000; font-w=
eight: bold;">struct</span>
    <span style=3D"color: #000000; font-weight: bold;">include</span> <span=
 style=3D"color: #228b22;">Soup</span>

    <span style=3D"color: #000000; font-weight: bold;">let</span> <span sty=
le=3D"color: #a0522d;">of_string</span> =3D parse
<span style=3D"color: #000000; font-weight: bold;">end</span>

<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #0000ff;">read_lines</span> <span style=3D"color: #a0522d;">cmd<=
/span> =3D
    eval (call cmd <span style=3D"color: #a52a2a;">|-</span> read_all)
<span style=3D"color: #ff4500;">;;</span>

<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #0000ff;">wget</span> <span style=3D"color: #a0522d;">url</span>=
 =3D
    read_lines [<span style=3D"color: #8b2252;">"wget"</span>; <span style=
=3D"color: #8b2252;">"-O"</span>; <span style=3D"color: #8b2252;">"-"</span=
>; url]
<span style=3D"color: #ff4500;">;;</span>

<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #0000ff;">chrome_curl</span> <span style=3D"color: #a0522d;">url=
</span> =3D
    read_lines [<span style=3D"color: #8b2252;">"curl"</span>; <span style=
=3D"color: #8b2252;">"-k"</span>; <span style=3D"color: #8b2252;">"-sA"</sp=
an>; <span style=3D"color: #8b2252;">"Chrome"</span>; <span style=3D"color:=
 #8b2252;">"-L"</span>; url; <span style=3D"color: #8b2252;">"-o"</span>; <=
span style=3D"color: #8b2252;">"-"</span>]
<span style=3D"color: #ff4500;">;;</span>

<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #a0522d;">split_lines</span> =3D <span style=3D"color: #228b22;"=
>String.</span>split <span style=3D"color: #008b8b;">~on</span>:<span style=
=3D"color: #8b2252;">'\n'</span>
<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #0000ff;">filter_lines</span> <span style=3D"color: #a0522d;">su=
bstring</span> =3D <span style=3D"color: #228b22;">List.</span>filter <span=
 style=3D"color: #008b8b;">~f</span>:<span style=3D"color: #228b22;">String=
.</span>(is_substring ~substring)
<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #a0522d;">to_html</span> =3D <span style=3D"color: #228b22;">Htm=
l.</span>of_string
<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #0000ff;">find_html</span> <span style=3D"color: #a0522d;">pat</=
span> <span style=3D"color: #a0522d;">html</span> =3D <span style=3D"color:=
 #228b22;">Html.</span>(html <span style=3D"color: #a52a2a;">$$</span> pat)

<span style=3D"color: #000000; font-weight: bold;">let</span> (<span style=
=3D"color: #0000ff;">%</span>) =3D <span style=3D"color: #228b22;">Fn.</spa=
n>compose
</pre>
</div>

<p>
Then a simple script called <code>shexp</code> in my path:
</p>
<div class=3D"org-src-container">
<pre class=3D"src src-shell">utop -init ~/bin/ocaml-shexp-config
</pre>
</div>

<p>
I add little helper functions as I come upon them. I find it's much easier =
to transition to a file, or full program
when I need it. Example program:
</p>

<pre class=3D"example">
utop # read_lines ["sensors"] |&gt; split_lines |&gt; filter_lines "Core 0"=
;;
- : string list =3D
["Core 0:        +63.0=C2=B0C  (high =3D +84.0=C2=B0C, crit =3D +100.0=C2=
=B0C)"]
</pre>
</div>
</div>


<div id=3D"outline-container-org440656e" class=3D"outline-3">
<h3 id=3D"org440656e">Anton Kochkov said</h3>
<div class=3D"outline-text-3" id=3D"text-org440656e">
<p>
Not exactly OCaml, but can be made with the OCaml syntax as well - see
<a href=3D"https://github.com/batsh-dev-team/Batsh">BATSH</a>.
</p>
</div>
</div>


<div id=3D"outline-container-orgf367a6f" class=3D"outline-3">
<h3 id=3D"orgf367a6f">Bikal Lem also said</h3>
<div class=3D"outline-text-3" id=3D"text-orgf367a6f">
<p>
I just found this - <a href=3D"https://github.com/ShamoX/cash">https://gith=
ub.com/ShamoX/cash</a>. @Chet_Murthy This may be the closest to ocaml shell=
 scripting
experience re perl.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org97cce09" class=3D"outline-2">
<h2 id=3D"2"><a id=3D"org97cce09"></a>Are there learning materials for OCam=
l for those with no programming experience?</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/are-there-learning-material=
s-for-ocaml-for-those-with-no-programming-experience/5684/9">https://discus=
s.ocaml.org/t/are-there-learning-materials-for-ocaml-for-those-with-no-prog=
ramming-experience/5684/9</a>
</p>
</div>

<div id=3D"outline-container-org85e945b" class=3D"outline-3">
<h3 id=3D"org85e945b">Continuing this threaad, Luc_ML said</h3>
<div class=3D"outline-text-3" id=3D"text-org85e945b">
<p>
Before studying more complex books, it's a good idea to first get an overvi=
ew.
</p>

<p>
<a href=3D"https://www2.lib.uchicago.edu/keith/ocaml-class/class-01.html">O=
Caml for the Skeptical / OCaml in a Nutshell</a> : the
title is funny; its main advantage is that it covers most OCaml concepts in=
 <b>21 short sections</b> where you can
experiment by yourself on simple but essential things.
</p>

<p>
The books/courses already mentioned are nice. You can also consider this on=
e that offers many examples/exercises and
also a good overview: <a href=3D"https://caml.inria.fr/pub/docs/oreilly-boo=
k/">Developing Applications With Objective Caml</a>.
</p>

<p>
LE LANGAGE CAML mentioned by @nojb is an excellent book. Written in Caml Li=
ght, it's easy to turn it by yourself into
OCaml. It offers a great chance to learn how to do a lot of things in <b>pu=
re</b> Caml with only stdlib and a simple
syntax extension system (use camlp5 (i.e. the "genuine camlp4") that is fin=
e for that. It works out of the box to
deal with streams and it's a chance to understand what is a LL(1)/recursive=
 descent parser).
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org1bd3e96" class=3D"outline-2">
<h2 id=3D"3"><a id=3D"org1bd3e96"></a>Dune meeting notes</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/dune-meeting-notes/5710/1">=
https://discuss.ocaml.org/t/dune-meeting-notes/5710/1</a>
</p>
</div>

<div id=3D"outline-container-org081d545" class=3D"outline-3">
<h3 id=3D"org081d545">J=C3=A9r=C3=A9mie Dimino announced</h3>
<div class=3D"outline-text-3" id=3D"text-org081d545">
<p>
I just wanted to publicise that we are now publishing the notes from our Du=
ne meetings on the wiki:
</p>

<p>
<a href=3D"https://github.com/ocaml/dune/wiki">https://github.com/ocaml/dun=
e/wiki</a>
</p>

<p>
These meetings happen via video-conference every two weeks. If you are inte=
rested in following the development of
Dune more closely, this is good place to look at.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-orgb8faa19" class=3D"outline-2">
<h2 id=3D"4"><a id=3D"orgb8faa19"></a>OCaml 4.11.0, first alpha release</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ocaml-4-11-0-first-alpha-re=
lease/5716/1">https://discuss.ocaml.org/t/ocaml-4-11-0-first-alpha-release/=
5716/1</a>
</p>
</div>

<div id=3D"outline-container-org3554018" class=3D"outline-3">
<h3 id=3D"org3554018">octachron announced</h3>
<div class=3D"outline-text-3" id=3D"text-org3554018">
<p>
The set of new features for the future version 4.11.0 of OCaml has been fro=
zen.
In the next few months, the OCaml compiler team is focusing on bug hunting =
and fixing.
</p>

<p>
For this release cycle, we have decided to test publishing regularly alpha =
versions of OCaml 4.11.0 in order to help
fellow hackers join us early in our bug hunting and opam ecosystem fixing f=
un.
Once the opam ecosystem is in shape, these alpha releases will morph into t=
he usual beta and release candidate
releases.
</p>

<p>
If you find any bugs, please report them here:
 <a href=3D"https://github.com/ocaml/ocaml/issues">https://github.com/ocaml=
/ocaml/issues</a>
</p>

<p>
The compiler can be installed as an OPAM switch with one of the following c=
ommands
</p>
<div class=3D"org-src-container">
<pre class=3D"src src-shell">opam switch create ocaml-variants.4.11.0+alpha=
1 --repositories=3Ddefault,<span style=3D"color: #a0522d;">beta</span>=3Dgi=
t+https://github.com/ocaml/ocaml-beta-repository.git
</pre>
</div>
<p>
or
</p>
<div class=3D"org-src-container">
<pre class=3D"src src-shell">opam switch create ocaml-variants.4.11.0+alpha=
1+VARIANT --repositories=3Ddefault,<span style=3D"color: #a0522d;">beta</sp=
an>=3Dgit+https://github.com/ocaml/ocaml-beta-repository.git
</pre>
</div>
<p>
where you replace VARIANT with one of these: afl, flambda, fp, fp+flambda
</p>

<p>
The source code for the alpha is also available at these addresses:
</p>

<p>
<a href=3D"https://github.com/ocaml/ocaml/archive/4.11.0+alpha1.tar.gz">htt=
ps://github.com/ocaml/ocaml/archive/4.11.0+alpha1.tar.gz</a><br />
<a href=3D"https://caml.inria.fr/pub/distrib/ocaml-4.11/ocaml-4.11.0+alpha1=
.tar.gz">https://caml.inria.fr/pub/distrib/ocaml-4.11/ocaml-4.11.0+alpha1.t=
ar.gz</a>
</p>

<p>
If you are interested by the ongoing list of new features and fixed bugs, t=
he
updated change log for OCaml 4.11.0 is available at:
</p>

<p>
<a href=3D"https://github.com/ocaml/ocaml/blob/4.11/Changes">https://github=
.com/ocaml/ocaml/blob/4.11/Changes</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org384316c" class=3D"outline-2">
<h2 id=3D"5"><a id=3D"org384316c"></a>OCaml Users and Developers Meeting 20=
20</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ocaml-users-and-developers-=
meeting-2020/5454/2">https://discuss.ocaml.org/t/ocaml-users-and-developers=
-meeting-2020/5454/2</a>
</p>
</div>

<div id=3D"outline-container-orgef4f80a" class=3D"outline-3">
<h3 id=3D"orgef4f80a">Ivan Gotovchits announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgef4f80a">
<p>
Due to the multiple requests and since ICFP will be now officially held onl=
ine with a significantly reduced fee, we
decided to extend the submission deadline till the end of this month. We ar=
e hoping to attract a larger and more
diverse audience this year, given that the new format is more accessible bo=
th travel-wise and financially.
</p>

<p>
Please, share the news widely!
</p>
</div>

<div id=3D"outline-container-org69614f3" class=3D"outline-4">
<h4 id=3D"org69614f3">Important Dates (updated)</h4>
<div class=3D"outline-text-4" id=3D"text-org69614f3">
<ul class=3D"org-ul">
<li>Talk proposal submission deadline: May 29th, 2020, AoE</li>
<li>Author Notification: July 17th, 2020</li>
<li>OCaml Workshop: August 28th, 2020</li>
</ul>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-org65a5706" class=3D"outline-2">
<h2 id=3D"6"><a id=3D"org65a5706"></a>VSCode Platform Plugin 0.5.0</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-vscode-platform-plugin-=
0-5-0/5752/1">https://discuss.ocaml.org/t/ann-vscode-platform-plugin-0-5-0/=
5752/1</a>
</p>
</div>

<div id=3D"outline-container-org586a340" class=3D"outline-3">
<h3 id=3D"org586a340">Rudi Grinberg announced</h3>
<div class=3D"outline-text-3" id=3D"text-org586a340">
<p>
This release contains a couple of major improvements:
</p>

<ul class=3D"org-ul">
<li>Syntax highlighting is vastly improved. There's now highlighting for ma=
ny more filetypes, and the core highlighting for OCaml is far more accurate=
.</li>
<li>There's integration with package managers such as opam and esy. One may=
 now explicitly use them to explicitly select the sandbox that contains the=
 lsp server and related tools.</li>
</ul>

<p>
Under the hood, the entire plugin was rewritten from typescript to OCaml (b=
ucklescript). This should hopefully make
contribution more accessible to OCaml hackers.
</p>

<p>
I'd like to thank @rustykey, @mnxn, @prometheansacrifice, and @imbsky for t=
heir contributions to this release. Their
help is the reason for this vastly improved version of the plugin.
</p>

<p>
As usual, the plugin is available directly using vscode's extension market =
place. I'll leave a link to the plugin
<a href=3D"https://marketplace.visualstudio.com/items?itemName=3Docamllabs.=
ocaml-platform">here</a> to avoid confusion with the many
other OCaml plugins available.
</p>

<p>
Please report any issues on the <a href=3D"https://github.com/ocamllabs/vsc=
ode-ocaml-platform/issues">bug tracker</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org49b8a65" class=3D"outline-2">
<h2 id=3D"7"><a id=3D"org49b8a65"></a>Other OCaml News</h2>
<div class=3D"outline-text-2" id=3D"text-7">
</div>
<div id=3D"outline-container-org2406831" class=3D"outline-3">
<h3 id=3D"org2406831">From the ocamlcore planet blog</h3>
<div class=3D"outline-text-3" id=3D"text-org2406831">
<p>
Here are links from many OCaml blogs aggregated at <a href=3D"http://ocaml.=
org/community/planet/">OCaml Planet</a>.
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://ocsigen.github.io/blog/2020/05/05/os/">Ocsigen Start=
 2.18 released</a></li>
<li><a href=3D"https://ocsigen.github.io/blog/2020/05/04/ot/">Ocsigen Toolk=
it 2.7 with new widget Ot_tongue</a></li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-org019999d" class=3D"outline-2">
<h2 id=3D"org019999d">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org019999d">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"http://alan.petitepomme.net/cwn/">the archive</a> or the <a=
 href=3D"http://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archives<=
/a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname">
<p>
<a href=3D"http://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

