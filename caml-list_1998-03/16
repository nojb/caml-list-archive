Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA03997 for caml-redistribution; Fri, 27 Mar 1998 12:10:27 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA06732 for <caml-list@pauillac.inria.fr>; Thu, 26 Mar 1998 20:42:04 +0100 (MET)
Received: from nef.ens.fr (nef.ens.fr [129.199.96.12])
	by nez-perce.inria.fr (8.8.7/8.8.5) with ESMTP id UAA18526
	for <caml-list@inria.fr>; Thu, 26 Mar 1998 20:42:03 +0100 (MET)
Received: from dmi.ens.fr (dmi.ens.fr [129.199.96.11])
          by nef.ens.fr (8.8.8/jtpda-5.1) with ESMTP id UAA22873
          ; Thu, 26 Mar 1998 20:41:07 +0100 (MET)
Received: from Fuchsia (ppp-6.ens.fr [129.199.1.165])
          by dmi.ens.fr (8.8.8/jtpda-5.1) with SMTP id UAA26989
          ; Thu, 26 Mar 1998 20:41:00 +0100 (MET)
Message-ID: <351AAE5A.3E35@ens.fr>
Date: Thu, 26 Mar 1998 20:36:58 +0100
From: Gang CHEN <Chen.Gang@ens.fr>
X-Mailer: Mozilla 3.0Gold (Win95; I)
MIME-Version: 1.0
To: caml-list@inria.fr
CC: info@cygnus.com, coq-club@pauillac.inria.fr
Subject: gcc compilation of ocaml  and native code coq in window95
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis

I find that compilation of ocaml in window95 by using gcc is possible. I
have realized such compilation with  cygnus tool kit.  In configuration,
arch is set to linux. 

This ocaml has all unix library functions. For example, you can use
Unix.fork, etc. Both native code ocamlc and ocamlopt are compiled. 
Using this ocaml, I have compiled camlp4 and coq6.2, including native
code camlp4 and coq. 

The compilation needs several modifications to the original distribution
of ocaml. The main points are:

1. set EXE=.exe in the configuration
2. remove the use of _Win32 variables in .c files. (I am not sure all
consequences of this modification, but if you do not do this, there will
be some errors. I would like some experts to give comments on this. )
3. copy linux gcc include files to the /usr/include directory. (there
are no un.h in cygnus gcc library).
4. In emit.ml and i386.s, make global variables  prefixed by _. (in the
assemble code, linux_elf does not prefix variables by _, but win32 does
it). 

One aspect that I am not quite satisfactory is the implementation of
Sys.command. It calls command in the Cygnus bash shell. But Cygnus does
not always well execute dos commands. This will give some trouble when
using -pp preprocessing in ocamlc. It might be possible to implement
Sys.command so that it calls Dos shell command, as done in the official
ocaml implemantation. But, then, I am not be able to compile the native
code ocaml. 

Graphic library has not been compiled.

Compilations of camlp4 and coq also need some modifications to the
original distributions. 

I find that ocaml source distribution is well organized and commented so
it is relatively easy to find where we need to modify.

This compilation shows that Cygnus is powerful. But it is not stable
yet. It makes my computer dead many times, especially in the compilation
of camlp4.  Execution of some Dos program does not generate identical
output as executed in Dos.  So when you redirect this output, as needed
in the preprocessing of ocaml, there will be problem. 

Your suggestions and questions are wellcome.

Gang Chen
DMI-ENS
email: gang@dmi.ens.fr





