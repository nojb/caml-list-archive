Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA19904 for caml-redistribution; Tue, 10 Mar 1998 19:41:11 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA18739 for <caml-list@pauillac.inria.fr>; Mon, 9 Mar 1998 23:05:12 +0100 (MET)
Received: from shell5.ba.best.com (root@shell5.ba.best.com [206.184.139.136])
	by nez-perce.inria.fr (8.8.7/8.8.5) with ESMTP id XAA19195
	for <caml-list@inria.fr>; Mon, 9 Mar 1998 23:05:09 +0100 (MET)
Received: from localhost (bpr@localhost) by shell5.ba.best.com (8.8.8/8.8.BEST) with SMTP id NAA13109 for <caml-list@inria.fr>; Mon, 9 Mar 1998 13:02:19 -0800 (PST)
Date: Mon, 9 Mar 1998 13:02:19 -0800 (PST)
From: Brian Rogoff <bpr@best.com>
To: caml-list@inria.fr
Subject: Overloading
Message-ID: <Pine.BSF.3.96.980309124523.7835A-100000@shell5.ba.best.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: weis

(My apologies for the lack of a French version of this message)

Hi Caml'ers,
	One of the things I miss the most when I'm working in Caml is 
overloading. There are numerous situations, such as arithmetic, linear 
algebra (where I may want multiplication between scalars, vectors, 
matrices, and higher order tensors), I/O (read/write/open), etc. where 
it is IMO the "right thing". Are there any plans to add some form of 
overloading to Caml in the future? I know that the Haskell folks plan to 
remove the single parameter restriction in type classes and gain more 
expressiveness in these areas, but none of the ML family of languages 
I know of support any overloading.

	My experience with overloading in Ada is almost entirely positive.

-- Brian






