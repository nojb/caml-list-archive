Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 114A7BC69
	for <caml-list@yquem.inria.fr>; Wed, 22 Aug 2007 04:55:04 +0200 (CEST)
Received: from ipmail01.adl2.internode.on.net (ipmail01.adl2.internode.on.net [203.16.214.140])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l7M2t1Q0031169
	for <caml-list@inria.fr>; Wed, 22 Aug 2007 04:55:03 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAHNBy0Y7pw2h/2dsb2JhbAAM
X-IronPort-AV: E=Sophos;i="4.19,292,1183300200"; 
   d="scan'208";a="177143581"
Received: from ppp59-167-13-161.lns2.syd7.internode.on.net (HELO [192.168.1.201]) ([59.167.13.161])
  by ipmail01.adl2.internode.on.net with ESMTP; 22 Aug 2007 12:24:32 +0930
Subject: Re: [Caml-list] Ropes and rope-like functional extensible vectors
	with O(1) prepend/append.
From: skaller <skaller@users.sourceforge.net>
To: Luca de Alfaro <luca@dealfaro.org>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <28fa90930708211439k1a5c251cv20831c47877a904f@mail.gmail.com>
References: <20070728233305.GB28879@tux-chan>
	 <28fa90930708211439k1a5c251cv20831c47877a904f@mail.gmail.com>
Content-Type: text/plain
Date: Wed, 22 Aug 2007 12:54:31 +1000
Message-Id: <1187751271.9072.43.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 46CBA585.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; vectors:01 prepend:01 node:01 arrays:01 mutable:01 sourceforge:01 wrote:01 rewrite:01 extensible:01 caml-list:01 append:02 functional:02 functional:02 construct:02 experiments:03 

On Tue, 2007-08-21 at 14:39 -0700, Luca de Alfaro wrote:
> Great work! 
> 
> One small question: someone suggested me to rewrite Vec to add a Leaf
> (Node_without_children) construct, to cut down on the number of Empty
> instances I use.  I have so far not done that (no reason in
> particular, but I was busy with other things).  In light of your
> experiments, would you also advise me to do it?  

You should look at Judy arrays. They don't require rebalancing.
The current implementation is mutable -- it would be very interesting
to see a functional version.


-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

