Return-Path: <tews@cs.ru.nl>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 34AC4BC6B
	for <caml-list@yquem.inria.fr>; Tue, 28 Aug 2007 14:48:23 +0200 (CEST)
Received: from smeltpunt.science.ru.nl (smeltpunt.science.ru.nl [131.174.16.145])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l7SCmMwt022594
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=OK)
	for <caml-list@yquem.inria.fr>; Tue, 28 Aug 2007 14:48:23 +0200
Received: from tandem.cs.ru.nl (tandem.cs.ru.nl [131.174.142.18])
	by smeltpunt.science.ru.nl (8.13.7/5.17) with ESMTP id l7SCmK7V008172
	for <caml-list@yquem.inria.fr>; Tue, 28 Aug 2007 14:48:20 +0200 (MEST)
Received: from tews by tandem.cs.ru.nl with local (Exim 4.63)
	(envelope-from <tews@tandem.cs.ru.nl>)
	id 1IQ0UW-00074t-Ps
	for caml-list@yquem.inria.fr; Tue, 28 Aug 2007 14:48:20 +0200
From: Hendrik Tews <tews@cs.ru.nl>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] cookies in netclient
References: <18127.20625.317597.197268@tandem.cs.ru.nl>
	<1188253645.7533.15.camel@localhost.localdomain>
Date: Tue, 28 Aug 2007 14:48:20 +0200
In-Reply-To: <1188253645.7533.15.camel@localhost.localdomain> (Gerd
	Stolpmann's message of "Tue, 28 Aug 2007 00:27:24 +0200")
Message-ID: <wwutzqjdduz.fsf@tandem.cs.ru.nl>
User-Agent: Gnus/5.110006 (No Gnus v0.6) Emacs/21.4 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Scanned-By: MIMEDefang 2.56 on 131.174.16.145
X-Miltered: at discorde with ID 46D41996.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; hendrik:01 tews:01 tews:01 netclient:01 gerd:01 stolpmann:01 ocamlnet:01 hendrik:01 cookie:98 cookie:98 curl:98 caml-list:01 functions:01 writes:01 behaviour:01 

Gerd Stolpmann <info@gerd-stolpmann.de> writes:

   No, not automatically, i.e. it doesn't mimick the behaviour of a
   browser. You can get cookies by looking in the header, and also set them
   in the header. There are helper functions for this in Nethttp.Header.

Well but then I can't use the Convenience module, can I?

I briefly looked at Convenience.http_get. I have the impression
that in order to store cookies in the header I should modify the
header after the creation of the http_call object with 
new get (...). But how do I access to the get http_header object
that I suppose is somewhere inside http_call?

   Unfortunately, get_set_cookie is missing (I have an implementation if
   you really need it).

This one would retrieve the cookies as an Nethttp.cookie list? I
don't know yet if I need it.


I would like to use ocamlnet instead of
 "curl -b cookies.txt -c cookies.txt ..." to retrieve pages and
submit data with the post method. Any hints are appreciated.

Bye,

Hendrik

