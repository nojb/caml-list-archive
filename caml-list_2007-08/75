Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id A1C70BC6B
	for <caml-list@yquem.inria.fr>; Sat,  4 Aug 2007 17:42:25 +0200 (CEST)
Received: from ipmail01.adl2.internode.on.net (ipmail01.adl2.internode.on.net [203.16.214.140])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l74FgNPH013508
	for <caml-list@inria.fr>; Sat, 4 Aug 2007 17:42:24 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAALk6tEZ5LGJp/2dsb2JhbAAN
X-IronPort-AV: E=Sophos;i="4.19,220,1183300200"; 
   d="scan'208";a="167085232"
Received: from ppp121-44-98-105.lns10.syd6.internode.on.net (HELO [192.168.1.201]) ([121.44.98.105])
  by ipmail01.adl2.internode.on.net with ESMTP; 05 Aug 2007 01:12:21 +0930
Subject: Re: [Caml-list] Sorted list
From: skaller <skaller@users.sourceforge.net>
To: Brian Hurt <bhurt@spnz.org>
Cc: tmp123@menta.net, ocaml ml <caml-list@inria.fr>
In-Reply-To: <Pine.LNX.4.64.0708041100300.9657@localhost>
References: <46B4485B.7040406@menta.net> <46B454ED.700@philippewang.info>
	 <1186226538.14440.105.camel@rosella.wigram> <46B48F3C.1040904@menta.net>
	 <Pine.LNX.4.64.0708041100300.9657@localhost>
Content-Type: text/plain
Date: Sun, 05 Aug 2007 01:42:21 +1000
Message-Id: <1186242141.11801.10.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 46B49E5F.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 lgpl:01 cathedral:98 disciples:98 sourceforge:01 wrote:01 maintainers:01 volunteers:01 caml-list:01 data:02 algorithms:03 library:03 repository:03 distributed:05 

On Sat, 2007-08-04 at 11:09 -0400, Brian Hurt wrote:

> Unortunately, the standard Ocaml solution in a situation like this is to 
> implement your own data structure.  The good news is that this is easy. 
> The bad news is that, because this is easy, there is little pressure on 
> the maintainers of Ocaml to add features to the core library.

Well, I would like to see a community process for selecting,
implementing, documenting and maintaining a set of good algorithms
which go IN THE STANDARD DISTRIBUTION (under the usual LGPL+X licence,
with a disclaimer the code base isn't maintained by Inria, merely
distributed on behalf of the community).

So Inria should provide the repository, and the Ocaml team has
a final veto on selection .. but the work is done by outside
volunteers.

So please would the High Priests of the Cathedral like
to run a little Bazaar for their disciples?

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

