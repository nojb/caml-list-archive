Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 3C7A6BC6B
	for <caml-list@yquem.inria.fr>; Sat,  4 Aug 2007 12:28:41 +0200 (CEST)
Received: from ipmail01.adl2.internode.on.net (ipmail01.adl2.internode.on.net [203.16.214.140])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l74ASdK2000667
	for <caml-list@yquem.inria.fr>; Sat, 4 Aug 2007 12:28:40 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAANvws0Z5LGJp/2dsb2JhbAAN
X-IronPort-AV: E=Sophos;i="4.19,220,1183300200"; 
   d="scan'208";a="167013675"
Received: from ppp121-44-98-105.lns10.syd6.internode.on.net (HELO [192.168.1.201]) ([121.44.98.105])
  by ipmail01.adl2.internode.on.net with ESMTP; 04 Aug 2007 19:58:36 +0930
Subject: Str replacement
From: skaller <skaller@users.sourceforge.net>
To: caml-list@yquem.inria.fr
Content-Type: text/plain
Date: Sat, 04 Aug 2007 20:28:35 +1000
Message-Id: <1186223315.14440.64.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 46B454D7.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; incorrectly:01 rewrote:01 sourceforge:01 imho:01 functional:02 python:03 module:03 module:03 programming:03 library:03 perhaps:05 xavier:06 underlying:06 interface:06 interface:06 

When is the Str module going to be extended to provide
re-entrant operations??

I understand (perhaps incorrectly) that Xavier rewrote the
code for this module, and assume the underlying functionality
is re-entrant? 

For compatibility the old broken interface is still available,
which is fine, but a re-entrant interface should be provided.
IMHO. It's disgusting, having a library like this in a functional
programming language. Even Python gets this right.

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

