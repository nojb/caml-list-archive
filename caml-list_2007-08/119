Return-Path: <Xavier.Leroy@inria.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 2338FBC69
	for <caml-list@yquem.inria.fr>; Sun,  5 Aug 2007 18:26:15 +0200 (CEST)
Received: from smtp6-g19.free.fr (smtp6-g19.free.fr [212.27.42.36])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l75GQEO3018422
	for <caml-list@inria.fr>; Sun, 5 Aug 2007 18:26:14 +0200
Received: from smtp6-g19.free.fr (localhost.localdomain [127.0.0.1])
	by smtp6-g19.free.fr (Postfix) with ESMTP id 9B537B8A5F;
	Sun,  5 Aug 2007 18:26:14 +0200 (CEST)
Received: from [192.168.1.2] (che78-2-82-237-71-191.fbx.proxad.net [82.237.71.191])
	by smtp6-g19.free.fr (Postfix) with ESMTP id 33288B89F8;
	Sun,  5 Aug 2007 18:26:14 +0200 (CEST)
Message-ID: <46B5FA25.7090001@inria.fr>
Date: Sun, 05 Aug 2007 18:26:13 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
User-Agent: Mozilla Thunderbird 1.0.2 (X11/20050317)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: skaller <skaller@users.sourceforge.net>
Cc: Brian Hurt <bhurt@spnz.org>, tmp123@menta.net,
	ocaml ml <caml-list@inria.fr>
Subject: Re: [Caml-list] Sorted list
References: <46B4485B.7040406@menta.net> <46B454ED.700@philippewang.info>	<1186226538.14440.105.camel@rosella.wigram>	<46B48F3C.1040904@menta.net>	<Pine.LNX.4.64.0708041100300.9657@localhost> <1186242141.11801.10.camel@rosella.wigram>
In-Reply-To: <1186242141.11801.10.camel@rosella.wigram>
X-Enigmail-Version: 0.91.0.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 46B5FA26.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 modestly:01 lgpl:01 admittedly:01 cathedral:98 disciples:98 maintainers:01 volunteers:01 caml-list:01 data:02 data:02 namely:02 algorithms:03 programming:03 

In reply to Brian Hurt's comment:

>>Unortunately, the standard Ocaml solution in a situation like this is to
>>implement your own data structure.  The good news is that this is easy.
>>The bad news is that, because this is easy, there is little pressure on
>>the maintainers of Ocaml to add features to the core library.

We'll leave the development of the be-all and end-all of data structure
libraries to others (see below).  At any rate, I noticed something
interesting in this thread, namely that even if the OCaml core library
provided an implementation of priority queues, it would probably not
have met the needs of the original poster, because textbook priority
queues do not provide a "remove" operation.  In other terms, it is
often inevitable to implement your own "tailor-fit" data structure;
that is part of programming.

In reply to John Skaller's request:

> Well, I would like to see a community process for selecting,
> implementing, documenting and maintaining a set of good algorithms

Why not.  Care to start such a process yourself?  Or more modestly
joining one of the existing efforts for building additional OCaml
libraries, like Extlib?

> which go IN THE STANDARD DISTRIBUTION (under the usual LGPL+X licence,
> with a disclaimer the code base isn't maintained by Inria, merely
> distributed on behalf of the community).
> So Inria should provide the repository, and the Ocaml team has
> a final veto on selection .. but the work is done by outside
> volunteers.

No way.  Neither you nor us want to deal with our (admittedly slow)
release cycle, with copyright assignments, etc.  Moreover, we
definitely do not have the time and manpower to build such an
infrastructure, decide between conflicting proposals, etc.  If a
community is willing to make such an effort, it will have to
self-organize.

> So please would the High Priests of the Cathedral like
> to run a little Bazaar for their disciples?

Bazaars are not run by priests.

- Xavier Leroy

