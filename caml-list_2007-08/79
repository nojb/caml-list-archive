Return-Path: <bhurt@spnz.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 57183BC6B
	for <caml-list@yquem.inria.fr>; Sat,  4 Aug 2007 19:07:15 +0200 (CEST)
Received: from bsd4.nyct.net (mail-out8.nyct.net [216.139.141.8])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l74H7EUb023619
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Sat, 4 Aug 2007 19:07:15 +0200
Received: from [192.168.42.2] (adsl-216-139-154-52.nyct.net [216.139.154.52])
	by bsd4.nyct.net (8.13.4/8.13.4) with ESMTP id l74H79ok077915;
	Sat, 4 Aug 2007 13:07:11 -0400 (EDT)
	(envelope-from bhurt@spnz.org)
Date: Sat, 4 Aug 2007 13:17:57 -0400 (EDT)
From: Brian Hurt <bhurt@spnz.org>
X-X-Sender: bhurt@localhost
To: Richard Jones <rich@annexia.org>
Cc: ocaml ml <caml-list@inria.fr>
Subject: Re: [Caml-list] Sorted list
In-Reply-To: <20070804162135.GA7370@furbychan.cocan.org>
Message-ID: <Pine.LNX.4.64.0708041258290.9657@localhost>
References: <46B4485B.7040406@menta.net> <46B454ED.700@philippewang.info>
 <1186226538.14440.105.camel@rosella.wigram> <46B48F3C.1040904@menta.net>
 <Pine.LNX.4.64.0708041100300.9657@localhost> <1186242141.11801.10.camel@rosella.wigram>
 <20070804162135.GA7370@furbychan.cocan.org>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed
X-Miltered: at discorde with ID 46B4B242.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; functors:01 vastly:01 applicative:01 ocaml:01 monads:01 2007,:98 wrote:01 caml-list:01 purely:02 data:02 data:02 structures:02 structures:02 functional:02 contributors:03 



On Sat, 4 Aug 2007, Richard Jones wrote:

> But what's wrong with extlib?  Now I know it's not the "Standard"
> distribution, but that's a mere packaging issue.

Actually, extlib is a wonderfull example of what's wrong with this idea. 
I have grown to have major philosophical differences with extlib- despite 
the fact that I'm one of the major contributors.  For example, I'm much 
more fond of functors at this point (and I understand them better) than I 
did when I first started contributing.  At this point, I also prefer 
purely functional data structures as a default, even at a performance 
penalty- there are damned few places that need to pure speed that 
imperitive data structures give you (there are some, but they're a 
distinct minority)- in the vast majority of places, the performance 
benefits of impertive data structures are vastly outweighed by the 
correctness gaurentees applicative data structures can give you.

Others may disagree (in fact, they do)- that's OK.  I do not want to 
restart the epic arguments that occurred on the extlib list here on the 
main list (please, dear God, no).  My point here is that the Ocaml 
community is much less in agreement on how these core libraries should 
look and act than, say, the C++ or Java communities.  Even if we limit 
ourselves to, say, the Brian Hurts of past and present, the Brian Hurt of 
three years ago would have designed a radically different library than the 
Brian Hurt of a year ago, who in turn would have a different view than the 
Brian Hurt of today (who is learning, and liking, monads).  And God only 
knows what nutzoid radical ideas the Brian Hurt of a year from now, or 
five years from now, will have.

Brian

