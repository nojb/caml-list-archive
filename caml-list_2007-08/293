Return-Path: <brogoff@speakeasy.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.1 required=5.0 tests=AWL,SPF_SOFTFAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 43F71BC69
	for <caml-list@yquem.inria.fr>; Sun, 19 Aug 2007 18:23:00 +0200 (CEST)
Received: from mail8.sea5.speakeasy.net (mail8.sea5.speakeasy.net [69.17.117.10])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l7JGMv21032349
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Sun, 19 Aug 2007 18:22:59 +0200
Received: (qmail 16174 invoked from network); 19 Aug 2007 16:22:57 -0000
Received: from shell4.sea5.speakeasy.net ([69.17.116.5])
          (envelope-sender <brogoff@speakeasy.net>)
          by mail8.sea5.speakeasy.net (qmail-ldap-1.03) with AES256-SHA encrypted SMTP
          for <caml-list@inria.fr>; 19 Aug 2007 16:22:57 -0000
Date: Sun, 19 Aug 2007 09:22:56 -0700 (PDT)
From: brogoff <brogoff@speakeasy.net>
To: Caml-list List <caml-list@inria.fr>
Subject: Re: [Caml-list] If OCaml were a car
In-Reply-To: <200708191443.l7JEhEQ8007374@psi-phi.mit.edu>
Message-ID: <Pine.LNX.4.58.0708190911130.22029@shell4.speakeasy.net>
References: <200708191443.l7JEhEQ8007374@psi-phi.mit.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Miltered: at discorde with ID 46C86E61.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 syntax:01 parser:01 syntax:01 camlp:01 camlp:01 parser:01 recursive:01 grammars:01 2007,:98 fracture:98 wrote:01 unix:01 syntactic:01 

On Sun, 19 Aug 2007, John Carr wrote:
> > Maybe I ride this car too often to realize (or I'm dumb) but I don't
> > get the joke about controls.
>
> OCaml has a badly designed syntax processed by a badly implemented
> parser feeding into a backend that generates poor error messages.
> All this makes the language hard to use.  Anybody else learn C
> using pcc on Unix?

I'm not a fan of the current syntax or error handling either. What's the
way out? Revised didn't catch on widely, though it fixes a few of the
syntactic flaws. Now it appears that Revised will fracture into two
streams, one with camlp4 and the other with camlp5. That isn't a good
sign.

One of the better compilers I used for syntactic error messages was
GNAT, the free Ada 95 one, and the parser was hand coded recursive
descent (Ada's provided grammars are NOT even close to LL(1), either)
and the diagnostics were superb.

-- Brian

