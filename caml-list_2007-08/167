Return-Path: <Sebastien.Hinderer@ens-lyon.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 23C06BD3E
	for <caml-list@yquem.inria.fr>; Mon, 13 Aug 2007 09:17:41 +0200 (CEST)
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l7D7Hehs004779
	for <caml-list@yquem.inria.fr>; Mon, 13 Aug 2007 09:17:40 +0200
X-IronPort-AV: E=Sophos;i="4.19,253,1183327200"; 
   d="scan'208";a="267924"
Received: from zen.loria.fr (HELO localhost.localdomain) ([152.81.6.135])
  by mail1-relais-roc.national.inria.fr with ESMTP/TLS/AES256-SHA; 13 Aug 2007 09:17:40 +0200
Received: from seb by localhost.localdomain with local (Exim 4.67)
	(envelope-from <Sebastien.Hinderer@ens-lyon.org>)
	id 1IKUBI-0001yA-Jm
	for caml-list@yquem.inria.fr; Mon, 13 Aug 2007 09:17:40 +0200
Date: Mon, 13 Aug 2007 09:17:40 +0200
From: =?iso-8859-1?Q?S=E9bastien?= Hinderer <Sebastien.Hinderer@ens-lyon.org>
To: caml-list@yquem.inria.fr
Subject: Re: instanciation of functor using command line
Message-ID: <20070813071740.GA7554@zen>
Mail-Followup-To: caml-list@yquem.inria.fr
References: <46BFA819.4010805@irisa.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <46BFA819.4010805@irisa.fr>
X-Miltered: at discorde with ID 46C00594.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ens-lyon:01 functor:01 command-line:01 command-line:01 parsing:01 define:02 caml:02 argument:02 parse:02 output:02 module:03 ugly:04 sebastien:09 sebastien:09 file:11 

Hey Thomas :)

Why not make a little (Caml) script that would parse the command-line
(or an input file) and produce as output a file applying F to the
selected implementations ?
Parsing the command-line may not be that ugly: just define N lists, each
containing the possible values for the module Mi, so that you just have
to check that argument n is a member of the corresponding list.

My 2 cents,
Sébastien.

