Return-Path: <robert@fischerventure.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id B26FFBC6B
	for <caml-list@yquem.inria.fr>; Tue, 28 Aug 2007 16:54:09 +0200 (CEST)
Received: from looneymail-a5.g.dreamhost.com (lax-green-bigip-5.dreamhost.com [208.113.200.5])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l7SEs80H019291
	for <caml-list@inria.fr>; Tue, 28 Aug 2007 16:54:09 +0200
Received: from carols-computer-3.local (unknown [74.202.102.226])
	by looneymail-a5.g.dreamhost.com (Postfix) with ESMTP id 52751122329;
	Tue, 28 Aug 2007 07:54:06 -0700 (PDT)
Message-ID: <46D4370C.1000305@fischerventure.com>
Date: Tue, 28 Aug 2007 09:54:04 -0500
From: Robert Fischer <robert@fischerventure.com>
User-Agent: Thunderbird 2.0.0.6 (Macintosh/20070728)
MIME-Version: 1.0
To: Brian Hurt <bhurt@janestcapital.com>
Cc: Gordon Henriksen <gordonhenriksen@mac.com>, caml-list@inria.fr
Subject: Re: [Caml-list] Has the thread cancellation problem evolved ?
References: <9FA25C33-04DD-46BD-8959-873DDD2FFF82@epfl.ch>	<1188055755.10796.37.camel@rosella.wigram>	<1188257636.7533.23.camel@localhost.localdomain>	<BF8C1117-83A3-46AA-82C4-EC9D96E51F69@epfl.ch>	<5EB9CEB2-3B79-4652-B6D1-10FEEC8E55E5@mac.com> <46D432CA.8010708@janestcapital.com>
In-Reply-To: <46D432CA.8010708@janestcapital.com>
Content-Type: text/plain; charset=windows-1252; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 46D43710.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; dated:98 signaling:98 signaling:98 wrote:01 exception:01 exception:01 caml-list:01 handler:03 concurrent:04 brian:05 problem:05 somewhat:05 thread:06 standard:07 break:08 

Brian Hurt wrote:
> So what happens if I throw an infinite loop into an exception handler?
Now, my experience with .Net is somewhat dated, but I'm pretty sure it 
re-hangs on your loop, and signaling another abort will break out of 
your loop and continue up the chain of exception handlers.  At least 
once upon a time, there was a very large business which I worked for 
that did a lot of concurrent .Net work, and the standard solution was to 
keep signaling the abort until the thing finally died.

~~ Robert.

