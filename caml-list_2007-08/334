Return-Path: <Christophe.Troestler+ocaml@umh.ac.be>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 22906BC6D
	for <caml-list@yquem.inria.fr>; Tue, 21 Aug 2007 15:42:41 +0200 (CEST)
Received: from hedwig1.umh.ac.be (hedwig2.umh.ac.be [193.190.193.73])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l7LDgexO006061
	for <caml-list@yquem.inria.fr>; Tue, 21 Aug 2007 15:42:40 +0200
Received: from poincare.swapping.umh.ac.be ([10.102.100.12])
	by hedwig1.umh.ac.be (8.13.6/8.13.6) with ESMTP id l7LDm3PF2322516;
	Tue, 21 Aug 2007 15:48:03 +0200
Received: from localhost ([127.0.0.1] ident=trch)
	by poincare.swapping.umh.ac.be with esmtp (Exim 4.67)
	(envelope-from <Christophe.Troestler+ocaml@umh.ac.be>)
	id 1INU0C-0002wd-F0; Tue, 21 Aug 2007 15:42:36 +0200
Date: Tue, 21 Aug 2007 15:42:36 +0200 (CEST)
Message-Id: <20070821.154236.68145619.Christophe.Troestler+ocaml@umh.ac.be>
To: yitzhak@research.att.com
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] "opening" record types
From: Christophe TROESTLER <Christophe.Troestler+ocaml@umh.ac.be>
In-Reply-To: <67ECB685-E69A-43CA-867D-30B879DB0510@research.att.com>
References: <67ECB685-E69A-43CA-867D-30B879DB0510@research.att.com>
X-Face: #2fb%mPx>rRL@4ff~TVgZ"<[:,oL"`TUEGK/[8/qb58~C>jR(x4A+v/n)7BgpEtIph_neoLKJBq0JBY9:<qMr[nclFSC*8GVW;&@q*7^R?u"i{y>}8v|j
Organization: University of Mons-Hainaut
X-Mailer: Mew version 5.2.50 on Emacs 22.1 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.1 (www dot roaringpenguin dot com slash mimedefang)
X-Miltered: at discorde with ID 46CAEBD0.003 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; christophe:01 troestler:01 christophe:01 troestler:01 ocaml:01 yitzhak:01 mandelbaum:01 foo:01 foo:01 cheers:01 wrote:01 caml-list:01 umh:01 defined:02 defined:02 

On Tue, 21 Aug 2007 09:18:02 -0400, Yitzhak Mandelbaum wrote:
> 
> let y = {Foo.a=3; Foo.b=4}
> 
> Is there any way around this?  That is, is there any way to use the  
> field names of a record defined in another module without opening the  
> whole module or copying the whole definition of the record.

No because the record {a,b} may also be defined in another module and
you need to tell which one to use.  However, you can put the
qualification only once :

let y = {Foo.a=3; b=4}

Of course, if [Foo] name is long, you can alias it at the beginning of
your code :

module F = Very.Long.Module.Name

Cheers,
ChriS

