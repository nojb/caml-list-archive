Return-Path: <markus.mottl@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.2 required=5.0 tests=AWL,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 3701FBC6B
	for <caml-list@yquem.inria.fr>; Fri, 17 Aug 2007 16:05:46 +0200 (CEST)
Received: from nz-out-0506.google.com (nz-out-0506.google.com [64.233.162.233])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l7HE5jHF022369
	for <caml-list@inria.fr>; Fri, 17 Aug 2007 16:05:45 +0200
Received: by nz-out-0506.google.com with SMTP id z3so232846nzf
        for <caml-list@inria.fr>; Fri, 17 Aug 2007 07:05:45 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=pIqV6GR/5NPl6jbnnQIUhpn0PRMIZQr07fV524aAjqqXPX7nQZE8N0aOV1+GrC/mELxtyXIXWhwaXI67+NkQ1gF4QsbCJDKtMy1UG4GGT1GQL4ud4PYSQKWdJVHM5gta/CscjuoEooBbQX1nQc/Hs7NX3ByaujrprgdC2RIjBDA=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=EPyK6hB4OHWyfvASnyocdHX2w8FpCmANJTJEQP/VgrYZDcLPgSxMBejgzB2cecLCpd9O2gQi0hOS3VxgGqVRGvEcrR5NUBufFwJTLAZv5ncuHyXiEKYJCmYyM33IqFC1LtUO/LlzPnkruWISpBJM7mGz624fE36qa/A8LmzhTB4=
Received: by 10.142.178.13 with SMTP id a13mr183175wff.1187359541138;
        Fri, 17 Aug 2007 07:05:41 -0700 (PDT)
Received: by 10.142.89.5 with HTTP; Fri, 17 Aug 2007 07:05:41 -0700 (PDT)
Message-ID: <f8560b80708170705j761dff55s50433da0562ebdb4@mail.gmail.com>
Date: Fri, 17 Aug 2007 10:05:41 -0400
From: "Markus Mottl" <markus.mottl@gmail.com>
To: "Jacques Garrigue" <garrigue@math.nagoya-u.ac.jp>
Subject: Re: [Caml-list] Stopping and continuing GC
Cc: shiv@ece.ucsb.edu, caml-list@inria.fr
In-Reply-To: <20070817.100453.94562786.garrigue@math.nagoya-u.ac.jp>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <B27F0313-86A3-4F82-ACEB-A76659809418@ece.ucsb.edu>
	 <20070817.100453.94562786.garrigue@math.nagoya-u.ac.jp>
X-j-chkmail-Score: MSGID : 46C5AB39.000 on discorde : j-chkmail score : X : 0/20 1 0.000 -> 1
X-Miltered: at discorde with ID 46C5AB39.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; markus:01 mottl:01 markus:01 mottl:01 compaction:01 compaction:01 compactions:01 ocaml:01 wrote:01 caml-list:01 latency:01 latency:01 garrigue:03 garrigue:03 btw:03 

On 8/16/07, Jacques Garrigue <garrigue@math.nagoya-u.ac.jp> wrote:
> My understanding is that compaction is atomic, so there is no
> notion of starting and stopping it, just of allowing it or not.

This, btw., raises an interesting question: are there any ways (and
hopefully even intentions) to make compaction work in slices like the
major GC does?  We write extremely latency sensitive applications and
often even have to manually control when the GC performs collections.

Unfortunately, compaction cannot be controlled in the same way as the
major GC can be (e.g. calling the major GC with a specific slice
size).  That's why we have to turn off automatic compactions, too, and
run these latency sensitive applications on machines with very large
amounts of memory.

Are there any intentions to remedy this situation?

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl@gmail.com

