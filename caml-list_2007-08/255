Return-Path: <erickt@dslextreme.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 207A6BC69
	for <caml-list@yquem.inria.fr>; Fri, 17 Aug 2007 05:09:52 +0200 (CEST)
Received: from mail9.dslextreme.com (mail9.dslextreme.com [66.51.199.94])
	by concorde.inria.fr (8.13.6/8.13.6) with SMTP id l7H39oBV010850
	for <caml-list@inria.fr>; Fri, 17 Aug 2007 05:09:51 +0200
Received: (qmail 14923 invoked from network); 17 Aug 2007 03:09:49 -0000
Received: from unknown (HELO dhcp-60-140.guest-wireless.pixar.com) (erickt@199.108.77.12)
	by mail9.dslextreme.com with (RC4-MD5 encrypted) SMTP; Thu, 16 Aug 2007 20:09:49 -0700
Message-ID: <46C51175.6000208@dslextreme.com>
Date: Thu, 16 Aug 2007 20:09:41 -0700
From: Erick Tryzelaar <erickt@dslextreme.com>
User-Agent: Thunderbird 2.0.0.6 (Macintosh/20070728)
MIME-Version: 1.0
To: skaller <skaller@users.sourceforge.net>
Cc: Taras Glek <taras.judge@shaw.ca>, Caml List <caml-list@inria.fr>
Subject: Re: [Caml-list] JIT VM in OCaml: Impossible?
References: <5C180944-2CD9-48FB-8802-8AF57972AD2C@gmail.com>	<4DB2486A-4E68-4843-A02C-B058DB2CA28D@mac.com>	<1187285851.6017.17.camel@rosella.wigram>  <46C491E8.9010007@shaw.ca> <1187319000.29691.24.camel@rosella.wigram>
In-Reply-To: <1187319000.29691.24.camel@rosella.wigram>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 46C5117E.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 bytecode:01 compiler:01 caching:01 runtime:01 wrote:01 binaries:01 compile:01 compiles:01 caml-list:01 argument:02 python:03 optimization:03 optimization:03 compiled:04 

skaller wrote:
> Don't forget: a program has to be compiled one way or the other.
> Even Python is compiled to bytecode.  The tool above (Felix)
> is better than a JIT because it does whole program optimisation,
> generates machine binaries.
>
> So I don't buy 'slow' as an argument: the technique is much
> FASTER than any JIT system in all aspects, in fact it IS
> a JIT compiler -- it just compiles the whole program all the
> way from source with disk based caching which persists over
> invocations.
>   

For loose definitions of JIT :) It doesn't do runtime optimization of 
the code, of course.

And to be fair, since whole program optimization needs to start roughly 
from scratch every time, you can have some ugly compile times.

