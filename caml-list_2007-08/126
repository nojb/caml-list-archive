Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 95F99BC69
	for <caml-list@yquem.inria.fr>; Mon,  6 Aug 2007 02:11:29 +0200 (CEST)
Received: from ipmail01.adl2.internode.on.net (ipmail01.adl2.internode.on.net [203.16.214.140])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l75NMnt1014451
	for <caml-list@yquem.inria.fr>; Mon, 6 Aug 2007 01:22:51 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAHj0tUZ5LGJp/2dsb2JhbAAN
X-IronPort-AV: E=Sophos;i="4.19,223,1183300200"; 
   d="scan'208";a="167479430"
Received: from ppp121-44-98-105.lns10.syd6.internode.on.net (HELO [192.168.1.201]) ([121.44.98.105])
  by ipmail01.adl2.internode.on.net with ESMTP; 06 Aug 2007 08:52:47 +0930
Subject: Re: [Caml-list] Str replacement
From: skaller <skaller@users.sourceforge.net>
To: Xavier Leroy <Xavier.Leroy@inria.fr>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <46B5F55C.8050201@inria.fr>
References: <1186223315.14440.64.camel@rosella.wigram>
	 <46B5F55C.8050201@inria.fr>
Content-Type: text/plain
Date: Mon, 06 Aug 2007 09:22:46 +1000
Message-Id: <1186356166.6523.59.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 46B65BC9.003 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; 0200,:01 incorrectly:01 rewrote:01 respectable:98 sourceforge:01 wrote:01 caml-list:01 implemented:02 api:02 module:03 module:03 perhaps:05 trivially:05 xavier:06 xavier:06 

On Sun, 2007-08-05 at 18:05 +0200, Xavier Leroy wrote:
> > When is the Str module going to be extended to provide
> > re-entrant operations??
> 
> When someone designs a new interface to Str and gets it approved by a
> few respectable members of this community.  A proof-of-concept
> implementation wouldn't hurt either, although I'm OK with writing the
> final implementation.  It's the API for which I don't have ideas.
> 
> > I understand (perhaps incorrectly) that Xavier rewrote the
> > code for this module, and assume the underlying functionality
> > is re-entrant?
> 
> Correct.

Ah, this is all good news! A proof of concept could probably
be trivially implemented, just using the old interface.

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

