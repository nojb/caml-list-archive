Return-Path: <deliverable@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: **
X-Spam-Status: No, score=2.3 required=5.0 tests=AWL,DNS_FROM_RFC_POST,
	SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 014E3BBAF
	for <caml-list@yquem.inria.fr>; Fri, 19 Dec 2008 16:07:08 +0100 (CET)
X-IronPort-AV: E=Sophos;i="4.36,249,1228086000"; 
   d="scan'208";a="21526357"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 19 Dec 2008 16:07:07 +0100
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id mBJF77me002224
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Fri, 19 Dec 2008 16:07:07 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqQBAChHS0lKfVwYkWdsb2JhbACTJj4BAQEBCQsKBxEDqyRYg1SBA4wUAQMBA4MA
X-IronPort-AV: E=Sophos;i="4.36,249,1228086000"; 
   d="scan'208";a="21526356"
Received: from qw-out-2122.google.com ([74.125.92.24])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 19 Dec 2008 16:07:07 +0100
Received: by qw-out-2122.google.com with SMTP id 3so167197qwe.33
        for <caml-list@inria.fr>; Fri, 19 Dec 2008 07:07:06 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:cc:message-id:from:to
         :in-reply-to:content-type:content-transfer-encoding:mime-version
         :subject:date:references:x-mailer;
        bh=h8mGO74SKZBgV3fEh4UuS01W6R2rGnmwlZbE8fUw7K8=;
        b=WZpGMHAf6fUdhtjDwIUt1V+reSpL1ZQKIPMBqNPEEJJiO8KyqdWvyS9uDZbY/jYzY3
         ewN1nN8kKINX7UDeuY+s9YHDDQNXAomJUFvk7mV1C8qrTFiADi+/lC3NV9EA0z52tmXM
         mCTtcUcHDBkjMvGLMqUZUx4iN4GJTxhR51tMI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=cc:message-id:from:to:in-reply-to:content-type
         :content-transfer-encoding:mime-version:subject:date:references
         :x-mailer;
        b=mh2jR9sPXZLAH4WQPBm2uJx5KuRI3i5ESZPsxutoO1ZMKV+O5wqNBXGobWnTpy81px
         S1NMIzba1F0nORpYP8UpTooowyHJGOLrZOzX+wnKh3u2P8KTWxlHu3uqNT1OyEvvP0TZ
         J9LkoNwD0R8zrNb3C7vn6yCvtjtqzQMOfk2ec=
Received: by 10.215.15.9 with SMTP id s9mr4020082qai.244.1229699226087;
        Fri, 19 Dec 2008 07:07:06 -0800 (PST)
Received: from ?192.168.1.102? ([64.30.3.122])
        by mx.google.com with ESMTPS id 8sm109262ywg.18.2008.12.19.07.07.03
        (version=TLSv1/SSLv3 cipher=RC4-MD5);
        Fri, 19 Dec 2008 07:07:04 -0800 (PST)
Cc: OCaml <caml-list@inria.fr>,
	=?ISO-8859-1?Q?Mikkel_Fahn=F8e_J=F8rgensen?= <mikkel@dvide.com>
Message-Id: <52B31DF4-F49F-41A3-A630-CC9247C2F09C@gmail.com>
From: Alexy Khrabrov <deliverable@gmail.com>
To: Dario Teixeira <darioteixeira@yahoo.com>
In-Reply-To: <157727.93194.qm@web111508.mail.gq1.yahoo.com>
Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (Apple Message framework v929.2)
Subject: Re: [Caml-list] More cores
Date: Fri, 19 Dec 2008 10:06:59 -0500
References: <157727.93194.qm@web111508.mail.gq1.yahoo.com>
X-Mailer: Apple Mail (2.929.2)
X-Miltered: at concorde with ID 494BB89B.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; erlang:01 ocaml:01 model:01 erlang:01 model:01 interop:01 cheers:01 eclectic:98 embrace:98 threads:01 caml-list:01 functional:02 programming:03 concurrency:04 limitations:04 

Well, it's fun to join the old discussion in the new times.  The fact  
that computers go multicore at a greater scale makes it recurrent.

Erlang makes concurrency easy due to purity, and OCaml is famous for  
being eclectic.  Why not embrace Erlang's model by imposing  
limitations on what can be in threads -- keeping them pure?  Erlang  
model works and attracts people to functional programming in general.   
Even if some other model of concurrency prevails, it is interesting  
and useful to interop with Erlang easily.   Here's what Erlang folks  
have started:

http://code.google.com/p/erlocaml/

Doing this properly can solve a lot of needs out there, and bring lots  
of debugged, proven, high-quality concurrent server and communication  
code within reach.

Cheers,
Alexy

