Return-Path: <damien.doligez@inria.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 06354BBAF
	for <caml-list@yquem.inria.fr>; Thu,  4 Dec 2008 15:53:04 +0100 (CET)
X-IronPort-AV: E=Sophos;i="4.33,715,1220220000"; 
   d="scan'208";a="17981013"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 04 Dec 2008 15:53:03 +0100
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id mB4Er3Sw010759
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Thu, 4 Dec 2008 15:53:03 +0100
X-IronPort-AV: E=Sophos;i="4.33,715,1220220000"; 
   d="scan'208";a="17981009"
Received: from macabane.dapa.lip6.fr (HELO [192.168.1.101]) ([132.227.203.154])
  by mail2-relais-roc.national.inria.fr with ESMTP/TLS/AES128-SHA; 04 Dec 2008 15:53:01 +0100
Message-Id: <DBE5C0FF-8CC6-4AB0-9145-7B2CAB8B4DEE@inria.fr>
From: Damien Doligez <damien.doligez@inria.fr>
To: caml users <caml-list@inria.fr>
Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (Apple Message framework v929.2)
Subject: OCaml version 3.11.0 released.
Date: Thu, 4 Dec 2008 15:52:37 +0100
X-Mailer: Apple Mail (2.929.2)
X-Miltered: at discorde with ID 4937EECF.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; damien:01 damien:01 ocaml:01 ocaml:01 bug:01 abbreviation:01 expr:01 abstracting:01 subtyping:01 abbreviation:01 compilation:01 -output-obj:01 bytecode:01 compiler:01 compiler:01 

Dear OCaml users,

It is our pleasure to celebrate the 51st birthday of Eric S. Raymond
by releasing OCaml version 3.11.0.

This release brings you many bug fixes and a few much-wanted
features such as dynamic linking in native code (not available
on all architectures, though).  See below for the complete
list of changes from the previous version.

It is available here: < http://caml.inria.fr/download.en.html >

Please note: at this time it is only available as source and as
binary for Mac OS X on Intel processors.  Other binary versions
will be added to the Web site next week.

Happy hacking,

-- Damien Doligez for the OCaml team.



Objective Caml 3.11.0:
----------------------

(Changes that can break existing programs are marked with a "*"  )

Language features:
- Addition of lazy patterns: "lazy <pat>" matches suspensions whose  
values,
   after forcing, match the pattern <pat>.
- Introduction of private abbreviation types "type t = private <type- 
expr>",
   for abstracting the actual manifest type in type abbreviations.
- Subtyping is now allowed between a private abbreviation and its  
definition,
   and between a polymorphic method and its monomorphic instance.

Compilers:
- The file name for a compilation unit should correspond to a valid
   identifier (Otherwise dynamic linking and other things can fail, and
   a warning is emitted.)
* Revised -output-obj: the output name must now be provided; its
   extension must be one of .o/.obj, .so/.dll, or .c for the
   bytecode compiler. The compilers can now produce a shared library
   (with all the needed -ccopts/-ccobjs options) directly.
- -dtypes renamed to -annot, records (in .annot files) which function  
calls
   are tail calls.
- All compiler error messages now include a file name and location, for
   better interaction with Emacs' compilation mode.
- Optimized compilation of "lazy e" when the argument "e" is
   already evaluated.
- Optimized compilation of equality tests with a variant constant  
constructor.
- The -dllib options recorded in libraries are no longer ignored when
   -use_runtime or -use_prims is used (unless -no_auto_link is
   explicitly used).
- Check that at most one of -pack, -a, -shared, -c, -output-obj is
   given on the command line.
- Optimized compilation of private types as regular manifest types
   (e.g. abbreviation to float, float array or record types with only
    float fields).

Native-code compiler:
- New port: Mac OS X / Intel in 64-bit mode (configure with -cc "gcc - 
m64").
- A new option "-shared" to produce a plugin that can be dynamically
   loaded with the native version of Dynlink.
- A new option "-nodynlink" to enable optimizations valid only for code
   that is never dynlinked (no-op except for AMD64).
- More aggressive unboxing of floats and boxed integers.
- Can select which assembler and asm options to use at configuration  
time.

Run-time system:
- New implementation of the page table describing the heap (two-level
   array in 32 bits, sparse hashtable in 64 bits), fixes issues with  
address
   space randomization on 64-bit OS (PR#4448).
- New "generational" API for registering global memory roots with the  
GC,
   enables faster scanning of global roots.
   (The functions are caml_*_generational_global_root in <caml/ 
memory.h>.)
- New function "caml_raise_with_args" to raise an exception with several
   arguments from C.
- Changes in implementation of dynamic linking of C code:
   under Win32, use Alain Frisch's flexdll implementation of the dlopen
   API; under MacOSX, use dlopen API instead of MacOSX bundle API.
- Programs may now choose a first-fit allocation policy instead of
   the default next-fit.  First-fit reduces fragmentation but is
   slightly slower in some cases.

Standard library:
- Parsing library: new function "set_trace" to programmatically turn
   on or off the printing of a trace during parsing.
- Printexc library: new functions "print_backtrace" and "get_backtrace"
   to obtain a stack backtrace of the most recently raised exception.
   New function "record_backtrace" to turn the exception backtrace  
mechanism
   on or off from within a program.
- Scanf library: fine-tuning of meta format implementation;
   fscanf behaviour revisited: only one input buffer is allocated for  
any
   given input channel;
   the %n conversion does not count a lookahead character as read.

Other libraries:
- Dynlink: on some platforms, the Dynlink library is now available in
   native code. The boolean Dynlink.is_native allows the program to
   know whether it has been compiled in bytecode or in native code.
- Bigarrays: added "unsafe_get" and "unsafe_set"
   (non-bound-checking versions of "get" and "set").
- Bigarrays: removed limitation "array dimension < 2^31".
- Labltk: added support for TK 8.5.
- Num: added conversions between big_int and int32, nativeint, int64.
   More efficient implementation of Num.quo_num and Num.mod_num.
- Threads: improved efficiency of mutex and condition variable  
operations;
   improved interaction with Unix.fork (PR#4577).
- Unix: added getsockopt_error returning type Unix.error.
   Added support for TCP_NODELAY and IPV6_ONLY socket options.
- Win32 Unix: "select" now supports all kinds of file descriptors.
   Improved emulation of "lockf" (PR#4609).

Tools:
- ocamldebug now supported under Windows (MSVC and Mingw ports),
   but without the replay feature.  (Contributed by Dmitry Bely
   and Sylvain Le Gall at OCamlCore with support from Lexifi.)
- ocamldoc: new option -no-module-constraint-filter to include functions
   hidden by signature constraint in documentation.
- ocamlmklib and ocamldep.opt now available under Windows ports.
- ocamlmklib no longer supports the -implib option.
- ocamlnat: an experimental native toplevel (not built by default).

Camlp4:
* programs linked with camlp4lib.cma now also need dynlink.cma.

Bug fixes:
- Major GC and heap compaction: fixed bug involving lazy values and
   out-of-heap pointers.
- PR#3915: updated most man pages.
- PR#4261: type-checking of recursive modules
- PR#4308: better stack backtraces for "spontaneous" exceptions such as
   Stack_overflow, Out_of_memory, etc.
- PR#4338: Str.global_substitute, Str.global_replace and the Str.*split*
   functions are now tail-recursive.
- PR#4503: fixed bug in classify_float on ARM.
- PR#4512: type-checking of recursive modules
- PR#4517: crash in ocamllex-generated lexers.
- PR#4542: problem with return value of Unix.nice.
- PR#4557: type-checking of recursive modules.
- PR#4562: strange %n semantics in scanf.
- PR#4564: add note "stack is not executable" to object files  
generated by
   ocamlopt (Linux/x86, Linux/AMD64).
- PR#4566: bug in Ratio.approx_ratio_fix and Num.approx_num_fix.
- PR#4582: clarified the documentation of functions in the String  
module.
- PR#4583: stack overflow in "ocamlopt -g" during closure conversion  
pass.
- PR#4585: ocamldoc and "val virtual" declarations.
- PR#4587: ocamldoc and escaped @ characters.
- PR#4605: Buffer.add_substitute was sometime wrong when target string  
had
            backslashes.
- PR#4614: Inconsistent declaration of CamlCBCmd in LablTk library.

