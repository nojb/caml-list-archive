Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA10764 for caml-redistribution; Wed, 1 Sep 1999 09:58:58 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA28769 for <caml-list@pauillac.inria.fr>; Tue, 31 Aug 1999 21:16:20 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id VAA06195;
	Tue, 31 Aug 1999 21:16:13 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA19250; Tue, 31 Aug 1999 21:16:12 +0200 (MET DST)
Message-ID: <19990831211612.50360@pauillac.inria.fr>
Date: Tue, 31 Aug 1999 21:16:12 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Ken Wakita <Ken.Wakita@is.titech.ac.jp>, caml-list@inria.fr
Subject: Re: Ocamlopt for R4000?
References: <37C109B55A.754EKEN.WAKITA@mail.is.titech.ac.jp>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.89.1
In-Reply-To: <37C109B55A.754EKEN.WAKITA@mail.is.titech.ac.jp>; from Ken Wakita on Mon, Aug 23, 1999 at 05:43:33PM +0900
Sender: weis
Content-Length: 1210
Lines: 26

> We have just started a project to develop an MPI-based ocaml compiler
> for an NEC's massively parallel machine called Cenju-4.  The target
> machine comes with sixty-four R4000 processors communicating via
> highspeed processor network.  Unfortunately, the MIPS family the latest
> version of ocaml supports seems to be R10000 or higher.

I don't have my MIPS manuals handy right now, but as far as I can
remember, all MIPS processors except the R2000 and R3000 should work.

>From the nice logs made available by Yozo Toda, the problem seems to
be with the operating system rather than with the processors.  Namely,
there is one piece of strongly OS-specific code in the ocamlopt
runtime system.  It's a signal handler that needs (on some target
processors, including the MIPS) to access the saved register state at
the time the signal was taken.  How to do so depends strongly on the
operating system.  The current code for the MIPS works on IRIX and
perhaps Ultrix as well, but doesn't seem to work on your
machine. You'll have to look at the manual pages for signal-handling
routines, and perhaps also at /usr/include/signal.h, to see how to do
it for your operating system.

Regards,

- Xavier Leroy



