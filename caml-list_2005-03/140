Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 5D687BC84
	for <caml-list@yquem.inria.fr>; Sun, 13 Mar 2005 18:41:44 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j2DHfhbu016763
	for <caml-list@yquem.inria.fr>; Sun, 13 Mar 2005 18:41:43 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA06761 for <caml-list@pauillac.inria.fr>; Sun, 13 Mar 2005 18:41:43 +0100 (MET)
Received: from saul.cis.upenn.edu (SAUL.CIS.upenn.edu [158.130.12.4])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j2DHffKv026262
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@inria.fr>; Sun, 13 Mar 2005 18:41:42 +0100
Received: from localhost (localhost [127.0.0.1])
	by saul.cis.upenn.edu (8.12.10/8.12.9) with ESMTP id j2DHfdCP023050;
	Sun, 13 Mar 2005 12:41:39 -0500 (EST)
Date: Sun, 13 Mar 2005 12:41:38 -0500 (EST)
Message-Id: <20050313.124138.68542239.eijiro_sumii@anet.ne.jp>
To: caml-list@inria.fr
Cc: sumii@saul.cis.upenn.edu
Subject: Re: [Caml-list] how to "disable" GC?
From: Eijiro Sumii <eijiro_sumii@anet.ne.jp>
In-Reply-To: <42346798.mailQ91UPBRN@kwel.net>
References: <Pine.LNX.4.61.0503131341420.8010@eiger.cip.physik.uni-muenchen.de>
	<20050313.095234.125114068.eijiro_sumii@anet.ne.jp>
	<42346798.mailQ91UPBRN@kwel.net>
X-Mailer: Mew version 3.2 on Emacs 20.7 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 42347B57.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 42347B55.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 eijiro:01 sumii:01 eijiro:01 sumii:01 ocamlopt:01 polymorphism:01 ocamlopt:01 caml:02 archives:02 anet:02 seems:03 behaviors:05 suppose:05 inria:05 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

From: "Kurt Welgehausen" <kwel@kwel.net>
> > Are floting-point numbers heap-allocated in ocamlopt on sparc?
> 
> Yes, I believe FP values are boxed on all platforms. You could
> try keeping your values in an array, and see if that makes any
> difference.
> 
> Also, see <http://caml.inria.fr/archives/200501/msg00125.html>
> and related messages.

I see - so it seems to me that FP numbers are heap-allocated at least
when they are passed or returned as function arguments or results (to
support polymorphism, I suppose).  This explains well the behaviors of
ocamlopt (and its GC) that I've been experiencing.  Thanks for the
information!

	Eijiro

