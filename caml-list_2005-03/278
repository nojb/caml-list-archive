Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 236E3BC32
	for <caml-list@yquem.inria.fr>; Fri, 18 Mar 2005 07:04:46 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j2I64jG0018129
	for <caml-list@yquem.inria.fr>; Fri, 18 Mar 2005 07:04:45 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA17845 for <caml-list@pauillac.inria.fr>; Fri, 18 Mar 2005 07:04:45 +0100 (MET)
Received: from orsfmr004.jf.intel.com (fmr19.intel.com [134.134.136.18])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j2I64hkj018123
	for <caml-list@inria.fr>; Fri, 18 Mar 2005 07:04:44 +0100
Received: from orsfmr101.jf.intel.com (orsfmr101.jf.intel.com [10.7.209.17])
	by orsfmr004.jf.intel.com (8.12.10/8.12.10/d: major-outer.mc,v 1.1 2004/09/17 17:50:56 root Exp $) with ESMTP id j2I64g26014297;
	Fri, 18 Mar 2005 06:04:42 GMT
Received: from orsmsxvs040.jf.intel.com (orsmsxvs040.jf.intel.com [192.168.65.206])
	by orsfmr101.jf.intel.com (8.12.10/8.12.10/d: major-inner.mc,v 1.2 2004/09/17 18:05:01 root Exp $) with SMTP id j2I64Oxi001674;
	Fri, 18 Mar 2005 06:04:42 GMT
Received: from orsmsx331.amr.corp.intel.com ([192.168.65.56])
 by orsmsxvs040.jf.intel.com (SAVSMTP 3.1.7.47) with SMTP id M2005031722044224256
 ; Thu, 17 Mar 2005 22:04:42 -0800
Received: from orsmsx407.amr.corp.intel.com ([192.168.65.50]) by orsmsx331.amr.corp.intel.com with Microsoft SMTPSVC(6.0.3790.211);
	 Thu, 17 Mar 2005 22:04:41 -0800
X-MimeOLE: Produced By Microsoft Exchange V6.5.7226.0
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
Subject: RE: [Caml-list] OCaml troll on Slashdot
Date: Thu, 17 Mar 2005 22:04:40 -0800
Message-ID: <012676D607FCF54E986746512C22CE7D0335E062@orsmsx407>
Thread-Topic: [Caml-list] OCaml troll on Slashdot
Thread-Index: AcUrJtYy7BQC+uGuS8WOmJCBrOrUoQAWGDeA
From: "Harrison, John R" <johnh@ichips.intel.com>
To: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>,
	<caml-list@inria.fr>
X-OriginalArrivalTime: 18 Mar 2005 06:04:41.0733 (UTC) FILETIME=[600EFB50:01C52B80]
X-Scanned-By: MIMEDefang 2.44
X-Miltered: at nez-perce with ID 423A6F7D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 423A6F7B.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 johnh:01 stack:01 recursion:01 recursion:01 stack:01 uncaught:01 trivial:01 bignums:01 hacks:01 extensible:01 slower:01 exceptions:01 functions:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

| It's not the fault of the mapping function but of the stack being
| non-extensible. A user-written recursion can blow it too. Functional
| programming is supposed to encourage recursion, and a
non-tail-recursive
| 'map' is much more readable than alternatives.

Yes, I agree absolutely. I'm sure most users would be happier with the
occasional speed bump while the stack is extended than with uncaught
exceptions. And they'd be relieved of the need to recode trivial
functions with uglifying and time-wasting hacks to make them robust.

| My implementation of my language Kogut has extensible stack.
| And transparent bignums when appropriate. Yes, it's slower,
| but correctness is more important.

It's starting to sound like my dream language.

John.

