Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 22A41BC84
	for <caml-list@yquem.inria.fr>; Wed, 30 Mar 2005 15:56:44 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j2UDuhW8020343
	for <caml-list@yquem.inria.fr>; Wed, 30 Mar 2005 15:56:43 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA31798 for <caml-list@pauillac.inria.fr>; Wed, 30 Mar 2005 15:56:43 +0200 (MET DST)
Received: from qrnik.knm.org.pl (paf87.warszawa.sdi.tpnet.pl [217.96.225.87])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j2UDugNK020335
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@inria.fr>; Wed, 30 Mar 2005 15:56:43 +0200
Received: from qrczak by qrnik.knm.org.pl with local (Exim 3.36 #1)
	id 1DGdgP-00058R-00
	for caml-list@inria.fr; Wed, 30 Mar 2005 15:56:33 +0200
To: caml-list@inria.fr
Subject: Re: [Caml-list] Impact of GC on memoized algorithm
X-Face: OW>RV&gN+&b-aiNY|U)f=S%w+/rK!);f>/W9IXg})]&F>ht.1Up8@04+_!gOp(_/l_-+E^.
 2\vI)1=D,%HWiq)r(M/V~dr^5T^KF/[w5YZ4<0Sus3+O>l3uA/&W_21m?.s,Po8{pb0@
References: <424A65C4.2080507@barettadeit.com>
	<200503301303.46742.jon@ffconsultancy.com>
	<424A9CCA.7030204@barettadeit.com>
	<200503301509.01571.A.S.Usov@kvi.nl>
From: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>
Mail-Followup-To: caml-list@inria.fr
Date: Wed, 30 Mar 2005 15:56:33 +0200
In-Reply-To: <200503301509.01571.A.S.Usov@kvi.nl> (Alexander S. Usov's
 message of "Wed, 30 Mar 2005 15:09:01 +0200")
Message-ID: <874qetdypa.fsf@qrnik.zagroda>
User-Agent: Gnus/5.1006 (Gnus v5.10.6) Emacs/21.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>
X-Miltered: at concorde with ID 424AB01B.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 424AB01A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 memoized:01 hashtable:01 4096:01 pairs:01 ocaml's:01 hash:01 writes:01 algorithm:01 alexander:02 bucket:05 elements:05 million:93 rather:07 thousands:91 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.2
X-Spam-Level: 

"Alexander S. Usov" <A.S.Usov@KVI.nl> writes:

>> Rather, what happens, time-wise, if I create a hashtable with 4096 slots
>> and end up filling it with several million key-value pairs?
>
> In the best case you end up with a few hundreds or even few thousands of 
> elements per bucket.

No, OCaml's hash tables are resized automatically.

-- 
   __("<         Marcin Kowalczyk
   \__/       qrczak@knm.org.pl
    ^^     http://qrnik.knm.org.pl/~qrczak/

