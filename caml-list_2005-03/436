Return-Path: <oliver@first.in-berlin.de>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id A9357BC48
	for <caml-list@yquem.inria.fr>; Thu, 31 Mar 2005 08:32:55 +0200 (CEST)
Received: from first.in-berlin.de (dialin-145-254-055-146.arcor-ip.net [145.254.55.146])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j2V6Ws6V001216
	for <caml-list@yquem.inria.fr>; Thu, 31 Mar 2005 08:32:55 +0200
Received: by first.in-berlin.de (Postfix, from userid 501)
	id 13798C96D4; Thu, 31 Mar 2005 00:43:21 +0200 (CEST)
Date: Thu, 31 Mar 2005 00:43:21 +0200
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@yquem.inria.fr
Subject: GADT?? (Re: [Caml-list] Pervasives.compare output type)
Message-ID: <20050330224321.GD443@first.in-berlin.de>
References: <web-87495698@cgpsrv2.cis.mcmaster.ca> <Pine.LNX.4.58.0503301032520.32641@shell4.speakeasy.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.58.0503301032520.32641@shell4.speakeasy.net>
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde with ID 424B9996.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; oliver:01 bandel:01 oliver:01 in-berlin:01 caml-list:01 pervasives:01 haskell:01 ralf:01 haskell:01 ocaml:01 advancing:98 ...:98 wrote:01 wrote:01 jacques:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.3 required=5.0 tests=DATE_IN_PAST_06_12,
	FORGED_RCVD_HELO autolearn=disabled version=3.0.2
X-Spam-Level: 

On Wed, Mar 30, 2005 at 10:49:42AM -0800, brogoff wrote:
> On Wed, 30 Mar 2005, Jacques Carette wrote:
> > But theory is also advancing rapidly.  Haskell 6.4's inclusion of GADTs in
> > the core language is exerting a powerful pull on me.
> 
> I know exactly what you mean :-).
> 
> I'm sure you're aware that people at INRIA are working on GADT's as well.
> I have to say, the idea is intriguing, I first read about them from Ralf Hinze's
> "Fun With Phantom Types"  where he suggests using them to do away with type
> classes in Haskell. One problem with all of these "sexy types" is that as you
> cram all of this into a language, it gets very complex if you don't throw
> something else out. What should get thrown out of OCaml if GADTs get in? :-/
[...]


What is/what are GADT?!

Ciao,
   Oliver

