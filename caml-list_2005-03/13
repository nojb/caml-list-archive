Return-Path: <warplayer@free.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id B371FBC75
	for <caml-list@yquem.inria.fr>; Wed,  2 Mar 2005 13:06:55 +0100 (CET)
Received: from postfix3-2.free.fr (postfix3-2.free.fr [213.228.0.169])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j22C6tet010763
	for <caml-list@yquem.inria.fr>; Wed, 2 Mar 2005 13:06:55 +0100
Received: from warp (beg33-1-82-233-87-30.fbx.proxad.net [82.233.87.30])
	by postfix3-2.free.fr (Postfix) with SMTP id 35524C232;
	Wed,  2 Mar 2005 13:06:55 +0100 (CET)
Message-ID: <00a901c51f20$4fdcc490$ef01a8c0@warp>
From: "Nicolas Cannasse" <warplayer@free.fr>
To: "Richard Jones" <rich@annexia.org>
Cc: <caml-list@yquem.inria.fr>
References: <20050223054011.3414.28936.Mailman@yquem.inria.fr> <5fc951a0050301223646a48b5e@mail.gmail.com> <20050302114025.GA17540@furbychan.cocan.org>
Subject: Re: [Caml-list] Cross-platform "Hello, World" graphical application in OCaml
Date: Wed, 2 Mar 2005 13:06:48 +0100
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1437
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
X-Miltered: at concorde with ID 4225AC5F.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; cannasse:01 warplayer:01 caml-list:01 ocaml:01 ocaml:01 gtk:01 api:01 osiris:01 api:01 lablgtk:01 cannasse:01 cocoa:98 wrote:01 abstract:01 abstract:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

> I think this would be the wrong direction to go.
>
> What I think would be useful is an OCaml wrapper around Gtk, Win32 and
> Aqua/COCOA.  The idea would be for the OCaml wrapper to abstract away
> the differences, allowing cross-platform programming with native
> widgets.  WxWidgets fits the bill here, but the actual API is clunky.
> I have a feeling that something could be done better with a functional
> programming approach.
>
> Of course it's a lot of tedious engineering work.  I'm not
> volunteering!

This is the thing I was trying to do with Osiris. I wrote an abstract layer
that is implemented with Win32 API, and I was looking for someone willing to
do the lablgtk port in order to get a cross-platform gui system but didn't
find any interest in the topic.

Regards,
Nicolas Cannasse

