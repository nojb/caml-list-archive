Return-Path: <jon@jdh30.plus.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 4E287BC75
	for <caml-list@yquem.inria.fr>; Sat,  5 Mar 2005 09:31:38 +0100 (CET)
Received: from ptb-relay02.plus.net (ptb-relay02.plus.net [212.159.14.213])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j258VbRH006823
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Sat, 5 Mar 2005 09:31:38 +0100
Received: from [80.229.56.224] (helo=chetara)
	 by ptb-relay02.plus.net with esmtp (Exim) id 1D7UhC-000Exx-PH
	for caml-list@yquem.inria.fr; Sat, 05 Mar 2005 08:31:34 +0000
From: Jon Harrop <jon@jdh30.plus.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] MinCaml: an educational compiler for tiny ML subset (documented in Japanese)
Date: Sat, 5 Mar 2005 08:32:42 +0000
User-Agent: KMail/1.7.1
References: <20050303.172652.36931998.eijiro_sumii@anet.ne.jp>
In-Reply-To: <20050303.172652.36931998.eijiro_sumii@anet.ne.jp>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200503050832.42927.jon@jdh30.plus.com>
X-Miltered: at nez-perce with ID 42296E69.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 compiler:01 subset:01 eijiro:01 sumii:01 compiler:01 subset:01 sourceforge:01 compilers:01 ocaml:01 gcc:01 ocaml:01 26,:98 frog:98 tar:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Thursday 03 March 2005 22:26, Eijiro Sumii wrote:
> I have implemented a simple but efficient compiler from a tiny ML
> subset to the SPARC assembly language.
>
>   http://min-caml.sourceforge.net/min-caml.tar.gz
>
> The primary purpose is advanced education:

I think this is an absolutely fantastic project!

A tiny ML compiler would have helped me to learn how to write ML compilers and 
interpreters when I decided to study this. I had a go at writing my own but 
it will take a lot more practise before I am good enough. I think this 
project could help a lot of people.

> Yet, it produces as efficient SPARC code as OCaml and GCC does

Did you choose SPARC because of availability or for technical reasons?

> for the tiny ML subset and equivalent C programs).

What features of ML are implemented?

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

