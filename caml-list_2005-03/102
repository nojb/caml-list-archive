Return-Path: <AndreasRossberg@web.de>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id F0FDEBC32
	for <caml-list@yquem.inria.fr>; Tue,  8 Mar 2005 23:50:59 +0100 (CET)
Received: from smtp07.web.de (smtp07.web.de [217.72.192.225])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j28MoxeS001184
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 8 Mar 2005 23:50:59 +0100
Received: from [217.235.124.65] (helo=wiko)
	by smtp07.web.de with smtp (WEB.DE 4.103 #192)
	id 1D8nXX-0000vc-00
	for caml-list@yquem.inria.fr; Tue, 08 Mar 2005 23:50:59 +0100
Message-ID: <006101c52431$cc45efa0$14b2a8c0@wiko>
From: "Andreas Rossberg" <AndreasRossberg@web.de>
To: <caml-list@yquem.inria.fr>
References: <012676D607FCF54E986746512C22CE7D031B264B@orsmsx407>
Subject: Re: [Caml-list] SML->OCaml
Date: Tue, 8 Mar 2005 23:54:08 +0100
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1437
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
Sender: AndreasRossberg@web.de
X-Sender: AndreasRossberg@web.de
X-Miltered: at concorde with ID 422E2C53.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; rossberg:01 caml-list:01 ocaml:01 johnh:01 ocaml's:01 sml:01 trivial:01 model:01 sml:01 compiler:01 ...:98 wrote:01 wrote:01 uni-sb:01 simpler:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

Harrison, John R <johnh@ichips.intel.com> wrote:
>
> Ocaml's case convention almost
> starts to look like a good idea when you see the alternatives...

Indeed, it is a very good idea.

> Can you recommend any SML frontend that I could, more or less
> trivially, use to systematically munge uppercase identifier names and
> spit out the program again?

Nothing I'd dare to call trivial. If you don't mind the plug, I wrote a
model interpreter for SML (http://www.ps.uni-sb.de/hamlet) that has been
tuned for readability and modularity and ripping off binding analysis should
be easier than with any other compiler. It still won't be one hour's task to
make such a tool from it, particularly if you want to maintain the layout of
the original program. But I don't know anything simpler either.

  - Andreas

