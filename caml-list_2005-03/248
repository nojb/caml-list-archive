Return-Path: <szegedy@t-online.de>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 71753BC32
	for <caml-list@yquem.inria.fr>; Thu, 17 Mar 2005 10:45:48 +0100 (CET)
Received: from mailout04.sul.t-online.com (mailout04.sul.t-online.com [194.25.134.18])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j2H9jmus017774
	for <caml-list@yquem.inria.fr>; Thu, 17 Mar 2005 10:45:48 +0100
Received: from fwd16.aul.t-online.de 
	by mailout04.sul.t-online.com with smtp 
	id 1DBrZb-0007dt-05; Thu, 17 Mar 2005 10:45:47 +0100
Received: from [217.82.236.143] (EPE3noZHreTBLgXGBZmlErqqr7QO7igixajvZhjsbD-drjq0OTqgch@[217.82.236.143]) by fwd16.sul.t-online.de
	with esmtp id 1DBrZV-1RyZBQ0; Thu, 17 Mar 2005 10:45:41 +0100
Message-ID: <423951C4.8040804@t-online.de>
Date: Thu, 17 Mar 2005 10:45:40 +0100
From: Christian Szegedy <szegedy@t-online.de>
User-Agent: Mozilla Thunderbird 1.0 (X11/20050131)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] OCaml troll on Slashdot
References: <20050316001819.GB347@first.in-berlin.de> <20050316.224108.35690658.garrigue@math.nagoya-u.ac.jp> <Pine.LNX.4.58.0503160931190.30293@shell2.speakeasy.net> <200503161951.48923.jon@ffconsultancy.com> <Pine.LNX.4.58.0503161927350.30293@shell2.speakeasy.net>
In-Reply-To: <Pine.LNX.4.58.0503161927350.30293@shell2.speakeasy.net>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-ID: EPE3noZHreTBLgXGBZmlErqqr7QO7igixajvZhjsbD-drjq0OTqgch
X-TOI-MSGID: 003c9d18-156d-402f-8ef6-417be2126dbd
X-Miltered: at nez-perce with ID 423951CC.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 recursive:01 compilation:01 byte:01 compilation:01 bytecode:01 compiler:01 wrote:01 tail:01 tail:01 native:02 machine:08 sparc:08 except:10 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

brogoff wrote:

>I just ran your counterexample and the tail recursive code was faster
>for each. I used native code compilation.
>
>Byte code compilation gives similar results to yours, except that as I ran the
>test on "ye olde SPARC machine", it took a hell of a lot longer.
>  
>
As far as I know, the bytecode compiler does not eliminate
tail calls.

