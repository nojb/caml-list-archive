Return-Path: <oliver@first.in-berlin.de>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 25396BC32
	for <caml-list@yquem.inria.fr>; Thu, 17 Mar 2005 11:20:08 +0100 (CET)
Received: from first.in-berlin.de (dialin-145-254-054-177.arcor-ip.net [145.254.54.177])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j2HAK6eo022429
	for <caml-list@yquem.inria.fr>; Thu, 17 Mar 2005 11:20:07 +0100
Received: by first.in-berlin.de (Postfix, from userid 501)
	id 5D15EBC2DE; Thu, 17 Mar 2005 01:27:46 +0100 (CET)
Date: Thu, 17 Mar 2005 01:27:46 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] OCaml troll on Slashdot
Message-ID: <20050317002745.GE439@first.in-berlin.de>
References: <20050316001819.GB347@first.in-berlin.de> <200503160301.11138.jon@ffconsultancy.com> <m31xaf4tzi.fsf@ryxa.irisa.fr> <20050316.224108.35690658.garrigue@math.nagoya-u.ac.jp> <m37jk73cgc.fsf@ryxa.irisa.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <m37jk73cgc.fsf@ryxa.irisa.fr>
User-Agent: Mutt/1.5.6i
X-Miltered: at nez-perce with ID 423959D6.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; oliver:01 bandel:01 oliver:01 in-berlin:01 caml-list:01 ocaml:01 haskell:01 haskell:01 ocaml:01 ...:98 ...:98 wrote:01 thread:02 somewhere:02 functional:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.3 required=5.0 tests=DATE_IN_PAST_06_12,
	FORGED_RCVD_HELO autolearn=disabled version=3.0.2
X-Spam-Level: 

On Wed, Mar 16, 2005 at 03:14:11PM +0100, Yoann Padioleau wrote:
[...]
> I am happy. I have learned (or re-learned) a few stuff from this thread
> so in a way from this "troll"  :)
> Perhaps it is not always a waste of time to post in the news :)


   "Who knows if it's good or bad?!"


> 
> It would be cool if some of those insights on optimization would be put
> somewhere via a wiki.
> http://haskell.org/hawiki/ThingsToAvoid  is a good stard  but it is for haskell
> (but many stuff said still apply to ocaml).
[...]

String.copy ?
Functional Objects?


Ciao,
   Oliver

