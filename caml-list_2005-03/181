Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id E8553BC32
	for <caml-list@yquem.inria.fr>; Tue, 15 Mar 2005 20:39:01 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j2FJd1T3006026
	for <caml-list@yquem.inria.fr>; Tue, 15 Mar 2005 20:39:01 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA21513 for <caml-list@pauillac.inria.fr>; Tue, 15 Mar 2005 20:39:01 +0100 (MET)
Received: from [IPv6:::1] (yquem.inria.fr [128.93.8.37])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j2FJd0Um006023
	for <caml-list@inria.fr>; Tue, 15 Mar 2005 20:39:00 +0100
Mime-Version: 1.0 (Apple Message framework v619.2)
In-Reply-To: <4235AB15.8090901@tfb.com>
References: <20050312.225725.125114910.eijiro_sumii@anet.ne.jp> <1f63a9ce4272cab600c2e1f2a63c8cf3@inria.fr> <4235AB15.8090901@tfb.com>
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <fa1e107fe3b455e2a7cb59e4d8717cb4@inria.fr>
Content-Transfer-Encoding: 7bit
From: Damien Doligez <damien.doligez@inria.fr>
Subject: Re: [Caml-list] how to "disable" GC?
Date: Tue, 15 Mar 2005 20:39:11 +0100
To: caml users <caml-list@inria.fr>
X-Mailer: Apple Mail (2.619.2)
X-Miltered: at nez-perce with ID 423739D5.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 423739D4.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; damien:01 damien:01 caml-list:01 heap:01 arrays:01 heap:01 minor:01 ocaml:01 minor:01 verbose:01 libref:01 wrote:01 doligez:01 doligez:01 strings:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Mar 14, 2005, at 16:17, Ken Rose wrote:

>> So if you allocate some things that go directly into the major heap
>> (for example reasonably large arrays or strings) you need a big major
>> heap as well as a big minor heap:
>>   setenv OCAMLRUNPARAM 's=500M,h=500M,v=0x1ff'
>
> Is there some way to do this from inside the OCaml program?  I don't 
> see anything in a quick look at the documents for GC.

Look for "minor_heap_size" and "verbose" in the "control" record type.
As for the initial heap size, of course it cannot be set from inside
the program, but "major_heap_increment" will do in this case.

Reference: < http://caml.inria.fr/pub/docs/manual-ocaml/libref/Gc.html >

-- Damien

