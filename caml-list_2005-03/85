Return-Path: <eijiro_sumii@anet.ne.jp>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 264DABC48
	for <caml-list@yquem.inria.fr>; Tue,  8 Mar 2005 04:01:12 +0100 (CET)
Received: from saul.cis.upenn.edu (SAUL.CIS.upenn.edu [158.130.12.4])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j2831Ate031436
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 8 Mar 2005 04:01:12 +0100
Received: from localhost (SAUL.CIS.upenn.edu [158.130.12.4])
	by saul.cis.upenn.edu (8.12.10/8.12.9) with ESMTP id j28317CP011057;
	Mon, 7 Mar 2005 22:01:08 -0500 (EST)
Date: Mon, 07 Mar 2005 22:01:07 -0500 (EST)
Message-Id: <20050307.220107.85397271.eijiro_sumii@anet.ne.jp>
To: caml-list@yquem.inria.fr
Cc: jon@jdh30.plus.com, sumii@saul.cis.upenn.edu
Subject: MinCaml English Documentation
From: Eijiro Sumii <eijiro_sumii@anet.ne.jp>
In-Reply-To: <200503070020.53784.jon@jdh30.plus.com>
References: <200503050832.42927.jon@jdh30.plus.com>
	<20050305.093742.46637291.eijiro_sumii@anet.ne.jp>
	<200503070020.53784.jon@jdh30.plus.com>
X-Mailer: Mew version 3.2 on Emacs 20.7 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 422D1576.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; eijiro:01 sumii:01 eijiro:01 sumii:01 compiler:01 sourceforge:01 compiler:01 compilers:01 haskell:01 ocaml:01 byte-code:01 ocaml:01 byte:01 garbage:01 upenn:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

Hi All,

I've uploaded a (rather quick) translation of my MinCaml compiler
tutorial:

  http://min-caml.sourceforge.net/index-e.html

It should be readable enough, though I'm not a very good English
writer (and some comments in the source code are still in Japanese).

Comments are welcome.  I don't have so much experience even in
compiler development (unlike Xavier and other real experts here).

From: "Jon Harrop" <jon@jdh30.plus.com>
> Are you interested in commercialising this project? I think that many 
> companies would be interested in a mini compiler which they could customise 
> themselves, e.g. to create JIT compilers, or to have a decent embedded 
> language.

I'm not sure if MinCaml by itself can make any money:-) but I've
always been wondering if it is possible to sell the "programming
language processing technology" (which is the killer application of
ML).  I heard Galois Connection has been doing something like that by
using Haskell, focusing on security in particular.

> I'd prioritise data types next, and pattern matching (of course) if that is 
> not implemented already.

I agree.  In fact, I'm looking for a good (as simple and efficient as
possible) algorithm of pattern matching.  Any suggestions, anyone?

> Might I suggest an OCaml byte-code back end? Then you could "borrow" the OCaml 
> GC.

Actually, I feel a little reluctant to use byte code in the back end,
because (for the original educational purpose) it hides some important
details - such as garbage collection!  On the other hand, if
supporting (not teaching) GC is important, I believe Boem's GC does a
good job even though it is conservative.

--
Eijiro Sumii (http://www.cis.upenn.edu/~sumii/)
Department of Computer and Information Science, University of Pennsylvania

