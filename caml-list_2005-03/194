Return-Path: <jon@ffconsultancy.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 546A9BC32
	for <caml-list@yquem.inria.fr>; Wed, 16 Mar 2005 00:38:18 +0100 (CET)
Received: from ptb-relay02.plus.net (ptb-relay02.plus.net [212.159.14.213])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j2FNcHPv016816
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Wed, 16 Mar 2005 00:38:18 +0100
Received: from [80.229.56.224] (helo=chetara)
	 by ptb-relay02.plus.net with esmtp (Exim) id 1DBLc9-0006Vo-DG
	for caml-list@yquem.inria.fr; Tue, 15 Mar 2005 23:38:17 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] OCaml troll on Slashdot
Date: Tue, 15 Mar 2005 23:39:19 +0000
User-Agent: KMail/1.7.1
References: <42363A86.6010309@1969.ws> <m34qfceey5.fsf@ryxa.irisa.fr> <172f01077499b3d417604d0ad31f2bdb@cs.unm.edu>
In-Reply-To: <172f01077499b3d417604d0ad31f2bdb@cs.unm.edu>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200503152339.20237.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 423771E9.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 inherently:01 arrays:01 arrays:01 haskell:01 bool:01 ocaml:01 frog:98 wrote:01 short:01 slower:01 imperative:01 imperative:01 thread:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Tuesday 15 March 2005 23:07, William D.Neumann wrote:
> His point seems to be that programming in a
> "functional style"[1] is inherently slower than an imperative style
> because a list or a map have different performance characteristics than
> do arrays.

True, but don't forget that using arrays does not imply imperative programming 
in general. For example, I partook in a thread on c.l.functional recently, 
comparing the performance of the sieve of Erasthenes (I know, a 
microbenchmark) in different languages. With a purely functional 
implementation of arrays, the Haskell implementation beat C++ (with 
vector<bool>) and was even competing with OCaml for a short while!

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

