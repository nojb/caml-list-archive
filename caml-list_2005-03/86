Return-Path: <jon@jdh30.plus.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 32E0FBC48
	for <caml-list@yquem.inria.fr>; Tue,  8 Mar 2005 05:11:31 +0100 (CET)
Received: from ptb-relay01.plus.net (ptb-relay01.plus.net [212.159.14.212])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j284BUdV007362
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 8 Mar 2005 05:11:31 +0100
Received: from [80.229.56.224] (helo=chetara)
	 by ptb-relay01.plus.net with esmtp (Exim) id 1D8W4A-000And-Gw
	for caml-list@yquem.inria.fr; Tue, 08 Mar 2005 04:11:30 +0000
From: Jon Harrop <jon@jdh30.plus.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: MinCaml English Documentation
Date: Tue, 8 Mar 2005 04:12:33 +0000
User-Agent: KMail/1.7.1
References: <200503050832.42927.jon@jdh30.plus.com> <200503070020.53784.jon@jdh30.plus.com> <20050307.220107.85397271.eijiro_sumii@anet.ne.jp>
In-Reply-To: <20050307.220107.85397271.eijiro_sumii@anet.ne.jp>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Message-Id: <200503080412.33653.jon@jdh30.plus.com>
X-Miltered: at concorde with ID 422D25F2.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; eijiro:01 sumii:01 compiler:01 sourceforge:01 haskell:01 compiler:01 byte:01 garbage:01 byte-code:01 c--:01 bytecode:01 c--:01 ocaml:01 imho:01 ocaml's:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Tuesday 08 March 2005 03:01, Eijiro Sumii wrote:
> I've uploaded a (rather quick) translation of my MinCaml compiler
> tutorial:
>
>   http://min-caml.sourceforge.net/index-e.html

=46antastic, thank you!

> From: "Jon Harrop" <jon@jdh30.plus.com>
> I'm not sure if MinCaml by itself can make any money:-) but I've
> always been wondering if it is possible to sell the "programming
> language processing technology" (which is the killer application of
> ML).  I heard Galois Connection has been doing something like that by
> using Haskell, focusing on security in particular.

I think companies would be willing to spend a bit of money (~1000UKP) to bu=
y a=20
working shell of a compiler so that they could develop it however they=20
wanted. If our company could afford a copy (and it was more complete) then =
we=20
would use it to develop a custom language for graphics programming. An=20
interpreter might also be commercially viable.

> Actually, I feel a little reluctant to use byte code in the back end,
> because (for the original educational purpose) it hides some important
> details - such as garbage collection!

Yes, ideally you want an elegant demo GC. But isn't having a hidden GC=20
preferable to having no GC? Using an existing byte-code is probably also th=
e=20
most preferable way to make your compiler cross-platform, short of writing=
=20
multiple assembler back-ends. Another option is C-- or maybe Java bytecode.=
=20
=46rom what I hear, C-- is stable enough now.

You could always write a demo OCaml-compatible GC in OCaml for educational=
=20
purposes. Then people could use whichever GC they wanted.

> On the other hand, if=20
> supporting (not teaching) GC is important, I believe Boem's GC does a
> good job even though it is conservative.

IMHO, Boem's GC would put people off. As OCaml's GC is already available,=20
efficient and non-conservative, I'd go for that.

=2D-=20
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

