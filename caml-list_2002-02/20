Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA26508; Mon, 4 Feb 2002 03:40:57 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA25742 for <caml-list@pauillac.inria.fr>; Mon, 4 Feb 2002 03:40:55 +0100 (MET)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g142er511099
	for <caml-list@inria.fr>; Mon, 4 Feb 2002 03:40:53 +0100 (MET)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3/3.7W) with ESMTP id LAA01393;
	Mon, 4 Feb 2002 11:40:47 +0900 (JST)
To: tews@tcs.inf.tu-dresden.de
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Mixed class / type
In-Reply-To: <15450.28384.978996.868534@gargle.gargle.HOWL>
References: <005901c1a9a7$b1b97b00$8f00a8c0@warp>
	<15450.28384.978996.868534@gargle.gargle.HOWL>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20020204114047M.garrigue@kurims.kyoto-u.ac.jp>
Date: Mon, 04 Feb 2002 11:40:47 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 20
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Hendrik Tews <tews@tcs.inf.tu-dresden.de>

> The real solution would be to allow variant types and classes (or
> at least class types) to be mutually dependent. 
> 
> Why is this forbidden in ocaml?

The first reason is technical: class types and type declarations are
handled in two different modules, and integrating them would not be
easy.

But there are also more theoretical problems.
Basically, recursion between class types is monomorphic (to allow
propagation of type constraints), while it is polymorphic between type
declarations. So the meaning of a combined declaration is yet to be
defined.

Regards,

Jacques Garrigue
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

