Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA03858; Sun, 10 Feb 2002 18:49:37 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA03649 for <caml-list@pauillac.inria.fr>; Sun, 10 Feb 2002 18:49:36 +0100 (MET)
Received: from web11905.mail.yahoo.com (web11905.mail.yahoo.com [216.136.172.189])
	by concorde.inria.fr (8.11.1/8.11.1) with SMTP id g1AHnZr11571
	for <caml-list@inria.fr>; Sun, 10 Feb 2002 18:49:35 +0100 (MET)
Message-ID: <20020210174930.42259.qmail@web11905.mail.yahoo.com>
Received: from [24.221.171.193] by web11905.mail.yahoo.com via HTTP; Sun, 10 Feb 2002 09:49:30 PST
Date: Sun, 10 Feb 2002 09:49:30 -0800 (PST)
From: Tom <tom7ca@yahoo.com>
Subject: Re: [Caml-list] Suggestion for overloaded operators
To: Warp <warplayer@free.fr>, OCaml <caml-list@inria.fr>
In-Reply-To: <006801c1b233$83825ec0$0700a8c0@warp>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> Here's a syntactic proposal to enable this feature :
> 
> (a :+ b)
> The ':' is here to precise that we're using overloading , and a and b can be
> of any type. ( let's say typea and typeb )

I don't see why overloading should just apply to operators;
it can just as well apply to functions.

More importantly, the problem isn't coming up with a syntax
or indicating that something is overloaded, the problem is
doing the type checking efficiently in the presence of 
type variables.

SML/NJ and Haskell each have partial solutions to the problem.
You may want to look there.

Tom


__________________________________________________
Do You Yahoo!?
Send FREE Valentine eCards with Yahoo! Greetings!
http://greetings.yahoo.com
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

