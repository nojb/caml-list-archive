Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA20992; Tue, 5 Feb 2002 00:04:27 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA21404 for <caml-list@pauillac.inria.fr>; Tue, 5 Feb 2002 00:04:26 +0100 (MET)
Received: from plinky.bolt-action.com (node-d8e9cca3.powerinter.net [216.233.204.163])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g14N4OX28541;
	Tue, 5 Feb 2002 00:04:24 +0100 (MET)
Received: from checkerlap.d6.com (node-d8e9cca2.powerinter.net [216.233.204.162])
	by plinky.bolt-action.com (8.11.6/8.9.3) with ESMTP id g14N6bW11243;
	Mon, 4 Feb 2002 15:06:38 -0800
Message-Id: <4.3.2.7.2.20020204150243.037b5af0@arda.pair.com>
X-Sender: checker@arda.pair.com
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Mon, 04 Feb 2002 15:04:06 -0800
To: Markus Mottl <markus@oefai.at>,
        Daniel de Rauglaudre <daniel.de_rauglaudre@inria.fr>
From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] syntax change (was: camlp4o problem)
Cc: caml-list@inria.fr
In-Reply-To: <20020204162513.GA22263@chopin.ai.univie.ac.at>
References: <20020204164154.D2338@verdot.inria.fr>
 <9BE7FA48-1771-11D6-A336-003065BDAA76@ece.ucsb.edu>
 <15454.38553.300800.53941@gargle.gargle.HOWL>
 <20020204155242.B2338@verdot.inria.fr>
 <20020204150839.GE14738@chopin.ai.univie.ac.at>
 <20020204164154.D2338@verdot.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


>> I don't propose to start with the normal syntax because it is too much
>> difficult to parse with recursive descent technology. I managed to do
>> it but thanks to hacks.
>Sounds reasonable.  For people who want to learn more about
>advantages/disadvantages of LL-parsers (= recursive descent) vs.
>LALR-parsers (= ocamlyacc), see this article:

I forgot to ask, why is it necessary to move to LL?  Is it the error handling, or is there something about the dynamicness of camlp4 that needs a RD parser to hook into?  I'm not a compiler expert, but I've read about it the differences a bit, but I'd like the expert opinions.  :)

Chris

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

