Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id GAA23761; Wed, 13 Feb 2002 06:59:30 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id GAA24435 for caml-list@pauillac.inria.fr; Wed, 13 Feb 2002 06:59:29 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA16245 for <caml-list@pauillac.inria.fr>; Tue, 12 Feb 2002 20:57:59 +0100 (MET)
Received: from ns.bagley.org (ns.bagley.org [216.30.46.2])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g1CJvwr03485
	for <caml-list@inria.fr>; Tue, 12 Feb 2002 20:57:58 +0100 (MET)
Received: by ns.bagley.org (Milliard Gargantubrain Mail Daemon and Intelligent Space Heater, from userid 500)
	id 2AEC4FBA41; Tue, 12 Feb 2002 13:57:58 -0600 (CST)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15465.29638.38617.927029@ns.bagley.org>
Date: Tue, 12 Feb 2002 13:57:58 -0600
To: caml-list@inria.fr
Subject: [Caml-list] a question on packaging
From: doug@bagley.org (Doug Bagley)
Organization: Hana no FuhenRyokuRen
X-Face: "|NaWfYJ-]P="T#?R.9}QgGuFXUd@3vi[.E2q-;"NV3+k_y@zreL2w^ts0XPXtt9^9{uQ@.cu2GgUgK9@HXC\a}Rtah}0'eT~>or7[~Hd?;!\Bpo#"3<S%YOu{cRbrw?={32$(5@e/te?nkrEUlsBoWC,+N1M&g{:ej9?$c*7W?>w>0a0ft-MvvZ
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I would like to offer a small module I've written for benchmarking.
But I also have some questions, since I've never done this before.
A compressed tarball is here:

 http://www.bagley.org/~doug/ocaml/benchmark/

This module is a fairly straight-forward port of the Perl Benchmark
module, which allows you to measure and compare the run-time of
functions.  There is some ocamldoc style documentation included.

I have seen some other packages use autoconf, or custom makefiles,
sometimes with findlib (which I haven't really explored yet). Some
modules seem to install in /usr/local/lib/ocaml and some in +contrib.

I took the route of using Markus' fine OcamlMakefile, extending it with
some extra stuff for what I need. So, for example, it will install in
/usr/local/lib/ocaml/contrib by default, but you can override that by
defining an environment variable, as I briefly explain in the INSTALL
file. I honestly have no idea if what I've done will work on Windows, I
don't have an easy way of finding out right now.

Do people think that strategy is sufficient? Is there a best way to
package up a module for distribution? Would others like to see OCaml
offer a standard method of packaging, distributing, and building
modules? (It's becoming quite popular to offer this, for example,
Perl and Xemacs offer standard packaging systems). I believe I saw
one or more messages in the archives on this subject, so maybe it's
not just me.

Anyway, I would appreciate any feedback, whether it's about the
benchmark module, or issues of packaging a module. Thanks.

cheers,
doug
-- 
http://www.bagley.org/~doug/contact.shtml
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

