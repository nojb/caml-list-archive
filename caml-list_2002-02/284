Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA15519; Fri, 22 Feb 2002 10:14:57 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA16088 for <caml-list@pauillac.inria.fr>; Fri, 22 Feb 2002 10:14:56 +0100 (MET)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g1M9Esv24858
	for <caml-list@inria.fr>; Fri, 22 Feb 2002 10:14:55 +0100 (MET)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3/3.7W) with ESMTP id SAA16860;
	Fri, 22 Feb 2002 18:14:29 +0900 (JST)
To: jspies@sun.ac.za
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] LablGtk
In-Reply-To: <20020222081012.GD19387@adept.co.za>
References: <20020221231045.1b6a6988.nicolas.francois@free.fr>
	<20020222081012.GD19387@adept.co.za>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20020222181429X.garrigue@kurims.kyoto-u.ac.jp>
Date: Fri, 22 Feb 2002 18:14:29 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 56
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> > this one, I think), is there ANY way to find help on this package ?
> > Either documentation, or examples of small applications written in
> > LablGtk
> 
> I have the same problem: I want to see how thing are handled in
> LablGtk.  I recently searched for an example of a notebook in LablGtk
> but could not find one.

Here it is, as an example of interactive session using the threaded
toplevel. I just looked at the types with OCamlBrowser, and did the
"evident" thing.

# let w = GWindow.window ~show:true ();;
val w : GWindow.window = <obj>
# let nb = GPack.notebook ~packing:w#add ();;
val nb : GPack.notebook = <obj>
# let p1 =GEdit.text ~editable:true
  ~packing:(nb#append_page ~tab_label:(GMisc.label ~text:"Text" ())#coerce
            ~menu_label:(GMisc.label ~text:"Text" ())#coerce) ();;
val p1 : GEdit.text = <obj>
# let p2 = GButton.button ~label:"Hello world!"
  ~packing:(nb#append_page ~tab_label:(GMisc.label ~text:"Button" ())#coerce
             ~menu_label:(GMisc.label ~text:"Button" ())#coerce) ();;
val p2 : GButton.button = <obj>

This is not too say that you didn't search enough. In fact it may take
a while to get used to the basic concepts of typeful programming: look
for the function with the right type.
In the ideal, lablgtk is just intended to work as GTK+true types.

> I know it is not practical to rewrite the libgtk-manual, but it would
> be nice to see what the ocaml-equivalent is for the c examples.

Maybe we could try to translate all the examples in the GTK
tutorial. A large part of them was translated by Hubert Fauque in
testgtk.ml, but I have not got contributed examples for a while. In
fact it can be a good training for beginners :-)

> There is in my opinion a good example on how this can be done: the
> wxPython manual which illustrates the python-specific way of handling
> things without duplicating the rest of the wxWindows manual.

Can you give me a URL ?
I've got a look at the wxPyton online tutorial, but except for using
HTML it didn't strike me as much more informative than the short but
dense lablgtk README. Note also that Python doesn't have types.
 
> Unfortunately I don't have the necessary knowledge to write such a
> lablgtk-manual :(

What about writing a FAQ. If you have questions without answers, I or
others on the lablgtk list may fill them.

Cheers,

Jacques Garrigue
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

