Return-Path: <padator@wanadoo.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 362D4BBAF
	for <caml-list@yquem.inria.fr>; Mon, 23 Aug 2010 23:38:34 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlcFAFKHckxQDPIuZmdsb2JhbACSdjGNExUNCwgIEgMfoiebDIU3BIQ1
X-IronPort-AV: E=Sophos;i="4.56,259,1280700000"; 
   d="scan'208";a="68126652"
Received: from smtp21.orange.fr ([80.12.242.46])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 23 Aug 2010 23:38:33 +0200
Received: from me-wanadoo.net (localhost [127.0.0.1])
	by mwinf2106.orange.fr (SMTP Server) with ESMTP id 449991C0175C;
	Mon, 23 Aug 2010 23:38:33 +0200 (CEST)
Received: from me-wanadoo.net (localhost [127.0.0.1])
	by mwinf2106.orange.fr (SMTP Server) with ESMTP id 32F481C013B3;
	Mon, 23 Aug 2010 23:38:33 +0200 (CEST)
Received: from [172.24.131.5] (out1-1601fw.corp.tfbnw.net [66.220.144.27])
	by mwinf2106.orange.fr (SMTP Server) with ESMTP id 573FA1C0175C;
	Mon, 23 Aug 2010 23:38:32 +0200 (CEST)
X-ME-UUID: 20100823213832357.573FA1C0175C@mwinf2106.orange.fr
X-ME-User-Auth: padator@wanadoo.fr
Subject: Re: [Caml-list] Delimited continuations in OCaml go to 3.12 and 64
Mime-Version: 1.0 (Apple Message framework v1078)
Content-Type: text/plain; charset=us-ascii
From: Yoann Padioleau <padator@wanadoo.fr>
In-Reply-To: <20100823013458.D1A5517415@Adric.ern.nps.edu>
Date: Mon, 23 Aug 2010 14:38:30 -0700
Cc: caml-list@inria.fr
Content-Transfer-Encoding: 7bit
Message-Id: <72B69466-3FAC-41AC-96ED-6024DCBD341A@wanadoo.fr>
References: <20100823013458.D1A5517415@Adric.ern.nps.edu>
To: oleg@okmij.org
X-Mailer: Apple Mail (2.1078)
X-Spam: no; 0.00; delimited:01 ocaml:01 oleg:01 implements:01 delimited:01 native-code:01 ocaml:01 byte-code:01 byte-code:01 native-code:01 beginner's:01 bug:01 beginners:01 wrote:01 caml-list:01 


Is there any tutorial on why such features are useful ?
Concrete examples of their use. For instance can you implement
python generators and its yield stuff by using this library ?

The only reference mentioned in the source is a technical report that
does not look very easy to read.

On Aug 22, 2010, at 6:34 PM, oleg@okmij.org wrote:

> 
> 
> The library delimcc implements multi-prompt delimited control operators
> for byte- and native-code OCaml. The library now can be used with
> OCaml 3.12.0, on x86_32 and x86_64 (aka amd64) platforms.
> 
> The byte-code part of the previous versions of delimcc could
> already be used with OCaml 3.12 (although I didn't know that). Since
> OCaml byte-code is portable, the byte-code delimcc should work on
> any supported architecture. In this version, some adjustments have
> been made to scAPI to make in more portable. It should be stressed
> that there are _no_ distinct versions of the native-code delimcc, for
> 32- and 64-bit architectures. Rather, the same code (without any
> 64-bit--specific ifdefs) works on x86_32 and x86_64. Only
> C code differs between byte-code and native-code versions of the
> library; the OCaml code is shared, across the versions and the
> architectures. The current version of delimcc probably works on other
> architectures like arm, although I have no means of testing that.
> 
> The byte- and native-code versions of library has been tested on i386
> Linux and FreeBSD platform and on amd64 Linux platform. The code is at
> 
> 	http://okmij.org/ftp/continuations/caml-shift.tar.gz
> 
> I thank Jim Pryor for help with testing.
> 
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
> 



