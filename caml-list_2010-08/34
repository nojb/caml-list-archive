Return-Path: <jeremy1@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 06479BBAF
	for <caml-list@yquem.inria.fr>; Sun,  8 Aug 2010 22:59:52 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AisCAHO3XkzRVdY0kGdsb2JhbACgPAgVAQEBAQkJDAcRAx+nS4kQghGFAC6IVAEBAwWFNQSJOw
X-IronPort-AV: E=Sophos;i="4.55,338,1278280800"; 
   d="scan'208";a="56864462"
Received: from mail-bw0-f52.google.com ([209.85.214.52])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 08 Aug 2010 22:59:51 +0200
Received: by bwz17 with SMTP id 17so1074289bwz.39
        for <caml-list@yquem.inria.fr>; Sun, 08 Aug 2010 13:59:51 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:received:in-reply-to
         :references:date:message-id:subject:from:to:cc:content-type;
        bh=sBVko6jktvot2TMcklXj4YOvbZxIHPAyGnV+AWX1kmo=;
        b=Cet9K/xPwhgMqXH23n0wNl9LyETTQ0yC56T5URRLgN0ZXXCNahBrRMMZQzBGmtgGOA
         QVkAbkz99cBPgWpReSkqqzwudDKZZ9q86uG4WY2O4Hhdj0cLr/6VaO2CPjru0uSrFpHB
         729cHCQnL5aRmyXCmQGEPZqt3tIqI86R7EeZ4=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        b=n/87teOmPcqhp/khExqG591Ed++FTo9rr/b2nYapOf5UawC2kXkMEofAJZW0VOMpoN
         KYUY2JKslZQf+9WzWUnaV28ApzdrZb8DFeAnQ4qEWi/2yfC0TZai4Ghg8eAxssgqYhMb
         zzajNAmd1pGVYfG37AuUZ4gk1C1/Pgv0M7vyo=
MIME-Version: 1.0
Received: by 10.204.54.193 with SMTP id r1mr2283625bkg.123.1281301191283; Sun, 
	08 Aug 2010 13:59:51 -0700 (PDT)
Received: by 10.204.54.68 with HTTP; Sun, 8 Aug 2010 13:59:51 -0700 (PDT)
In-Reply-To: <4c5f194e.8644d80a.7fef.69e6@mx.google.com>
References: <AANLkTi=UuefVu9CmwwomimGzMqFrks5SZ+227Znv5r+z@mail.gmail.com>
	<877hk1m1df.fsf@mid.deneb.enyo.de>
	<AANLkTi=L07p_xN7DCZQn0j+iy=-_7FzCrTm6KOf6oaJU@mail.gmail.com>
	<87bp9dkkca.fsf@mid.deneb.enyo.de>
	<4c5f194e.8644d80a.7fef.69e6@mx.google.com>
Date: Sun, 8 Aug 2010 16:59:51 -0400
Message-ID: <AANLkTinPp4njJm+PH1EfURubPcKi-Y8UZd1p7yODjAJ7@mail.gmail.com>
Subject: Re: [Caml-list] interest in a much simpler, but modern, Caml?
From: Jeremy Bem <jeremy1@gmail.com>
To: Nicolas Pouillard <nicolas.pouillard@gmail.com>
Cc: Florian Weimer <fw@deneb.enyo.de>,
	caml-list List <caml-list@yquem.inria.fr>
Content-Type: multipart/alternative; boundary=001636c5b0185b5437048d562e56
X-Spam: no; 0.00; 0200,:01 notation:01 ocaml:01 0200,:01 notation:01 ocaml:01 equality:01 equality:01 polymorphic:01 polymorphic:01 wrote:01 wrote:01 syntactic:01 syntactic:01 caml-list:01 

--001636c5b0185b5437048d562e56
Content-Type: text/plain; charset=ISO-8859-1

On Sun, Aug 8, 2010 at 4:53 PM, Nicolas Pouillard <
nicolas.pouillard@gmail.com> wrote:

> On Sun, 08 Aug 2010 20:52:53 +0200, Florian Weimer <fw@deneb.enyo.de>
> wrote:
> > * Jeremy Bem:
> >
> > > Yes and no, respectively.  In other words, nothing new here.
> >
> > Oh.  I just happen to think that those two are very high on the list
> > of things you want to fix once you can start with a clean slate.
> >
> > > Is there a better approach to polymorphic equality floating around?
> >
> > Besides type classes?  I'm not sure.  It's probably possible to remove
> > this feature from the language, with a little bit of syntactic
> > overhead to pass around a matching comparison function.
>
> Yes for instance the very concise local opening notation comes in handy
> here:
>
> if Int.(x = 42) then ... else ...
>

That's very nice.  I don't think type classes are conservative enough for
this project, but this comes very close indeed.

I haven't really had a chance to explore OCaml 3.12 yet, as it came out
while I was working on this, but I will give this serious consideration.

-Jeremy

--001636c5b0185b5437048d562e56
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div class=3D"gmail_quote">On Sun, Aug 8, 2010 at 4:53 PM, Nicolas Pouillar=
d <span dir=3D"ltr">&lt;<a href=3D"mailto:nicolas.pouillard@gmail.com">nico=
las.pouillard@gmail.com</a>&gt;</span> wrote:<br><blockquote class=3D"gmail=
_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:=
1ex;">
<div><div></div><div class=3D"h5">On Sun, 08 Aug 2010 20:52:53 +0200, Flori=
an Weimer &lt;<a href=3D"mailto:fw@deneb.enyo.de">fw@deneb.enyo.de</a>&gt; =
wrote:<br>
&gt; * Jeremy Bem:<br>
&gt;<br>
&gt; &gt; Yes and no, respectively. =A0In other words, nothing new here.<br=
>
&gt;<br>
&gt; Oh. =A0I just happen to think that those two are very high on the list=
<br>
&gt; of things you want to fix once you can start with a clean slate.<br>
&gt;<br>
&gt; &gt; Is there a better approach to polymorphic equality floating aroun=
d?<br>
&gt;<br>
&gt; Besides type classes? =A0I&#39;m not sure. =A0It&#39;s probably possib=
le to remove<br>
&gt; this feature from the language, with a little bit of syntactic<br>
&gt; overhead to pass around a matching comparison function.<br>
<br>
</div></div>Yes for instance the very concise local opening notation comes =
in handy here:<br>
<br>
if Int.(x =3D 42) then ... else ...<br></blockquote><div><br></div><div>Tha=
t&#39;s very nice. =A0I don&#39;t think type classes are conservative enoug=
h for this project, but this comes very close indeed.</div><div><br></div>
<div>I haven&#39;t really had a chance to explore OCaml 3.12 yet, as it cam=
e out while I was working on this, but I will give this serious considerati=
on.</div><div><br></div><div>-Jeremy</div></div>

--001636c5b0185b5437048d562e56--

