Return-Path: <matthieu.dubuget@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 247EF7F615
	for <caml-list@sympa.inria.fr>; Thu,  8 Dec 2016 09:21:20 +0100 (CET)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=matthieu.dubuget@gmail.com; spf=Pass smtp.mailfrom=matthieu.dubuget@gmail.com; spf=None smtp.helo=postmaster@mail-wm0-f46.google.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  matthieu.dubuget@gmail.com) identity=pra;
  client-ip=74.125.82.46;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="matthieu.dubuget@gmail.com";
  x-sender="matthieu.dubuget@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  matthieu.dubuget@gmail.com designates 74.125.82.46 as
  permitted sender) identity=mailfrom; client-ip=74.125.82.46;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="matthieu.dubuget@gmail.com";
  x-sender="matthieu.dubuget@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-wm0-f46.google.com) identity=helo;
  client-ip=74.125.82.46;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="matthieu.dubuget@gmail.com";
  x-sender="postmaster@mail-wm0-f46.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AQMkWVRcbsSmP5M5SD7wd3f+1lGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc64bR7h7PlgxGXEQZ/co6odzbGH6Oa9Aidbsd7B6ClEK8McEUddyI?=
 =?us-ascii?q?0/pE8JPo2sMQXDNvnkbig3ToxpdWRO2DWFC3VTA9v0fFbIo3e/vnY4ExT7Mhdp?=
 =?us-ascii?q?dKyuQtaBx5f/6+fn0JTWZ0BMhSGhKed5JRCy6AHQrdU+gI14K693xAGf8UFFY+?=
 =?us-ascii?q?BH+WQ9IFuPgxb969r28INp7itdp9ou8sdBVePxeKFrY6ZfCWEDOnwp5MzmqFHv?=
 =?us-ascii?q?UAGS6XYAGjETmwZUAwnI8Vf2Q53svSbmnuV40Siee8bxSOZnCnyZ8653RUqw22?=
 =?us-ascii?q?88PDkj/TSPhw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AUAgAOF0lYhi5SfUpeHQEXAQYBCgEBF?=
 =?us-ascii?q?gEBBQEBgwIBAQEBAYEnWK0+jByCCIgoQBMBAQEBAQEBAQEBARIBAQEICwsJHTB?=
 =?us-ascii?q?CAQEDCwKBXxiCLxgIBwENARseAxIQDwImAiUMAQQBBQEDAR4NCAEBF4g5AQECF?=
 =?us-ascii?q?wSYM4M/P4NuiBKCBAUBHxKCewWBWYIGChkEChkNVINKAgYJAQh5hTOBfQiKIoJ?=
 =?us-ascii?q?dBYhqkgCBSi6PJ4NKhjwOgUkMU4QFkFAyQ1EhA4EqVYM6gWlxgiQZhXUBAQE?=
X-IPAS-Result: =?us-ascii?q?A0AUAgAOF0lYhi5SfUpeHQEXAQYBCgEBFgEBBQEBgwIBAQE?=
 =?us-ascii?q?BAYEnWK0+jByCCIgoQBMBAQEBAQEBAQEBARIBAQEICwsJHTBCAQEDCwKBXxiCL?=
 =?us-ascii?q?xgIBwENARseAxIQDwImAiUMAQQBBQEDAR4NCAEBF4g5AQECFwSYM4M/P4NuiBK?=
 =?us-ascii?q?CBAUBHxKCewWBWYIGChkEChkNVINKAgYJAQh5hTOBfQiKIoJdBYhqkgCBSi6PJ?=
 =?us-ascii?q?4NKhjwOgUkMU4QFkFAyQ1EhA4EqVYM6gWlxgiQZhXUBAQE?=
X-IronPort-AV: E=Sophos;i="5.33,318,1477954800"; 
   d="scan'208";a="248643248"
Received: from mail-wm0-f46.google.com ([74.125.82.46])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 08 Dec 2016 09:21:19 +0100
Received: by mail-wm0-f46.google.com with SMTP id a197so205370344wmd.0
        for <caml-list@inria.fr>; Thu, 08 Dec 2016 00:21:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=reply-to:to:from:subject:message-id:date:user-agent:mime-version
         :content-transfer-encoding;
        bh=PPbBmRyrAJ5WQcdmRIH8+wnecaM7wT3Pequ0BLF7Avs=;
        b=p4VopuFqpVSMPih9kmsHm1P836S1iQD0g5EagMT2BLz4az4Cx9AtXk1/y3BJzywKVz
         bv9qReX7NgTv8wXfZcLa7RNGWIzdbO8wR3vh7du+Yx6wmP1zuxf9RpUX+KjyeZ1347NC
         GaRXLQhruAg1i1D1G1mTqMcOzT97G1aW1WDWDDoo96dp1H8ILAL1Ai2/EJMjS442Wlft
         NboEBgBiI9/i0JxRBhmPQyR85mwziXZ0hmu6IA8NYPsHmoe865Leq82Ojy34YYFdEHXJ
         yKLKL6MrB9gtynDHKOAR3gonOlg90HeSCpJJMMs4+EgJlnX1F7KbCzQc5+XakxZ2P31u
         f/cQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:reply-to:to:from:subject:message-id:date
         :user-agent:mime-version:content-transfer-encoding;
        bh=PPbBmRyrAJ5WQcdmRIH8+wnecaM7wT3Pequ0BLF7Avs=;
        b=VjEGZZ7ZhL11E2VWMFNNOO5btWdg3bU697DgcuakY6dKrIvYsX5KHU275NSqKIk2CP
         t+RBi2GFvzNrC/tbFlU0BtsFznywiFOVe0sD/GORUbUdwBn2vrYgioHUgHS7E6sE1zwp
         AseCX1uQ6xYMQGvMaAHDi7QVrvKEw27wvZbmQwLb1CowpZFrYGMzb1MDtiRvkKUoBW2p
         VjkxAn4BNec2w0/YRkRFXdTMuMm5gpjqKUBnTnxXYllWRtZ7v21izw5B96D/pmfwSiI2
         NqmwkeUDqSSR43WCleenwdZdyJF8CyeTwcDENzbCBTXifozTxXC/mlZzOJuL5LmvWnz3
         8JGg==
X-Gm-Message-State: AKaTC01A8PdG4ptvbE9uEPsRP+pXZxcYdw5a1Tla56sU2qX2kTY0tWmh6r3LTaxb8WsP2Q==
X-Received: by 10.28.135.3 with SMTP id j3mr957346wmd.96.1481185279163;
        Thu, 08 Dec 2016 00:21:19 -0800 (PST)
Received: from [172.17.1.60] (papillon.metalscan.fr. [178.22.148.54])
        by smtp.gmail.com with ESMTPSA id k2sm35676792wjv.11.2016.12.08.00.21.18
        for <caml-list@inria.fr>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Thu, 08 Dec 2016 00:21:18 -0800 (PST)
Reply-To: matthieu.dubuget@gmail.com
To: Caml-list <caml-list@inria.fr>
From: Matthieu Dubuget <matthieu.dubuget@gmail.com>
Message-ID: <baacb5fa-1c76-6924-7284-73f5a0a0d16d@gmail.com>
Date: Thu, 8 Dec 2016 09:21:17 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101
 Thunderbird/45.5.1
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8bit
Subject: [Caml-list] Web technologies as graphical user interface to OCaml
 programs?

Hello,

I wonder how I could use Web technologies to write OCaml program's
GUI.

I’m particularly interested by the ocaml-vdom (elm) approach
simplicity.

But my need would be to add a user interface to programs using some
OCaml libraries which are not supported by js_of_ocaml (Unix, C libs
bindings…).

One solution would be to keep the GUI-less native OCaml apps compiled
and running as native code, and have them communicate with GUIs that
would run in browsers.

I'm not sure how this communication would be done, thought? Maybe websocket,
but this is something I do not know at all…

Another solution would be to have the native OCaml app directly serve
it's UI, maybe using ocsigenserver?

I'm wondering if there are some examples around with those kind of
approaches or other kind of solution?

Best regards


-- 
Matthieu Dubuget

