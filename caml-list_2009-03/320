Return-Path: <elnatan@cs.umd.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.5 required=5.0 tests=DNS_FROM_RFC_ABUSE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 96020BBC4
	for <caml-list@yquem.inria.fr>; Tue, 17 Mar 2009 13:51:31 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AosCANI5v0mACH+ThWdsb2JhbACVWwEBAQoLCgUTrWGBO4ZViE6DfgY
X-IronPort-AV: E=Sophos;i="4.38,378,1233529200"; 
   d="scan'208";a="36674415"
Received: from server-nat-4.cs.umd.edu (HELO bacon.cs.umd.edu) ([128.8.127.147])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 17 Mar 2009 13:51:31 +0100
X-CSD-MailScanner-Watermark: 1237899084.86258@MuhU5btGvUN1Mx6dsUXEkw
Received: from 216-164-51-69.c3-0.slvr-ubr1.lnh-slvr.md.cable.rcn.com (216-164-51-69.c3-0.slvr-ubr1.lnh-slvr.md.cable.rcn.com [216.164.51.69])
	(authenticated bits=0)
	by bacon.cs.umd.edu (8.13.1/8.14.1) with ESMTP id n2HCpM8b029778
	(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 17 Mar 2009 08:51:22 -0400
Message-Id: <FC17C629-D605-46B3-9690-85A119E9B223@cs.umd.edu>
From: Elnatan Reisner <elnatan@cs.umd.edu>
To: Caml Mailing List <caml-list@yquem.inria.fr>
Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (Apple Message framework v930.3)
Subject: Int64 comparison
Date: Tue, 17 Mar 2009 08:51:21 -0400
X-Mailer: Apple Mail (2.930.3)
X-Greylist: Sender succeeded SMTP AUTH, not delayed by milter-greylist-4.0 (bacon.cs.umd.edu [172.24.3.34]); Tue, 17 Mar 2009 08:51:22 -0400 (EDT)
X-CSD-MailScanner-Information: Please email staff@cs.umd.edu for more information
X-MailScanner-ID: n2HCpM8b029778
X-CSD-MailScanner: Found to be clean
X-CSD-MailScanner-SpamCheck: not spam, SpamAssassin (not cached,
	score=-48.069, required 5, ALL_TRUSTED -50.00, TVD_RCVD_IP 1.93)
X-CSD-MailScanner-From: elnatan@cs.umd.edu
X-Spam: no; 0.00; polymorphic:01 functions:01 int:01 int:01 numerical:03 comparison:05 definitely:12 correspond:12 should:13 but:14 umd:14 compare:15 edu:15 'yes':83 prefer:16 

Do the polymorphic ordering functions -- (<), (>), etc. -- correspond  
to the numerical ordering for Int64s and Int32s? I assume so, but I  
didn't see this specified anywhere.

If the answer is 'yes', is there a reason I should prefer
Int64.compare n1 n2 < 0
to
n1 < n2
? If there's no specific reason the first is better (and I don't see  
why it would be), I definitely prefer the second.
-Elnatan

