Return-Path: <rich@annexia.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.8 required=5.0 tests=AWL,SPF_FAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 9BA71BBAF
	for <caml-list@yquem.inria.fr>; Wed, 25 Mar 2009 01:03:00 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ak8FAFcRyUlQRFuwX2dsb2JhbACVXRcLCgQUvDuDdgY
X-IronPort-AV: E=Sophos;i="4.38,415,1233529200"; 
   d="scan'208";a="26252533"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 25 Mar 2009 01:03:00 +0100
Received: from rich by furbychan.cocan.org with local (Exim 4.63)
	(envelope-from <rich@annexia.org>)
	id 1LmGa9-0003wz-7B; Wed, 25 Mar 2009 00:02:57 +0000
Date: Wed, 25 Mar 2009 00:02:57 +0000
To: Pierre Weis <weis@deby.inria.fr>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] First release of focalize, a development environment for high integrity programs.
Message-ID: <20090325000257.GA14880@annexia.org>
References: <200903241007.n2OA7TQj025998@deby.inria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200903241007.n2OA7TQj025998@deby.inria.fr>
User-Agent: Mutt/1.5.13 (2006-08-11)
From: Richard Jones <rich@annexia.org>
X-Spam: no; 0.00; 0100,:01 weis:01 2009:98 wrote:01 caml-list:01 proofs:01 pierre:02 purely:02 expression:02 functional:02 functional:02 algorithms:03 tutorials:03 logical:04 tue:06 

On Tue, Mar 24, 2009 at 11:07:29AM +0100, Pierre Weis wrote:
> (0) What is it ?
> ----------------
> 
> FoCaLize is an integrated development environment to write high integrity
> programs and systems. It provides a purely functional language to formally
> express specifications, describe the design and code the algorithms.  Within
> the functional language, FoCaLize provides a logical framework to express the
> properties of the code. A simple declarative language provides the natural
> expression of proofs of those properties from within the program source code.

Are there any examples / tutorials?  I skimmed the reference manual
and it has to be said I found it fairly baffling.

Rich.

-- 
Richard Jones
Red Hat

