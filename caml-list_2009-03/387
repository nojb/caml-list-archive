Return-Path: <cdome@bk.ru>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: ****
X-Spam-Status: No, score=4.1 required=5.0 tests=RCVD_IN_BL_SPAMCOP_NET,
	RCVD_NUMERIC_HELO,SPF_SOFTFAIL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 69FFDBBC4
	for <caml-list@yquem.inria.fr>; Sat, 21 Mar 2009 22:45:04 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Av0DALv8xEleZLA0mGdsb2JhbACJGYw4HAEBAQEBBgsMBxG9YYN+Bg
X-IronPort-AV: E=Sophos;i="4.38,401,1233529200"; 
   d="scan'208";a="24724462"
Received: from mx38.mail.ru ([94.100.176.52])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 21 Mar 2009 22:45:03 +0100
Received: from [89.252.10.6] (port=43690 helo=89.252.10.6.freenet.com.ua)
	by mx38.mail.ru with asmtp 
	id 1Ll903-000Ork-00
	for caml-list@yquem.inria.fr; Sun, 22 Mar 2009 00:45:03 +0300
From: Andrey Riabushenko <cdome@bk.ru>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Google summer of Code proposal
Date: Sat, 21 Mar 2009 23:45:24 +0200
User-Agent: KMail/1.9.7
References: <20090321204943.E2ACCBBFA@yquem.inria.fr>
In-Reply-To: <20090321204943.E2ACCBBFA@yquem.inria.fr>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Message-Id: <200903212345.25986.cdome@bk.ru>
X-Spam: Not detected
X-Mras: Ok
X-Spam: no; 0.00; ocaml:01 ocaml:01 caml-list:01 assembler:02 suggestion:03 linker:07 probably:07 frontend:09 machine:09 opinion:13 but:14 use:16 code:17 code:17 U4:82 

>This is probably a stupid suggestion but why not have OCaml directly =20
>generate machine code, without the use of assembler and linker?

>Wouldn't this be easier than trying to couple OCaml with LLVM?

That is exactly what I am thinking to do. In my opinion, it is least radi=
=D1=81al=20
way and it is exactly what is needed to merge the LLVM frontend to the ocam=
l=20
trunk. Ans it is exactly my goal.

