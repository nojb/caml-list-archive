Return-Path: <anil@recoil.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id E738DBBC4
	for <caml-list@yquem.inria.fr>; Mon, 30 Mar 2009 12:45:37 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmEEABQ/0EnCRgOEgWdsb2JhbACBUYtFiG0BARYismSCM4FHBg
X-IronPort-AV: E=Sophos;i="4.38,446,1233529200"; 
   d="scan'208";a="23552929"
Received: from fork.recoil.org ([194.70.3.132])
  by mail2-smtp-roc.national.inria.fr with SMTP; 30 Mar 2009 12:45:37 +0200
Received: (qmail 13854 invoked by uid 3023); 30 Mar 2009 10:45:36 -0000
Received: from 94-194-206-35.zone8.bethere.co.uk (HELO Shock.config) (94.194.206.35)
  (smtp-auth username remote@recoil.org, mechanism cram-md5)
  by fork.recoil.org (qpsmtpd/0.32) with ESMTP; Mon, 30 Mar 2009 11:45:36 +0100
Cc: OCaml <caml-list@inria.fr>
Message-Id: <A5EA82DA-AE9D-4A38-9ACA-9DC3BCB4197A@recoil.org>
From: Anil Madhavapeddy <anil@recoil.org>
To: Zheng Li <zheng_li@users.sourceforge.net>
In-Reply-To: <49D08C9E.4060707@users.sourceforge.net>
Content-Type: text/plain; charset=US-ASCII; format=flowed
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (Apple Message framework v930.3)
Subject: Re: [Caml-list] Re: mixing infix functions and the format4 types
Date: Mon, 30 Mar 2009 11:45:33 +0100
References: <A3CFE8B7-5445-4AE0-828E-167A7586AEAC@recoil.org> <49D08C9E.4060707@users.sourceforge.net>
X-Mailer: Apple Mail (2.930.3)
X-Spam: no; 0.00; anil:01 anil:01 infix:01 separators:01 val:01 foo:01 foo:01 printf:01 sprintf:01 val:01 beginner's:01 ocaml:01 bug:01 10,:98 fmt:01 

On 30 Mar 2009, at 10:10, Zheng Li wrote:
>
> Is extra separators acceptable?
>
> # let ($) f x = f x;;
> val ( $ ) : ('a -> 'b) -> 'a -> 'b = <fun>
> # "foo" --- "%s %s %s" $ "bar1" $ "bar2" $ "bar3";;
> - : string = "foo: bar1 bar2 bar3"

Aha ... using the identity function like this works great, thanks!

-anil

>
> and, maybe in another way
>
> # let (%) fmt x = Printf.sprintf fmt x;;
> val ( % ) : ('a -> 'b, unit, string) format -> 'a -> 'b = <fun>
> # "%s %s %s" % "bar1" $ "bar2" $ "bar3";;
> - : string = "bar1 bar2 bar3"
>
> HTH.
> --
> Zheng
>
>
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs

