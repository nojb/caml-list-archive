Return-Path: <avaron@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=2.0 required=5.0 tests=AWL,DNS_FROM_RFC_POST,
	SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 40729BBAF
	for <caml-list@yquem.inria.fr>; Wed, 25 Mar 2009 21:30:16 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ap8AAJ4xyknYSfEMkWdsb2JhbACNE4hrAQEBAQkLCgcRBKwVkFqDdQY
X-IronPort-AV: E=Sophos;i="4.38,421,1233529200"; 
   d="scan'208";a="26321451"
Received: from info-smtp-004.amnh.org ([216.73.241.12])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 25 Mar 2009 21:30:15 +0100
Received: from localhost (localhost.localdomain [127.0.0.1])
	by info-smtp-004.amnh.org (Postfix) with ESMTP id 49E1B1CD508;
	Wed, 25 Mar 2009 16:30:14 -0400 (EDT)
X-Virus-Scanned: amavisd-new at amnh.org
Received: from info-smtp-004.amnh.org ([127.0.0.1])
	by localhost (info-smtp-004.amnh.org [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id tqqC9mr5xKZW; Wed, 25 Mar 2009 16:30:13 -0400 (EDT)
Received: from samson.internal.amnh.org (216-73-249-185.dynamic.amnh.org [216.73.249.185])
	by info-smtp-004.amnh.org (Postfix) with ESMTPSA id 7A0EA1CD503;
	Wed, 25 Mar 2009 16:30:13 -0400 (EDT)
Cc: caml-list@yquem.inria.fr
Message-Id: <0C2AF3E4-D524-4CA4-BDCF-4999888AC274@gmail.com>
From: Andres Varon <avaron@gmail.com>
To: peng.zang@gmail.com
In-Reply-To: <200903251615.40838.peng.zang@gmail.com>
Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (Apple Message framework v930.3)
Subject: Re: [Caml-list] can anyone replicate this camlp4 problem?
Date: Wed, 25 Mar 2009 16:30:13 -0400
References: <200903251555.59456.peng.zang@gmail.com> <963A7662-942E-4E70-B068-EEF3239F58E7@gmail.com> <200903251615.40838.peng.zang@gmail.com>
X-Mailer: Apple Mail (2.930.3)
X-Spam: no; 0.00; camlp:01 hash:01 camlp:01 makefile:01 hash:01 bug:01 topfind:01 findlib:01 syntax:01 syntax:01 topfind:01 lib:01 ocaml:01 dynlink:01 lib:01 


On Mar 25, 2009, at 4:15 PM, Peng Zang wrote:

> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>
> Thanks, do you know of a good work around?

Nope, I didn't see a satisfactory workaround.  Luckily I didn't need  
camlp4 in those modules anymore, so I only reported the problem,  
corrected the Makefile to skip them, and moved on.

Andres

>
> Peng
>
>
> On Wednesday 25 March 2009 04:01:24 pm Andres Varon wrote:
>> On Mar 25, 2009, at 3:55 PM, Peng Zang wrote:
>>> -----BEGIN PGP SIGNED MESSAGE-----
>>> Hash: SHA1
>>>
>>> Hi, camlp4 seems to break parsing of object duplication on 3.11.
>>> Can anyone
>>> replicate this problem?  Is this an known issue?  A quick google
>>> search did
>>> not reveal anything..
>>
>> Yeah. I reported the bug here:
>>
>> http://caml.inria.fr/mantis/view.php?id=4673
>>
>> Andres
>>
>>> Peng
>>>
>>>
>>>         Objective Caml version 3.11.0
>>>
>>> # #use "topfind";;
>>> Findlib has been successfully loaded. Additional directives:
>>>   #require "package";;      to load a package
>>>   #list;;                   to list the available packages
>>>   #camlp4o;;                to load camlp4 (standard syntax)
>>>   #camlp4r;;                to load camlp4 (revised syntax)
>>>   #predicates "p,q,...";;   to set these predicates
>>>   Topfind.reset();;         to force that packages will be reloaded
>>>   #thread;;                 to enable threads
>>>
>>> # #camlp4o;;
>>> /home/peng/app-data/godi-3.11/lib/ocaml/std-lib/dynlink.cma: loaded
>>> /home/peng/app-data/godi-3.11/lib/ocaml/std-lib/camlp4: added to
>>> search path
>>> /home/peng/app-data/godi-3.11/lib/ocaml/std-lib/camlp4/camlp4o.cma:
>>> loaded
>>>         Camlp4 Parsing version 3.11.0
>>>
>>> # class functional_point x y = object
>>>     val x = x
>>>     val y = y
>>>     method get_x = x
>>>     method get_y = y
>>>     method move dx dy = {< x = x + dx; y = y + dy >}
>>>   end;;
>>>           Characters 138-144:
>>>     method move dx dy = {< x = x + dx; y = y + dy >}
>>>                                ^^^^^^
>>> Warning S: this expression should have type unit.
>>> Characters 146-156:
>>>     method move dx dy = {< x = x + dx; y = y + dy >}
>>>                                        ^^^^^^^^^^
>>> Error: This expression has type bool but is here used with type int
>>> #
>>> -----BEGIN PGP SIGNATURE-----
>>> Version: GnuPG v2.0.7 (GNU/Linux)
>>>
>>> iD8DBQFJyoxPfIRcEFL/JewRAg8TAKCjoxTmDmfLxVHa7sXq0tGlt2rKDgCgp/C2
>>> nc4vnKWkTvKXeR4Q0z4XB94=
>>> =IwA+
>>> -----END PGP SIGNATURE-----
>>>
>>> _______________________________________________
>>> Caml-list mailing list. Subscription management:
>>> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
>>> Archives: http://caml.inria.fr
>>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>>> Bug reports: http://caml.inria.fr/bin/caml-bugs
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2.0.7 (GNU/Linux)
>
> iD8DBQFJypDsfIRcEFL/JewRAvQWAKDAcQhk9Un3O3jGNfPyKJMX+jzxewCgjHna
> RA7M5aQ2rtU0baudpADZ4EQ=
> =jhoe
> -----END PGP SIGNATURE-----

