Return-Path: <David.Teller@ens-lyon.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 32A54BBAF
	for <caml-list@yquem.inria.fr>; Tue, 10 Mar 2009 23:22:56 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AosCAF+FtknCpx6vmWdsb2JhbACVLgEBAQEBCAsKBxG8WoQNBg
X-IronPort-AV: E=Sophos;i="4.38,337,1233529200"; 
   d="scan'208";a="25378714"
Received: from unknown (HELO ka.univ-orleans.fr) ([194.167.30.175])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 10 Mar 2009 23:22:56 +0100
Received: from smtps.univ-orleans.fr (localhost [127.0.0.1])
	by ka.univ-orleans.fr (Postfix) with ESMTP
	id BE0AE12AD5B; Tue, 10 Mar 2009 23:22:53 +0100 (CET)
Received: from [192.168.0.1] (lau18-1-82-246-197-195.fbx.proxad.net [82.246.197.195])
	by smtps.univ-orleans.fr (Postfix) with ESMTP id E28B836E60;
	Tue, 10 Mar 2009 23:22:57 +0100 (CET)
Subject: OCamlBuild + OCamlDoc is slooooow
From: David Rajchenbach-Teller <David.Teller@ens-lyon.org>
To: OCaml <caml-list@inria.fr>
Cc: Nicolas Pouillard <nicolas.pouillard@gmail.com>
Content-Type: text/plain; charset=UTF-8
Date: Tue, 10 Mar 2009 23:23:18 +0100
Message-Id: <1236723798.6458.5.camel@Blefuscu>
Mime-Version: 1.0
X-Mailer: Evolution 2.12.1 
Content-Transfer-Encoding: 8bit
X-Spam: no; 0.00; ocamldoc:01 ens-lyon:01 ocamldoc:01 marshalling:01 compilation:01 univ-orleans:01 lifo:01 partial:01 behaviour:01 seems:03 experiments:03 loading:05 distributed:05 chercheur:07 researchers:07 

      Dear list,
 As a number of people on this list have noticed already, the
documentation generation of Batteries Included is awfully slow.
According to our experiments, this is due to the fact that the
combination of ocamlbuild and ocamldoc keeps loading stuff, marshalling
it to the disk and immediately unmarshalling. Alone, this unmarshalling
seems much more costly than all other operations together.

Which brings me to my question: is there a simple way of obtaining the
traditional behaviour of ocamldoc, without this wasteful partial
compilation?

Thanks,
 David

-- 
David Teller-Rajchenbach
 Security of Distributed Systems
  http://www.univ-orleans.fr/lifo/Members/David.Teller
   « Ce matin Un crétin A tué un chercheur. » (air connu)
   Latest News of French Research: System being liquidated. Researchers angry.

