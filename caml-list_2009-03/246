Return-Path: <markus.mottl@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.8 required=5.0 tests=AWL,DNS_FROM_RFC_POST,
	SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 757D8BBAF
	for <caml-list@yquem.inria.fr>; Wed, 11 Mar 2009 15:20:39 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AswBAOllt0nRVd2Cm2dsb2JhbACCfpFyPwEBAQEBCAkKCRGqV4EGj3IBAwEDhAoG
X-IronPort-AV: E=Sophos;i="4.38,343,1233529200"; 
   d="scan'208";a="36405439"
Received: from mail-qy0-f130.google.com ([209.85.221.130])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 11 Mar 2009 15:20:38 +0100
Received: by qyk36 with SMTP id 36so39215qyk.1
        for <caml-list@inria.fr>; Wed, 11 Mar 2009 07:20:37 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:in-reply-to:references
         :date:message-id:subject:from:to:cc:content-type
         :content-transfer-encoding;
        bh=wibifqZbIMg30cZHTgbYeFiP701RWDjYJodmUgcgFq8=;
        b=W640PZ12CtTZBv0TDHWbrD04B2kAJctt0JiQQ2fUZ8vxuYiW2ctS0RqlOQUigPZDcx
         0rWF9CMUTw2r8PijLsf4hhxbHdj9SPFddXlNBzlMtpv7KFVKB60EyZ1p6My4oVBRe50E
         /XSyJDRDfrwIexB1F9bmOso5z2mkvTcgztyME=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:content-transfer-encoding;
        b=P4qNTgH8JooWBwWFam6HmjbwYgVGCYVgl8lw8rvALSNDTcHhyxbhkVKbhk1U5ekoN1
         ZPTxuvPEFkslVsYs1hiu5zgAL5BHXx9awwwFS2+YhjOHvA6LhiCvoTuW2Z8qQlxS4pR2
         fmjH5BQ+C/uX/YM8nv7MYdLpA2uSWc3kkbNXI=
MIME-Version: 1.0
Received: by 10.220.46.146 with SMTP id j18mr3126873vcf.45.1236781237791; Wed, 
	11 Mar 2009 07:20:37 -0700 (PDT)
In-Reply-To: <21952156.346634.1236751878001.JavaMail.www@wwinf1b03>
References: <87prgoydy1.fsf@aryx.cs.uiuc.edu>
	 <f8560b80903102125h784906d3ged83273e5cf523b0@mail.gmail.com>
	 <21952156.346634.1236751878001.JavaMail.www@wwinf1b03>
Date: Wed, 11 Mar 2009 10:20:37 -0400
Message-ID: <f8560b80903110720u1e13b13fm1324f422c910a2fe@mail.gmail.com>
Subject: Re: [Caml-list] typing problem with sexplib and mutually recursive 
	polymorphic types
From: Markus Mottl <markus.mottl@gmail.com>
To: yoann padioleau <padator@wanadoo.fr>
Cc: Caml-list List <caml-list@inria.fr>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; recursive:01 markus:01 mottl:01 markus:01 mottl:01 recursive:01 recursion:01 undecidable:01 ocaml:01 2009:98 polymorphic:01 polymorphic:01 wrote:01 typing:01 caml-list:01 

On Wed, Mar 11, 2009 at 02:11, yoann padioleau <padator@wanadoo.fr> wrote:
> Yes on this example, but what if I can't move it out because
> the types really need to be mutually recursive ?

I'm afraid, I don't see any straightforward way of achieving this
goal.  If the above were allowed in a truly recursive way, you'd
essentially end up with polymorphic recursion, which is undecidable.

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl@gmail.com

