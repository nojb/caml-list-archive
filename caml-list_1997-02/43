Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA17593 for caml-redistribution; Fri, 28 Feb 1997 17:24:35 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA15446 for <caml-list@pauillac.inria.fr>; Fri, 28 Feb 1997 15:03:34 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35]) by concorde.inria.fr (8.7.6/8.7.3) with ESMTP id PAA26647; Fri, 28 Feb 1997 15:03:34 +0100 (MET)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA15442; Fri, 28 Feb 1997 15:03:33 +0100 (MET)
From: Xavier Leroy <Xavier.Leroy@inria.fr>
Message-Id: <199702281403.PAA15442@pauillac.inria.fr>
Subject: Re: ML extension language
In-Reply-To: <199702272314.RAA18638@kimbark.uchicago.edu> from Lyn A Headley at "Feb 27, 97 05:14:06 pm"
To: laheadle@midway.uchicago.edu (Lyn A Headley)
Date: Fri, 28 Feb 1997 15:03:33 +0100 (MET)
Cc: caml-list@inria.fr
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: weis

> I realize that CAML already contains facilities for creating new
> primitives in C, but the main difference is that in a caml program,
> the main program is the interpreter for the caml virtual machine, whereas
> in an extension language control resides in the application.

Actually, it is possible to have the main program written in C and
calling Caml functions when needed. Release 1.03 contains very
preliminary support for this; the forthcoming release 1.04 provides
better support and documentation for this feature.

- Xavier Leroy




