Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA02460 for caml-redistribution; Tue, 4 Feb 1997 15:07:24 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA02425 for <caml-list@pauillac.inria.fr>; Tue, 4 Feb 1997 15:04:11 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35]) by concorde.inria.fr (8.7.6/8.7.3) with ESMTP id PAA07132; Tue, 4 Feb 1997 15:04:11 +0100 (MET)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA02421; Tue, 4 Feb 1997 15:04:09 +0100 (MET)
From: Pierre Weis <Pierre.Weis@inria.fr>
Message-Id: <199702041404.PAA02421@pauillac.inria.fr>
Subject: Re: Type-checking and raise
In-Reply-To: <199702041222.NAA03750@sisley.prism.uvsq.fr> from Denis BARTHOU at "Feb 4, 97 01:22:43 pm"
To: Denis.Barthou@prism.uvsq.fr (Denis BARTHOU)
Date: Tue, 4 Feb 1997 15:04:09 +0100 (MET)
Cc: caml-list@inria.fr
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: weis

> Hello,
> 
> Is there any type-checking for "raise" ? Indeed, 
> raise Not_found expr
> for instance do not trigger any type error, although raise 
> is of type exn -> 'a. Any reason for such a behaviour ?
> 
> --Denis Barthou

Raise has type exn -> 'a, thus raise Not_found has type 'a, and can be
applied to any number of values (ad libitum). This polymorphic type
scheme for raise is semantically sound, since nothing will be returned
by raise Not_found. This polymorphic type scheme is also mandatory, if
we want to write programs that raise exceptions in conditionals
(remember that all the arms of a conditional must have the same type).

Pierre Weis

INRIA, Projet Cristal, Pierre.Weis@inria.fr, http://pauillac.inria.fr/~weis






