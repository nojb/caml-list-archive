Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA27291 for caml-red; Wed, 8 Nov 2000 18:25:31 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA21938 for <caml-list@pauillac.inria.fr>; Tue, 7 Nov 2000 18:38:11 +0100 (MET)
Received: from shell5.ba.best.com (shell5.ba.best.com [206.184.139.136])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id eA7HcAb19280
	for <caml-list@inria.fr>; Tue, 7 Nov 2000 18:38:10 +0100 (MET)
Received: from localhost (bpr@localhost)
	by shell5.ba.best.com (8.9.3/8.9.2/best.sh) with ESMTP id JAA21814;
	Tue, 7 Nov 2000 09:36:53 -0800 (PST)
Date: Tue, 7 Nov 2000 09:36:52 -0800 (PST)
From: Brian Rogoff <bpr@best.com>
To: Francisco Reyes <fran@reyes.somos.net>
cc: "caml-list@inria.fr" <caml-list@inria.fr>
Subject: Re: Good programming languages (Was: Redefinition doesn't work)
In-Reply-To: <200011060619.BAA39908@sanson.reyes.somos.net>
Message-ID: <Pine.BSF.4.21.0011070900580.12454-100000@shell5.ba.best.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: weis@pauillac.inria.fr

On Mon, 6 Nov 2000, Francisco Reyes wrote:
> 2 for interactive.
> In my case at least Ocaml still shows too much of it's research
> background. It is taking me some time to get used to or even
> understand the output of the interactive environment.

Well, it will only get better with specific comments for improvements. 
Saying "interactive mode sucks" sucks. If you have problems understanding 
the output (inferred types?) from the top level then post a question here
or on comp.lang.functional.

> So far from the little I have seen it is not the libraries that
> it is a problem. It is the docs and the examples. I asked once
> if it was possible to contribute to the documentation and got no
> answer. 

How about just writing some docs that you'd like to see and putting them
on a web page? No need to ask the team at INRIA for permission, and
anyways, I'd rather that they were busy adding recursive modules and 
overloading to Ocaml than adding more instructional docs ;-).

> For instance there is no samples with the libraries so
> for beginners it is difficult at the beginning to understand how
> to use a library because there are no examples. 

If you ask a specific question like "Can someone show me how to use the 
Format module to do ..." then someone, maybe even me, will happily cobble 
together an example, but vague comments like the above are tough to help
with. Hopefully when we have an English version of the OReilly book you'll 
find more satisfactory examples.

> To make things worse I bought a book to try and learn Caml and the
> examples/exercises are highly math driven. I find this too be a
> horrible thing to have done. 

Most people who learn Ocaml are strong in maths so this is natural. If you
stick with Caml you'll find lots of compiler oriented examples too. Sorry 
to be a broken record here but why not ask for examples of the kind that 
specifically interest you? If you want to understand Unison then maybe you 
are more of a systems programming kind of guy and you want to understand
how the Unix module can be used? 

> When I look at the exercises I 
> spend more time trying to thing how the math is going to work
> out than how I am going to program the thing. Example: the first
> exercise is to prove that Ax^2 + bx + c = 0 is solvable given
> three parameters a,b,c. 

Well, the translator must have been inaccurate because it is *always*
solvable, so you have to infer that they mean "has real roots" :-). 

> For someone who is contantly doing math
> this is probably trivial, but I have not taken any math clases
> on years and I don't see the point on linking the exercises so
> much to math. This perhaps is linked to the previous(current?)
> set of intended users.

Unfortunately, we run into the problem that a large number of potential 
users probably couldn't care less about the examples that interest you
either. If you come up with some examples that you find illuminating and
would like to share them then by all means do so.

> If Ocaml is to ever become a general purpose language then the
> docs/examples need to be less theorical and more practical.

Ocaml already is a general purpose language, thanks. I agree that we need 
more documents in order to spread the knowledge. However, I like the 
examples that you find too theoretical. I work in software for VLSI
design, so examples from maths, compilers, computational geometry,
graph theory, etc. all seem very practical to me. 

> >2 for good syntax (it is very easy to spend a lot of time trying to get the
> >program to compile, for example I called a attribute in a record 'value',
> >and that works sometimes I have noticed :-),
> 
> I agree with the 2. I don't know if it is my lack of having
> worked with other functional languages, but I find the Ocaml
> syntax strange.

I'm not terribly thrilled by the syntax either, but I hardly see how it
gets a 2 from you after you showed such deference to Perl. Perl and C++ 
are syntactic abominations.

-- Brian



