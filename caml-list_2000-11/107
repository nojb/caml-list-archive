Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA18880 for caml-red; Mon, 13 Nov 2000 09:08:30 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA22843 for <caml-list@pauillac.inria.fr>; Sun, 12 Nov 2000 14:17:52 +0100 (MET)
Received: from mail.is.titech.ac.jp (mail.is.titech.ac.jp [131.112.51.131])
	by nez-perce.inria.fr (8.11.1/8.10.0) with SMTP id eACDHof19868
	for <caml-list@inria.fr>; Sun, 12 Nov 2000 14:17:51 +0100 (MET)
Received: (qmail 23812 invoked from network); 12 Nov 2000 13:17:43 -0000
Received: from mail.is.titech.ac.jp (HELO is.titech.ac.jp) (131.112.51.131)
  by mail.is.titech.ac.jp with SMTP; 12 Nov 2000 13:17:43 -0000
Message-ID: <3A0E987B.F67FECA5@is.titech.ac.jp>
Date: Sun, 12 Nov 2000 22:17:47 +0900
From: Ken Wakita <wakita@is.titech.ac.jp>
X-Mailer: Mozilla 4.75 [ja] (Windows NT 5.0; U)
X-Accept-Language: ja
MIME-Version: 1.0
To: John Max Skaller <skaller@ozemail.com.au>
CC: caml-list@inria.fr
Subject: Re: practical functional programming
References: <4.3.2.7.2.20001103055229.00ab6880@shell16.ba.best.com> <4.3.2.7.2.20001106100700.00c447b0@shell16.ba.best.com> <00110709260602.01341@pcrm> <3A0D5877.5276798B@ozemail.com.au>
Content-Type: text/plain; charset=iso-2022-jp
Content-Transfer-Encoding: 7bit
Sender: weis@pauillac.inria.fr


A circumstance where reference counting outperforms modern trace-based
collectors is where memory access cost is much higher than the
conventional memory system and thus memory access required for tracing
is much higher than the cost for counter maintenance.  One such example
is distributed environment.  Another maybe systems with very, very slow
memory such as file systems, persistent object systems, and PDAs.  I am
curious if there are other circumstances using conventional memory
system where reference counting is faster.

Ken Wakita
Tokyo Institute of Technology

John Max Skaller wrote:
> 
> Stephan Houben wrote:
> > Reference counting is a (bad) substitute for real garbage collection, such as
> > O'Caml has. No need for refcounting, since we have GC.
> 
>         I can't quite agree with that: reference counting is
> a _different_ technique with different properties. In the right
> circumstances it is faster than garbage collection, and permits
> synchronous, well ordered finalisation. But it is only appropriate
> where the 'skeleton' of the data structure is heirarchical, whereas
> garbage collection works in general.
> 
> --
> John (Max) Skaller, mailto:skaller@maxtal.com.au
> 10/1 Toxteth Rd Glebe NSW 2037 Australia voice: 61-2-9660-0850
> checkout Vyper http://Vyper.sourceforge.net
> download Interscript http://Interscript.sourceforge.net


