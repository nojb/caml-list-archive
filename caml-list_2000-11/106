Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA22938 for caml-red; Mon, 13 Nov 2000 09:09:44 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA18966 for <caml-list@pauillac.inria.fr>; Mon, 13 Nov 2000 01:19:27 +0100 (MET)
Received: from mail.is.titech.ac.jp (mail.is.titech.ac.jp [131.112.51.131])
	by nez-perce.inria.fr (8.11.1/8.10.0) with SMTP id eAD0JPf22819
	for <caml-list@inria.fr>; Mon, 13 Nov 2000 01:19:25 +0100 (MET)
Received: (qmail 9199 invoked from network); 13 Nov 2000 00:19:24 -0000
Received: from dmznat-9.is.titech.ac.jp (HELO localhost) (131.112.51.189)
  by mail.is.titech.ac.jp with SMTP; 13 Nov 2000 00:19:24 -0000
To: skaller@ozemail.com.au
Cc: caml-list@inria.fr
Subject: Re: practical functional programming
In-Reply-To: <3A0EF904.C65AC976@ozemail.com.au>
References: <3A0D5877.5276798B@ozemail.com.au>
	<3A0E987B.F67FECA5@is.titech.ac.jp>
	<3A0EF904.C65AC976@ozemail.com.au>
X-Mailer: Mew version 1.94.1 on Emacs 20.5 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20001113091938O.wakita@is.titech.ac.jp>
Date: Mon, 13 Nov 2000 09:19:38 +0900
From: Ken Wakita <wakita@is.titech.ac.jp>
X-Dispatcher: imput version 990905(IM130)
Lines: 29
Sender: weis@pauillac.inria.fr


In message (<3A0EF904.C65AC976@ozemail.com.au>)
from John Max Skaller <skaller@ozemail.com.au>,
talking about "Re: practical functional programming",
on Mon, 13 Nov 2000 07:09:40 +1100

skaller> Ken Wakita wrote:
skaller> > 
skaller> > A circumstance where reference counting outperforms modern trace-based
skaller> > collectors is where memory access cost is much higher than the
skaller> > conventional memory system and thus memory access required for tracing
skaller> > is much higher than the cost for counter maintenance.  One such example
skaller> > is distributed environment.  Another maybe systems with very, very slow
skaller> > memory such as file systems, persistent object systems, and PDAs.  I am
skaller> > curious if there are other circumstances using conventional memory
skaller> > system where reference counting is faster.
skaller> 
skaller> I don't know how a trace-based collector works. Can you explain?
skaller> [Does this have something to do with a write barrier on pointer
skaller> stores?]

Trace-based collector (or tracing collector) is a name given to a
class of garbage collection algorithms that trace the object graph in
the heap.  It covers most of the garbage collection algorithms,
mark&sweep and copying.  If you incorporate generational techniques
probably you need to use write barrier.

Ken Wakita
Tokyo Institute of Technology


