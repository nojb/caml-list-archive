Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA03814 for caml-red; Mon, 6 Nov 2000 21:09:21 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA19403 for <caml-list@pauillac.inria.fr>; Sun, 5 Nov 2000 12:16:19 +0100 (MET)
Received: from mx1.informatik.uni-tuebingen.de (mx1.Informatik.Uni-Tuebingen.De [134.2.12.5])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id eA5BGJP06389
	for <caml-list@inria.fr>; Sun, 5 Nov 2000 12:16:19 +0100 (MET)
Received: from informatik.uni-tuebingen.de (sams [134.2.12.50])
	by mx1.informatik.uni-tuebingen.de (Postfix) with ESMTP id 263584A4
	for <caml-list@inria.fr>; Sun,  5 Nov 2000 12:16:19 +0100 (MET)
Received: (from sperber@localhost)
	by informatik.uni-tuebingen.de (8.9.3/8.9.3) id MAA14542;
	Sun, 5 Nov 2000 12:16:18 +0100 (CET)
	(envelope-from sperber)
To: caml-list@inria.fr
Subject: Re: Redefinition doesn't work
References: <20001102144509.A5788@blue1.berkeley.edu>
	<200011030921.KAA21301@pauillac.inria.fr>
	<3a02f642$1@tequila.cs.yale.edu>
From: sperber@informatik.uni-tuebingen.de (Michael Sperber [Mr. Preprocessor])
Date: 05 Nov 2000 12:16:18 +0100
In-Reply-To: "Stefan Monnier"'s message of "3 Nov 2000 12:30:42 -0500"
Message-ID: <y9lk8aizn25.fsf@sams.informatik.uni-tuebingen.de>
Lines: 21
User-Agent: Gnus/5.0807 (Gnus v5.8.7) XEmacs/21.2 (Notus)
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Sender: weis@pauillac.inria.fr

>>>>> "Stefan" == Stefan Monnier <monnier+lists.caml/news/@RUM.cs.yale.edu> writes:

>>>>> "Pierre" == Pierre Weis <Pierre.Weis@inria.fr> writes:
>> I remember my surprise when I was porting to Scheme some fancy
Stefan> [...example of bad things happening with redefinition...]

Stefan> Don't get me wrong.  The "always redefine" approach is just as wrong
Stefan> as the "never redefine" used by Caml.  It's just that sometimes you want
Stefan> one and sometimes you want the other.

Stefan> I remember a proposition for Scheme (maybe from Matthias Blume) to use
Stefan> `set!' for redefinition and `define' to create a whole new binding.

Stefan> I'm not sure if Scheme ended up providing such a facility, but it
Stefan> does sound right to me.

Most Schemes which address the issue use a module system to resolve it.

-- 
Cheers =8-} Mike
Friede, Völkerverständigung und überhaupt blabla


