Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA00477 for caml-red; Fri, 3 Nov 2000 18:06:03 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA22047 for <weis@pauillac.inria.fr>; Fri, 3 Nov 2000 18:01:39 +0100 (MET)
Received: from mailserver.cli.di.unipi.it (crudelia.cli.di.unipi.it [131.114.11.37])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id eA3H1bT20101
	for <Pierre.Weis@inria.fr>; Fri, 3 Nov 2000 18:01:38 +0100 (MET)
Organization:  Centro di Calcolo - Dipartimento di Informatica di Pisa - Italy
Received: from fire.cli.di.unipi.it (fire-ext.cli.di.unipi.it [131.114.11.52])
	by mailserver.cli.di.unipi.it (8.9.3/8.9.3) with SMTP id SAA23673
	for <Pierre.Weis@inria.fr>; Fri, 3 Nov 2000 18:01:31 +0100
Received: (qmail 9343 invoked by uid 7794); 3 Nov 2000 17:01:04 -0000
Received: from comex13.cli.di.unipi.it(131.114.11.160)
	via SMTP by nez-perce.inria.fr, id smtpda09215; Fri Nov  3 17:58:28 2000
Received: from localhost (bernardp@localhost)
	by comex13.cli.di.unipi.it (8.9.3/8.9.3) with ESMTP id RAA01767;
	Fri, 3 Nov 2000 17:58:28 +0100
X-Authentication-Warning: comex13.cli.di.unipi.it: bernardp owned process doing -bs
Date: Fri, 3 Nov 2000 17:58:28 +0100 (CET)
From: Pierpaolo BERNARDI <bernardp@cli.di.unipi.it>
To: Pierre Weis <Pierre.Weis@inria.fr>
cc: caml-list@inria.fr
Subject: Re: Redefinition doesn't work
In-Reply-To: <200011030921.KAA21301@pauillac.inria.fr>
Message-ID: <Pine.LNX.4.10.10011031748000.1492-100000@comex13.cli.di.unipi.it>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: weis@pauillac.inria.fr


On Fri, 3 Nov 2000, Pierre Weis wrote:

> > Stefan Monnier wrote:
> > >>>>>> "Pierre" == Pierre Weis <Pierre.Weis@inria.fr> writes:
> > >> It is not only a question of type. As I mentioned in my previous
> > >> message, if you allow the user to ``rebind'' some basic functions,
> > >> such as map or iter, the behaviour of the compiler can be
> > >> unpredictable.
> > >
> > >It never seems to bother Lisp users.

It does bother Lisp users, and they solve the problem (partially) in
different ways.

For example, in Common Lisp it is forbidden to redefine system functions.
In Scheme, you can define functions with the same name of a system one,
but this redefinition cannot change the behaviour of other system
functions.

> Scheme has lexical scoping <EM>locally</EM>. It has dynamic binding
> globally, just to address this redefinition problem (as far as I can
> imagine a clever justification to this extremely strange behaviour). I
> remember my surprise when I was porting to Scheme some fancy
> metacompilation stuff written in Caml: unfortunately the Caml code
> ended by redefining (globally) the functions load and compile; how
> strange errors messages when the internals of the Scheme compiler
> tried to use those functions in place of its original versions! I
> needed a long time to figure out what was happening, since I did not
> use directly any Scheme function named compile: I just tried to
> compile my Scheme files as usual, calling some primitive function
> named compile-file (or so), that unfortunately happened to use a
> global function also named compile.

This is not a property of Scheme, is a bug in the implementation you
were using!

P.


