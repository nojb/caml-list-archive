Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA12208 for caml-red; Mon, 20 Nov 2000 20:24:58 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA04647 for <caml-list@pauillac.inria.fr>; Mon, 20 Nov 2000 14:28:15 +0100 (MET)
Received: from indigo.recherche.enac.fr (indigo.recherche.enac.fr [195.220.158.66])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id eAKDSEf02360
	for <caml-list@inria.fr>; Mon, 20 Nov 2000 14:28:14 +0100 (MET)
Received: from rouge.recherche.enac.fr (mail@rouge.recherche.enac.fr [10.31.1.70] (may be forged)) by indigo.recherche.enac.fr (8.8.6 (PHNE_14041)/8.6.11) with ESMTP id OAA08431; Mon, 20 Nov 2000 14:27:49 +0100 (MET)
Received: from localhost
	([127.0.0.1] helo=recherche.enac.fr ident=alliot)
	by rouge.recherche.enac.fr with esmtp (Exim 3.12 #1 (Debian))
	id 13xqz8-0004Dj-00; Mon, 20 Nov 2000 14:27:50 +0100
Message-ID: <3A1926D6.876BB8DF@recherche.enac.fr>
Date: Mon, 20 Nov 2000 14:27:50 +0100
From: jean-marc alliot <alliot@recherche.enac.fr>
Organization: Laboratoire d'Optimisation Globale
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12 i686)
X-Accept-Language: fr-FR, en
MIME-Version: 1.0
To: David McClain <dmcclain@azstarnet.com>
CC: caml-list@inria.fr
Subject: Re: Cluster Multiprocessing
References: <000501c0504d$796a3000$210148bf@dylan>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis@pauillac.inria.fr

David McClain wrote:

> I am about to embark on a project that seeks to reduce the computation time
> of a large problem from 100+ hours to less than 20 minutes. This is
> initially though to require a cluster of multiprocessors using either a
> Beowulf architecture, or a large, shared memory, message passing,
> architecture. I am interested in the suitability (or otherwise) of OCaml to
> such computations and the experiences of anyone else in this group on such
> architectures. Garbage collection across nodes in a shared memory
> architecture seems like a particularly daunting problem.
>

We have such an experience regarding Air Traffic arithmetic simulation with
conflict resolutions. We use PVM (messages passing), but our problem has a
quite large "granularity". I have a personal experience in games programming
(parallel alpha-beta) and message passing is there less efficient.
My advice on such problems would be the following : if you can "divide" your
problem in quite large independant chunks, the message passing solution is the
one you are looking for. You can build extremely powerful clusters with very
little money, and the messages passing mechanism is extremely easy to use.
On the opposite, such mechanisms will become slow if your problem needs
variable sharing etc...

JMA
(Note : PVM bindings for OCAML are at
ftp://ftp.recherche.enac.fr/pub/SRC/ocamlpvm.tgz)



