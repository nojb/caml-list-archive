Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA22539 for caml-red; Mon, 6 Nov 2000 23:21:40 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA09381 for <caml-list@pauillac.inria.fr>; Mon, 6 Nov 2000 18:51:24 +0100 (MET)
Received: from tcs.inf.tu-dresden.de (tcs.inf.tu-dresden.de [141.76.75.101])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id eA6HpNP29380
	for <caml-list@inria.fr>; Mon, 6 Nov 2000 18:51:23 +0100 (MET)
Received: from ithif20.inf.tu-dresden.de (ithif20 [141.76.75.120])
	by tcs.inf.tu-dresden.de (8.11.1/8.11.1) with ESMTP id eA6HpMj07723
	for <caml-list@inria.fr>; Mon, 6 Nov 2000 18:51:23 +0100 (MET)
Received: (from tews@localhost)
	by ithif20.inf.tu-dresden.de (8.9.1a/8.9.1) id SAA08361;
	Mon, 6 Nov 2000 18:51:22 +0100 (MET)
Date: Mon, 6 Nov 2000 18:51:22 +0100 (MET)
Message-Id: <200011061751.SAA08361@ithif20.inf.tu-dresden.de>
From: Hendrik Tews <tews@tcs.inf.tu-dresden.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
To: caml-list@inria.fr
Subject: Re: Assert
In-Reply-To: <20001103113752.51773@pauillac.inria.fr>
References: <Pine.LNX.4.20_heb2.08.0011022226530.11508-100000@zigzag.cs.huji.ac.il>
	<20001103113752.51773@pauillac.inria.fr>
X-Mailer: VM 6.34 under Emacs 19.34.1
Sender: weis@pauillac.inria.fr

Hi,

Xavier Leroy writes:
   From: Xavier Leroy <Xavier.Leroy@inria.fr>
   Date: Fri, 3 Nov 2000 11:37:52 +0100
   Subject: Re: Assert
   
   > List,
   >     I still cannot figure out why the assert instruction
   > does not return the line number at which the exception occures.
   
   Basically, it's because the compiler uses character numbers
   internally; line numbers are computed only when printing an error message.
   
>From what I can see from the sources, for every error and warning
message the whole source file is parsed again with a special
lexer to determine the line number (parsing/linenum.mll). Could
anybody comment on this approach to printing error messages? (It
seems very very very strange to me.)


Besides that I have another suggestion for the 
this discussion thread about escaping assertions:

Would it be possible to reserve a keyword (or a standard library
symbol) "current_line_number" that, by magic, expands to its
location (a tuple or triple of integers) in the source file? This
way the magic of assert would be available for us users, one
could write

try ....
with 
  ...
  | a -> prerr_endline( "Exception " ^ (Printexc.to_string a) ^ 
                        " escaping at " ^ 
                        ( ... current_line_number))


Bye,

Hendrik


