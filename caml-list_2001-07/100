Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA20119; Wed, 11 Jul 2001 21:13:12 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA20117 for <caml-list@pauillac.inria.fr>; Wed, 11 Jul 2001 21:13:11 +0200 (MET DST)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f6BJD9X24564
	for <caml-list@inria.fr>; Wed, 11 Jul 2001 21:13:10 +0200 (MET DST)
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.9.3/8.9.3/Debian 8.9.3-21) id VAA26219;
	Wed, 11 Jul 2001 21:12:52 +0200
Date: Wed, 11 Jul 2001 21:12:52 +0200
From: Markus Mottl <markus@mail4.ai.univie.ac.at>
To: Bruce Hoult <bruce@hoult.org>
Cc: caml-list@inria.fr
Subject: Re: "Re: [Caml-list] A G'Caml question" + additional info
Message-ID: <20010711211251.A24340@fichte.ai.univie.ac.at>
References: <Pine.BSF.4.21.0107110903260.7564-100000@shell5.ba.best.com> <a05101015b7722efaf2d3@[128.135.227.93]>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <a05101015b7722efaf2d3@[128.135.227.93]>; from bruce@hoult.org on Wed, Jul 11, 2001 at 11:35:16 -0500
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 11 Jul 2001, Bruce Hoult wrote:
> But the language itself seems to be starting to rival C++ for sheer
> complexity. When you want to do something you seem to have a choice
> of using this feature, or *this* one, or *this* newly developed one.

Having choices is not necessarily bad, being forced to using many
alternatives is. I think that OCaml has succeeded quite well so far in
keeping different features apart as one can see in the standard library,
which can be used with the core language + modules alone. I hope this
will stay so!

Whether one or the other feature will be thrown out at some point of
time depends on how it performs in real work. That's not necessarily
easily tried in small scale experiments.

> Dylan is conceptually a much simpler language, with less intimidating 
> syntax, and you can easily express what you want to do using a very 
> small number of basic constructs.

Maybe, I don't know. But it does not declare itself as a research
language.  Everybody who uses OCaml should be aware of its status. If
you use experimental features, this is likely to burn you some time
in the future. If you stay with the core + module language, you should
probably be fairly safe for the foreseeable future.

Regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

