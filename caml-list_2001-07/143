Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA19072; Sat, 14 Jul 2001 03:14:31 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA19115 for <caml-list@pauillac.inria.fr>; Sat, 14 Jul 2001 03:14:24 +0200 (MET DST)
Received: from localhost.localdomain (cartman103.zip.com.au [61.8.20.231])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f6E1EKT03163
	for <caml-list@inria.fr>; Sat, 14 Jul 2001 03:14:21 +0200 (MET DST)
Received: from maxtal.com.au (IDENT:root@localhost [127.0.0.1])
	by localhost.localdomain (8.9.3/8.8.7) with ESMTP id LAA15960;
	Thu, 12 Jul 2001 11:58:42 +1000
Message-ID: <3B4D0452.BCA782AA@maxtal.com.au>
Date: Thu, 12 Jul 2001 11:58:42 +1000
From: John Max Skaller <skaller@maxtal.com.au>
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12-20 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: Jimmie Houchin <jhouchin@texoma.net>
CC: "Alexander V. Voinov" <avv@quasar.ipa.nw.ru>, caml-list@inria.fr
Subject: Re: [Caml-list] Web Development with OCaml
References: <Pine.GSO.4.04.10107100957200.23057-100000@clipper.ens.fr> <3B4BE8CE.B246A7E8@texoma.net> <3B4BEC2F.7A3938B7@quasar.ipa.nw.ru> <3B4C6703.55715E1F@texoma.net>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Jimmie Houchin wrote:

> I would like to code in a language that is both fast to run and fast to
> code in. I want a language with automatic memory management. I am not a
> C/C++ programmer. I don't particularly want to program in Java. Nor do I
> find Java too advantageous. Now that I've made everyone ill. :) ...
 
> OCaml seems to fit the bill reasonably. The largest challenge to me with
> OCaml is it has a foreign syntax (to me) and it is functional
> programming. So I need to learn a new syntax and program
> paradigm/philosophy. But the benefits for doing so seem to be there.

	Ocaml supports ordinary procedural and object oriented programming.
It is a traditional language in this sense: all languages provide
expressions, which is all that functional programming is.
The main differences is emphasis, and the fact that in Ocaml you 
have first class functions. Uses for this will come naturally
from your application. Soon, you will not be able to go
back. Be warned!!

	For me, the main obstacle to learning was, and still is,
the syntax. It takes time to mentally 'pattern match' against
a new syntax.

	Take the time. It's worth it :-)

> In a simple direct comparison to Perl or Python it would seem OCaml
> would perform better.

	I think this is less relevant than the tradeoff between
rapid prototyping of small applications in Python/Perl, compared
to much better assurances of correctness for larger projects
in Ocaml (due to a combination of strict static typing and
extremely compact code which is easier to analyse).
 
-- 
John (Max) Skaller, mailto:skaller@maxtal.com.au 
10/1 Toxteth Rd Glebe NSW 2037 Australia voice: 61-2-9660-0850
New generation programming language Felix  http://felix.sourceforge.net
Literate Programming tool Interscript     
http://Interscript.sourceforge.net
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

