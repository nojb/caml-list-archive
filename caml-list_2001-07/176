Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA14967; Mon, 16 Jul 2001 10:24:20 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA14850 for <caml-list@pauillac.inria.fr>; Mon, 16 Jul 2001 10:24:19 +0200 (MET DST)
Received: from mail.is.titech.ac.jp (mail.is.titech.ac.jp [131.112.51.131])
	by concorde.inria.fr (8.11.1/8.10.0) with SMTP id f6G8O4T21773
	for <caml-list@inria.fr>; Mon, 16 Jul 2001 10:24:05 +0200 (MET DST)
Received: (qmail 25540 invoked from network); 16 Jul 2001 08:23:54 -0000
Received: from mail.is.titech.ac.jp (HELO localhost) (131.112.51.131)
  by mail.is.titech.ac.jp with SMTP; 16 Jul 2001 08:23:54 -0000
Date: Mon, 16 Jul 2001 17:23:15 +0900 (JST)
Message-Id: <20010716.172315.00455888.wakita@is.titech.ac.jp>
To: aheitner@andrew.cmu.edu
Cc: Xavier.Leroy@inria.fr, vsl@ontil.ihep.su, frisch@clipper.ens.fr,
        williamc@paneris.org, caml-list@inria.fr, web-caml@quatramaran.ens.fr
Subject: Re: [Caml-list] Web Development with OCaml
From: wakita@is.titech.ac.jp
In-Reply-To: <20010715140351.B20044@andrew.cmu.edu>
References: <Pine.LNX.4.30.0107131510020.20122-100000@ontil.ihep.su>
	<20010713160428.A9419@pauillac.inria.fr>
	<20010715140351.B20044@andrew.cmu.edu>
X-Mailer: Mew version 1.95b114 on Emacs 20.7 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


i'm sorry that my comment is off the topic of web development...

A few months ago, I ran the Fibonacci test for gcc 2.95 and ocamlopt
on the Intel platform and saw the similar result; I was not interested
in PIC at the moment.  First, I thought the difference was due to
inlining done by the ocamlopt but it was not the case for Fibonacci
function.  Comparison of the assembly code produced by the both
compiler suggests that the difference is due primariry to the fact
that gcc does not optimize enough argument passing to functions.

Ken Wakita
Tokyo Institute of Technology

In message (<20010715140351.B20044@andrew.cmu.edu>)
from Ari Heitner <aheitner@andrew.cmu.edu>,
talking about "Re: [Caml-list] Web Development with OCaml",
on Sun, 15 Jul 2001 14:03:51 -0400

> I've definitely seen Java behave slowly. But today I did a dead-simple test
> (designed to avoid all the Java weaknesses): a recursive fib, and got
> interesting results:
>  - Java was a touch faster than gcc (~10% penalty for not making the call 
>    "static")
>  - gcc (2.95.4) was ~20% slower for pic. I seem to recall gcc 3.0 being
>    maybe 10% faster, tho it may be quite a bit faster on less moronic code
>    (i've heard up to 40%). but this is a moronic measure that only leans
>    on function-call cost -- in real code it should be much less noticeable.
>    no one seems to complain about either using shared libraries, or (to 
>    be like the java servlet arch below) explicitly loading code via dlopen.
>  - ocaml is about 40% faster than java/gcc
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

