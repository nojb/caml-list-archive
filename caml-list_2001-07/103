Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA21287; Wed, 11 Jul 2001 22:33:17 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA21275 for <caml-list@pauillac.inria.fr>; Wed, 11 Jul 2001 22:33:16 +0200 (MET DST)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f6BKXEX25312;
	Wed, 11 Jul 2001 22:33:14 +0200 (MET DST)
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.9.3/8.9.3/Debian 8.9.3-21) id WAA11018;
	Wed, 11 Jul 2001 22:33:08 +0200
Date: Wed, 11 Jul 2001 22:33:08 +0200
From: Markus Mottl <markus@mail4.ai.univie.ac.at>
To: Xavier Leroy <Xavier.Leroy@inria.fr>
Cc: Berke Durak <berke@altern.org>, caml-list@inria.fr
Subject: Re: [Caml-list] String.unescaped and some other little pitiful laments
Message-ID: <20010711223308.A6187@fichte.ai.univie.ac.at>
References: <20010710200734.B10265@localhost.localdomain> <20010711213029.B20109@pauillac.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <20010711213029.B20109@pauillac.inria.fr>; from Xavier.Leroy@inria.fr on Wed, Jul 11, 2001 at 21:30:29 +0200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 11 Jul 2001, Xavier Leroy wrote:
> So, this is a question to the developers of alternate regexp
> libraries: how hard would it be to implement an Str emulation on top
> of your libraries?  If you're interested, we can pursue this
> discussion by private e-mail.

Well, I somehow felt addressed by this request... ;)

It may seem that one would only have to rewrite Emacs-style patterns
to Perl-style ones to use my Pcre-interface. Unfortunately, there is
no way to stay backward compatible _and_ get rid of the statefulness,
because the interface of the Str-library just relies on the latter.
One could surely emulate this behaviour with not too much effort, but
the Str-library would still remain awfully stateful then (though it
would perform matching somewhat faster).

I think that in the long run there will be no way around declaring the
Str-interface obsolete. Especially for multi-threaded applications a
stateless regexp engine is really a requirement. The longer we keep this
interface, the more legacy code we will get...

If you want, just shamelessly grab the Pcre-library and adapt it to
your needs: it's LGPLed anyway. Though, I admit that I'd also like to
see a featureful and fast regexp-library purely written in OCaml rather
than one cowardly interfacing to existing C-libraries (would require
significantly more work).

If anybody wants to write a substitute for the Str- building on the
Pcre-library and needs some hints, just tell me. Unfortunately, I won't
have time to work on this issue in the near future...

Best regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

