Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA20981; Wed, 18 Jul 2001 02:28:28 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA21396 for <caml-list@pauillac.inria.fr>; Wed, 18 Jul 2001 02:28:27 +0200 (MET DST)
Received: from espresso (espresso.is.s.u-tokyo.ac.jp [133.11.12.104])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f6I0SOH07119
	for <caml-list@inria.fr>; Wed, 18 Jul 2001 02:28:25 +0200 (MET DST)
Received: from espresso
	([127.0.0.1] helo=localhost ident=sumii)
	by espresso with esmtp (Exim 3.12 #1 (Debian))
	id 15MfCP-0008IJ-00; Wed, 18 Jul 2001 09:28:21 +0900
To: caml-list@inria.fr
From: eijiro_sumii@anet.ne.jp
Cc: cartan@cartan.de, sumii@yl.is.s.u-tokyo.ac.jp
Subject: Re: [Caml-list] exceptions and the polymorphic equality
In-Reply-To: <lkpuaz1v4c.fsf@pc022.bln.elmeg.de>
References: <200107161511.RAA23787@pauillac.inria.fr>
	<20010717095912O.sumii@yl.is.s.u-tokyo.ac.jp>
	<lkpuaz1v4c.fsf@pc022.bln.elmeg.de>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20010718092820F.sumii@yl.is.s.u-tokyo.ac.jp>
Date: Wed, 18 Jul 2001 09:28:20 +0900
X-Dispatcher: imput version 991025(IM133)
Lines: 28
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Nils Goesche <cartan@cartan.de>
> I can't see any ``issue'' here:
> 
> # e == e';;
> - : bool = false
> 
> # try raise e with e -> ();;
> - : unit = ()

Is this a kind of sophisticated joke or something?:-) It catches _any_
exception.

From: Nils Goesche <cartan@cartan.de>
> OTOH, we also have
> 
> # 2 == 2;;
> - : bool = true
> # 2.0 == 2.0;;
> - : bool = false
> 
> So, this still doesn't seem like a bug to me...

I've never said or even thought that "Foo == Foo" being false is a
bug; it just implies that constant exceptions are not "simple
single-word" objects (like integers and constant constructors) in
OCaml, I suppose, as floats are not.

	Eijiro
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

