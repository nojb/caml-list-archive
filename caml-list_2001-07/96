Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA17158; Wed, 11 Jul 2001 18:22:30 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA17186 for <caml-list@pauillac.inria.fr>; Wed, 11 Jul 2001 18:22:29 +0200 (MET DST)
Received: from shell5.ba.best.com (shell5.ba.best.com [206.184.139.136])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f6BGMS929743
	for <caml-list@inria.fr>; Wed, 11 Jul 2001 18:22:28 +0200 (MET DST)
Received: from localhost (bpr@localhost)
	by shell5.ba.best.com (8.9.3/8.9.2/best.sh) with ESMTP id JAA22916;
	Wed, 11 Jul 2001 09:22:21 -0700 (PDT)
Date: Wed, 11 Jul 2001 09:22:21 -0700 (PDT)
From: Brian Rogoff <bpr@best.com>
To: "Krishnaswami, Neel" <neelk@cswcasa.com>
cc: caml-list@inria.fr
Subject: Re: "Re: [Caml-list] A G'Caml question" + additional info
In-Reply-To: <B1E4D3274D57D411BE8400D0B783FF322E8652@exchange1.cswv.com>
Message-ID: <Pine.BSF.4.21.0107110903260.7564-100000@shell5.ba.best.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 11 Jul 2001, Krishnaswami, Neel wrote:
> Sven [mailto:luther@dpt-info.u-strasbg.fr] wrote:
> > On Tue, Jul 10, 2001 at 02:21:02PM -0400, Krishnaswami, Neel wrote:
> > > 
> > > Can you describe how I'd write something like the show function in 
> > > Haskell, or the print-object generic function in Dylan? I've looked
> > > at the G'Caml documentation, and it doesn't look like it's possible
> > > to extend a generic function with new branches.
> > 
> > i think they are speacking about an extension to g'caml that 
> > would use the include keyword and permit such extension.
> > Please read the previous mails about this thread.
> 
> Ah, I misunderstood, then. I thought the claim was that include 
> wouldn't be included, but that it wasn't necessary. 

No. The discussion is about whether the proposed include feature is
sufficient. My original concerns had to do with modeling recursive
generics in such a way that they can be extended (hence my question about
a form of open recursion) and I think Patrick was proposing something 
like dynamic binding (Patrick?). 

I've managed to convince myself that once generics play with modules and
functors, include will give me enough rope (to hang myself with :) for
now. Still, it is different from type classes and CLOS/Dylan generics, so 
read the papers, the mails by Jun Furuse on include, and start kicking
those tires! 

G'Caml also has dynamics, so I imagine we'll be seeing other disaffected 
Dylanites dallying with it too ;-).

-- Brian


-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

