Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA30116; Mon, 16 Jul 2001 22:35:11 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA30093 for caml-list@pauillac.inria.fr; Mon, 16 Jul 2001 22:35:10 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA28222 for <caml-list@pauillac.inria.fr>; Mon, 16 Jul 2001 20:25:28 +0200 (MET DST)
Received: from hebe.or.intel.com (jffdns02.or.intel.com [134.134.248.4])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f6GIPMT08771
	for <caml-list@inria.fr>; Mon, 16 Jul 2001 20:25:27 +0200 (MET DST)
Received: from ichips-ra.pdx.intel.com (ichips-ra-hme8.intel.com [10.7.13.35])
	by hebe.or.intel.com (8.9.1a+p1/8.9.1/d: relay.m4,v 1.41 2001/07/09 21:06:22 root Exp $) with ESMTP id SAA28221;
	Mon, 16 Jul 2001 18:25:03 GMT
Received: from dhpc0010.pdx.intel.com (dhpc0010.pdx.intel.com [10.7.21.33])
	by ichips-ra.pdx.intel.com (8.9.1a/8.9.1/d: internal.m4,v 1.2 1998/11/09 19:18:37 iwep Exp iwep $) with ESMTP id LAA06942;
	Mon, 16 Jul 2001 11:25:01 -0700 (PDT)
Received: from ichips.intel.com (johnh@localhost [127.0.0.1])
	by dhpc0010.pdx.intel.com (8.9.1a/8.9.1/d: client-ra.m4,v 1.1 1998/12/24 19:00:55 jamesw Exp jamesw $) with ESMTP id LAA09375;
	Mon, 16 Jul 2001 11:25:01 -0700 (PDT)
Message-Id: <200107161825.LAA09375@dhpc0010.pdx.intel.com>
To: Markus Mottl <markus@mail4.ai.univie.ac.at>
cc: caml-list@inria.fr, John Harrison <johnh@ichips.intel.com>
Subject: RE: "Re: [Caml-list] A G'Caml question" + additional info
Date: Mon, 16 Jul 2001 11:24:52 -0700
From: John R Harrison <johnh@ichips.intel.com>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Markus Mottl writes:

| This is a shortcoming of the standard library that there are no
| polymorphic implementations of "Set" and similar. It's very easy to
| extract a polymorphic (module-) version from the existing code. 

I strongly agree with this point. From recent messages it seems that I'm
just one of a whole army of O'Caml users who've essentially
cut-and-pasted code out of the standard set library with a fixed
polymorphic comparison function inserted. For a polymorphic language to
make dealing with polymorphic sets so awkward seems ridiculous.

Perhaps the justification for the decision to include orderings in the
standard interface is that the default equality and orderings may not
behave as desired on arbitrary types, e.g. non-canonical abstract data
types like other sets. However, a better solution might be to make
equality on abstract types settable (see an earlier thread I started on
this topic). Will G'Caml be any help in this respect? That is, will it
allow one to "overload" equality on particular types?

John.
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

