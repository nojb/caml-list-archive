Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA27415; Thu, 26 Jul 2001 17:48:00 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA27411 for <caml-list@pauillac.inria.fr>; Thu, 26 Jul 2001 17:47:59 +0200 (MET DST)
Received: from shell5.ba.best.com (shell5.ba.best.com [206.184.139.136])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f6QFlwv29274
	for <caml-list@inria.fr>; Thu, 26 Jul 2001 17:47:58 +0200 (MET DST)
Received: from localhost (bpr@localhost)
	by shell5.ba.best.com (8.9.3/8.9.2/best.sh) with ESMTP id IAA03464;
	Thu, 26 Jul 2001 08:47:51 -0700 (PDT)
Date: Thu, 26 Jul 2001 08:47:51 -0700 (PDT)
From: Brian Rogoff <bpr@best.com>
To: Miles Egan <miles@caddr.com>
cc: caml-list@inria.fr
Subject: Re: [Caml-list] a reckless proposal
In-Reply-To: <20010726082735.A65526@caddr.com>
Message-ID: <Pine.BSF.4.21.0107260841331.21480-100000@shell5.ba.best.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 26 Jul 2001, Miles Egan wrote:
> On Wed, Jul 25, 2001 at 08:15:49AM -0700, Brian Rogoff wrote:
> > It also seems that you'd like to eliminate these false friends (good phrase, 
> > especially for a bilingual French-English mailing list!) by subsuming them
> > into features that mainstream programmers know well. That would be a
> > mistake, since you'd end up with a mainstream language. 
> 
> I certainly wouldn't generally characterize my intentions that way.  I'm more
> interested in re-evaluating gratuitous differences.  At any rate, I agree that
> the loss of pattern-matching more than outweighs the benefits in this case.
> Ocaml is stylistically quite comfortably out of the mainstream in many ways and
> I'm sure it will remain so.

I think pattern matching is a compelling feature. I'd like to see
extensions to OCaml's pattern matching, like the SMLish ability to to
distinguish a partial and full record match (yeah I know backwards
compatibility may be an issue). And views, and...

 > 
> > 90s). Ada packages correspond very closely to ML modules, and there are
> > even crude approximations to functors and signatures in Ada 95 (generic 
> > formal package parameters in Ada parlance). 
> 
> It's not the combination of packaging and polymorphism in Ocaml that I think is
> confusing.  In fact, I think it's one of it's most compelling features.  It's
> the fact that compilation units are implicit top-level modules with special
> properties.  A few paragraphs in the documentation explaining top-level modules
> and the relationship between source files and implicit top-level modules might
> clarify this a bit better for new users.

http://caml.inria.fr/ocaml/htmlman/manual005.html section 4.5 explains it. 
Maybe a few more paragraphs showing how to use module types, functors, and
top level modules in a smallish compiled program would help? 

> Perhaps some kind of "Ocaml for Java Programmers" FAQ might be useful?

I don't use Java enough that it's the source of false friends. Are you
volunteering?

-- Brian


-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

