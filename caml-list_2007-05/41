Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 260E4BC69;
	Tue,  1 May 2007 19:15:53 +0200 (CEST)
Received: from ipmail01.adl2.internode.on.net (ipmail01.adl2.internode.on.net [203.16.214.140])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l41HFol9017218;
	Tue, 1 May 2007 19:15:51 +0200
X-IronPort-AV: E=Sophos;i="4.14,475,1170595800"; 
   d="scan'208";a="121980726"
Received: from ppp8-148.lns1.syd7.internode.on.net (HELO [192.168.1.201]) ([59.167.8.148])
  by ipmail01.adl2.internode.on.net with ESMTP; 02 May 2007 02:45:49 +0930
Subject: Re: [Caml-list] menhir
From: skaller <skaller@users.sourceforge.net>
To: Francois.Pottier@inria.fr
Cc: caml-list@inria.fr
In-Reply-To: <20070501155705.GA29617@yquem.inria.fr>
References: <1177756336.11923.18.camel@rosella.wigram>
	 <20070428165058.GA31584@yquem.inria.fr>
	 <1177821783.25394.37.camel@rosella.wigram>
	 <20070501155705.GA29617@yquem.inria.fr>
Content-Type: text/plain
Date: Wed, 02 May 2007 03:15:45 +1000
Message-Id: <1178039745.8967.15.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 463775C6.003 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; 0200,:01 recursive:01 indirection:01 'ref':01 sourceforge:01 wrote:01 compile:01 slower:01 caml-list:01 functions:01 pottier:01 francois:02 let:03 fix:04 generated:05 

On Tue, 2007-05-01 at 17:57 +0200, Francois Pottier wrote:

> I have tried that, but it does not help. Most (say, 95%) of the functions
> generated by Menhir are truly mutually recursive.

Yes, but you can always use indirection to decouple them
can't you? Eg just use a 'ref' to a function?

Slower at run time, but should fix the compile time
problem if the cause is huge let/recs.

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

