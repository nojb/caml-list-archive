Return-Path: <RABIH.ELCHAAR@sgam.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.3 required=5.0 tests=AWL,HTML_MESSAGE,NO_REAL_NAME,
	SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id BAE23BC69
	for <caml-list@yquem.inria.fr>; Thu, 31 May 2007 14:23:01 +0200 (CEST)
Received: from parmail02.sgcib.com (parmail02.sgcib.com [207.45.250.34])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4VCN0Ks010078
	for <caml-list@inria.fr>; Thu, 31 May 2007 14:23:01 +0200
X-IronPort-AV: i="4.14,598,1170630000"; 
   d="scan'208,217"; a="196130922:sNHT70906420"
Content-class: urn:content-classes:message
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----_=_NextPart_001_01C7A37E.683DB779"
X-MimeOLE: Produced By Microsoft Exchange V6.5.7226.0
Subject: RE: [Caml-list] nonlinear fit function binding
Date: Thu, 31 May 2007 14:22:51 +0200
Message-ID: <7625D6A1880B4C4DA11D2EBB8B43D2B90282F387@FRDEF-EXMB03.europe.am.socgen>
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
Thread-Topic: [Caml-list] nonlinear fit function binding
Thread-Index: AcejelnBrs3sFFkFTPqwSulsC9+p7AAA1T4w
From: <RABIH.ELCHAAR@sgam.com>
To: <matthieu.dubuget@gmail.com>, <caml-list@inria.fr>
X-OriginalArrivalTime: 31 May 2007 12:22:51.0973 (UTC) FILETIME=[689DD750:01C7A37E]
X-NAI-Spam-Score: -0.1
X-j-chkmail-Score: MSGID : 465EBE24.001 on discorde : j-chkmail score : XX : 5/20 0 0.000 -> 2
X-Miltered: at discorde with ID 465EBE24.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; bigarrays:01 bigarrays:01 matthieu:01 dubuget:01 ocaml:01 pointer:01 bigarray:01 ocaml:01 matthieu:01 dubuget:01 pointer:01 bigarray:01 interdite:98 altere:98 unauthorised:98 

This is a multi-part message in MIME format.

------_=_NextPart_001_01C7A37E.683DB779
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

I did a wrapping of the levmar library.

=20

The approach I chose is to allocate bigarrays from Caml, and pass them to t=
he main C function, along with the function f.

In the main function, I register f and all the bigarrays as global roots, a=
nd then call as many times the c sub function to compute the minimization.

=20

Feel free to ask for more precisions if needed

Hope this helps.

=20

Rabih

=20

________________________________

De : caml-list-bounces@yquem.inria.fr [mailto:caml-list-bounces@yquem.inria=
.fr] De la part de Matthieu Dubuget
Envoy=E9 : jeudi 31 mai 2007 13:43
=C0 : caml-list@inria.fr
Objet : Re: [Caml-list] nonlinear fit function binding

=20

Well. It seems my former message was unclear?

Here is a more precise question: should/could C allocated bigarrays
 be freed?

Context:

OCaml calls one C function M, at about 50 Hz.                              =
   =20
In M,  a C function (let's call it A) is locally defined.
One pointer to A is given to another function, that
calls A more than once.

Function A wraps a C array it receives as a parameter
into a bigarray, and give it to OCaml through one callback.=20

The whole process is repeated, at about 50 Hz.

I do not know if the bigarrays allocated by M are garbage
collected in any way, and if they are not, how I could free
them in order to avoid any memory leak?=20

Thanks in advance
Salutations

Matthieu

Ce message et toutes les pieces jointes (ci-apres le "message") sont confid=
entiels et etablis a l'intention exclusive de ses destinataires.=20
Toute utilisation ou diffusion non autorisee est interdite.=20
Tout message electronique est susceptible d'alteration.=20
Societe Generale Asset Management et ses filiales declinent toute responsab=
ilite au titre de ce message s'il a ete altere, deforme ou falsifie.=20
 =20
Decouvrez l'offre et les services de Societe Generale Asset Management sur =
le site www.sgam.fr=20
 =20
                                ********=20
 =20
This message and any attachments (the "message") are confidential and inten=
ded solely for the addressees.=20
Any unauthorised use or dissemination is prohibited.=20
E-mails are susceptible to alteration.=20
Neither Societe Generale Asset Management nor any of its subsidiaries or af=
filiates shall be liable for the message if altered, changed or falsified.=20
=20
Find out more about Societe Generale Asset Management's proposal on www.sga=
m=2Ecom

------_=_NextPart_001_01C7A37E.683DB779
Content-Type: text/html; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<html xmlns:v=3D"urn:schemas-microsoft-com:vml" xmlns:o=3D"urn:schemas-micr=
osoft-com:office:office" xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
xmlns=3D"http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=3DContent-Type content=3D"text/html; charset=3Diso-8859-1">
<meta name=3DGenerator content=3D"Microsoft Word 11 (filtered medium)">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"\@SimSun";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:12.0pt;
	font-family:"Times New Roman";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:#606420;
	text-decoration:underline;}
span.EmailStyle17
	{mso-style-type:personal-reply;
	font-family:Arial;
	color:navy;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;}
div.Section1
	{page:Section1;}
-->
</style>

</head>

<body lang=3DFR link=3Dblue vlink=3D"#606420">

<div class=3DSection1>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>I did a wrapping of=
 the
levmar library.<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>The approach I chos=
e is
to allocate bigarrays from Caml, and pass them to the main C function, along
with the function f.<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>In the main functio=
n, I register
f and all the bigarrays as global roots, and then call as many times the c =
sub
function to compute the minimization.<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>Feel free to ask fo=
r more
precisions if needed<o:p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>Hope this helps.<o:=
p></o:p></span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'>Rabih<o:p></o:p></s=
pan></font></p>

<p class=3DMsoNormal><font size=3D2 color=3Dnavy face=3DArial><span lang=3D=
EN-GB
style=3D'font-size:10.0pt;font-family:Arial;color:navy'><o:p>&nbsp;</o:p></=
span></font></p>

<div>

<div class=3DMsoNormal align=3Dcenter style=3D'text-align:center'><font siz=
e=3D3
face=3D"Times New Roman"><span style=3D'font-size:12.0pt'>

<hr size=3D2 width=3D"100%" align=3Dcenter tabindex=3D-1>

</span></font></div>

<p class=3DMsoNormal><b><font size=3D2 face=3DTahoma><span style=3D'font-si=
ze:10.0pt;
font-family:Tahoma;font-weight:bold'>De&nbsp;:</span></font></b><font size=
=3D2
face=3DTahoma><span style=3D'font-size:10.0pt;font-family:Tahoma'>
caml-list-bounces@yquem.inria.fr [mailto:caml-list-bounces@yquem.inria.fr] =
<b><span
style=3D'font-weight:bold'>De la part de</span></b> Matthieu Dubuget<br>
<b><span style=3D'font-weight:bold'>Envoy=E9&nbsp;:</span></b> jeudi 31 mai=
 2007
13:43<br>
<b><span style=3D'font-weight:bold'>=C0&nbsp;:</span></b> caml-list@inria.f=
r<br>
<b><span style=3D'font-weight:bold'>Objet&nbsp;:</span></b> Re: [Caml-list]
nonlinear fit function binding</span></font><o:p></o:p></p>

</div>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span style=3D=
'font-size:
12.0pt'><o:p>&nbsp;</o:p></span></font></p>

<p class=3DMsoNormal><font size=3D3 face=3D"Times New Roman"><span style=3D=
'font-size:
12.0pt'>Well. It seems my former message was unclear?<br>
<br>
Here is a more precise question: should/could C allocated bigarrays<br>
&nbsp;be freed?<br>
<br>
Context:<br>
<br>
OCaml calls one C function M, at about 50
Hz.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
<br>
In M,&nbsp; a C function (let's call it A) is locally defined.<br>
One pointer to A is given to another function, that<br>
calls A more than once.<br>
<br>
Function A wraps a C array it receives as a parameter<br>
into a bigarray, and give it to OCaml through one callback. <br>
<br>
The whole process is repeated, at about 50 Hz.<br>
<br>
I do not know if the bigarrays allocated by M are garbage<br>
collected in any way, and if they are not, how I could free<br>
them in order to avoid any memory leak? <br>
<br>
Thanks in advance<br>
Salutations<br>
<br>
Matthieu<o:p></o:p></span></font></p>

</div>

<pre>Ce message et toutes les pieces jointes (ci-apres le "message") sont c=
onfidentiels et etablis a l'intention exclusive de ses destinataires.=20
Toute utilisation ou diffusion non autorisee est interdite.=20
Tout message electronique est susceptible d'alteration.=20
Societe Generale Asset Management et ses filiales declinent toute responsab=
ilite au titre de ce message s'il a ete altere, deforme ou falsifie.=20
 =20
Decouvrez l'offre et les services de Societe Generale Asset Management sur =
le site www.sgam.fr=20
 =20
                                ********=20
 =20
This message and any attachments (the "message") are confidential and inten=
ded solely for the addressees.=20
Any unauthorised use or dissemination is prohibited.=20
E-mails are susceptible to alteration.=20
Neither Societe Generale Asset Management nor any of its subsidiaries or af=
filiates shall be liable for the message if altered, changed or falsified.=20
=20
Find out more about Societe Generale Asset Management's proposal on www.sga=
m=2Ecom
</pre></body>

</html>

------_=_NextPart_001_01C7A37E.683DB779--

