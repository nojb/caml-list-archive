Return-Path: <malexandwu@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.4 required=5.0 tests=SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 4D2EEBC0A
	for <caml-list@yquem.inria.fr>; Sat, 19 May 2007 21:20:34 +0200 (CEST)
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.171])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4JJKXeZ012827
	for <caml-list@inria.fr>; Sat, 19 May 2007 21:20:34 +0200
Received: by ug-out-1314.google.com with SMTP id k3so601420ugf
        for <caml-list@inria.fr>; Sat, 19 May 2007 12:20:33 -0700 (PDT)
DKIM-Signature: a=rsa-sha1; c=relaxed/relaxed;
        d=gmail.com; s=beta;
        h=domainkey-signature:received:received:message-id:date:from:user-agent:mime-version:to:subject:content-type:content-transfer-encoding:sender;
        b=CjZypvIbQTlqzTI1pHs6vZinx3egR3De3UmaaDb09VgTDxgVDO1XLr3mwGQA442TkbWCs+lcDAq4wl3rEoQH+EO0clYIHhFko0d6zAeRDRfTBb4ZbYhZFPDasJEpO2Hs5+saSPjtZtLqNYMcnFEJSmJhwYvd4nz2o3P73qHBvyE=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:user-agent:mime-version:to:subject:content-type:content-transfer-encoding:sender;
        b=WWumtd5q0dNWSWq0tAMBuLkdqTLV+lNsLp4H/NF4Ca0oeFs1XC+ikmIHHo2M3zRqyarKs6ocXD7OCD20QiLtvP5mL43l0TMCYd4XEEdoMi5GvfOPh8+lS68z+xwrQtfiCnI9B3EcvOAFMTnQkd2kXRRfEUseSmE4OcUESGrGmRo=
Received: by 10.66.232.9 with SMTP id e9mr2048730ugh.1179602432845;
        Sat, 19 May 2007 12:20:32 -0700 (PDT)
Received: from ?137.208.224.46? ( [137.208.224.46])
        by mx.google.com with ESMTP id o24sm4545282ugd.2007.05.19.12.20.31;
        Sat, 19 May 2007 12:20:31 -0700 (PDT)
Message-ID: <464F4DEB.7070908@wu-wien.ac.at>
Date: Sat, 19 May 2007 21:20:11 +0200
From: Michael Alexander <malexand@wu-wien.ac.at>
User-Agent: Thunderbird 2.0.0.0 (Windows/20070326)
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Call for Book Chapters: Process Algebra/Algebraic Languages and Parallel
 Processing
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Sender: Michael Alexander <malexandwu@gmail.com>
X-j-chkmail-Score: MSGID : 464F4E01.002 on concorde : j-chkmail score : XX : 5/20 0 0.000 -> 2
X-Miltered: at concorde with ID 464F4E01.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; algebra:01 algebra:01 compiler:01 parallelism:01 expressivity:01 fine-grained:01 model:01 extensively:01 model:01 semantics:01 notations:01 semantics:01 gardner:98 advent:98 treatments:98 

Apologies if you received multiple copies of this message


CALL FOR BOOK CHAPTERS


BOOK TITLE:
Process Algebra for Parallel and Distributed Processing:
Algebraic Languages in Specification-Based Software Development

EDITORS:
Michael Alexander, WU Wien
Bill Gardner, University of Guelph

The book will be published in the Computational Science Series by
Chapman and Hall/CRC Press in 2008


INTRODUCTION:

Programming today's multi-core processor architectures, clusters, and
grids is hard. Compiler research -- despite years of effort -- has still
not produced implicit instruction parallelism detection that goes much
beyond that of basic loop-parallelism. In addition, parallel programming
in the past two decades has seen only measured improvements in parallel
algorithms, languages with parallel expressivity, frameworks, and
distributed validation support. As compilers have failed to deliver on
their original promises, the objective of easing fine-grained parallel
application programmability remains.

As a consequence, new and additional paradigms are being looked at to
solve what amounts to an emerging "parallel software development
crisis". The approach that looks most promising is that of
specification-based software development. It has its origins 3 decades
ago, and it has been in a holding state for many years, only to
re-emerge to a wider audience with the advent of the Object Management
Group's Model Driven Architecture (MDA). Yet, specification-based
software development can only deliver correct, parallel and distributed
programs if the specification is precise, sufficiently expressive, and
complete. Here, algebraic languages and process algebras are the
paradigm that could catalyze solutions to many problems hampering
efficient multi-core processor, cluster, and grid programmability
problems. They are moving into a wide realm, as evidenced by the recent
release of an interpreter for the algebraic Sun Fortress Language.

The book is targeted to bring together the state-of-the-art in research
on the application of algebraic languages and process algebras to
parallel and distributed processing. It will be written to the problem
statement of programming today's multi-core processor architectures,
clusters, and grids.


RECOMMENDED TOPICS INCLUDE BUT ARE NOT LIMITED TO THE FOLLOWING:

The book aims to extensively treat algebraic languages/process algebras
in parallel processing, embodying the state-of-the-art in many of the
following non-inclusive list of subtopics, emphasizing an algebraic
approach in each.


Parallelism-oriented algebraic languages
Process calculi as catalysts to solving the concurrent programming challenge
Challenges in parallel programming
Formal models in distributed and parallel processing
Model checking, verification techniques
Program transformation
Axiomatizations
Concurrent languages
Formal semantics
Formal object-oriented languages
Algebras in the theory of parallel processing and distributed computing
(Object oriented) distributed systems algebras
Algebras and library-based approaches
Frameworks supporting algebraic implementations
MPI and process algebras
Algebraic treatments of parallel and distributed databases (relational
algebras/calculi)
Concurrent composition
Program generation
Specification methods, notations and languages (Z, VDM-SL, B, etc.)
Model and algebra transformation
Operational semantics of distributed/parallel algebraic languages
Parallel and distributed system specification
Process algebra compilers
Timed algebras
Actor models
CCS/CSP/ACP/Pi-Calculus/etc. in parallel-and distributed processing
Equational Reasoning
Software reliability/safety-critical systems
Proofs
Compositional/noncompositional methods
Formal software development
Integrated development environments for formal software
Tools
Case studies



The editors invite the submission of abstracts (300-600 words) for
proposed chapters, not under consideration elsewhere. Format and
preparation instructions for full chapter submissions will be
supplied to authors of accepted abstracts. Submitted chapters will
undergo peer review.


IMPORTANT DATES:

Abstracts deadline, May 30, 2007
Notify accepted abstracts, June 18, 2007
Chapters deadline, Sep. 3, 2007
Notify accepted chapters, Dec. 17, 2007
Final manuscripts with index word lists, Feb. 18, 2008


HOW TO SUBMIT:

Please post an abstract of your planned submission via EDAS at
http://edas DOT info/newPaper.php?c=5487
There, create an EDAS account and paste the abstract text into
the paper registration form.

The book's website can be found at:
http://carmel.cis.uoguelph.ca/paBook


Editor Contacts

Dr. Michael Alexander
Wirtschaftsuniversitaet Wien
Department of Information Systems and Process Management
Augasse 2-6
A-1090 Vienna, Austria
Email: malexand@wu-wien.ac.at
Telephone: +43.1.31336.4467

Dr. William Gardner
University of Guelph
Department of Computing and Information Science
50 Stone Rd E
Guelph, ON, N1G 2W1, Canada
Email: wgardner@cis.uoguelph.ca
Telephone: +1.519.824.4120 x52696







