Return-Path: <shawjef3@msu.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 44BECBC69
	for <caml-list@yquem.inria.fr>; Sat, 12 May 2007 16:37:50 +0200 (CEST)
Received: from sys15.mail.msu.edu (sys15.mail.msu.edu [35.9.75.115])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4CEbmIX012593
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Sat, 12 May 2007 16:37:49 +0200
Received: from shawjef3 by sys15.mail.msu.edu with local (Exim 4.63 #1)
	id 1HmsjE-0007z5-8P
	for caml-list@inria.fr; Sat, 12 May 2007 10:37:48 -0400
From: "Jeffrey Loren Shaw" <shawjef3@msu.edu>
To: caml-list@inria.fr
Subject: Re: [Caml-list] labltk for tk 8.4 BETA release
Date: Sat, 12 May 2007 10:37:47 -0400
Mime-Version: 1.0
Content-Type: text/plain; format=flowed; charset="utf-8"
Content-Transfer-Encoding: 7bit
Message-Id: <E1HmsjE-0007z5-8P@sys15.mail.msu.edu>
X-Virus: None found by Clam AV
X-Miltered: at discorde with ID 4645D13C.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; labltk:01 activestate:01 labltk:01 activestate:01 yup:01 ocaml:01 ocaml:01 extensively:01 ocamldoc:01 avoided:01 textvariable:01 type-safe:01 parser:01 caml-list:01 functions:01 


* ease of installation 

http://downloads.activestate.com/ActiveTcl/Windows/8.3.5/ 

or for the beta labltk... 

http://downloads.activestate.com/ActiveTcl/Windows/8.4.14/ 

Yup that link should be updated. I don't think it should be bundled with 
ocaml, however. The end-user might already have it installed, or might not 
need it. But this is a decision for the ocaml devs. 

* Documentation 

You're right, it's not very good. I used the ocamlbrowser extensively to 
learn how to use labltk. It took me a lot of experimenting, and I'm still 
terrible at getting widgets laid out the way I want. 

I'm not sure how to do the documentation in an automated way without 
changing the grammar for widgets.src to allow ocamldoc comments. That's 
beyond my abilities, but I suppose it's a worthy project for someone. On the 
other hand, widgets.src is already very cluttered. 

* Other libraries 

I don't know anything about these, but again these are questions for the 
ocaml devs. 

Anyway, my focus right now is getting this beta version of labltk working 
correctly... there's a lot of functions to test. 

Now here's an idea... 

Instead of documenting labltk, which is difficult for the beginner ocaml 
programmer anyway, make a wrapper to make it more ocaml-y. I'm not sure if 
this would be easy or possible, but coercing labltk into one style of 
programming (preferably functional) could go a long way towards making it 
easier to learn for the beginner. Also the wrapper would potentially be 
easier to document. As I recall, the most difficult aspects of labltk are 
those that are imperative, eg: 

event functions are unit -> unit, (maybe this can't be avoided)
pack is difficult to deal with,
the need to use optionmenu and Textvariable.handle together is not obvious 

Another huge but useful project would be a type-safe parser for the outputs 
given by the Widget.configure_get functions. 

Now back to testing.

