Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 5AF31BC69
	for <caml-list@yquem.inria.fr>; Thu, 31 May 2007 12:36:17 +0200 (CEST)
Received: from pih-relay06.plus.net (pih-relay06.plus.net [212.159.14.133])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4VAaG6w012444
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Thu, 31 May 2007 12:36:17 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay06.plus.net with esmtp (Exim) id 1Hti0t-0006JO-UK
	for caml-list@yquem.inria.fr; Thu, 31 May 2007 11:36:16 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Comparison of OCaml and MLton for numerics
Date: Thu, 31 May 2007 11:30:47 +0100
User-Agent: KMail/1.9.7
References: <5195a210705302250u6a9e5adey4ed857480f9e5cd8@mail.gmail.com> <200705311008.16662.jon@ffconsultancy.com> <6f9f8f4a0705310325n2064c09cp5bd9fead5a046057@mail.gmail.com>
In-Reply-To: <6f9f8f4a0705310325n2064c09cp5bd9fead5a046057@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200705311130.48179.jon@ffconsultancy.com>
X-Miltered: at discorde with ID 465EA520.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 arrays:01 arrays:01 vectors:01 bigarray:01 ffi:01 ocaml:01 frog:98 wrote:01 caml-list:01 languages:03 float:03 float:03 module:03 overhead:04 

On Thursday 31 May 2007 11:25:40 Loup Vaillant wrote:
> Talking about lots of float, I suppose you meant arrays.

Not necessarily big arrays. Look at the ray tracer, for example:

  http://www.ffconsultancy.com/languages/ray_tracer/

Lots of float^3 vectors, float * float^3 spheres and so on.

> In that case, 
> can't you use the bigarray module? Or does the overhead of the FFI
> cancel out the benefit of the improved cache coherency?

I couldn't get big arrays to give better performance here.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
OCaml for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists/?e

