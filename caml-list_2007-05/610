Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 5D0DABC69
	for <caml-list@yquem.inria.fr>; Thu, 31 May 2007 12:32:58 +0200 (CEST)
Received: from ptb-relay03.plus.net (ptb-relay03.plus.net [212.159.14.214])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4VAWvWp011469
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Thu, 31 May 2007 12:32:58 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay03.plus.net with esmtp (Exim) id 1Hthxg-00005p-Pu
	for caml-list@yquem.inria.fr; Thu, 31 May 2007 11:32:57 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Comparison of OCaml and MLton for numerics
Date: Thu, 31 May 2007 11:27:28 +0100
User-Agent: KMail/1.9.7
References: <5195a210705302250u6a9e5adey4ed857480f9e5cd8@mail.gmail.com> <200705311008.16662.jon@ffconsultancy.com> <5195a210705310222p6aa8482fr70e7bf2b2b631b72@mail.gmail.com>
In-Reply-To: <5195a210705310222p6aa8482fr70e7bf2b2b631b72@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200705311127.28639.jon@ffconsultancy.com>
X-Miltered: at discorde with ID 465EA459.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 inlining:01 frog:98 compilers:01 wrote:01 caml-list:01 zhu:04 overhead:04 comparison:04 performs:06 prediction:06 although:09 specializing:89 however:13 

On Thursday 31 May 2007 10:22:34 Yuanchen Zhu wrote:
> Yes, I am aware of the inefficiency here. Although because of branch
> prediction on modern CPUs, the actual running time overhead would not
> be that big.

That is not true.

> My point, however, is that MLton and OCaml are being fed the same
> code, and if OCaml performs specializing and proper inlining, it will  
> get almost twice its current performance.

The OCaml compilers are designed to handle good code.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
OCaml for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists/?e

