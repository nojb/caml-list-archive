Return-Path: <rich@annexia.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 34165BC69
	for <caml-list@yquem.inria.fr>; Wed, 30 May 2007 14:13:50 +0200 (CEST)
Received: from furbychan.cocan.org (furbychan.cocan.org [80.68.91.176])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4UCDnDF012089
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@inria.fr>; Wed, 30 May 2007 14:13:50 +0200
Received: from rich by furbychan.cocan.org with local (Exim 3.35 #1 (Debian))
	id 1HtN3g-00088Z-00
	for <caml-list@inria.fr>; Wed, 30 May 2007 13:13:44 +0100
Date: Wed, 30 May 2007 13:13:44 +0100
To: caml-list@inria.fr
Subject: Re: [Caml-list] Faking concurrency using Unix forks and pipes
Message-ID: <20070530121343.GB24085@furbychan.cocan.org>
References: <200705300442.59906.jon@ffconsultancy.com> <6f9f8f4a0705300130h3a536fb4hc6792afd61ee943b@mail.gmail.com> <6f9f8f4a0705300132l1bf8775dwedfceede50e34c54@mail.gmail.com> <200705300950.36067.jon@ffconsultancy.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200705300950.36067.jon@ffconsultancy.com>
User-Agent: Mutt/1.5.9i
From: Richard Jones <rich@annexia.org>
X-Miltered: at discorde with ID 465D6A7D.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; forks:01 0100,:01 ocaml:01 threads:01 unix:01 wrote:01 slower:01 slower:01 caml-list:01 tracing:01 concurrency:02 unit:03 concurrent:03 concurrent:03 static:03 

On Wed, May 30, 2007 at 09:50:35AM +0100, Jon Harrop wrote:
> F# is ~30% slower than OCaml but can be made almost twice as fast on my dual 
> core machine by tracing concurrently. However, Java is also a concurrent 
> static language and it is much slower. Maybe this reflects more effort having 
> gone into the .NET GC.

Jon,

We've had this discussion before.  Summary: yes, SMP is suddenly
popular.  If we keep doubling the number of cores available every 18
months though, then soon we'll have dozens-hundreds of cores, and
there's no chance at all that these will have uniform memory access.
Once you have NUMA, threads and concurrent GC don't help.

Intel 80 core processor:
http://www.reghardware.co.uk/2006/09/26/intel_teraflop_processor/ ,
and it's very very NUMA - each core has 20 MB of RAM strapped to it.
>From the article: "[The chip] also features a network processing unit
on each core to control core-to-core communication. [...] Once Intel
boffins have worked out the best way to interconnect cores, memory [...]"

Rich.


-- 
Richard Jones
Red Hat

