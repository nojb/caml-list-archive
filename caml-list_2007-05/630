Return-Path: <Alain.Frisch@inria.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id EA750BC69
	for <caml-list@yquem.inria.fr>; Thu, 31 May 2007 23:30:53 +0200 (CEST)
Received: from smtp3-g19.free.fr (smtp3-g19.free.fr [212.27.42.29])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4VLUrT2012678
	for <caml-list@yquem.inria.fr>; Thu, 31 May 2007 23:30:53 +0200
Received: from [192.168.0.1] (rke75-3-82-229-183-156.fbx.proxad.net [82.229.183.156])
	by smtp3-g19.free.fr (Postfix) with ESMTP id 2380C5A26B;
	Thu, 31 May 2007 23:30:53 +0200 (CEST)
Message-ID: <465F3E8C.10404@inria.fr>
Date: Thu, 31 May 2007 23:30:52 +0200
From: Alain Frisch <Alain.Frisch@inria.fr>
User-Agent: Thunderbird 2.0.0.0 (X11/20070326)
MIME-Version: 1.0
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Comparison of OCaml and MLton for numerics
References: <5195a210705302250u6a9e5adey4ed857480f9e5cd8@mail.gmail.com>	<200705311008.16662.jon@ffconsultancy.com>	<5195a210705310222p6aa8482fr70e7bf2b2b631b72@mail.gmail.com> <200705311127.28639.jon@ffconsultancy.com>
In-Reply-To: <200705311127.28639.jon@ffconsultancy.com>
X-Enigmail-Version: 0.95.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 465F3E8D.003 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; frisch:01 frisch:01 ocaml:01 ocaml:01 inlining:01 inlining:01 compilers:01 wrote:01 caml-list:01 alain:01 alain:01 comparison:04 performs:06 inria:06 elaborate:06 

Jon Harrop wrote:
>> My point, however, is that MLton and OCaml are being fed the same
>> code, and if OCaml performs specializing and proper inlining, it will  
>> get almost twice its current performance.
> 
> The OCaml compilers are designed to handle good code.

Could you elaborate? Do you mean that a code than would benefit from
inlining is not a good code?

 Alain

