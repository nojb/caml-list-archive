Return-Path: <granicz.adam@vnet.hu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.5 required=5.0 tests=SPF_SOFTFAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id DD288BC69
	for <caml-list@yquem.inria.fr>; Wed, 30 May 2007 18:03:23 +0200 (CEST)
Received: from b.relay.invitel.net (b.relay.invitel.net [62.77.203.4])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4UG3Nep030842
	for <caml-list@inria.fr>; Wed, 30 May 2007 18:03:23 +0200
Received: from mail.invitel.hu (mail.vnet.hu [213.163.59.4])
	by b.relay.invitel.net (Invitel Core SMTP Transmitter) with ESMTP id 85942387876
	for <caml-list@inria.fr>; Wed, 30 May 2007 18:03:21 +0200 (CEST)
Received: from epbl095.budapest.epam.com ([195.56.119.209])
 by mail.invitel.hu (Invitel Messaging Server)
 with ESMTPA id <0JIV003IP39K3M40@invitel.hu> for caml-list@inria.fr; Wed,
 30 May 2007 18:03:21 +0200 (CEST)
Date: Wed, 30 May 2007 18:03:01 +0200
From: Granicz Adam <granicz.adam@vnet.hu>
Subject: Re: [Caml-list] Faking concurrency using Unix forks and pipes
In-reply-to: <200705300442.59906.jon@ffconsultancy.com>
To: caml-list@inria.fr
Message-id: <op.ts5djblmeryqhs@epbl095.budapest.epam.com>
MIME-version: 1.0
Content-type: text/plain; format=flowed; delsp=yes; charset=utf-8
Content-transfer-encoding: 7BIT
References: <200705300442.59906.jon@ffconsultancy.com>
User-Agent: Opera Mail/9.20 (Win32)
X-Miltered: at discorde with ID 465DA04B.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; forks:01 0200,:01 ocaml:01 forks:01 marshalling:01 ocaml:01 cheers:01 blog:98 unix:01 unix:01 wrote:01 caml-list:01 concurrency:02 concurrency:02 implemented:02 

On Wed, 30 May 2007 05:42:59 +0200, Jon Harrop <jon@ffconsultancy.com>  
wrote:

>
> Has anyone implemented a parallel map function in OCaml using Unix forks,
> pipes and maybe marshalling?
>
> This seems like an easy way to get concurrency in OCaml...
>

I am swamped with emails so this may have come up already in this thread,  
but Tomas has a nice parallel list implementation at

http://tomasp.net/blog/fsparallelops.aspx

Cheers,
Adam.

