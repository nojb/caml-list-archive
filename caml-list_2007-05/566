Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 77C71BC69
	for <caml-list@yquem.inria.fr>; Wed, 30 May 2007 10:07:45 +0200 (CEST)
Received: from pih-relay05.plus.net (pih-relay05.plus.net [212.159.14.132])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4U87iFe027728
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Wed, 30 May 2007 10:07:45 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay05.plus.net with esmtp (Exim) id 1HtJDY-0008PL-2d
	for caml-list@yquem.inria.fr; Wed, 30 May 2007 09:07:40 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Faking concurrency using Unix forks and pipes
Date: Wed, 30 May 2007 09:02:06 +0100
User-Agent: KMail/1.9.7
References: <200705300442.59906.jon@ffconsultancy.com> <20070530070229.GB334@first.in-berlin.de> <6f9f8f4a0705300034g37006497t55f30e8ca3f3f191@mail.gmail.com>
In-Reply-To: <6f9f8f4a0705300034g37006497t55f30e8ca3f3f191@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200705300902.06760.jon@ffconsultancy.com>
X-Miltered: at discorde with ID 465D30D0.003 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; forks:01 ocaml:01 ocaml:01 frog:98 unix:01 wrote:01 experimental:01 caml-list:01 concurrency:02 concurrency:02 seems:03 concurrent:03 concurrent:03 pipes:04 i'm:09 

On Wednesday 30 May 2007 08:34:48 Loup Vaillant wrote:
> Jon, were you talking about reimplementing List.map and the like, so
> users have concurrency for free?

Exactly, yes. Just having a concurrent Array.map would help enormously.

> A simple solution would be to use a third party tool, like OcamlP3l.

I'm having a look at it now. I had thought that it was an experimental version 
of OCaml that with a concurrent GC but that seems to be completely wrong.

Will OCaml have a concurrent GC in the future?

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
OCaml for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists/?e

