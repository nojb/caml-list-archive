Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 3EA06BC69
	for <caml-list@yquem.inria.fr>; Fri, 11 May 2007 16:43:23 +0200 (CEST)
Received: from pih-relay06.plus.net (pih-relay06.plus.net [212.159.14.133])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4BEhMjO002502
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Fri, 11 May 2007 16:43:22 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay06.plus.net with esmtp (Exim) id 1HmWL0-0001it-7H
	for caml-list@yquem.inria.fr; Fri, 11 May 2007 15:43:20 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Custom operators in the revised syntax
Date: Fri, 11 May 2007 15:37:32 +0100
User-Agent: KMail/1.9.5
References: <cd67f63a0705101355n2954fd02v9a29cb0a76eb16ee@mail.gmail.com> <1884660607.20070511161455@moldavcable.com> <6f9f8f4a0705110715l48259b8cr11f22d333ed8d7f5@mail.gmail.com>
In-Reply-To: <6f9f8f4a0705110715l48259b8cr11f22d333ed8d7f5@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200705111537.32561.jon@ffconsultancy.com>
X-Miltered: at discorde with ID 4644810A.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; syntax:01 syntax:01 quaternions:01 vectors:01 matrices:01 overloading:01 overloading:01 ocaml:01 fsharp:01 smoke:98 frog:98 wrote:01 caml-list:01 symbolic:01 ints:01 

On Friday 11 May 2007 15:15, Loup Vaillant wrote:
> I tend to agree when one says custom operators are evil. However, when
> the default syntax uses operators, the custom ones are a net win : a
> wise programmer will use their semantic load carefully (big nums, for
> example)

Ints, nats, floats, complexes, quaternions, column and row vectors, matrices, 
tensors, inner and outer products, symbolic expressions... This is why I like 
operator overloading.

For example, Smoke has the multiplications: * (int), *. (float), *| (vector 
scaling), *|| (matrix-vector transform) and *||| (matrix-matrix multiply).

Operator overloading and template metaprogramming were the only things I 
missed moving from C++ to OCaml. :-)

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
The F#.NET Journal
http://www.ffconsultancy.com/products/fsharp_journal/?e

