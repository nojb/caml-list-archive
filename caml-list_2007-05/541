Return-Path: <pierre.chambart@laposte.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 7BE93BC69
	for <caml-list@yquem.inria.fr>; Tue, 29 May 2007 04:45:42 +0200 (CEST)
Received: from rouge.crans.org (rouge.crans.org [138.231.136.3])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4T2jfWr022273
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Tue, 29 May 2007 04:45:42 +0200
Received: from [138.231.142.203] (chicco.crans.org [138.231.142.203])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by rouge.crans.org (Postfix) with ESMTP id 8017E870C
	for <caml-list@inria.fr>; Tue, 29 May 2007 04:45:41 +0200 (CEST)
Message-ID: <465B93D5.2060207@laposte.net>
Date: Tue, 29 May 2007 04:45:41 +0200
From: pierre chambart <pierre.chambart@laposte.net>
User-Agent: Thunderbird 2.0.0.0 (X11/20070520)
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: [Caml-list] Sand-boxing
References: <200705290301.42600.jon@ffconsultancy.com>
In-Reply-To: <200705290301.42600.jon@ffconsultancy.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-j-chkmail-Score: MSGID : 465B93D6.000 on discorde : j-chkmail score : X : 0/20 1 0.000 -> 1
X-Miltered: at discorde with ID 465B93D6.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 dynlink:01 libref:01 dynlink:01 smoke:98 wrote:01 caml-list:01 modules:02 pierre:02 pierre:02 caml:02 graphics:02 programming:03 module:03 

Jon Harrop wrote :
> We're gearing up for the release of our hardware-accelerated vector graphics 
> engine, Smoke. As our foray into web programming, I'd like to create a new 
> kind of browser that allows content to be scripted in OCaml.
>
> What is the best way to execute downloaded OCaml code safely
You can use the dynlink library.
When you load module with that, you can specify the modules that can't
be accessed from the loaded code.

http://caml.inria.fr/pub/docs/manual-ocaml/libref/Dynlink.html#6_Accesscontrol

