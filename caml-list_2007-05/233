Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id B3525BC0A
	for <caml-list@yquem.inria.fr>; Sun, 13 May 2007 09:36:24 +0200 (CEST)
Received: from ipmail02.adl2.internode.on.net (ipmail02.adl2.internode.on.net [203.16.214.141])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4D7aM1U022303
	for <caml-list@inria.fr>; Sun, 13 May 2007 09:36:23 +0200
X-IronPort-AV: E=Sophos;i="4.14,527,1170595800"; 
   d="scan'208";a="122763516"
Received: from ppp24-138.lns4.syd7.internode.on.net (HELO [192.168.1.201]) ([121.44.24.138])
  by ipmail02.adl2.internode.on.net with ESMTP; 13 May 2007 17:06:20 +0930
Subject: Re: [Caml-list] Custom operators in the revised syntax
From: skaller <skaller@users.sourceforge.net>
To: brogoff <brogoff@speakeasy.net>
Cc: Nicolas Pouillard <nicolas.pouillard@gmail.com>,
	caml-list@inria.fr
In-Reply-To: <Pine.LNX.4.58.0705122251180.11360@shell2.speakeasy.net>
References: <cd67f63a0705101355n2954fd02v9a29cb0a76eb16ee@mail.gmail.com>
	 <1884660607.20070511161455@moldavcable.com>
	 <cd67f63a0705110736q6412240eh5450c43c01b0786a@mail.gmail.com>
	 <Pine.LNX.4.58.0705110740220.11360@shell2.speakeasy.net>
	 <cd67f63a0705110751n6d72e09cq22cd8e4a8960571@mail.gmail.com>
	 <Pine.LNX.4.58.0705110938480.16878@shell4.speakeasy.net>
	 <cd67f63a0705121554v2a8311c3lee2643ec9b7b8777@mail.gmail.com>
	 <Pine.LNX.4.58.0705122251180.11360@shell2.speakeasy.net>
Content-Type: text/plain
Date: Sun, 13 May 2007 17:36:16 +1000
Message-Id: <1179041776.24955.124.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4646BFF6.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; syntax:01 ocaml:01 camlp:01 haskell:01 nesting:01 syntax:01 2007,:98 harmless:98 sourceforge:01 arbitrary:01 wrote:01 wrote:01 caml-list:01 formulation:01 formulation:01 

On Sat, 2007-05-12 at 22:52 -0700, brogoff wrote:
> On Sun, 13 May 2007, Nicolas Pouillard wrote:
> > I've a tiny patch to do that:
> >
> > 2 ``List.mem`` [1;2;3]
> >
> > I think that extension harmless, any thoughts?
> 
> That looks like a good start. This patch is in the new Revised?

There was a discussion on this previously, and it can be
done now with ordinary Ocaml, no camlp4 needed, and it
can be done much better than the weak Haskell formulation.

The idea is something like:

	a <+ b +> c

translates to

	b a c

however this formulation not only allows 'b' to be an arbitrary
expression, but also supports nesting. The operators are not
the ones I listed though .. perhaps someone can search the archives
of this mailing list to find the previous discussion.

Exactly how the Revised syntax would support this I don't know,
however I really think Revised should be thrown out ;(

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

