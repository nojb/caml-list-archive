Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 0FBA7BC69
	for <caml-list@yquem.inria.fr>; Wed, 30 May 2007 03:02:26 +0200 (CEST)
Received: from ipmail03.adl2.internode.on.net (ipmail03.adl2.internode.on.net [203.16.214.135])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4U12Mxa029640
	for <caml-list@yquem.inria.fr>; Wed, 30 May 2007 03:02:25 +0200
X-IronPort-AV: E=Sophos;i="4.14,590,1170595800"; 
   d="scan'208";a="96415625"
Received: from ppp9-14.lns1.syd7.internode.on.net (HELO [192.168.1.201]) ([59.167.9.14])
  by ipmail03.adl2.internode.on.net with ESMTP; 30 May 2007 10:32:15 +0930
Subject: Re: [Caml-list] GtkSourceView2.0 syntax highlighting
From: skaller <skaller@users.sourceforge.net>
To: Edgar Friendly <thelema314@gmail.com>
Cc: caml-list <caml-list@yquem.inria.fr>
In-Reply-To: <465C7954.1060208@gmail.com>
References: <465C7954.1060208@gmail.com>
Content-Type: text/plain
Date: Wed, 30 May 2007 11:02:12 +1000
Message-Id: <1180486932.6252.26.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 465CCD1E.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; syntax:01 booleans:01 downto:01 val:01 functor:01 mutable:01 struct:01 sig:01 binders:01 val:01 functor:01 2.0:98 edgar:98 sourceforge:01 wrote:01 

On Tue, 2007-05-29 at 14:04 -0500, Edgar Friendly wrote:

> The reasonably large list of keywords has been broken into four
> sections.  (I encourage comments on this division.)
> 
> 1) booleans
> 	true	false
> 
> 2) flow control & common keywords
> 	and	assert	begin	do	done	downto	else
> 	end	for	fun	function	if	in
> 	let	match	rec	then	to	try	val
> 	when	while	with
> 
> 3) types, objects & modules
> 	as	class	constraint	exception	external
> 	functor	include	inherit	initializer	method	module
> 	mutable	new	object	of	open	private	struct
> 	sig	type	virtual
> 
> 4) function-like keywords
> 	asr	land	lazy	lor	lsl	lsr	lxor
> 	mod	or
> 


I would do this slightly differently. The 'most important'
keywords are used in binders which often denote something
part of an interface: These are (roughly):

type, let, module, class, and, in, rec, val, exception
external functor

and these should be in a heavy font. Flow control is an implementation
detail and should be lighter weight. inherit, include, and open are
"directives", perhaps a weak color (boring houskeeping ..)



-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

