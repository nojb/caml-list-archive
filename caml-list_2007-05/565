Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 4A8D1BC69
	for <caml-list@yquem.inria.fr>; Wed, 30 May 2007 09:37:04 +0200 (CEST)
Received: from pih-relay06.plus.net (pih-relay06.plus.net [212.159.14.133])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4U7b3Hp008245
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Wed, 30 May 2007 09:37:04 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay06.plus.net with esmtp (Exim) id 1HtIjt-0004xQ-4p
	for caml-list@yquem.inria.fr; Wed, 30 May 2007 08:37:03 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Faking concurrency using Unix forks and pipes
Date: Wed, 30 May 2007 08:31:25 +0100
User-Agent: KMail/1.9.7
References: <200705300442.59906.jon@ffconsultancy.com> <20070530070229.GB334@first.in-berlin.de>
In-Reply-To: <20070530070229.GB334@first.in-berlin.de>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200705300831.25376.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 465D299F.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; forks:01 bandel:01 camlp:01 ocaml:01 ocaml:01 frog:98 unix:01 wrote:01 oliver:01 caml-list:01 concurrency:02 concurrency:02 implemented:02 concurrent:03 ugly:03 

On Wednesday 30 May 2007 08:02:30 Oliver Bandel wrote:
> I have thought about such stuff, but ot implemented
> (because there was no real need for it).

I feel dirty when one of my cores is idling.

> Since I found OCamlP3l, I'm not shure if implementing
> such stuff would make sense, because using OCamlP3l
> might be the right way.
>
>   OCamlP3l: http://camlp3l.inria.fr/eng.htm

May I just ask Xavier et al. what the ETA is on ocamlp3l? Its just, I really 
want to take over the world and this is holding us up. ;-)

> P.S.: Why did you  write "Faking concurrency"?
>       If the processes are running on a multi-core/multi-processor
>       machine, using processes can achieve paralellism.

Well, yes, I mean it is the ugly sister of concurrent GC. Better than nothing 
though.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
OCaml for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists/?e

