Return-Path: <bhurt@janestcapital.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id E0B8FBC0A
	for <caml-list@yquem.inria.fr>; Wed, 23 May 2007 21:34:57 +0200 (CEST)
Received: from smtp.janestcapital.com (www.janestcapital.com [66.155.124.107])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l4NJYuNp004784
	for <caml-list@inria.fr>; Wed, 23 May 2007 21:34:57 +0200
Received: from [172.25.129.161] [38.96.172.125] by janestcapital.com with ESMTP
  (SMTPD-9.10) id A7690360; Wed, 23 May 2007 15:35:05 -0400
Message-ID: <4654975F.5060108@janestcapital.com>
Date: Wed, 23 May 2007 15:34:55 -0400
From: Brian Hurt <bhurt@janestcapital.com>
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.2) Gecko/20040804 Netscape/7.2 (ax)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: robert.fischer@SmokejumperIT.com
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Teaching bottomline, part 3: what should improve.
References: <1179871823.6966.78.camel@Blefuscu>	<200705230039.29659.jon@ffconsultancy.com>	<20070523185428.GA32681@furbychan.cocan.org> <4654959C.7040701@fischerventure.com>
In-Reply-To: <4654959C.7040701@fischerventure.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 46549760.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; threads:01 erlang:01 haskell:01 wrote:01 caml-list:01 concurrency:02 functional:02 functional:02 languages:03 locks:03 brian:04 brian:04 problem:05 teaching:07 teaching:07 

Robert C Fischer wrote:

> ...and locks and threads are not a viable long-term solution to the 
> problem of concurrency in general.  You're future-proofing enough by 
> teaching them functional languages: Erlang and Cilk are closer to the 
> needed future.
>
I think you mean "Haskell+STM" instead of Cilk.  Cilk isn't a 
particularly functional language (being effectively C plus a little bit).

Brian

