Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 28379BC69
	for <caml-list@yquem.inria.fr>; Tue,  8 May 2007 03:33:38 +0200 (CEST)
Received: from ptb-relay01.plus.net (ptb-relay01.plus.net [212.159.14.212])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l481Xbwv002958
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 8 May 2007 03:33:37 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay01.plus.net with esmtp (Exim) id 1HlEa9-0000Cu-7B
	for caml-list@yquem.inria.fr; Tue, 08 May 2007 02:33:37 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] F# lightweight syntax for Ocaml with camlp4 - possible?
Date: Tue, 8 May 2007 02:28:05 +0100
User-Agent: KMail/1.9.5
References: <90823c940705071526x87f78b4i74bc73b11ee9a890@mail.gmail.com> <FD6BAF3C-4F48-4713-9E8F-2DF5EAD97893@epfl.ch>
In-Reply-To: <FD6BAF3C-4F48-4713-9E8F-2DF5EAD97893@epfl.ch>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Message-Id: <200705080228.05597.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 463FD371.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; syntax:01 ocaml:01 camlp:01 bunzli:01 parens:01 readable:01 syntax:01 ocaml:01 fsharp:01 hardcore:98 frog:98 wrote:01 caml-list:01 width:97 confusing:02 

On Tuesday 08 May 2007 00:43, Daniel B=FCnzli wrote:
> In a language where you don't enclose function arguments in parens I
> think this is really a bad idea, it makes the code more confusing
> than readable, especially if you try to code with a line width of 80
> columns.

As a hardcore OCamler, I must say that I had thought the #light syntax in F=
#=20
to be morally repugnant. However, now that I've forced myself to actually u=
se=20
it, I'm finding it to be very useful indeed.

Perhaps the single most important reason why the #light syntax is useful st=
ems=20
from the way the F# Visual Studio add-in allows you to execute lines or=20
blocks of code in a running interactive session. I'd love to see something=
=20
similar for OCaml but, until then, I don't think the #light syntax would ha=
ve=20
quite the bite for OCaml that it does for F#.

=2D-=20
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
The F#.NET Journal
http://www.ffconsultancy.com/products/fsharp_journal/?e

