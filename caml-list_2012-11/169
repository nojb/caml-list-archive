Return-Path: <p.donadeo@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by sympa.inria.fr (Postfix) with ESMTPS id 230647EE20
	for <caml-list@sympa.inria.fr>; Mon, 19 Nov 2012 13:44:26 +0100 (CET)
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  p.donadeo@gmail.com) identity=pra; client-ip=209.85.214.182;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="p.donadeo@gmail.com";
  x-sender="p.donadeo@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail4-smtp-sop.national.inria.fr: domain of
  p.donadeo@gmail.com designates 209.85.214.182 as permitted
  sender) identity=mailfrom; client-ip=209.85.214.182;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="p.donadeo@gmail.com";
  x-sender="p.donadeo@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ob0-f182.google.com) identity=helo;
  client-ip=209.85.214.182;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="p.donadeo@gmail.com";
  x-sender="postmaster@mail-ob0-f182.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: At0BALkoqlDRVda2k2dsb2JhbABFhiCqBYk3AYlbCCMBAQEBCQkLCRQEI4IeAQEEASMdARsSDAMBCwYFCw0NHQICIgERAQUBChIGExKHaAEDCQYLoRqLZE+CeIQ/ChknAwpZiHUBBQyMKIN6gRMDlXyBHI1GFimEEg
X-IronPort-AV: E=Sophos;i="4.83,279,1352070000"; 
   d="scan'208";a="162990765"
Received: from mail-ob0-f182.google.com ([209.85.214.182])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 19 Nov 2012 13:44:24 +0100
Received: by mail-ob0-f182.google.com with SMTP id 16so8231895obc.27
        for <caml-list@inria.fr>; Mon, 19 Nov 2012 04:44:23 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=FF7hoeOa6wsq+UCMRL5G/gE8sa5WcNIBD/9pa3YFWnw=;
        b=a3lZRDFanEf8RDUTKYR0eyiwGi27dCWEEGtvUAceCrlQciBD74Y07UNDyeCKGa1fw0
         OOHRL/GcJmZfdNit/h/PzWxN1NbfVGHUDSwqkzqSVXUEYXAdnqgkZfJYgyIN1L2O1ato
         eMYZ9FfMNV3yisDb+M5IDiCScHLUgljf8+ylq9d8I4aDi7AVIiVCFIwhLVEtR6iNtob6
         gdvp+0QaDjTqWWndCa9XRyx++9jSgJJ2BzMS+mWUpya9BOBuHM9rJJcIpmq/zi1FpRcS
         B3L5WR5QAgJzm3v0e3Zemz4DZB0cUJwakhgGqMcUKz0vT/z2zOHUW8w0O9mXEjCghbDP
         x/CQ==
MIME-Version: 1.0
Received: by 10.182.172.74 with SMTP id ba10mr10323200obc.83.1353329063484;
 Mon, 19 Nov 2012 04:44:23 -0800 (PST)
Received: by 10.60.170.104 with HTTP; Mon, 19 Nov 2012 04:44:23 -0800 (PST)
Received: by 10.60.170.104 with HTTP; Mon, 19 Nov 2012 04:44:23 -0800 (PST)
In-Reply-To: <CAK=fH+jVxh_6fuTXB==TYOYovfb+sdFpYsjL8DWuTErRwnyKug@mail.gmail.com>
References: <50A9C3BB.2050900@riken.jp>
	<50A9CB66.1020207@ens-lyon.org>
	<50A9D378.4020403@riken.jp>
	<CAK=fH+jVxh_6fuTXB==TYOYovfb+sdFpYsjL8DWuTErRwnyKug@mail.gmail.com>
Date: Mon, 19 Nov 2012 13:44:23 +0100
Message-ID: <CAPzAKVBW9ZPS2gnkTCD9zPyf_Hf+-8p07m4bopJv8hJcibs4+g@mail.gmail.com>
From: Paolo Donadeo <p.donadeo@gmail.com>
To: OCaml mailing list <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=e89a8f839f6f17dcd404ced87ab0
Subject: Re: [Caml-list] module alias in a .mli file


--e89a8f839f6f17dcd404ced87ab0
Content-Type: text/plain; charset=UTF-8

Actually this is not true, Martin explained how. :-)


-- 
Paolo
Sent by Gmail from Android
Il giorno 19/nov/2012 11:35, "David House" <dhouse@janestreet.com> ha
scritto:

> Annoyingly though, there is no way to create a module alias in an mli.
>
> If, in an ml file, you have to refer often to
> Some_very_long_module_name, it can quite convenient to define an alias
> by doing "module Mod = Some_very_long_module_name" (or, locally, "let
> module Mod = Some_very_long_module_name in"). But there is no way of
> doing this in an mli: you have to use the long name every time.
>
> This is especially annoying if you have some big type that you want to
> expose in the mli. You really just want to copy-paste out of the ml
> file and stick it into the mli, but then you have to expand all the
> module aliases. (It's just a couple of goes with M-%, but still...)
>
> On Mon, Nov 19, 2012 at 6:36 AM, Francois Berenger <berenger@riken.jp>
> wrote:
> > On 11/19/2012 03:02 PM, Martin Jambon wrote:
> >>
> >> On Sun 18 Nov 2012 09:29:31 PM PST, Francois Berenger wrote:
> >>>
> >>> Hello,
> >>>
> >>> Here is my stupid question of the day:
> >>> can't I declare the following in a .mli file?
> >>>
> >>> module V3 = Vector3
> >>
> >>
> >> No, because "= Vector3" specifies an implementation.
> >> An mli file is a module interface, and module interfaces never contain
> >> implementations.
> >>
> >> However, you may want to do this, which does what it says:
> >>
> >>   module V3 : module type of Vector3
> >
> >
> > Thanks a lot! That's exactly what I needed. :)
> >
> >
> >
> >
> > --
> > Caml-list mailing list.  Subscription management and archives:
> > https://sympa.inria.fr/sympa/arc/caml-list
> > Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> > Bug reports: http://caml.inria.fr/bin/caml-bugs
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>

--e89a8f839f6f17dcd404ced87ab0
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<p>Actually this is not true, Martin explained how. :-)<br><br><br></p>
<p>-- <br>
Paolo<br>
Sent by Gmail from Android</p>
<div class=3D"gmail_quote">Il giorno 19/nov/2012 11:35, &quot;David House&q=
uot; &lt;<a href=3D"mailto:dhouse@janestreet.com">dhouse@janestreet.com</a>=
&gt; ha scritto:<br type=3D"attribution"><blockquote class=3D"gmail_quote" =
style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
Annoyingly though, there is no way to create a module alias in an mli.<br>
<br>
If, in an ml file, you have to refer often to<br>
Some_very_long_module_name, it can quite convenient to define an alias<br>
by doing &quot;module Mod =3D Some_very_long_module_name&quot; (or, locally=
, &quot;let<br>
module Mod =3D Some_very_long_module_name in&quot;). But there is no way of=
<br>
doing this in an mli: you have to use the long name every time.<br>
<br>
This is especially annoying if you have some big type that you want to<br>
expose in the mli. You really just want to copy-paste out of the ml<br>
file and stick it into the mli, but then you have to expand all the<br>
module aliases. (It&#39;s just a couple of goes with M-%, but still...)<br>
<br>
On Mon, Nov 19, 2012 at 6:36 AM, Francois Berenger &lt;<a href=3D"mailto:be=
renger@riken.jp">berenger@riken.jp</a>&gt; wrote:<br>
&gt; On 11/19/2012 03:02 PM, Martin Jambon wrote:<br>
&gt;&gt;<br>
&gt;&gt; On Sun 18 Nov 2012 09:29:31 PM PST, Francois Berenger wrote:<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; Hello,<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; Here is my stupid question of the day:<br>
&gt;&gt;&gt; can&#39;t I declare the following in a .mli file?<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; module V3 =3D Vector3<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; No, because &quot;=3D Vector3&quot; specifies an implementation.<b=
r>
&gt;&gt; An mli file is a module interface, and module interfaces never con=
tain<br>
&gt;&gt; implementations.<br>
&gt;&gt;<br>
&gt;&gt; However, you may want to do this, which does what it says:<br>
&gt;&gt;<br>
&gt;&gt; =C2=A0 module V3 : module type of Vector3<br>
&gt;<br>
&gt;<br>
&gt; Thanks a lot! That&#39;s exactly what I needed. :)<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; --<br>
&gt; Caml-list mailing list. =C2=A0Subscription management and archives:<br>
&gt; <a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" target=3D"_blan=
k">https://sympa.inria.fr/sympa/arc/caml-list</a><br>
&gt; Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_be=
ginners" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a=
><br>
&gt; Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"=
_blank">http://caml.inria.fr/bin/caml-bugs</a><br>
<br>
--<br>
Caml-list mailing list. =C2=A0Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" target=3D"_blank">ht=
tps://sympa.inria.fr/sympa/arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
</blockquote></div>

--e89a8f839f6f17dcd404ced87ab0--
