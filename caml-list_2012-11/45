Return-Path: <pierre.chambart@laposte.net>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by sympa.inria.fr (Postfix) with ESMTPS id 8C8527EE73
	for <caml-list@sympa.inria.fr>; Mon,  5 Nov 2012 23:25:06 +0100 (CET)
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  pierre.chambart@laposte.net) identity=pra;
  client-ip=193.253.67.227;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="pierre.chambart@laposte.net";
  x-sender="pierre.chambart@laposte.net";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail4-smtp-sop.national.inria.fr: domain of
  pierre.chambart@laposte.net designates 193.253.67.227 as
  permitted sender) identity=mailfrom;
  client-ip=193.253.67.227;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="pierre.chambart@laposte.net";
  x-sender="pierre.chambart@laposte.net";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@smtpout.laposte.net) identity=helo;
  client-ip=193.253.67.227;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="pierre.chambart@laposte.net";
  x-sender="postmaster@smtpout.laposte.net";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AiQBAK07mFDB/UPjnGdsb2JhbABEFoYBvUABAQEBAQgLCQkUJ4IeAQEDAQEjWwsLGgImAgJXGYd3AQwKB6gqiD4QihuBIIoPUoMXS4FHgRMDlXqBHZIKDg
X-IronPort-AV: E=Sophos;i="4.80,718,1344204000"; 
   d="scan'208";a="161476361"
Received: from smtpout2.laposte.net (HELO smtpout.laposte.net) ([193.253.67.227])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 05 Nov 2012 23:25:06 +0100
Received: from localhost ([85.68.238.30])
	by mwinf8503-out with ME
	id KyR51k0020g2Tf103yR5TK; Mon, 05 Nov 2012 23:25:05 +0100
Date: Mon, 5 Nov 2012 23:25:03 +0100
From: Pierre Chambart <pierre.chambart@laposte.net>
To: caml-list@inria.fr
Message-ID: <20121105232503.0e369242@laposte.net>
In-Reply-To: <20D75025-C0A1-43A0-89BE-30AD5ED04545@cap-lore.com>
References: <20D75025-C0A1-43A0-89BE-30AD5ED04545@cap-lore.com>
X-Mailer: Claws Mail 3.8.1 (GTK+ 2.24.10; x86_64-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Subject: Re: [Caml-list] Compiled code that uses the stack when it can.

Le Mon, 5 Nov 2012 11:21:13 -0800,
Norman Hardy <norm@cap-lore.com> a =C3=A9crit :

> Is there a way to get ocamlopt to leave the C sources behind?
> Does ocamlopt ever use the stack to call functions that it compiled?
> Does anyone know of compilers that use the stack when they can but
> uses the heap when it must? Is there literature on this?
> This slide set is very useful but seems to suggest that internal
> functions representations are treated uniformly.
> http://pauillac.inria.fr/~xleroy/talks/compilation-agay.pdf
>=20
> I am thinking about static code analysis to determine two or perhaps
> three ways free variables in a function might be handled. It is hard
> enough that I would like to see if it has been done before.

This was studied quite extensively by Bruno Blanchet in his thesis:
http://prosecco.gforge.inria.fr/personal/bblanche/publications/BlanchetPhd0=
0.html
--=20
Pierre
