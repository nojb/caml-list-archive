Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p7PAZVLR016991
	for <caml-list@sympa-roc.inria.fr>; Thu, 25 Aug 2011 12:35:31 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AsMAAE8kVk7ZRrfDmWdsb2JhbABChEyUIY8UFAEBAQEBCAsLBxQlgWqBCwImAj4LMQwKh1YCmyGOWJFUgSyEDzFgBKQW
X-IronPort-AV: E=Sophos;i="4.68,280,1312149600"; 
   d="scan'208";a="106579637"
Received: from relay3-d.mail.gandi.net ([217.70.183.195])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 25 Aug 2011 12:35:26 +0200
X-Originating-IP: 217.70.178.134
Received: from mfilter4-d.gandi.net (mfilter4-d.gandi.net [217.70.178.134])
	by relay3-d.mail.gandi.net (Postfix) with ESMTP id 0B363A8095
	for <caml-list@inria.fr>; Thu, 25 Aug 2011 12:35:26 +0200 (CEST)
X-Virus-Scanned: Debian amavisd-new at mfilter4-d.gandi.net
Received: from relay3-d.mail.gandi.net ([217.70.183.195])
	by mfilter4-d.gandi.net (mfilter4-d.gandi.net [10.0.15.180]) (amavisd-new, port 10024)
	with ESMTP id surGzgj0zZib for <caml-list@inria.fr>;
	Thu, 25 Aug 2011 12:35:24 +0200 (CEST)
X-Originating-IP: 87.231.38.99
Received: from tokyo (87-231-38-99.rev.numericable.fr [87.231.38.99])
	(Authenticated sender: henri.binsztok@mlstate.com)
	by relay3-d.mail.gandi.net (Postfix) with ESMTPSA id 72292A808E
	for <caml-list@inria.fr>; Thu, 25 Aug 2011 12:35:24 +0200 (CEST)
Date: Thu, 25 Aug 2011 12:35:24 +0200
From: Henri Binsztok <henri.binsztok@mlstate.com>
To: caml-list@inria.fr
Message-ID: <D89D7F7F77FB402A853A328EFCED319A@mlstate.com>
X-Mailer: sparrow 1.3.2 (build 814.60)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
X-Validation-by: henri.binsztok@mlstate.com
Subject: [Caml-list] Opa released as open source

Hi List

It is our pleasure to announce to the Caml List that Opa is now an open source project!

- Opa is a new programming language for writing web/cloud applications. It is a functional, statically typed language, with native support for the web. For instance: 
 Create XML fragments values:
 line = <div class="line"></div>
 Access elements of the DOM:
 Dom.scroll_to_bottom(#conversation)

- Opa manages all aspects of a distributed web application (including the database) within a single technology and runtime: Just compile Opa code to standalone binaries that run the web application server.

- Opa manages client and server code within one language. The compiler decides (you can hint) which parts run on the client and on the server, automatically generates JavaScript code for the client part and automates all communications.

- Most of Opa is implemented in OCaml (around 200k LoCs).

We're thankful to the OCaml community for providing such a great technology to write Opa and would love your feedback on Opa. We're also setting up a Developer Challenge. Submit your application and win some new hardware!

Links:
- Opa project home: http://opalang.org
- Opa source code: https://github.com/MLstate/opalang
- Opa developer challenge: http://opalang.org/challenge/home.xmlt

For the Opa team,

Henri


