Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p72H2SkK020393
	for <caml-list@sympa-roc.inria.fr>; Tue, 2 Aug 2011 19:02:28 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkkCAEctOE5RZ90xkWdsb2JhbABCp2UUAQEBAQkLCwcUAyKBRwgCHhJMBWgjHAEEHgWHXqABoB2GQgSjYA
X-IronPort-AV: E=Sophos;i="4.67,307,1309730400"; 
   d="scan'208";a="114789542"
Received: from mtaout03-winn.ispmail.ntl.com ([81.103.221.49])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 02 Aug 2011 19:02:23 +0200
Received: from aamtaout03-winn.ispmail.ntl.com ([81.103.221.35])
          by mtaout03-winn.ispmail.ntl.com
          (InterMail vM.7.08.04.00 201-2186-134-20080326) with ESMTP
          id <20110802170221.VRKB5301.mtaout03-winn.ispmail.ntl.com@aamtaout03-winn.ispmail.ntl.com>
          for <caml-list@inria.fr>; Tue, 2 Aug 2011 18:02:21 +0100
Received: from romulus.metastack.com ([81.102.132.77])
          by aamtaout03-winn.ispmail.ntl.com
          (InterMail vG.3.00.04.00 201-2196-133-20080908) with ESMTP
          id <20110802170221.TCUO24017.aamtaout03-winn.ispmail.ntl.com@romulus.metastack.com>
          for <caml-list@inria.fr>; Tue, 2 Aug 2011 18:02:21 +0100
Received: from DIVA ([172.16.0.7])
	(authenticated bits=0)
	by romulus.metastack.com (8.14.2/8.14.2) with ESMTP id p72H1sPs024844
	(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=NO)
	for <caml-list@inria.fr>; Tue, 2 Aug 2011 18:01:55 +0100
From: "David Allsopp" <dra-news@metastack.com>
To: "OCaml List" <caml-list@inria.fr>
Date: Tue, 2 Aug 2011 18:01:54 +0100
Organization: MetaStack Solutions Ltd.
Message-ID: <000101cc5135$e1f1ab90$a5d502b0$@metastack.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Mailer: Microsoft Outlook 14.0
Thread-Index: AcxRNTAmE9oUysB1TgqqvacnfYn7hQ==
Content-Language: en-us
x-ms-exchange-organization-originalclientipaddress: 172.16.0.7
x-ms-exchange-organization-originalserveripaddress: fe80::547c:3c42:e1da:eda2%10
X-Scanned-By: MIMEDefang 2.65 on 81.102.132.77
X-Cloudmark-Analysis: v=1.1 cv=R50lirqlHffDPPkwUlkuVa99MrvKdVWo//yz83qex8g= c=1 sm=0 a=cTs9vV391PwA:10 a=V35hxywFhi8A:10 a=kj9zAlcOel0A:10 a=kN-7P5fzftTTdW9H1QoA:9 a=CjuIK1q_8ugA:10 a=HpAAvcLHHh0Zw7uRqdWCyQ==:117
Subject: [Caml-list] Writing to a blocked socket

I don't seem to be able to ask Google this in a way which will give me a
reasonable answer!

In the same process, if you have one thread blocked on a [recv] operation on
a socket, under Unix another thread can still write to the socket. Under
Windows, however, the call to [send] blocks because there's another thread
blocked on a [recv] to the same socket. Are there any options that can be
set to change that behaviour or is that just "the way it is" and the
application has to be coded using [select] instead? 


David

[the astute Mr Holmes may have spotted that having got ocaml-ssl built, I
then couldn't get its stelnet example to work ;o)]

