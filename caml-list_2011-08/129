Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p7G9kk5d010801
	for <caml-list@sympa-roc.inria.fr>; Tue, 16 Aug 2011 11:46:46 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AksHAJg7Sk7V+6tl/2dsb2JhbABBmSKPCneBQAEBBQwmAVYLRhQoiCa6UYVoXwSkCQ
X-IronPort-AV: E=Sophos;i="4.67,379,1309730400"; 
   d="scan'208";a="115967809"
Received: from eneide.happyleptic.org ([213.251.171.101])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/AES256-SHA; 16 Aug 2011 11:46:41 +0200
Received: from extranet.securactive.org ([82.234.213.170] helo=ccellier.rd.securactive.lan)
	by eneide.happyleptic.org with esmtp (Exim 4.72)
	(envelope-from <rixed@happyleptic.org>)
	id 1QtGEL-0005Au-6e
	for caml-list@inria.fr; Tue, 16 Aug 2011 11:46:41 +0200
Received: from rixed by ccellier.rd.securactive.lan with local (Exim 4.72)
	(envelope-from <rixed@happyleptic.org>)
	id 1QtGEG-0001fP-Mv
	for caml-list@inria.fr; Tue, 16 Aug 2011 11:46:36 +0200
Date: Tue, 16 Aug 2011 11:46:36 +0200
From: rixed@happyleptic.org
To: caml-list@inria.fr
Message-ID: <20110816094636.GA6227@ccellier.rd.securactive.lan>
References: <CAMT7qiQFZysrnMoKMdmG7eK0CBMkdP=NYgymmqXokJxLuQdWZA@mail.gmail.com>
 <4E4A2488.4050706@gmail.com>
 <CAMT7qiQeeTonQTfPVjmHQpqjE=aaK8YEwJfiBk5HeV6UUkBAzw@mail.gmail.com>
 <4E4A2DAC.5010207@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <4E4A2DAC.5010207@gmail.com>
User-Agent: Mutt/1.5.20 (2009-06-14)
Subject: Re: [Caml-list] Interfacing with C: bad practice

-[ Tue, Aug 16, 2011 at 11:43:24AM +0300, Török Edwin ]----
> 'list' should be reachable via caml_local_roots, so if it really gets an invalid value
> it sounds like a bug to me.

list may not be garbage collected (since it is indeed registered as the
root), but it may be moved arround (ie promoted to major heap).
The address of list would be fixed in the local variable (the root) but
not the transiant copy on the stack.
Maybe that's the actual problem ?

