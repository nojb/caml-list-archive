Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p72JGFRq023368
	for <caml-list@sympa-roc.inria.fr>; Tue, 2 Aug 2011 21:16:15 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkoCAFBMOE7U4xEIkWdsb2JhbABChEejIRQBAQEBCQsLBxQDIoFAAQEEASNWEAsODAImAgJXBhMJh2MCAq4JkTiBK4QHgRAEi3WMDYtf
X-IronPort-AV: E=Sophos;i="4.67,307,1309730400"; 
   d="scan'208";a="104539673"
Received: from moutng.kundenserver.de ([212.227.17.8])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 02 Aug 2011 21:16:10 +0200
Received: from office1.lan.sumadev.de (dslb-094-219-217-011.pools.arcor-ip.net [94.219.217.11])
	by mrelayeu.kundenserver.de (node=mreu3) with ESMTP (Nemesis)
	id 0MFE4N-1QZnhr369D-00GGZc; Tue, 02 Aug 2011 21:16:00 +0200
Received: from [192.168.5.106] (dslb-094-219-217-011.pools.arcor-ip.net [94.219.217.11])
	by office1.lan.sumadev.de (Postfix) with ESMTPSA id 5DE575F701;
	Tue,  2 Aug 2011 21:16:00 +0200 (CEST)
From: Gerd Stolpmann <info@gerd-stolpmann.de>
To: David Allsopp <dra-news@metastack.com>
Cc: OCaml List <caml-list@inria.fr>
In-Reply-To: <000101cc5135$e1f1ab90$a5d502b0$@metastack.com>
References: <000101cc5135$e1f1ab90$a5d502b0$@metastack.com>
Content-Type: text/plain; charset="UTF-8"
Date: Tue, 02 Aug 2011 21:16:01 +0200
Message-ID: <1312312561.6236.307.camel@thinkpad>
Mime-Version: 1.0
X-Mailer: Evolution 2.28.3 
Content-Transfer-Encoding: 7bit
X-Provags-ID: V02:K0:LVKKD6N75ppDwkK4cJofbBigRDf/ZtRaQX2e7icIpPq
 SwrpuwwbXCwshg6vAyOR+UtOCM2qo5+k9kAKmraQyGgqr4ntTI
 iTFATSIySMRq1qLJfOKYmWVpelBBBRz/LM5/hTqLfgt1M3WdfX
 OPjrIzNx/Pu30/DnhjhYCJ+0IjgQMaUnasJKZLyfzrcV9KEMi1
 Glx2UbavQNGXN1ERI/WuA==
Subject: Re: [Caml-list] Writing to a blocked socket

Am Dienstag, den 02.08.2011, 18:01 +0100 schrieb David Allsopp:
> I don't seem to be able to ask Google this in a way which will give me a
> reasonable answer!
> 
> In the same process, if you have one thread blocked on a [recv] operation on
> a socket, under Unix another thread can still write to the socket. Under
> Windows, however, the call to [send] blocks because there's another thread
> blocked on a [recv] to the same socket. Are there any options that can be
> set to change that behaviour or is that just "the way it is" and the
> application has to be coded using [select] instead? 

Really? This does not make sense at all. It's quite normal that one
direction is blocked, and the other not. Are you sure about your
observation?

Gerd

> 
> 
> David
> 
> [the astute Mr Holmes may have spotted that having got ocaml-ssl built, I
> then couldn't get its stelnet example to work ;o)]
> 
> 

-- 
------------------------------------------------------------
Gerd Stolpmann, Darmstadt, Germany    gerd@gerd-stolpmann.de
Creator of GODI and camlcity.org.
Contact details:        http://www.camlcity.org/contact.html
Company homepage:       http://www.gerd-stolpmann.de
*** Searching for new projects! Need consulting for system
*** programming in Ocaml? Gerd Stolpmann can help you.
------------------------------------------------------------

