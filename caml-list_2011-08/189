Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p7OKlrkv015858
	for <caml-list@sympa-roc.inria.fr>; Wed, 24 Aug 2011 22:47:53 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ArcAAO1iVU5N6B+kmGdsb2JhbABCFqd+AQEBAQEICQ0HFCWBQAEBAwEBOj8QCxgnB0YRBhOHcQICuh+GSQSHW4ROi32Lcw
X-IronPort-AV: E=Sophos;i="4.68,277,1312149600"; 
   d="scan'208";a="106527799"
Received: from fe01x03-cgp.akado.ru (HELO akado.ru) ([77.232.31.164])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 24 Aug 2011 22:47:48 +0200
Received: from [10.0.66.9] ([10.0.66.9] verified)
  by fe01-cgp.akado.ru (CommuniGate Pro SMTP 5.2.13)
  with ESMTPS id 295220492; Thu, 25 Aug 2011 00:47:46 +0400
Date: Thu, 25 Aug 2011 00:47:39 +0400 (MSD)
From: malc <av1474@comtv.ru>
X-X-Sender: malc@linmac
To: Benedikt Meurer <benedikt.meurer@googlemail.com>
cc: caml-list@inria.fr
In-Reply-To: <4EF51F29-D437-4F6F-9C91-DBEA3D4C3EB8@googlemail.com>
Message-ID: <alpine.LNX.2.00.1108250046470.8734@linmac>
References: <93199F3B-E9CF-4D93-9B2B-BAAB03F4FC08@googlemail.com> <CAPFanBGk8gCmVKFVh4bPZyy8LjoTf9dzVWZsNgrEut=POtM=Pw@mail.gmail.com> <4EF51F29-D437-4F6F-9C91-DBEA3D4C3EB8@googlemail.com>
User-Agent: Alpine 2.00 (LNX 1167 2008-08-23)
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Subject: Re: [Caml-list] Linear Scan Register Allocator for
 ocamlopt/ocamlnat

On Wed, 24 Aug 2011, Benedikt Meurer wrote:

> 
> On Aug 1, 2011, at 17:04 , Gabriel Scherer wrote:
> 
> > Do you have more precise measurements on
> 
> Also posting Marcell's timing results here for reference (taken from bug 
> 5324).
> 
> > - the performance cost of this new allocator in the generated code? I
> > suppose the results may vary between different architectures (eg. x86
> > is probably more sensitive to good allocation decisions than x86_64).
> 
> - http://ps.informatik.uni-siegen.de/~meurer/tmp/compiletime_timings.pdf contains a comparison of the ocamlopt invocations.
> - http://ps.informatik.uni-siegen.de/~meurer/tmp/runtime_timings.pdf contains comparison of the generated code.
> 
> As can be seen from the results, amd64 is more sensitive to register 
> allocator changes than i386. Not really surprising to me. Would be 
> interesting to see how this affects PPC/Sparc/Mips, but we don't have 
> appropriate hardware available right now. Anyone with appropriate 
> hardware and some spare time? :-)
> 

I can test things on PPC/PPC64(well... CBE).

-- 
mailto:av1474@comtv.ru
