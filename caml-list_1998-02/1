Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA03219 for caml-redistribution; Wed, 4 Feb 1998 19:06:29 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA18903 for <caml-list@pauillac.inria.fr>; Sun, 1 Feb 1998 16:48:24 +0100 (MET)
Received: from linc.cis.upenn.edu (LINC.CIS.UPENN.EDU [158.130.12.3])
	by nez-perce.inria.fr (8.8.7/8.8.5) with ESMTP id QAA19801
	for <caml-list@inria.fr>; Sun, 1 Feb 1998 16:48:18 +0100 (MET)
Received: from codex.cis.upenn.edu (CODEX.CIS.UPENN.EDU [158.130.6.15])
	by linc.cis.upenn.edu (8.8.5/8.8.5) with ESMTP id KAA00382
	for <caml-list@inria.fr>; Sun, 1 Feb 1998 10:48:16 -0500 (EST)
Received: (from mwh@localhost)
	by codex.cis.upenn.edu (8.8.5/8.8.5) id KAA12442
	for caml-list@inria.fr; Sun, 1 Feb 1998 10:48:16 -0500 (EST)
From: Michael Hicks <mwh@dsl.cis.upenn.edu>
Message-Id: <199802011548.KAA12442@codex.cis.upenn.edu>
Subject: Caml performance
To: caml-list@inria.fr
Date: Sun, 1 Feb 1998 10:48:15 -0500 (EST)
X-Mailer: ELM [version 2.4 PL23-upenn3.1]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: weis

[ Malheureusement, je n'ecris pas bien le francais; alors, j'ecrivait (?) en
Anglais seulement ... ]

I've been trying to compile OCaml to be instrumented with gprof.  When I do
so, it's possible to get profile information for the ocamlrun executable
(the interpreter), but not for any of the additional libraries (like Unix
and Threads), presumably because they are "linked" in with the bytecode file
that's being executed, but do not reside in the ocamlrun executable itself.
Is there any way around this?  In particular, I'm trying to find out how
much time is spent in the thread scheduler, and gprof seemed like a good way
to find this out.

Secondly, I noticed that the interpreter was not compiled, by default, with
-O on.  Is there any reason for this?  By contrast, the threads library
scheduler does have -O turned on, so it makes me think that gcc might do
some optimizations that are not gc-safe.

Thanks!
Mike

-- 
Michael Hicks
Ph.D. Candidate, the University of Pennsylvania
http://www.cis.upenn.edu/~mwh            mailto://mwh@dsl.cis.upenn.edu
"Since my last report, this employee has reached rock bottom and shows
signs of starting to dig."  -- taken from actual performance report




