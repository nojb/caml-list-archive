Return-Path: <agarwal1975@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 8808EBC57
	for <caml-list@yquem.inria.fr>; Fri,  3 Sep 2010 21:40:19 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvIBALLrgEzRVdY2kGdsb2JhbACTMoVVAYd5CBUBAQEBCQkMBxEDH6R4iTOCFYZKLogyAQEDBYU2BIFYiEE
X-IronPort-AV: E=Sophos;i="4.56,314,1280700000"; 
   d="scan'208";a="58528302"
Received: from mail-bw0-f54.google.com ([209.85.214.54])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 03 Sep 2010 21:40:19 +0200
Received: by bwz20 with SMTP id 20so2553053bwz.27
        for <caml-list@inria.fr>; Fri, 03 Sep 2010 12:40:18 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:mime-version:received:in-reply-to
         :references:from:date:message-id:subject:to:content-type;
        bh=mBSS29haBBZjI7X3oxUpkFEGD44vchMi/srFIu6cRXQ=;
        b=pxK9rtxGnz5nAuRE6vVAGn/IbFmD40N2NUpLch2erypwih1Svsf1TYRHclIc+WXg71
         1iQpEDiGSQnC7rlKPJdW2GmM7A0XknKmOowWbp1Wq/huwDE9kq1ZpQFqCwrUJHYePRSc
         Ko0t1kUksjBUi9g/L0Qwl0Mg0SkGurK3NV7jU=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :content-type;
        b=v07ua9dHK4fCO2Qd8J7Ja7gUjrF2Bu19ZcJ1s989a0ykeI105bUd+juNsxIPbmpSOh
         ixWrY96phSVsGkRwpHCeCq6XWhcVxJx5UMv5Pa9vQ1Fk3+cgD4lRYFMyrUnfK+VB2h3V
         5rXPNaFzGh/fZ1ec/Vnemy4gB3fxpq+cI8nus=
Received: by 10.204.73.13 with SMTP id o13mr765830bkj.173.1283542818352; Fri,
 03 Sep 2010 12:40:18 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.204.126.218 with HTTP; Fri, 3 Sep 2010 12:39:58 -0700 (PDT)
In-Reply-To: <4C8143AD.4060409@ens-lyon.org>
References: <slrni82bc0.skq.sylvain@gallu.homelinux.org> <4C8143AD.4060409@ens-lyon.org>
From: Ashish Agarwal <agarwal1975@gmail.com>
Date: Fri, 3 Sep 2010 15:39:58 -0400
Message-ID: <AANLkTimOJd5Jm4gYFg3uus363trXNqj1U_=o7Roy=MXc@mail.gmail.com>
Subject: Re: [Caml-list] Create a constraint between variant type and data list
To: Sylvain Le Gall <sylvain@le-gall.net>, caml-list@inria.fr
Content-Type: multipart/alternative; boundary=001636c5bd85bdede4048f60191d
X-Spam: no; 0.00; enum:01 wiki:01 ens-lyon:01 lgpl:01 lgpl:01 variants:01 variants:01 compiler:01 runtime:01 printf:01 printf:01 iter:01 iter:01 ocaml:01 beginner's:01 

--001636c5bd85bdede4048f60191d
Content-Type: text/plain; charset=ISO-8859-1

See the Enum section of deriving:
http://code.google.com/p/deriving/wiki/Introduction

I haven't used it myself so cannot comment on how well it works.


On Fri, Sep 3, 2010 at 2:51 PM, Martin Jambon <martin.jambon@ens-lyon.org>wrote:

> Sylvain Le Gall wrote:
> > Hello all,
> >
> > I would like to somehow enforce that a variant type is associated with
> > an entry in a data list.
> >
> > For example,
> >
> > I would like to define:
> >
> > type license = GPL | LGPL
> >
> > and
> >
> > let data = [ GPL, "GNU Public license";
> >              LGPL, "GNU Lesser General Public license" ]
> >
> >
> > I would like to enforce that all variants of license are in the
> > association list.
> >
> > I have tried to use polymorphic variants, but don't see how to enforce
> > this constraint.
> >
> > The point, is that if I add a new variant to license (e.g. BSD3), the
> > compiler output an error because this new variant is not in data list.
> >
> > Any ideas ? If you need to use another type expression rather than
> > variant, please do so, as long as I am able to link the license type
> > and data list.
>
> I don't see a solution other than meta-programming or runtime checks.
>
> Here is a simple code generator that would do the job:
>
> (* license_gen.ml *)
> open Printf
>
> let print_licenses l =
>  printf "type license =";
>  List.iter (fun (k, v) -> printf " | %s" k) l;
>  printf "\n";
>  printf "let licences = [\n";
>  List.iter (fun (k, v) -> printf "  %s, %S;\n" k v) l;
>  printf "]\n"
>
> let () =
>  print_licenses [
>    "GPL", "GNU Public license";
>    "LGPL", "GNU Lesser General Public license";
>  ]
>
> (* end *)
>
> $ ocaml license_gen.ml > license.ml
>
>
>
> Martin
>
> --
> http://mjambon.com/
>
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>

--001636c5bd85bdede4048f60191d
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div>See the Enum section of=A0deriving:</div><div><div><a href=3D"http://c=
ode.google.com/p/deriving/wiki/Introduction" target=3D"_blank">http://code.=
google.com/p/deriving/wiki/Introduction</a></div><div><br></div><div>I have=
n&#39;t used it myself so cannot comment on how well it works.</div>

<div><br></div><div><br></div><div><div class=3D"gmail_quote">
On Fri, Sep 3, 2010 at 2:51 PM, Martin Jambon <span dir=3D"ltr">&lt;<a href=
=3D"mailto:martin.jambon@ens-lyon.org" target=3D"_blank">martin.jambon@ens-=
lyon.org</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=
=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">


<div>Sylvain Le Gall wrote:<br>
&gt; Hello all,<br>
&gt;<br>
&gt; I would like to somehow enforce that a variant type is associated with=
<br>
&gt; an entry in a data list.<br>
&gt;<br>
&gt; For example,<br>
&gt;<br>
&gt; I would like to define:<br>
&gt;<br>
&gt; type license =3D GPL | LGPL<br>
&gt;<br>
&gt; and<br>
&gt;<br>
&gt; let data =3D [ GPL, &quot;GNU Public license&quot;;<br>
&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0LGPL, &quot;GNU Lesser General Public licen=
se&quot; ]<br>
&gt;<br>
&gt;<br>
&gt; I would like to enforce that all variants of license are in the<br>
&gt; association list.<br>
&gt;<br>
&gt; I have tried to use polymorphic variants, but don&#39;t see how to enf=
orce<br>
&gt; this constraint.<br>
&gt;<br>
&gt; The point, is that if I add a new variant to license (e.g. BSD3), the<=
br>
&gt; compiler output an error because this new variant is not in data list.=
<br>
&gt;<br>
&gt; Any ideas ? If you need to use another type expression rather than<br>
&gt; variant, please do so, as long as I am able to link the license type<b=
r>
&gt; and data list.<br>
<br>
</div>I don&#39;t see a solution other than meta-programming or runtime che=
cks.<br>
<br>
Here is a simple code generator that would do the job:<br>
<br>
(* <a href=3D"http://license_gen.ml" target=3D"_blank">license_gen.ml</a> *=
)<br>
open Printf<br>
<br>
let print_licenses l =3D<br>
 =A0printf &quot;type license =3D&quot;;<br>
 =A0List.iter (fun (k, v) -&gt; printf &quot; | %s&quot; k) l;<br>
 =A0printf &quot;\n&quot;;<br>
 =A0printf &quot;let licences =3D [\n&quot;;<br>
 =A0List.iter (fun (k, v) -&gt; printf &quot; =A0%s, %S;\n&quot; k v) l;<br=
>
 =A0printf &quot;]\n&quot;<br>
<br>
let () =3D<br>
 =A0print_licenses [<br>
 =A0 =A0&quot;GPL&quot;, &quot;GNU Public license&quot;;<br>
 =A0 =A0&quot;LGPL&quot;, &quot;GNU Lesser General Public license&quot;;<br=
>
 =A0]<br>
<br>
(* end *)<br>
<br>
$ ocaml <a href=3D"http://license_gen.ml" target=3D"_blank">license_gen.ml<=
/a> &gt; <a href=3D"http://license.ml" target=3D"_blank">license.ml</a><br>
<br>
<br>
<br>
Martin<br>
<font color=3D"#888888"><br>
--<br>
<a href=3D"http://mjambon.com/" target=3D"_blank">http://mjambon.com/</a><b=
r>
</font><div><div></div><div><br>
_______________________________________________<br>
Caml-list mailing list. Subscription management:<br>
<a href=3D"http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list" target=
=3D"_blank">http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list</a><br=
>
Archives: <a href=3D"http://caml.inria.fr" target=3D"_blank">http://caml.in=
ria.fr</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
</div></div></blockquote></div><br></div></div>

--001636c5bd85bdede4048f60191d--

