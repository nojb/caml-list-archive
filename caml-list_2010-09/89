Return-Path: <gclci-caml-list@m.gmane.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 4EB62BC58
	for <caml-list@yquem.inria.fr>; Mon, 13 Sep 2010 09:57:36 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AsEDAGZ2jUxQW+UMgWdsb2JhbACTdo1PFQEBFiIivjmFQASIfoEphVxo
X-IronPort-AV: E=Sophos;i="4.56,358,1280700000"; 
   d="scan'208";a="57150842"
Received: from lo.gmane.org ([80.91.229.12])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 13 Sep 2010 09:57:35 +0200
Received: from list by lo.gmane.org with local (Exim 4.69)
	(envelope-from <gclci-caml-list@m.gmane.org>)
	id 1Ov3uw-00069O-EJ
	for caml-list@inria.fr; Mon, 13 Sep 2010 09:57:34 +0200
Received: from ks368928.kimsufi.com ([94.23.39.26])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Mon, 13 Sep 2010 09:57:34 +0200
Received: from sylvain by ks368928.kimsufi.com with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Mon, 13 Sep 2010 09:57:34 +0200
X-Injected-Via-Gmane: http://gmane.org/
To: caml-list@inria.fr
From: Sylvain Le Gall <sylvain@le-gall.net>
Subject: Re: How to re-implement the GC?
Date: Mon, 13 Sep 2010 07:57:26 +0000 (UTC)
Lines: 23
Message-ID: <slrni8rmb6.skq.sylvain@gallu.homelinux.org>
References: <AANLkTiktq35R+i1ScFd4Nvrhd=VWRbUQOP+9mzjPgoSs@mail.gmail.com>
X-Complaints-To: usenet@dough.gmane.org
X-Gmane-NNTP-Posting-Host: ks368928.kimsufi.com
User-Agent: slrn/pre1.0.0-11 (Linux)
X-Spam: no; 0.00; le-gall:01 re-implement:01 eray:01 ozkural:01 pitfalls:01 compiler:01 ocaml:01 wrote:01 linear:02 bugs:03 thread:06 probably:07 quite:08 meeting:08 interesting:12 

Hi,

On 13-09-2010, Eray Ozkural <examachine@gmail.com> wrote:
> Hi there,
>
> What exactly are the requirements for substituting the current GC with
> another, preferably non-locking, GC? Any pitfalls I wouldn't see just
> reading the code?
>

The GC is deeply interacting with the the rest of the compiler. I think
you will spend a lot of time on this task.

I would recommend you trying OC4MC, which is probably what you are
looking for:
http://www.algo-prog.info/ocmc/web/

They show quite interesting results using Thread at the last OCaml
Meeting, though they are still some bugs (almost linear speed-up with
multicore).

Regards,
Sylvain Le Gall

