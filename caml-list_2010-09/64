Return-Path: <sylvain@le-gall.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 8455CBC57
	for <caml-list@yquem.inria.fr>; Tue,  7 Sep 2010 19:31:57 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhYFAO4ThkxQDPIxZmdsb2JhbACTRgEBjSoVDQsICBIDH69UkHeFPQSKGIMC
X-IronPort-AV: E=Sophos;i="4.56,329,1280700000"; 
   d="scan'208";a="67078405"
Received: from smtp21.orange.fr ([80.12.242.49])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 07 Sep 2010 19:31:57 +0200
Received: from me-wanadoo.net (localhost [127.0.0.1])
	by mwinf2123.orange.fr (SMTP Server) with ESMTP id 3E2061C000B1;
	Tue,  7 Sep 2010 19:31:57 +0200 (CEST)
Received: from me-wanadoo.net (localhost [127.0.0.1])
	by mwinf2123.orange.fr (SMTP Server) with ESMTP id 24FB41C00546;
	Tue,  7 Sep 2010 19:31:57 +0200 (CEST)
Received: from giga (AVelizy-155-1-87-22.w90-2.abo.wanadoo.fr [90.2.94.22])
	by mwinf2123.orange.fr (SMTP Server) with ESMTP id EDDBE1C000B1;
	Tue,  7 Sep 2010 19:31:56 +0200 (CEST)
X-ME-UUID: 20100907173156974.EDDBE1C000B1@mwinf2123.orange.fr
Received: from yocto.gallu.homelinux.org ([192.168.2.2] helo=yotta.gallu.homelinux.org)
	by giga with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	(Exim 4.69)
	(envelope-from <sylvain@le-gall.net>)
	id 1Ot21U-0004Tz-Bp; Tue, 07 Sep 2010 19:31:56 +0200
Received: from localhost ([127.0.0.1] helo=gallu.homelinux.org)
	by yotta.gallu.homelinux.org with smtp (Exim 4.69)
	(envelope-from <sylvain@le-gall.net>)
	id 1Ot21R-00007s-FH; Tue, 07 Sep 2010 19:31:54 +0200
Received: by gallu.homelinux.org (sSMTP sendmail emulation); Tue, 07 Sep 2010 17:31:53 +0000
Date: Tue, 07 Sep 2010 17:31:53 +0000
From: Sylvain Le Gall <sylvain@le-gall.net>
To: caml-list@inria.fr
Subject: [ANN] ocaml-expect v0.0.1: Expect-like framework
Message-Id: <E1Ot21R-00007s-FH@yotta.gallu.homelinux.org>
X-Spam: no; 0.00; le-gall:01 expression:02 match:02 generated:05 timeout:05 manual:06 cgi:90 example:10 framework:11 source:12 source:12 question:13 question:13 str:15 using:15 

This is a simple implementation of `expect` to help building unitary testing
of interactive program.

It helps to receive question and send answers from an interactive process.
You can match the question using a regular expression (Str). You can also
use a timeout to ensure that the process answer in time.

See the [Expect manual](http://expect.nist.gov/) for more information and
example.

Homepage:
http://forge.ocamlcore.org/projects/ocaml-expect/

Get source code:
$ darcs get http://darcs.ocamlcore.org/repos/ocaml-expect

Browse source code:
http://darcs.ocamlcore.org/cgi-bin/darcsweb.cgi?r=ocaml-expect;a=summary

[Generated by 'OASIS announce']


