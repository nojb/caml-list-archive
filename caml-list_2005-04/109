Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id F340BBC48
	for <caml-list@yquem.inria.fr>; Thu,  7 Apr 2005 00:38:47 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j36Mcl4O010911
	for <caml-list@yquem.inria.fr>; Thu, 7 Apr 2005 00:38:47 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA19898 for <caml-list@pauillac.inria.fr>; Thu, 7 Apr 2005 00:38:47 +0200 (MET DST)
Received: from saul.cis.upenn.edu (SAUL.CIS.upenn.edu [158.130.12.4])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j36McjDq024808
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@inria.fr>; Thu, 7 Apr 2005 00:38:46 +0200
Received: from localhost (SAUL.CIS.upenn.edu [158.130.12.4])
	by saul.cis.upenn.edu (8.12.10/8.12.9) with ESMTP id j36MchCP017871;
	Wed, 6 Apr 2005 18:38:43 -0400 (EDT)
Date: Wed, 06 Apr 2005 18:38:43 -0400 (EDT)
Message-Id: <20050406.183843.133294794.eijiro_sumii@anet.ne.jp>
To: caml-list@inria.fr
Cc: sumii@saul.cis.upenn.edu
Subject: Re: [Caml-list] ambitious proposal: polymorphic arithmetics
From: Eijiro Sumii <eijiro_sumii@anet.ne.jp>
In-Reply-To: <87u0mjvafc.fsf@qrnik.zagroda>
References: <20050406.151450.98562588.eijiro_sumii@anet.ne.jp>
	<20050406.163144.51837136.eijiro_sumii@anet.ne.jp>
	<87u0mjvafc.fsf@qrnik.zagroda>
X-Mailer: Mew version 3.2 on Emacs 20.7 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 425464F7.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 425464F5.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 eijiro:01 sumii:01 eijiro:01 sumii:01 zsh:01 ocaml:01 ocaml:01 ...:98 polymorphic:01 polymorphic:01 segmentation:02 match:02 anet:02 fault:04 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

From: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>
> # type t = A | B | C;;
> type t = A | B | C
> # match (Obj.magic (Obj.magic C + Obj.magic C)) with A -> 0 | B -> 1 | C -> 2;;
> zsh: segmentation fault  ocaml

Good job!!  It reproduced in all environments I have access to.  Then,
after all, "polymorphic addition" isn't actually as easy to implement
in OCaml as I (rather naively) thought...

Thanks so much to everybody for the very informative responses!

	Eijiro

