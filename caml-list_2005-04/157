Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id C50F2BC48
	for <caml-list@yquem.inria.fr>; Sun, 10 Apr 2005 18:54:36 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j3AGsa3f029050
	for <caml-list@yquem.inria.fr>; Sun, 10 Apr 2005 18:54:36 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA06488 for <caml-list@pauillac.inria.fr>; Sun, 10 Apr 2005 18:54:35 +0200 (MET DST)
Received: from furbychan.cocan.org (furbychan.cocan.org [80.68.91.176])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j3AGsYLT029041
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@inria.fr>; Sun, 10 Apr 2005 18:54:35 +0200
Received: from rich by furbychan.cocan.org with local (Exim 3.35 #1 (Debian))
	id 1DKfh2-0007r8-00; Sun, 10 Apr 2005 17:53:52 +0100
Date: Sun, 10 Apr 2005 17:53:52 +0100
To: Robert Roessler <roessler@rftp.com>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Syntactic inclusion of a.ml in b.ml ?
Message-ID: <20050410165351.GB29077@furbychan.cocan.org>
References: <20050408174142.GA1804@galois> <20050409103532.GA20625@furbychan.cocan.org> <42581633.5050702@rftp.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <42581633.5050702@rftp.com>
User-Agent: Mutt/1.3.28i
From: Richard Jones <rich@annexia.org>
X-Miltered: at nez-perce with ID 42595A4C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 42595A4A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 bindings:01 nesting:01 notepad:01 ...:98 ...:98 wrote:01 syntactic:01 functions:01 functions:01 tend:02 element:02 inclusion:03 let:03 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Sat, Apr 09, 2005 at 10:51:47AM -0700, Robert Roessler wrote:
> When I look at OCaml source code, however, I see a *lot* of really 
> different free-form coding styles.  The only language element that 
> jumps out at me for folding is a simplistic handling of "let" 
> bindings... which might not be useful for anything more than to say 
> "Now with folding!" :)

I tend to write *giant* functions, with multiple levels of nesting, so
that (nested) functions appear as close as possible to their point of
application.  Not sure whether folding helps here ...

Rich.

-- 
Richard Jones, CTO Merjis Ltd.
Merjis - web marketing and technology - http://merjis.com
Team Notepad - intranets and extranets for business - http://team-notepad.com

