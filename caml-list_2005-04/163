Return-Path: <Al.Falloon@synopsys.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id B5011BC48
	for <caml-list@yquem.inria.fr>; Mon, 11 Apr 2005 15:24:19 +0200 (CEST)
Received: from boden.synopsys.com (us01smtp1.synopsys.com [198.182.44.79])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j3BDOIhE000720
	for <caml-list@yquem.inria.fr>; Mon, 11 Apr 2005 15:24:19 +0200
Received: from maiden.synopsys.com (maiden.synopsys.com [146.225.100.170])
	by boden.synopsys.com (Postfix) with ESMTP id D064AE0AA
	for <caml-list@yquem.inria.fr>; Mon, 11 Apr 2005 06:23:27 -0700 (PDT)
Received: from US01Kalium.internal.synopsys.com (localhost [127.0.0.1])
	by maiden.synopsys.com (8.9.1/8.9.1) with ESMTP id GAA00250
	for <caml-list@yquem.inria.fr>; Mon, 11 Apr 2005 06:24:17 -0700 (PDT)
Received: from US01Natrium.internal.synopsys.com ([10.9.67.42]) by US01Kalium.internal.synopsys.com with Microsoft SMTPSVC(5.0.2195.5329);
	 Mon, 11 Apr 2005 06:24:16 -0700
Received: from ca05osmium.internal.synopsys.com ([10.44.8.226]) by US01Natrium.internal.synopsys.com with Microsoft SMTPSVC(5.0.2195.5329);
	 Mon, 11 Apr 2005 06:24:16 -0700
Received: from synopsys.com ([10.44.9.157]) by ca05osmium.internal.synopsys.com with Microsoft SMTPSVC(5.0.2195.5329);
	 Mon, 11 Apr 2005 09:24:15 -0400
Message-ID: <425A7A7C.5010801@synopsys.com>
Date: Mon, 11 Apr 2005 09:24:12 -0400
From: Alan Falloon <Al.Falloon@synopsys.COM>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.5) Gecko/20031007
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] float precision on AMD64
References: <2a1a1a0c0504091814876c24a@mail.gmail.com> <42588430.3060105@rftp.com> <425914C2.1010101@yahoo.fr> <4259157C.5090400@exomi.com> <42593B4D.2040601@yahoo.fr> <425927FE.606@exomi.com> <42594BED.8070301@yahoo.fr> <42593456.5050906@exomi.com>
In-Reply-To: <42593456.5050906@exomi.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 11 Apr 2005 13:24:15.0207 (UTC) FILETIME=[C1C9BF70:01C53E99]
X-Miltered: at concorde with ID 425A7A82.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 unboxing:01 ocaml:01 integers:01 integers:01 wrote:01 equality:01 polymorphic:01 floats:01 floats:01 alan:01 incompatible:01 usable:01 tagged:03 tagged:03 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

Your arguments against unboxing 64-bit floats are compelling, except one:

Ville-Pertti Keinonen wrote:

> While tagged floats might be a usable solution for some situations, 
> I'm sure I wouldn't be the only person unhappy with the situation if 
> they were made the default.  In OCaml they'd also be incompatible with 
> polymorphic compare; unlike other values with a tagged representation, 
> they can't be compared as if they were integers.

If we assume IEEE floating point format, then they can be compared as 
integers. See the section "Comparing using integers" in

http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm

Although equality comparisons are dangerous, of course.

