Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 85596BC48
	for <caml-list@yquem.inria.fr>; Wed,  6 Apr 2005 18:59:35 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j36GxZTP023085
	for <caml-list@yquem.inria.fr>; Wed, 6 Apr 2005 18:59:35 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA11712 for <caml-list@pauillac.inria.fr>; Wed, 6 Apr 2005 18:59:34 +0200 (MET DST)
Received: from triton.rz.uni-saarland.de (triton.rz.uni-saarland.de [134.96.7.25])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j36GxYSG007422
	for <caml-list@inria.fr>; Wed, 6 Apr 2005 18:59:34 +0200
Received: from cs.uni-sb.de (cs.uni-sb.de [134.96.254.254])
	by triton.rz.uni-saarland.de (8.12.10/8.12.10) with ESMTP id j36GxXwx5064332
	for <caml-list@inria.fr>; Wed, 6 Apr 2005 18:59:33 +0200 (CEST)
Received: from mail.cs.uni-sb.de (mail.cs.uni-sb.de [134.96.254.200])
	by cs.uni-sb.de (8.13.4/2005033000) with ESMTP id j36GxWjM003209
	for <caml-list@inria.fr>; Wed, 6 Apr 2005 18:59:32 +0200 (CEST)
Received: from ps.uni-sb.de (grizzly.ps.uni-sb.de [134.96.186.68])
	by mail.cs.uni-sb.de (8.13.4/2005033000) with ESMTP id j36GxWtQ001080
	for <caml-list@inria.fr>; Wed, 6 Apr 2005 18:59:32 +0200 (CEST)
X-Authentication-Warning: mail.cs.uni-sb.de: Host grizzly.ps.uni-sb.de [134.96.186.68] claimed to be ps.uni-sb.de
Received: from ps.uni-sb.de (groove.ps.uni-sb.de [134.96.186.172])
	by ps.uni-sb.de (8.12.10/8.12.10) with ESMTP id j36GxUBm026360;
	Wed, 6 Apr 2005 18:59:31 +0200
Message-ID: <42541572.3010500@ps.uni-sb.de>
Date: Wed, 06 Apr 2005 18:59:30 +0200
From: Andreas Rossberg <rossberg@ps.uni-sb.de>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.4.1) Gecko/20031114
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: [Caml-list] ambitious proposal: polymorphic arithmetics
References: <20050406.111505.68543084.eijiro_sumii@anet.ne.jp> <20050406163915.GC15547@force.stwing.upenn.edu>
In-Reply-To: <20050406163915.GC15547@force.stwing.upenn.edu>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-1.5.1 (triton.rz.uni-saarland.de [134.96.7.25]); Wed, 06 Apr 2005 18:59:33 +0200 (CEST)
X-AntiVirus: checked by AntiVir Milter 1.0.6; AVE 6.30.0.7; VDF 6.30.0.71
X-Miltered: at nez-perce with ID 42541577.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 42541576.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; rossberg:01 rossberg:01 caml-list:01 lovas:01 abstraction:01 cheers:01 wrote:01 exception:01 uni-sb:01 uni-sb:01 polymorphic:01 polymorphic:01 abstract:01 abstract:01 andreas:01 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

William Lovas wrote:
> 
> (This argument breaks down in
> the face of code which relies on abstract types to enforce modularity -- in
> such cases, incomparability can become "the rule" rather than the
> exception, putting =, <, etc. on the same footing as +, -, etc.)

In fact, the polymorphic approach would make abstract types comparable 
if their representation is, hence the idea of (non-parametric) 
polymorphic operations of this sort slaps right in the face of type 
abstraction and encapsulation, which are high values of ML.

Cheers,

   - Andreas

-- 
Andreas Rossberg, rossberg@ps.uni-sb.de

Let's get rid of those possible thingies!  -- TB

