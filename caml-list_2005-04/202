Return-Path: <jon@ffconsultancy.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id D38CCBC48
	for <caml-list@yquem.inria.fr>; Mon, 18 Apr 2005 13:26:53 +0200 (CEST)
Received: from ptb-relay05.plus.net (pih-relay05.plus.net [212.159.14.132])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j3IBQrf8015638
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Mon, 18 Apr 2005 13:26:53 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by ptb-relay05.plus.net with esmtp (Exim) id 1DNUOy-0000UH-WD
	for caml-list@yquem.inria.fr; Mon, 18 Apr 2005 12:26:53 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] type of ==
Date: Mon, 18 Apr 2005 12:27:06 +0100
User-Agent: KMail/1.7.1
References: <42637B63.1070608@ifp.fr>
In-Reply-To: <42637B63.1070608@ifp.fr>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200504181227.07108.jon@ffconsultancy.com>
X-Miltered: at nez-perce with ID 4263997D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 christophe:01 bool:01 bool:01 semantics:01 posts:01 ocaml:01 beginners:01 ocaml:01 frog:98 wrote:01 equality:01 equality:01 caml:02 btw:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 

On Monday 18 April 2005 10:18, Christophe DEHLINGER wrote:
> I was recently in a situation where I would have liked to be able to
> test physical equality on terms of possibly different types, but
> couldn't because of =='s 'a -> 'a -> bool type.
> Why isn't its type 'a -> 'b -> bool ? Is there more to the
> implementation of == than a simple physical, asm-level equality test ?
> Is it because of the semantics of == ? If so, is a 'a -> 'b -> bool
> equivalent possible / already existing ?

If there were an "'a -> 'b -> bool" physical equality test, how could it ever 
return "true"?

> I guess something like fun a b 
> -> a == (Obj.magic b) should work, but regular posts on this list have
> gradually scared me off from ever using the obscure Obj module.

Yes, if you're writing self-contained OCaml programs then you should never use 
Obj.

You may find the beginners list more appropriate for these kinds of questions, 
BTW.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

