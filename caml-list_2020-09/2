Return-Path: <florian.angeletti@inria.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 78A2AE016E
	for <caml-list@sympa.inria.fr>; Tue,  1 Sep 2020 16:42:23 +0200 (CEST)
X-IronPort-AV: E=Sophos;i="5.76,359,1592863200"; 
   d="scan'208";a="357814458"
Received: from cadillac.paris.inria.fr (HELO [128.93.64.106]) ([128.93.64.106])
  by mail3-relais-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 01 Sep 2020 16:42:23 +0200
To: caml-list@inria.fr
References: <e9e7fc73-943a-b6e4-7e98-07e30078c7d4@inria.fr>
From: Florian Angeletti <florian.angeletti@inria.fr>
Message-ID: <645ee64e-5ce8-a582-c689-d57338d3be27@inria.fr>
Date: Tue, 1 Sep 2020 16:42:22 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101
 Thunderbird/68.10.0
MIME-Version: 1.0
In-Reply-To: <e9e7fc73-943a-b6e4-7e98-07e30078c7d4@inria.fr>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit
Content-Language: en-US
Subject: [Caml-list] OCaml release 4.11.1

Dear OCaml users,

A serious bug has been discovered last week in OCaml 4.11.0:
explicit polymorphic annotations are checked too permissively.
Some incorrect programs (possibly segfaulting) are accepted
by the compiler in 4.11.0.

Programs accepted by OCaml 4.10 are unchanged.

We are thus releasing OCaml 4.11.1 as an early bugfix version.
You are advised to upgrade to this new version if you were
using OCaml 4.11.0.

It is (or soon will be) available as a set of OPAM switches with
   opam switch create 4.11.1

and as a source download here:
   https://caml.inria.fr/pub/distrib/ocaml-4.11/

This bug was introduced when making polymorphic recursion
easier to use. We are working on making the typechecker
more robust and more exhaustively tested to avoid such
issues in the future.

Happy hacking,

-- Florian Angeletti for the OCaml team.

### Bug fixes:

- #9856, #9857: Prevent polymorphic type annotations from generalizing
   weak polymorphic variables.
   (Leo White, report by Thierry Martinez, review by Jacques Garrigue)

- #9859, #9862: Remove an erroneous assertion when inferred function types
   appear in the right hand side of an explicit :> coercion
   (Florian Angeletti, report by Jerry James, review by Thomas Refis)

