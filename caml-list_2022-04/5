Return-Path: <alan.schmitt@polytechnique.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 283B2E00B8
	for <caml-list@sympa.inria.fr>; Tue, 12 Apr 2022 10:10:48 +0200 (CEST)
Authentication-Results: mail2-relais-roc.national.inria.fr; dkim=none (message not signed) header.i=none
X-Ironport-Dmarc-Check-Result: validskip
X-IronPort-AV: E=Sophos;i="5.90,253,1643670000"; 
   d="scan'208,217";a="31268004"
Received: from set.irisa.fr (HELO set) ([131.254.10.170])
  by mail2-relais-roc.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 12 Apr 2022 10:10:48 +0200
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr
Date: Tue, 12 Apr 2022 10:10:47 +0200
Message-ID: <87lewayb5k.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="=-=-="
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: multipart/alternative; boundary="==-=-="

--==-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: base64

SGVsbG8NCg0KSGVyZSBpcyB0aGUgbGF0ZXN0IE9DYW1sIFdlZWtseSBOZXdzLCBmb3IgdGhlIHdl
ZWsgb2YgQXByaWwgMDUgdG8gMTIsDQoyMDIyLg0KDQpUYWJsZSBvZiBDb250ZW50cw0K4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCkxleGlGaSBp
cyBoaXJpbmchDQpEw6l2ZWxvcHBldXIgcHJpbmNpcGFsIMOgIHBsZWluIHRlbXBzIGQnQWx0LUVy
Z28gY2hleiBPQ2FtbFBybw0KVXNpbmcgYW4gZXh0ZXJuYWwgSmF2YVNjcmlwdCBmaWxlIGluIGpz
X29mX29jYW1sDQpkaXNrdXZib3g6IHNtYWxsIHNldCBvZiBjcm9zcy1wbGF0Zm9ybSBDTEkgdG9v
bHMNCk9sZCBDV04NCg0KDQpMZXhpRmkgaXMgaGlyaW5nIQ0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToNCiAgPGh0dHBzOi8v
ZGlzY3Vzcy5vY2FtbC5vcmcvdC9qb2ItZnVsbHRpbWUtaW50ZXJuc2hpcC1wYXJpcy1sZXhpZmkt
aXMtaGlyaW5nLzk2NDgvMT4NCg0KDQpBbGFpbiBGcmlzY2ggYW5ub3VuY2VkDQrilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAN
Cg0KICDwn5OiIFtMZXhpRmldIGlzIGhpcmluZyENCg0KICDinJTvuI8gU29mdHdhcmUgRW5naW5l
ZXIgKGZ1bGwtdGltZSk6IDxodHRwczovL2xua2QuaW4vZXZoa3hUZz4NCg0KICDinJTvuI8gU29m
dHdhcmUgRGV2ZWxvcG1lbnQgSW50ZXJuc2hpcDogPGh0dHBzOi8vbG5rZC5pbi9nYi1iZERBOT4N
Cg0KICBMZXhpRmkgaXMgYSBzb2Z0d2FyZSBlZGl0b3IsIGJhc2VkIGluIFBhcmlzLiBXZSBoYXZl
IGJlZW4gaGFwcGlseQ0KICB1c2luZyBPQ2FtbCDwn5CqIGZvciBtb3JlIHRoYW4gMjAgeWVhcnMg
aW4gb3VyIGVudGlyZSBzb2Z0d2FyZSBzdGFjaywNCiAgZnJvbSBiYWNrZW5kIGNvbXBvbmVudHMg
dG8gVUkgKHdlYiAmIG5hdGl2ZSkgZnJvbnQtZW5kLCBhbmQgd2UNCiAgY29udHJpYnV0ZSBiYWNr
IHRvIHRoZSBPQ2FtbCBjb21tdW5pdHkgKGNoZWNrIG91dCBvdXIgYmxvZyBwb3N0IDoNCiAgPGh0
dHBzOi8vd3d3LmxleGlmaS5jb20vYmxvZy9vY2FtbC9vY2FtbC1vcGVuLXNvdXJjZS8+KQ0KDQog
IERvbid0IGhlc2l0YXRlIHRvIGNvbnRhY3QgbWUgZGlyZWN0bHkgaWYgeW91IHdhbnQgdG8gbGVh
cm4gbW9yZSBhYm91dA0KICB0aGUgcG9zaXRpb25zIGJlZm9yZSBhcHBseWluZyENCg0KDQpbTGV4
aUZpXSA8aHR0cHM6Ly93d3cubGV4aWZpLmNvbT4NCg0KDQpEw6l2ZWxvcHBldXIgcHJpbmNpcGFs
IMOgIHBsZWluIHRlbXBzIGQnQWx0LUVyZ28gY2hleiBPQ2FtbFBybw0K4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAg
QXJjaGl2ZToNCiAgPGh0dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcvdC9qb2ItZnVsbHRpbWUtcGFy
aXMtZGV2ZWxvcHBldXItcHJpbmNpcGFsLWEtcGxlaW4tdGVtcHMtZGFsdC1lcmdvLWNoZXotb2Nh
bWxwcm8vOTY2MC8xPg0KDQoNCkZhYnJpY2UgTGUgRmVzc2FudCBhbm5vdW5jZWQNCuKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEFsdC1FcmdvIGVzdCBsJ3VuIGRlcyBzb2x2ZXVycyBT
TVQgbGVzIHBsdXMgZWZmaWNhY2VzIHBvdXIgbGENCiAgdsOpcmlmaWNhdGlvbiBmb3JtZWxsZSBk
ZSBjb2RlLiBJbCBlc3QgYWluc2kgdXRpbGlzw6kgZGVycmnDqHJlIGRlcw0KICBhdGVsaWVycyB0
ZWxzIHF1ZSBXaHkzLCBGcmFtYS1DIGV0IFNwYXJrLiBJbml0aWFsZW1lbnQgZMOpdmVsb3Bww6kg
cGFyDQogIFN5bHZhaW4gQ29uY2hvbiBhdSBMUkksIGlsIGVzdCBhdWpvdXJkJ2h1aSBtYWludGVu
dSBwYXIgT0NhbWxQcm8sDQogIGdyw6JjZSBhdXggZmluYW5jZW1lbnRzIGR1IENsdWIgQWx0LUVy
Z28gKEFkYUNvcmUsIFRydXN0LWluLVNvZnQsDQogIFRoYWzDqHMsIE1FUkNFLCBDRUEgTGlzdCks
IMOgIGRlcyBjb250cmF0cyBiaWxhdMOpcmF1eCBkJ8Opdm9sdXRpb24gZXQgw6ANCiAgZGVzIHBy
b2pldHMgY29sbGFib3JhdGlmcy4NCg0KICBPQ2FtbFBybyBzb3VoYWl0ZSBhdWpvdXJkJ2h1aSBy
ZWNydXRlciB1biBkw6l2ZWxvcHBldXIgcHJpbmNpcGFsIMOgDQogIHRlbXBzIHBsZWluIHBvdXIg
QWx0LUVyZ28sIHBvdXIgY29tcGzDqXRlciBzb24gw6lxdWlwZSBtw6l0aG9kZXMNCiAgZm9ybWVs
bGVzIGV0IGFjY8OpbMOpcmVyIGwnw6l2b2x1dGlvbiBkJ0FsdC1FcmdvLiAgRGlzcG9zYW50IGQn
dW5lDQogIGV4cMOpcmllbmNlIGRhbnMgbGVzIG3DqXRob2RlcyBmb3JtZWxsZXMsIHNlcyBtaXNz
aW9ucyBzZXJvbnQgOg0KDQogIOKAoiBkZSBkw6ljb3V2cmlyIGxlIHByb2pldCBBbHQtRXJnbyBl
dCB0b3VzIHNlcyBjb21wb3NhbnRzIChwcm91dmV1ciwNCiAgICBpbnRlcmZhY2UgZ3JhcGhpcXVl
LCBldGMuKSBldCBkJ2VuIGNvbXByZW5kcmUgbGUgZm9uY3Rpb25uZW1lbnQgw6ANCiAgICB0cmF2
ZXJzIGwnZXhwbG9yYXRpb24gZHUgY29kZSBldCBsYSBsZWN0dXJlIGQnYXJ0aWNsZXMNCiAgICBz
Y2llbnRpZmlxdWVzOw0KICDigKIgZCfDqWxhYm9yZXIgbGEgcm9hZG1hcCBkZSBtYWludGVuYW5j
ZSDDqXZvbHV0aXZlIGQnQWx0LUVyZ28sIGVuDQogICAgY29sbGFib3JhdGlvbiBhdmVjIGxlcyBt
ZW1icmVzIGR1IENsdWIgQWx0LUVyZ28sIGV0IGRlIHByb3Bvc2VyIGRlcw0KICAgIGFtw6lsaW9y
YXRpb25zIHF1aSBwb3Vycm9udCDDqnRyZSBmaW5hbmPDqWVzIGF1IHRyYXZlcnMgZGUgY29udHJh
dHMNCiAgICBiaWxhdMOpcmF1eCBvdSBkZSBwcm9qZXRzIGNvbGxhYm9yYXRpZnM7DQogIOKAoiBk
ZSBwYXJ0aWNpcGVyIGF2ZWMgbCfDqXF1aXBlIMOgIGxhIG1haW50ZW5hbmNlIGNvcnJlY3RpdmUg
ZCdBbHQtRXJnbw0KICAgIGV0IGRlIGZvdXJuaXIgZHUgc3VwcG9ydCBhdXggbWVtYnJlcyBkdSBD
bHViIEFsdC1FcmdvOw0KICDigKIgZGUgcGFydGljaXBlciDDoCBsJ2VuY2FkcmVtZW50IGRlIHN0
YWdlcyBldCBkZSB0aMOoc2VzIENJRlJFIGF1dG91cg0KICAgIGQnQWx0LUVyZ28gZXQgZGVzIHNv
bHZldXJzIFNNVCBlbiBnw6luw6lyYWw7DQogIOKAoiBkZSBzdWl2cmUgbCdhY3R1YWxpdMOpIGRl
cyBzb2x2ZXVycyBTTVRzIGV0IGRlcyB0cmF2YXV4IHNjaWVudGlmaXF1ZXMNCiAgICBjb25uZXhl
cywgZXQgZGUgbWFpbnRlbmlyIGRlcyBjb2xsYWJvcmF0aW9ucyBhdmVjIGxlcyBleHBlcnRzDQog
ICAgYWNhZMOpbWlxdWVzIGR1IGRvbWFpbmU7DQoNCiAgSW50w6lncsOpIGF1IHNlaW4gZGUgbCfD
qXF1aXBlIE3DqXRob2RlcyBGb3JtZWxsZXMgZCdPQ2FtbFBybywgaWwNCiAgYsOpbsOpZmljaWVy
YSBkZSBsZXVyIGV4cMOpcmllbmNlIGV0IGxldXIgZmVyYSBiw6luw6lmaWNpZXIgZGUgc29uDQog
IGV4cGVydGlzZSBjcm9pc3NhbnRlIGRhbnMgbCd1dGlsaXNhdGlvbiBkJ0FsdC1FcmdvLiBPdXRy
ZSBsYQ0KICBtYWludGVuYW5jZSBkJ0FsdC1FcmdvLCBsJ8OpcXVpcGUgTcOpdGhvZGVzIEZvcm1l
bGxlcyBkJ09DYW1sUHJvDQogIHBhcnRpY2lwZSDDoCBkaXZlcnNlcyBhY3Rpdml0w6lzOg0KDQog
IOKAoiBEw6l2ZWxvcHBlbWVudCBkJ291dGlscyBvcGVuLXNvdXJjZSBwb3VyIGxlcyBtw6l0aG9k
ZXMgZm9ybWVsbGVzLCB0ZWxzDQogICAgcXVlIERvbG1lbiwgTWF0bGEsIGV0Yy4NCiAg4oCiIEV4
cGVydGlzZXMgc3VyIFdoeU1MLCBUTEEsIENvcSwgZXQgYXV0cmVzIGxhbmdhZ2VzIGRlIHNww6lj
aWZpY2F0aW9uDQogICAgZXQgZGUgdsOpcmlmaWNhdGlvbjsNCiAg4oCiIENlcnRpZmljYXRpb24g
ZGUgbG9naWNpZWxzIHBvdXIgbGVzIENyaXTDqHJlcyBDb21tdW5zIChFQUw2IGV0IHBsdXMpDQog
IOKAoiBTcMOpY2lmaWNhdGlvbiBldCB2w6lyaWZpY2F0aW9uIGZvcm1lbGxlIGRlIHNtYXJ0IGNv
bnRyYWN0cyAoU29saWRpdHksDQogICAgZXRjLikNCg0KICBMZXMgYnVyZWF1eCBkJ09DYW1sUHJv
IHNvbnQgZGFucyBsZSAxNMOobWUgYXJyb25kaXNzZW1lbnQgZGUgUGFyaXMNCiAgKEFsw6lzaWEp
LiBMJ2VudHJlcHJpc2UgZXN0IGNvbm51ZSBwb3VyIHNvbiDDqXF1aXBlIHN5bXBhdGhpcXVlLCBz
b24NCiAgZXhjZWxsZW5jZSB0ZWNobmlxdWUsIHNhIHByb2R1Y3Rpdml0w6ksIHNlcyB2YWxldXJz
IGV0IHNvbiDDqXRoaXF1ZS4NCg0KICBTaSBjZSBwb3N0ZSB2b3VzIGludMOpcmVzc2UsIG4naMOp
c2l0ZXogcGFzIMOgIGVudm95ZXIgdm90cmUgQ1Ygw6A6DQoNCiAgY29udGFjdEBvY2FtbHByby5j
b20NCg0KICBQb3VyIHBsdXMgZCdpbmZvcm1hdGlvbnMgc3VyIE9DYW1sUHJvOg0KDQogIDxodHRw
czovL3d3dy5vY2FtbHByby5jb20vPg0KDQogIFBvdXIgcGx1cyBkJ2luZm9ybWF0aW9ucyBzdXIg
QWx0LUVyZ286DQoNCiAgPGh0dHBzOi8vYWx0LWVyZ28ub2NhbWxwcm8uY29tLz4NCg0KICBQb3Vy
IHBsdXMgZCdpbmZvcm1hdGlvbnMgc3VyIGxlIENsdWIgQWx0LUVyZ286DQoNCiAgPGh0dHBzOi8v
d3d3Lm9jYW1scHJvLmNvbS9jbHViLWFsdC1lcmdvPg0KDQoNClVzaW5nIGFuIGV4dGVybmFsIEph
dmFTY3JpcHQgZmlsZSBpbiBqc19vZl9vY2FtbA0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQDQoNCiAgQXJjaGl2ZToNCiAgPGh0dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcvdC91c2luZy1h
bi1leHRlcm5hbC1qYXZhc2NyaXB0LWZpbGUtaW4tanMtb2Ytb2NhbWwvOTY2MS8xPg0KDQoNCkpv
aG4gV2hpdGluZ3RvbiBhc2tlZA0K4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCiAgSSBhbSBhIGJlZ2lubmVyIGF0IGJvdGgg
SmF2YXNjcmlwdCBhbmQgYGpzX29mX29jYW1sJywgc28gSSBtYXkgYmUNCiAgbWl4aW5nIHVwIGFs
bCBzb3J0cyBvZiBtaXN0YWtlcyBhbmQgbWlzY29uY2VwdGlvbnMgaGVyZS4NCg0KICBJIGhhdmUg
Y29tcGlsZWQgdXAgYW4gZXhpc3RpbmcgcHJvamVjdCwgbXkgY29tbWFuZCBsaW5lIFBERiB0b29s
cywNCiAgdXNpbmcgYGpzX29mX29jYW1sJywgYW5kIGFsbCBpcyB3ZWxsOg0KDQogIOKUjOKUgOKU
gOKUgOKUgA0KICDilIIgJCBub2RlIGNwZGYuanMgLWluZm8gaGVsbG8ucGRmDQogIOKUgiBFbmNy
eXB0aW9uOiBOb3QgZW5jcnlwdGVkDQogIOKUgiBQZXJtaXNzaW9uczoNCiAg4pSCIExpbmVhcml6
ZWQ6IGZhbHNlDQogIOKUgiBWZXJzaW9uOiAxLjENCiAg4pSCIFBhZ2VzOiAxDQogIOKUlOKUgOKU
gOKUgOKUgA0KDQogIExpa2UgbWFnaWMhIEJ1dCBJIGhhZCB0byBjb21tZW50IG91dCB0aGUgcGFy
dHMgb2YgbXkgY29kZSB3aGljaCB1c2UNCiAgZXh0ZXJuYWwgQyBjb2RlIG9mIGNvdXJzZSAtIHRo
YXQgaXMgemxpYiBhbmQgc29tZSBlbmNyeXB0aW9uDQogIHByaW1pdGl2ZXMuIFNvIG5vdyBJIHdp
c2ggdG8gYmluZCBqYXZhc2NyaXB0IGxpYnJhcmllcyBmb3IgdGhvc2UuIEkgYW0NCiAgZXhwZXJp
bWVudGluZyB3aXRoIGEgc2ltcGxlIGxpYnJhcnkgb2YgbXkgb3duLCBmaXJzdCwgd2hpY2ggaXMg
Z2l2ZW4NCiAgb24gdGhlIGNvbW1hbmQgbGluZSB0byBganNfb2Zfb2NhbWwnIGFzIGBmb29tb2Qu
anMnOg0KDQogIOKUjOKUgOKUgOKUgOKUgA0KICDilIIgZm9vID0gNDI7DQogIOKUlOKUgOKUgOKU
gOKUgA0KDQogIEkgY2FuIGdldCB0byB0aGlzIGdsb2JhbCB2YXJpYWJsZSBlYXNpbHkgZnJvbSBP
Q2FtbDoNCg0KICDilIzilIDilIDilIDilIANCiAg4pSCIGxldCBmb28gPSBKcy5VbnNhZmUuZ2xv
YmFsIyMuZm9vDQogIOKUlOKUgOKUgOKUgOKUgA0KDQogIEJ1dCBub3cgSSB3YW50IHRvIGRvIHRo
aW5ncyBiZXR0ZXIsIGFuZCBJIGNoYW5nZSBgZm9vbW9kLmpzJyB0bzoNCg0KICDilIzilIDilIDi
lIDilIANCiAg4pSCIGV4cG9ydHMuZm9vID0gNDI7DQogIOKUlOKUgOKUgOKUgOKUgA0KDQogIEhv
dyBjYW4gSSBnZXQgdG8gdGhhdD8gR2l2aW5nIGBmb29tb2QuanMnIG9uIHRoZSBganNfb2Zfb2Nh
bWwnIGNvbW1hbmQNCiAgbGluZSBpbmNsdWRlcyB0aGUgY29udGVudHMgb2YgYGZvb21vZC5qcycg
aW4gc29tZSB3YXksIGJ1dCBkb2VzIG5vdA0KICBjb250YWluIHRoZSBzdHJpbmcgYGZvb21vZCcs
IHNvIEknbSBub3Qgc3VyZSBob3cgdG8gZ2V0IHRvIHRoZQ0KICBmb29tb2QncyB2YXJpYWJsZXMg
YW5kIGZ1bmN0aW9ucy4gSG93IHRvIEkgYWNjZXNzIHRoZW0/IEluIHRoZSBub2RlDQogIFJFUEws
IEkgY2FuIHNpbXBseSBkbzoNCg0KICDilIzilIDilIDilIDilIANCiAg4pSCID4gZm9vbW9kID0g
cmVxdWlyZSgnLi9mb29tb2QuanMnKTsNCiAg4pSCIHsgZm9vOyA0MiB9DQogIOKUgiA+IGZvb21v
ZC5mb287DQogIOKUgiA0Mg0KICDilJTilIDilIDilIDilIANCg0KICBJIGhhdmUgcmVhZCB0aGUg
YGpzX29mX29jYW1sJyBoZWxwIHBhZ2Ugb24gaG93IHRvIGJpbmQgSlMgbW9kdWxlczoNCg0KICA8
aHR0cHM6Ly9vY3NpZ2VuLm9yZy9qc19vZl9vY2FtbC9sYXRlc3QvbWFudWFsL2JpbmRpbmdzPg0K
DQogIEkgaW1hZ2luZSBpZiBJIGNvdWxkIGdldCBvdmVyIHRoaXMgaHVtcCwgYWxsIHRoZSByZXN0
IG9mIHRoZQ0KICBpbmZvcm1hdGlvbiBJIG5lZWQgd2lsbCBiZSB0aGVyZS4NCg0KDQpOaWNvbMOh
cyBPamVkYSBCw6RyIHJlcGxpZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIE5vdCBleGFjdGx5
IHdoYXQgeW91IGFza2VkLCBidXQgaWYgeW91IGp1c3Qgd2FudCB0byBwcm92aWRlIGEgSlMNCiAg
dmVyc2lvbiBvZiBzb21lIEMgcHJpbWl0aXZlDQoNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiBl
eHRlcm5hbCBmb28gOiB1bml0IC0+IGludCA9ICJjYW1sX2ZvbyINCiAg4pSU4pSA4pSA4pSA4pSA
DQoNCiAgeW91IGNhbiBkbyB0aGlzIGJ5IHdyaXRpbmcgdGhlIGZvbGxvd2luZyBpbiB5b3VyIGAu
anMnIGZpbGU6DQoNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiAvL1Byb3ZpZGVzOiBjYW1sX2Zv
bw0KICDilIIgZnVuY3Rpb24gY2FtbF9mb28oKSB7DQogIOKUgiAgIHJldHVybiA0MjsNCiAg4pSC
IH0NCiAg4pSU4pSA4pSA4pSA4pSADQoNCiAgVGhlbiBganNfb2Zfb2NhbWwnIHdpbGwgYXV0b21h
dGljYWxseSByZXBsYWNlIGNhbGxzIHRvIHRoZSBleHRlcm5hbA0KICBmdW5jdGlvbiBieSBhIGNh
bGwgdG8gaXRzIEpTIGltcGxlbWVudGF0aW9uLg0KDQogIFRoaXMgaXMgdGhlIHNhbWUgbWVjaGFu
aXNtIHVzZWQgYnkgYGpzX29mX29jYW1sJyB0byBpbXBsZW1lbnQgaXRzIG93bg0KICBKUyB2ZXJz
aW9uIG9mIHRoZSBPQ2FtbCBydW50aW1lLCBzZWUgZWcNCg0KICA8aHR0cHM6Ly9naXRodWIuY29t
L29jc2lnZW4vanNfb2Zfb2NhbWwvYmxvYi8zODUwYTY3YjFjYjAwY2ZkMmVlNDM5OWNmMWUyOTQ4
MDYyODg0YjkyL3J1bnRpbWUvYmlnYXJyYXkuanMjTDMyOC1MMzM1Pg0KDQoNCmRpc2t1dmJveDog
c21hbGwgc2V0IG9mIGNyb3NzLXBsYXRmb3JtIENMSSB0b29scw0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToNCiAgPGh0dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcv
dC9hbm4tZGlza3V2Ym94LXNtYWxsLXNldC1vZi1jcm9zcy1wbGF0Zm9ybS1jbGktdG9vbHMvOTY2
My8xPg0KDQoNCmpiZWNrZm9yZCBhbm5vdW5jZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogICpUTERSKjoNCiAg4pSM4pSA4pSA
4pSA4pSADQogIOKUgiAkIG9wYW0gdXBkYXRlDQogIOKUgiAkIG9wYW0gaW5zdGFsbCBkaXNrdXZi
b3gNCiAg4pSCIA0KICDilIIgJCBkaXNrdXZib3ggY29weS1kaXIgLS1tb2RlIDc1NSBzcmMxLyBz
cmMyLyBkZXN0Lw0KICDilIIgJCBkaXNrdXZib3ggY29weS1maWxlIC0tbW9kZSA0MDAgc3JjL2Eg
ZGVzdC9iDQogIOKUgiAkIGRpc2t1dmJveCBjb3B5LWZpbGUtaW50byBzcmMxL2Egc3JjMi9iIGRl
c3QvDQogIOKUgiAkIGRpc2t1dmJveCB0b3VjaC1maWxlIHgveS96DQogIOKUgiANCiAg4pSCICQg
ZGlza3V2Ym94IGZpbmQtdXAgLiBfYnVpbGQNCiAg4pSCIFo6L3NvdXJjZS9fYnVpbGQNCiAg4pSC
IA0KICDilIIgJCBkaXNrdXZib3ggdHJlZSAtLW1heC1kZXB0aCAyIC0tZW5jb2Rpbmc9VVRGLTgg
Lg0KICDilIIgLg0KICDilIIg4pSc4pSA4pSAIENIQU5HRVMubWQNCiAg4pSCIOKUnOKUgOKUgCBS
RUFETUUubWQNCiAg4pSCIOKUnOKUgOKUgCBfYnVpbGQvDQogIOKUgiDilIIgICDilJzilIDilIAg
ZGVmYXVsdC8NCiAg4pSCIOKUgiAgIOKUnOKUgOKUgCBpbnN0YWxsLw0KICDilIIg4pSCICAg4pSU
4pSA4pSAIGxvZw0KICDilJTilIDilIDilIDilIANCg0KICAqUHJvYmxlbSo6IFdoZW4gd3JpdGlu
ZyBjcmFtIHRlc3RzLCBEdW5lIHJ1bGVzIGFuZCBPcGFtIGJ1aWxkIHN0ZXBzLA0KICBvZnRlbiB3
ZSBkZWZhdWx0IHRvIHVzaW5nIEdOVSBiaW5hcmllcyAoYC91c3IvYmluLyonKSBhdmFpbGFibGUg
b24NCiAgTGludXggKGV4LiBgL3Vzci9iaW4vY3AgLVInKS4gVW5mb3J0dW5hdGVseSB0aGVzZSBj
b21tYW5kcyByYXJlbHkgd29yaw0KICBvbiBXaW5kb3dzLCBhbmQgYXMgYSBjb25zZXF1ZW5jZSBX
aW5kb3dzIE9DYW1sIGRldmVsb3BlcnMgYXJlIGZvcmNlZA0KICB0byBtYWludGFpbiBDeWd3aW4g
b3IgTVNZUzIgaW5zdGFsbGF0aW9ucyB0byBnZXQgR05VIHRvb2xpbmcuDQoNCiAgKlNvbHV0aW9u
KjogUHJvdmlkZSBzb21lIG9mIHRoZSBzYW1lIGZ1bmN0aW9uYWxpdHkgZm9yIFdpbmRvd3MgYW5k
DQogIG1hY09TIHRoYXQgdGhlIEdOVSBiaW5hcmllcyBpbiBgL3Vzci9iaW4vKicgZG8gaW4gTGlu
dXguDQoNCiAgYGRpc2t1dmJveCcgaXMgYSBzaW5nbGUgYmluYXJ5IHRoYXQgdG9kYXkgcHJvdmlk
ZXMgYW4gYW5hbG9nIGZvciBhDQogIHZlcnkgc21hbGwgbnVtYmVyIG9mIGJpbmFyaWVzIHRoYXQg
SSBoYXZlIG5lZWRlZCBpbiB0aGUgRGlza3V2IFdpbmRvd3MNCiAgT0NhbWwgZGlzdHJpYnV0aW9u
LiBJdCBpcyBsaWJlcmFsbHkgbGljZW5zZWQgdW5kZXIgQXBhY2hlIHYyLjAuICpXaXRoDQogIHlv
dXIgUFJzIGl0IGNvdWxkIGVtdWxhdGUgbXVjaCBtb3JlISoNCg0KICBgZGlza3V2Ym94JyBoYXMg
Q0kgdGVzdGluZyBmb3IgV2luZG93cywgbWFjT1MgYW5kIExpbnV4LiBVc2FnZSBhbmQNCiAgaGVs
cCBhcmUgYXZhaWxhYmxlIGluIHRoZSBkaXNrdXZib3ggUkVBRE1FOg0KICA8aHR0cHM6Ly9naXRo
dWIuY29tL2Rpc2t1di9kaXNrdXZib3gjZGlza3V2LWJveD4NCg0KICAqYGRpc2t1dmJveCcgYWxz
byBoYXMgYSBPQ2FtbCBsaWJyYXJ5LCBidXQgY29uc2lkZXIgdGhlIEFQSSB1bnN0YWJsZQ0KICAg
dW50aWwgdmVyc2lvbiAxLjAuKg0KDQogIEFsdGVybmF0aXZlczoNCiAg4oCiIFRoZXJlIGFyZSBz
b21lIHNoZWxsIHNjcmlwdGluZyB0b29scyBsaWtlIFtzaGV4cF0gYW5kIFtmZWF0aGVyXSB0aGF0
DQogICAgZ2l2ZSB5b3UgUE9TSVggcGlwZXMgaW4gT0NhbWwtZnJpZW5kbHkgc3ludGF4LiBJIGZl
ZWwgdGhlc2UNCiAgICBjb21wbGVtZW50IERpc2t1diBCb3guDQogIOKAoiBEdW5lIGV4cG9zZXMg
YChjb3B5KScgdG8gY29weSBhIGZpbGUgaW4gRHVuZSBydWxlczsgdGhlb3JldGljYWxseQ0KICAg
IG1vcmUgb3BlcmF0aW9ucyBjb3VsZCBiZSBhZGRlZC4NCg0KICBJbnRlcm5hbGx5IGBkaXNrdXZi
b3gnIGlzIGEgd3JhcHBlciBvbiB0aGUgZXhjZWxsZW50IFtib3MgLSBCYXNpYyBPUw0KICBpbnRl
cmFjdGlvbl0gbGlicmFyeS4NCg0KDQpbc2hleHBdIDxodHRwczovL2dpdGh1Yi5jb20vamFuZXN0
cmVldC9zaGV4cD4NCg0KW2ZlYXRoZXJdIDxodHRwczovL2dpdGh1Yi5jb20vY2hhcmxlc2V0Yy9m
ZWF0aGVyPg0KDQpbYm9zIC0gQmFzaWMgT1MgaW50ZXJhY3Rpb25dDQo8aHR0cHM6Ly9lcnJhdGlx
dWUuY2gvc29mdHdhcmUvYm9zL2RvYy9Cb3MvaW5kZXguaHRtbD4NCg0KQWNrbm93bGVkZ2VtZW50
cw0K4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWMDQoNCiAg
VGhlIGZpcnN0IGltcGxlbWVudGF0aW9ucyBvZiBEaXNrdXYgQm94IHdlcmUgaW1wbGVtZW50ZWQg
d2l0aCB0aGUNCiAgYXNzaXN0YW5jZSBvZiB0aGUgW09DYW1sIFNvZnR3YXJlIEZvdW5kYXRpb24g
KE9DU0YpXSwgYSBzdWItZm91bmRhdGlvbg0KICBvZiB0aGUgW0lOUklBIEZvdW5kYXRpb25dLg0K
DQogIFR3byBPQ2FtbCBsaWJyYXJpZXMgKFtib3NdIGFuZCBbY21kbGluZXJdKSBhcmUgZXNzZW50
aWFsIHRvIERpc2t1dg0KICBCb3g7IHRoZXNlIGxpYnJhcmllcyB3ZXJlIGNyZWF0ZWQgYnkgW0Rh
bmllbCBCw7xuemxpXSAoQGRidWVuemxpKSAuDQoNCg0KW09DYW1sIFNvZnR3YXJlIEZvdW5kYXRp
b24gKE9DU0YpXSA8aHR0cDovL29jYW1sLXNmLm9yZz4NCg0KW0lOUklBIEZvdW5kYXRpb25dIDxo
dHRwczovL3d3dy5pbnJpYS5mcj4NCg0KW2Jvc10gPGh0dHBzOi8vZXJyYXRpcXVlLmNoL3NvZnR3
YXJlL2Jvcz4NCg0KW2NtZGxpbmVyXSA8aHR0cHM6Ly9lcnJhdGlxdWUuY2gvc29mdHdhcmUvY21k
bGluZXI+DQoNCltEYW5pZWwgQsO8bnpsaV0gPGh0dHBzOi8vZXJyYXRpcXVlLmNoL3Byb2ZpbGU+
DQoNCg0KRXhhbXBsZXMNCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjA0KDQogIFRoZSBmb2xsb3dp
bmcgYXJlIGV4YW1wbGVzIHRoYXQgaGF2ZSBiZWVuIGNvbmRlbnNlZCBmcm9tIHRoZQ0KICBbZGlz
a3V2Ym94IFJFQURNRS5tZF0g4oCmDQoNCg0KW2Rpc2t1dmJveCBSRUFETUUubWRdIDxodHRwczov
L2dpdGh1Yi5jb20vZGlza3V2L2Rpc2t1dmJveCNkaXNrdXYtYm94Pg0KDQpVc2luZyBpbiBEdW5l
IGNyYW0gdGVzdHMNCuKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKU
hOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhA0KDQogIOKUjOKUgOKUgOKUgOKUgA0KICDilIIg
JCBpbnN0YWxsIC1kIGEvYi9jL2QvZS9mDQogIOKUgiAkIGluc3RhbGwgLWQgYS9iMi9jMi9kMi9l
Mi9mMg0KICDilIIgJCBpbnN0YWxsIC1kIGEvYjIvYzMvZDMvZTMvZjMNCiAg4pSCICQgaW5zdGFs
bCAtZCBhL2IyL2MzL2Q0L2U0L2Y0DQogIOKUgiAkIGluc3RhbGwgLWQgYS9iMi9jMy9kNC9lNS9m
NQ0KICDilIIgJCBpbnN0YWxsIC1kIGEvYjIvYzMvZDQvZTUvZjYNCiAg4pSCICQgdG91Y2ggYS9i
L3gNCiAg4pSCICQgdG91Y2ggYS9iL2MveQ0KICDilIIgJCB0b3VjaCBhL2IvYy9kL3oNCiAg4pSC
IA0KICDilIIgJCBkaXNrdXZib3ggdHJlZSBhIC0tbWF4LWRlcHRoIDEwIC0tZW5jb2RpbmcgVVRG
LTgNCiAg4pSCIGENCiAg4pSCIOKUnOKUgOKUgCBiLw0KICDilIIg4pSCICAg4pSc4pSA4pSAIGMv
DQogIOKUgiDilIIgICDilIIgICDilJzilIDilIAgZC8NCiAg4pSCIOKUgiAgIOKUgiAgIOKUgiAg
IOKUnOKUgOKUgCBlLw0KICDilIIg4pSCICAg4pSCICAg4pSCICAg4pSCICAg4pSU4pSA4pSAIGYv
DQogIOKUgiDilIIgICDilIIgICDilIIgICDilJTilIDilIAgeg0KICDilIIg4pSCICAg4pSCICAg
4pSU4pSA4pSAIHkNCiAg4pSCIOKUgiAgIOKUlOKUgOKUgCB4DQogIOKUgiDilJTilIDilIAgYjIv
DQogIOKUgiAgICAg4pSc4pSA4pSAIGMyLw0KICDilIIgICAgIOKUgiAgIOKUlOKUgOKUgCBkMi8N
CiAg4pSCICAgICDilIIgICAgICAg4pSU4pSA4pSAIGUyLw0KICDilIIgICAgIOKUgiAgICAgICAg
ICAg4pSU4pSA4pSAIGYyLw0KICDilIIgICAgIOKUlOKUgOKUgCBjMy8NCiAg4pSCICAgICAgICAg
4pSc4pSA4pSAIGQzLw0KICDilIIgICAgICAgICDilIIgICDilJTilIDilIAgZTMvDQogIOKUgiAg
ICAgICAgIOKUgiAgICAgICDilJTilIDilIAgZjMvDQogIOKUgiAgICAgICAgIOKUlOKUgOKUgCBk
NC8NCiAg4pSCICAgICAgICAgICAgIOKUnOKUgOKUgCBlNC8NCiAg4pSCICAgICAgICAgICAgIOKU
giAgIOKUlOKUgOKUgCBmNC8NCiAg4pSCICAgICAgICAgICAgIOKUlOKUgOKUgCBlNS8NCiAg4pSC
ICAgICAgICAgICAgICAgICDilJzilIDilIAgZjUvDQogIOKUgiAgICAgICAgICAgICAgICAg4pSU
4pSA4pSAIGY2Lw0KICDilJTilIDilIDilIDilIANCg0KDQpVc2luZyBpbiBPcGFtIGBidWlsZCcg
c3RlcHMNCuKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKU
hOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhA0KDQogIOKUjOKUgOKUgOKUgOKUgA0KICDi
lIIgYnVpbGQ6IFsNCiAg4pSCICAgWyJkaXNrdXZib3giICJjb3B5LWZpbGUtaW50byIgImFzc2V0
cy9pY29uLnBuZyIgImFzc2V0cy9wdWJsaWMuZ3BnIiAiJXtfOnNoYXJlfSUiXQ0KICDilIIgXQ0K
ICDilJTilIDilIDilIDilIANCg0KDQpVc2luZyBpbiBEdW5lIHJ1bGVzDQrilITilITilITilITi
lITilITilITilITilITilITilITilITilITilITilITilITilITilITilIQNCg0KICDilIzilIDi
lIDilIDilIANCiAg4pSCIChydWxlDQogIOKUgiAgKHRhcmdldHMgZGlza3V2Ym94LmNvcnJlY3Rl
ZC5tbCBkaXNrdXZib3guY29ycmVjdGVkLm1saSkNCiAg4pSCICAoZGVwcw0KICDilIIgICAoOmxp
Y2Vuc2UgJXtwcm9qZWN0X3Jvb3R9L2V0Yy9saWNlbnNlLWhlYWRlci50eHQpDQogIOKUgiAgICg6
Y29uZiAgICAle3Byb2plY3Rfcm9vdH0vZXRjL2hlYWRhY2hlLmNvbmYpKQ0KICDilIIgIChhY3Rp
b24NCiAg4pSCICAgKHByb2duDQogIOKUgiAgICAocnVuIGRpc2t1dmJveCBjb3B5LWZpbGUgLW0g
NjQ0IGRpc2t1dmJveC5tbCAgZGlza3V2Ym94LmNvcnJlY3RlZC5tbCkNCiAg4pSCICAgIChydW4g
ZGlza3V2Ym94IGNvcHktZmlsZSAtbSA2NDQgZGlza3V2Ym94Lm1saSBkaXNrdXZib3guY29ycmVj
dGVkLm1saSkNCiAg4pSCICAgIChydW4gaGVhZGFjaGUgLWggJXtsaWNlbnNlfSAtYyAle2NvbmZ9
ICV7dGFyZ2V0c30pDQogIOKUgiAgICAocnVuIG9jYW1sZm9ybWF0IC0taW5wbGFjZSAtLWRpc2Fi
bGUtY29uZi1maWxlcyAtLWVuYWJsZS1vdXRzaWRlLWRldGVjdGVkLXByb2plY3QgJXt0YXJnZXRz
fSkpKSkNCiAg4pSU4pSA4pSA4pSA4pSADQoNCg0KT2xkIENXTg0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQDQoNCiAgSWYgeW91IGhhcHBlbiB0byBtaXNzIGEgQ1dOLCB5b3UgY2FuIFtzZW5kIG1lIGEg
bWVzc2FnZV0gYW5kIEknbGwgbWFpbA0KICBpdCB0byB5b3UsIG9yIGdvIHRha2UgYSBsb29rIGF0
IFt0aGUgYXJjaGl2ZV0gb3IgdGhlIFtSU1MgZmVlZCBvZiB0aGUNCiAgYXJjaGl2ZXNdLg0KDQog
IElmIHlvdSBhbHNvIHdpc2ggdG8gcmVjZWl2ZSBpdCBldmVyeSB3ZWVrIGJ5IG1haWwsIHlvdSBt
YXkgc3Vic2NyaWJlDQogIFtvbmxpbmVdLg0KDQogIFtBbGFuIFNjaG1pdHRdDQoNCg0KW3NlbmQg
bWUgYSBtZXNzYWdlXSA8bWFpbHRvOmFsYW4uc2NobWl0dEBwb2x5dGVjaG5pcXVlLm9yZz4NCg0K
W3RoZSBhcmNoaXZlXSA8aHR0cHM6Ly9hbGFuLnBldGl0ZXBvbW1lLm5ldC9jd24vPg0KDQpbUlNT
IGZlZWQgb2YgdGhlIGFyY2hpdmVzXSA8aHR0cHM6Ly9hbGFuLnBldGl0ZXBvbW1lLm5ldC9jd24v
Y3duLnJzcz4NCg0KW29ubGluZV0gPGh0dHA6Ly9saXN0cy5pZHlsbC5vcmcvbGlzdGluZm8vY2Ft
bC1uZXdzLXdlZWtseS8+DQoNCltBbGFuIFNjaG1pdHRdIDxodHRwczovL2FsYW4ucGV0aXRlcG9t
bWUubmV0Lz4NCg0K
--==-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2022-04-12 Tue 10:08 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org Mode" />
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
</head>
<body>
<div id=3D"content" class=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2022.04.05.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2022.04.19.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of April 05 to 12, 2022.
</p>

<div id=3D"table-of-contents" role=3D"doc-toc">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents" role=3D"doc-toc">
<ul>
<li><a href=3D"#1">LexiFi is hiring!</a></li>
<li><a href=3D"#2">D=C3=A9veloppeur principal =C3=A0 plein temps d'Alt-Ergo=
 chez OCamlPro</a></li>
<li><a href=3D"#3">Using an external JavaScript file in js_of_ocaml</a></li>
<li><a href=3D"#4">diskuvbox: small set of cross-platform CLI tools</a></li>
<li><a href=3D"#org791d15a">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-1" class=3D"outline-2">
<h2 id=3D"1">LexiFi is hiring!</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/job-fulltime-internship-par=
is-lexifi-is-hiring/9648/1">https://discuss.ocaml.org/t/job-fulltime-intern=
ship-paris-lexifi-is-hiring/9648/1</a>
</p>
</div>

<div id=3D"outline-container-org219e51a" class=3D"outline-3">
<h3 id=3D"org219e51a">Alain Frisch announced</h3>
<div class=3D"outline-text-3" id=3D"text-org219e51a">
<p>
=F0=9F=93=A2 <a href=3D"https://www.lexifi.com">LexiFi</a> is hiring!
</p>

<p>
=E2=9C=94=EF=B8=8F Software Engineer (full-time): <a href=3D"https://lnkd.i=
n/evhkxTg">https://lnkd.in/evhkxTg</a>
</p>

<p>
=E2=9C=94=EF=B8=8F Software Development Internship: <a href=3D"https://lnkd=
.in/gb-bdDA9">https://lnkd.in/gb-bdDA9</a>
</p>

<p>
LexiFi is a software editor, based in Paris. We have been happily using OCa=
ml =F0=9F=90=AA for more than 20 years in our entire
software stack, from backend components to UI (web &amp; native) front-end,=
 and we contribute back to the OCaml community
(check out our blog post : <a href=3D"https://www.lexifi.com/blog/ocaml/oca=
ml-open-source/">https://www.lexifi.com/blog/ocaml/ocaml-open-source/</a>)
</p>

<p>
Don't hesitate to contact me directly if you want to learn more about the p=
ositions before applying!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-2" class=3D"outline-2">
<h2 id=3D"2">D=C3=A9veloppeur principal =C3=A0 plein temps d'Alt-Ergo chez =
OCamlPro</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/job-fulltime-paris-developp=
eur-principal-a-plein-temps-dalt-ergo-chez-ocamlpro/9660/1">https://discuss=
.ocaml.org/t/job-fulltime-paris-developpeur-principal-a-plein-temps-dalt-er=
go-chez-ocamlpro/9660/1</a>
</p>
</div>

<div id=3D"outline-container-org458b3e0" class=3D"outline-3">
<h3 id=3D"org458b3e0">Fabrice Le Fessant announced</h3>
<div class=3D"outline-text-3" id=3D"text-org458b3e0">
<p>
Alt-Ergo est l'un des solveurs SMT les plus efficaces pour la v=C3=A9rifica=
tion formelle de code. Il est ainsi utilis=C3=A9
derri=C3=A8re des ateliers tels que Why3, Frama-C et Spark. Initialement d=
=C3=A9velopp=C3=A9 par Sylvain Conchon au LRI, il est
aujourd'hui maintenu par OCamlPro, gr=C3=A2ce aux financements du Club Alt-=
Ergo (AdaCore, Trust-in-Soft, Thal=C3=A8s, MERCE,
CEA List), =C3=A0 des contrats bilat=C3=A9raux d'=C3=A9volution et =C3=A0 d=
es projets collaboratifs.
</p>

<p>
OCamlPro souhaite aujourd'hui recruter un d=C3=A9veloppeur principal =C3=A0=
 temps plein pour Alt-Ergo, pour compl=C3=A9ter son
=C3=A9quipe m=C3=A9thodes formelles et acc=C3=A9l=C3=A9rer l'=C3=A9volution=
 d'Alt-Ergo.  Disposant d'une exp=C3=A9rience dans les m=C3=A9thodes
formelles, ses missions seront :
</p>

<ul class=3D"org-ul">
<li>de d=C3=A9couvrir le projet Alt-Ergo et tous ses composants (prouveur, =
interface graphique, etc.) et d'en comprendre le fonctionnement =C3=A0 trav=
ers l'exploration du code et la lecture d'articles scientifiques;</li>
<li>d'=C3=A9laborer la roadmap de maintenance =C3=A9volutive d'Alt-Ergo, en=
 collaboration avec les membres du Club Alt-Ergo, et de proposer des am=C3=
=A9liorations qui pourront =C3=AAtre financ=C3=A9es au travers de contrats =
bilat=C3=A9raux ou de projets collaboratifs;</li>
<li>de participer avec l'=C3=A9quipe =C3=A0 la maintenance corrective d'Alt=
-Ergo et de fournir du support aux membres du Club Alt-Ergo;</li>
<li>de participer =C3=A0 l'encadrement de stages et de th=C3=A8ses CIFRE au=
tour d'Alt-Ergo et des solveurs SMT en g=C3=A9n=C3=A9ral;</li>
<li>de suivre l'actualit=C3=A9 des solveurs SMTs et des travaux scientifiqu=
es connexes, et de maintenir des collaborations avec les experts acad=C3=A9=
miques du domaine;</li>
</ul>

<p>
Int=C3=A9gr=C3=A9 au sein de l'=C3=A9quipe M=C3=A9thodes Formelles d'OCamlP=
ro, il b=C3=A9n=C3=A9ficiera de leur exp=C3=A9rience et leur fera b=C3=A9n=
=C3=A9ficier
de son expertise croissante dans l'utilisation d'Alt-Ergo. Outre la mainten=
ance d'Alt-Ergo, l'=C3=A9quipe M=C3=A9thodes
Formelles d'OCamlPro participe =C3=A0 diverses activit=C3=A9s:
</p>

<ul class=3D"org-ul">
<li>D=C3=A9veloppement d'outils open-source pour les m=C3=A9thodes formelle=
s, tels que Dolmen, Matla, etc.</li>
<li>Expertises sur WhyML, TLA, Coq, et autres langages de sp=C3=A9cificatio=
n et de v=C3=A9rification;</li>
<li>Certification de logiciels pour les Crit=C3=A8res Communs (EAL6 et plus=
)</li>
<li>Sp=C3=A9cification et v=C3=A9rification formelle de smart contracts (So=
lidity, etc.)</li>
</ul>

<p>
Les bureaux d'OCamlPro sont dans le 14=C3=A8me arrondissement de Paris (Al=
=C3=A9sia). L'entreprise est connue pour son =C3=A9quipe
sympathique, son excellence technique, sa productivit=C3=A9, ses valeurs et=
 son =C3=A9thique.
</p>

<p>
Si ce poste vous int=C3=A9resse, n'h=C3=A9sitez pas =C3=A0 envoyer votre CV=
 =C3=A0:
</p>

<p>
contact@ocamlpro.com
</p>

<p>
Pour plus d'informations sur OCamlPro:
</p>

<p>
<a href=3D"https://www.ocamlpro.com/">https://www.ocamlpro.com/</a>
</p>

<p>
Pour plus d'informations sur Alt-Ergo:
</p>

<p>
<a href=3D"https://alt-ergo.ocamlpro.com/">https://alt-ergo.ocamlpro.com/</=
a>
</p>

<p>
Pour plus d'informations sur le Club Alt-Ergo:
</p>

<p>
<a href=3D"https://www.ocamlpro.com/club-alt-ergo">https://www.ocamlpro.com=
/club-alt-ergo</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-3" class=3D"outline-2">
<h2 id=3D"3">Using an external JavaScript file in js_of_ocaml</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/using-an-external-javascrip=
t-file-in-js-of-ocaml/9661/1">https://discuss.ocaml.org/t/using-an-external=
-javascript-file-in-js-of-ocaml/9661/1</a>
</p>
</div>

<div id=3D"outline-container-orgd47ae08" class=3D"outline-3">
<h3 id=3D"orgd47ae08">John Whitington asked</h3>
<div class=3D"outline-text-3" id=3D"text-orgd47ae08">
<p>
I am a beginner at both Javascript and <code>js_of_ocaml</code>, so I may b=
e mixing up all sorts of mistakes and misconceptions
here.
</p>

<p>
I have compiled up an existing project, my command line PDF tools, using <c=
ode>js_of_ocaml</code>, and all is well:
</p>

<pre class=3D"example" id=3D"org8d03c7a">
$ node cpdf.js -info hello.pdf
Encryption: Not encrypted
Permissions:
Linearized: false
Version: 1.1
Pages: 1
</pre>

<p>
Like magic! But I had to comment out the parts of my code which use externa=
l C code of course - that is zlib and some
encryption primitives. So now I wish to bind javascript libraries for those=
. I am experimenting with a simple library
of my own, first, which is given on the command line to <code>js_of_ocaml</=
code> as <code>foomod.js</code>:
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-js">foo =3D 42;
</pre>
</div>

<p>
I can get to this global variable easily from OCaml:
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">let</span> <span style=3D"color: #a0522d;">foo</span> =3D <span style=
=3D"color: #228b22;">Js.Unsafe.</span>global#<span style=3D"color: #a52a2a;=
">#.</span>foo
</pre>
</div>

<p>
But now I want to do things better, and I change <code>foomod.js</code> to:
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-js">exports.foo =3D 42;
</pre>
</div>

<p>
How can I get to that? Giving <code>foomod.js</code> on the <code>js_of_oca=
ml</code> command line includes the contents of <code>foomod.js</code> in
some way, but does not contain the string <code>foomod</code>, so I'm not s=
ure how to get to the foomod's variables and
functions. How to I access them? In the node REPL, I can simply do:
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-js">&gt; foomod =3D require(<span style=3D"color: #8b=
2252;">'./foomod.js'</span>);
{ foo; 42 }
&gt; foomod.foo;
42
</pre>
</div>

<p>
I have read the <code>js_of_ocaml</code> help page on how to bind JS module=
s:
</p>

<p>
<a href=3D"https://ocsigen.org/js_of_ocaml/latest/manual/bindings">https://=
ocsigen.org/js_of_ocaml/latest/manual/bindings</a>
</p>

<p>
I imagine if I could get over this hump, all the rest of the information I =
need will be there.
</p>
</div>
</div>


<div id=3D"outline-container-orga5986b6" class=3D"outline-3">
<h3 id=3D"orga5986b6">Nicol=C3=A1s Ojeda B=C3=A4r replied</h3>
<div class=3D"outline-text-3" id=3D"text-orga5986b6">
<p>
Not exactly what you asked, but if you just want to provide a JS version of=
 some C primitive
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">external</span> <span style=3D"color: #0000ff;">foo</span> : unit -&gt=
; int =3D <span style=3D"color: #8b2252;">"caml_foo"</span>
</pre>
</div>

<p>
you can do this by writing the following in your <code>.js</code> file:
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-js"><span style=3D"color: #b22222;">//</span><span st=
yle=3D"color: #b22222;">Provides: caml_foo</span>
<span style=3D"color: #a020f0;">function</span> <span style=3D"color: #0000=
ff;">caml_foo</span>() {
  <span style=3D"color: #a020f0;">return</span> 42;
}
</pre>
</div>

<p>
Then <code>js_of_ocaml</code> will automatically replace calls to the exter=
nal function by a call to its JS implementation.
</p>

<p>
This is the same mechanism used by <code>js_of_ocaml</code> to implement it=
s own JS version of the OCaml runtime, see eg
</p>

<p>
<a href=3D"https://github.com/ocsigen/js_of_ocaml/blob/3850a67b1cb00cfd2ee4=
399cf1e2948062884b92/runtime/bigarray.js#L328-L335">https://github.com/ocsi=
gen/js_of_ocaml/blob/3850a67b1cb00cfd2ee4399cf1e2948062884b92/runtime/bigar=
ray.js#L328-L335</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-4" class=3D"outline-2">
<h2 id=3D"4">diskuvbox: small set of cross-platform CLI tools</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-diskuvbox-small-set-of-=
cross-platform-cli-tools/9663/1">https://discuss.ocaml.org/t/ann-diskuvbox-=
small-set-of-cross-platform-cli-tools/9663/1</a>
</p>
</div>

<div id=3D"outline-container-orgda01fbb" class=3D"outline-3">
<h3 id=3D"orgda01fbb">jbeckford announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgda01fbb">
<p>
<b>TLDR</b>:
</p>
<pre class=3D"example" id=3D"org019922f">
$ opam update
$ opam install diskuvbox

$ diskuvbox copy-dir --mode 755 src1/ src2/ dest/
$ diskuvbox copy-file --mode 400 src/a dest/b
$ diskuvbox copy-file-into src1/a src2/b dest/
$ diskuvbox touch-file x/y/z

$ diskuvbox find-up . _build
Z:/source/_build

$ diskuvbox tree --max-depth 2 --encoding=3DUTF-8 .
.
=E2=94=9C=E2=94=80=E2=94=80 CHANGES.md
=E2=94=9C=E2=94=80=E2=94=80 README.md
=E2=94=9C=E2=94=80=E2=94=80 _build/
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 default/
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 install/
=E2=94=82   =E2=94=94=E2=94=80=E2=94=80 log
</pre>

<p>
<b>Problem</b>: When writing cram tests, Dune rules and Opam build steps, o=
ften we default to using GNU binaries
(<code>/usr/bin/*</code>) available on Linux (ex. <code>/usr/bin/cp -R</cod=
e>). Unfortunately these commands rarely work on Windows, and as
a consequence Windows OCaml developers are forced to maintain Cygwin or MSY=
S2 installations to get GNU tooling.
</p>

<p>
<b>Solution</b>: Provide some of the same functionality for Windows and mac=
OS that the GNU binaries in <code>/usr/bin/*</code> do in
Linux.
</p>

<p>
<code>diskuvbox</code> is a single binary that today provides an analog for=
 a very small number of binaries that I have needed
in the Diskuv Windows OCaml distribution. It is liberally licensed under Ap=
ache v2.0. <b>With your PRs it could emulate
much more!</b>
</p>

<p>
<code>diskuvbox</code> has CI testing for Windows, macOS and Linux. Usage a=
nd help are available in the diskuvbox README:
<a href=3D"https://github.com/diskuv/diskuvbox#diskuv-box">https://github.c=
om/diskuv/diskuvbox#diskuv-box</a>
</p>

<p>
<b><code>diskuvbox</code> also has a OCaml library, but consider the API un=
stable until version 1.0.</b>
</p>

<p>
Alternatives:
</p>
<ul class=3D"org-ul">
<li>There are some shell scripting tools like <a href=3D"https://github.com=
/janestreet/shexp">shexp</a> and <a href=3D"https://github.com/charlesetc/f=
eather">feather</a> that give you POSIX pipes in OCaml-friendly syntax. I f=
eel these complement Diskuv Box.</li>
<li>Dune exposes <code>(copy)</code> to copy a file in Dune rules; theoreti=
cally more operations could be added.</li>
</ul>

<p>
Internally <code>diskuvbox</code> is a wrapper on the excellent <a href=3D"=
https://erratique.ch/software/bos/doc/Bos/index.html">bos - Basic OS
interaction</a> library.
</p>
</div>

<div id=3D"outline-container-org7e6a0d6" class=3D"outline-4">
<h4 id=3D"org7e6a0d6">Acknowledgements</h4>
<div class=3D"outline-text-4" id=3D"text-org7e6a0d6">
<p>
The first implementations of Diskuv Box were implemented with the assistanc=
e of the <a href=3D"http://ocaml-sf.org">OCaml Software Foundation
(OCSF)</a>, a sub-foundation of the <a href=3D"https://www.inria.fr">INRIA =
Foundation</a>.
</p>

<p>
Two OCaml libraries (<a href=3D"https://erratique.ch/software/bos">bos</a> =
and <a href=3D"https://erratique.ch/software/cmdliner">cmdliner</a>)
are essential to Diskuv Box; these libraries were created by <a href=3D"htt=
ps://erratique.ch/profile">Daniel B=C3=BCnzli</a>
(@dbuenzli) .
</p>
</div>
</div>

<div id=3D"outline-container-orgd6d8a97" class=3D"outline-4">
<h4 id=3D"orgd6d8a97">Examples</h4>
<div class=3D"outline-text-4" id=3D"text-orgd6d8a97">
<p>
The following are examples that have been condensed from the <a href=3D"htt=
ps://github.com/diskuv/diskuvbox#diskuv-box">diskuvbox README.md</a> &#x202=
6;
</p>
</div>

<div id=3D"outline-container-org3aeff69" class=3D"outline-5">
<h5 id=3D"org3aeff69">Using in Dune cram tests</h5>
<div class=3D"outline-text-5" id=3D"text-org3aeff69">
<pre class=3D"example" id=3D"orga204ea0">
$ install -d a/b/c/d/e/f
$ install -d a/b2/c2/d2/e2/f2
$ install -d a/b2/c3/d3/e3/f3
$ install -d a/b2/c3/d4/e4/f4
$ install -d a/b2/c3/d4/e5/f5
$ install -d a/b2/c3/d4/e5/f6
$ touch a/b/x
$ touch a/b/c/y
$ touch a/b/c/d/z

$ diskuvbox tree a --max-depth 10 --encoding UTF-8
a
=E2=94=9C=E2=94=80=E2=94=80 b/
=E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 c/
=E2=94=82   =E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 d/
=E2=94=82   =E2=94=82   =E2=94=82   =E2=94=9C=E2=94=80=E2=94=80 e/
=E2=94=82   =E2=94=82   =E2=94=82   =E2=94=82   =E2=94=94=E2=94=80=E2=94=80=
 f/
=E2=94=82   =E2=94=82   =E2=94=82   =E2=94=94=E2=94=80=E2=94=80 z
=E2=94=82   =E2=94=82   =E2=94=94=E2=94=80=E2=94=80 y
=E2=94=82   =E2=94=94=E2=94=80=E2=94=80 x
=E2=94=94=E2=94=80=E2=94=80 b2/
    =E2=94=9C=E2=94=80=E2=94=80 c2/
    =E2=94=82   =E2=94=94=E2=94=80=E2=94=80 d2/
    =E2=94=82       =E2=94=94=E2=94=80=E2=94=80 e2/
    =E2=94=82           =E2=94=94=E2=94=80=E2=94=80 f2/
    =E2=94=94=E2=94=80=E2=94=80 c3/
        =E2=94=9C=E2=94=80=E2=94=80 d3/
        =E2=94=82   =E2=94=94=E2=94=80=E2=94=80 e3/
        =E2=94=82       =E2=94=94=E2=94=80=E2=94=80 f3/
        =E2=94=94=E2=94=80=E2=94=80 d4/
            =E2=94=9C=E2=94=80=E2=94=80 e4/
            =E2=94=82   =E2=94=94=E2=94=80=E2=94=80 f4/
            =E2=94=94=E2=94=80=E2=94=80 e5/
                =E2=94=9C=E2=94=80=E2=94=80 f5/
                =E2=94=94=E2=94=80=E2=94=80 f6/
</pre>
</div>
</div>

<div id=3D"outline-container-org652557e" class=3D"outline-5">
<h5 id=3D"org652557e">Using in Opam <code>build</code> steps</h5>
<div class=3D"outline-text-5" id=3D"text-org652557e">
<pre class=3D"example" id=3D"orgf4d6d25">
build: [
  ["diskuvbox" "copy-file-into" "assets/icon.png" "assets/public.gpg" "%{_:=
share}%"]
]
</pre>
</div>
</div>

<div id=3D"outline-container-org6797164" class=3D"outline-5">
<h5 id=3D"org6797164">Using in Dune rules</h5>
<div class=3D"outline-text-5" id=3D"text-org6797164">
<div class=3D"org-src-container">
<pre class=3D"src src-lisp">(rule
 (targets diskuvbox.corrected.ml diskuvbox.corrected.mli)
 (deps
  (<span style=3D"color: #483d8b;">:license</span> %{project_root}/etc/lice=
nse-header.txt)
  (<span style=3D"color: #483d8b;">:conf</span>    %{project_root}/etc/head=
ache.conf))
 (action
  (<span style=3D"color: #a020f0;">progn</span>
   (run diskuvbox copy-file -m 644 diskuvbox.ml  diskuvbox.corrected.ml)
   (run diskuvbox copy-file -m 644 diskuvbox.mli diskuvbox.corrected.mli)
   (run headache -h %{license} -c %{conf} %{targets})
   (run ocamlformat --inplace --disable-conf-files --enable-outside-detecte=
d-project %{targets}))))
</pre>
</div>
</div>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-org791d15a" class=3D"outline-2">
<h2 id=3D"org791d15a">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org791d15a">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or the <=
a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archive=
s</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname" id=3D"org670f8f3">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--==-=-=--

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Pour une =C3=A9valuation ind=C3=A9pendante, transparente et rigoureuse !
Je soutiens la Commission d'=C3=89valuation de l'INRIA.

--=-=-=--
