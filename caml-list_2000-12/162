Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA24260 for caml-red; Wed, 27 Dec 2000 18:58:12 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA08305 for <caml-list@pauillac.inria.fr>; Wed, 27 Dec 2000 02:44:57 +0100 (MET)
Received: from sirius-b.ihep.su (sirius-b.ihep.su [194.190.161.4])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id eBR1ipf28596
	for <caml-list@inria.fr>; Wed, 27 Dec 2000 02:44:51 +0100 (MET)
Received: from ihep.su (ihep.ihep.su [194.190.161.127])
	by sirius-b.ihep.su (8.10.0/8.10.0) with SMTP id eBR1imb08873;
	Wed, 27 Dec 2000 04:44:48 +0300 (MSK)
X-Sender: vsl@ontil.ihep.su
Received: from ontil.ihep.su by ihep.su (5.65v4.0/RELCOM-IHEPv4.7)
	id AA13419; Wed, 27 Dec 2000 04:44:46 +0300
Date: Wed, 27 Dec 2000 05:39:53 +0300 (MSK)
From: Vitaly Lugovsky <vsl@ontil.ihep.su>
To: Semenova Natalya Nickolaevna <semenova@snob.spb.ru>
Cc: caml-list@inria.fr
Subject: Re: Is Caml a suitable tool for complicated mathematical methods.
In-Reply-To: <00122200235700.00634@snob.spb.ru>
Message-Id: <Pine.LNX.4.10.10012270533310.14505-100000@ontil.ihep.su>
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: weis@pauillac.inria.fr

On Thu, 21 Dec 2000, Semenova Natalya Nickolaevna wrote:

> Hi,
> 
> We are going to rewrite a large bundle of Fortran-3 (!!!) sources to some
> "better" language. Sources are the solution of the system of differential
> equations in partial derivatives by normal finite differencing methods. 
> 
> Two candidats are voted: Pascal and Ocaml. Is Caml convenient tool for such
> tasks?

 OCaml is a good tool to automate this migration to any other language.
But the target language, IMHO, shall be Fortran-90, not ocaml or pascal.
Pascal is not situated for numerical tasks at all, it's a dead language,
and OCaml can be too slow for your task (not SO slow, but, of course,
slower then good old Fortran). If you really need a fast and modern
language for numerical computations, there is no better choice then latest
Fortran realizations. Think about it: automatic parallelism (on SMP),
VERY good optimizations, easy-to-proove syntax. btw, you can even use
ocaml to proove your Fortran code automatically.

--

   V.S.Lugovsky aka Mauhuur (http://ontil.ihep.su/~vsl) (UIN=45482254)



