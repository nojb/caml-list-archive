Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA24587 for caml-red; Thu, 7 Dec 2000 09:13:06 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA13742 for <caml-list@pauillac.inria.fr>; Wed, 6 Dec 2000 21:13:15 +0100 (MET)
Received: from web9203.mail.yahoo.com ([216.136.129.26])
	by concorde.inria.fr (8.11.1/8.10.0) with SMTP id eB6KDE125050
	for <caml-list@inria.fr>; Wed, 6 Dec 2000 21:13:14 +0100 (MET)
Message-ID: <20001206201313.28498.qmail@web9203.mail.yahoo.com>
Received: from [63.195.80.23] by web9203.mail.yahoo.com; Wed, 06 Dec 2000 12:13:13 PST
Date: Wed, 6 Dec 2000 12:13:13 -0800 (PST)
From: Joe Lisp <joelisp@yahoo.com>
Subject: callcc/cps-style programming
To: caml-list@inria.fr
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: weis@pauillac.inria.fr

Is anyone working on callcc for OCaml?

If the answer is no, and I want to use lightweight
threads, I can program in CPS to make my own
(non-preemptive) thread system.  Would large programs
written in CPS incur any particular extra overhead
from the current OCaml compiler/runtime?

An unrelated question: suppose I have some combinators
or whatnot that I use all the time.  If they are in
their own file, then I assume I pay a
cross-compilation module penalty every time I use
them.  Is there a way to #include them instead?

Thanks!


__________________________________________________
Do You Yahoo!?
Yahoo! Shopping - Thousands of Stores. Millions of Products.
http://shopping.yahoo.com/


