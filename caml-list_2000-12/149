Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA18168 for caml-red; Fri, 22 Dec 2000 18:18:37 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA24491 for <caml-list@pauillac.inria.fr>; Fri, 22 Dec 2000 17:43:28 +0100 (MET)
Received: from shell5.ba.best.com (shell5.ba.best.com [206.184.139.136])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id eBMGhR514811
	for <caml-list@inria.fr>; Fri, 22 Dec 2000 17:43:27 +0100 (MET)
Received: from localhost (bpr@localhost)
	by shell5.ba.best.com (8.9.3/8.9.2/best.sh) with ESMTP id IAA28209;
	Fri, 22 Dec 2000 08:43:22 -0800 (PST)
Date: Fri, 22 Dec 2000 08:43:22 -0800 (PST)
From: Brian Rogoff <bpr@best.com>
To: Semenova Natalya Nickolaevna <semenova@snob.spb.ru>
cc: caml-list@inria.fr
Subject: Re: Is Caml a suitable tool for complicated mathematical methods.
In-Reply-To: <00122200235700.00634@snob.spb.ru>
Message-ID: <Pine.BSF.4.21.0012220815110.6109-100000@shell5.ba.best.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: weis@pauillac.inria.fr

On Thu, 21 Dec 2000, Semenova Natalya Nickolaevna wrote:
> Hi,
> 
> We are going to rewrite a large bundle of Fortran-3 (!!!) sources to some
> "better" language. Sources are the solution of the system of differential
> equations in partial derivatives by normal finite differencing methods. 

A walk down memory lane for me. What kind of PDEs are you going to be
solving? 

> Two candidats are voted: Pascal and Ocaml. Is Caml convenient tool for such
> tasks?

Well, you ask here, so I guess I'll give the expected answer: of course
Ocaml is the right tool for this! 

More seriously, which Pascal are you considering? One of the few annoyances 
I'd have with Ocaml is the lack of overloading of arithmetic ops, and
since Pascal doesn't allow it either (true for all Pascal's I know of,
including Oberon descendant Component Pascal) you're worse of there than
in Ocaml, where you may at least rebind the operators to whatever you
like best. If you must use a Pascal-like language you should use Ada
instead; GNAT is a magnificent piece of work. 

Assuming you make the right choice and go with Ocaml, take a look at the
new Bigarray library. I don't think the basic Array stuff is what you want 
for PDE solvers. You come to Ocaml at a good time, since the Bigarray
module was recently added and some floating point optimizations were also 
put in recently. Work on Gtk bindings is progressing so you'll be able to 
do nice graphics too. 

Welcome aboard!

-- Brian



