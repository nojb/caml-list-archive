Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA27481 for caml-red; Fri, 15 Dec 2000 13:48:18 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA18294 for <caml-list@pauillac.inria.fr>; Thu, 14 Dec 2000 19:42:28 +0100 (MET)
Received: from tequila.cs.yale.edu (tequila.cs.yale.edu [128.36.229.152])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id eBEIgQL24425
	for <caml-list@inria.fr>; Thu, 14 Dec 2000 19:42:27 +0100 (MET)
Received: from tequila.cs.yale.edu (localhost [127.0.0.1])
	by tequila.cs.yale.edu (8.9.3/8.9.3) with SMTP id NAA25102
	for <caml-list@inria.fr>; Thu, 14 Dec 2000 13:42:11 -0500
To: caml-list@inria.fr
From: "Stefan Monnier" <monnier+lists.caml/news/@RUM.cs.yale.edu>
Newsgroups: lists.caml
Subject: Re: Functions must be explicitly typed, (was Same label in different types, how do people solve this?)
References: <3A3663B5.412BECE2@ozemail.com.au> <HDEEKOMJILGEIHIMAPCDCEOLDLAA.mattias.waldau@abc.se>
Date: 14 Dec 2000 13:42:06 -0500
Message-ID: <5lpuiuzvy9.fsf@rum.cs.yale.edu>
Lines: 16
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.0.93
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Path: rum.cs.yale.edu
NNTP-Posting-Host: rum.cs.yale.edu
X-Trace: 14 Dec 2000 13:42:06 -0500, rum.cs.yale.edu
Sender: weis@pauillac.inria.fr

>>>>> "Mattias" == Mattias Waldau <mattias.waldau@abc.se> writes:
> I don't really see the use of infering types for functions. It works for one

I agree that it's generally good documentation (and good debugging aid when
you get a type error), but when you just need a small function to pass to
`map' or `fold' (i.e. cases that correspond to loop bodies in procedural
languages), it can be convenient not to have to write the types.

> person hacks, like compilers, interpreters, theorem provers, but it doesn't
> scale well to programs with many programmers involved.

I don't think that has much to do with the number of people involved.
I have enough trouble understanding code written by "myself a year ago".


        Stefan


