Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA15643 for caml-red; Fri, 22 Dec 2000 10:09:25 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA26960 for <caml-list@pauillac.inria.fr>; Fri, 22 Dec 2000 09:48:22 +0100 (MET)
Received: from dpt-info.u-strasbg.fr (dpt-info.u-strasbg.fr [130.79.6.1])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id eBM8mM507507
	for <caml-list@inria.fr>; Fri, 22 Dec 2000 09:48:22 +0100 (MET)
Received: from lambda.u-strasbg.fr (lambda.u-strasbg.fr [130.79.90.63])
	by dpt-info.u-strasbg.fr (8.9.3/8.9.3) with ESMTP id JAA28719;
	Fri, 22 Dec 2000 09:47:39 +0100
Received: from luther by lambda.u-strasbg.fr with local (Exim 3.20 #1 (Debian))
	id 149NpF-00008H-00; Fri, 22 Dec 2000 09:45:17 +0100
Date: Fri, 22 Dec 2000 09:45:17 +0100
To: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
Cc: orodeh@cs.huji.ac.il, caml-list@inria.fr
Subject: Re: Ref syntax
Message-ID: <20001222094517.B486@lambda.u-strasbg.fr>
References: <Pine.LNX.4.20_heb2.08.0012141610480.1456-100000@zigzag.cs.huji.ac.il> <Pine.LNX.4.20_heb2.08.0012211444520.26395-100000@zigzag.cs.huji.ac.il> <20001222122938T.garrigue@kurims.kyoto-u.ac.jp>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <20001222122938T.garrigue@kurims.kyoto-u.ac.jp>; from garrigue@kurims.kyoto-u.ac.jp on Fri, Dec 22, 2000 at 12:29:38PM +0900
From: Sven LUTHER <luther@dpt-info.u-strasbg.fr>
Sender: weis@pauillac.inria.fr

On Fri, Dec 22, 2000 at 12:29:38PM +0900, Jacques Garrigue wrote:
> * have a notation to abbreviate the OCAMLLIB directory in include
>   paths. One could write
>        ocamlc -c -I +labltk -I +lablGL gears.ml
>   rather than
>        ocamlc -c -I `ocamlc -where`/labltk -I `ocamlc -where`/lablgGL gears.ml

Yes this is extremely usefull, and would be a necessity if you don't want
people to simply install all their stuff in the $OCAMLLIB directory, possibly
overwritting some future addition to the what is put in there by ocaml.

Also, what is the reason the current system does search in the $OCAMLLIB as
well as the current directory for files ? if this was so, we could simply
write :

    ocamlc -c -I labltk -I lablGL gears.ml

and have ocamlc search in the following places (and in this order ?) :

    $OCAMLLIB
    $PWD
    $PWD/labltk
    $PWD/lablGL
    $OCAMLLIB/labltk
    $OCAMLLIB/lablGL

C does something similar with his include files ?

Also another related issue would be to be able to append a modules path
element to libraries when building them. (or maybe this is already possible
?).

It would go like this :

    ocamlc -<some special flag> XXX -a foo.cmo bar.cmo -o xxx.cma 

which would give would put the modules in the xxx.cma library as follows :

   XXX.Bar
   XXX.Foo

instead of :

   Bar
   Foo

Thus permitting people to reuse modules names in their libraries whitout
needing to be carefull with conflict with other similar module names.

Friendly,

Sven Luther


