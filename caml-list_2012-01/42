Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q0513TBg023746
	for <caml-list@sympa-roc.inria.fr>; Thu, 5 Jan 2012 02:03:33 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ArwBAAX2BE/RVaC2kWdsb2JhbABDggWDCqdXCCIBAQEBCQsLBxQEIYFyAQEBAxMCDx0BKwoEAwEMBRAPAiYCJBIBBQEiExQOh1iVfIJbCosdgzWEOokwAgULgSSJSoEWBJUEjX09gU2CLg
X-IronPort-AV: E=Sophos;i="4.71,459,1320620400"; 
   d="scan'208";a="137889160"
Received: from mail-gy0-f182.google.com ([209.85.160.182])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 05 Jan 2012 02:03:32 +0100
Received: by ghrr16 with SMTP id r16so10010ghr.27
        for <caml-list@inria.fr>; Wed, 04 Jan 2012 17:03:31 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:sender:date:x-google-sender-auth:message-id:subject
         :from:to:content-type:content-transfer-encoding;
        bh=azWD0QjhZ+GlkgjqGLHAaLXexaJL1+T60fhnliu9XdA=;
        b=i/FmjDzTHfmGBZ49SxaNFbPDHz+Ea5DSZ2IIfMcVsTzkMdZUSgo1FoYGTbQp7YLkG7
         drKwlmXXaJk9KKKfvmrnlMXitoa+7xjuO5b4Uuqd9lx0HBQmmAMuOEdxIMskOb0/qKxX
         JBvz7S/xOyO2P5F0+KLWAWoKwne6sYBDOnSaw=
MIME-Version: 1.0
Received: by 10.101.182.31 with SMTP id j31mr17115739anp.15.1325725411329;
 Wed, 04 Jan 2012 17:03:31 -0800 (PST)
Sender: daniel.c.buenzli@gmail.com
Received: by 10.146.95.8 with HTTP; Wed, 4 Jan 2012 17:03:31 -0800 (PST)
Date: Thu, 5 Jan 2012 02:03:31 +0100
X-Google-Sender-Auth: R-zJ7suOL95asDBaFi1qos4CCPU
Message-ID: <CALgo1QLmd5b2GmS3umFCpT=JzJMQXz+yMAbiX5KgtmDy9ksKkA@mail.gmail.com>
From: =?UTF-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: caml-list <caml-list@inria.fr>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id q0513TBg023746
Subject: oasis (was Re: [Caml-list] "Let"-less syntax for coreML)

On 4 January 2012 13:18, Yaron Minsky <yminsky@janestreet.com> wrote:

> I think the biggest thing the community can do to improve OCaml is not to
> tweak around with language design.  It's to improve the library packaging
> situation.  Oasis seems to be the effort in this direction that has the most
> momentum, so I think pushing Oasis to become every bit as good as Hackage
> and Cabal is really the place to get maximum leverage.

Agreed, and all my packages will eventually support oasis. This was
planned about half a year ago but I was told it would be simpler for
me to wait for oasis-db 0.1.0~alpha3 but somehow that never
materialized. I see two problems with oasis right now :

1)
It seems Sylvain doesn't have much time to work on the system. Oasis
tries to solve (IMHO too) many problems and is therefore a significant
piece of software. This means it is less easy to contribute to and if
Sylvain doesn't work on it, the project grinds to a halt. I think
Sylvain, in order to gain acceptance maybe tried to be too inclusive
feature-wise w.r.t. to dev practices -- not to mention that as a
debian packager he also had ideas to save time there. It is perfectly
understandable but it may have had some perverse effects on the
complexity of the system.

If I may, I would like to suggest to Sylvain that development of the
oasis and oasis-db should entirely focus on the infrastructure needed
so that a reasonable and useful set of packages are able to work with
something like odb.ml. To give an example, oasis-db as the human
browsable website is a very nice plus (e.g. I do enjoy browsing on
hackage), but it is a significant piece of work and IMHO just
shouldn't be a priority.

By showing us that something like odb.ml actually solves the problems
we have as ocaml developers --- quickly install this (high-quality of
course) lib to help me write my program --- I'm sure the supposedly
stubborn library devs would be willing to change and standardize their
practice around those mandated by oasis and this could lead to a
simpler system (vs. trying to please everyone). Just give us something
that you have enough confidence in and tell us, this is usable now,
use it, it may have limitations, but it already helps. And after
iterate on that to eventually get to the big, planned system -- or
not.

2)
The current documentation is useless. When I did the _oasis file for
cmdliner I had to find what the actual value of OASISformat should be
by trial/error... The documentation provides a high-level description
of all the available fields for _oasis files but it doesn't precisely
describe their _syntax_ (types !) and their _effect_. It also doesn't
describe how the system works from an architectural perspective.  We
need a good manual -- and please not a wiki.

Best,

Daniel

