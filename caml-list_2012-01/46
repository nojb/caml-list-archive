Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q05KRUWt003887
	for <caml-list@sympa-roc.inria.fr>; Thu, 5 Jan 2012 21:27:30 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AokDAB8HBk/RVdK2kWdsb2JhbABCggWaPYghAYgSCCIBAQEBCQkNBxIngXIBAQEDARICLAEbEAIIAwEDAQsGBQQHDQ0hIQEBEQEFAQoSBhMSEIdYCJk4Cotngm+EWD+IcQIFC4NyiBQEgluSK4pwgw49g3o
X-IronPort-AV: E=Sophos;i="4.71,464,1320620400"; 
   d="scan'208";a="138039966"
Received: from mail-iy0-f182.google.com ([209.85.210.182])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 05 Jan 2012 21:27:26 +0100
Received: by iadj38 with SMTP id j38so2191610iad.27
        for <caml-list@inria.fr>; Thu, 05 Jan 2012 12:27:25 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=s1ZwtwXR0sT4aQeD/tbuBkiUa4a5sDulmZPcuMsv0yU=;
        b=PZEjciSGpgTLDCC5AU+oA1kuOjYkue8+HTTzt4rwqI3HwbJby5fEIzJ3WPMatObEG6
         J88vBB//7J8D8X/0nH2ODzfHAs77fnTFuNor8180pgniEJhCM/pA0cRGUpGwHqhvruh1
         1enO/wuwABLcXoiO27sfWdxPiCPqtUvZPSHZE=
MIME-Version: 1.0
Received: by 10.42.76.66 with SMTP id d2mr3564086ick.7.1325795245104; Thu, 05
 Jan 2012 12:27:25 -0800 (PST)
Received: by 10.42.163.3 with HTTP; Thu, 5 Jan 2012 12:27:25 -0800 (PST)
In-Reply-To: <20120105200442.GA17669@annexia.org>
References: <CAHqiZ-LhsBa4Xn51dCDAeOpTVMzF8kJCestAGydh5abMHsOidQ@mail.gmail.com>
	<CAJMfKEU8y0MiRn_1N1qjWQdi7bTzHgVC4xfkLkDrktJUecbngg@mail.gmail.com>
	<20120105200442.GA17669@annexia.org>
Date: Thu, 5 Jan 2012 20:27:25 +0000
Message-ID: <CACm_MF8JrUsoGFG1Bq3CHEkHBFRPWg=NzrgrwBSkThpTO59LZA@mail.gmail.com>
From: ivan chollet <ivan.chollet@gmail.com>
To: "Richard W.M. Jones" <rich@annexia.org>
Cc: Lukasz Stafiniak <lukstafi@gmail.com>,
        Diego Olivier Fernandez Pons <dofp.ocaml@gmail.com>,
        caml-list <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=90e6ba3fd25da1231d04b5cdc2dc
Subject: Re: [Caml-list] Examples where let rec is undesirable


--90e6ba3fd25da1231d04b5cdc2dc
Content-Type: text/plain; charset=ISO-8859-1

Allowing variable shadowing is aesthetically more satisfying and more
expressive, but opens the door to bugs that can be harder to track by
static analysis.
I would be interested to hear the pro-arguments for variable shadowing,
besides the slight gain in expressiveness.


On Thu, Jan 5, 2012 at 8:04 PM, Richard W.M. Jones <rich@annexia.org> wrote:

> On Tue, Jan 03, 2012 at 01:05:39AM +0100, Lukasz Stafiniak wrote:
> > On Mon, Jan 2, 2012 at 11:37 PM, Diego Olivier Fernandez Pons
> > <dofp.ocaml@gmail.com> wrote:
> > >     List,
> > >
> > > I was wondering if there was any reason not to make "let rec" the
> default /
> > > sole option, meaning cases where you clearly don't want a "let rec"
> instead
> > > of "let" (only in functions, not cyclic data).
> > >
> > >          Diego Olivier
> >
> > The default "no-rec" allows for name recycling -- using the same name
> > for an incrementally transformed value, i.e. to bind the intermediate
> > results. Name recycling minimizes the cognitive burden: there are less
> > names to remember in a scope, and differences in names are justified
> > by differences in purpose of the values. Are there reasons to consider
> > name recycling a bad style?
>
> I had an argument about this with a noted open source developer
> recently.  He was saying that C's approach -- not permitting variable
> names to be reused within a single function -- was somehow
> advantageous.  From my point of view, having used both languages
> extensively, OCaml's way is *far* better.
>
> So yes, 'let' and 'let rec', long may they be different.
>
> Rich.
>
> --
> Richard Jones
> Red Hat
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/wws/info/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>

--90e6ba3fd25da1231d04b5cdc2dc
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Allowing variable shadowing is aesthetically more satisfying and more expre=
ssive, but opens the door to bugs that can be harder to track by static ana=
lysis.<br>I would be interested to hear the pro-arguments for variable shad=
owing, besides the slight gain in expressiveness.<br>
<br><br><div class=3D"gmail_quote">On Thu, Jan 5, 2012 at 8:04 PM, Richard =
W.M. Jones <span dir=3D"ltr">&lt;<a href=3D"mailto:rich@annexia.org">rich@a=
nnexia.org</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=
=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">
On Tue, Jan 03, 2012 at 01:05:39AM +0100, Lukasz Stafiniak wrote:<br>
&gt; On Mon, Jan 2, 2012 at 11:37 PM, Diego Olivier Fernandez Pons<br>
&gt; &lt;<a href=3D"mailto:dofp.ocaml@gmail.com">dofp.ocaml@gmail.com</a>&g=
t; wrote:<br>
&gt; &gt; =A0 =A0 List,<br>
&gt; &gt;<br>
&gt; &gt; I was wondering if there was any reason not to make &quot;let rec=
&quot; the default /<br>
&gt; &gt; sole option, meaning cases where you clearly don&#39;t want a &qu=
ot;let rec&quot; instead<br>
&gt; &gt; of &quot;let&quot; (only in functions, not cyclic data).<br>
&gt; &gt;<br>
&gt; &gt; =A0 =A0 =A0 =A0 =A0Diego Olivier<br>
&gt;<br>
&gt; The default &quot;no-rec&quot; allows for name recycling -- using the =
same name<br>
&gt; for an incrementally transformed value, i.e. to bind the intermediate<=
br>
&gt; results. Name recycling minimizes the cognitive burden: there are less=
<br>
&gt; names to remember in a scope, and differences in names are justified<b=
r>
&gt; by differences in purpose of the values. Are there reasons to consider=
<br>
&gt; name recycling a bad style?<br>
<br>
I had an argument about this with a noted open source developer<br>
recently. =A0He was saying that C&#39;s approach -- not permitting variable=
<br>
names to be reused within a single function -- was somehow<br>
advantageous. =A0From my point of view, having used both languages<br>
extensively, OCaml&#39;s way is *far* better.<br>
<br>
So yes, &#39;let&#39; and &#39;let rec&#39;, long may they be different.<br>
<br>
Rich.<br>
<span class=3D"HOEnZb"><font color=3D"#888888"><br>
--<br>
Richard Jones<br>
Red Hat<br>
<br>
--<br>
Caml-list mailing list. =A0Subscription management and archives:<br>
<a href=3D"https://sympa-roc.inria.fr/wws/info/caml-list" target=3D"_blank"=
>https://sympa-roc.inria.fr/wws/info/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
<br>
</font></span></blockquote></div><br>

--90e6ba3fd25da1231d04b5cdc2dc--
