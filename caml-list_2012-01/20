Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q03Iht9U032253
	for <caml-list@sympa-roc.inria.fr>; Tue, 3 Jan 2012 19:43:55 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhoCAOtLA09KfVK2kGdsb2JhbAA5CoIFqlMIIgEBAQEJCQ0bBCGBaQUdAhMZARseAxIIAQddAREBBQEiGxqFJoIplkGCWwqLZYJrhDU/iHECBQuIS4M5BJUCjX09g3s
X-IronPort-AV: E=Sophos;i="4.71,451,1320620400"; 
   d="scan'208";a="125459692"
Received: from mail-we0-f182.google.com ([74.125.82.182])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 03 Jan 2012 19:43:49 +0100
Received: by werb13 with SMTP id b13so15143137wer.27
        for <caml-list@inria.fr>; Tue, 03 Jan 2012 10:43:49 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:date:message-id:subject:from:to:content-type;
        bh=WmMSBO9IPz8ed0jPY53ENh23IIcNpSDVr31V4c1yuzY=;
        b=mpCf0BWdoyFjHrDERyIvA8nB4nKSyUK9so23P8xNOWrD5SALOvvMM4TF7psn56GQFZ
         2pP6w3oWNF44MrE/DsYBD9o+Y3z3BgTmQR+CH29BviqxhYbMPIl3G8qU0udv6Wqn7xe1
         oL3jmRUQHp0pJj/CnQVVgSX9EoC0tRObgF0p0=
MIME-Version: 1.0
Received: by 10.216.139.94 with SMTP id b72mr29573115wej.38.1325616229517;
 Tue, 03 Jan 2012 10:43:49 -0800 (PST)
Received: by 10.216.65.129 with HTTP; Tue, 3 Jan 2012 10:43:49 -0800 (PST)
Date: Tue, 3 Jan 2012 19:43:49 +0100
Message-ID: <CAHqiZ-L3_qx4sWUrxw57usJkguCb2wuBtRx6d_Gz9aucV_bsqw@mail.gmail.com>
From: Diego Olivier Fernandez Pons <dofp.ocaml@gmail.com>
To: caml-list <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=0016e6db2ada780b4004b5a4143c
Subject: [Caml-list] "Let"-less syntax for coreML


--0016e6db2ada780b4004b5a4143c
Content-Type: text/plain; charset=ISO-8859-1

    List,

I was wondering if there was any obstruction to the removal of the "let"
keyword in a syntax for coreML.

My reasoning is that because everytime there is a "let" there is also an
"=" sign, we could completely remove the "let" and use the "=" sign instead
to identify new symbol introductions.

x = 1
s = function x -> x + 1
d = s 1
o = function f g -> function x -> f (g x)

The only cases to handle would be
- comparison "=" sign : replaced by "=="
- let rec : could be ignored or replaced by something else like "=|"
- equational style 'let f x y = x + y' : forbid

Does anyone see anything that could prevent this from being done ?

         Diego Olivier

--0016e6db2ada780b4004b5a4143c
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

=A0 =A0 List,<div><br></div><div>I was wondering if there was any obstructi=
on to the removal of the &quot;let&quot; keyword in a syntax for coreML.</d=
iv><div><br></div><div>My reasoning is that because everytime there is a &q=
uot;let&quot; there is also an &quot;=3D&quot; sign, we could completely re=
move the &quot;let&quot; and use the &quot;=3D&quot; sign instead to identi=
fy new symbol introductions.</div>

<div><br></div>x =3D 1<br>s =3D function x=A0-&gt;=A0x + 1<div>d =3D s 1<br=
><div>o =3D function f g=A0-&gt; function x=A0-&gt; f (g x)</div><div><br><=
/div><div>The only cases to handle would be</div><div>- comparison &quot;=
=3D&quot; sign : replaced by &quot;=3D=3D&quot;</div>
<div>- let rec : could be ignored or replaced by something else like &quot;=
=3D|&quot;</div><div>- equational style &#39;let f x y =3D x + y&#39; : for=
bid</div><div><br></div><div>Does anyone see anything that could prevent th=
is from being done ?</div>
</div><div><br></div><div>=A0 =A0 =A0 =A0 =A0Diego Olivier</div>

--0016e6db2ada780b4004b5a4143c--
