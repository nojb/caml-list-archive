Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q062dPSD012211
	for <caml-list@sympa-roc.inria.fr>; Fri, 6 Jan 2012 03:39:25 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjkDAKtdBk8+yYwFW2dsb2JhbABCggWDCqdyGBULDQcBOIFyAQEEASMQCQFBCwsaAhkNAgJDFAaIDQKkWpFCgS+JTIEWBKc8
X-IronPort-AV: E=Sophos;i="4.71,465,1320620400"; 
   d="scan'208";a="138065430"
Received: from mx2.bouyguestel.com ([62.201.140.5])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 06 Jan 2012 03:39:20 +0100
Received: from PNMSSS289 ([10.123.138.134]) by pnmsss289z03fe0.bouyguestel.com
 (MTA Server) with ESMTP id <0LXC00H56VDI4000@pnmsss289z03fe0.bouyguestel.com>;
 Fri, 06 Jan 2012 03:39:18 +0100 (CET)
Date: Fri, 06 Jan 2012 03:39:11 +0100
From: Cedric Cellier <rixed@happyleptic.org>
In-reply-to: <20120105213957.GB30972@annexia.org>
To: caml-list <caml-list@inria.fr>
Reply-to: Cedric Cellier <rixed@happyleptic.org>
Message-id: <1325817551.8973.8.camel@Nokia-N900>
Content-id: <1325817551.8973.7.camel@Nokia-N900>
MIME-version: 1.0
X-Mailer: Modest 3.2
Content-type: text/plain; charset=utf-8
Content-transfer-encoding: 8BIT
References: 
 <CAHqiZ-LhsBa4Xn51dCDAeOpTVMzF8kJCestAGydh5abMHsOidQ@mail.gmail.com>
 <CAJMfKEU8y0MiRn_1N1qjWQdi7bTzHgVC4xfkLkDrktJUecbngg@mail.gmail.com>
 <20120105200442.GA17669@annexia.org>
 <CACm_MF8JrUsoGFG1Bq3CHEkHBFRPWg=NzrgrwBSkThpTO59LZA@mail.gmail.com>
 <CAPFanBGLcExE0pJRVv6d3sUpuxbft=2i4Z5zbJ_SHJBFBOREuQ@mail.gmail.com>
 <20120105213957.GB30972@annexia.org>
Subject: Re: [Caml-list] Examples where let rec is undesirable

> I often think the problem here is not with the code, nor the
> programmers, but with the tools.Â   Editors should make it easier to
> fold scopes away and annotate the folded-away scopes with comments,
> when you don't want to directly look at the code.

Most editors do this, at least when the syntax of the language makes it simple to delimit the scopes (ie for most languages but ML).

Not only folding but the whole editing of source code can be made more efficient when the editor understand the scoping rules, as paredit shown for lisp.
