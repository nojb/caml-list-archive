Return-Path: <Alain.Frisch@inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id C0DABBC2A
	for <caml-list@yquem.inria.fr>; Fri,  5 Aug 2005 07:15:36 +0200 (CEST)
Received: from postfix4-1.free.fr (postfix4-1.free.fr [213.228.0.62])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j755FatU030268
	for <caml-list@yquem.inria.fr>; Fri, 5 Aug 2005 07:15:36 +0200
Received: from [192.168.0.1] (rke75-3-82-229-183-156.fbx.proxad.net [82.229.183.156])
	by postfix4-1.free.fr (Postfix) with ESMTP id 5337B319B2E;
	Fri,  5 Aug 2005 07:15:36 +0200 (CEST)
Message-ID: <42F2F4FF.1060909@inria.fr>
Date: Fri, 05 Aug 2005 07:11:27 +0200
From: Alain Frisch <Alain.Frisch@inria.fr>
User-Agent: Debian Thunderbird 1.0.2 (X11/20050331)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: skaller <skaller@users.sourceforge.net>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] ocamllex problem
References: <ad8cfe7e050804161260c9626e@mail.gmail.com>	<ad8cfe7e0508041653624f39ba@mail.gmail.com> <1123203791.6720.63.camel@localhost.localdomain>
In-Reply-To: <1123203791.6720.63.camel@localhost.localdomain>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 42F2F5F8.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; frisch:01 frisch:01 caml-list:01 ocamllex:01 dfa:01 non-trivial:01 pointers:01 ocamllex:01 nfa:01 transitions:01 spire:98 spire:98 wrote:01 expression:01 algorithm:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

skaller wrote:
> How does that work??? The algorithm for handling
> this for a DFA is non-trivial. Any pointers to
> the algorithm used?

As you can find in the source code of ocamllex:


(* To generate directly a NFA from a regular expression.
     Confer Aho-Sethi-Ullman, dragon book, chap. 3
   Extension to tagged automata.
     Confer
       Ville Larikari
      ``NFAs with Tagged Transitions, their Conversion to Deterministic
        Automata and Application to Regular Expressions''.
       Symposium on String Processing and Information Retrieval (SPIRE
2000),
     http://kouli.iki.fi/~vlaurika/spire2000-tnfa.ps
(See also)
     http://kouli.iki.fi/~vlaurika/regex-submatch.ps.gz
*)

-- Alain

