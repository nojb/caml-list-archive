Return-Path: <Christoph.Bauer@lms-gmbh.de>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 6DCD5BDCB
	for <caml-list@yquem.inria.fr>; Tue, 30 Aug 2005 14:09:35 +0200 (CEST)
Received: from kaiserslautern1.lmsintl.com (Kaiserslautern1.lms-gmbh.de [213.68.136.230])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j7UC9Y92003301
	for <caml-list@yquem.inria.fr>; Tue, 30 Aug 2005 14:09:35 +0200
Received: by kaiserslautern1.lmsintl.com with Internet Mail Service (5.5.2653.19)
	id <PVHZVWWG>; Tue, 30 Aug 2005 14:09:34 +0200
Message-ID: <26EB47FDD566A7469FC862DAF373792F07D590@kaiserslautern1.lmsintl.com>
From: "Bauer, Christoph" <Christoph.Bauer@lms-gmbh.de>
To: caml-list@yquem.inria.fr
Subject: AW: [Caml-list] Re: GUI for OCaml
Date: Tue, 30 Aug 2005 14:09:25 +0200
MIME-Version: 1.0
X-Mailer: Internet Mail Service (5.5.2653.19)
Content-Type: text/plain
X-Miltered: at concorde with ID 43144C7E.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 christophe:01 raffalli:01 christophe:01 raffalli:01 univ-savoie:01 widget:01 ocaml:01 statically:01 syntax:01 arrays:01 haskell:01 monads:01 sml:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.3

Hi,

> 2005/8/30, Christophe Raffalli <christophe.raffalli@univ-savoie.fr>:
> > I would prefer a GUI programming language (similar to TeX for word
> > processing). This might be easier to develop, can either be 
> static (the
> > widget build at compile time) or dynamic, and most of all, 
> it is easier
> > to modify an existing GUI.
> 
> I'm not fond of yet another Domain Specific Language (DSL), except if
> it brings clear advantages (of which I'm not yet convinced).
> 
> I don't mind learning a DSL from time to time, but not each time I
> need to program a part of my application.

In my current project we made a ocaml/tcl hybrid shell. It looks
like a normal tclsh, but allows to call ocaml functions. The
ocaml code is statically linked in the hybrid shell.

Our GUI DSL is therefore "TCL/TK" which we know very well. Tk has a very
good design and looks good after some simpe "option add"-tweaks. 
Unfortunaltly Tcl is a big crap, it's like lisp but without
any cool features (lambda, call/cc), no speed, syntax checks
everything (but arrays) is a string, dynamic scoping (with upvar)
and so on. Lisp+Tk would be cool.

> BTW, some research has been done one using functional style to program
> GUI (in Haskell??). We should at least have a look on it.

I'm sure it's done with monads.

And there was eXene for SML. Does anyone know it?

The syntax of wxHaskell seems to be very nice.

In the last thread about GUI&OCaml somebody mentioned
that cairo-ocaml could be a good starting point for a ocaml-native
GUI Library.

Best regards,
Christoph Bauer

