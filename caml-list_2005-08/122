Return-Path: <rich@annexia.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 37266BD73
	for <caml-list@yquem.inria.fr>; Tue, 16 Aug 2005 20:04:32 +0200 (CEST)
Received: from furbychan.cocan.org (furbychan.cocan.org [80.68.91.176])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j7GI4LAc015396
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 16 Aug 2005 20:04:31 +0200
Received: from rich by furbychan.cocan.org with local (Exim 3.35 #1 (Debian))
	id 1E55yn-0005ef-00; Tue, 16 Aug 2005 19:16:05 +0100
Date: Tue, 16 Aug 2005 19:16:05 +0100
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Snd question
Message-ID: <20050816181604.GA21719@furbychan.cocan.org>
References: <161F0D30A699A84A8B7435B62BCE33B30360E19F@APS-MSG-01.southpacific.corp.microsoft.com> <43011A10.4090108@havenrock.com> <1124198264.13635.25.camel@localhost.localdomain> <200508161734.38909.jon@ffconsultancy.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200508161734.38909.jon@ffconsultancy.com>
User-Agent: Mutt/1.3.28i
From: Richard Jones <rich@annexia.org>
X-Miltered: at concorde with ID 43022AA5.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 sml:01 trivial:01 sml:01 notepad:01 ...:98 wrote:01 define:01 tuples:01 tuple:02 tuple:02 match:02 suggests:04 anyway:05 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_FAIL autolearn=disabled 
	version=3.0.3

On Tue, Aug 16, 2005 at 05:34:38PM +0100, Jon Harrop wrote:
> Currently, you cannot match [|1; ...|] in OCaml.

Yes!  Or, "prefix" ^ str.

> > It would actually be nice to have more general support
> > for polyadic tuple management: for example thinking about
> > obtaining a slice of a tuple, or concatenating two tuples,
> > suggests that just getting the n'th component is special case.
> 
> From my limited experience of SML, it is more of a pain than a benefit.

It'd be pretty trivial anyway to define the SML #<number> operators
using camlp4.

Rich.

-- 
Richard Jones, CTO Merjis Ltd.
Merjis - web marketing and technology - http://merjis.com
Team Notepad - intranets and extranets for business - http://team-notepad.com

