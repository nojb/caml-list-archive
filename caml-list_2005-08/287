Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 74CE0BDCB
	for <caml-list@yquem.inria.fr>; Tue, 30 Aug 2005 15:03:10 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j7UD3AAe024769
	for <caml-list@yquem.inria.fr>; Tue, 30 Aug 2005 15:03:10 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA16029 for <caml-list@pauillac.inria.fr>; Tue, 30 Aug 2005 15:03:09 +0200 (MET DST)
Received: from smtp3.epfl.ch (smtp3.epfl.ch [128.178.2.15])
	by nez-perce.inria.fr (8.13.0/8.13.0) with SMTP id j7UD39lS024762
	for <caml-list@inria.fr>; Tue, 30 Aug 2005 15:03:09 +0200
Received: (qmail 22648 invoked by uid 107); 30 Aug 2005 13:03:08 -0000
Received: from mailav1.epfl.ch (128.178.50.190)
  by smtp3.epfl.ch with SMTP; 30 Aug 2005 13:03:08 -0000
Received: from (128.178.50.19) by MAILAV1.EPFL.CH via smtp
	 id 4e2a_2ba087da_1955_11da_9285_001143d18479;
	Tue, 30 Aug 2005 14:54:15 +0200
Received: from lampmac3.epfl.ch (128.178.154.94)
  by smtp0.epfl.ch (AngelmatoPhylax SMTP proxy); Tue, 30 Aug 2005 15:03:08 +0200
Mime-Version: 1.0 (Apple Message framework v733)
In-Reply-To: <3d13dcfc05083003286c4436f4@mail.gmail.com>
References: <4311DA63.4010104@havenrock.com> <200508292333.59714.jon@ffconsultancy.com> <3d13dcfc050830001671d0974f@mail.gmail.com> <43142CB2.8030306@univ-savoie.fr> <3d13dcfc05083003286c4436f4@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
Message-Id: <19A59FD3-7215-46B8-9868-7CBC53149A3F@epfl.ch>
Content-Transfer-Encoding: quoted-printable
From: =?ISO-8859-1?Q?B=FCnzli_Daniel?= <daniel.buenzli@epfl.ch>
Subject: Re: [Caml-list] Re: GUI for OCaml
Date: Tue, 30 Aug 2005 15:04:03 +0200
To: caml-list@inria.fr
X-Mailer: Apple Mail (2.733)
X-Miltered: at nez-perce with ID 4314590E.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 4314590D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; epfl:01 caml-list:01 ocaml:01 haskell:01 lazy:01 model:01 model:01 haskell:01 ...:98 thesis:01 chalmers:01 chalmers:01 btw:02 functional:02 functional:02 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3


Le 30 ao=FBt 05 =E0 12:28, David MENTRE a =E9crit :

> BTW, some research has been done one using functional style to program
> GUI (in Haskell??). We should at least have a look on it.

Some references are

 > fruit [1], based on functional reactive programming.
 > fudgets [2], based on lazy streams.

For multiplatform developpement, an approach would be to have a =20
conceptual model of user inter-face/action, i.e. no look, just feel. =20
This model could then be interpreted (possibly with hints to adjust =20
the look) with the tools provided by the different platform specific =20
toolkits. A kind of front-end/back-end architecture. Easy to say...

Daniel

[1]
<http://www.haskell.org/fruit/>

[2]
<http://www.cs.chalmers.se/ComputingScience/Research/Functional/=20
Fudgets/>
<http://www.cs.chalmers.se/~hallgren/Thesis/top.html>

