Return-Path: <jon@ffconsultancy.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id AF2E8BDCB
	for <caml-list@yquem.inria.fr>; Wed, 31 Aug 2005 02:11:29 +0200 (CEST)
Received: from ptb-relay03.plus.net (ptb-relay03.plus.net [212.159.14.214])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j7V0BT4a030605
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Wed, 31 Aug 2005 02:11:29 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by ptb-relay03.plus.net with esmtp (Exim) id 1EAGCO-0002D0-I2
	for caml-list@yquem.inria.fr; Wed, 31 Aug 2005 01:11:28 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: Fwd: [Caml-list] Does LablTk have a future?
Date: Wed, 31 Aug 2005 01:08:35 +0100
User-Agent: KMail/1.7.2
References: <20050830174757.99765.qmail@web30510.mail.mud.yahoo.com> <c22844d10508301553b54841b@mail.gmail.com> <c22844d105083015564ebb1a58@mail.gmail.com>
In-Reply-To: <c22844d105083015564ebb1a58@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200508310108.35620.jon@ffconsultancy.com>
X-Miltered: at nez-perce with ID 4314F5B1.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 labltk:01 renderer:01 trivial:01 ocaml:01 renderer:01 guis:01 ocaml:01 bindings:01 bindings:01 ...:98 ...:98 frog:98 wrote:01 closures:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Tuesday 30 August 2005 23:56, Chris Campbell wrote:
> > Option (2) seems much easier and more useful to me. I've never cared
> > about skinning...
>
> Easier???  You'd need to build a complete event/messaging subsystem, a
> renderer, ..., a set of widgets and get people to ship it.

Yes. The event system is trivial in OCaml (thanks to closures), particularly 
because graphics are regenerated on the fly for OpenGL. The renderer is as 
difficult as you want to make it. Conventional GUIs do little more than quads 
and pixmaps. Making widgets isn't exactly rocket science, albeit somewhat 
tedious. If by "ship it" you mean package it up for Debian etc. them I'm sure 
people will volunteer.

> Plus it'd likely only run on Linux and BSD.

No. It would run on Mac OS X and Windows as well. Probably others...

> It's 
> not easier at all especially if it was to be anything like a modern
> day gui - think Quartz Extreme/Aqua or AeroGlass.

I'm talking about aiming low.

> it'd be
> better to rely on them for the gui and wrap it with something like
> your description of a "functional GUI" or bind to WxWidgets (or both).

I disagree. Static type checking could be leveraged for GUI code as it is for 
most other OCaml code. Writing correct bindings to libraries like those is 
just as much work as writing a toolkit on top of OpenGL, only you'd end up 
with their inefficiencies and instabilities.

If anyone is seriously considering writing bindings for Cairo from OCaml then 
I'd like to know.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

