Return-Path: <tylere@mailshack.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 35356BDE6
	for <caml-list@yquem.inria.fr>; Tue, 30 Aug 2005 20:06:32 +0200 (CEST)
Received: from karen.nerdshack.com (karen.nerdshack.com [209.189.235.41])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j7UI6Vnd019360
	for <caml-list@yquem.inria.fr>; Tue, 30 Aug 2005 20:06:31 +0200
Received: from dispatchd.nerdshack.com (jean.nerdshack.com [209.189.235.38])
	by karen.nerdshack.com (Postfix) with SMTP id AC2021E387B
	for <caml-list@yquem.inria.fr>; Tue, 30 Aug 2005 13:01:26 -0500 (CDT)
Received: from localhost.localdomain (ip68-230-172-112.nc.hr.cox.net [68.230.172.112])
	by mail.nerdshack.com with ESMTP
	Tue, 30 Aug 2005 13:04:29 -0500
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Does LablTk have a future?
References: <20050830174757.99765.qmail@web30510.mail.mud.yahoo.com>
Message-ID: <op.swb1w7u405glvk@localhost.localdomain>
Date: Tue, 30 Aug 2005 14:06:33 -0400
From: "Tyler Eaves" <tylere@mailshack.com>
Content-Type: text/plain; format=flowed; delsp=yes; charset=utf-8
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
In-Reply-To: <20050830174757.99765.qmail@web30510.mail.mud.yahoo.com>
User-Agent: Opera M2/8.02 (Linux, build 1272)
X-Miltered: at concorde with ID 4314A027.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 labltk:01 wxwindows:01 gtk:01 low-level:01 api:01 tyler:98 cocoa:98 tyler:98 native:02 native:02 toolkit:03 programming:03 perhaps:03 gdi:03 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO,SPF_FAIL 
	autolearn=disabled version=3.0.3

Perhaps a viable solution is to take an approach similar to wxWindows, and  
write a library the uses a native library on each major platform (e.g.  
GTK2 or QT3 on *nix, GDI on Windows, and Cocoa on Mac OS X. This way you  
get a native interface on each paltform, as well as saving the effort of  
having to actually write a low-level toolkit. That was programming effort  
could be spent solely on the actual API.

-- 
Tyler Eaves
<tylere@mailshack.com>

