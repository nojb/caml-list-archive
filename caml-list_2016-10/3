Return-Path: <francois.berenger@inria.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id AA46A7F029
	for <caml-list@sympa.inria.fr>; Sat,  1 Oct 2016 22:16:09 +0200 (CEST)
X-IronPort-AV: E=Sophos;i="5.31,428,1473112800"; 
   d="scan'208";a="195305148"
Received: from zmbs3.inria.fr ([128.93.142.16])
  by mail3-relais-sop.national.inria.fr with ESMTP; 01 Oct 2016 22:16:09 +0200
Date: Sat, 1 Oct 2016 22:16:09 +0200 (CEST)
From: Francois Berenger <francois.berenger@inria.fr>
To: 'OCaml Mailing List' <caml-list@inria.fr>
Cc: caml-list@inria.fr
Message-ID: <1413603362.6315173.1475352969328.JavaMail.zimbra@inria.fr>
In-Reply-To: <20160929161346.ABF4FE1A4F@yquem.inria.fr>
References: <20160929161346.ABF4FE1A4F@yquem.inria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
X-Originating-IP: [12.247.152.14]
X-Mailer: Zimbra 8.0.9_GA_6191 (zclient/8.0.9_GA_6191)
Thread-Topic: =?utf-8?B?UmXCoDo=?= [Caml-list] Sklml first public release
Thread-Index: XuN7fuyhzYqeh1M0AgXQGAA7XUij6A==
Subject: [Caml-list] =?ISO-8859-1?Q?Re=A0=3A_Sklml_first_public_release?=

Hi,

Very cool and interesting work.

Can sklml be used to program GPUs?

I =B4m a big fan of parmap; but I =B4m ok to switch to anything high perfor=
mance.

Also, is there an opam switch or something for sklml?

Thanks a lot for this alien technology,
Francois.

----- Pierre Weis <pierre.weis@inria.fr> a =E9crit=A0:
>                    Easy coarse grain parallelization=20=20=20=20=20=20=20=
=20=20=20=20=20=20=20=20=20=20=20=20=20
>=20
> We are glad to announce the availability of Sklml version 2.0+pl0.
>=20
> What is Sklml?
> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
>=20
> Sklml is a functional parallel skeleton compiler and programming system f=
or OCaml programs.
>=20
> The Sklml system is embedded into the OCaml programming language
> and inherits the good properties of this functional heritage: Sklml
> programs cannot go wrong (no bus error nor segmentation faults).
>=20
> All Sklml programs may be run in two evaluation modes: parallel or
> sequential evaluation.
>=20
> The Sklml system features another salient property: for any
> Sklml program the sequential and parallel evaluation modes always
> return the same result. In particular, the parallel evalution mode is
> deterministic and do not introduce nor hide any error (such as floating p=
oint
> rounding errors).
>=20
> In Sklml, parallelization is explicit and uses high-level
> parallelization primitives for program parallel and data parallel usual
> programming situations.
>=20
> Composing the parallelization primitives is a powerful way to define more
> complex or specialized parallelization schemes. For instance, the
> Sklml library features a 'domain' high-level function devoted to
> advanced scientific computing: indeed, the function 'mk_domain' provides a
> parallel implementation of the classical 'Domain Decomposition' method to
> solve Partial Differential Equations. Using the same methodology, advanced
> users can define powerful parallelization functions and tune Sklml
> to the specific domain at hand.
>=20
> Where to get the Sklml code?
> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D
>=20
> The tarball is available here:
>     http://sklml.inria.fr/archive/sklml-2.0+pl0.tgz
>=20
> Where to get more information?
> =3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D
>=20
> The package home page is here:
>     http://sklml.inria.fr/
>=20
> All constructive criticisms and propositions are warmly welcomed.
>=20
> Enjoy.
>=20
> Francois Clement <Francois.Clement@inria.fr>
> Pierre Weis <Pierre.Weis@inria.fr>
>=20
> --=20
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs

