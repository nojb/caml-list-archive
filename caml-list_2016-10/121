Return-Path: <nicolas.ojeda.bar@lexifi.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id B793E7EE89
	for <caml-list@sympa.inria.fr>; Fri, 28 Oct 2016 15:25:38 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=nicolas.ojeda.bar@lexifi.com; spf=None smtp.mailfrom=nicolas.ojeda.bar@lexifi.com; spf=None smtp.helo=postmaster@vrout10.yaziba.net
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  nicolas.ojeda.bar@lexifi.com) identity=pra;
  client-ip=185.56.204.32;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="nicolas.ojeda.bar@lexifi.com";
  x-sender="nicolas.ojeda.bar@lexifi.com";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  nicolas.ojeda.bar@lexifi.com) identity=mailfrom;
  client-ip=185.56.204.32;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="nicolas.ojeda.bar@lexifi.com";
  x-sender="nicolas.ojeda.bar@lexifi.com";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@vrout10.yaziba.net) identity=helo;
  client-ip=185.56.204.32;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="nicolas.ojeda.bar@lexifi.com";
  x-sender="postmaster@vrout10.yaziba.net";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AEKsRZhBlfEv5jIEJR3O0UyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSP74osbcNUDSrc9gkEXOFd2CrakV0ayJ6Ou9ByRAuc/H6y9SNsQUFlcsso?=
 =?us-ascii?q?Y/oU8JOIa9E0r1LfrnPWQRPf9pcxtbxUy9KlVfA83kZlff8TWY5D8WHQjjZ0Iu?=
 =?us-ascii?q?frymUqabtcm81viz9pvPeE0IwWPlOfIhZCmx+D7Rv9gQjMNMLqstwRvEuDMcYO?=
 =?us-ascii?q?Rf1GVlY1yXkgr35sqqusM72ytVsvMlscVHVPOpUb4/SOl+DT8hN2kurOrpuBXK?=
 =?us-ascii?q?BSGG/DNIVGQdlR5BGE7C7hz2V9H7uzHSsudt2Sebe8bxSOZnCnyZ8653RUqw22?=
 =?us-ascii?q?88PDkj/TSS05QogQ=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0C3AQB6URNYgCDMOLlcHAEBBAEBCgEBF?=
 =?us-ascii?q?wEBBAEBCgEBgn8BAQEBAYF0B6Quh16HRocihiMCgXQHQhEBAQEBAQEBAQEBARI?=
 =?us-ascii?q?BAQsLCQkbMoIzBAEVAQSCEQEBBBIRBFIQCwsNKgICIQESAQUBHAYTIogYAxcEA?=
 =?us-ascii?q?aNCgTI/MotGiHYNg28BAQEHAQEBAQEiixKCR4UEglsBBI5Mixc1h2WFGoMokAS?=
 =?us-ascii?q?Ic4Qcgj8THoEPAjRxhRpwAYYogUoBAQE?=
X-IPAS-Result: =?us-ascii?q?A0C3AQB6URNYgCDMOLlcHAEBBAEBCgEBFwEBBAEBCgEBgn8?=
 =?us-ascii?q?BAQEBAYF0B6Quh16HRocihiMCgXQHQhEBAQEBAQEBAQEBARIBAQsLCQkbMoIzB?=
 =?us-ascii?q?AEVAQSCEQEBBBIRBFIQCwsNKgICIQESAQUBHAYTIogYAxcEAaNCgTI/MotGiHY?=
 =?us-ascii?q?Ng28BAQEHAQEBAQEiixKCR4UEglsBBI5Mixc1h2WFGoMokASIc4Qcgj8THoEPA?=
 =?us-ascii?q?jRxhRpwAYYogUoBAQE?=
X-IronPort-AV: E=Sophos;i="5.31,410,1473112800"; 
   d="scan'208,217";a="242763347"
Received: from vrout10.yaziba.net ([185.56.204.32])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 28 Oct 2016 15:25:38 +0200
Received: from mtaout20.int.yaziba.net (mtaout20.int.yaziba.net [10.4.20.37])
	(using TLSv1 with cipher ADH-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by vrout10.yaziba.net (mx10.yaziba.net) with ESMTPS id CA4BD5229D
	for <caml-list@inria.fr>; Fri, 28 Oct 2016 15:25:37 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by mtaout20.int.yaziba.net (Postfix) with ESMTP id EB24F16030D
	for <caml-list@inria.fr>; Fri, 28 Oct 2016 15:25:37 +0200 (CEST)
X-Virus-Scanned: amavisd-new at mtaout20.int.yaziba.net
Received: from mtaout20.int.yaziba.net ([127.0.0.1])
	by localhost (mtaout20.int.yaziba.net [127.0.0.1]) (amavisd-new, port 10026)
	with ESMTP id ID1bsCXiyIGA for <caml-list@inria.fr>;
	Fri, 28 Oct 2016 15:25:37 +0200 (CEST)
Received: from mail-qk0-f174.google.com (mail-qk0-f174.google.com [209.85.220.174])
	by mtaout20.int.yaziba.net (Postfix) with ESMTPSA id BDDA61602F6
	for <caml-list@inria.fr>; Fri, 28 Oct 2016 15:25:37 +0200 (CEST)
Received: by mail-qk0-f174.google.com with SMTP id v138so31022114qka.0
        for <caml-list@inria.fr>; Fri, 28 Oct 2016 06:25:37 -0700 (PDT)
X-Gm-Message-State: ABUngvfQpK8MdaPhZSMyk+LVcMtvAIR2IIV9ySqYhu1amqslETHbXH4OgZL5w9fR2bkaxs9sFKw+R8fi5z/CMw==
X-Received: by 10.55.20.164 with SMTP id 36mr10489450qku.86.1477661136721;
 Fri, 28 Oct 2016 06:25:36 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.237.53.109 with HTTP; Fri, 28 Oct 2016 06:25:16 -0700 (PDT)
In-Reply-To: <CAMsAzy_k1X0vo6a2+sEOrHsTJaWpYzCWMwccFwT-ZmR22P57qA@mail.gmail.com>
References: <CAMsAzy-x_j=3PPo-krQ08+PW5Y3fLgw2s=U28B5dpZ=PdYwOOw@mail.gmail.com>
 <CADK7aFOEJfpJObhX2rs4uHDO62B7e_jkzde2yxYLqgwB6tguHg@mail.gmail.com> <CAMsAzy_k1X0vo6a2+sEOrHsTJaWpYzCWMwccFwT-ZmR22P57qA@mail.gmail.com>
From: Nicolas Ojeda Bar <nicolas.ojeda.bar@lexifi.com>
Date: Fri, 28 Oct 2016 15:25:16 +0200
X-Gmail-Original-Message-ID: <CADK7aFPTLQP22Duwrjom1YEuChvNhhgCvz83SU+5QbHfE3GsPQ@mail.gmail.com>
Message-ID: <CADK7aFPTLQP22Duwrjom1YEuChvNhhgCvz83SU+5QbHfE3GsPQ@mail.gmail.com>
To: Shayne Fletcher <shayne.fletcher.50@gmail.com>
Cc: "caml-list@inria.fr users" <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a1145e8d0272d15053feccb31
X-DRWEB-SCAN: ok
X-VRSPAM-SCORE: -100
X-VRSPAM-STATE: legit
X-VRSPAM-CAUSE: gggruggvucftvghtrhhoucdtuddrfeelvddrjeefgdeihecutefuodetggdotefrucfrrhhofhhilhgvmecuggftfghnshhusghstghrihgsvgenuceurghilhhouhhtmecufedttdenucesvcftvggtihhpihgvnhhtshculddquddttddmnecujfgurhepjghfhfffkffuvfgtsegrtderredttdejnecuhfhrohhmpefpihgtohhlrghsucfqjhgvuggruceurghruceonhhitgholhgrshdrohhjvggurgdrsggrrheslhgvgihifhhirdgtohhmqeenucfkphepvddtledrkeehrddvvddtrddujeegnecurfgrrhgrmhepmhhouggvpehsmhhtphhouhht
X-VRSPAM-EXTCAUSE: mhhouggvpehsmhhtphhouhht
Subject: Re: [Caml-list] Functor signature "inheritance"

--001a1145e8d0272d15053feccb31
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Hi Shayne,

You can add a constrain to your functor arguments :

module type MUL =3D functor (E : EQ) (N : NUM with type t =3D E.t) ->
    MUL_S with module N :=3D N and module E :=3D E

Cheers,
Nicolas

On Fri, Oct 28, 2016 at 3:14 PM, Shayne Fletcher <
shayne.fletcher.50@gmail.com> wrote:

>
> On Fri, Oct 28, 2016 at 9:01 AM, Nicolas Ojeda Bar <
> nicolas.ojeda.bar@lexifi.com> wrote:
>
>>
>> One approach is to name the *output* signature of the functors:
>>
>> module type EQ_PROD_S =3D sig
>>     module X : EQ
>>     module Y : EQ
>>     type t =3D X.t * Y.t
>>     val eq: t * t -> bool
>> end
>>
>
> =E2=80=8BSorry to be a bother. Got another one for you Nicolas=E2=80=8B!
>
> How do I achieve the intent of this:
>
> module type EQ =3D sig
>   type t
>   val eq : t * t -> bool
> end
>
> module type NUM =3D sig
>   type t
>   val from_int : int -> t
>   val ( + ) : t -> t -> t
> end
>
> module type MUL_S =3D sig
>   module N : NUM
>   module E : EQ  with type t :=3D N.t
>
>   type t =3D N.t
>   val mul : t -> t -> t
> end
>
> module type MUL =3D functor (E : EQ) (N : NUM) -> MUL_S with module N :=
=3D N
> and module E :=3D E
>
> The idea is that the modules satisfying EQ and NUM must agree in their
> type t and MUL brings them together and adds a 'mul' function.
>
> --
> Shayne Fletcher
>

--001a1145e8d0272d15053feccb31
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi Shayne,<div><br></div><div>You can add a constrain to y=
our functor arguments :</div><div><br></div><div>module type MUL =3D functo=
r (E : EQ) (N : NUM with type t =3D E.t) -&gt;</div><div>=C2=A0 =C2=A0 MUL_=
S with module N :=3D N and module E :=3D E</div><div><br></div><div>Cheers,=
</div><div>Nicolas</div></div><div class=3D"gmail_extra"><br><div class=3D"=
gmail_quote">On Fri, Oct 28, 2016 at 3:14 PM, Shayne Fletcher <span dir=3D"=
ltr">&lt;<a href=3D"mailto:shayne.fletcher.50@gmail.com" target=3D"_blank">=
shayne.fletcher.50@gmail.com</a>&gt;</span> wrote:<br><blockquote class=3D"=
gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-=
left:1ex"><div dir=3D"ltr"><div class=3D"gmail_extra"><br><div class=3D"gma=
il_quote"><span class=3D"">On Fri, Oct 28, 2016 at 9:01 AM, Nicolas Ojeda B=
ar <span dir=3D"ltr">&lt;<a href=3D"mailto:nicolas.ojeda.bar@lexifi.com" ta=
rget=3D"_blank">nicolas.ojeda.bar@lexifi.com</a>&gt;</span> wrote:<br></spa=
n><span class=3D""><blockquote class=3D"gmail_quote" style=3D"margin:0px 0p=
x 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex"><div><=
br></div><div>One approach is to name the *output* signature of the functor=
s:</div><div><br></div><div>module type EQ_PROD_S =3D sig</div><div>=C2=A0 =
=C2=A0 module X : EQ</div><div>=C2=A0 =C2=A0 module Y : EQ</div><span class=
=3D"m_-3049684786154231797gmail-"><div>=C2=A0 =C2=A0 type t =3D X.t * Y.t</=
div><div>=C2=A0 =C2=A0 val eq: t * t -&gt; bool</div><div>end</div></span><=
/blockquote></span></div><br><div class=3D"gmail_default"><font face=3D"tah=
oma, sans-serif">=E2=80=8BSorry to be a bother. Got another one for you Nic=
olas=E2=80=8B!</font><br><br><font face=3D"tahoma, sans-serif">How do I ach=
ieve the intent of this:</font><span class=3D""><br><br><div class=3D"gmail=
_default"><font face=3D"tahoma, sans-serif">module type EQ =3D sig</font></=
div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 t=
ype t</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-s=
erif">=C2=A0 val eq : t * t -&gt; bool</font></div><div class=3D"gmail_defa=
ult"><font face=3D"tahoma, sans-serif">end</font></div><div class=3D"gmail_=
default"><font face=3D"tahoma, sans-serif"><br></font></div></span><div cla=
ss=3D"gmail_default"><font face=3D"tahoma, sans-serif">module type NUM =3D =
sig</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-ser=
if">=C2=A0 type t</font></div><div class=3D"gmail_default"><font face=3D"ta=
homa, sans-serif">=C2=A0 val from_int : int -&gt; t</font></div><div class=
=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 val ( + ) : t -=
&gt; t -&gt; t</font></div><div class=3D"gmail_default"><font face=3D"tahom=
a, sans-serif">end</font></div><div class=3D"gmail_default"><font face=3D"t=
ahoma, sans-serif"><br></font></div><div class=3D"gmail_default"><font face=
=3D"tahoma, sans-serif">module type MUL_S =3D sig</font></div><div class=3D=
"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 module N : NUM</fo=
nt></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=
=A0 module E : EQ =C2=A0with type t :=3D N.t</font></div><div class=3D"gmai=
l_default"><font face=3D"tahoma, sans-serif"><br></font></div><div class=3D=
"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 type t =3D N.t</fo=
nt></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=
=A0 val mul : t -&gt; t -&gt; t</font></div><div class=3D"gmail_default"><f=
ont face=3D"tahoma, sans-serif">end</font></div><div class=3D"gmail_default=
"><font face=3D"tahoma, sans-serif"><br></font></div><div class=3D"gmail_de=
fault"><font face=3D"tahoma, sans-serif">module type MUL =3D functor (E : E=
Q) (N : NUM) -&gt; MUL_S with module N :=3D N and module E :=3D E</font></d=
iv><div style=3D"font-family:tahoma,sans-serif"><br></div><div style=3D"fon=
t-family:tahoma,sans-serif">The idea is that the modules satisfying EQ and =
NUM must agree in their type t and MUL brings them together and adds a &#39=
;mul&#39; function.</div></div><span class=3D"HOEnZb"><font color=3D"#88888=
8"><div><br></div>-- <br><div class=3D"m_-3049684786154231797gmail_signatur=
e">Shayne Fletcher</div>
</font></span></div></div>
</blockquote></div><br></div>

--001a1145e8d0272d15053feccb31--
