Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p8JH8ltd012395
	for <caml-list@sympa-roc.inria.fr>; Mon, 19 Sep 2011 19:08:47 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Av0EAHp2d05QRFuw/2dsb2JhbABCpzh3gVMBAQU6PxALDgocEhQoIYgMtHCGGGAEpHc
X-IronPort-AV: E=Sophos;i="4.68,406,1312149600"; 
   d="scan'208";a="120438780"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/AES256-SHA; 19 Sep 2011 19:08:42 +0200
Received: from rich by furbychan.cocan.org with local (Exim 4.72)
	(envelope-from <rich@annexia.org>)
	id 1R5hKi-0001Ck-U7; Mon, 19 Sep 2011 18:08:40 +0100
Date: Mon, 19 Sep 2011 18:08:40 +0100
From: "Richard W.M. Jones" <rich@annexia.org>
To: Gerd Stolpmann <info@gerd-stolpmann.de>
Cc: caml-list <caml-list@inria.fr>
Message-ID: <20110919170840.GA4596@annexia.org>
References: <1301320989.8429.507.camel@thinkpad>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1301320989.8429.507.camel@thinkpad>
User-Agent: Mutt/1.5.20 (2009-06-14)
Subject: Re: [Caml-list] [ANN] Netamqp, a client for AMQP-0-9-1

On Mon, Mar 28, 2011 at 04:03:09PM +0200, Gerd Stolpmann wrote:
> the ocaml team at Mylife is proud to release another library to the
> public: Netamqp is a client of the AMQP-0-9-1 protocol which is used to
> talk to message queue servers. Netamqp is an independent implementation
> of such a client, and not simply a wrapper around a C library.  Netamqp
> has been tested against RabbitMQ.

Gerd, have you tried to interoperate with any other language?

I tried examples/t_sender.ml along with the following Python receiver
(all on the same RabbitMQ instance), but the Python code didn't appear
to see any messages at all.  I'm quite probably doing something stupid.

----------------------------------------------------------------------
#!/usr/bin/python

import pika

connection = pika.BlockingConnection(pika.ConnectionParameters(
        'localhost'))
channel = connection.channel()

channel.queue_declare(queue='test_xy')

def callback(ch, method, properties, body):
    print " [x] Received %r" % (body,)

channel.basic_consume(callback,
                      queue='test_xy',
                      no_ack=True)

print ' [*] Waiting for messages. To exit press CTRL+C'
channel.start_consuming()
----------------------------------------------------------------------

Rich.

-- 
Richard Jones
Red Hat
