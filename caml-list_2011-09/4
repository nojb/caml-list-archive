Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p8204w1e027239
	for <caml-list@sympa-roc.inria.fr>; Fri, 2 Sep 2011 02:04:58 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApwBADocYE5KfVM2kGdsb2JhbABChE2UX48hCBQBAQEBCQkNBxQEIYFZAg8EGQE5Aw0FEA8CJgIkEgEFAVeiBoJVCot8gxaFN4koAgMGgSaEIoERBJMnjGU8gUeCJg
X-IronPort-AV: E=Sophos;i="4.68,316,1312149600"; 
   d="scan'208";a="118060465"
Received: from mail-gw0-f54.google.com ([74.125.83.54])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 02 Sep 2011 02:04:52 +0200
Received: by gwb15 with SMTP id 15so1862952gwb.27
        for <caml-list@inria.fr>; Thu, 01 Sep 2011 17:04:51 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:sender:date:x-google-sender-auth:message-id:subject
         :from:to:content-type;
        bh=XgPEr90TnXg/OMa69Cv4hygZqOvm4P7G9yqYX0T9NKw=;
        b=kY138IeewOdjt7h9hfuA0KSFeUU70ifzFg+evnSrnSMVgrUBvIMa1rummJ6z4HMFJy
         Eg68K7e8YOL9Okbfw+b7Dc3RkzvRyWPVkBZNZ//33hdSZIGPaeppt4R5J0mJARCPyOfl
         Hoe5g2av0yU194fxMWOvcuQiPChDHz8V96dAg=
MIME-Version: 1.0
Received: by 10.146.192.28 with SMTP id p28mr372568yaf.35.1314921891544; Thu,
 01 Sep 2011 17:04:51 -0700 (PDT)
Sender: daniel.c.buenzli@gmail.com
Received: by 10.147.32.14 with HTTP; Thu, 1 Sep 2011 17:04:51 -0700 (PDT)
Date: Fri, 2 Sep 2011 02:04:51 +0200
X-Google-Sender-Auth: vJ2k5RKp9aDbhuJtYSuNn2munfM
Message-ID: <CALgo1QJh+q4b9HA4vbS4WSiWxGvhaSexh0i=z=OLQo=dxbuSAg@mail.gmail.com>
From: =?UTF-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: caml-list@inria.fr
Content-Type: text/plain; charset=UTF-8
Subject: [Caml-list] Cross-platform cpu count

Hello,

Can anybody confirm me that the following code works on cygwin :

let cpu_count () =
  try match Sys.os_type with
  | "Win32" -> int_of_string (Sys.getenv "NUMBER_OF_PROCESSORS")
  | _ ->
      let i = Unix.open_process_in "getconf _NPROCESSORS_ONLN" in
      let close () = ignore (Unix.close_process_in i) in
      try Scanf.fscanf i "%d" (fun n -> close (); n) with e -> close (); raise e
  with
  | Not_found | Sys_error _ | Failure _ | Scanf.Scan_failure _
  | End_of_file | Unix.Unix_error (_, _, _) -> 1

Thanks,

Daniel
