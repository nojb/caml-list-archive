Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p8BDZsik016902
	for <caml-list@sympa-roc.inria.fr>; Sun, 11 Sep 2011 15:35:54 +0200
X-IronPort-AV: E=Sophos;i="4.68,363,1312149600"; 
   d="scan'208";a="119233652"
Received: from walapai.inria.fr ([128.93.30.24])
  by mail1-relais-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 11 Sep 2011 15:35:49 +0200
Received: from walapai.inria.fr (localhost [127.0.0.1])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p8BDZnKS016899
	for <caml-list@inria.fr>; Sun, 11 Sep 2011 15:35:49 +0200
Received: (from sympa@localhost)
	by walapai.inria.fr (8.13.6/8.12.10/Submit) id p8BDZmTr016898
	for caml-list@inria.fr; Sun, 11 Sep 2011 15:35:48 +0200
Date: Sun, 11 Sep 2011 15:35:48 +0200
X-Authentication-Warning: walapai.inria.fr: sympa set sender to sympa@inria.fr using -f
To: caml-list@inria.fr
From: jocelyn.serot@univ-bpclermont.fr
In-Reply-To: 
Message-ID: <sympa.1315746812.597.143@inria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8bit
Subject: [Caml-list] Running ocaml programs on Windows

Hello,

This may be a trivial question for people working on multiple platforms but,
having worked for a long time only on Unix-like platforms (including Mac OS X),
i'm a bit puzzled..

What is the "best" (simplest both for the programmer and, most importantly, the
end user) way to develop a program in Ocaml in order to distribute it to people
having only MS Windows platforms ? 

Is it possible to cross-compile (from what i've read, no)  ?

Do i have to install a ocaml distribution on a machine running windows, compile
my program with the installed tools (ocamlc/ocamlopt) and distribute the
resulting .exe ?

Aux question : In the Unix version, arguments are passed on the command line. I
understand that the same can be done under Windows using some kind of "shell"
(under Cygwin). But this may be disruptive to many Windows users who are used
to the "click to launch" approach. Is there some kind of tool that could
automatically wrap a command-line-based app into a click-to-launch app (with
some additionnal pop-ups to enter arguments for ex) ? 

Sorry if these questions sound trivial but despite a long experience in Ocaml
programming (>15 yrs), i've never been exposed to sw dev under windows (in fact
i deliberately avoid this terrain ;) 

Btw, for those interested, the program i'm trying to port is a compiler
generating VHDL code for FPGAs from high-level actor-dataflow descriptions
(more info here :
http://wwwlasmea.univ-bpclermont.fr/Personnel/Jocelyn.Serot/caph.html).
For the moment, i'm distributing a bytecode but this requires the target
audience to have a ocaml distrib installed on their machine (which, from
experience, most of them view it as an hindrance). 

Thanks for help,

Jocelyn
