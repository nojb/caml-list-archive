Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p8RFQam9023042
	for <caml-list@sympa-roc.inria.fr>; Tue, 27 Sep 2011 17:26:40 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Am0BAOTqgU5KfVI0imdsb2JhbABBp3QIFAEBAQoJDQcSBiKBUwEBAQMBEgITGQEbHQEDAQsGBQQHOyMRAQUBHAY1h1YCnTcKi0yCXIUVO4huAgQGhiVgBJNShSKBKoY+PYNv
X-IronPort-AV: E=Sophos;i="4.68,449,1312149600"; 
   d="scan'208,217";a="110784508"
Received: from mail-ww0-f52.google.com ([74.125.82.52])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 27 Sep 2011 17:26:40 +0200
Received: by wwj40 with SMTP id 40so8222641wwj.9
        for <caml-list@inria.fr>; Tue, 27 Sep 2011 08:26:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=cc:message-id:from:to:in-reply-to:content-type:mime-version:subject
         :date:references:x-mailer;
        bh=YF1E3NMEDv8NM1KLbMy5IOH5qC4diN7ADDh+LTY3qKQ=;
        b=SaL9eOA5fAjl0LAwBWCu6F9MP8tdoLflLThTPXl1j3mn5ZVjEUIeaDHUvS/fXejP4B
         fO5uy6hY2UEjXNqIy/oJ405Esd+BFqx+k9sM7uDAqWus1V2l7zH1o/b/Z7XRF1fBJJ4B
         3GA1ujaCT6Ki3Q0Wl1tDo9Y/yhlMiDUaTuRVg=
Received: by 10.216.221.42 with SMTP id q42mr9374387wep.16.1317137199612;
        Tue, 27 Sep 2011 08:26:39 -0700 (PDT)
Received: from [192.168.0.10] (lau06-5-88-176-33-221.fbx.proxad.net. [88.176.33.221])
        by mx.google.com with ESMTPS id f26sm36234885wbp.7.2011.09.27.08.26.37
        (version=TLSv1/SSLv3 cipher=OTHER);
        Tue, 27 Sep 2011 08:26:38 -0700 (PDT)
Cc: OCaML Mailing List <caml-list@inria.fr>
Message-Id: <53C8B18E-A3AD-4DB1-A477-EE7FA7846845@gmail.com>
From: Christophe Papazian <christophe.papazian@gmail.com>
To: Walter Cazzola <cazzola@dico.unimi.it>
In-Reply-To: <alpine.LFD.2.00.1109271546540.8918@surtur.dico.unimi.it>
Content-Type: multipart/alternative; boundary=Apple-Mail-1--472419616
Mime-Version: 1.0 (Apple Message framework v936)
Date: Tue, 27 Sep 2011 17:26:36 +0200
References: <alpine.LFD.2.00.1109271335550.8918@surtur.dico.unimi.it> <E923C544-C166-46CC-B02B-B36CFBE79E39@gmail.com> <alpine.LFD.2.00.1109271546540.8918@surtur.dico.unimi.it>
X-Mailer: Apple Mail (2.936)
Subject: Re: [Caml-list] still silly issues on polymorphic types


--Apple-Mail-1--472419616
Content-Type: text/plain;
	charset=US-ASCII;
	format=flowed;
	delsp=yes
Content-Transfer-Encoding: 7bit


>
> uhm, I have a couple of questions I don't understand on your
> explanation:
> - why the most general type is int->'a and not 'a -> 'b?

Because if I need a function of type int -> 'a I can give a function  
of type 'a -> 'b.
But if I need a function of type 'a -> 'b I can not use a function of  
type int -> 'a.
So int -> 'a is more general and 'a -> 'b is more specific.

General rule : if a < b then (a->c) > (b->c)

> - does this mean that I can't have a general type that could be  
> matched
>   by 'a -> 'a list -> 'a list  and int -> int -> int ?
>

if you want to get a supertype of a -> b and c -> d you need to
find a subtype of a and c AND find a supertype of b and d.

So for example for ('a -> ( 'a list -> 'a list)) and (int -> (int ->  
int))
you need
  - a subtype of 'a and int : it's int. you have one.
  - a supertype of ('a list -> 'a list) and (int -> int) (reapply the  
same procedure)
       -a subtype of 'a list and int : there is no such thing in  
ocaml, so there is no supertype.

So to answer your question, you can't. But as Jacques Garrigue said,  
you don't need either,
and you can use abstract type and "with type" construction.




> Walter
>
> -- 


--Apple-Mail-1--472419616
Content-Type: text/html;
	charset=US-ASCII
Content-Transfer-Encoding: quoted-printable

<html><body style=3D"word-wrap: break-word; -webkit-nbsp-mode: space; -webk=
it-line-break: after-white-space; "><br><div><blockquote type=3D"cite"><div=
><font class=3D"Apple-style-span" color=3D"#000000"><br></font>uhm, I have =
a couple of questions I don't understand on your<br>explanation:<br> - why =
the most general type is int-&gt;'a and not 'a -&gt; 'b?<br></div></blockqu=
ote><div><br></div><div>Because if I need a function of type int -&gt; 'a I=
 can give a function of type 'a -&gt; 'b.</div><div>But if I need a functio=
n of type 'a -&gt; 'b I can not use a function of type int -&gt; 'a.</div><=
div>So int -&gt; 'a is more general and 'a -&gt; 'b is more specific.</div>=
<div><br></div><div>General rule : if a &lt; b then (a-&gt;c) &gt; (b-&gt;c=
)&nbsp;</div><br><blockquote type=3D"cite"><div> - does this mean that I ca=
n't have a general type that could be matched<br> &nbsp;&nbsp;by 'a -&gt; '=
a list -&gt; 'a list &nbsp;and int -&gt; int -&gt; int ?<br><br></div></blo=
ckquote><div><br></div><div>if you want to get a supertype of a -&gt; b and=
 c -&gt; d you need to</div><div>find a subtype of a and c AND find a super=
type of b and d.</div><div><br></div><div>So for example for ('a -&gt; ( 'a=
 list -&gt; 'a list)) and (int -&gt; (int -&gt; int))</div><div>you need</d=
iv><div>&nbsp;- a subtype of 'a and int : it's int. you have one.</div><div=
>&nbsp;- a supertype of ('a list -&gt; 'a list) and (int -&gt; int) (reappl=
y the same procedure)</div><div>&nbsp; &nbsp; &nbsp; -a subtype of 'a list =
and int : there is no such thing in ocaml, so there is no supertype.</div><=
div><br></div><div>So to answer your question, you can't. But as Jacques Ga=
rrigue said, you don't need either,</div><div>and you can use abstract type=
 and "with type" construction.</div><div><br></div><div><br></div><div><br>=
</div><br><blockquote type=3D"cite"><div>Walter<br><br>-- <br></div></block=
quote></div><br></body></html>=

--Apple-Mail-1--472419616--
