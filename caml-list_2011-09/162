Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p8K8AuWX014345
	for <caml-list@sympa-roc.inria.fr>; Tue, 20 Sep 2011 10:10:59 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AsQBAC9KeE7RVdQzkGdsb2JhbABCmGmHRgGHCwgUAQEBAQkJDQcUBCGBUwEBAQECAQsHAhcVARsSCwEDAQsGBQQHDQ0hIQEBDAEEAQUBAwEGEgYTCAoQh1UEl0oKi0EKglKFQjuIbQIDBoZzBIJUhRqLXYYLhAeCcT05g0I
X-IronPort-AV: E=Sophos;i="4.68,410,1312149600"; 
   d="scan'208";a="109686703"
Received: from mail-vw0-f51.google.com ([209.85.212.51])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 20 Sep 2011 10:10:59 +0200
Received: by vws20 with SMTP id 20so548434vws.10
        for <caml-list@inria.fr>; Tue, 20 Sep 2011 01:10:58 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:reply-to:in-reply-to:references:date:message-id
         :subject:from:to:cc:content-type;
        bh=uMbEtHAJS5REPzp0ZutOSELgHhE7i2k7Fp4ZEpGrEO8=;
        b=H5L/CIxKUlipsGE0ezwj3DHYAGTe7lGUAhktcx9Fwf1CGIPWPR96EBiithUz0xRI9z
         +HA1EGoAZFryuLQ9ipkax9+NsB2Ubzm1TqYgndpbNKKDNz8MXNszKFLRLsP+5oKwKiEn
         4pTZaaDpjJHQN+JEoP6Ow/mhIJIiW7TMsKFAQ=
MIME-Version: 1.0
Received: by 10.220.106.211 with SMTP id y19mr107293vco.211.1316506257141;
 Tue, 20 Sep 2011 01:10:57 -0700 (PDT)
Received: by 10.220.152.84 with HTTP; Tue, 20 Sep 2011 01:10:57 -0700 (PDT)
Reply-To: yminsky@gmail.com
In-Reply-To: <CAK0y-35JNF-5z=fj3t+79QVWmE5J-1UpT2dmBqCf6h87Ymx+Eg@mail.gmail.com>
References: <CADKNfhL2eqV3aSF76yy6rigPVfj+MXhjzh_b_xizbwdt3P_QZg@mail.gmail.com>
	<CAK0y-35JNF-5z=fj3t+79QVWmE5J-1UpT2dmBqCf6h87Ymx+Eg@mail.gmail.com>
Date: Tue, 20 Sep 2011 16:10:57 +0800
Message-ID: <CADKNfhJbZ9EmrVsL3k8uOaYX7wVSJToN5YuQhpR5w0Ydazc60A@mail.gmail.com>
From: Yaron Minsky <yminsky@gmail.com>
To: Jacques Le Normand <rathereasy@gmail.com>
Cc: caml-list@inria.fr
Content-Type: multipart/alternative; boundary=f46d043c7baacd304f04ad5aff35
Subject: Re: [Caml-list] A limitation of "with type" declarations for
 first-class modules


--f46d043c7baacd304f04ad5aff35
Content-Type: text/plain; charset=ISO-8859-1

I agree this works around the limitation, but it does beg the question: why
is the limitation there in the first place?

On Tue, Sep 20, 2011 at 4:00 PM, Jacques Le Normand <rathereasy@gmail.com>wrote:

> first post! let's see if anyone can do better...
>
> module type Foo = sig type t end
> module type Bar = sig type foo_t module Foo : Foo type t = foo_t   end
>
>      (* compiles *)
> let g (type a) (m : (module Foo with type t = a)) = ()
>
>    (* fails to compile with a syntax error *)
> let f (type a) (m : (module Bar with type foo_t = a)) = ()
>
>
> On Tue, Sep 20, 2011 at 3:36 AM, Yaron Minsky <yminsky@gmail.com> wrote:
> > For some reason, 1st-class modules have more restrictive "with" syntax,
> > which turns out to be a practical problem.
> >
> > The main constraint is that with constraints do not seem to be able to
> refer
> > to sub-modules.  Consider the following code snippet:
> >
> >>     module type Foo = sig type t end
> >>     module type Bar = sig module Foo : Foo end
> >>
> >>     (* compiles *)
> >>     let g (type a) (m : (module Foo with type t = a)) = ()
> >>
> >>     (* fails to compile with a syntax error *)
> >>     let f (type a) (m : (module Bar with type Foo.t = a)) = ()
> >
> > Of course, ordinary modules have no such constraint.  Any thoughts as to
> > what is going on here, and whether it can be fixed?  This has really
> > restricted designs I've been using, forcing me to flatten out structures
> > that are more naturally nested.
> >
> > y
> >
>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/wws/info/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>

--f46d043c7baacd304f04ad5aff35
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

I agree this works around the limitation, but it does beg the question: why=
 is the limitation there in the first place?<br><br><div class=3D"gmail_quo=
te">On Tue, Sep 20, 2011 at 4:00 PM, Jacques Le Normand <span dir=3D"ltr">&=
lt;<a href=3D"mailto:rathereasy@gmail.com">rathereasy@gmail.com</a>&gt;</sp=
an> wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin: 0pt 0pt 0pt 0.8ex; borde=
r-left: 1px solid rgb(204, 204, 204); padding-left: 1ex;">first post! let&#=
39;s see if anyone can do better...<br>
<div class=3D"im"><br>
module type Foo =3D sig type t end<br>
</div>module type Bar =3D sig type foo_t module Foo : Foo type t =3D foo_t =
=A0 end<br>
<div class=3D"im"><br>
 =A0 =A0 =A0(* compiles *)<br>
let g (type a) (m : (module Foo with type t =3D a)) =3D ()<br>
<br>
 =A0 =A0(* fails to compile with a syntax error *)<br>
</div>let f (type a) (m : (module Bar with type foo_t =3D a)) =3D ()<br>
<div><div></div><div class=3D"h5"><br>
<br>
On Tue, Sep 20, 2011 at 3:36 AM, Yaron Minsky &lt;<a href=3D"mailto:yminsky=
@gmail.com">yminsky@gmail.com</a>&gt; wrote:<br>
&gt; For some reason, 1st-class modules have more restrictive &quot;with&qu=
ot; syntax,<br>
&gt; which turns out to be a practical problem.<br>
&gt;<br>
&gt; The main constraint is that with constraints do not seem to be able to=
 refer<br>
&gt; to sub-modules.=A0 Consider the following code snippet:<br>
&gt;<br>
&gt;&gt;=A0=A0=A0=A0 module type Foo =3D sig type t end<br>
&gt;&gt;=A0=A0=A0=A0 module type Bar =3D sig module Foo : Foo end<br>
&gt;&gt;<br>
&gt;&gt;=A0=A0=A0=A0 (* compiles *)<br>
&gt;&gt;=A0=A0=A0=A0 let g (type a) (m : (module Foo with type t =3D a)) =
=3D ()<br>
&gt;&gt;<br>
&gt;&gt;=A0=A0=A0=A0 (* fails to compile with a syntax error *)<br>
&gt;&gt;=A0=A0=A0=A0 let f (type a) (m : (module Bar with type Foo.t =3D a)=
) =3D ()<br>
&gt;<br>
&gt; Of course, ordinary modules have no such constraint.=A0 Any thoughts a=
s to<br>
&gt; what is going on here, and whether it can be fixed?=A0 This has really=
<br>
&gt; restricted designs I&#39;ve been using, forcing me to flatten out stru=
ctures<br>
&gt; that are more naturally nested.<br>
&gt;<br>
&gt; y<br>
&gt;<br>
<br>
<br>
</div></div><font color=3D"#888888">--<br>
Caml-list mailing list. =A0Subscription management and archives:<br>
<a href=3D"https://sympa-roc.inria.fr/wws/info/caml-list" target=3D"_blank"=
>https://sympa-roc.inria.fr/wws/info/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
<br>
</font></blockquote></div><br>

--f46d043c7baacd304f04ad5aff35--
