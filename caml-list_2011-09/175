Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p8M9vU5m009098
	for <caml-list@sympa-roc.inria.fr>; Thu, 22 Sep 2011 11:57:30 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnMCAP8Ee07RVdivkGdsb2JhbABChFyUcIcVAYYzYggUAQEBAQkJDQcUBCKBbAIMIAEbHgMSCQddAREBBQFXh1yVQIJYCop9BkeCXIUgO4htAgMGhWSBEwSCVIUXhGSHAY0FPYNy
X-IronPort-AV: E=Sophos;i="4.68,422,1312149600"; 
   d="scan'208";a="120900885"
Received: from mail-qy0-f175.google.com ([209.85.216.175])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 22 Sep 2011 11:57:25 +0200
Received: by qyk10 with SMTP id 10so17648305qyk.6
        for <caml-list@inria.fr>; Thu, 22 Sep 2011 02:57:24 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:date:message-id:subject:from:to:content-type;
        bh=LCoA2okh+7SzXYzfF3oWFVZOsxPxz6LGA+ukbIcxfCE=;
        b=ENWkagKVcdvFjlL4nj0bkU1HcQp2yseeDbhFjuxRvoLFZobvLuX6DxwGww75WOlodK
         9lLS3FPoSmu3xamxra4zNcdl2DZTAP/IG3NQO+nqfNkLwF2qE2FJYpGjy/Mi2TIFHS/g
         6m8hYmcS7DQbjmB8DjUS9jY23G2wFgZJ31lvU=
MIME-Version: 1.0
Received: by 10.229.90.67 with SMTP id h3mr1583054qcm.95.1316685444072; Thu,
 22 Sep 2011 02:57:24 -0700 (PDT)
Received: by 10.229.44.137 with HTTP; Thu, 22 Sep 2011 02:57:24 -0700 (PDT)
Date: Thu, 22 Sep 2011 13:57:24 +0400
Message-ID: <CAGmVoG133FoKKVq2f-_sO=SFSUg2By9ZLirfHNCWuMNRmqyBzA@mail.gmail.com>
From: Kakadu <kakadu.hafanana@gmail.com>
To: caml-list@inria.fr
Content-Type: multipart/alternative; boundary=0016364ee4f22cc65304ad84b8d9
Subject: [Caml-list] lablqt = OCaml + qt


--0016364ee4f22cc65304ad84b8d9
Content-Type: text/plain; charset=KOI8-R
Content-Transfer-Encoding: quoted-printable

Hello!

I'm working on Qt bindings for OCaml. You can browse my code at
https://github.com/Kakadu/lablqt

Now qtjambi parses Qt's header files and generates an XML representation of
API. Then binding generator generates OCaml and C++ code of bindings.

Now a big part of Qt's API is stored in aaa.xml, so you don't need to
install qtjambi's generator. Big part of QtCore =C9 QtGui is incapsulated in
this xml file.

You can use build.ml script to compile lablqt. Btw, lablqt depends on
janestreet's core_extended library.

You can see test examples in test_gen/test* directories. For examle:
https://github.com/Kakadu/lablqt/blob/master/test_gen/test5/main.ml

I've implemented almost type-safe connections from signals to slots. Also
I've created tool <https://github.com/Kakadu/lablqt/tree/master/moc>to
simplify creating of user-defined slots: you can connect them like
here<https://github.com/Kakadu/lablqt/blob/master/test_gen/test4/main.ml#L2=
7>
and write your code separately
<https://github.com/Kakadu/lablqt/blob/master/test_gen/test4/UserSlots.ml#L=
2>
=2E

Lablqt is compilable only on a few number of machines, so I'll be glad if
you test it on your computer.

It's difficult to me to decide in what direction Qt bindings should be
developed. I you have any ideas or recommendations, I'll be glad to read
them.

Best wishes,
Kakadu

--0016364ee4f22cc65304ad84b8d9
Content-Type: text/html; charset=KOI8-R
Content-Transfer-Encoding: quoted-printable

Hello!<br><br>I&#39;m working on Qt bindings for OCaml. You can browse my c=
ode at <a href=3D"https://github.com/Kakadu/lablqt">https://github.com/Kaka=
du/lablqt</a><br><br>Now qtjambi parses Qt&#39;s header files and generates=
 an XML representation of API. Then binding generator generates OCaml and C=
++ code of bindings.<br>
<br>Now a big part of Qt&#39;s API is stored in aaa.xml, so you don&#39;t n=
eed to install qtjambi&#39;s generator. Big part of QtCore =C9 QtGui is inc=
apsulated in this xml file.<br><br>You can use <a href=3D"http://build.ml">=
build.ml</a> script to compile lablqt. Btw, lablqt depends on janestreet&#3=
9;s core_extended library. <br>
<br>You can see test examples in test_gen/test* directories. For examle: <a=
 href=3D"https://github.com/Kakadu/lablqt/blob/master/test_gen/test5/main.m=
l">https://github.com/Kakadu/lablqt/blob/master/test_gen/test5/main.ml</a><=
br>
<br>I&#39;ve implemented almost type-safe connections from signals to slots=
. Also I&#39;ve created <a href=3D"https://github.com/Kakadu/lablqt/tree/ma=
ster/moc">tool </a>to simplify creating of user-defined slots: you can conn=
ect them like <a href=3D"https://github.com/Kakadu/lablqt/blob/master/test_=
gen/test4/main.ml#L27">here</a>=9A=9A and write your code <a href=3D"https:=
//github.com/Kakadu/lablqt/blob/master/test_gen/test4/UserSlots.ml#L2">sepa=
rately </a>.<br>
<br>Lablqt is compilable only on a few number of machines, so I&#39;ll be g=
lad if you test it on your computer.<br><br>It&#39;s difficult to me to dec=
ide in what direction Qt bindings should be developed. I you have any ideas=
 or recommendations, I&#39;ll be glad to read them.<br>
<br>Best wishes,<br>Kakadu<br>

--0016364ee4f22cc65304ad84b8d9--
