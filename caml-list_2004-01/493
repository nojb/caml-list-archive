Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA05096; Tue, 20 Jan 2004 20:21:32 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA05313 for <caml-list@pauillac.inria.fr>; Tue, 20 Jan 2004 20:21:28 +0100 (MET)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id i0KJLRP17342
	for <caml-list@inria.fr>; Tue, 20 Jan 2004 20:21:28 +0100 (MET)
Received: from fichte.ai.univie.ac.at (markus@localhost [127.0.0.1])
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-6.6) with ESMTP id i0KJLRHn022654
	for <caml-list@inria.fr>; Tue, 20 Jan 2004 20:21:27 +0100
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-6.6) id i0KJLR8r022653
	for caml-list@inria.fr; Tue, 20 Jan 2004 20:21:27 +0100
Date: Tue, 20 Jan 2004 20:21:27 +0100
From: Markus Mottl <markus@oefai.at>
To: Ocaml Mailing List <caml-list@inria.fr>
Subject: Re: [Caml-list] ANNOUNCE: mod_caml 1.0.6 - includes security patch
Message-ID: <20040120192127.GD19681@fichte.ai.univie.ac.at>
Mail-Followup-To: Ocaml Mailing List <caml-list@inria.fr>
References: <20040116093454.GA23909@redhat.com> <200401192345.10735.exa@kablonet.com.tr> <20040120173423.GA19476@roke.freak> <200401201952.56605.exa@kablonet.com.tr> <20040120185445.GA26921@roke.freak>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20040120185445.GA26921@roke.freak>
User-Agent: Mutt/1.4.1i
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 michal:01 moskal:01 preferable:01 caml:01 readable:01 patch:02 mottl:02 mottl:02 string:03 wrote:03 markus:04 markus:04 oefai:05 oefai:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, 20 Jan 2004, Michal Moskal wrote:
> Yes, of course you can have well defined semantic for any string of
> characters. But that's not the point. You say it's more readable --
> you're probably right. I say it *can* be confusing.

That's the usual problem: programmers can always write illegible code.
"where" could make things easier to read in some cases, more difficult
in others. The programmer could decide in each case what solution would
be preferable (to him, that is).

-- 
Markus Mottl          http://www.oefai.at/~markus          markus@oefai.at

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

