Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA11066; Thu, 8 Jan 2004 02:30:12 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA11347 for <caml-list@pauillac.inria.fr>; Thu, 8 Jan 2004 02:30:11 +0100 (MET)
Received: from swordfish.cs.caltech.edu (swordfish.cs.caltech.edu [131.215.44.124])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id i081U9515957;
	Thu, 8 Jan 2004 02:30:09 +0100 (MET)
Received: from cs.caltech.edu (wasco.cs.caltech.edu [131.215.44.173])
	by swordfish.cs.caltech.edu (Postfix) with ESMTP
	id DA90FDF273; Wed,  7 Jan 2004 17:30:07 -0800 (PST)
Message-ID: <3FFCB28A.3060303@cs.caltech.edu>
Date: Wed, 07 Jan 2004 17:29:46 -0800
From: Aleksey Nogin <nogin@cs.caltech.edu>
Organization: California Institute of Technology, Computer Science Department
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.4.1) Gecko/20031030
X-Accept-Language: ru, en-us, en
MIME-Version: 1.0
To: Damien Doligez <damien.doligez@inria.fr>
Cc: Caml List <caml-list@inria.fr>
Subject: Re: [Caml-list] 3.07: debug information on camlp4-processed files
 is missing the file name?
References: <1F5153C0-4110-11D8-BEFF-00039310CAE8@inria.fr>
In-Reply-To: <1F5153C0-4110-11D8-BEFF-00039310CAE8@inria.fr>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 3.07:01 camlp:01 damien:01 parentheses:01 camlp:01 re-raised:01 re-raised:01 weirdness:01 weirdness:01 innermost:01 backtrace:01 2030:99 3.06:01 3.07:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On 07.01.2004 04:50, Damien Doligez wrote:

> begin...end is like a pair of parentheses. [...]  I changed it
> in the yacc-based parser but not (yet) in the camlp4 parsers, hence
> the discrepancy.

Yes, that's what I figured, thanks!

>> P.S. Why would an exception (supposedly raised inside the "true" 
>> branch of an if) be re-raised at the end of the "if" branch?
> 
> 
> I don't know.  Maybe because the "inside" is a call to a primitive, and
> the "if branch" is the smallest OCaml expression that contains it ?

No, all the expressions were nested pretty deeply. But there were some 
"try ... with Not_found -> ..." nested there, so I am guessing one of 
them was causing the exception to be caught and re-raised...

Anyway, once I cleaned the code a bit, the weirdness went away. Now the 
only remaining weirdness that I see is that the innermost frame is 
missing from backtrace when the exception was raised from C - PR #2030; 
this one however is common to both 3.06 and 3.07+13 CVS.

-- 
Aleksey Nogin

Home Page: http://nogin.org/
E-Mail: nogin@cs.caltech.edu (office), aleksey@nogin.org (personal)
Office: Jorgensen 70, tel: (626) 395-2907

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

