Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA18274; Mon, 5 Jan 2004 19:06:40 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA19166 for <caml-list@pauillac.inria.fr>; Mon, 5 Jan 2004 19:06:40 +0100 (MET)
Received: from mailer.zkm.de (mailer.zkm.de [193.197.168.42])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id i05I6dH15358
	for <caml-list@inria.fr>; Mon, 5 Jan 2004 19:06:39 +0100 (MET)
Received: from mail.zkm.de (localhost [127.0.0.1])
	by mailer.zkm.de (8.12.9/8.12.5) with ESMTP id i05I757w003984
	for <caml-list@inria.fr>; Mon, 5 Jan 2004 19:07:05 +0100 (MET)
Received: from zkm.de (ruth.zkm.de [192.168.200.57])
	by mail.zkm.de (8.12.9/8.12.9) with ESMTP id i05I72NH003980
	for <caml-list@inria.fr>; Mon, 5 Jan 2004 19:07:02 +0100 (MET)
Message-ID: <3FF9FCB8.6010505@zkm.de>
Date: Mon, 05 Jan 2004 19:09:28 -0500
From: Adolf Mathias <dolfi@zkm.de>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6b) Gecko/20031210
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: [Caml-list] Tcl/Tk
References: <1073239304.1014.22.camel@ice.gerd-stolpmann.de>	 <20040104184320.GA4805@grand>  <87hdzbplk7.dlv@wanadoo.fr>	 <1073249373.995.48.camel@ice.gerd-stolpmann.de> <1073271833.13429.8.camel@pelican> <3FF970F7.8000603@zkm.de> <3FF97A84.4060705@univ-savoie.fr>
In-Reply-To: <3FF97A84.4060705@univ-savoie.fr>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; zkm:99 caml-list:01 raffalli:01 toolkit:01 cpan:01 gcc:01 usr:01 -ltk:01 8.3:01 christophe:01 ocaml:01 ocaml:01 surprising:01 lib:01 native:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Christophe Raffalli wrote:

>
>> I guess that a native OCaml toolkit would be a real killer.
>
>
> What would be nice is an OCaml/Tk !!
>
> replace completely Tcl by Ocaml :-)

This is how one of the Perl/Tk-bindings came into existence. An amazing 
guy called Nick Ing-Simmons once stripped Tcl out of Tk and replaced all 
Tcl references by an abstract interpreter and neutral arguments etc., 
and this semi-automatically with an ingenious Perl script!! I just 
downloaded the Perl/Tk stuff from CPAN to check it out again, but it 
seems that the original approach was abandoned, and the whole thing 
seems too close to Perl and Tcl than it was in order to be useful for a 
direct Ocaml-binding :-(

One point of attack might be the implementation of Tcl_EvalObjEx which 
apparently is the boiler plate for Tcl evaluation as a C-Ocaml-interface 
and provide a mapping between Tcl_Obj's and OCaml values. But then, the 
list of Tcl references inside Tk is still intimidatingly long (try gcc 
/usr/lib/tk8.3/tkAppInit.c -o test -ltk and watch the lovely linker 
error messages), and Tcl now provides a lot more non-windowing 
functionality to Tk, which probably caused the initial Perl/Tk-approach 
to be abandoned. Just guessing. Maybe some enlightened mind comes up 
with a surprising solution ;-)



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

