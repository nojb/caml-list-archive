Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA10412; Tue, 20 Jan 2004 11:11:12 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA10402 for <caml-list@pauillac.inria.fr>; Tue, 20 Jan 2004 11:11:11 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id i0KAB7P27069;
	Tue, 20 Jan 2004 11:11:07 +0100 (MET)
Received: from tintin.inria.fr (tintin.inria.fr [128.93.24.126]) by pauillac.inria.fr (8.7.6/8.7.3) with SMTP id LAA10199; Tue, 20 Jan 2004 11:11:06 +0100 (MET)
Date: Tue, 20 Jan 2004 11:11:06 +0100
From: Maxence Guesdon <maxence.guesdon@inria.fr>
To: skaller@tpg.com.au
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Caml-get 0.1
Message-Id: <20040120111106.46f6d38f.maxence.guesdon@inria.fr>
In-Reply-To: <1074561310.25914.32.camel@localhost.localdomain>
References: <20040118174243.555a256e@haddock.max.fr>
	<1074561310.25914.32.camel@localhost.localdomain>
Organization: INRIA
X-Mailer: Sylpheed version 0.9.6claws (GTK+ 1.2.10; i686-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; maxence:01 guesdon:01 maxence:01 guesdon:01 caml-list:01 2004:99 tpg:99 2004:99 licencing:01 val:01 mli:01 1100:98 module:03 module:03 string:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On 20 Jan 2004 12:15:11 +1100
skaller <skaller@tpg.com.au> wrote:

> On Mon, 2004-01-19 at 03:42, Maxence Guesdon wrote:
> > Hello,
> > 
> > I'm pleased to announce the first release of caml-get, an experimental 
> > tool to distribute and get Objective-Caml code, in a way similar to the
> > apt-get utility.
> 
> I've had a brief look, and it looks quite
> interesting, but I have a question:
> 
> (1) How does it handle licencing issues?

I think about adding a @license tag to indicate the license of each element.

> (2) Another comment:
> (** This function returns the content of a file in the form of one
> string.
>    @cgname Files.input_file_as_string 
>    @version 1.0
> *)
> val input_file_as_string : string -> string
> 
> This is too heavy for regular use. 
> How about a quick defaulted form:
> ------------------------------------------
> (**@cgscan:File @version 1.0 *)
> (*Near the top of the .mli file, enable scanning,
> default to putting things in the File repository module *)
> ....
> ....
> (**@* This function ....*)
> (* ^^ says to export as named using default module and version *)
> ------------------------------------------
> 
> This means once you have set up the files for scanning,
> you can add documented elements with two keystrokes.
> You can still use the heavy form of course.

Good, i like the idea ! I'll add something like that. Thanks.

Cheers,

Maxence

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

