Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA17197; Tue, 20 Jan 2004 02:15:57 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA17183; Tue, 20 Jan 2004 02:15:56 +0100 (MET)
Received: from mail2.tpgi.com.au (mail.tpgi.com.au [203.12.160.58])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id i0K1ElP14764;
	Tue, 20 Jan 2004 02:14:51 +0100 (MET)
Received: from 203-213-84-222-syd-ts16-2600.tpgi.com.au (203-213-84-222-syd-ts16-2600.tpgi.com.au [203.213.84.222])
	by mail2.tpgi.com.au (8.12.10/8.12.10) with ESMTP id i0K1EgA9002584;
	Tue, 20 Jan 2004 12:14:43 +1100
Subject: Re: [Caml-list] Caml-get 0.1
From: skaller <skaller@tpg.com.au>
Reply-To: skaller@tpg.com.au
To: Maxence Guesdon <maxence.guesdon@inria.fr>
Cc: caml-announce@inria.fr
In-Reply-To: <20040118174243.555a256e@haddock.max.fr>
References: <20040118174243.555a256e@haddock.max.fr>
Content-Type: text/plain
Message-Id: <1074561310.25914.32.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 20 Jan 2004 12:15:11 +1100
Content-Transfer-Encoding: 7bit
X-TPG-Antivirus: Passed
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 tpg:99 2004:99 maxence:01 guesdon:01 licencing:01 val:01 mli:01 tpg:99 glebe:01 2037,:01 9660:01 nsw:01 snail:02 checkout:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 2004-01-19 at 03:42, Maxence Guesdon wrote:
> Hello,
> 
> I'm pleased to announce the first release of caml-get, an experimental 
> tool to distribute and get Objective-Caml code, in a way similar to the
> apt-get utility.

I've had a brief look, and it looks quite
interesting, but I have a question:

(1) How does it handle licencing issues?


(2) Another comment:
(** This function returns the content of a file in the form of one
string.
   @cgname Files.input_file_as_string 
   @version 1.0
*)
val input_file_as_string : string -> string

This is too heavy for regular use. 
How about a quick defaulted form:
------------------------------------------
(**@cgscan:File @version 1.0 *)
(*Near the top of the .mli file, enable scanning,
default to putting things in the File repository module *)
....
....
(**@* This function ....*)
(* ^^ says to export as named using default module and version *)
------------------------------------------

This means once you have set up the files for scanning,
you can add documented elements with two keystrokes.
You can still use the heavy form of course.

-- 
John Max Skaller, mailto:skaller@tpg.com.au
snail:25/85c Wigram Rd, Glebe, NSW 2037, Australia.
voice:61-2-9660-0850. Checkout Felix: http://felix.sf.net




-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

