Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA29516; Wed, 21 Jan 2004 16:58:11 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA28720 for <caml-list@pauillac.inria.fr>; Wed, 21 Jan 2004 16:58:10 +0100 (MET)
Received: from mwinf0604.wanadoo.fr (smtp6.wanadoo.fr [193.252.22.25])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id i0LFw9P26507;
	Wed, 21 Jan 2004 16:58:09 +0100 (MET)
Received: from iliana (AStrasbourg-206-1-4-141.w80-11.abo.wanadoo.fr [80.11.26.141])
	by mwinf0604.wanadoo.fr (SMTP Server) with ESMTP
	id 40EE4280017C; Wed, 21 Jan 2004 16:58:05 +0100 (CET)
Received: from luther by iliana with local (Exim 3.36 #1 (Debian))
	id 1AjKjs-0002F5-00; Wed, 21 Jan 2004 16:57:56 +0100
Date: Wed, 21 Jan 2004 16:57:52 +0100
To: Maxence Guesdon <maxence.guesdon@inria.fr>
Cc: Sven Luther <sven.luther@wanadoo.fr>, skaller@tpg.com.au,
        erayo@cs.bilkent.edu.tr, caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Caml-get 0.1
Message-ID: <20040121155752.GA8564@iliana>
References: <20040118174243.555a256e@haddock.max.fr> <1074561310.25914.32.camel@localhost.localdomain> <200401200437.30107.exa@kablonet.com.tr> <20040120111253.3e81ee04.maxence.guesdon@inria.fr> <1074693590.11497.16.camel@localhost.localdomain> <20040121151833.67a29f5c.maxence.guesdon@inria.fr> <20040121143535.GA6935@iliana> <20040121155452.459de8f0.maxence.guesdon@inria.fr> <20040121152156.GA7772@iliana> <20040121164220.32363600.maxence.guesdon@inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <20040121164220.32363600.maxence.guesdon@inria.fr>
User-Agent: Mutt/1.5.5.1+cvs20040105i
From: Sven Luther <sven.luther@wanadoo.fr>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sven:01 luther:01 sven:01 luther:01 2004:99 maxence:01 guesdon:01 foo:01 cga:99 she:98 lib:01 her:97 licence:03 licence:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, Jan 21, 2004 at 04:42:20PM +0100, Maxence Guesdon wrote:
> > > Would it be ok it the license was put in the client repository and printed
> > > with the code when the (for example) -l option is given ? (By default
> > > the complete license information would not be printed with the code, only
> > > the url where to find it.) This way the license is available but not
> > > always added to your file when you want to use an element of the repository
> > > in your code.
> > 
> > Imagine a guy who ocaml-get's a given bit of code on his laptops, and
> > then wants to work on it in a plane or somewhere else offline ?
> > 
> > He will then have no access ot the licence, which is not ok.
> > 
> > (But then, i have not looked at your work in detail, and may have missed
> > something).
> 
> In fact, I was thinking of the following algorithm:
> - the client does
>   caml-get update http://foo.bar/archive.cga
> - then caml-get retrieves the archive, and for each element, look at the
>   url of the license, retrieves it, and store it in the client repository,
>   making it available to the use even when he/she is offline.

It should either not download the archive or put a fat warning if the
licence is not retrievable, but i think this is already your intention.

> > The best would be to have, for each bit of source you can ocaml-get, a
> > link to a licence file, which may be common to many ocaml-gettable
> > sources, and which get downloaded only if it has not already, maybe with
> > a md5sum check to make sure it is indeed the same licence.
> 
> That could be one way to store it, indeed.

:)

> > Then, you can just have the licence tag or whatever refer to a file on
> > the client harddisk, and there will be no problem.
> > 
> > BTW, how does ocaml-get integrate (or not) with the debian packaging
> > effort ? Will it be possible to use it to install non-packaged stuff in
> > a debian policy friendly way or something like that ?
> 
> Caml-get is done to help the developer, by making use of *pieces* of
> code easier, thus not making his/her software depend on a library if it only
> uses one or two functions of this library for example. This can be seen
> as way to distribute a software which otherwise would depend on a
> hard-to-install or no-packaged software.
> 
> But if a software heavily uses a library, it should rather really depend on
> this lib (that is: link with it) rather than use caml-get to copy-paste
> all the library.
> 
> Does it answer your question ?

Well, i was thinking of some way of automatically or semi-automatically
transforming a bit of caml-getted source into a proper debian package.

Friendly,

Sven Luther

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

