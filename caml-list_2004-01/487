Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA14873; Tue, 20 Jan 2004 12:31:19 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA14884 for <caml-list@pauillac.inria.fr>; Tue, 20 Jan 2004 12:31:18 +0100 (MET)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id i0KBVHv14433
	for <caml-list@inria.fr>; Tue, 20 Jan 2004 12:31:17 +0100 (MET)
Received: from fichte.ai.univie.ac.at (markus@localhost [127.0.0.1])
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-6.6) with ESMTP id i0KBV9Hn016043;
	Tue, 20 Jan 2004 12:31:09 +0100
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-6.6) id i0KBV8MI016042;
	Tue, 20 Jan 2004 12:31:08 +0100
Date: Tue, 20 Jan 2004 12:31:08 +0100
From: Markus Mottl <markus@oefai.at>
To: erayo@cs.bilkent.edu.tr
Cc: Ocaml Mailing List <caml-list@inria.fr>
Subject: Re: [Caml-list] ANNOUNCE: mod_caml 1.0.6 - includes security patch
Message-ID: <20040120113108.GB13600@fichte.ai.univie.ac.at>
Mail-Followup-To: erayo@cs.bilkent.edu.tr,
	Ocaml Mailing List <caml-list@inria.fr>
References: <20040116093454.GA23909@redhat.com> <20040119174640.GA28829@fichte.ai.univie.ac.at> <20040119180517.GA16278@redhat.com> <200401192345.10735.exa@kablonet.com.tr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200401192345.10735.exa@kablonet.com.tr>
User-Agent: Mutt/1.4.1i
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 eray:01 ozkural:01 2004:99 mmmm:01 camlp:01 haskell:01 haskell:01 caml:01 05,:01 readable:01 trivial:01 patch:02 mottl:02 mottl:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 19 Jan 2004, Eray Ozkural wrote:
> On Monday 19 January 2004 20:05, Richard Jones wrote:
> > Mmmm ... perhaps.  Actually I think 'unless' specifically is very
> > useful.  I've even written a trivial camlp4 extension for it, and we
> > use it in lots of Merjis code.
> 
> Unless does not sound like a common keyword.
> 
> Haskell style "where" would be excellent though. I was using it all the time 
> in Haskell.

"where" is one keyword, which I might find useful. Code can be made much
more readable if function applications come first and values used in it
are defined further below. Otherwise, the user may have to scan large
portions of value definitions before getting to the "core" of a function.

Regards,
Markus

-- 
Markus Mottl          http://www.oefai.at/~markus          markus@oefai.at

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

