Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA07053; Fri, 30 Jan 2004 00:07:34 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA07369 for <caml-list@pauillac.inria.fr>; Fri, 30 Jan 2004 00:07:33 +0100 (MET)
Received: from mail.davidb.org (adsl-64-172-240-129.dsl.sndg02.pacbell.net [64.172.240.129])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id i0TN7Wv03196
	for <caml-list@inria.fr>; Fri, 30 Jan 2004 00:07:32 +0100 (MET)
Received: from davidb by mail.davidb.org with local (Exim 3.36 #1 (Debian))
	id 1AmLFw-0008JF-00; Thu, 29 Jan 2004 15:07:28 -0800
Date: Thu, 29 Jan 2004 15:07:28 -0800
From: David Brown <caml-list@davidb.org>
To: Richard Jones <rich@annexia.org>
Cc: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] CamlDL/Abstract pointers problem
Message-ID: <20040129230728.GA31880@davidb.org>
References: <20040129192641.GA12533@redhat.com> <Pine.SOL.4.44.0401292050490.23249-100000@clipper.ens.fr> <20040129202404.GA15171@redhat.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20040129202404.GA15171@redhat.com>
User-Agent: Mutt/1.5.4i
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 caml-list:01 pointers:01 2004:99 2004:99 alain:01 frisch:01 fahndrich:01 pointers:01 ocaml:01 ocaml:01 doligez:01 tree:02 pointer:03 dave:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, Jan 29, 2004 at 08:24:04PM +0000, Richard Jones wrote:
> On Thu, Jan 29, 2004 at 08:55:16PM +0100, Alain.Frisch@ens.fr wrote:
> > Reference: http://pauillac.inria.fr/~doligez/caml-guts/Fahndrich99.txt
> 
> Interesting.  Can someone who knows about the guts of OCaml comment on
> this: Does OCaml store simply the start and extent of the "ML Heap"?
> Or does it know about individual blocks of ML heap and use some sort
> of tree structure to work out if a pointer points into the heap?

Well, it uses a page table, but yes, it does do what you expect.

I have several applications that use types that are pointers outside of
the ocaml heap, and they work well.

Dave

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

