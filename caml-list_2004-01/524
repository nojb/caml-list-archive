Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA29719; Wed, 21 Jan 2004 17:01:15 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA29759 for <caml-list@pauillac.inria.fr>; Wed, 21 Jan 2004 17:01:14 +0100 (MET)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from champiland.homelinux.org (ca-sqy-6-102.w80-8.abo.wanadoo.fr [80.8.59.102])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id i0LG1Dv17600
	for <caml-list@inria.fr>; Wed, 21 Jan 2004 17:01:13 +0100 (MET)
Received: from ensta.org (localhost [127.0.0.1])
	by champiland.homelinux.org (Postfix) with ESMTP id 377983742A
	for <caml-list@inria.fr>; Wed, 21 Jan 2004 15:58:39 +0100 (CET)
Message-ID: <400E939E.9060902@ensta.org>
Date: Wed, 21 Jan 2004 15:58:38 +0100
From: Olivier Grisel <olivier.grisel@ensta.org>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6b) Gecko/20031205 Thunderbird/0.4
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list <caml-list@inria.fr>
Subject: [Caml-list] FORT or OUnit ?
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; python:01 python:01 ocaml:01 ocaml:01 olivier:02 olivier:02 regression:02 module:03 unit:03 tutorial:05 hints:06 programmers:06 standard:07 programming:07 programmer:08 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Dear experienced OCaml programmers,

I am new to OCaml and I would like to start a new project using this 
language. As a Python programmer, I am used to the built in unittest 
python module for unit/regression testing.

What is your favorite framework semi-automated testing with OCaml ?

After a few googling I've found that the Fort and OUnit projects might
be interesting. However I can't find any comprehensive tutorial on how 
to use them efficiently. Is there a standard OCaml programming style for 
testing ?

Do you have example of integration with OCamlMakefile ?

Thanks for any hints.

--Olivier

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

