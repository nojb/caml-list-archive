Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA27953; Wed, 21 Jan 2004 16:42:32 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA27803 for <caml-list@pauillac.inria.fr>; Wed, 21 Jan 2004 16:42:31 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id i0LFgLv15832;
	Wed, 21 Jan 2004 16:42:21 +0100 (MET)
Received: from tintin.inria.fr (tintin.inria.fr [128.93.24.126]) by pauillac.inria.fr (8.7.6/8.7.3) with SMTP id QAA27997; Wed, 21 Jan 2004 16:42:20 +0100 (MET)
Date: Wed, 21 Jan 2004 16:42:20 +0100
From: Maxence Guesdon <maxence.guesdon@inria.fr>
To: Sven Luther <sven.luther@wanadoo.fr>
Cc: Sven Luther <sven.luther@wanadoo.fr>, skaller@tpg.com.au,
        erayo@cs.bilkent.edu.tr, caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Caml-get 0.1
Message-Id: <20040121164220.32363600.maxence.guesdon@inria.fr>
In-Reply-To: <20040121152156.GA7772@iliana>
References: <20040118174243.555a256e@haddock.max.fr>
	<1074561310.25914.32.camel@localhost.localdomain>
	<200401200437.30107.exa@kablonet.com.tr>
	<20040120111253.3e81ee04.maxence.guesdon@inria.fr>
	<1074693590.11497.16.camel@localhost.localdomain>
	<20040121151833.67a29f5c.maxence.guesdon@inria.fr>
	<20040121143535.GA6935@iliana>
	<20040121155452.459de8f0.maxence.guesdon@inria.fr>
	<20040121152156.GA7772@iliana>
Organization: INRIA
X-Mailer: Sylpheed version 0.9.6claws (GTK+ 1.2.10; i686-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; maxence:01 guesdon:01 maxence:01 guesdon:01 caml-list:01 foo:01 cga:99 she:98 lib:01 her:97 licence:03 licence:03 algorithm:03 library:03 library:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> > Would it be ok it the license was put in the client repository and printed
> > with the code when the (for example) -l option is given ? (By default
> > the complete license information would not be printed with the code, only
> > the url where to find it.) This way the license is available but not
> > always added to your file when you want to use an element of the repository
> > in your code.
> 
> Imagine a guy who ocaml-get's a given bit of code on his laptops, and
> then wants to work on it in a plane or somewhere else offline ?
> 
> He will then have no access ot the licence, which is not ok.
> 
> (But then, i have not looked at your work in detail, and may have missed
> something).

In fact, I was thinking of the following algorithm:
- the client does
  caml-get update http://foo.bar/archive.cga
- then caml-get retrieves the archive, and for each element, look at the
  url of the license, retrieves it, and store it in the client repository,
  making it available to the use even when he/she is offline.
 
> The best would be to have, for each bit of source you can ocaml-get, a
> link to a licence file, which may be common to many ocaml-gettable
> sources, and which get downloaded only if it has not already, maybe with
> a md5sum check to make sure it is indeed the same licence.

That could be one way to store it, indeed.

> Then, you can just have the licence tag or whatever refer to a file on
> the client harddisk, and there will be no problem.
> 
> BTW, how does ocaml-get integrate (or not) with the debian packaging
> effort ? Will it be possible to use it to install non-packaged stuff in
> a debian policy friendly way or something like that ?

Caml-get is done to help the developer, by making use of *pieces* of
code easier, thus not making his/her software depend on a library if it only
uses one or two functions of this library for example. This can be seen
as way to distribute a software which otherwise would depend on a
hard-to-install or no-packaged software.

But if a software heavily uses a library, it should rather really depend on
this lib (that is: link with it) rather than use caml-get to copy-paste
all the library.

Does it answer your question ?

Friendly,

Maxence

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

