Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA00939; Fri, 30 Jan 2004 09:23:48 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA00606 for <caml-list@pauillac.inria.fr>; Fri, 30 Jan 2004 09:23:47 +0100 (MET)
From: Alain.Frisch@ens.fr
Received: from nef.ens.fr (nef.ens.fr [129.199.96.32])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id i0U8NkP07877
	for <caml-list@inria.fr>; Fri, 30 Jan 2004 09:23:47 +0100 (MET)
Received: from clipper.ens.fr (clipper-gw.ens.fr [129.199.1.22])
          by nef.ens.fr (8.12.10/1.01.28121999) with ESMTP id i0U8NjaW008991
          ; Fri, 30 Jan 2004 09:23:45 +0100 (CET)
Received: from localhost (frisch@localhost) by clipper.ens.fr (8.12.3/jb-1.1)
	id i0U8Ni7Y013489 ; Fri, 30 Jan 2004 09:23:44 +0100 (MET)
X-Authentication-Warning: clipper.ens.fr: frisch owned process doing -bs
Date: Fri, 30 Jan 2004 09:23:44 +0100 (MET)
X-X-Sender: frisch@clipper.ens.fr
Reply-To: Alain.Frisch@ens.fr
To: Josh Burdick <jburdick@gradient.cis.upenn.edu>
cc: Inria Ocaml Mailing List <caml-list@inria.fr>
Subject: Re: [Caml-list] PostgreSQL-OCaml 1.0.1
In-Reply-To: <4019F0B1.6050204@gradient.cis.upenn.edu>
Message-ID: <Pine.SOL.4.44.0401300914300.3603-100000@clipper.ens.fr>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: by amavisd-milter (http://amavis.org/)
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; alain:01 frisch:01 caml-list:01 1.0.1:01 dbi:99 dbi:99 structs:01 postgres:01 api:01 abstraction:01 alain:01 backend:01 bindings:01 bindings:01 afaik:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 30 Jan 2004, Josh Burdick wrote:

>    If there's going to be a "new improved version", I think maybe it
> should work with multiple databases.  ODBC, JDBC, and DBI all attempt
> this.  There could be a signature (perhaps called "DBI" to appeal to
> Perl people , and structs Postgres, MySQL, Oracle, etc., which implement
> this.

IMHO, such a standard interface should be kept separated from
engine-specific bindings.  The idea is to have specific bindings that
follow closely the "official"  C API for a given engine, which allows the
programmer to refer easily to the documentation of the C interface and to
access all the advanced and non standard features of his database backend.

Then you can build on top of such bindings higher levels of abstraction in
order to expose a common subset with a unified interface. This issue has
been raised several times on this mailing list, and no consensus has been
reached on a common interface (AFAIK).


-- Alain

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

