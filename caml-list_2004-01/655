Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA07329; Thu, 29 Jan 2004 20:56:08 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA28079 for <caml-list@pauillac.inria.fr>; Thu, 29 Jan 2004 20:56:07 +0100 (MET)
From: Alain.Frisch@ens.fr
Received: from nef.ens.fr (nef.ens.fr [129.199.96.32])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id i0TJu6P12286
	for <caml-list@inria.fr>; Thu, 29 Jan 2004 20:56:06 +0100 (MET)
Received: from clipper.ens.fr (clipper-gw.ens.fr [129.199.1.22])
          by nef.ens.fr (8.12.10/1.01.28121999) with ESMTP id i0TJtIaW031741
          ; Thu, 29 Jan 2004 20:55:18 +0100 (CET)
Received: from localhost (frisch@localhost) by clipper.ens.fr (8.12.3/jb-1.1)
	id i0TJtGOY026618 ; Thu, 29 Jan 2004 20:55:17 +0100 (MET)
X-Authentication-Warning: clipper.ens.fr: frisch owned process doing -bs
Date: Thu, 29 Jan 2004 20:55:16 +0100 (MET)
X-X-Sender: frisch@clipper.ens.fr
Reply-To: Alain.Frisch@ens.fr
To: Richard Jones <rich@annexia.org>
cc: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] CamlDL/Abstract pointers problem
In-Reply-To: <20040129192641.GA12533@redhat.com>
Message-ID: <Pine.SOL.4.44.0401292050490.23249-100000@clipper.ens.fr>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: by amavisd-milter (http://amavis.org/)
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; alain:01 frisch:01 caml-list:01 pointers:01 crashes:01 pointers:01 span:99 fahndrich:01 alain:01 caml:01 null:01 doligez:01 heap:03 wrote:03 abstract:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 29 Jan 2004, Richard Jones wrote:

> I'm pretty sure this bit of the manual is wrong, or at least I've not
> been able to make it work.  I don't have any definite proof of this,
> but my crashes stopped once I started wrapping up pointers in
> Abstract_tag.

One important thing to be aware of when you use "foreign" pointers is
that the Caml GC heap can grow at any time and span over existing
pointers. So you have to be careful to null foreign pointers when you free
the block they're pointing to.

Reference: http://pauillac.inria.fr/~doligez/caml-guts/Fahndrich99.txt

-- Alain

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

