Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA00620; Tue, 20 Jan 2004 18:35:18 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA00619 for <caml-list@pauillac.inria.fr>; Tue, 20 Jan 2004 18:35:17 +0100 (MET)
Received: from nemerle.org (lilith.ii.uni.wroc.pl [156.17.4.7])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id i0KHZGP08613
	for <caml-list@inria.fr>; Tue, 20 Jan 2004 18:35:16 +0100 (MET)
Received: from malekith by nemerle.org with local (Exim 4.24)
	id 1AizmP-0004WU-MO; Tue, 20 Jan 2004 18:35:09 +0100
Date: Tue, 20 Jan 2004 18:34:23 +0100
From: Michal Moskal <malekith@pld-linux.org>
To: erayo@cs.bilkent.edu.tr
Cc: Ocaml Mailing List <caml-list@inria.fr>
Subject: Re: [Caml-list] ANNOUNCE: mod_caml 1.0.6 - includes security patch
Message-ID: <20040120173423.GA19476@roke.freak>
Mail-Followup-To: erayo@cs.bilkent.edu.tr,
	Ocaml Mailing List <caml-list@inria.fr>
References: <20040116093454.GA23909@redhat.com> <20040119174640.GA28829@fichte.ai.univie.ac.at> <20040119180517.GA16278@redhat.com> <200401192345.10735.exa@kablonet.com.tr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200401192345.10735.exa@kablonet.com.tr>
User-Agent: Mutt/1.4.1i
X-PGP-Fingerprint: CF89 1B14 11BE 1CC9 2CA3  7497 5E32 69B4 BC71 B4C2
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; michal:01 moskal:01 malekith:01 pld-linux:01 caml-list:01 2004:99 eray:01 ozkural:01 2004:99 mmmm:01 camlp:01 haskell:01 haskell:01 michal:01 moskal:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, Jan 19, 2004 at 11:45:10PM +0200, Eray Ozkural wrote:
> On Monday 19 January 2004 20:05, Richard Jones wrote:
> > Mmmm ... perhaps.  Actually I think 'unless' specifically is very
> > useful.  I've even written a trivial camlp4 extension for it, and we
> > use it in lots of Merjis code.
> 
> Unless does not sound like a common keyword.
> 
> Haskell style "where" would be excellent though. I was using it all the time 
> in Haskell.

Haskell is lazy, ocaml is strict. Consider following snippet of
``ocaml'':

let _ = f (x)
  where x = g ()

Now, the reader of the code might take false impression that f() is
executed before g(). Of course there is no such danger with function
definitions in where blocks, but still I think readability is the reason
it is absent from ocaml.

-- 
: Michal Moskal :: http://www.kernel.pl/~malekith : GCS {C,UL}++++$ a? !tv
: When in doubt, use brute force. -- Ken Thompson : {E-,w}-- {b++,e}>+++ h

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

