Received: (from weis@localhost) by pauillac.inria.fr (8.6.10/8.6.6) id VAA19523 for caml-redistribution; Mon, 24 Jun 1996 21:30:20 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.6.10/8.6.6) with ESMTP id SAA18915 for <caml-list@pauillac.inria.fr>; Sun, 23 Jun 1996 18:01:54 +0200
Received: from stroph.univ-st-etienne.fr (stroph.univ-st-etienne.fr [161.3.1.11]) by concorde.inria.fr (8.7.1/8.7.1) with SMTP id SAA07862 for <caml-list@pauillac.inria.fr>; Sun, 23 Jun 1996 18:01:53 +0200 (MET DST)
Date: Sun, 23 Jun 1996 18:01:53 +0200 (MET DST)
Received: from vedrine.univ-st-etienne.fr by stroph.univ-st-etienne.fr (MX
          V4.0-1 VAX) with SMTP; Sun, 23 Jun 1996 09:21:32 +0200
Message-ID: <1.5.4.16.19960623172313.130f404e@cit-novell.univ-st-etienne.fr>
X-Sender: goffinet@cit-novell.univ-st-etienne.fr
X-Mailer: Windows Eudora Light Version 1.5.4 (16)
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
To: caml-list@pauillac.inria.fr
From: Goffinet <goffinet@cit-novell.univ-st-etienne.fr>
Subject: a perplexing difference
Sender: weis
Status: O


        Hello 

        I'm unable to understand why my fonctions do return these answers 

(* first a vect swapping function*)
let swap k t=
	let prov=t.(k-1) in
	t.(k-1)<-t.(k);t.(k)<-prov;
	t
;;

(*and as I was doubting of everithing I even tried it!*)
let b=swap 3 [|1;2;3;4;5;6|];;
let c=swap 1 b;;
b;;

(*then an iterator which gives a list of the running results : as with the
Mathematica FoldList*)
let rec fold_list f l a=match l with
	[]->[a]
	|p::q->a::fold_list f q (f p a);;

(* first a test with an ordinary function, then another with swap:
        the first one does what I expected it would, 
        the other one yields  four times the same list*) 

let h u v=u+10*v;;
fold_list h [5;6;7] 0;;

fold_list swap [1;3;2] [|10;20;30;40;50|];;

(* so I made another swap_like function, I tried, It works*)
let h x t=[|-x+t.(1);t.(0)|];;
fold_list h [1;3;2] [|10;20;30;40;50|];;

I also tried to Nest my swaps on the command line (with several ((...)))): I
got the  fold_list I expected (and not the constant one)

        As always, more than an answer, a reference to some place in the
caml books where I might have found the answer would be welcomed.

        Thanks!





