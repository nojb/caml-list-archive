Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA27693; Fri, 14 Jun 2002 23:08:01 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA27667 for <caml-list@pauillac.inria.fr>; Fri, 14 Jun 2002 23:08:00 +0200 (MET DST)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g5EL7x506930
	for <caml-list@inria.fr>; Fri, 14 Jun 2002 23:07:59 +0200 (MET DST)
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.9.3/8.9.3/Debian 8.9.3-21) id XAA18506;
	Fri, 14 Jun 2002 23:07:57 +0200
Date: Fri, 14 Jun 2002 23:07:57 +0200
From: Markus Mottl <markus@oefai.at>
To: dengping zhu <zhudp@cs.bu.edu>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] compile problem
Message-ID: <20020614210757.GA18452@fichte.ai.univie.ac.at>
Mail-Followup-To: dengping zhu <zhudp@cs.bu.edu>, caml-list@inria.fr
References: <20020614193826.GA17166@fichte.ai.univie.ac.at> <Pine.SOL.4.20.0206141653160.19135-100000@csa.bu.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.SOL.4.20.0206141653160.19135-100000@csa.bu.edu>
User-Agent: Mutt/1.4i
Organization: Austrian Research Institute for Artificial Intelligence
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 14 Jun 2002, dengping zhu wrote:
> You are right. After I removed all the "module A = struct ... end"  
> from the ml and mli files, it's ok now. 

This is a common beginner problem, which would probably cease to exist
if the toplevel supported other ways of loading module files (see below).

> But I still can not figure out why all my original files works well if I
> enter the ocaml mode and 
> 
> # #use "a.mli"
> # #use "a.ml"
> 
> I think that it should be consistent in both ways.

I think so, too. Question to the developers: why not add another form of
"#use", which automatically wraps the contents of files into modules
of the corresponding name? This should be trivial to do and would also
allow more consistent ways of scripting.

Regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

