Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA18208; Sat, 8 Jun 2002 20:30:44 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA18216 for <caml-list@pauillac.inria.fr>; Sat, 8 Jun 2002 20:30:42 +0200 (MET DST)
Received: from nexus.stwing.upenn.edu (NEXUS.STWING.UPENN.EDU [165.123.132.61])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g58IUfH13349
	for <caml-list@inria.fr>; Sat, 8 Jun 2002 20:30:42 +0200 (MET DST)
Received: from force.stwing.upenn.edu (daemon@force.stwing.upenn.edu [165.123.132.65])
	by nexus.stwing.upenn.edu (8.11.6/8.11.6) with ESMTP id g58IUe015642
	(using TLSv1/SSLv3 with cipher EDH-RSA-DES-CBC3-SHA (168 bits) verified NO);
	Sat, 8 Jun 2002 14:30:40 -0400 (EDT)
Received: (from wlovas@localhost)
	by force.stwing.upenn.edu (8.11.6/8.11.6) id g58IUdv03934;
	Sat, 8 Jun 2002 14:30:39 -0400 (EDT)
Date: Sat, 8 Jun 2002 14:30:39 -0400
From: William Lovas <wlovas@stwing.upenn.edu>
To: William Lee Irwin III <wli@holomorphy.com>
Cc: Alessandro Baretta <alex@baretta.com>, Ocaml <caml-list@inria.fr>
Subject: Re: [Caml-list] Compiler killer code?
Message-ID: <20020608183039.GA3550@force.stwing.upenn.edu>
Mail-Followup-To: William Lee Irwin III <wli@holomorphy.com>,
	Alessandro Baretta <alex@baretta.com>, Ocaml <caml-list@inria.fr>
References: <3D02156D.7070303@baretta.com> <20020608143402.GQ6777@holomorphy.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20020608143402.GQ6777@holomorphy.com>
User-Agent: Mutt/1.3.25i
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sat, Jun 08, 2002 at 07:34:02AM -0700, William Lee Irwin III wrote:
> > Is the type inference algorithm guaranteed to termintate? I 
> > ask because I have accidentally attempted to evaluate a 
> > (meaningless) function which almost hanged my Athlon.
> > The killer code is the following:
> > type t = t -> t
> > let f (x:t) :t = f f
> > If I type this into the toplevel, it starts to allocate 
> > memory by the tens of megabytes, until I have to kill it to 
> > prevent a system crash. I let it reach approximately 128MB 
> > before killing it. (BTW, that was with ocaml 3.04+13 
> > 2002-06-05.)
> > Is the language really supposed to accept such garbage as 
> > that which I wrote?

I wonder if it really would have crashed your system, or if O'Caml would
have simply died with an `out of memory' error.

> On Sat, Jun 08, 2002 at 04:32:13PM +0200, Alessandro Baretta wrote:
> 
> I get this instead:
> 
> # type t = t -> t;;
> The type abbreviation t is cyclic

If you use recursive types (`ocaml -rectypes'), it typechecks fine:

    # type t = t -> t;;
    type t = t -> t
    # let rec f (x : t) : t = f f;;
    val f : t = <fun>

In fact, you don't even need to define the type abbreviation:

    # let rec f x = f f;;
    val f : 'a -> 'b as 'a = <fun>

This is O'Caml 3.04 -- if it fails to typecheck in the CVS version, then
i'd say either the semantics of recursive types have changed or a bug has 
been introduced.

cheers,
William
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

