Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA00812; Sun, 9 Jun 2002 19:04:07 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA00739 for <caml-list@pauillac.inria.fr>; Sun, 9 Jun 2002 19:04:06 +0200 (MET DST)
Received: from night.its.uiowa.edu (night.its.uiowa.edu [128.255.56.106])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g59H45H10671
	for <caml-list@inria.fr>; Sun, 9 Jun 2002 19:04:05 +0200 (MET DST)
Received: from uiowa.edu (host38-92.uihc.uiowa.edu [129.255.38.92])
	by night.its.uiowa.edu (8.11.6/8.11.6/ns-mx-1.14) with ESMTP id g59H43l29122
	for <caml-list@inria.fr>; Sun, 9 Jun 2002 12:04:03 -0500
Message-ID: <3D038A83.904@uiowa.edu>
Date: Sun, 09 Jun 2002 12:04:03 -0500
From: Brian Smith <brian-l-smith@uiowa.edu>
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.0rc3) Gecko/20020523
X-Accept-Language: en-us, en
MIME-Version: 1.0
CC: OCaml Mailing list <caml-list@inria.fr>
Subject: O'Caml, JVM, and .NET (was Re: [Caml-list] F#)
References: <BCDB2C3F59F5744EBE37C715D66E779C0481E206@red-msg-04.redmond.corp.microsoft.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I have looked over the archives and I have seen there has been a fair 
amount of discussion on compiling O'Caml to JVM bytecode or the .NET 
intermediate language. The primary advantage cited seems to be reuse of 
.NET and J2SE/J2EE libraries. People have said that compiling O'Caml to 
JVM/.NET is difficult because of mismatches in the .NET/JVM object model 
and the O'Caml object model.

But, would it be easier to reuse Java libraries by:
   * extending the O'Caml runtime to be able to interpret JVM bytecodes
     (i.e. be able to dynamically link to *.class and *.jar files), or
   * cross-compiling JVM bytecode into O'Caml bytecode, or
   * compiling Java source code into O'Caml bytecode

Similar questions apply for .NET, of course.

I would like to do more programming in O'Caml but it is sometimes 
difficult to choose O'Caml over Java when there are _so_ many libraries 
available for Java, with more added seemingly every day.

Thanks,
Brian

Don Syme wrote:
 > I chose to implement a core Caml compiler for .NET partly to test out
 > generics, but also because I want to be able to program against .NET
 > libraries using the language I love to program in, and reuse the
 > libraries and techniques I've developed.  I guess it's possible I'll
 > get a bit of flak from the Caml community about F#.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

