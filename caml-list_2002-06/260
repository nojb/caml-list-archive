Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA06602; Thu, 20 Jun 2002 14:25:18 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA06393 for <caml-list@pauillac.inria.fr>; Thu, 20 Jun 2002 14:25:17 +0200 (MET DST)
Received: from d12lmsgate-2.de.ibm.com (d12lmsgate-2.de.ibm.com [195.212.91.200])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g5KCPG920511
	for <caml-list@inria.fr>; Thu, 20 Jun 2002 14:25:16 +0200 (MET DST)
Received: from d12relay01.de.ibm.com (d12relay01.de.ibm.com [9.165.215.22])
	by d12lmsgate-2.de.ibm.com (8.12.3/8.12.3) with ESMTP id g5KCPEBL026366
	for <caml-list@inria.fr>; Thu, 20 Jun 2002 14:25:15 +0200
Received: from d10hubm1.telaviv.ibm.com (d10ml001.telaviv.ibm.com [9.148.216.55])
	by d12relay01.de.ibm.com (8.11.1m3/NCO/VER6.1) with ESMTP id g5KCPDL134448
	for <caml-list@inria.fr>; Thu, 20 Jun 2002 14:25:13 +0200
Subject: Re: [Caml-list] Unix.file_descr -> int ???
To: caml-list@inria.fr
X-Mailer: Lotus Notes Release 5.0.7  March 21, 2001
Message-ID: <OFB4C4596D.C7C0D92F-ONC2256BDE.004382F5@telaviv.ibm.com>
From: "Ohad Rodeh" <ORODEH@il.ibm.com>
Date: Thu, 20 Jun 2002 15:24:48 +0300
X-MIMETrack: Serialize by Router on D10ML001/10/M/IBM(Release 5.0.9a |January 7, 2002) at
 20/06/2002 15:25:13
MIME-Version: 1.0
Content-type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Regarding industry problems that Caml may be able to solve. Well, here's
one.

As part of research, I'm building a file-system, where the user-space parts
are written in my favorite programming language :-)  (you guessed correctly
...)
Communication between C and ML components in mostly restricted to sockets.
Here lies the problem: I need to marshal to and from network order
integers (16byte,32byte,64bytes).

I would be helpful if Caml supported marshaling to/from these types
directly.

for example:
                type ofs = int
      get_int16 : string -> ofs -> int
                get_int32 : string -> ofs -> int32
      get_int64 : string -> ofs -> int64

      Ohad.

-----------------------------------------------------------------------------------

Ohad Rodeh
tel: +972-9-9527641
IBM Haifa, storage research


                                                                                                                         
                      Markus Mottl                                                                                       
                      <markus@oefai.at>             To:       Xavier Leroy <xavier.leroy@inria.fr>                       
                      Sent by:                      cc:       Alessandro Baretta <alex@baretta.com>, Ocaml               
                      owner-caml-list@pauill         <caml-list@inria.fr>                                                
                      ac.inria.fr                   Subject:  Re: [Caml-list] Unix.file_descr -> int ???                 
                                                                                                                         
                                                                                                                         
                      20/06/2002 14:52                                                                                   
                      Please respond to                                                                                  
                      Markus Mottl                                                                                       
                                                                                                                         
                                                                                                                         



On Thu, 20 Jun 2002, Xavier Leroy wrote:
> I'm not disturbed in the least by the fact that many computer
> professionals couldn't care less about what we do.  (And conversely :-)
> What I am concerned about is the well-meaning suggestions that we
> should move towards "their" technologies in the vague hope that they
> will pay more attention then.  They won't.

I don't think that the problem is about moving towards "their"
technologies but moving OCaml and its tools towards "their" problem
domain. It's definitely not the job of INRIA to do this, though some
help might make this task easier for the commercial programmers among us
(not me).

This usually boils down to adhering to or defining somewhat accepted
standards. E.g., I suppose that many programmers would be happy about
locale support or libraries in the distribution that handle some
high-level standard internet protocols, etc.

It might be a good idea to define some set of rules that allows people
external to INRIA to write libraries in such a way that they could be
accepted in the standard distribution. Or even better, to define and
implement standard packaging schemes that make seamless integration of 3rd
party libraries easy. Then the community could much more effectively take
over the burden of providing OCaml-libraries and tools for commercial use.

Regards,
Markus Mottl

--
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives:
http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ:
http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners




-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

