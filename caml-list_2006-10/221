Return-Path: <matthieu.dubuget@laposte.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id E752CBC68
	for <caml-list@yquem.inria.fr>; Thu, 26 Oct 2006 17:18:11 +0200 (CEST)
Received: from smtp-msa-out18.orange.fr (smtp18.orange.fr [193.252.22.126])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id k9QFI7CF012451
	for <caml-list@inria.fr>; Thu, 26 Oct 2006 17:18:11 +0200
Received: from drakar.stremy.local (ADijon-258-1-43-73.w90-6.abo.wanadoo.fr [90.6.170.73])
	by mwinf1801.orange.fr (SMTP Server) with ESMTP id DF7CF7000098
	for <caml-list@inria.fr>; Thu, 26 Oct 2006 17:18:06 +0200 (CEST)
X-ME-UUID: 20061026151806915.DF7CF7000098@mwinf1801.orange.fr
Received: from [192.168.0.25] (helo=[192.168.0.25])
	by drakar.stremy.local with esmtp (Exim 3.36 #1 (Debian))
	id 1Gd73R-00085L-00
	for <caml-list@inria.fr>; Thu, 26 Oct 2006 17:22:01 +0200
Message-ID: <4540D1AA.3030309@laposte.net>
Date: Thu, 26 Oct 2006 17:18:02 +0200
From: Matthieu Dubuget <matthieu.dubuget@laposte.net>
Reply-To: matthieu.dubuget@laposte.net
User-Agent: Thunderbird 1.5.0.7 (Windows/20060909)
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Ulex and menhir
X-Enigmail-Version: 0.94.1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-j-chkmail-Score: MSGID : 4540D1AF.000 on discorde : j-chkmail score : X : 0/20 1
X-Miltered: at discorde with ID 4540D1AF.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; matthieu:01 dubuget:01 matthieu:01 dubuget:01 ocamlyacc:01 lexer:01 val:01 foo:01 lexing:01 lexbuf:01 lexing:01 lexbuf:01 val:01 foo:01 token:01 

Hello,

is there a way to have menhir (or ocamlyacc) use a lexer produced with ulex?

Menhir gives me:
val foo :  (Lexing.lexbuf -> token) -> Lexing.lexbuf -> My.t

I would like to have something like:
val foo :  (Ulexing.lexbuf -> token) -> Ulexing.lexbuf -> My.t

instead.

Salutations

Matt

