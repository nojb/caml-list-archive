Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 463D1BC50
	for <caml-list@yquem.inria.fr>; Tue,  3 Oct 2006 00:52:42 +0200 (CEST)
Received: from pih-relay05.plus.net (pih-relay05.plus.net [212.159.14.132])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k92MqZvi025403
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 3 Oct 2006 00:52:41 +0200
Received: from [80.229.56.224] (helo=[10.0.0.5])
	 by pih-relay05.plus.net with esmtp (Exim) id 1GUWeG-0007tH-Cd
	for caml-list@yquem.inria.fr; Mon, 02 Oct 2006 23:52:32 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Feature proposal: improved compare
Date: Mon, 2 Oct 2006 22:12:39 +0100
User-Agent: KMail/1.9.4
References: <c1490a380610021336j380f9075u5544da1698295cf@mail.gmail.com>
In-Reply-To: <c1490a380610021336j380f9075u5544da1698295cf@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200610022212.40035.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 45219833.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml's:01 pairs:01 pointers:01 ocaml:01 2006:98 frog:98 wrote:01 closures:01 caml-list:01 caml:02 objective:02 functional:02 types:03 library:03 standard:07 

On Monday 02 October 2006 21:36, Tom wrote:
> I believe the compare function from standard library should be extended to
> allow total ordering of functional types (= closures). I suggest something
> like...

I believe that won't work with OCaml's GC because it contains a copying 
collector, obviating a total ordering over pairs of pointers.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

