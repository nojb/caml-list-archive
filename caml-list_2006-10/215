Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 3970DBC68
	for <caml-list@yquem.inria.fr>; Wed, 25 Oct 2006 21:02:28 +0200 (CEST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id k9PJ2PhT029930
	for <caml-list@inria.fr>; Wed, 25 Oct 2006 21:02:27 +0200
Received: from rosella (ppp229-164.lns3.syd7.internode.on.net [59.167.229.164])
	by smtp3.adl2.internode.on.net (8.13.6/8.13.5) with ESMTP id k9PJ1pfq056412;
	Thu, 26 Oct 2006 04:31:51 +0930 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] caml_oldify_local_roots takes 50% of the total
	runtime
From: skaller <skaller@users.sourceforge.net>
To: Markus Mottl <markus.mottl@gmail.com>
Cc: Hendrik Tews <H.Tews@cs.ru.nl>, caml-list@inria.fr
In-Reply-To: <f8560b80610251121x10c113faif3e8a50ef0a9415c@mail.gmail.com>
References: <17727.34685.561877.977822@tandem.cs.ru.nl>
	 <f8560b80610251121x10c113faif3e8a50ef0a9415c@mail.gmail.com>
Content-Type: text/plain
Date: Thu, 26 Oct 2006 05:01:50 +1000
Message-Id: <1161802911.12050.5.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 453FB4C1.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; oldify:01 runtime:01 markus:01 mottl:01 interfacing:01 non-trivial:01 workarounds:01 error-prone:01 sourceforge:01 wrote:01 caml-list:01 data:02 caml:02 roots:02 roots:02 

On Wed, 2006-10-25 at 14:21 -0400, Markus Mottl wrote:

> It would be great if the GC could be improved in situations where
> there are many local roots.  This is a pretty common problem when
> interfacing non-trivial third party libraries, and the clumsy
> workarounds require writing somewhat error-prone code. 

Just curious .. but why is there *ever* any need for more than
one root? If you need to add a root, why not just add to
an already rooted data structure? Would that solve the problem?

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

