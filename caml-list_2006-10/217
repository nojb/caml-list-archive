Return-Path: <H.Tews@cs.ru.nl>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id EB69EBC68
	for <caml-list@yquem.inria.fr>; Thu, 26 Oct 2006 11:47:15 +0200 (CEST)
Received: from smeltpunt.science.ru.nl (smeltpunt.science.ru.nl [131.174.16.145])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id k9Q9lF9X018491
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Thu, 26 Oct 2006 11:47:15 +0200
Received: from tandem.cs.ru.nl [131.174.142.18]  (helo=tandem.cs.ru.nl)
	by smeltpunt.science.ru.nl (8.13.7/5.10) with ESMTP id k9Q9lATF019135
	for <caml-list@inria.fr>; Thu, 26 Oct 2006 11:47:10 +0200 (MEST)
Received: from tews by tandem.cs.ru.nl with local (Exim 4.63)
	(envelope-from <tews@tandem.cs.ru.nl>)
	id 1Gd1pO-0007LA-M3
	for caml-list@inria.fr; Thu, 26 Oct 2006 11:47:10 +0200
From: Hendrik Tews <H.Tews@cs.ru.nl>
To: caml-list@inria.fr
Subject: Re: [Caml-list] caml_oldify_local_roots takes 50% of the total runtime
References: <17727.34685.561877.977822@tandem.cs.ru.nl>
	<f8560b80610251121x10c113faif3e8a50ef0a9415c@mail.gmail.com>
Date: Thu, 26 Oct 2006 11:47:10 +0200
In-Reply-To: <f8560b80610251121x10c113faif3e8a50ef0a9415c@mail.gmail.com>
	(Markus Mottl's message of "Wed, 25 Oct 2006 14:21:14 -0400")
Message-ID: <wwuejsvv275.fsf@tandem.cs.ru.nl>
User-Agent: Gnus/5.110006 (No Gnus v0.6) Emacs/21.4 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Scanned-By: MIMEDefang 2.56 on 131.174.16.145
X-Miltered: at discorde with ID 45408423.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; hendrik:01 tews:01 tews:01 oldify:01 runtime:01 markus:01 mottl:01 markus:01 mottl:01 pointers:01 ocaml-values:01 pointers:01 ocaml:01 ocaml:01 hendrik:01 

"Markus Mottl" <markus.mottl@gmail.com> writes:

   To work around this problem you should store pointers to the C++-objects on
   the C++-side, and e.g. associate them with finalized OCaml-values, or
   handles which allow you to explicitly deallocate the objects.

I don't quite understand: I only have pointers from C++ to ocaml.
Once constructed the ocaml objects are completely independent
from the C++ ones.

Hendrik

