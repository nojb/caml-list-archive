Return-Path: <dra-news@metastack.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=UNPARSEABLE_RELAY,
	UPPERCASE_25_50 autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id E030FBC69
	for <caml-list@yquem.inria.fr>; Tue, 24 Oct 2006 23:04:56 +0200 (CEST)
Received: from nmd.hic.det.wayport.net (nmd.hic.det.wayport.net [64.134.7.102])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k9OL4pCx019737
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 24 Oct 2006 23:04:56 +0200
Received: from countertenor (localhost [[UNIX: localhost]])
	by nmd.hic.det.wayport.net (8.13.5/8.13.5) with ESMTP id k9OL4WWG010623
	for <caml-list@yquem.inria.fr>; Tue, 24 Oct 2006 17:04:41 -0400
From: "David Allsopp" <dra-news@metastack.com>
To: "OCaml List" <caml-list@yquem.inria.fr>
Subject: Fairly dumb ocamlyacc question
Date: Tue, 24 Oct 2006 17:04:25 -0400
Organization: MetaStack Solutions Ltd.
Message-ID: <003401c6f7b0$01f9ca10$5a878640@countertenor>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Mailer: Microsoft Office Outlook 11
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2962
Thread-Index: Acb3r8Qxed5534ACQam+KIwtJDU3sA==
X-Miltered: at concorde with ID 453E7FF3.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocamlyacc:01 ocamlyacc:01 kwd:01 kwd:01 parser:01 prec:01 parser:01 token:01 token:01 parsed:01 int:01 string:02 unit:03 problem:05 fails:05 

This should be obvious, but I can't quite solve it!

If I use the following ocamlyacc script:

------------
%token BEFORE_KWD      AFTER_KWD
%token FAILS_KWD

%token       <int> WEEKDAY
%token    <string> NAME

%type <unit> top
%start top
%%

top:
  WEEKDAY AFTER_KWD NAME BEFORE_KWD NAME FAILS_KWD top {()}
| WEEKDAY relative NAME {()}
;

relative:
  BEFORE_KWD {()}
| AFTER_KWD {()}
;
------------

Then I get a shift/reduce having parsed WEEKDAY AFTER_KWD... the parser
can't figure out what to do if it sees NAME. This problem can be made to
disappear by expanding the relative rules to give:

top:
  WEEKDAY AFTER_KWD NAME BEFORE_KWD NAME FAILS_KWD top {()}
| WEEKDAY AFTER_KWD NAME {()}
| WEEKDAY BEFORE_KWD NAME {()}
;

I've tried a couple of tricks with %prec but can't get the parser to come
out the same way with the first rule... please could someone put me out of
my misery!!

Thanks,


David

