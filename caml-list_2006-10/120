Return-Path: <rich@annexia.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id BA812BC69
	for <caml-list@yquem.inria.fr>; Fri, 13 Oct 2006 17:28:29 +0200 (CEST)
Received: from furbychan.cocan.org (furbychan.cocan.org [80.68.91.176])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k9DFSQvf011227
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@inria.fr>; Fri, 13 Oct 2006 17:28:29 +0200
Received: from rich by furbychan.cocan.org with local (Exim 3.35 #1 (Debian))
	id 1GYOxJ-00064o-00
	for <caml-list@inria.fr>; Fri, 13 Oct 2006 16:28:13 +0100
Date: Fri, 13 Oct 2006 16:28:13 +0100
To: caml-list@inria.fr
Subject: ANNOUNCE: Ancient 0.8.0 & Weblogs 2.1 released
Message-ID: <20061013152812.GA2514@furbychan.cocan.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.9i
From: Richard Jones <rich@annexia.org>
X-Miltered: at concorde with ID 452FB09B.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; in-memory:01 ocaml:01 swapped:01 swapped:01 ocaml:01 arrays:01 lgpl:01 2.1:98 2.1:98 blog:98 blog:98 garbage:01 exception:01 api:01 modules:02 


We are pleased to announce the release of Ancient 0.8.0 and
Weblogs 2.1.

======================================================================
Ancient 0.8.0

The Ancient module allows you to use in-memory data structures which
are larger than available memory and so are kept in swap.  If you try
this in normal OCaml code, you'll find that the machine quickly
descends into thrashing as the garbage collector repeatedly iterates
over swapped memory structures.  This module lets you break that
limitation.  Of course the module doesn't work by magic :-) If your
program tries to access these large structures, they still need to be
swapped back in, but it is suitable for large, sparsely accessed
structures.

Secondly, this module allows you to share those structures between
processes.  In this mode, the structures are backed by a disk file,
and any process that has read/write access that disk file can map that
file in and see the structures.

(more here: http://merjis.com/_file/ancient-readme.txt )

----------------------------------------------------------------------
Differences in this release:

Previously a hard-coded limit of 1024 objects could be stored in one
backing file.  This limit has now been removed.

----------------------------------------------------------------------
Download:

http://merjis.com/developers/ancient

======================================================================
Weblogs 2.1

Weblogs is an OCaml module for importing weblogs from Apache or IIS
web servers.

In this major release we have modified the API to use arrays of
structures instead of lists for efficiency.  We have added support for
the Ancient module, so that absolutely huge logfiles can now be loaded
into memory and analysed.  To give you an idea of how large: we have
analysed 38 GB of logfiles from one customer on a 64-bit desktop
machine with just 2 GB of physical RAM.

----------------------------------------------------------------------
Download:

http://merjis.com/developers/weblogs

======================================================================

Both modules are released under LGPL + OCaml linking exception, to
make them compatible with the OCaml library and maximise use even in
commercial applications.

Rich.

-- 
Richard Jones, CTO Merjis Ltd.
Merjis - web marketing and technology - http://merjis.com
Internet Marketing and AdWords courses - http://merjis.com/courses - NEW!
Merjis blog - http://blog.merjis.com - NEW!

