Return-Path: <cpitaper@yahoo.com.ar>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 33C0EBBE1
	for <caml-list@yquem.inria.fr>; Thu, 12 Oct 2006 07:59:03 +0200 (CEST)
Received: from smtp110.mail.mud.yahoo.com (smtp110.mail.mud.yahoo.com [209.191.85.220])
	by concorde.inria.fr (8.13.6/8.13.6) with SMTP id k9C5x2G9001549
	for <caml-list@yquem.inria.fr>; Thu, 12 Oct 2006 07:59:02 +0200
Received: (qmail 28782 invoked from network); 12 Oct 2006 05:59:01 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.com.ar;
  h=Received:Subject:From:To:Cc:In-Reply-To:References:Content-Type:Date:Message-Id:Mime-Version:X-Mailer:Content-Transfer-Encoding;
  b=sBtXlDNIXWWxW0qrLalW08q0oJ6bHQaTaCjhuarfuyPVVK8hNTS/8vvwKq9LNu5N0R22kGioJxPNh5/Rb63ZFBu2GgeEHjSSiard1g4BMayCTl/El01lMvl6VJVaePpr2g5Gwjv7SVpEXZ/5Jxiha1OmAp8v+DpZoCdtnt0bmA4=  ;
Received: from unknown (HELO ?192.168.0.100?) (cpitaper@201.254.106.107 with plain)
  by smtp110.mail.mud.yahoo.com with SMTP; 12 Oct 2006 05:59:00 -0000
Subject: Re: [Caml-list] Why + vs +. but "fake" parametric polymorphism for
	<
From: Carlos Pita <cpitaper@yahoo.com.ar>
To: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <20061012.144518.115907516.garrigue@math.nagoya-u.ac.jp>
References: <1160630285.7649.18.camel@monad>
	 <20061012.144518.115907516.garrigue@math.nagoya-u.ac.jp>
Content-Type: text/plain
Date: Thu, 12 Oct 2006 02:58:57 -0300
Message-Id: <1160632737.7649.34.camel@monad>
Mime-Version: 1.0
X-Mailer: Evolution 2.8.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 452DD9A6.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; parametric:01 polymorphism:01 compiler:01 statically:01 compiler:01 cheers:01 saber:98 respuestas:98 respuestas:98 caml-list:01 integer:01 integer:01 inline:01 explicitly:01 int:01 


> Of course there is an overhead. But the compiler is clever enough to
> remove this overhead when the types of arguments are statically known.
> In particular this is true for floats.

Oh, I see, so if I understand you it would be enough if I use an integer
literal somewhere or explicitly declare some variable as int so the
compiler can infer that the particular use of the comparison operator is
being passed integer operands and consequently inline an specific,
optimized-for-int, version of <. Am I wrong?
Cheers,
Carlos


	
	
		
__________________________________________________
Preguntá. Respondé. Descubrí.
Todo lo que querías saber, y lo que ni imaginabas,
está en Yahoo! Respuestas (Beta).
¡Probalo ya! 
http://www.yahoo.com.ar/respuestas

