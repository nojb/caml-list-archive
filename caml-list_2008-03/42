Return-Path: <keiko@kurims.kyoto-u.ac.jp>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 449B9BBC1
	for <caml-list@yquem.inria.fr>; Mon,  3 Mar 2008 18:15:29 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAADjBy0fAXQInh2dsb2JhbACQcgEBAQgKKZwP
X-IronPort-AV: E=Sophos;i="4.25,438,1199660400"; 
   d="scan'208";a="23307763"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 03 Mar 2008 18:15:29 +0100
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id m23HFSZm032382
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Mon, 3 Mar 2008 18:15:28 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ao8CAKfAy0eCNhAB/2dsb2JhbACtOg
X-IronPort-AV: E=Sophos;i="4.25,438,1199660400"; 
   d="scan'208";a="8904023"
Received: from kurims.kurims.kyoto-u.ac.jp ([130.54.16.1])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 03 Mar 2008 18:15:27 +0100
Received: from localhost (orion [130.54.16.5])
	by kurims.kurims.kyoto-u.ac.jp (8.13.8/8.13.8) with ESMTP id m23HFIpb005323;
	Tue, 4 Mar 2008 02:15:18 +0900 (JST)
Date: Tue, 04 Mar 2008 02:15:17 +0900 (JST)
Message-Id: <20080304.021517.46628762.keiko@kurims.kyoto-u.ac.jp>
To: sds@gnu.org
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] functor troubles
From: Keiko Nakata <keiko@kurims.kyoto-u.ac.jp>
In-Reply-To: <47CC1BE6.2060408@gnu.org>
References: <47CC1BE6.2060408@gnu.org>
X-Mailer: Mew version 4.2 on Emacs 20.7 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 47CC3230.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; functor:01 functor:01 struct:01 sig:01 struct:01 invokes:01 caml-list:01 caml-list:01 precisely:01 expression:02 caml:02 defined:02 module:03 module:03 let:03 

Hello,

the following thread may be useful to you

http://caml.inria.fr/pub/ml-archives/caml-list/2007/03/80072743d454a8cdc79cb67c110586b0.en.html

With best regards,
Keiko


> It appears that module functor arguments are needlessly duplicated:
> 
> ============================================
> module A1 = struct
> ~  module F (M: sig end) = struct
> ~    type t = T
> ~  end
> ~  module I = struct end
> ~  module M = F (I)
> end
> 
> module A2 = A1
> 
> let f : A1.M.t -> A2.M.t = fun x -> x
> ============================================
> 
> This expression has type A1.M.t = A1.F(A1.I).t but is here used with
> type A2.M.t = A1.F(A2.I).t
> 
> when I replace "module M = F (I)" with "module M = F (struct end)" it works.
> 
> Note that the whole file invokes the functor F precisely once, so it is
> not clear why type A2.M.t is defined in terms of F and not as identical
> to A1.M.t.

