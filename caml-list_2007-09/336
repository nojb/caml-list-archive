Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 21E51BC69
	for <caml-list@yquem.inria.fr>; Wed, 26 Sep 2007 19:38:52 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAGQ1+kbAXQImh2dsb2JhbACOLwEBAQgKJw
X-IronPort-AV: E=Sophos;i="4.21,198,1188770400"; 
   d="scan'208";a="3293310"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 26 Sep 2007 19:38:51 +0200
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l8QHcnhs006693
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Wed, 26 Sep 2007 19:38:51 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAGQ1+kbLENaMnmdsb2JhbACOLwEBAQEHBAYFChg
X-IronPort-AV: E=Sophos;i="4.21,198,1188770400"; 
   d="scan'208";a="1831700"
Received: from ipmail01.adl2.internode.on.net ([203.16.214.140])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 26 Sep 2007 19:38:41 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAGQ1+kZ5LHvc/2dsb2JhbAAM
X-IronPort-AV: E=Sophos;i="4.21,198,1188743400"; 
   d="scan'208";a="198171047"
Received: from ppp121-44-123-220.lns10.syd6.internode.on.net (HELO [192.168.1.201]) ([121.44.123.220])
  by ipmail01.adl2.internode.on.net with ESMTP; 27 Sep 2007 03:08:36 +0930
Subject: Re: [Caml-list] Re: Cherry-picking modules (was Re: [ANN] OCaml
	Reins 0.1 - Persistent Data Structure Library)
From: skaller <skaller@users.sourceforge.net>
To: Sylvain Le Gall <sylvain@le-gall.net>
Cc: caml-list@inria.fr
In-Reply-To: <slrnffl2vi.3nv.sylvain@gallu.homelinux.org>
References: <46F95938.7030107@cs.umd.edu>
	 <17487E59-04F2-4509-87B5-24377B051E9E@epfl.ch>
	 <46F961E5.5060302@cs.umd.edu>
	 <55A4E82E-3D05-4F79-A8A6-A87905EB4FC8@epfl.ch>
	 <Pine.GSO.4.64.0709261109010.10669@loompa>
	 <6229FB62-3630-449C-BDDC-AD18FAB05DAE@yahoo.fr>
	 <slrnffl2vi.3nv.sylvain@gallu.homelinux.org>
Content-Type: text/plain
Date: Thu, 27 Sep 2007 03:38:34 +1000
Message-Id: <1190828314.14453.57.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 46FA9929.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 ocamlfind:01 ocaml:01 statically:01 ocamlfind:01 compiler:01 developpers:01 cygwin:01 2007,:98 kid:98 sourceforge:01 polymorphic:01 wrote:01 wrote:01 macosx:01 

On Wed, 2007-09-26 at 16:42 +0000, Sylvain Le Gall wrote:
> On 26-09-2007, Vincent Aravantinos <vincent.aravantinos@yahoo.fr> wrote:
> > Ok, there is camlget, ok there is ocamlfind, ok there is godi.
> >
> > Maybe if there were some 'Inria'-made tool (seems camlget is starting  
> > point for that ?) that be settled in the standard ocaml distribution  
> > would help to make everyone agreed, don't you think ? This does not  
> > solve intrinsic problems such as "I prefer dynamically linked" vs "I  
> > prefer statically linked" but at least that would be a tool everyone  
> > could rely on. Then everyone is free to use it or not. It would even  
> > simplify the task for library-writers.
> >
> 
> ocamlfind and godi are very good tool on their own. Why do they need to
> be INRIA-made tool ?

Because that way, everyone who goes to the trouble to install Ocaml
will have them without further problems.

> INRIA made very good compiler. Great! But let other people use this
> language to build other tools -- with different idea than INRIA. 

To make that feasible, there needs to be a standard set of tools
and rules for accessing these products. At present, these rules
vary from platform to platform.

Software developers often want to get their software out on
ALL platforms, and that requires a platform independent 
package manager and build tool as 'standard'.

> It is really strange, everyone seems to look at OCaml as "languages for
> kid" with everything bundle into some kind of nice package... Please be
> more realistic, OCaml is a complicated language -- design for
> "discriminative hackers". There is a great shift between end-user and
> developper (as M. Furr explains). If you want to deliver something
> without dependency, you just have to precompile things, tar gzip it in a
> nice shell script ".run" and made it available. This will be easy for
> end-user. For developpers, compiling their own OCaml program, dealing
> with library dependency should be easy !

But the problem is I have several OS: Ubuntu-Linux, XP32, XP64
and Cygwin. How do I as the developer actually make the packages
for Redhat/Fedora/Solaris/MacOSX/Windows ....? 
How about all the CPU types around? x86, x86_64, ia64, Sparc ...
 I am just not rich enough :)

I can make a Python program that builds Ocaml
and C/C++ source code on all platforms though, and have.

I prefer to supply a "Higher Order Function", namely source
code and source code to build source code .. than binary instances
for the same software engineering reasons we use Ocaml in 
the first place: polymorphic functions provide better reusability.

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

