Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 188A0BC6B
	for <caml-list@yquem.inria.fr>; Thu, 20 Sep 2007 12:41:54 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAJPr8UbLENaMnmdsb2JhbACOEQEBAQEHBAYFIg
X-IronPort-AV: E=Sophos;i="4.20,278,1186351200"; 
   d="scan'208";a="2961628"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 20 Sep 2007 12:43:15 +0200
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l8KAgVet017104
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Thu, 20 Sep 2007 12:42:32 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAJPr8UbLENaMnmdsb2JhbACOEQEBAQEHBAYFIg
X-IronPort-AV: E=Sophos;i="4.20,278,1186351200"; 
   d="scan'208";a="2961626"
Received: from ipmail01.adl2.internode.on.net ([203.16.214.140])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 20 Sep 2007 12:43:13 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAACvq8UZ5LHvc/2dsb2JhbAAM
X-IronPort-AV: E=Sophos;i="4.20,278,1186324200"; 
   d="scan'208";a="194627108"
Received: from ppp121-44-123-220.lns10.syd6.internode.on.net (HELO [192.168.1.201]) ([121.44.123.220])
  by ipmail01.adl2.internode.on.net with ESMTP; 20 Sep 2007 20:13:10 +0930
Subject: Re: [Caml-list] Re: [ANN] coThreads 0.10
From: skaller <skaller@users.sourceforge.net>
To: Zheng Li <li@pps.jussieu.fr>
Cc: caml-list@inria.fr
In-Reply-To: <87abrhka16.fsf@pps.jussieu.fr>
References: <87lkb5fe3f.fsf@pps.jussieu.fr> <87sl5d8cgd.fsf@pps.jussieu.fr>
	 <46F174D9.5060900@ujf-grenoble.fr> <877imm2z7h.fsf@pps.jussieu.fr>
	 <1190249430.6642.1.camel@rosella.wigram>
	 <20070920142938.d48552f2.mle+ocaml@mega-nerd.com>
	 <1190272316.23116.34.camel@rosella.wigram>
	 <20070920175233.a510630b.mle+ocaml@mega-nerd.com>
	 <87abrhka16.fsf@pps.jussieu.fr>
Content-Type: text/plain
Date: Thu, 20 Sep 2007 20:43:09 +1000
Message-Id: <1190284989.6770.28.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 46F24E97.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; 0200,:01 ocaml:01 lgpl:01 lgpl:01 restrictive:01 gcc:01 bug:01 restrictive:01 haskell:01 haskell:01 ocaml's:01 ocaml's:01 readline:01 0.10:98 ffau:98 

On Thu, 2007-09-20 at 10:37 +0200, Zheng Li wrote:
> Hi,
> 
> Erik de Castro Lopo <mle+ocaml@mega-nerd.com> writes:
> > skaller wrote:
> >> CoThreads is GPL, not even LGPL, let alone LGPL with linking exception,
> > I posted a request to the CoThreads mailing list for a licence change
> > to LGPL with linking exception.
> 
> Yes. I have no problem to change the licence to another one if desired by the
> community. I can change it since next release. Is LGPL+linking exception the
> right one?

It depends how restrictive you *intend* to be. BSD, MIT, Boost, 
Creative Commons, etc are for genuinely free software. 
Free as in FFAU: Free for Any Use. Do what you like with it!

GPL is if you want to prevent anyone using it who hides any 
source code (most commercial use). 

LGPL+linking X is when you  don't mind if people hide 
their own source, as long as they  don't hide yours.

My opinion is: for a MAJOR public executable like gcc,
GPL is OK. For major libraries like glibc, LGPL (with
linking permitted) would be ok.

For code which has hardly any developers or users, if you
wish to encourage the widest possible use, the most 
permissive licence (eg BSD) is probably the best:
why exclude potential users who may help with bug reports
or patches? IMHO *especially* commercial users who put funds
into it and make a commitment, are even more likely to help
with maintenance and development.

Unless or until you expect to actually make money out of the
code itself, restrictive licences are counter-productive ..
in my opinion of course.

EG: GHC Haskell is currently trying to dump GMP because
of the licence. GMP is LGPL, GHC is BSD: dependence on GMP
is therefore a serious barrier to people using Haskell in
industry.. not what the authors want. (Plain LGPL doesn't
have a static linking exception as Ocaml's libraries do).

Another *famous* example is 'readline()', the code that
does line editing for bash. Why is Ocaml's top level
so crappy, with no editing? Because of readline()'s GPL
licence it can't be used, because GPL is a virus, it
propagates to anything it touches.

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

