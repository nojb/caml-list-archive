Return-Path: <dave@ramenlabs.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 16FD6BC6B
	for <caml-list@yquem.inria.fr>; Tue,  4 Sep 2007 18:25:33 +0200 (CEST)
Received: from tenhost.net (tenhost.net [64.246.28.52])
	by discorde.inria.fr (8.13.6/8.13.6) with SMTP id l84GPVvs021544
	for <caml-list@inria.fr>; Tue, 4 Sep 2007 18:25:32 +0200
Received: (qmail 7219 invoked from network); 4 Sep 2007 10:50:49 -0500
Received: from ip72-208-52-84.ph.ph.cox.net (HELO ?192.168.1.99?) (72.208.52.84)
  by tenhost.net with SMTP; 4 Sep 2007 10:50:49 -0500
Message-ID: <46DD8559.9080401@ramenlabs.com>
Date: Tue, 04 Sep 2007 09:18:33 -0700
From: Dave Benjamin <dave@ramenlabs.com>
User-Agent: Mozilla-Thunderbird 2.0.0.4 (X11/20070828)
MIME-Version: 1.0
To: Gerd Stolpmann <info@gerd-stolpmann.de>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Simple HTTPS client example?
References: <46DCDFEB.9050606@ramenlabs.com> <1188907650.8088.11.camel@localhost.localdomain>
In-Reply-To: <1188907650.8088.11.camel@localhost.localdomain>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 46DD86FB.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; gerd:01 stolpmann:01 ocamlnet:01 subclassing:01 overriding:01 wrote:01 exception:01 caml-list:01 benjamin:01 benjamin:01 seems:03 written:07 schrieb:08 seem:08 looks:08 

Gerd Stolpmann wrote:
> Am Montag, den 03.09.2007, 21:32 -0700 schrieb Dave Benjamin:
>> Has anyone written any code to use Ocamlnet to retrieve a URL using 
>> HTTPS? I'm looking at Uq_ssl and Http_client, but can't seem to find a 
>> way to fit them together.
> 
> There is no easy way to do so.

Well, is there a difficult way to do so? Any idea what that way might be? =)

Otherwise, it seems like it ought to be possible at least to use a proxy 
like squid to relay the request. However, even with proxy enabled, I get 
this error:

	Exception: Failure "Http_client: bad URL".

whenever there is an "https" as the protocol. It looks like subclassing 
the call class and overriding set_request_uri to accept HTTPS URLs would 
at least make that error go away, but then something additional would 
need to be done to keep track of the protocol when it's time to send it 
to the proxy...

Thanks,
Dave

