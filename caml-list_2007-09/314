Return-Path: <daniel.buenzli@epfl.ch>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id A6617BC69;
	Wed, 26 Sep 2007 10:17:16 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAPux+UbAXQInemdsb2JhbACOLQEBCQo
X-IronPort-AV: E=Sophos;i="4.20,300,1186351200"; 
   d="scan'208";a="1799935"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 26 Sep 2007 10:17:16 +0200
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l8Q8HFiY014110
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK);
	Wed, 26 Sep 2007 10:17:16 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAPux+UbDuhNBn2dsb2JhbACOLQEBAQEHBAYHIA
X-IronPort-AV: E=Sophos;i="4.20,300,1186351200"; 
   d="scan'208";a="16797897"
Received: from mail20.bluewin.ch ([195.186.19.65])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 26 Sep 2007 10:17:15 +0200
Received: from [192.168.1.58] (85.2.36.8) by mail20.bluewin.ch (Bluewin 7.3.121)
        id 46F382AC000FA8B2; Wed, 26 Sep 2007 08:17:14 +0000
In-Reply-To: <20070926090303.0dce17e4@alcazar.inria.fr>
References: <46F95938.7030107@cs.umd.edu> <17487E59-04F2-4509-87B5-24377B051E9E@epfl.ch> <46F961E5.5060302@cs.umd.edu> <55A4E82E-3D05-4F79-A8A6-A87905EB4FC8@epfl.ch> <20070926090303.0dce17e4@alcazar.inria.fr>
Mime-Version: 1.0 (Apple Message framework v752.2)
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
Message-Id: <91B41E28-830D-49FF-A77A-BBA4B0F1F377@epfl.ch>
Cc: caml-list List <caml-list@inria.fr>
Content-Transfer-Encoding: quoted-printable
From: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@epfl.ch>
Subject: Re: Cherry-picking modules (was Re: [Caml-list] [ANN] OCaml Reins	0.1 - Persistent Data	Structure Library)
Date: Wed, 26 Sep 2007 10:17:20 +0200
To: Maxence Guesdon <maxence.guesdon@inria.fr>
X-Mailer: Apple Mail (2.752.2)
X-Miltered: at concorde with ID 46FA158B.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; bunzli:01 buenzli:01 ocaml:01 maxence:01 guesdon:01 cameleon:01 reimplement:01 appending:01 snippets:01 mli:01 caml-list:01 functions:01 dependency:01 data:02 modules:02 


Le 26 sept. 07 =E0 09:03, Maxence Guesdon a =E9crit :

> You might be interested in caml-get:

Yes, I mentioned it in my email. This is a good idea and something =20
along this line would be useful. But before I start using it, it =20
should drop its dependency on cameleon, integrate well with =20
ocamlbuild (both should be thought and designed toghether) and make =20
it in the standard distribution.

I also think it should be simplified. I'd take the module as the only =20=

atomic unit. This would avoid things like trying to reimplement the =20
notion of signature and interface in comments (@cgtype,@cgname). For =20
me such a tool should *just* allow me to get modules, keep track of =20
their origin, version and license. The tool should not try to look =20
into modules or hack them by appending snippets of code to other =20
modules (I don't really care for the "little" functions, I care for =20
reusable abstractions). As for the distribution, in the simplest =20
case, it should be as easy as putting a .ml and .mli file on a web =20
server with an approriate @cgversion and @cglicense in the comments.

Best,

Daniel=

