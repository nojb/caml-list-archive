Return-Path: <daniel.buenzli@epfl.ch>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.8 required=5.0 tests=AWL,SPF_SOFTFAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 190DCBC69
	for <caml-list@yquem.inria.fr>; Wed, 26 Sep 2007 09:22:55 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAO+j+UbAXQInemdsb2JhbACOLQEBCQo
X-IronPort-AV: E=Sophos;i="4.20,299,1186351200"; 
   d="scan'208";a="1796683"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 26 Sep 2007 09:22:55 +0200
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l8Q7MsMW009493
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Wed, 26 Sep 2007 09:22:54 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAO+j+UbDuhI/nmdsb2JhbACOLQEBAQEHBAYn
X-IronPort-AV: E=Sophos;i="4.20,299,1186351200"; 
   d="scan'208";a="3263976"
Received: from mail15.bluewin.ch ([195.186.18.63])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 26 Sep 2007 09:22:54 +0200
Received: from [192.168.1.58] (85.2.36.8) by mail15.bluewin.ch (Bluewin 7.3.121)
        id 46F3883F0011E134; Wed, 26 Sep 2007 07:22:53 +0000
In-Reply-To: <slrnffj6mn.3nv.sylvain@gallu.homelinux.org>
References: <46F95938.7030107@cs.umd.edu> <17487E59-04F2-4509-87B5-24377B051E9E@epfl.ch> <46F961E5.5060302@cs.umd.edu> <55A4E82E-3D05-4F79-A8A6-A87905EB4FC8@epfl.ch> <slrnffj6mn.3nv.sylvain@gallu.homelinux.org>
Mime-Version: 1.0 (Apple Message framework v752.2)
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
Message-Id: <B2FE2D0B-623F-4F26-B587-4CD55E5F611D@epfl.ch>
Cc: caml-list List <caml-list@inria.fr>
Content-Transfer-Encoding: quoted-printable
From: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@epfl.ch>
Subject: Re: [Caml-list] Re: Cherry-picking modules (was Re: [ANN] OCaml Reins 0.1 - Persistent Data	Structure Library)
Date: Wed, 26 Sep 2007 09:22:58 +0200
To: Sylvain Le Gall <sylvain@le-gall.net>
X-Mailer: Apple Mail (2.752.2)
X-Miltered: at concorde with ID 46FA08CE.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; bunzli:01 buenzli:01 ocaml:01 ocaml:01 avoided:01 caml-list:01 data:02 modules:02 modules:02 epfl:02 linking:02 linking:02 external:03 embedding:03 library:03 


Le 26 sept. 07 =E0 01:33, Sylvain Le Gall a =E9crit :

> Anyway, embeding any external code into your project is a nightmare =20=

> for
> security/maintenance in the long term... I would avoid this =20
> solution if
> i want things that doesn't have problem.

As I explained I don't think so. In the best case you delegate the =20
nightmare to the user. Can you explain exactly where the nightmare is =20=

with embedding ? If the distributed modules you integrate are =20
labelled with a version, I don't see it. The work needed for =20
maintenance in the long term is exactly the same, except only the =20
developer has to care. As for security updates in ocaml, you cannot =20
anyway rely on dynamic linking. Which I see as a good thing, for =20
applications dynamic linking creates more problems than it solves and =20=

should be avoided most of the time (except of course for system =20
libraries).

Best,

Daniel

