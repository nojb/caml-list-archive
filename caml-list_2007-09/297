Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 2F8FDBC69
	for <caml-list@yquem.inria.fr>; Tue, 25 Sep 2007 20:46:39 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAJTz+EbLENaMnmdsb2JhbACOLAEBAQEHBAYPGA
X-IronPort-AV: E=Sophos;i="4.20,296,1186351200"; 
   d="scan'208";a="1457685"
Received: from ipmail01.adl2.internode.on.net ([203.16.214.140])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 25 Sep 2007 20:46:37 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAD/y+EZ5LHvc/2dsb2JhbAAM
X-IronPort-AV: E=Sophos;i="4.20,296,1186324200"; 
   d="scan'208";a="197488992"
Received: from ppp121-44-123-220.lns10.syd6.internode.on.net (HELO [192.168.1.201]) ([121.44.123.220])
  by ipmail01.adl2.internode.on.net with ESMTP; 26 Sep 2007 04:16:35 +0930
Subject: Re: [Caml-list] Re: Ocaml for Scientific computing
From: skaller <skaller@users.sourceforge.net>
To: Mike Lin <mikelin@mit.edu>
Cc: caml-list <caml-list@yquem.inria.fr>
In-Reply-To: <2a1a1a0c0709251027v6dc42b38g1138b09f5627dbca@mail.gmail.com>
References: <2a1a1a0c0709251027v6dc42b38g1138b09f5627dbca@mail.gmail.com>
Content-Type: text/plain
Date: Wed, 26 Sep 2007 04:46:34 +1000
Message-Id: <1190745994.12747.41.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; ocaml:01 ocamlopt:01 gcc:01 ocaml:01 sourceforge:01 wrote:01 wrote:01 caml-list:01 numerical:03 alex:03 readability:05 computing:05 computing:05 tue:06 sep:06 

On Tue, 2007-09-25 at 13:27 -0400, Mike Lin wrote:
> On Sep 25, 7:11 am, Alex Mikhalev <a.mikha...@cranfield.ac.uk> wrote:

> For numerical computing, I wish ocamlopt would do at least basic loop
> optimizations, like hoisting invariant values -- this type of stuff is
> easily done manually, but often at the expense of code readability.

Gcc does this quite well I think. However in a higher level 
procedural language (like Ocaml and Felix) it is very hard
to get right and potentially very expensive.


-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

