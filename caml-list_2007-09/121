Return-Path: <ls-ocaml-2006@m-e-leypold.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id DB2ACBC69
	for <caml-list@yquem.inria.fr>; Sat, 15 Sep 2007 16:22:51 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAKKH60bAXQImh2dsb2JhbACBV4w7AQEBCAon
X-IronPort-AV: E=Sophos;i="4.20,258,1186351200"; 
   d="scan'208";a="2741802"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 15 Sep 2007 16:23:33 +0200
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l8FEN9Ze016837
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Sat, 15 Sep 2007 16:23:09 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ah4FAKKH60bVhW6V/2dsb2JhbACBVw
X-IronPort-AV: E=Sophos;i="4.20,258,1186351200"; 
   d="scan'208";a="2741801"
Received: from server2.thinkcrime.de ([213.133.110.149])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 15 Sep 2007 16:23:32 +0200
Received: from hod-sarge-2005-10.lan.m-e-leypold.de (dslb-088-072-195-133.pools.arcor-ip.net [88.72.195.133])
	(Authenticated sender: hod-sarge-2005-10@server2)
	by server2.thinkcrime.de (Postfix) with ESMTP id E6E1E900245
	for <caml-list@inria.fr>; Sat, 15 Sep 2007 16:23:12 +0200 (CEST)
Received: by hod-sarge-2005-10.lan.m-e-leypold.de (Postfix, from userid 1003)
	id 38AE637962; Sat, 15 Sep 2007 16:27:54 +0200 (CEST)
To: caml-list@inria.fr
Subject: Re: [Caml-list] Closing all open file descriptors
References: <Pine.LNX.4.63.0709131754020.24521@tenhost.net>
	<006b01c7f699$275fd6d0$017ca8c0@countertenor>
	<200709141000.l8EA04x12648@virtutech.se>
	<Pine.LNX.4.63.0709141528570.27531@tenhost.net>
	<1189806728.46eb0288d38b8@webmail.in-berlin.de>
	<x2lkb86gm5.fsf@hod.lan.m-e-leypold.de>
	<1189847741.46eba2bd9d121@webmail.in-berlin.de>
	<20070915192631.2384ae5a.mle+ocaml@mega-nerd.com>
	<1189852990.46ebb73e7edc3@webmail.in-berlin.de>
	<200709151136.l8FBaH813458@virtutech.se>
	<1189857437.46ebc89defff3@webmail.in-berlin.de>
From: Markus E L <ls-ocaml-2006@m-e-leypold.de>
Organization: N/A
Date: Sat, 15 Sep 2007 16:27:54 +0200
In-Reply-To: <1189857437.46ebc89defff3@webmail.in-berlin.de> (Oliver
 Bandel's message of "Sat, 15 Sep 2007 13:57:17 +0200")
Message-ID: <ozfy1g9f6d.fsf@hod.lan.m-e-leypold.de>
User-Agent: Some cool user agent (SCUG)
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable
X-Miltered: at discorde with ID 46EBEACD.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; descriptors:01 markus:01 bandel:01 mattias:01 mattias:01 descriptors:01 ocaml:01 ocaml:01 high-level:01 low-level:01 buffered:01 buffered:01 sockets:01 high-level:01 stdio:01 


Oliver Bandel wrote:

> Zitat von Mattias Engdeg=C3=A5   rd <mattias@virtutech.se>:
>
>> >If you have all your open descriptors in a list,
>> >you can close them after a fork.
>>
>> That approach does not compose well --- descriptors opened by
>> a library will be excluded. The only good way is to ask the system.
>>
>
>
> What do you mean with "does not compose well"?
> Do you see OCaml-specific problems here, or what?

No.

> In C, there is a function fileno(3).
> Possibly this is, what people discussing
> in this thread are looking for.

No. You're barking up the completely wrong tree. We are looking for a
way to iterate over ALL open filedescriptors, wether inherited from
the parent process (which we don't control / haven't written
ourselves, so no recurrence to set_closeon_exec), or opened by a
library procedure or opened by our own program.

> This would be a thing that could be included in
> Ocaml, but the result would not be an integer-value,

Bah. Nobody asked for integer values.

> because OCaml uses abstract types for file descriptors.

Yes, yes, we know.

> I'm a littlebid sceptical on using high-level and low-level
> stuff together. In C it's also not recommended to mix buffered
> and non-buffered IO,=20

But you _have_ to do it, how else could you do buffered IO on sockets?

> and so in OCaml, which is quite more
> high-level stuff, I would be even more sceptical on mixing
> these things together.

No, it's very similar to the relationship between stdio and unix file
descriptors.

> As a general rule I would recommend, not to mix the different
> IO-possibilities.

It's not so rare that you would have to do a select() on some I/O
channel you'd on the other side rather prefer to do buffered I/O with
instead of writing (again) your own buffering. Fortunately this
works.=20

So I rate "I would not recommend" rather too strong. It works and it
is AFAI understand guaranteed to work. One just has to be prepared to
understand the interaction between buffered and unbuffered I/O, which
are a _little_ bit more complex than one type of I/O alone, but --
nonetheless -- managable.

Regards -- Markus

