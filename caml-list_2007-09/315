Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 8CD84BC69
	for <caml-list@yquem.inria.fr>; Wed, 26 Sep 2007 10:19:44 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAPux+UbAXQImk2dsb2JhbACOLQEBAQEHBAYHIA
X-IronPort-AV: E=Sophos;i="4.20,300,1186351200"; 
   d="scan'208";a="3266917"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 26 Sep 2007 10:19:44 +0200
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l8Q8JeJq026602
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Wed, 26 Sep 2007 10:19:44 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAPux+UbLENaMnmdsb2JhbACOLQEBAQEHBAYn
X-IronPort-AV: E=Sophos;i="4.20,300,1186351200"; 
   d="scan'208";a="16798063"
Received: from ipmail01.adl2.internode.on.net ([203.16.214.140])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 26 Sep 2007 10:19:39 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAALiv+UZ5LHvc/2dsb2JhbAAM
X-IronPort-AV: E=Sophos;i="4.20,300,1186324200"; 
   d="scan'208";a="197896030"
Received: from ppp121-44-123-220.lns10.syd6.internode.on.net (HELO [192.168.1.201]) ([121.44.123.220])
  by ipmail01.adl2.internode.on.net with ESMTP; 26 Sep 2007 17:49:36 +0930
Subject: Re: [Caml-list] Re: Cherry-picking modules (was Re: [ANN] OCaml
	Reins 0.1 - Persistent Data	Structure Library)
From: skaller <skaller@users.sourceforge.net>
To: Daniel =?ISO-8859-1?Q?B=FCnzli?= <daniel.buenzli@epfl.ch>
Cc: Sylvain Le Gall <sylvain@le-gall.net>,
	caml-list List <caml-list@inria.fr>
In-Reply-To: <B2FE2D0B-623F-4F26-B587-4CD55E5F611D@epfl.ch>
References: <46F95938.7030107@cs.umd.edu>
	 <17487E59-04F2-4509-87B5-24377B051E9E@epfl.ch>
	 <46F961E5.5060302@cs.umd.edu>
	 <55A4E82E-3D05-4F79-A8A6-A87905EB4FC8@epfl.ch>
	 <slrnffj6mn.3nv.sylvain@gallu.homelinux.org>
	 <B2FE2D0B-623F-4F26-B587-4CD55E5F611D@epfl.ch>
Content-Type: text/plain; charset=utf-8
Date: Wed, 26 Sep 2007 18:19:35 +1000
Message-Id: <1190794775.6800.69.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 8bit
X-Miltered: at discorde with ID 46FA161C.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 0200,:01 ocaml:01 avoided:01 statically:01 sourceforge:01 wrote:01 caml-list:01 data:02 modules:02 kernel:02 linking:02 linking:02 tradeoff:03 library:03 

On Wed, 2007-09-26 at 09:22 +0200, Daniel Bünzli wrote:
> Le 26 sept. 07 à 01:33, Sylvain Le Gall a écrit :

>  As for security updates in ocaml, you cannot  
> anyway rely on dynamic linking. Which I see as a good thing, for  
> applications dynamic linking creates more problems than it solves and  
> should be avoided most of the time (except of course for system  
> libraries).

There is a tradeoff between reliability and ease of maintenance
such that for many larger applications dynamic linking is actually
*more* reliable.

Would you really recommend statically linking your whole desktop
against the Linux kernel?? :))

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

