Return-Path: <lapinmalin@laposte.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.9 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE,
	NO_REAL_NAME autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 45260BC6B
	for <caml-list@yquem.inria.fr>; Wed,  5 Sep 2007 12:20:54 +0200 (CEST)
Received: from out3.laposte.net (out4.laposte.net [193.251.214.121])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l85AKrHe023297
	for <caml-list@inria.fr>; Wed, 5 Sep 2007 12:20:54 +0200
Received: from meplus.info (localhost [127.0.0.1])
	by mwinf8306.laposte.net (SMTP Server) with ESMTP id CDDCA7000088
	for <caml-list@inria.fr>; Wed,  5 Sep 2007 12:20:53 +0200 (CEST)
Received: from wwinf8404 (unknown [10.98.50.10])
	by mwinf8306.laposte.net (SMTP Server) with ESMTP id B60CE7000086
	for <caml-list@inria.fr>; Wed,  5 Sep 2007 12:20:53 +0200 (CEST)
X-ME-UUID: 20070905102053745.B60CE7000086@mwinf8306.laposte.net
From: lapinmalin@laposte.net
Reply-To: lapinmalin@laposte.net
To: caml-list@inria.fr
Message-ID: <31940100.256881188987653728.JavaMail.www@wwinf8404>
Subject: OCaml native win32 compiler issue in 3.10
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-Originating-IP: [217.128.108.232]
X-Wum-Nature: EMAIL-NATURE
X-WUM-FROM: |~|
X-WUM-TO: |~|
X-WUM-REPLYTO: |~|
Date: Wed,  5 Sep 2007 12:20:53 +0200 (CEST)
X-me-spamlevel: not-spam
X-me-spamrating: 47.320998
X-Miltered: at concorde with ID 46DE8305.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 compiler:01 compiler:01 bug:01 buddies:98 native:03 native:03 subsystem:08 backward:08 console:09 feature:09 feature:09 laposte:88 issue:14 issue:14 


Hi buddies,

In 3.10, the native windows compiler does a "cl [..] /link /subsystem:console"
In 3.09.3, the native windows compiler does a "cl [...]"

I don't know if it's a bug or a feature, but there's clearly a backward compatibility issue.

Can you please revert it back to the old behavior, or at least put on option to the native windows compiler so that this feature can be disabled at will?

Thx
Keep up the good work

