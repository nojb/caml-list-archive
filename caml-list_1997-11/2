Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA19512 for caml-redistribution; Mon, 10 Nov 1997 08:51:45 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA29686 for <caml-list@pauillac.inria.fr>; Fri, 7 Nov 1997 12:19:13 +0100 (MET)
Received: from alcatel.fr (mail.alcatel.fr [194.133.58.131])
	by nez-perce.inria.fr (8.8.7/8.8.5) with ESMTP id MAA18233
	for <caml-list@inria.fr>; Fri, 7 Nov 1997 12:19:08 +0100 (MET)
Received: from alcatel.fr (gatekeeper-ssn.alcatel.fr [155.132.180.244])
	by mailgate.alcatel.fr (8.8.5/8.8.5) with ESMTP id MAA01421
	for <caml-list@inria.fr>; Fri, 7 Nov 1997 12:21:18 +0100
Received: from medine.aar.alcatel-alsthom.fr (medine.aar.alcatel-alsthom.fr [193.105.117.1])
	by nsfhh5.alcatel.fr (8.8.5/8.8.5) with SMTP id MAA09950
	for <caml-list@inria.fr>; Fri, 7 Nov 1997 12:19:02 +0100 (MET)
Received: from aar.aar.alcatel-alsthom.fr (aar.aar.alcatel-alsthom.fr [188.9.12.91]) by medine.aar.alcatel-alsthom.fr (8.6.12/aar-1.1) with ESMTP id MAA23761 for <caml-list@inria.fr>; Fri, 7 Nov 1997 12:23:40 +0100
Received: from fick.dinsunnet (fick.aar.alcatel-alsthom.fr [188.9.12.70])
	by aar.aar.alcatel-alsthom.fr (8.8.7/8.8.7/aar-1.0) with SMTP id MAA18534
	for <caml-list@inria.fr>; Fri, 7 Nov 1997 12:17:11 +0100 (MET)
Received: from fick by fick.dinsunnet (SMI-8.6/SMI-SVR4)
	id MAA00698; Fri, 7 Nov 1997 12:17:07 +0100
Message-ID: <3462F8B3.D1E@aar.alcatel-alsthom.fr>
Date: Fri, 07 Nov 1997 12:17:07 +0100
From: Benoit Pasquereau <pasquere@aar.alcatel-alsthom.fr>
Organization: Alcatel-Alsthom Recherche
X-Mailer: Mozilla 3.01 (X11; I; SunOS 5.5.1 sun4u)
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: local type within class
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis

Hi,

I would like to define "types" that are in the namescope of classes, is
it possibles in ocaml ? (just like local types in C++)
I begin in ocaml and I have just made tiny programs with caml-light.


I don't master ocaml concepts very well, so perhaps this question is
silly !

Benoit Pasquereau.




