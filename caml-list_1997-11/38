Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA19850 for caml-redistribution; Tue, 25 Nov 1997 09:21:30 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA19651 for <caml-list@pauillac.inria.fr>; Tue, 25 Nov 1997 09:03:46 +0100 (MET)
Received: from jfh00.fernuni-hagen.de (jfh00.fernuni-hagen.de [132.176.7.6])
	by concorde.inria.fr (8.8.7/8.8.5) with SMTP id JAA06589
	for <caml-list@pauillac.inria.fr>; Tue, 25 Nov 1997 09:03:46 +0100 (MET)
Received: (qmail 671 invoked by uid 200); 25 Nov 1997 08:03:51 -0000
To: caml-list@pauillac.inria.fr
Subject: imenu and ocaml-mode 1.05
From: Fritz Heinrichmeyer <fritz.heinrichmeyer@fernuni-hagen.de>
Date: 25 Nov 1997 09:03:50 +0100
In-Reply-To: Fabrice Le Fessant's message of Fri, 21 Nov 1997 15:38:23 +0100
Message-ID: <uflnydxuvt.fsf@jfh00.fernuni-hagen.de>
Lines: 55
X-Mailer: Gnus v5.5/Emacs 20.2
X-Emacs: Emacs 20.2 (with raw setting)
MIME-Version: 1.0 (generated by SEMI MIME-Edit 0.98 - =?ISO-8859-4?Q?"D?=
  =?ISO-8859-4?Q?=84=F2h=84=F2ji"?=)
Content-Type: text/plain; charset=US-ASCII
Sender: weis

Ocaml-mode 1.05 did not work with emacs-20.2 due a changed imenu
interface. 

Here is a patch included (sorry, attachments are not allowed in this
list):

*** caml-mode/caml.el	Thu Jul 17 15:06:05 1997
--- /home/jfh/lisp/caml.el	Mon Nov 24 10:53:45 1997
***************
*** 423,428 ****
--- 423,430 ----
      ;imenu support (not for Xemacs)
      (make-local-variable 'imenu-create-index-function)
      (setq imenu-create-index-function 'caml-create-index-function)
+     (make-local-variable 'imenu-generic-expression)
+     (setq imenu-generic-expression caml-imenu-generic-expression)
      (if caml-imenu-disable nil
        (require 'imenu)
        (imenu-add-to-menubar "Defs")))
***************
*** 451,457 ****
  (defun caml-show-subshell () (inferior-caml-show-subshell))
  
  ;;; Imenu support
! (defconst caml-imenu-search-regexp
    (concat "\\<in\\>\\|"
  	  "^[ \t]*\\(let\\|class\\|type\\|m\\(odule\\|ethod\\)"
  	  "\\|functor\\|and\\|val\\)[ \t]+"
--- 453,459 ----
  (defun caml-show-subshell () (inferior-caml-show-subshell))
  
  ;;; Imenu support
! (defconst caml-imenu-generic-expression
    (concat "\\<in\\>\\|"
  	  "^[ \t]*\\(let\\|class\\|type\\|m\\(odule\\|ethod\\)"
  	  "\\|functor\\|and\\|val\\)[ \t]+"
***************
*** 461,467 ****
  (defun caml-prev-index-position-function ()
    (let (found data)
      (while (and (setq found
! 		      (re-search-backward caml-imenu-search-regexp nil 'move))
  		(progn (setq data (match-data)) t)
  		(or (caml-in-literal-p)
  		    (caml-in-comment-p)
--- 463,470 ----
  (defun caml-prev-index-position-function ()
    (let (found data)
      (while (and (setq found
! 		      (re-search-backward caml-imenu-generic-expression
! 					  nil 'move))
  		(progn (setq data (match-data)) t)
  		(or (caml-in-literal-p)
  		    (caml-in-comment-p)





