Return-Path: <yminsky@janestreet.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 097D17FE36
	for <caml-list@sympa.inria.fr>; Fri,  3 Jun 2016 17:50:19 +0200 (CEST)
IronPort-PHdr: 9a23:L6wmQBLlNzTq4W0wkNmcpTZWNBhigK39O0sv0rFitYgVKv7xwZ3uMQTl6Ol3ixeRBMOAu6MC1bGd4vqocFdDyKjCmUhKSIZLWR4BhJdetC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TWM5DIfUi/yKRBybrysXNWC3oLpjKvjodX6WEZhunmUWftKNhK4rAHc5IE9oLBJDeIP8CbPuWZCYO9MxGlldhq5lhf44dqsrtY4q3wD89pozcNLUL37cqIkVvQYSW1+ayFm0vb2rgHORhej4X4VU2Ne0kYZQluN0BavFLz4qCbmquc5kAuTNtTrQKt+EWCp5r1mVAPloCIMMjci7GzNzMd52vF1uhWk8i122YnSKKSUMuF9b+uJbNYbQ3FCT+5TXipMGZ+mYoYTSeEGOLAL/MHGu1ISoE7mVkGXD+T1x2oN2yb7
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=yminsky@janestreet.com; spf=Pass smtp.mailfrom=yminsky@janestreet.com; spf=None smtp.helo=postmaster@mxout3.mail.janestreet.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  yminsky@janestreet.com) identity=pra;
  client-ip=38.105.200.229;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="yminsky@janestreet.com";
  x-sender="yminsky@janestreet.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  yminsky@janestreet.com designates 38.105.200.229 as permitted
  sender) identity=mailfrom; client-ip=38.105.200.229;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="yminsky@janestreet.com";
  x-sender="yminsky@janestreet.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mxout3.mail.janestreet.com) identity=helo;
  client-ip=38.105.200.229;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="yminsky@janestreet.com";
  x-sender="postmaster@mxout3.mail.janestreet.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0D1AQAOplFXc+XIaSZchBB9BqlOKotfhH2BeSKFcAKBMAc4FAEBAQEBAQEBEQEKFglQgjCCFQEBAQMBEhEEGQEBLAsBBAsJAgsGBAEBAQ0dAgIiEgEFAQoKCAYTEhCHcwMPCAMLlAyPQoExPjGKVGeEQQEBBYg/A4QpAQEBAQEBAQEBAQEBAQEBAQEBAQEBFAgQhheETYRtglSCWQGGRgyRd4YDiCGBaU6HLYU4jhMSHoEPDw+CMIIQUooSAQEB
X-IPAS-Result: A0D1AQAOplFXc+XIaSZchBB9BqlOKotfhH2BeSKFcAKBMAc4FAEBAQEBAQEBEQEKFglQgjCCFQEBAQMBEhEEGQEBLAsBBAsJAgsGBAEBAQ0dAgIiEgEFAQoKCAYTEhCHcwMPCAMLlAyPQoExPjGKVGeEQQEBBYg/A4QpAQEBAQEBAQEBAQEBAQEBAQEBAQEBFAgQhheETYRtglSCWQGGRgyRd4YDiCGBaU6HLYU4jhMSHoEPDw+CMIIQUooSAQEB
X-IronPort-AV: E=Sophos;i="5.26,412,1459807200"; 
   d="scan'208,217";a="221019246"
Received: from mxout3.mail.janestreet.com ([38.105.200.229])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 03 Jun 2016 17:50:17 +0200
Received: from tot-qpr-mailcore2.delacy.com ([172.27.56.106] helo=tot-qpr-mailcore2)
	by mxout3.mail.janestreet.com with esmtps (TLSv1:DHE-RSA-AES256-SHA:256)
	(Exim 4.82)
	(envelope-from <yminsky@janestreet.com>)
	id 1b8rMW-0000JM-JN
	for caml-list@inria.fr; Fri, 03 Jun 2016 11:50:16 -0400
X-JS-Flow: external
Received: by tot-qpr-mailcore2 with JS-mailcore (0.1)
	(envelope-from <yminsky@janestreet.com>)
	id BXUac4-AAAE2F-Ri; 2016-06-03 11:50:16.562402-04:00
Received: from mail-qg0-f70.google.com ([209.85.192.70])
	by mxgoog1.mail.janestreet.com with esmtps (UNKNOWN:AES128-GCM-SHA256:128)
	(Exim 4.72)
	(envelope-from <yminsky@janestreet.com>)
	id 1b8rMW-0003Ct-Fo
	for caml-list@inria.fr; Fri, 03 Jun 2016 11:50:16 -0400
Received: by mail-qg0-f70.google.com with SMTP id p34so51654729qgp.3
        for <caml-list@inria.fr>; Fri, 03 Jun 2016 08:50:16 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=janestreet.com; s=google;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc;
        bh=FZsvebllC8rDm+pZSlropTslcoBnQoay7NtftmpvXUc=;
        b=ExH1Ts/z1bXdN5nU6NKzu5aXdg04Vgy+0cwYNdAjMDuoDIUiLh44oFRjg6oCqwohfT
         kH15b0BfO3rYs4QcMfsI8ymuLgd3fMTVgCacRL8EfJmDSY7AS+cmQX13uRNLd6z2sVKI
         O+WjbA30jq8zuLGukts5gEA5p9NhZBRgEibrY=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:cc;
        bh=FZsvebllC8rDm+pZSlropTslcoBnQoay7NtftmpvXUc=;
        b=AANoFJQMxO5ZhxwZ3cYMujip1O+ZOesmMHjnbDbWb+XVfZuHLzGFze/79WY0O8bo9m
         ods60UVc1/htxKzLkrpuMJbYK0Z1MBgMLswV/KoUYJT5fd7BxbcsdCQN4rHp3JUNoYgt
         q4K0RU/c+97mYgxChf3xxtnInk+rtclSSeukfIdfbw+nupTVWt+tMbZqz9ksg9NAkyxg
         DxfY/ddDRI5kFHfS+EwdwRHIO6E9P90p+SnXSEhirBAQoa4fTDbjtH4TBiQXPftmstxz
         3xSFv5YMVSlGW1zS8r4XqRpKfjTX9xJi33t3nIwas72KoIAFnkL4/ibSPLcyr5AJAVRu
         +O4A==
X-Gm-Message-State: ALyK8tI3we/enGCwa5N2RhhwxbO6BMlsWCUBkFvAieZuBkgwdOfZuI/rGgdcM7uTY3D6yNGrF7K20wuGEez1RrjB4WZozaoQH5YRya6Q60nI+jXY35sekIfOn8Hfr/IEVnjY4mXiobutQIdW40dOqHlqon8y1Q0sRjwc1zx4sJU=
X-Received: by 10.129.128.199 with SMTP id q190mr3028298ywf.319.1464969016212;
        Fri, 03 Jun 2016 08:50:16 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.129.128.199 with SMTP id q190mr3028287ywf.319.1464969016020;
 Fri, 03 Jun 2016 08:50:16 -0700 (PDT)
Received: by 10.37.217.75 with HTTP; Fri, 3 Jun 2016 08:50:15 -0700 (PDT)
In-Reply-To: <F7B18907EEED5244A3608C61DF32A4E410D5B39A@FHSDB2D11-2.csu.mcmaster.ca>
References: <F7B18907EEED5244A3608C61DF32A4E410D58989@FHSDB2D11-2.csu.mcmaster.ca>
	<AD235CA6-F7A5-4CD0-AC81-161921DC51E3@math.nagoya-u.ac.jp>
	<F7B18907EEED5244A3608C61DF32A4E410D5B39A@FHSDB2D11-2.csu.mcmaster.ca>
Date: Fri, 3 Jun 2016 11:50:15 -0400
Message-ID: <CACLX4jTXTeyaZz709+BLk_ZP-J_SZzyCr_h+_rRLVdVgkYvrUQ@mail.gmail.com>
From:Yaron Minsky <yminsky@janestreet.com>
To:"Carette, Jacques" <carette@mcmaster.ca>
Cc:Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>,
	OCaML List Mailing <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=94eb2c033810cec70b053461ade6
X-JS-Processed-by: mailcore
Subject: Re: [Caml-list] Option to fully expand types in error messages?

--94eb2c033810cec70b053461ade6
Content-Type: text/plain; charset=UTF-8

Diffs are often useful in visualizing such things.  not sure how helpful it
is in this case, but it does at least make it a bit clearer what's lined
up.  This was generated with our patdiff tool.

@@@@@@@@@@ -1,7 +1,7 @@@@@@@@@@
           val traverseexercise :-|           *'a* container
PseudoCode.abstract ->-|           (*'a* PseudoCode.abstract ->-|
      *'b* PseudoCode.abstract -> (*'c* * *'b*) PseudoCode.abstract)
->-|           *'b* PseudoCode.abstract* ->*-|*           'd
container* ->-|           (*'d* *container* *-*> *'c container*
PseudoCode.*abstract -> 'e) -> 'e*+|           loopdata container
PseudoCode.abstract ->+|           (loopdata PseudoCode.abstract ->+|
          loopdata PseudoCode.abstract ->+|            (loopdata *
loopdata) PseudoCode.abstract) ->+|           loopdata
PseudoCode.abstract ->+|           (< answer : 'a; state : 'b; .. >,
loopdata) PseudoCode.cmonad


On Fri, Jun 3, 2016 at 11:42 AM, Carette, Jacques <carette@mcmaster.ca>
wrote:

> So here is an actual example.  The error I get is
> ocamlc -short-paths -c reproduce.ml
> File "reproduce.ml", line 148, characters 21-25:
> Error: Signature mismatch:
>        ...
>        Values do not match:
>          val traverseexercise :
>            'a container PseudoCode.abstract ->
>            ('a PseudoCode.abstract ->
>             'b PseudoCode.abstract -> ('c * 'b) PseudoCode.abstract) ->
>            'b PseudoCode.abstract ->
>            'd container ->
>            ('d container -> 'c container PseudoCode.abstract -> 'e) -> 'e
>        is not included in
>          val traverseexercise :
>            loopdata container PseudoCode.abstract ->
>            (loopdata PseudoCode.abstract ->
>             loopdata PseudoCode.abstract ->
>             (loopdata * loopdata) PseudoCode.abstract) ->
>            loopdata PseudoCode.abstract ->
>            (< answer : 'a; state : 'b; .. >, loopdata) PseudoCode.cmonad
>        File "reproduce.ml", line 111, characters 6-206: Expected
> declaration
>        File "reproduce.ml", line 125, characters 8-24: Actual declaration
>
> I can't tell from the above error what the actual cause is.  The full code
> is attached.  [This code is quite reduced already.  It is kept at this size
> to show in more detail the kinds of errors we're seeing.]
>
> Any 'hint' from OCaml as to the precise nature of the non-match would sure
> be appreciated.
>
> Jacques
>
> ________________________________________
> From: Jacques Garrigue [garrigue@math.nagoya-u.ac.jp]
> Sent: June 2, 2016 19:59
> To: Carette, Jacques
> Cc: OCaML List Mailing
> Subject: Re: [Caml-list] Option to fully expand types in error messages?
>
> On 2016/06/03 04:18, "Carette, Jacques" wrote:
> >
> > In writing some code which uses a lot of monads with underlying types
> which use constraints, even simple errors can lead to extremely hard to
> read error messages.  The main reason is that the two types given in errors
> are partially expanded, to different levels.  This frequently means that
> the part where the type checker detects a mismatch is (extremely) opaque to
> human eyes.
> >
> > In that case, it would actually be preferable to fully expand the
> types.  Yes, that will produce wallpaper.  But at least the mismatch should
> be considerably easier to catch.
> >
> > Does this already exist, or should I submit a feature request?
> >
> > Jacques
>
> In the error message, types are expanded just enough to get down to the
> conflict.
> If the conflict is not visible at that point, this is probably a scoping
> error (and there should be an extra line stating that);
> otherwise this should be seen as a bug.
> As Yaron pointed, -short-paths can help by at least giving a normal form
> for paths (which may not be the expansion, but should be unique in the
> error context). But it will not expand a type if the expansion is not a
> type constructor, or if the parameters are different.
>
> Jacques
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>

--94eb2c033810cec70b053461ade6
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Diffs are often useful in visualizing such things. =C2=A0n=
ot sure how helpful it is in this case, but it does at least make it a bit =
clearer what&#39;s lined up.=C2=A0 This was generated with our patdiff tool=
.<div><br></div><div><pre style=3D"color:rgb(0,0,0);font-size:medium;font-f=
amily:consolas,monospace"><span style=3D"color:rgb(0,0,136)"><span style=3D=
"font-weight:bold">@@@@@@@@@@ </span></span><span style=3D"color:rgb(0,0,13=
6)"><span style=3D"font-weight:bold">-1,7 +1,7</span></span><span style=3D"=
color:rgb(0,0,136)"><span style=3D"font-weight:bold"> @@@@@@@@@@</span></sp=
an>
           val traverseexercise :
<span style=3D"color:rgb(136,0,0)"><span style=3D"font-weight:bold">-|</spa=
n></span>           <span style=3D"color:rgb(136,0,0)"><u><span style=3D"fo=
nt-weight:bold">&#39;a</span></u></span> container PseudoCode.abstract -&gt;
<span style=3D"color:rgb(136,0,0)"><span style=3D"font-weight:bold">-|</spa=
n></span>           (<span style=3D"color:rgb(136,0,0)"><u><span style=3D"f=
ont-weight:bold">&#39;a</span></u></span> PseudoCode.abstract -&gt;
<span style=3D"color:rgb(136,0,0)"><span style=3D"font-weight:bold">-|</spa=
n></span>            <span style=3D"color:rgb(136,0,0)"><u><span style=3D"f=
ont-weight:bold">&#39;b</span></u></span> PseudoCode.abstract -&gt; (<span =
style=3D"color:rgb(136,0,0)"><u><span style=3D"font-weight:bold">&#39;c</sp=
an></u></span> * <span style=3D"color:rgb(136,0,0)"><u><span style=3D"font-=
weight:bold">&#39;b</span></u></span>) PseudoCode.abstract) -&gt;
<span style=3D"color:rgb(136,0,0)"><span style=3D"font-weight:bold">-|</spa=
n></span>           <span style=3D"color:rgb(136,0,0)"><u><span style=3D"fo=
nt-weight:bold">&#39;b</span></u></span> PseudoCode.abstract<span style=3D"=
color:rgb(136,0,0)"><u><span style=3D"font-weight:bold"> -&gt;</span></u></=
span>
<span style=3D"color:rgb(136,0,0)"><span style=3D"font-weight:bold">-|</spa=
n></span><span style=3D"color:rgb(136,0,0)"><u><span style=3D"font-weight:b=
old">           &#39;d container</span></u></span> -&gt;
<span style=3D"color:rgb(136,0,0)"><span style=3D"font-weight:bold">-|</spa=
n></span>           (<span style=3D"color:rgb(136,0,0)"><u><span style=3D"f=
ont-weight:bold">&#39;d</span></u></span> <span style=3D"color:rgb(136,0,0)=
"><u><span style=3D"font-weight:bold">container</span></u></span> <span sty=
le=3D"color:rgb(136,0,0)"><u><span style=3D"font-weight:bold">-</span></u><=
/span>&gt; <span style=3D"color:rgb(136,0,0)"><u><span style=3D"font-weight=
:bold">&#39;c container</span></u></span> PseudoCode.<span style=3D"color:r=
gb(136,0,0)"><u><span style=3D"font-weight:bold">abstract -&gt; &#39;e) -&g=
t; &#39;e</span></u></span>
<span style=3D"color:rgb(0,136,0)"><span style=3D"font-weight:bold">+|</spa=
n></span>           <span style=3D"color:rgb(0,136,0)">loopdata</span> cont=
ainer PseudoCode.abstract -&gt;
<span style=3D"color:rgb(0,136,0)"><span style=3D"font-weight:bold">+|</spa=
n></span>           (<span style=3D"color:rgb(0,136,0)">loopdata</span> Pse=
udoCode.abstract -&gt;
<span style=3D"color:rgb(0,136,0)"><span style=3D"font-weight:bold">+|</spa=
n></span>            <span style=3D"color:rgb(0,136,0)">loopdata</span> Pse=
udoCode.abstract -&gt;
<span style=3D"color:rgb(0,136,0)"><span style=3D"font-weight:bold">+|</spa=
n></span>            (<span style=3D"color:rgb(0,136,0)">loopdata</span> * =
<span style=3D"color:rgb(0,136,0)">loopdata</span>) PseudoCode.abstract) -&=
gt;
<span style=3D"color:rgb(0,136,0)"><span style=3D"font-weight:bold">+|</spa=
n></span>           <span style=3D"color:rgb(0,136,0)">loopdata</span> Pseu=
doCode.abstract -&gt;
<span style=3D"color:rgb(0,136,0)"><span style=3D"font-weight:bold">+|</spa=
n></span>           (<span style=3D"color:rgb(0,136,0)">&lt;</span> <span s=
tyle=3D"color:rgb(0,136,0)">answer</span> <span style=3D"color:rgb(0,136,0)=
">: &#39;a; state : &#39;b; .. </span>&gt;<span style=3D"color:rgb(0,136,0)=
">,</span> <span style=3D"color:rgb(0,136,0)">loopdata)</span> PseudoCode.<=
span style=3D"color:rgb(0,136,0)">cmonad</span></pre></div></div><div class=
=3D"gmail_extra"><br><div class=3D"gmail_quote">On Fri, Jun 3, 2016 at 11:4=
2 AM, Carette, Jacques <span dir=3D"ltr">&lt;<a href=3D"mailto:carette@mcma=
ster.ca" target=3D"_blank">carette@mcmaster.ca</a>&gt;</span> wrote:<br><bl=
ockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #=
ccc solid;padding-left:1ex">So here is an actual example.=C2=A0 The error I=
 get is<br>
ocamlc -short-paths -c <a href=3D"http://reproduce.ml" rel=3D"noreferrer" t=
arget=3D"_blank">reproduce.ml</a><br>
File &quot;<a href=3D"http://reproduce.ml" rel=3D"noreferrer" target=3D"_bl=
ank">reproduce.ml</a>&quot;, line 148, characters 21-25:<br>
Error: Signature mismatch:<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0...<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0Values do not match:<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0val traverseexercise :<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&#39;a container PseudoCode.abstra=
ct -&gt;<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(&#39;a PseudoCode.abstract -&gt;<=
br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &#39;b PseudoCode.abstract -&gt; =
(&#39;c * &#39;b) PseudoCode.abstract) -&gt;<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&#39;b PseudoCode.abstract -&gt;<b=
r>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0&#39;d container -&gt;<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(&#39;d container -&gt; &#39;c con=
tainer PseudoCode.abstract -&gt; &#39;e) -&gt; &#39;e<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0is not included in<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0val traverseexercise :<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0loopdata container PseudoCode.abst=
ract -&gt;<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(loopdata PseudoCode.abstract -&gt=
;<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 loopdata PseudoCode.abstract -&gt=
;<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 (loopdata * loopdata) PseudoCode.=
abstract) -&gt;<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0loopdata PseudoCode.abstract -&gt;=
<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0(&lt; answer : &#39;a; state : &#3=
9;b; .. &gt;, loopdata) PseudoCode.cmonad<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0File &quot;<a href=3D"http://reproduce.ml" rel=
=3D"noreferrer" target=3D"_blank">reproduce.ml</a>&quot;, line 111, charact=
ers 6-206: Expected declaration<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0File &quot;<a href=3D"http://reproduce.ml" rel=
=3D"noreferrer" target=3D"_blank">reproduce.ml</a>&quot;, line 125, charact=
ers 8-24: Actual declaration<br>
<br>
I can&#39;t tell from the above error what the actual cause is.=C2=A0 The f=
ull code is attached.=C2=A0 [This code is quite reduced already.=C2=A0 It i=
s kept at this size to show in more detail the kinds of errors we&#39;re se=
eing.]<br>
<br>
Any &#39;hint&#39; from OCaml as to the precise nature of the non-match wou=
ld sure be appreciated.<br>
<br>
Jacques<br>
<br>
________________________________________<br>
From: Jacques Garrigue [<a href=3D"mailto:garrigue@math.nagoya-u.ac.jp">gar=
rigue@math.nagoya-u.ac.jp</a>]<br>
Sent: June 2, 2016 19:59<br>
To: Carette, Jacques<br>
Cc: OCaML List Mailing<br>
Subject: Re: [Caml-list] Option to fully expand types in error messages?<br>
<div class=3D"HOEnZb"><div class=3D"h5"><br>
On 2016/06/03 04:18, &quot;Carette, Jacques&quot; wrote:<br>
&gt;<br>
&gt; In writing some code which uses a lot of monads with underlying types =
which use constraints, even simple errors can lead to extremely hard to rea=
d error messages.=C2=A0 The main reason is that the two types given in erro=
rs are partially expanded, to different levels.=C2=A0 This frequently means=
 that the part where the type checker detects a mismatch is (extremely) opa=
que to human eyes.<br>
&gt;<br>
&gt; In that case, it would actually be preferable to fully expand the type=
s.=C2=A0 Yes, that will produce wallpaper.=C2=A0 But at least the mismatch =
should be considerably easier to catch.<br>
&gt;<br>
&gt; Does this already exist, or should I submit a feature request?<br>
&gt;<br>
&gt; Jacques<br>
<br>
In the error message, types are expanded just enough to get down to the con=
flict.<br>
If the conflict is not visible at that point, this is probably a scoping er=
ror (and there should be an extra line stating that);<br>
otherwise this should be seen as a bug.<br>
As Yaron pointed, -short-paths can help by at least giving a normal form fo=
r paths (which may not be the expansion, but should be unique in the error =
context). But it will not expand a type if the expansion is not a type cons=
tructor, or if the parameters are different.<br>
<br>
Jacques<br>
<br>
--<br>
Caml-list mailing list.=C2=A0 Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" rel=3D"noreferrer" t=
arget=3D"_blank">https://sympa.inria.fr/sympa/arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" rel=3D"noreferrer" target=3D"_blank">http://groups.yahoo.com/group/ocam=
l_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" rel=3D"noreferr=
er" target=3D"_blank">http://caml.inria.fr/bin/caml-bugs</a></div></div></b=
lockquote></div><br></div>

--94eb2c033810cec70b053461ade6--
