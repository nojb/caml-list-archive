Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA04078 for caml-red; Fri, 26 Jan 2001 22:06:13 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA06827 for <caml-list@pauillac.inria.fr>; Thu, 25 Jan 2001 13:58:13 +0100 (MET)
Received: from miss.wu-wien.ac.at (miss.wu-wien.ac.at [137.208.107.17])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f0PCwCL12165
	for <caml-list@inria.fr>; Thu, 25 Jan 2001 13:58:12 +0100 (MET)
Received: (from mottl@localhost)
	by miss.wu-wien.ac.at (8.9.0/8.9.0) id NAA26930;
	Thu, 25 Jan 2001 13:58:07 +0100 (MET)
Date: Thu, 25 Jan 2001 13:58:07 +0100
From: Markus Mottl <mottl@miss.wu-wien.ac.at>
To: Jan Skibinski <jans@numeric-quest.com>
Cc: OCAML <caml-list@inria.fr>
Subject: Re: Announcement: LACAML
Message-ID: <20010125135807.A18259@miss.wu-wien.ac.at>
References: <20010125011143.A11727@miss.wu-wien.ac.at> <Pine.LNX.4.21.0101250144290.9468-100000@info.numeric-quest.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <Pine.LNX.4.21.0101250144290.9468-100000@info.numeric-quest.com>; from jans@numeric-quest.com on Thu, Jan 25, 2001 at 02:21:47 -0500
Sender: weis@pauillac.inria.fr

On Thu, 25 Jan 2001, Jan Skibinski wrote:
> 	But the result was stunningly clear, consise and easy to
> 	understand even by the beginners. 
> 	I do not know whether similar approach would be feasible with
> 	Ocaml objects, but if yes then I would recommend it highly.

I think that default arguments in OCaml are a very fine means to hide the
complexity of function interfaces without sacrificing richness of features
and efficiency. Using objects would also be a solution, but having to call
methods of objects to parameterize them does not seem so natural to me.

Some time ago, when there was a flame war on this list whether labels are
really of any use, I tried several ways of parameterisation (objects,
option lists, default arguments), and I found that default arguments
were both the most elegant and the most efficient solution. Furthermore,
I am somewhat reluctant what concerns using objects, but that's another
story...

> >   * To make things easy for people used to the "real" implementation
> >     in FORTRAN but also for beginners who need detailed documentation,
> >     both function- and argument names have been kept compatible to the
> >     ones used in the BLAS- and LAPACK-documentation. 
> 
> 	I do not see a need for this. The names are probably as awkward
> 	as in NAG. Just consistently refer to the original names in your
> 	documentation and you should be fine.

Funny as it may seem, I find awkward names easier to remember. If names
become too similar, which may happen when there are so many functions
for similar problems, one can easily mix them up. Humans don't seem to
have problems memorizing thousands of foreign words so using "awkward"
names for functions is probably less confusing than requiring people
to lookup different identifiers in documentation. (Btw., there is some
logic behind the naming of BLAS- and LAPACK-functions).

- Markus Mottl

-- 
Markus Mottl, mottl@miss.wu-wien.ac.at, http://miss.wu-wien.ac.at/~mottl


