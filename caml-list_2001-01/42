Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA14826 for caml-red; Sat, 6 Jan 2001 22:05:29 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA30762 for <caml-list@pauillac.inria.fr>; Thu, 4 Jan 2001 23:46:10 +0100 (MET)
Received: from mta6.snfc21.pbi.net (mta6.snfc21.pbi.net [206.13.28.240])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f04Mk9L18230
	for <caml-list@inria.fr>; Thu, 4 Jan 2001 23:46:10 +0100 (MET)
Received: from checkerlap.d6.com ([64.163.212.86])
	by mta6.snfc21.pbi.net (Sun Internet Mail Server sims.3.5.2000.01.05.12.18.p9)
	with ESMTP id <0G6N00M4HTHSYT@mta6.snfc21.pbi.net> for caml-list@inria.fr;
	Thu,  4 Jan 2001 14:37:05 -0800 (PST)
Date: Thu, 04 Jan 2001 14:39:11 -0800
From: Chris Hecker <checker@d6.com>
Subject: Re: lablgtk for Win32
In-reply-to: <001801c07674$7efd7e80$1a1a883e@baby>
X-Sender: def6@shell16.ba.best.com
To: Jonathan Coupe <jonathan@meanwhile.freeserve.co.uk>, caml-list@inria.fr
Message-id: <4.3.2.7.2.20010104131022.00ba0d30@shell16.ba.best.com>
MIME-version: 1.0
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Content-type: text/plain; charset="us-ascii"
Sender: weis@pauillac.inria.fr


>Does anyone have any experience of using lablGTK on Windows? It seems like a
>very powerful system, but gtk itself doesn't seem to be very actively
>supported on Windows.

I'm trying to get it working now.  I was having a bunch of problems with labltk hanging my Win9x laptop after running apps from the command line (or emacs) a few times, so I decided to check out lablgtk rather than attempt to find the problem.  :)  I've got most of the examples working with the toplevel, but a few crash (not sure why yet, but I think it's problems with the way I built it...the win32 makefile isn't kept quite as up-to-date as the linux one so I've had to manually hack on it).  I also have the lablgl stuff working with it, sort of.

I don't have the compiled versions working yet.  The combination of msvc's lame compiler command line and storing the absolute paths and the cclib parms of libraries in .cm* files turns out to be a pain, and I'm running into command line length limitations on Win9x with the cl.exe that ocamlopt spawns (so there's nothing I can do about it, except maybe hack the ocamlopt sources to create a response file or something).

In general, while I'm all for cross platform gui libraries in theory, I'm coming to the conclusion that they're just not ready for production work.  Your app is huge because it's not taking advantage of any of the built in controls, it's slow to display because it's huge and because it draws all the controls itself, you can't just distribute a single exe because it needs a zillion dlls (or you end up staticly linking the 5 MB of gui dlls), and it's sloppy looking because things aren't tunable to be "just right".  Not sure what to do about it, though.

I don't need a lot of widgets and whatnot for my stuff, so I may just write a simple single-window thing that sends mouse and key events to the app, and be done with it.  Seems like a waste of time when there are these other libraries, though.  For what it's worth, Swing for Java has the same problems...he apps take 100 years to load and they don't act clean or tight once they are loaded.

Chris



