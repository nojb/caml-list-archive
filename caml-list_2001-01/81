Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA06220 for caml-red; Wed, 10 Jan 2001 09:23:37 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA13965 for <caml-list@pauillac.inria.fr>; Tue, 9 Jan 2001 17:42:29 +0100 (MET)
Received: from mrwall.kal.com (mrwall.kal.com [194.193.14.236])
	by nez-perce.inria.fr (8.11.1/8.10.0) with SMTP id f09GgSL23164
	for <caml-list@inria.fr>; Tue, 9 Jan 2001 17:42:28 +0100 (MET)
Received: from mrwall.kal.com [194.193.14.236]
	(HELO localhost)
	by mrwall.kal.com (AltaVista Mail V2.0J/2.0J BL25J listener)
	id 0000_0045_3a5b_3fdd_8e2e;
	Tue, 09 Jan 2001 16:44:13 +0000
Received: from somewhere by smtpxd
Message-ID: <3145774E67D8D111BE6E00C0DF418B663A7C6B@nt.kal.com>
From: Dave Berry <dave@kal.com>
To: Michael Hicks <mwh@dsl.cis.upenn.edu>, caml-list@inria.fr
Subject: RE: Module hierarchies
Date: Tue, 9 Jan 2001 16:46:11 -0000 
MIME-Version: 1.0
X-Mailer: Internet Mail Service (5.0.1460.8)
Content-Type: text/plain;
	charset="iso-8859-1"
Sender: weis@pauillac.inria.fr

That's a really good article about make.  Not just for recursive make, but
also for general advice on speeding up any makefile.  I use #include and .d
files, but I wasn't aware of the difference between := and =, and I didn't
realise that make did so much lazy string processing.  This is a case where
eager evaluation wins hands down!

I don't agree with the final section though.  It's trying to make the
"single makefile" solution fit all projects.  I don't think this holds for
the case where sub-projects are producing separate deliverables, such as
DLLs, ActiveX controls or JavaBeans.  In such cases you want to minimise (or
eliminate) dependencies from one component to the internals of another, and
separate makefiles look the best way to go.

Dave. 


-----Original Message-----
From: Michael Hicks [mailto:mwh@dsl.cis.upenn.edu]
Sent: Sunday, January 07, 2001 16:08
To: Charles Martin; caml-list@inria.fr
Subject: RE: Module hierarchies

see "Recursive Make considered Harmful"
(http://www.pcug.org.au/~millerp/rmch/recu-make-cons-harm.html) for more on
this, and good suggestions for structuring large projects.


