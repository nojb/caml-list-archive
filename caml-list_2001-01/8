Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA11629 for caml-red; Wed, 3 Jan 2001 11:46:00 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA02900 for <caml-list@pauillac.inria.fr>; Tue, 2 Jan 2001 18:41:48 +0100 (MET)
Received: from mx0.wanadoo.nl (mx0.wanadoo.nl [194.134.193.5])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f02Hfib27408
	for <caml-list@inria.fr>; Tue, 2 Jan 2001 18:41:48 +0100 (MET)
Received: from beertje.william.bogus (p1461.vcu.wanadoo.nl [194.134.170.186])
	by mx0.wanadoo.nl (8.9.3/8.9.3) with ESMTP id SAA13368
	for <caml-list@inria.fr>; Tue, 2 Jan 2001 18:41:42 +0100 (MET)
Received: (from williamc@localhost)
	by beertje.william.bogus (8.9.3/8.8.7) id SAA01428;
	Tue, 2 Jan 2001 18:39:55 +0100
X-Authentication-Warning: beertje.william.bogus: williamc set sender to williamc@paneris.org using -f
From: William Chesters <williamc@paneris.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Date: Tue,  2 Jan 2001 18:39:55 +0100 (CET)
To: caml-list@inria.fr
Subject: Re: status of some big "important" features?
In-Reply-To: <20001231040811.G2272@verdot.inria.fr>
References: <4.3.2.7.2.20001230112049.00ba2b60@shell16.ba.best.com>
	<4.3.2.7.2.20001226151428.00b2f680@shell16.ba.best.com>
	<20001228101047.A27850@verdot.inria.fr>
	<20001230215303.A2040@verdot.inria.fr>
	<4.3.2.7.2.20001230175604.00b9c2c0@shell16.ba.best.com>
	<20001231040811.G2272@verdot.inria.fr>
X-Mailer: VM 6.43 under 20.4 "Emerald" XEmacs  Lucid
Message-ID: <14930.4452.271488.519939@beertje.william.bogus>
Sender: weis@pauillac.inria.fr

Daniel de Rauglaudre writes:
 > Camlp4 allows to make syntax extensions. We could imagine something to
 > make typing extensions and code generating extensions. But I don't
 > know how to do that, and even if it is possible in a simple way.
 > 
 > Do other caml-list readers have an opinion about that?

The actual source code for the compiler as it is now is pretty decent, 
remarkably so given its maturity, and it's hard to imagine any useful
"semantic extension" mechanism being much simpler than just hacking the
relevant bits of camlc.

My 2p,
W


