Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA16934 for caml-red; Wed, 10 Jan 2001 09:27:08 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA17702 for <caml-list@pauillac.inria.fr>; Tue, 9 Jan 2001 18:14:30 +0100 (MET)
Received: from mrwall.kal.com (mrwall.kal.com [194.193.14.236])
	by nez-perce.inria.fr (8.11.1/8.10.0) with SMTP id f09HETL23726
	for <caml-list@inria.fr>; Tue, 9 Jan 2001 18:14:29 +0100 (MET)
Received: from mrwall.kal.com [194.193.14.236]
	(HELO localhost)
	by mrwall.kal.com (AltaVista Mail V2.0J/2.0J BL25J listener)
	id 0000_0045_3a5b_4773_8f03;
	Tue, 09 Jan 2001 17:16:35 +0000
Received: from somewhere by smtpxd
Message-ID: <3145774E67D8D111BE6E00C0DF418B663AA6EC@nt.kal.com>
From: Dave Berry <dave@kal.com>
To: John Max Skaller <skaller@ozemail.com.au>,
        Markus Mottl
  <mottl@miss.wu-wien.ac.at>
Cc: OCAML <caml-list@inria.fr>
Subject: RE: JIT-compilation for OCaml?
Date: Tue, 9 Jan 2001 17:18:34 -0000 
MIME-Version: 1.0
X-Mailer: Internet Mail Service (5.0.1460.8)
Content-Type: text/plain;
	charset="iso-8859-1"
Sender: weis@pauillac.inria.fr

This view seems extreme to me.  Certainly the Java type system has faults --
lack of generics being one, lack of enumerated types another, and various
other points as well.  But surely Unicode is a useful de facto standard?
Using C syntax was a strong point -- it made the language familiar to many
people.  IMO Java syntax does avoid many of the worst aspects of C syntax
(e.g. pointers).  It's surely portable: JVMs run on many systems.  It
certainly isn't slow to compile, and a previous poster suggested that with
modern compilers run-time performance is not too bad.  You can access C or
C++ functions from Java using JNI (although you seem to be in two minds as
to whether C compatibility is desirable or irrelevant).

And this omits it's plus points, especially its utility in net programming.
Its security model is not the last word, but it's better than C, C++ or
Eiffel!  And its use of byte code ensures portability of compiled apps.

Dave.

-----Original Message-----
From: John Max Skaller [mailto:skaller@ozemail.com.au]
Sent: Tuesday, January 09, 2001 6:50
To: Markus Mottl

	It has a serious faulty static
type system, idiotic object orientation, no generics, isn't
compatible with C, uses the worst features of C/C++ syntax,
is inefficient to compile, load, and run, doesn't interface
well, uses Unicode instead of ISO-10646, has a hodge podge library,
is less portable than C, C++ or Eiffel, stuffed up finalisation ...

	Surely, Java is the worst modern language around.
It is an inexcusably travesty, when so much good theory is
around, and C compatibility is not required.


