Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA18184 for caml-red; Sat, 6 Jan 2001 22:00:03 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA17065 for <caml-list@pauillac.inria.fr>; Thu, 4 Jan 2001 23:01:52 +0100 (MET)
Received: from mail.mimuw.edu.pl (pm136.warszawa.cvx.ppp.tpnet.pl [213.76.108.136])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f04M1kT23389
	for <caml-list@inria.fr>; Thu, 4 Jan 2001 23:01:46 +0100 (MET)
Received: (from news@localhost)
	by mail.mimuw.edu.pl (PLD/8.9.3) id VAA10241
	for caml-list@inria.fr; Thu, 4 Jan 2001 21:31:56 +0100
X-Authentication-Warning: qrnik.zagroda: news set sender to  qrczak@knm.org.pl (Marcin 'Qrczak' Kowalczyk) using -f
From: qrczak@knm.org.pl (Marcin 'Qrczak' Kowalczyk)
Subject: Re: New Year's resolution suggestions...
Date: 4 Jan 2001 20:31:52 GMT
Organization: Klub Nieszkodliwych =?iso-8859-2?Q?Manjak=F3w?=
Lines: 27
Message-ID: <slrn959ndm.7rl.qrczak@qrnik.zagroda>
References: <Pine.BSF.4.21.0101030748590.12612-100000@shell5.ba.best.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-2
Content-Transfer-Encoding: 8bit
X-Trace: qrnik.zagroda 978640312 10239 192.168.0.1 (4 Jan 2001 20:31:52 GMT)
X-Complaints-To: news@qrnik.zagroda
NNTP-Posting-Date: 4 Jan 2001 20:31:52 GMT
User-Agent: slrn/0.9.6.3 (Linux)
To: caml-list@inria.fr
Sender: weis@pauillac.inria.fr

Wed, 3 Jan 2001 08:27:02 -0800 (PST), Brian Rogoff <bpr@best.com> pisze:

> I wonder if the same holds for the average working Haskell or
> Clean program which makes heavy use of infixes. What do the Haskell
> programmers on the list think? Does the Haskell approach buy much
> more in practice?

I don't use custom infix operators much in Haskell. Parsing combinators
seem to be their most important use.

More common is forming of infix operators from identifiers, e.g.
    uri `relativeTo` baseUri
    attr0 `setBold` True `setReverse` True
    text1 `isPrefixOf` text2
    ptr `indexPtr` 1
    x `elem` list
which are also used for what OCaml uses alphanumeric operators:
    `div`, `mod`, `shift`

Their precedence can be changed too, but often it is left as default:
between function application and operator application, left associative.

-- 
 __("<  Marcin Kowalczyk * qrczak@knm.org.pl http://qrczak.ids.net.pl/
 \__/
  ^^                      SYGNATURA ZASTÊPCZA
QRCZAK


