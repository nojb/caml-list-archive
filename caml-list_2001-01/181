Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA29538 for caml-red; Tue, 23 Jan 2001 22:58:06 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA19098 for <caml-list@pauillac.inria.fr>; Tue, 23 Jan 2001 09:46:34 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f0N8kXD22543;
	Tue, 23 Jan 2001 09:46:33 +0100 (MET)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA10592; Tue, 23 Jan 2001 09:46:33 +0100 (MET)
Date: Tue, 23 Jan 2001 09:46:33 +0100
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: David Mentre <David.Mentre@inria.fr>
Cc: caml-list@inria.fr
Subject: Re: [off-topic] Survey or book on programming language structures
Message-ID: <20010123094633.E12784@pauillac.inria.fr>
References: <qtl66jfik3k.fsf@pochi.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <qtl66jfik3k.fsf@pochi.inria.fr>; from David.Mentre@inria.fr on Tue, Jan 16, 2001 at 04:37:35PM +0100
Sender: weis@pauillac.inria.fr

> I'm looking for a survey or a book describing the various ways to
> structure a program and its data (functionnal, object-oriented,
> imperative, abstract data types, ...). I would particularly be
> interested in a common framework where common issues (polymorphism,
> adaptability, abstractions, genericity, ...) are described and solved
> by each formalism.

I'm afraid such a framework doesn't exist yet, and this looks a lot
like an open research issue.  There are some research papers that
might be relevant to your question, such as:

        John C. Reynolds, "User-defined types and procedural data structures
        as complementary approaches to data abstraction", pp 13-23 of
        "Theoretical aspects of object-oriented programming", ed.
        C. Gunter and J. Mitchell, MIT Press, 1994.

(Compares two ways to achieve representation hiding: the OO way and
the abstract type way.)  But I cannot think of anything more
comprehensive.

Good luck,

- Xavier Leroy


