Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA25696 for caml-red; Mon, 15 Jan 2001 10:56:12 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA17105 for <caml-list@pauillac.inria.fr>; Mon, 15 Jan 2001 03:01:55 +0100 (MET)
Received: from elbereth.pgh.arsdigita.com ([63.124.128.66])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f0F21s525694;
	Mon, 15 Jan 2001 03:01:54 +0100 (MET)
Received: by elbereth.pgh.arsdigita.com (Postfix, from userid 1000)
	id 0987636B92; Sun, 14 Jan 2001 21:09:27 -0500 (EST)
To: Xavier Leroy <Xavier.Leroy@inria.fr>
Cc: Dave Berry <dave@kal.com>, Norman Ramsey <nr@eecs.harvard.edu>,
        caml-list@inria.fr
Subject: Re: questions about costs of nativeint vs int
References: <3145774E67D8D111BE6E00C0DF418B663AF87C@nt.kal.com>
	<20010114121329.A562@pauillac.inria.fr>
From: John Prevost <jmp@arsdigita.com>
In-Reply-To: <20010114121329.A562@pauillac.inria.fr>
User-Agent: Gnus/5.090001 (Oort Gnus v0.01) Emacs/21.0.91
Message-ID: <873del5zzi.fsf@elbereth.pgh.arsdigita.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Date: 14 Jan 2001 18:09:27 -0800
Lines: 19
Sender: weis@pauillac.inria.fr

>>>>> "xl" == Xavier Leroy <Xavier.Leroy@inria.fr> writes:

    xl> Ocaml performs some amount of local (intra-function) unboxing
    xl> on large integers (nativeint, int32, int64) as well as on
    xl> floats.  Version 3.00 missed some opportunities for local
    xl> unboxing of large integers, but the next release will improve
    xl> this, bringing integer unboxing to the level of float
    xl> unboxing.  However, large integers as well as floats remain
    xl> boxed across functions and inside data structures (with a few
    xl> special cases for arrays and big arrays).

You say that this doesn't happen across function-call boundaries.  Am
I right in assuming that function-call boundaries that are smoothed
away by inlining are an exception to this?

What about tail-recursion boundaries?

John.


