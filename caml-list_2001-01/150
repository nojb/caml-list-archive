Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA11854 for caml-red; Sat, 20 Jan 2001 16:09:08 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA25117 for <caml-list@pauillac.inria.fr>; Tue, 16 Jan 2001 16:37:36 +0100 (MET)
Received: from pochi.inria.fr (pochi.inria.fr [128.93.8.128])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f0GFbZf28698
	for <caml-list@inria.fr>; Tue, 16 Jan 2001 16:37:35 +0100 (MET)
Received: (from mentre@localhost)
	by pochi.inria.fr (8.11.1/8.10.0) id f0GFbZJ31724;
	Tue, 16 Jan 2001 16:37:35 +0100
X-Authentication-Warning: pochi.inria.fr: mentre set sender to David.Mentre@inria.fr using -f
To: caml-list@inria.fr
Subject: [off-topic] Survey or book on programming language structures
From: David Mentre <David.Mentre@inria.fr>
X-PhD-defense:  in 1 months and 11 days.
Date: 16 Jan 2001 16:37:35 +0100
Message-ID: <qtl66jfik3k.fsf@pochi.inria.fr>
Lines: 27
User-Agent: Gnus/5.0807 (Gnus v5.8.7) Emacs/20.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: weis@pauillac.inria.fr

Hello,

This is not strictly Caml related, but as the OCaml language offers
several ways to program (functionnal, imperative, OO, ...), I think
people on this list will have knowledged advices.

I'm looking for a survey or a book describing the various ways to
structure a program and its data (functionnal, object-oriented,
imperative, abstract data types, ...). I would particularly be
interested in a common framework where common issues (polymorphism,
adaptability, abstractions, genericity, ...) are described and solved
by each formalism.

To give an example, polymorphism can be expressed in an object-oriented
way (so called inheritance polymorphism) and ML-like way (so called
parametric polymorphism). Both ways with there strengths. Is there a
survey that tries to describe other formalisms in a common framework?

I've found books on certain kind of programming languages (for example
object oriented) but not for different kind of languages (except few
excerpts in Pierre and Xavier's book).

Thanks in advance,
david
-- 
 David.Mentre@inria.fr -- http://www.irisa.fr/prive/dmentre/
 Opinions expressed here are only mine.


