Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA05779 for caml-red; Wed, 3 Jan 2001 14:37:43 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA00977 for <caml-list@pauillac.inria.fr>; Wed, 3 Jan 2001 14:24:54 +0100 (MET)
Received: from mail.pi.se (mail.pi.se [195.7.64.8])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f03DOj124222
	for <caml-list@inria.fr>; Wed, 3 Jan 2001 14:24:52 +0100 (MET)
Received: from gateway ([195.7.85.166])
	by mail.pi.se (8.8.8/8.8.8) with SMTP id OAA15625;
	Wed, 3 Jan 2001 14:23:17 +0100 (MET)
From: "Mattias Waldau" <mattias.waldau@tacton.se>
To: "Markus Mottl" <mottl@miss.wu-wien.ac.at>,
        "Mattias Waldau" <mattias.waldau@abc.se>
Cc: "OCAML" <caml-list@inria.fr>
Subject: RE: JIT-compilation for OCaml?
Date: Wed, 3 Jan 2001 14:23:17 +0100
Message-ID: <HDEEKOMJILGEIHIMAPCDGEPFDMAA.mattias.waldau@tacton.se>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
In-Reply-To: <20010102203051.A18481@miss.wu-wien.ac.at>
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
Importance: Normal
Sender: weis@pauillac.inria.fr

If you just want portability, then why not generate Java-byte code instead
of Ocaml-bytecode. Then you can distribute you Ocaml-applications in Jars.
And you can benefit from the JIT of SUN etc, for example SUN's latest JIT
called HotSpot.

This has been done for many languages, for example JPython.

See http://grunge.cs.tu-berlin.de/~tolk/vmlanguages.html for more examples.

/mattias

> Certainly! I definitely don't want to replace the normal byte code
> interpreter with a purely JIT-one. My motivation was rather portability +
> speed rather than speed alone. For the latter "ocamlopt" is more than
> good enough, and for portability we have the byte code compiler. But
> if you want to have portability with reasonable speed for demanding
> applications...


