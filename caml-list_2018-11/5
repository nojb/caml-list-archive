Return-Path: <gabriel.scherer@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id CC74C824E4
	for <caml-list@sympa.inria.fr>; Sun,  4 Nov 2018 18:51:37 +0100 (CET)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=gabriel.scherer@gmail.com; spf=Pass smtp.mailfrom=gabriel.scherer@gmail.com; spf=None smtp.helo=postmaster@mail-qk1-f182.google.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  gabriel.scherer@gmail.com) identity=pra;
  client-ip=209.85.222.182;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  gabriel.scherer@gmail.com designates 209.85.222.182 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.222.182;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qk1-f182.google.com) identity=helo;
  client-ip=209.85.222.182;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="postmaster@mail-qk1-f182.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AG3ZXvhWo9yPrIPccObcUkeR4dUzV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbBSBt8tkgFKBZ4jH8fUM07OQ7/i/HzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba9wIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W7YhMx/jqJVrhyiqRJi3YDbfJqYO+Bicq7HZ94WWXZNU8RXWidcAo28?=
 =?us-ascii?q?dYwPD+8ZMOhZtYbyvEEOrRqgCgmoGejh1yNHhn/o0q0gzeshCxzN0QsvH90Uq3?=
 =?us-ascii?q?vUttT1O7kWUeyv16nH0TXDYO1M2Tjj8ojFaR8hofSWUrJxdcrd01UgFwTAjliJ?=
 =?us-ascii?q?r4HuIj2b1uMIs2eB7upgU/qihHQ7pAF0uDSvwd0siobRioIay1DE6SV5wJsuKt?=
 =?us-ascii?q?GiVEF7ZtukHINRtyGcNot2XtkuQ2RsuCs817YIuoa7cTAUxJg7wxPTcf+KfoiS?=
 =?us-ascii?q?7h79SuqdPy10iG9mdb6hgRu57FKuxffmVsau1VZHtipFncfItnAKzxHT79KISv?=
 =?us-ascii?q?p5/ku4wDaP1B3f5vhKIUwplqfXNYQtwrE3lpoUvkTDGjH5lF/qg6+Rc0Uo4umo?=
 =?us-ascii?q?6+L5bbX6vpKQKZN4hwXkPqktmsGzG/o0PhYQU2SB5Oix16Pv8VX8QLpQj/02lq?=
 =?us-ascii?q?fZsIrdJcQevqO5DBVa3Z056xa+ETim1M4UnWIbI1JFZh2HlZbmO0vVLfD3CPew?=
 =?us-ascii?q?mVWskDNxy//aOb3hB43BLmLfn7f5YbZ990lcxRIvwt9F4pJUDqgNIPbyWk/qqN?=
 =?us-ascii?q?zVFQQ5Mgyxw+b/EtpxzIIeWWSVAq+YKqzeq1GI5vh8a9WLMYQUvDf3MfE/z/Hr?=
 =?us-ascii?q?hH4931QaePqHx5wSPV+xFO5nLkHRWnHsj80MCy9esQM0Vu3njBuZWj5efXuod6?=
 =?us-ascii?q?057zA/TomhCNGQFciWnLWd0XLjTdVtbWdcBwXUSCa6R8C/Q/4JLRmqDIpkmz0A?=
 =?us-ascii?q?W6KmTtZ4hx6rvQ7+jbFgK7iNo3FKhdfYzNFwotbru1Qq7zUtVpaS1miMSyd/mW?=
 =?us-ascii?q?ZaH2ZrjpA6mlR0zxK46YY9g/FcEoYNtfZAUwN/LJ2FiuIjW4q0VQXGcdOEDl2h?=
 =?us-ascii?q?R4f+DA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0D6AgCKMN9bh7beVdFjHgEGBwaBZYIqQ?=
 =?us-ascii?q?X8VE4N2gR2CXpAygg2OKokXgWYNI4FUgnECAgKDPhoHAQQ0FgEDAQECAQEBAQE?=
 =?us-ascii?q?TAQEBCA0JCCkjDII2IoJjAQQBIwQZARsRDAEDAQsGAwILMAcCAiEBAREBBQEcG?=
 =?us-ascii?q?QmDGAGBaAEDDQgPjHGQBzyLDHsWBQEXgncFgTEBgnYKGScNWoEdGgIGEotkgVg?=
 =?us-ascii?q?/gyV+gSgZAYEURQEBgS4BEgFMgleCVwKGVYIQJB+VNiYuBwKCFASEVoMkgxw5g?=
 =?us-ascii?q?yoYgiGOPz+MSYEEhhuDEA8hgTmBBXEzGiNQMYI7CYISGAIbgzeEIHSFPz4wi26?=
 =?us-ascii?q?CPgEB?=
X-IPAS-Result: =?us-ascii?q?A0D6AgCKMN9bh7beVdFjHgEGBwaBZYIqQX8VE4N2gR2CXpA?=
 =?us-ascii?q?ygg2OKokXgWYNI4FUgnECAgKDPhoHAQQ0FgEDAQECAQEBAQETAQEBCA0JCCkjD?=
 =?us-ascii?q?II2IoJjAQQBIwQZARsRDAEDAQsGAwILMAcCAiEBAREBBQEcGQmDGAGBaAEDDQg?=
 =?us-ascii?q?PjHGQBzyLDHsWBQEXgncFgTEBgnYKGScNWoEdGgIGEotkgVg/gyV+gSgZAYEUR?=
 =?us-ascii?q?QEBgS4BEgFMgleCVwKGVYIQJB+VNiYuBwKCFASEVoMkgxw5gyoYgiGOPz+MSYE?=
 =?us-ascii?q?EhhuDEA8hgTmBBXEzGiNQMYI7CYISGAIbgzeEIHSFPz4wi26CPgEB?=
X-IronPort-AV: E=Sophos;i="5.54,465,1534802400"; 
   d="scan'208,217";a="284290820"
Received: from mail-qk1-f182.google.com ([209.85.222.182])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 04 Nov 2018 18:51:36 +0100
Received: by mail-qk1-f182.google.com with SMTP id e4so11124605qkh.6
        for <caml-list@inria.fr>; Sun, 04 Nov 2018 09:51:36 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=IoB5PjcdfKKW5hvbrgJdI1YKpxt7DAjtSbP2tY2cQYU=;
        b=BtgP+0aE7615jkze+KEh5AZxcvmEPOvdzg0c5nWh/UKXwQh5sWGLofHU3Cm+iVD/wT
         3x32Rt0wN3pHpnD2QyREnUIcZWGMwGeF2yW9zdOB1mug2v7ktYGZWYZlOAEuEa3VoB3i
         nxsTbYmPkWURqI5gtFy8aJ4XQtBX4aWmX/9CU4lpdkyBAJAxT8PSjMagBj1eRfuusvuS
         nqHoBWSd4imtqlPNi5uYaD5O+QvGY67D+R2RPUi0bgdW0DQu5PB4bU9jZCg3myo72fOZ
         ZGVJXzSoiqiZB8neXndqgNF3vSAo6qut4qr/uo7/V2lgTa0AukJiOeCTHYThd1AXwnB2
         RRAA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=IoB5PjcdfKKW5hvbrgJdI1YKpxt7DAjtSbP2tY2cQYU=;
        b=cmm0ubIkcfin7feKuDJyDRCIcgmViOL2JL9ciis7sgCeKoI3cnd4C99xH8+wKbq5dI
         QRFVwpxXImHeYLUPlwZm/5W4ep+7/e7e/cTOLn6qjLzA81lhN3b/4WxWZGvZUDgTueor
         ZLEsuvELUknilc2gmexmBf6FM5P+dXFQggILR1/mR55jbfOqjexuGoX1Mz6pE5cVM0Rv
         56bzV8VD9pIw5GsI9Bel3030MbXW+nC4KnmC47pqyhXYTYI5/EbuTIbjTyp8BwQzyEa3
         XGRATaN9bmOdB83vuYaboSNocHZ54YGsI4jl1IWBSRIsGf4r2UY6UoNk6XzNdmWWzz3P
         l3Fw==
X-Gm-Message-State: AGRZ1gJPOqpeqQFYl37GvB0rSNFDm42VO5z22FfQD169RZ/ENy6guDaG
	/2eS89NUwKblqEehmdHtSMXuD0N9muxylgQKI9mSPQ==
X-Google-Smtp-Source: AJdET5dQmoLCyHMY0O8LeWQo4z8Nq/LMm//Mv9jvzhsCCrHC/lHEnr2jjYirGRwfvy2jL5XRJS2j0isY325paWI7TUs=
X-Received: by 2002:a37:a053:: with SMTP id j80mr17881852qke.356.1541353894951;
 Sun, 04 Nov 2018 09:51:34 -0800 (PST)
MIME-Version: 1.0
References: <CABvMw3bYyJYOxJAYQBANMgVqMa+XYkW3pOQ-2MXA5ZF4czBV-w@mail.gmail.com>
In-Reply-To: <CABvMw3bYyJYOxJAYQBANMgVqMa+XYkW3pOQ-2MXA5ZF4czBV-w@mail.gmail.com>
From: Gabriel Scherer <gabriel.scherer@gmail.com>
Date: Sun, 4 Nov 2018 19:00:54 +0100
Message-ID: <CAPFanBEG8vnFVb7buZw0o3xd5GqeW9XrZPzyJ+h9n9+1RkKRBw@mail.gmail.com>
To: cilibrar@gmail.com
Cc: caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary="00000000000061c1d00579da6ba5"
Subject: Re: [Caml-list] Request for hint/help in camlp4/5-ppx conversion of
 famous logic quotation code by Harrison

--00000000000061c1d00579da6ba5
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

It looks like what this syntax extension is doing is to rewrite fragments
of the form

  <<foo>>

into

  default_parser "foo"

and

  <<|foo|>>

into

  secondary_parser "foo".

You should be able to translate examples from the book simply by doing this
rewriting by hand. If the string/formula contains backslashes, it can be
painful to properly escape them to follow the lexical conventions of OCaml
double-quoted string literals, but you can use the new string literal
{|foo|} to avoid escapes. For example, "a\\b" can be rewritten into {|a\b|}.


On Sun, Nov 4, 2018 at 6:42 PM Rudi Cilibrasi <cilibrar@gmail.com> wrote:

> Greetings ML friends,
>
> I have been gradually following the ML style languages a couple decades
> with HOL/SML etc and recently got interested in the OCaml variation.
>
> I've been able to make simple OCaml programs for my research but am
> hitting a steep learning curve trying to understand the differences
> between the preprocessors camlp4, camlp5, and ppx. The documentation
> is confusing to me at this point.
>
> I have been trying to compile the code from the famous and great book
> on logic called "Handbook of Practical Logic and Automated Reasoning"
> but it does not work for me under Ubuntu 18.04 using OCaml 4.05. I
> have opam 1.2.2.  I am getting an "Unbound module Quotation" error
> that Icannot solve and I suspect is related to old coding convention
> for preprocessing.  Would anybody on the list be able to help me (perhaps
> privately via email/github) to convert this small fragment to modern
> PPX syntax so that we can "unlock" the rest of the code describing first
> order logic?  I attach a transcript below trying to compile one of many
> copies of the same code on github, this one from
>
> https://github.com/logic-tools/sml-handbook/tree/master/code/OCaml
>
> Any help or info you can provide to get unblocked would be appreciated.
> Thank you in advance for your kind attention.
>
> Best regards,
>
> Rudi
>
> -------------------------------------------------------------------------=
---------------
> =E2=9E=9C  sml-handbook git:(master) =E2=9C=97 cd code/OCaml
> =E2=9E=9C  OCaml git:(master) =E2=9C=97 make
> echo '#use "init.ml";;' >.ocamlinit; (sleep 3s; rm -f .ocamlinit) & ocaml
>         OCaml version 4.05.0
>
> File "Quotexpander.ml", line 2, characters 5-72:
> Warning 3: deprecated: Pervasives.&
> Use (&&) instead.
> File "Quotexpander.ml", line 7, characters 0-13:
> Error: Unbound module Quotation
> File "Quotexpander.ml", line 998, characters 7-9:
> Unbound quotation: ""
> Camlp5 parsing version 7.06
>
> #
> =E2=9E=9C  OCaml git:(master) =E2=9C=97 cat Quotexpander.ml
> let quotexpander s =3D
>   if String.sub s 0 1 =3D "|" & String.sub s (String.length s - 1) 1 =3D =
"|"
> then
>     "secondary_parser \""^
>     (String.escaped (String.sub s 1 (String.length s - 2)))^"\""
>   else "default_parser \""^(String.escaped s)^"\"";;
>
> Quotation.add "" (Quotation.ExStr (fun x -> quotexpander));;
> =E2=9E=9C  OCaml git:(master) =E2=9C=97 ocaml --version
> The OCaml toplevel, version 4.05.0
> =E2=9E=9C  OCaml git:(master) =E2=9C=97 opam --version
> 1.2.2
> =E2=9E=9C  OCaml git:(master) =E2=9C=97
>
>
> --
> Happy to Code with Integrity : Software Engineering Code of Ethics and
> Professional Practice <http://www.acm.org/about/about/se-code>
>

--00000000000061c1d00579da6ba5
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>It looks like what this syntax extension is doing is =
to rewrite fragments of the form</div><div><br></div><div>=C2=A0 &lt;&lt;fo=
o&gt;&gt;</div><div><br></div><div>into</div><div><br></div><div>=C2=A0 def=
ault_parser &quot;foo&quot;</div><div><br></div><div>and</div><div><br></di=
v><div>=C2=A0 &lt;&lt;|foo|&gt;&gt;</div><div><br></div><div>into</div><div=
><br></div><div>=C2=A0 secondary_parser &quot;foo&quot;.</div><div><br></di=
v><div>You should be able to translate examples from the book simply by doi=
ng this rewriting by hand. If the string/formula contains backslashes, it c=
an be painful to properly escape them to follow the lexical conventions of =
OCaml double-quoted string literals, but you can use the new string literal=
 {|foo|} to avoid escapes. For example, &quot;a\\b&quot; can be rewritten i=
nto {|a\b|}.</div><div><br></div></div><br><div class=3D"gmail_quote"><div =
dir=3D"ltr">On Sun, Nov 4, 2018 at 6:42 PM Rudi Cilibrasi &lt;<a href=3D"ma=
ilto:cilibrar@gmail.com">cilibrar@gmail.com</a>&gt; wrote:<br></div><blockq=
uote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc =
solid;padding-left:1ex"><div dir=3D"ltr"><div dir=3D"ltr"><div>Greetings ML=
 friends,</div><div><br></div><div>I have been gradually following the ML s=
tyle languages a couple decades</div><div>with HOL/SML etc and recently got=
 interested in the OCaml variation.</div><div><br></div><div>I&#39;ve been =
able to make simple OCaml programs for my research but am</div><div>hitting=
 a steep learning curve trying to understand the differences</div><div>betw=
een the preprocessors camlp4, camlp5, and ppx. The documentation</div><div>=
is confusing to me at this point.</div><div><br></div><div>I have been tryi=
ng to compile the code from the famous and great book</div><div>on logic ca=
lled &quot;Handbook of Practical Logic and Automated Reasoning&quot;</div><=
div>but it does not work for me under Ubuntu 18.04 using OCaml 4.05. I</div=
><div>have opam 1.2.2.=C2=A0 I am getting an &quot;Unbound module Quotation=
&quot; error</div><div>that Icannot solve and I suspect is related to old c=
oding convention</div><div>for preprocessing.=C2=A0 Would anybody on the li=
st be able to help me (perhaps</div><div>privately via email/github) to con=
vert this small fragment to modern</div><div>PPX syntax so that we can &quo=
t;unlock&quot; the rest of the code describing first=C2=A0</div><div>order =
logic?=C2=A0 I attach a transcript below trying to compile one of many</div=
><div>copies of the same code on github, this one from</div><div><br></div>=
<div><a href=3D"https://github.com/logic-tools/sml-handbook/tree/master/cod=
e/OCaml" target=3D"_blank">https://github.com/logic-tools/sml-handbook/tree=
/master/code/OCaml</a></div><div><br></div><div>Any help or info you can pr=
ovide to get unblocked would be appreciated.</div><div>Thank you in advance=
 for your kind attention.</div><div><br></div><div>Best regards,</div><div>=
<br></div><div>Rudi</div><div>---------------------------------------------=
-------------------------------------------</div><div>=E2=9E=9C=C2=A0 sml-h=
andbook git:(master) =E2=9C=97 cd code/OCaml</div><div>=E2=9E=9C=C2=A0 OCam=
l git:(master) =E2=9C=97 make</div><div>echo &#39;#use &quot;<a href=3D"htt=
p://init.ml" target=3D"_blank">init.ml</a>&quot;;;&#39; &gt;.ocamlinit; (sl=
eep 3s; rm -f .ocamlinit) &amp; ocaml</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0=
 OCaml version 4.05.0</div><div><br></div><div>File &quot;Quotexpander.ml&q=
uot;, line 2, characters 5-72:</div><div>Warning 3: deprecated: Pervasives.=
&amp;</div><div>Use (&amp;&amp;) instead.</div><div>File &quot;Quotexpander=
.ml&quot;, line 7, characters 0-13:</div><div>Error: Unbound module Quotati=
on</div><div>File &quot;Quotexpander.ml&quot;, line 998, characters 7-9:</d=
iv><div>Unbound quotation: &quot;&quot;</div><div><span style=3D"white-spac=
e:pre-wrap">	</span>Camlp5 parsing version 7.06</div><div><br></div><div>#=
=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0<span style=3D"white-space:pre-wrap">	</s=
pan></div><div>=E2=9E=9C=C2=A0 OCaml git:(master) =E2=9C=97 cat Quotexpande=
r.ml=C2=A0</div><div>let quotexpander s =3D</div><div>=C2=A0 if String.sub =
s 0 1 =3D &quot;|&quot; &amp; String.sub s (String.length s - 1) 1 =3D &quo=
t;|&quot; then</div><div>=C2=A0 =C2=A0 &quot;secondary_parser \&quot;&quot;=
^</div><div>=C2=A0 =C2=A0 (String.escaped (String.sub s 1 (String.length s =
- 2)))^&quot;\&quot;&quot;</div><div>=C2=A0 else &quot;default_parser \&quo=
t;&quot;^(String.escaped s)^&quot;\&quot;&quot;;;</div><div><br></div><div>=
Quotation.add &quot;&quot; (Quotation.ExStr (fun x -&gt; quotexpander));;</=
div><div>=E2=9E=9C=C2=A0 OCaml git:(master) =E2=9C=97 ocaml --version</div>=
<div>The OCaml toplevel, version 4.05.0</div><div>=E2=9E=9C=C2=A0 OCaml git=
:(master) =E2=9C=97 opam --version</div><div>1.2.2</div><div>=E2=9E=9C=C2=
=A0 OCaml git:(master) =E2=9C=97=C2=A0</div><div><br></div><div><br></div>-=
- <br><div dir=3D"ltr" class=3D"m_3425015046327542362gmail_signature"><div =
dir=3D"ltr">Happy to Code with Integrity :=C2=A0<a href=3D"http://www.acm.o=
rg/about/about/se-code" target=3D"_blank">Software Engineering Code of Ethi=
cs and Professional Practice</a><br></div></div></div></div>
</blockquote></div>

--00000000000061c1d00579da6ba5--
