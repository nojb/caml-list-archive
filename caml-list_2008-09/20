Return-Path: <David.Teller@univ-orleans.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 5D3B9BBAF
	for <caml-list@yquem.inria.fr>; Tue,  2 Sep 2008 14:05:22 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvAEAEPJvEjCpx6vamdsb2JhbACKEog5DQUIBhKfT4Fp
X-IronPort-AV: E=Sophos;i="4.32,316,1217800800"; 
   d="scan'208";a="14485210"
Received: from smtpka.univ-orleans.fr (HELO ka.univ-orleans.fr) ([194.167.30.175])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 02 Sep 2008 14:05:22 +0200
Received: from smtps.univ-orleans.fr (localhost [127.0.0.1])
	by ka.univ-orleans.fr (Postfix) with ESMTP id D4B8F12AD4E
	for <caml-list@yquem.inria.fr>; Tue,  2 Sep 2008 14:05:21 +0200 (CEST)
Received: from [192.168.0.12] (ras75-4-82-235-58-110.fbx.proxad.net [82.235.58.110])
	by smtps.univ-orleans.fr (Postfix) with ESMTP id BF07C36E60
	for <caml-list@yquem.inria.fr>; Tue,  2 Sep 2008 14:05:23 +0200 (CEST)
Subject: Re: [Caml-list] Two questions on OCamlDoc
From: David Teller <David.Teller@univ-orleans.fr>
To: Caml <caml-list@yquem.inria.fr>
In-Reply-To: <1220356028.6406.33.camel@Blefuscu>
References: <1220356028.6406.33.camel@Blefuscu>
Content-Type: text/plain
Date: Tue, 02 Sep 2008 14:05:31 +0200
Message-Id: <1220357131.6406.38.camel@Blefuscu>
Mime-Version: 1.0
X-Mailer: Evolution 2.12.1 
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; ocamldoc:01 univ-orleans:01 ocamldoc:01 0200,:01 toying:01 inlining:01 lib:01 lib:01 rework:01 inlining:01 inlined:01 inlined:01 univ-orleans:01 lifo:01 liquidations:98 

And while I'm asking complex questions, can anyone think of a way of
asking OCamlDoc to resolve [string] to [String.t], ['a list] to ['a
List.t], ['a array] to ['a Array.t], etc?

Thanks,
 David

On Tue, 2008-09-02 at 13:47 +0200, David Teller wrote:
> Hi everyone,
> 
>  I'm currently toying with OCamlDoc, with very little success. I'm
> attempting to do two things:
> * getting OCamlDoc to understand that some modules (which I can modify)
> contain the documentation for some other modules (which I can't) replace
> some modules with others
> * inlining the documentation for modules in modules which import those.
> 
> I need a little help.
> 
> Let me detail this.
> 
> *** Documentation replacement ***
> My project uses modules M_lib1, M_lib2... which come from a variety of
> libraries. For each of these modules, I have created  a module
> M_lib1_with_doc, M_lib2_with_doc, which imports the corresponding
> library module but tailors the documentation to my project. However, for
> technical reasons of mechanical generation, assuming that M_lib1 refers
> to M_lib2, M_lib1_with_doc still refers to M_lib2 instead of referring
> to M_lib2_with_doc. Consequently, when generating the documentation of
> M_lib1_with_doc, ocamldoc doesn't link the generated pages to the
> documentation of M_lib2_with_doc but rather attempts to link it to
> M_lib2 (and fails, as expected).
> 
> Now, I could rework the mechanical generation of my modules and in time,
> I will. However, for the moment, I'm looking for a purely OCamlDoc-based
> solution. I'd like to be able to ask OCamlDoc to please consider every
> reference to M_lib2 as actually meaning a reference to M_lib2_with_doc.
> 
> I have tried to override method [text#html_of_Ref], without much
> success. Is there a simple solution for this?
> 
> *** Inlining modules ***
> I have a few modules whose sole role is to include one or two existing
> modules. By default, when meeting [include], OCamlDoc, ocamldoc only
> generates a link from the container module to the inlined module. In
> this case, I'd rather want the whole documentation of each of these
> modules to be inlined.
> 
> Is that possible?
> 
> Thanks in advance,
>  David
> 
-- 
David Teller-Rajchenbach
 Security of Distributed Systems
  http://www.univ-orleans.fr/lifo/Members/David.Teller
 Angry researcher: French Universities need reforms, but the LRU act brings liquidations. 

