Return-Path: <mikkelfj@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 5C898BB84
	for <caml-list@yquem.inria.fr>; Sat, 27 Sep 2008 01:57:11 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AiYBAKsT3UjRVcirlGdsb2JhbACSbj4BAQEBCQkMBxEDoS6HEwECg2A
X-IronPort-AV: E=Sophos;i="4.33,316,1220220000"; 
   d="scan'208";a="17402121"
Received: from wf-out-1314.google.com ([209.85.200.171])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 27 Sep 2008 01:57:10 +0200
Received: by wf-out-1314.google.com with SMTP id 24so1421321wfg.15
        for <caml-list@yquem.inria.fr>; Fri, 26 Sep 2008 16:57:08 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:sender
         :to:subject:mime-version:content-type:content-transfer-encoding
         :content-disposition:x-google-sender-auth;
        bh=JvDgwExz2YkXAJEPE/dWweVV2U+3L6KqXjXoSfZNq4A=;
        b=Z8HVx1OWf6hWnPj+J8sqTWtLRHxUlXESvVo7fmn70bXZox5xkm51D8f+ga3hIQDsGt
         YRdjZJjHnL01UK2y+4fnf/G3x9w0CiM5Oyn+I1cdUvMwojPxUj1/JyMx9i+vgH+r9pu6
         Pf62Ux2+6TWw7fqO5c6AOcvPgapWfqwmWD/zk=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:sender:to:subject:mime-version:content-type
         :content-transfer-encoding:content-disposition:x-google-sender-auth;
        b=J/7figzu7aHF6mYgySQYKJkSJfwuSYr4/VjVAdOOS16o8T+Skrj9qTGyY4hSS0VtsY
         /1dFBIkNfJd7FW6NSxbl+HOmG2j2u829JLjk9xxlvcoAbQRiLBzUDpYLoAwodGZPHH91
         9A8ccTQYpTHd4aVS3F8NviCkFqI1y7O0tTCdY=
Received: by 10.142.192.11 with SMTP id p11mr892141wff.111.1222473428339;
        Fri, 26 Sep 2008 16:57:08 -0700 (PDT)
Received: by 10.142.171.15 with HTTP; Fri, 26 Sep 2008 16:57:08 -0700 (PDT)
Message-ID: <caee5ad80809261657o14fe541ax8d129e0836e3cb8c@mail.gmail.com>
Date: Sat, 27 Sep 2008 01:57:08 +0200
From: "=?UTF-8?Q?Mikkel_Fahn=C3=B8e_J=C3=B8rgensen?=" <mikkel@dvide.com>
Sender: mikkelfj@gmail.com
To: caml-list@yquem.inria.fr
Subject: [ANN] ocamlbuild-ctools and symbiosis meta build engine
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
X-Google-Sender-Auth: 5ce60cbabe377463
X-Spam: no; 0.00; mikkel:01 rgensen:01 mikkel:01 variants:01 recursive:01 dependencies:01 dependencies:01 parser:01 complicates:01 lacks:01 git:98 git:98 scm:98 signatures:01 compile:01 

I just dusted off some code used for internal builds and made it public.


---- cppinclude ----

http://git.dvide.com/pub/cppinclude/

A very simple but fast dependency scanner needed by ocamlbuild-ctools.
Just compile the cppinclude.c file to cppi binary and put it in the
executable path.


---- ocamlbuild-ctools ----

http://git.dvide.com/pub/ocamlbuild-ctools
http://git.dvide.com/pub/ocamlbuild-ctools/tree/README


An ocamlbuild plugin that supports compiling C and C++ cross platform
using ocamlbuild only.

Variant builds - can build many different variants from the same
source tree. For example static libraries, test builds, debug,
optimization, linking or not linking with some other code, different
platform builds etc.

Automic recursive header file generation - needed for pulling source
into _build directory.
It used to be able to rebuild on header file change, but it has
regressed - it is possible that .stamp files do not hold signatures of
dependencies of dependencies or something.

It has not been tested on Windows, but build rules have been copied
from old build scripts so it should not be that hard to get going.


---- Symbiosis ----

http://git.dvide.com/pub/symbiosis
http://git.dvide.com/pub/symbiosis/tree/README

This is a meta build system.
It is implemented as an ocamlbuild plugin.

It checks out source code from repositories and starts builds of
individual components.

Because ocamlbuild doesn't support linking additional files, a lot of
different code is collected in a single file. This includes a JSON
parser for configuration files.

Symbiosis tries to avoid the problem of collecting all source
dependencies in one large tree, or alternatively installing
dependencies on the system. The former makes it difficult to change
dependent component versions. The latter makes it difficult to quickly
test different build version complicates developer setup.

Correctly configured, just call ocamlbuild with a target for the top
most component to build. All the source should be appear in the
working directory and build.
Initially it can be complex to set up, but once done, it is rather
easy to add new components with interesting dependencies.

The README explains it, but it really lacks examples since it was
extracted from my own build infrastructure.

Each component is viewed as a source tree with actions that can depend
on other actions in other components. Typically checkout and build
actions.
Actions are implemented through agents - for example to execute make,
ocamlbuild or check out source code.
Actions receive parameters and return result arguments. This makes it
possible to find tool locations, libraries etc.

Future:

Currently agents need to be added to the ocamlbuild plugin. This is
easy - for example adding a new scm agent. But it would be nice to add
agents as external scripts. Symbiosis is designed to support this, but
it has not been implemented.

I have looked into integration with continuos build systems, but it
appears to be easier to integrate this into symbiosis also, since it
already does some of the work such a build system requires - but is
definitely is also missing some parts.


Mikkel

