Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA19865; Wed, 24 Oct 2001 15:52:49 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA19529 for <caml-list@pauillac.inria.fr>; Wed, 24 Oct 2001 15:52:48 +0200 (MET DST)
Received: from mailg.telia.com (mailg.telia.com [194.22.194.26])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f9ODqlj27498
	for <caml-list@pauillac.inria.fr>; Wed, 24 Oct 2001 15:52:47 +0200 (MET DST)
Received: from d1o849.telia.com (d1o849.telia.com [213.66.248.241])
	by mailg.telia.com (8.11.6/8.11.6) with ESMTP id f9ODqlu22403;
	Wed, 24 Oct 2001 15:52:47 +0200 (CEST)
Received: from gateway (h40n2fls34o849.telia.com [217.208.235.40])
	by d1o849.telia.com (8.10.2/8.10.1) with SMTP id f9ODqka21583;
	Wed, 24 Oct 2001 15:52:46 +0200 (CEST)
From: "Mattias Waldau" <mattias.waldau@abc.se>
To: "Rolf Wester" <rolf.wester@ilt.fhg.de>, <caml-list@pauillac.inria.fr>
Subject: RE: [Caml-list] Whither the Caml Consortium?
Date: Wed, 24 Oct 2001 15:52:46 +0200
Message-ID: <AAEBJHFJOIPMMIILCEPBMEOCDDAA.mattias.waldau@abc.se>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
In-Reply-To: <3BD58FBC.24509.6BA76944@localhost>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

It is very difficult to get enough money to be able to support, maintain and
sell a programming language. Just see how difficult it is for ML companies
(2 failed attempts) and Lisp. (Lisp companies typically charge $5000 and
upwards per developer).

(SICStus Prolog actually lives on licenses and it works.)

That means that when Inria stops to support Ocaml, the language will most
likely die unless the open source community takes over. The code the Ocaml
is reasonable documentet which makes it possible to maintain it.

Regarding a killer-application in Ocaml to show that Ocaml is best, we have
to find a program that MANY people need. Just look how difficult it is to
create a good email program for Linux (Evolution is at last getting ready).
Such an application could be built using Ocaml instead. It would work, no
buffer overuns would reduce the number of security glitches. The only
problem is that almost all killer application has graphical user interfaces,
and I still haven't seen a good looking Ocaml-program (any pointers?).

Unison could be a killer application, but it lacks all user friendliness.
However, not so many people need syncronization.

/mattias

P.s. As a CTO for a programming company, I would say that $500-1000 per
developer and year would be a resonable licensing fee.

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

