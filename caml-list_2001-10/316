Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA31882; Mon, 29 Oct 2001 19:26:42 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA32103 for <caml-list@pauillac.inria.fr>; Mon, 29 Oct 2001 19:26:41 +0100 (MET)
Received: from alan-schm1p.inria.fr (adsl163-83.mangoosta.fr [217.11.163.83])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f9TIQen23601
	for <caml-list@inria.fr>; Mon, 29 Oct 2001 19:26:40 +0100 (MET)
Received: by alan-schm1p.inria.fr (Postfix, from userid 11207)
	id 40ADA23646; Mon, 29 Oct 2001 19:20:44 +0100 (CET)
Date: Mon, 29 Oct 2001 19:20:44 +0100
From: Alan Schmitt <alan.schmitt@inria.fr>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Playing Soccer with OCaml
Message-ID: <20011029192043.B1936@alan-schm1p>
Mail-Followup-To: caml-list@inria.fr
References: <20011029183900.A717@alpha2.tabu.stw-bonn.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable
User-Agent: Mutt/1.2.5i
In-Reply-To: <20011029183900.A717@alpha2.tabu.stw-bonn.de>; from kok@wtal.de on lun, oct 29, 2001 at 06:39:00 +0100
X-Editor: Vim http://vim.sf.net/
X-Info: http://pauillac.inria.fr/~aschmitt/
X-Operating-System: Linux/2.4.7 (i686)
X-Uptime: 6:57pm  up  3:59,  1 user,  load average: 0.22, 0.08, 0.03
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

* Kai Kaminski (kok@wtal.de) wrote:
> Now there are several questions for me:
> - I'm new to OCaml and functional programming. I have some experience
>   with C/C++, Pascal and Asm. But I don't think that this will help
>   me. Do you think it is possible for a newbie to implement such
>   algorithms within five or six month in reasonably quality?
>=20

Yes, definitely. And I think that any experience in programming will
help you.

> - We use CORBA for communication (omniORB). How difficult is it to
>   communicate with C++ modules via CORBA. As I understand it, CamlIDL
>   could help me here, but I'm not sure.
>

I'm not sure about using camlidl for that, I'll let Xavier answer it.
There was a project for writing bindings for Orbit in caml (the page is
at http://www.sf.net/projects/camlorb ), but we haven't done much on it
for quite a while ... (I was supposed to work on it, but other projects
beckoned ... you know how it goes ;-) If there is some goal to push us
forward with this project, it would be a good thing.

> - Is OCaml fast enough? We need to do all the work for 4-6 robots on
>   one linux machine (Intel at ~400MHz).
>=20

Yes definitely, as caml can be compiled to native code on many
architectures.

> - Is OCaml a good choice to implement these algorithms? A better
>   choice than C++ at least? (Ok, I know: OCaml is *always* the better
>   choice ;-)
>=20

You answered this one yourself ;-) More seriously, OCaml is great for
fast development (type inference helps a lot) and for complex data
structures.

> - What about SunOS? This port is not a requirement, but it would be
>   nice.
>=20

=46rom the Readme:
The other compiler generates high-performance native code for a number
of processors. Compilation takes longer and generates bigger code, but
the generated programs deliver excellent performance, while retaining
the moderate memory requirements of the bytecode compiler. The
native-code compiler currently runs on the following platforms:

    Intel Pentium processors: PCs under Linux, FreeBSD, NetBSD, OpenBSD,
      Windows, NextStep, Solaris 2, BeOS.
    Alpha processors: Digital/Compaq Alpha machines under
      Digital Unix/Compaq Tru64, Linux, NetBSD and OpenBSD.
    Sparc processors: Sun Sparc under SunOS 4.1, Solaris 2, NetBSD, Linux
    Mips processors: SGI workstations and mainframes under IRIX 6
    HP PA-RISC processors: HP 9000/700 under HPUX 10
    PowerPC processors: IBM RS6000 and PowerPC workstations under AIX 4.3,
                        PowerMacintosh under MkLinux, LinuxPPC, MacOS X
    Strong ARM processors: Corel Netwinder under Linux
    Intel IA64 processors: prototypes under Linux

Alan

--
The hacker: someone who figured things out and made something cool happen.
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

