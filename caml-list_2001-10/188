Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id HAA04553; Wed, 17 Oct 2001 07:32:47 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id HAA04659 for caml-list@pauillac.inria.fr; Wed, 17 Oct 2001 07:32:46 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA01128 for <caml-list@pauillac.inria.fr>; Tue, 16 Oct 2001 23:33:31 +0200 (MET DST)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f9GLXUj28127
	for <caml-list@inria.fr>; Tue, 16 Oct 2001 23:33:31 +0200 (MET DST)
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.9.3/8.9.3/Debian 8.9.3-21) id XAA24375;
	Tue, 16 Oct 2001 23:33:17 +0200
Date: Tue, 16 Oct 2001 23:33:17 +0200
From: Markus Mottl <markus@oefai.at>
To: Rolf Wester <rolf.wester@ilt.fhg.de>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml speed
Message-ID: <20011016233317.B23592@fichte.ai.univie.ac.at>
References: <3BCB2D45.29070.4316C73C@localhost>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <3BCB2D45.29070.4316C73C@localhost>; from rolf.wester@ilt.fhg.de on Mon, Oct 15, 2001 at 18:39:01 +0200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Rolf Wester schrieb am Montag, den 15. Oktober 2001:
> ocaml. The sources I used are attached below.  Unfortunately I could
> not confirm the given cpu times which are 0.11 sec for gcc and 0.13
> for ocamlopt. My results on a Compaq Alpha True64 are 0.05 for cxx,
> 0.1 for g++ and 0.29 for ocamlopt. Does anybody have an idea what
> could be the reason for this inconsistency? Did I do anything wrong?

The Alpha/True64 is a completely different beast than an Intel/Linux
platform. The same holds for a comparison of cxx and g++. This may well
explain quite a lot.

> ocamlopt -o aa_ml unix.cmxa aa.ml

Try this instead:

  ocamlopt -unsafe -noassert -o aa_ml unix.cmxa aa.ml

This may squeeze out some cycles...

Regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

