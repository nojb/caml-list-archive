Return-Path: <emmanuel.dieul@free.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 96422BC57
	for <caml-list@yquem.inria.fr>; Fri, 30 Apr 2010 15:23:40 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Al8DAFx22kvUGyoCkGdsb2JhbACRAIwfFQEBAQEJCQwHEQMfviWFEgQ
X-IronPort-AV: E=Sophos;i="4.52,302,1270418400"; 
   d="scan'208";a="50077225"
Received: from smtp2-g21.free.fr ([212.27.42.2])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 30 Apr 2010 15:23:39 +0200
Received: from smtp2-g21.free.fr (localhost [127.0.0.1])
	by smtp2-g21.free.fr (Postfix) with ESMTP id 06E6D4B0194
	for <caml-list@inria.fr>; Fri, 30 Apr 2010 15:23:34 +0200 (CEST)
Received: from [127.0.0.1] (put92-1-81-57-61-170.fbx.proxad.net [81.57.61.170])
	by smtp2-g21.free.fr (Postfix) with ESMTP id 1F0E54B0121
	for <caml-list@inria.fr>; Fri, 30 Apr 2010 15:23:32 +0200 (CEST)
Message-ID: <4BDAD9C7.5060501@free.fr>
Date: Fri, 30 Apr 2010 15:23:19 +0200
From: Emmanuel Dieul <emmanuel.dieul@free.fr>
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 6.1; fr; rv:1.9.1.9) Gecko/20100317 Thunderbird/3.0.4
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Some obsolete constructions ?
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Antivirus: avast! (VPS 100430-0, 30/04/2010), Outbound message
X-Antivirus-Status: Clean
X-Spam: no; 0.00; ocaml:01 syntax:01 compiler:01 syntax:01 ocaml:01 printast:01 pcf:01 pexp:01 letmodule:01 pexp:01 ppat:01 abstract:01 abstract:01 parsing:01 inherit:01 

Hello,

I'm building an outline of an ocaml source file (interface or 
implementation) with
the abstract syntax tree generated by the -dparsetree compiler option.

This abstract syntax tree is printed via the 
/ocaml/release/3.11.2/parsing/printast.ml
module. During my cover tests, I didn't managed to obtain these AST 
elements :
    - Pcf_let : a let construction as a class field ?
    - Pexp_letmodule : ?
    - Pexp_override : an override expression ?
    - Ppat_type : a type pattern matching ?
    - Rinherit : an inherit row field ?

Are these constructions obsolete ? If not, which code could generate 
these AST elements ?

Thanks,

Emmanuel

