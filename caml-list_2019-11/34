Return-Path: <basile@starynkevitch.net>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id ED1A47F332
	for <caml-list@sympa.inria.fr>; Thu, 28 Nov 2019 10:30:15 +0100 (CET)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=basile@starynkevitch.net; spf=Pass smtp.mailfrom=basile@starynkevitch.net; spf=None smtp.helo=postmaster@relay11.mail.gandi.net
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  basile@starynkevitch.net) identity=pra;
  client-ip=217.70.178.231;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="basile@starynkevitch.net";
  x-sender="basile@starynkevitch.net";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  basile@starynkevitch.net designates 217.70.178.231 as
  permitted sender) identity=mailfrom;
  client-ip=217.70.178.231;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="basile@starynkevitch.net";
  x-sender="basile@starynkevitch.net";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@relay11.mail.gandi.net) identity=helo;
  client-ip=217.70.178.231;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="basile@starynkevitch.net";
  x-sender="postmaster@relay11.mail.gandi.net";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AxSaCvxQUj/uk00iWpVhHXFtygdpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6zYB2N2/xhgRfzUJnB7Loc0qyK6vumADJfqs7Y+Fk5M7V0Hycfjs?=
 =?us-ascii?q?sXmwFySOWkMmbcaMDQUiohAc5ZX0Vk9XzoeWJcGcL5ekGA6ibqtW1aFRrwLxd6?=
 =?us-ascii?q?KfroEYDOkcu3y/qy+5rOaAlUmTaxe7x/IAi4oAnLq8UbgIlvJqktxhfUv3BFZ/?=
 =?us-ascii?q?lYyWR0KFyJgh3y/N2w/Jlt8yRRv/Iu6ctNWrjkcqo7ULJVEi0oP3g668P3uxbD?=
 =?us-ascii?q?SxCP5mYHXWUNjhVIGQnF4wrkUZr3ryD3q/By2CiePc3xULA0RTGv5LplRRP0lC?=
 =?us-ascii?q?sKMSMy/XrJgcJskq1UvBOhpwR+w4HKZoGVKOF+db7Zcd8DWGZNQtpdWylHD4ih?=
 =?us-ascii?q?bYUAEvABMP5EoIb/p1UAowWwCgavCu3yxDBFnWX50bEg3uk7DQ3Lxg4tEtQTu3?=
 =?us-ascii?q?rUttX1M6ISXPiuw6bS1jXDbvdW1inm5YjTbhAuu+uMXLJ2ccrS10YvCQLFjkmM?=
 =?us-ascii?q?pozlJT+V0PoCs3SG5OdnTu2gkXUnqwB1ojex3coskZXJiZgPylHE8yV5w5g6Jc?=
 =?us-ascii?q?O5SE5nfdGkEIFctyeEOItqW84vRXxjtig9yr0Do5G7fS4KxYw8xx7DcfOHaYiJ?=
 =?us-ascii?q?4hTgVOmPPzd4hW5ld66/hxqo90iv1PH8W8+p21hJtipIisfAum0P2hDJ6MWLVu?=
 =?us-ascii?q?Fx8lqj1DuMzQzf9O9JLV0ymKHGMZAu2KQwmYAWsUnbHi/5hkH2jKiOe0U+5Oeo?=
 =?us-ascii?q?7/7oY7X7qpOBLYN0jxvxMqUqmsClDuQ3KA4OUHWa+eim0r3s41H5TK1Ljv0wjK?=
 =?us-ascii?q?bZrIjXKdoGqqO7GQNY0Jov5wyiAzqk09kUh2cLIVxYdB6fiojmIVDOIPT2Dfel?=
 =?us-ascii?q?hFSslS9myOvcMb36A5XNKmbMnaz6fbZh8UFc0goyzdZc551KFLEBIe7zVVPxtN?=
 =?us-ascii?q?DCCB82LRC0z/79CNphzoMeRX6PAqiBPazOq1CI4+YvL/CIZI8Uozb9N+Mo5+Xu?=
 =?us-ascii?q?jH88gV8SZ7Ol3ZoRaHCiH/RpOV+VYXT2gt0ZC2cFohI+TPD2iF2FSTNTaW6yX6?=
 =?us-ascii?q?Ug5jEnCYKpE53DS5usgbyA2Se0BYdWaXpcBlCNF3fobYSEVO0WZCKcOM8y2gAD?=
 =?us-ascii?q?AJa7Qomu0hC1gzf916ZmI/CcriMCvJTo09luofXUiQ0z+CZcDsKH0mjLQXsizU?=
 =?us-ascii?q?0SQDpj1qlkoEhw4kyf2LJphf9VC91P7PMPVAomfcrWxvd7D93aQR7IZMaPS1u4?=
 =?us-ascii?q?Q8mtAXc3Q85nkIxGWFp0B9j31kOL5CGtGbJA0uXTXMVpoJKZ5GD4IoNG81iD1K?=
 =?us-ascii?q?QliAN6ENFCMWS33/c58gHSA8jGmkOVluCseLhOhHecplfG9nKHuQRjaCA1VKzE?=
 =?us-ascii?q?WX4FYU6P/Ibi+krYXrmtBKomLgBBj8iPNvkTM4G7vRB9XP7mfe/mTSepgW7pVE?=
 =?us-ascii?q?ST2rqWfYzpdnscwC7dTk4Jj1JL8A=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DPAQAdk99dh+eyRtllHgELHIUACiwpM?=
 =?us-ascii?q?iqEK5BuhSGKIIwRCQEDAQwfEAEBhEACTAEIgS4cBwEENBMCEAEBBAEBAQIBAgM?=
 =?us-ascii?q?EARMBAQEIDQkIKYU+DIIpEikBgm4DAyMERA4bBD4CWQYTgyIBgnuyNn8ziSIjg?=
 =?us-ascii?q?Q+BNoUbhDaCRRo+AYFBgTsJgmA+glmFAIJeBI0zkXWOInAHgjGGOWSOYoI0c4Z?=
 =?us-ascii?q?4j3WVfoEGhQ2JUEWCX4FpgXp7CjuCbAlHERSLBogyhXtAAzCRRwEB?=
X-IPAS-Result: =?us-ascii?q?A0DPAQAdk99dh+eyRtllHgELHIUACiwpMiqEK5BuhSGKIIw?=
 =?us-ascii?q?RCQEDAQwfEAEBhEACTAEIgS4cBwEENBMCEAEBBAEBAQIBAgMEARMBAQEIDQkIK?=
 =?us-ascii?q?YU+DIIpEikBgm4DAyMERA4bBD4CWQYTgyIBgnuyNn8ziSIjgQ+BNoUbhDaCRRo?=
 =?us-ascii?q?+AYFBgTsJgmA+glmFAIJeBI0zkXWOInAHgjGGOWSOYoI0c4Z4j3WVfoEGhQ2JU?=
 =?us-ascii?q?EWCX4FpgXp7CjuCbAlHERSLBogyhXtAAzCRRwEB?=
X-IronPort-AV: E=Sophos;i="5.69,253,1571695200"; 
   d="scan'208,217";a="328328963"
X-MGA-submission: =?us-ascii?q?MDHrpPc/yo52IcVDmDPAsy5fiJCW2vFVFXiMKm?=
 =?us-ascii?q?Zaf1skuL7S2S7dxaMDBm/Hv3Npx4/Yiof6xAKeecduXarXt8n+m0RXjN?=
 =?us-ascii?q?S66FO4IJ2qrl79dWaQVNI8wFQOl4tuAZ254o47iXTyrF8QI0SwqhriYD?=
 =?us-ascii?q?USUYHT3iTFpVXb2at2bbDywA=3D=3D?=
Received: from relay11.mail.gandi.net ([217.70.178.231])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Nov 2019 10:30:14 +0100
Received: from sogo10.sd4.0x35.net (sogo10.sd4.0x35.net [10.200.201.60])
	(Authenticated sender: basile@starynkevitch.net)
	by relay11.mail.gandi.net (Postfix) with ESMTPA id 9F20F10001B;
	Thu, 28 Nov 2019 09:30:10 +0000 (UTC)
Content-Type: multipart/alternative; boundary="----=_=-_OpenGroupware_org_NGMime-8117-1574933410.309710-52------"
In-Reply-To: <5cef-5ddf9300-35-4e2fd700@138599352>
From: =?utf-8?q?basile=40starynkevitch=2Enet?= <basile@starynkevitch.net>
X-Forward: 127.0.0.1
Date: Thu, 28 Nov 2019 10:30:10 +0100
Cc: caml-list@inria.fr
To: =?utf-8?q?Fran=C3=A7ois_Pottier?= <francois.pottier@inria.fr>
MIME-Version: 1.0
Message-ID: <1fb5-5ddf9380-79-5558b880@243503475>
User-Agent: SOGoMail 4.0.8
Subject: Re: [Caml-list] zarith: how to  pick a random integer?

------=_=-_OpenGroupware_org_NGMime-8117-1574933410.309710-52------
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
Content-Length: 1267


On Thursday, November 28, 2019 10:27 CET, basile@starynkevitch.net <basile@=
starynkevitch.net> wrote:


Sorry for the important typo. Corrected below

On Wednesday, November 27, 2019 22:31 CET, Fran=C3=A7ois Pottier <francois.=
pottier@inria.fr> wrote:
=C2=A0
Hello,

I am using zarith and would like to pick a random integer
comprised between 0 and some bound. I would like a function
Z.random of type Z.t -> Z.t, but this function seems to be
missing, and I am not sure how to program it in an efficient
and correct way. Any suggestions would be welcome. Thanks!

=C2=A0
I tend to believe that the following idea might be good, but please check w=
ith real probability experts. I definitely am not one (but one of my best c=
olleagues is one).

Let B be the bound.

You take a random number modulus 2*B. Let R be that number

You modelize the [0;B[ interval as a ring of numbers. For example if B is 5=
 : 0 -> 1 -> 2 -> 3 -> 4 -> 0 -> 1 -> .... ad infinitium


You memoize the previously given random number N

On that ring, you go R steps forward and obtain P. That is your new random =
number and on the next iteration the N would be that P

But check with an expert, I am not one

--

Basile Starynkevitch http://starynkevitch.net/Basile
=C2=A0


=C2=A0

------=_=-_OpenGroupware_org_NGMime-8117-1574933410.309710-52------
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: quoted-printable
Content-Length: 1665

<html><br />On Thursday, November 28, 2019 10:27 CET, basile@starynkevitch.=
net &lt;basile@starynkevitch.net&gt; wrote:<br /><br /><br />Sorry for the =
important typo. Corrected below<br /><br />On Wednesday, November 27, 2019 =
22:31 CET, Fran=C3=A7ois Pottier &lt;francois.pottier@inria.fr&gt; wrote:<b=
r />&nbsp;<blockquote type=3D"cite" cite=3D"a025b23b-a84d-164f-7fb9-06a5ee0=
83753@inria.fr"><br />Hello,<br /><br />I am using zarith and would like to=
 pick a random integer<br />comprised between 0 and some bound. I would lik=
e a function<br />Z.random of type Z.t -&gt; Z.t, but this function seems t=
o be<br />missing, and I am not sure how to program it in an efficient<br /=
>and correct way. Any suggestions would be welcome. Thanks!<br /><br />&nbs=
p;</blockquote><br />I tend to believe that the following idea might be goo=
d, but please check with real probability experts. I definitely am not one =
(but one of my best colleagues is one).<br /><br />Let B be the bound.<br /=
><br />You take a random number modulus 2*B. Let R be that number<br /><br =
/>You modelize the [0;B[ interval as a ring of numbers. For example if B is=
 5 : 0 -&gt; 1 -&gt; 2 -&gt; 3 -&gt; 4 -&gt; 0 -&gt; 1 -&gt; .... ad infini=
tium<br /><br /><br />You memoize the previously given random number N<br /=
><br />On that ring, you go R steps forward and obtain P. That is your new =
random number and on the next iteration the <strong>N</strong> would be tha=
t P<br /><br />But check with an expert, I am not one<br /><br />--<br /><b=
r />Basile Starynkevitch http://starynkevitch.net/Basile<br />&nbsp;<br /><=
br /><br />&nbsp;</html>

------=_=-_OpenGroupware_org_NGMime-8117-1574933410.309710-52--------


