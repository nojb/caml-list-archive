Return-Path: <ramu.tutor@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id A321C7EFCD
	for <caml-list@sympa.inria.fr>; Wed, 29 Oct 2014 14:49:10 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  ramu.tutor@gmail.com) identity=pra; client-ip=209.85.213.196;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ramu.tutor@gmail.com";
  x-sender="ramu.tutor@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  ramu.tutor@gmail.com designates 209.85.213.196 as permitted
  sender) identity=mailfrom; client-ip=209.85.213.196;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ramu.tutor@gmail.com";
  x-sender="ramu.tutor@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ig0-f196.google.com) identity=helo;
  client-ip=209.85.213.196;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ramu.tutor@gmail.com";
  x-sender="postmaster@mail-ig0-f196.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkADAN3vUFTRVdXEeWdsb2JhbABchDoEgwLTeQcWAQEBAQERAQEJCwwIEjCDeSIRHQEbEQ0DEggBBzcCJAERAQUBUAeICQEDEqI2gyFuizOBcoMRiGsKGScNZ4V3AQUOkRiCIA8yEoFCBYtohyuKVZRCGCmFTR0vgksBAQE
X-IPAS-Result: AkADAN3vUFTRVdXEeWdsb2JhbABchDoEgwLTeQcWAQEBAQERAQEJCwwIEjCDeSIRHQEbEQ0DEggBBzcCJAERAQUBUAeICQEDEqI2gyFuizOBcoMRiGsKGScNZ4V3AQUOkRiCIA8yEoFCBYtohyuKVZRCGCmFTR0vgksBAQE
X-IronPort-AV: E=Sophos;i="5.04,810,1406584800"; 
   d="scan'208";a="85234540"
Received: from mail-ig0-f196.google.com ([209.85.213.196])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 29 Oct 2014 14:49:09 +0100
Received: by mail-ig0-f196.google.com with SMTP id h3so483303igd.11
        for <caml-list@inria.fr>; Wed, 29 Oct 2014 06:49:07 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:date:message-id:subject:from:to:content-type;
        bh=/cRg1rSOoMqj4LeG+eADc6hKuSDR3mzoK3OWlIApRvw=;
        b=MhEewzTX4O2RLhv2WkrKfszQUz9DxlqKUZV9Ts4U2ClEDEg6ffYDea2+rF0ICqyGdR
         ZwqHIeiOKzFznXacy5RzXoHXooOlPu3SliddAgtcLPCuqZ0rS2kan3V6e11eH1mUvtGd
         vUN7TfLQ1K4VBoWUrEsBu7wjwUqv+Q2FG+mvr+iLnJsnqf1t5OaWa3eZY0AbEe63IVlt
         c4z9kjGqeCtoL+0i34urbnrBmtOy8VQCYyKH2moJ8cjKakbo671hbyyFhS9n0cj+W/wO
         4WBk+eVBkxjq7NXAERLkxnXL2Mamv5P2vg0vTVWtgyocgorvmP4nWuJnHC9DIKXTbOqc
         trUw==
MIME-Version: 1.0
X-Received: by 10.43.2.74 with SMTP id nt10mr2538067icb.68.1414590547810; Wed,
 29 Oct 2014 06:49:07 -0700 (PDT)
Received: by 10.107.175.147 with HTTP; Wed, 29 Oct 2014 06:49:07 -0700 (PDT)
Date: Wed, 29 Oct 2014 06:49:07 -0700
Message-ID: <CALjiZU5AQCb=ykhH1iP-Y6na7ZSPzfq+Hn2BoDrB3FZycpDymw@mail.gmail.com>
From: Ramu Iyer <ramu.tutor@gmail.com>
To: caml-list@inria.fr
Content-Type: multipart/alternative; boundary=bcaec50fe2e31ae2cc0506900765
Subject: [Caml-list] Learning OCaml

--bcaec50fe2e31ae2cc0506900765
Content-Type: text/plain; charset=UTF-8

We are currently implementing a business process management solution by
customizing an ERP application. Natural language requirements are entered
as development work items in TFS.  There is an opportunity to increase the
rigor of the formal specification.

*  Is there an approach to reverse engineer a system specification of a
tool (such as Dynamics AX)?
*  Is there a formal process to discover the accumulated technical debt in
a given implementation?

These questions are somewhat high-level and I'd be glad to obtain any
inputs that will help me incrementally advance to the next step (using
OCaml as a formal method).

Thanks,

Ramu

--bcaec50fe2e31ae2cc0506900765
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>We are currently implementing a business process mana=
gement solution by customizing an ERP application. Natural language require=
ments are entered as development work items in TFS.=C2=A0 There is an oppor=
tunity to increase the rigor of the formal specification. =C2=A0<br></div><=
div><br></div><div>* =C2=A0Is there an approach to reverse engineer a syste=
m specification of a tool (such as Dynamics AX)?</div><div>* =C2=A0Is there=
 a formal process to discover the accumulated technical debt in a given imp=
lementation?=C2=A0</div><div><br></div><div>These questions are somewhat hi=
gh-level and I&#39;d be glad to obtain any inputs that will help me increme=
ntally advance to the next step (using OCaml as a formal method).=C2=A0</di=
v><div><br></div><div>Thanks,=C2=A0</div><div><br></div><div>Ramu</div><div=
><br></div></div>

--bcaec50fe2e31ae2cc0506900765--
