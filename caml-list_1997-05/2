Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA02359 for caml-redistribution; Tue, 6 May 1997 09:34:38 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA09478 for <caml-list@pauillac.inria.fr>; Thu, 1 May 1997 15:34:40 +0200 (MET DST)
Received: from cri.ens-lyon.fr (cri.ens-lyon.fr [140.77.1.32]) by nez-perce.inria.fr (8.8.5/8.7.3) with ESMTP id PAA26459 for <caml-list@inria.fr>; Thu, 1 May 1997 15:34:38 +0200 (MET DST)
Received: from monplaisir (monplaisir [140.77.191.107]) by cri.ens-lyon.fr (8.8.5/8.8.1) with ESMTP id PAA23812 for <caml-list@inria.fr>; Thu, 1 May 1997 15:34:37 +0200 (MET DST)
Date: Thu, 1 May 1997 15:34:33 +0200 (MET DST)
From: David Monniaux <David.Monniaux@ens-lyon.fr>
X-Sender: dmonniau@monplaisir
To: Caml-list <caml-list@inria.fr>
Subject: stderr
Message-ID: <Pine.GSO.3.95.970501152245.9972A-100000@monplaisir>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=ISO-8859-1
Content-Transfer-Encoding: 8BIT
Sender: weis

Bonjour,

deux petites remarques en passant:

Contrairement aux usages habituels sur Unix pour les compilateurs, ocamlc
sort ses erreurs sur stdout et non stderr. Ce n'est pas bien grave, a part
que cela met les warnings au debut de la sortie demandee par -i (qui,
elle, devrait rester sur stdout).

Par ailleurs, il arrive quelquefois que l'on fasse volontairement des
pattern-matching incomplets, parce que le programme est tel que les cas
non fournis ne peuvent arriver. ocamlc produit une warning dans ce cas, ce
qui d'ailleurs aide largement a eviter des erreurs de programmation.
Le probleme est que lorsque l'on utilise cette facilite de "warnings" pour
detecter des cas "oublies", on est "parasite" par les pattern-matching
incomplets tout a fait normaux que l'on a laisses. De meme que certains
compilateurs C acceptent des #pragma supprimant un certain avertissement
une fois, que l'on place avant un endroit où l'on a fait volontairement
une construction declenchant cet avertissemment, afin de n'etre pas
derange apres, serait-il possible de mettre un tel systeme dans ocaml?

-- David

"Si l'informatique marchait, cela se saurait."
Computer science student at ENS, Lyon, France
http://www.ens-lyon.fr/~dmonniau





