Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA05571 for caml-redistribution; Tue, 6 May 1997 11:30:12 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA13139 for <caml-list@pauillac.inria.fr>; Wed, 30 Apr 1997 04:52:52 +0200 (MET DST)
Received: from phivolcs.dost.gov.ph (root@[165.220.46.65]) by nez-perce.inria.fr (8.8.5/8.7.3) with ESMTP id EAA07939 for <caml-list@inria.fr>; Wed, 30 Apr 1997 04:52:33 +0200 (MET DST)
Received: from Sven.phivolcs.dost.gov.ph ([165.220.46.16]) by phivolcs.dost.gov.ph (8.7.5/8.7.3) with SMTP id KAA04927; Wed, 30 Apr 1997 10:23:27 +0800
Message-ID: <3366B36F.32C5@phivolcs.dost.gov.ph>
Date: Wed, 30 Apr 1997 10:50:23 +0800
From: Sven LUTHER <luther@phivolcs.dost.gov.ph>
Reply-To: luther@phivolcs.dost.gov.ph
X-Mailer: Mozilla 3.0 (Win95; I)
MIME-Version: 1.0
To: Didier Rousseau <Didier.Rousseau@cnam.fr>
CC: Caml List <caml-list@inria.fr>
Subject: Re: types recursifs ...
References: <199704291422.QAA31609@fermi.cnam.fr>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis

Didier Rousseau wrote:

> le sens que l'on peut deduit de votre fonction "viewt" ne correspond pas au type
> defini "'a t"
> dans le dernier cas de filtrage :
>                 | Arrow (l, r) -> viewt r; print_string " -> "; viewt l
> 
> le typeur deduit que "l" et "r" sont du meme type que l'arg de "viewt" : 'a t
> puisque le filtrage porte sur ce type
> Or  si par la suite on defini un type "tt" tel que :
>         type tt == int t;;
> 
> alors Arrow(x,y), de type  int t, ou x et y sont des int
> 
> le type recursif que vous auriez du definir etait :
>         type 'a t = Int | Bool | Arrow of 'a t * 'a t

Oui je vois ou est mon erreur maintenant, c'est dans la definition de la
fonction viewt
qu'est le probleme.

en fait ce que je voulais faire, c'est etendre le type term par le type
term t. 
je pense donc que je n'ai pas choisi le bon moyen de faire cela.

cependant il me semblait que :

	si ('a t as 'a) designe un type recursif alors 'a et 'a t devrait etre
les memes types

	et donc term t devient (term t as term) et donc term t et term sont les
memes types.

est-ce totalement errone, ai-je mal compris le manuel, ou est-ce
seulement dans la 
definition de la fonction viewt que je m'y suis mal pris.

Sven LUTHER



