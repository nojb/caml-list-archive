Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA20981 for caml-redistribution; Tue, 13 May 1997 13:58:06 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA22432 for <caml-list@pauillac.inria.fr>; Tue, 13 May 1997 10:25:59 +0200 (MET DST)
Received: from mail.rapidsite.net (mail.rapidsite.net [207.158.192.62]) by nez-perce.inria.fr (8.8.5/8.7.3) with SMTP id KAA27087 for <caml-list@inria.fr>; Tue, 13 May 1997 10:25:48 +0200 (MET DST)
Received: from rivalnet.com by mail.rapidsite.net via SMTP (950413.SGI.8.6.12/951211.SGI)
	for <caml-list@inria.fr> id EAA17484; Tue, 13 May 1997 04:25:16 -0400
Received: from strato [192.168.0.18] by rivalnet.com [192.168.0.1] with SMTP (MDaemon.v2.1.rB.b1.32-R) for <caml-list@inria.fr>; Tue, 13 May 97 10:18:06 +0100
Received: by strato with Microsoft Mail
	id <01BC5F86.F615A000@strato>; Tue, 13 May 1997 10:18:11 +0200
Message-ID: <01BC5F86.F615A000@strato>
From: Carsten Clasohm <clasohm@rivalnet.com>
To: "'caml-list@inria.fr'" <caml-list@inria.fr>
Subject: AW: ocaml needs users: native code for windows?
Date: Tue, 13 May 1997 10:16:54 +0200
MIME-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
X-MDMail-Server: MDaemon v2.1 rB b1 32-R
X-MDaemon-Deliver-To: caml-list@inria.fr
Sender: weis

> You still can't ship a plain binary, can you?

I can. I use ocamlopt to compile the OCaml code and link the object =
files and some OCaml libraries to my Win32 executable. Linking is done =
by VisualC++. (In practice it's a bit more complicated, as e.g. you have =
to link the additional file "camlstartup.asm" that would be =
automatically added if you used ocamlopt for linking. And there seems to =
be a conflict between Microsoft's runtime string functions and the =
regexp package delivered with OCaml. So I replaced the C regexp =
functions in OCaml's libstr.)

> At least the source code to MFC is
> available to anybody who buys VC++, so it is just a simple (!) matter
> of trascribing it from C++ to OCaml, right ?

That's right. And it's indeed easy to port C++ code to OCaml.

But VisualC++ would still have the advantage of offering a simple way to =
design GUI resources and link them with your code in an easy way (via =
message maps).






