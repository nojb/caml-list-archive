Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA19482 for caml-red; Wed, 6 Sep 2000 23:02:33 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA13452 for <caml-list@pauillac.inria.fr>; Wed, 6 Sep 2000 21:56:52 +0200 (MET DST)
Received: from e2.ny.us.ibm.com (e2.ny.us.ibm.com [32.97.182.102])
	by nez-perce.inria.fr (8.10.0/8.10.0) with ESMTP id e86Juo521884;
	Wed, 6 Sep 2000 21:56:51 +0200 (MET DST)
Received: from northrelay02.pok.ibm.com (northrelay02.pok.ibm.com [9.117.200.22])
	by e2.ny.us.ibm.com (8.9.3/8.9.3) with ESMTP id PAA65622;
	Wed, 6 Sep 2000 15:56:35 -0400
From: ortmann@us.ibm.com
Received: from D51MTA04.pok.ibm.com (d51mta04.pok.ibm.com [9.117.200.32])
	by northrelay02.pok.ibm.com (8.8.8m3/NCO v4.93) with SMTP id PAA30654;
	Wed, 6 Sep 2000 15:56:47 -0400
Received: by D51MTA04.pok.ibm.com(Lotus SMTP MTA v4.6.5  (863.2 5-20-1999))  id 85256952.006D8D4E ; Wed, 6 Sep 2000 15:56:35 -0400
X-Lotus-FromDomain: IBMUS
To: John Max Skaller <skaller@maxtal.com.au>
cc: Xavier Leroy <Xavier.Leroy@inria.fr>, frouaix@liquidmarket.com,
        caml-list@inria.fr
Message-ID: <85256952.006D8AE1.00@D51MTA04.pok.ibm.com>
Date: Wed, 6 Sep 2000 14:56:51 -0500
Subject: Re: ICFP'00 programming contest
Mime-Version: 1.0
Content-type: text/plain; charset=us-ascii
Content-Disposition: inline
Sender: weis@pauillac.inria.fr


Last year one of IBM's simulator developers discovered that a Fortran
version
of the simulator was faster because the generated code happened to fit well
into the processor code/data cache.  The performance difference was
substantial.

:-/

--
Daniel Ortmann, IBM Circuit Technology, Rochester, MN 55901-7829
ortmann@us.ibm.com / internal 8.553.6795 / external 507.253.6795
ortmann@isl.net home 507.288.7732

"The answers are so simple, and we all know where to look,
but it's easier just to avoid the question." -- Kansas




John Max Skaller <skaller@maxtal.com.au> on 09/06/2000 12:21:54 AM

To:   Xavier Leroy <Xavier.Leroy@inria.fr>
cc:   frouaix@liquidmarket.com, caml-list@inria.fr
Subject:  Re: ICFP'00 programming contest




Xavier Leroy wrote:

> Good idea.  I added some timings to the Web page above.  Not being
> familiar with the state of the art in ray tracing, we have no idea if
> these are good or bad timings.  But from examination of the code
> produced by ocamlopt, I can say that those floating-point
> optimizations finally paid off...

It would be interesting to see how good ocaml is now with FP.
I believe Fortran is king, with C being roughly 50% slower.
If ocaml were 100% slower than Fortran, it would be a significant
achievement: many numerical people are looking for better
_structured_ programs than one can get with Fortran and will pay
with some loss of performance: C++ has been used by many for this
reason. But much numerical programming is 'conceptually functional'
with some crucial optimisations to objects, which would make
ocaml a far better choice if it can achieve reasonable performance.

I'm not a numerical programmer, but I have considerable 'sympathy'
for that art form, so I'd like to thank the ocaml team for the
hard work of tuning ocaml to make it suitable for numerical
programming use. Thanks!


--
John (Max) Skaller, mailto:skaller@maxtal.com.au
10/1 Toxteth Rd Glebe NSW 2037 Australia voice: 61-2-9660-0850
checkout Vyper http://Vyper.sourceforge.net
download Interscript http://Interscript.sourceforge.net





