Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA30330 for caml-red; Wed, 6 Sep 2000 21:41:08 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA12241 for <caml-list@pauillac.inria.fr>; Wed, 6 Sep 2000 07:19:56 +0200 (MET DST)
Received: from localhost.localdomain (brian-boitano155.zip.com.au [210.23.147.155])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e865JpX15889;
	Wed, 6 Sep 2000 07:19:52 +0200 (MET DST)
Received: from maxtal.com.au (IDENT:root@localhost [127.0.0.1])
	by localhost.localdomain (8.9.3/8.8.7) with ESMTP id QAA09088;
	Wed, 6 Sep 2000 16:21:54 +1100
Message-ID: <39B5D472.C70EA12F@maxtal.com.au>
Date: Wed, 06 Sep 2000 16:21:54 +1100
From: John Max Skaller <skaller@maxtal.com.au>
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12-20 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: Xavier Leroy <Xavier.Leroy@inria.fr>
CC: frouaix@liquidmarket.com, caml-list@inria.fr
Subject: Re: ICFP'00 programming contest
References: <20000831113726.36306@pauillac.inria.fr> <200008311919.MAA24268@fiji01.liquidmarket.com> <20000831215018.11218@pauillac.inria.fr>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis@pauillac.inria.fr

Xavier Leroy wrote:

> Good idea.  I added some timings to the Web page above.  Not being
> familiar with the state of the art in ray tracing, we have no idea if
> these are good or bad timings.  But from examination of the code
> produced by ocamlopt, I can say that those floating-point
> optimizations finally paid off...

It would be interesting to see how good ocaml is now with FP.
I believe Fortran is king, with C being roughly 50% slower.
If ocaml were 100% slower than Fortran, it would be a significant
achievement: many numerical people are looking for better
_structured_ programs than one can get with Fortran and will pay
with some loss of performance: C++ has been used by many for this
reason. But much numerical programming is 'conceptually functional'
with some crucial optimisations to objects, which would make
ocaml a far better choice if it can achieve reasonable performance.

I'm not a numerical programmer, but I have considerable 'sympathy'
for that art form, so I'd like to thank the ocaml team for the
hard work of tuning ocaml to make it suitable for numerical
programming use. Thanks!


-- 
John (Max) Skaller, mailto:skaller@maxtal.com.au
10/1 Toxteth Rd Glebe NSW 2037 Australia voice: 61-2-9660-0850
checkout Vyper http://Vyper.sourceforge.net
download Interscript http://Interscript.sourceforge.net


