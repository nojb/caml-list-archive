Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA32069 for caml-red; Sun, 24 Sep 2000 21:16:12 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA27548 for <caml-list@pauillac.inria.fr>; Sun, 24 Sep 2000 21:15:07 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e8OJExT25854;
	Sun, 24 Sep 2000 21:14:59 +0200 (MET DST)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA26068; Sun, 24 Sep 2000 21:14:59 +0200 (MET DST)
From: Pierre Weis <Pierre.Weis@inria.fr>
Message-Id: <200009241914.VAA26068@pauillac.inria.fr>
Subject: Re: bottom types and threaded exits
In-Reply-To: <wx4s37qj6b.fsf@foo.iq.org> from Julian Assange at "Sep 24, 100 01:25:48 am"
To: proff@iq.org (Julian Assange)
Date: Sun, 24 Sep 2000 21:14:59 +0200 (MET DST)
Cc: caml-list@inria.fr
X-Mailer: ELM [version 2.4ME+ PL28 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: weis@pauillac.inria.fr

[...]
> Trying to define a type of int -> 'a naturally leads
> to a compiler error of 'a being unbound.

What about:

# let rec loop x = loop (x + 1);;
val loop : int -> 'a = <fun>

This is a pretty convincing non-terminating computation, isn't it ?

Pierre Weis

INRIA, Projet Cristal, Pierre.Weis@inria.fr, http://cristal.inria.fr/~weis/



