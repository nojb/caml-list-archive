Return-Path: <jonathan.roewen@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 7C804BB81
	for <caml-list@yquem.inria.fr>; Thu,  1 Dec 2005 23:36:03 +0100 (CET)
Received: from wproxy.gmail.com (wproxy.gmail.com [64.233.184.193])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jB1Ma24T005752
	for <caml-list@yquem.inria.fr>; Thu, 1 Dec 2005 23:36:03 +0100
Received: by wproxy.gmail.com with SMTP id i28so335669wra
        for <caml-list@yquem.inria.fr>; Thu, 01 Dec 2005 14:36:02 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=e2eqo59uXHOgUbsBAhJOsgjI7LDpi/EpgtHhDcbRuJLv2MFCj8y6Gx9iD3PO/mOfYTNAqysY63XXoWWdAcDLI1+AuE/qR9nwsJJXJxXoytQ0uhhZIiTWzOhoSvtRXgWqJoMhm2EJSj7kCtxOiqdQkEzAar4ElFAR4aP46iqNUi8=
Received: by 10.65.191.8 with SMTP id t8mr1168174qbp;
        Thu, 01 Dec 2005 14:36:02 -0800 (PST)
Received: by 10.65.35.10 with HTTP; Thu, 1 Dec 2005 14:36:01 -0800 (PST)
Message-ID: <ad8cfe7e0512011436n2f28ee69hd2f6d41906442f1f@mail.gmail.com>
Date: Fri, 2 Dec 2005 11:36:02 +1300
From: Jonathan Roewen <jonathan.roewen@gmail.com>
To: caml-list@yquem.inria.fr
Subject: [Caml-list] More info on the Event module
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
X-Miltered: at concorde with ID 438F7AD2.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 haskell:01 ocaml:01 haskell:01 threading:01 haskell's:01 rewrite:01 ghc:01 concurrent:02 concurrent:02 figuring:03 module:03 module:03 sync:04 chan:05 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_BY_IP autolearn=disabled 
	version=3.0.3

Hi,

I'm looking for some more info on the Event module. I can't figure it out =
=3D/

Event.sync (Event.send chan 6; Event.receive chan);; blocks forever...

What I want to do is rewrite some concurrent Haskell code in OCaml
(concurrent haskell code uses GHC/pre-emptive threading). I'm not sure
if the Event module is the way to go. Figuring out how to do the
equivalent of Haskell's channels and mvars is proving difficult =3D/

Jonathan

