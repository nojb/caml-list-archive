Return-Path: <fw@deneb.enyo.de>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id E4E59BB81
	for <caml-list@yquem.inria.fr>; Sun, 11 Dec 2005 16:29:47 +0100 (CET)
Received: from mail.enyo.de (mail.enyo.de [212.9.189.167])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jBBFTDOR020471
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Sun, 11 Dec 2005 16:29:47 +0100
Received: from deneb.vpn.enyo.de ([212.9.189.177] helo=deneb.enyo.de)
	by mail.enyo.de with esmtp id 1ElT8S-0003AM-6r
	for caml-list@yquem.inria.fr; Sun, 11 Dec 2005 16:29:12 +0100
Received: from fw by deneb.enyo.de with local (Exim 4.54)
	id 1ElT8Q-0005gk-Vx
	for caml-list@yquem.inria.fr; Sun, 11 Dec 2005 16:29:11 +0100
From: Florian Weimer <fw@deneb.enyo.de>
To: caml-list@yquem.inria.fr
Subject: Invalid HPPA assembly code: large displacements
Date: Sun, 11 Dec 2005 16:29:10 +0100
Message-ID: <87u0dfk5yx.fsf@mid.deneb.enyo.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at concorde with ID 439C45C9.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; hppa:01 compiler:01 hppa:01 compiler:01 semantics:01 tweak:01 native:02 debian:02 compiling:02 florian:02 assembler:02 linking:02 module:03 elf:03 elf:03 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

At Debian, we experience problems with the native code compiler on
HPPA.  The compiler generates invalid assembler input which includes
displacements that are beyond the capabilities of this architecture.
For example, when compiling a large module, a BL instruction is
emitted which branches to a global label which is more than 64K
instructions away from the start of the text section in that object
file (which apparently cannot be expressed in an ELF relocation; a
relocation is needed to implement the ELF linking semantics).

Is there something one can tweak in the compiler to work around this
problem?

