Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 06EC1BB81
	for <caml-list@yquem.inria.fr>; Thu,  8 Dec 2005 22:17:18 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jB8LHH4P026186
	for <caml-list@yquem.inria.fr>; Thu, 8 Dec 2005 22:17:17 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA23474 for <caml-list@pauillac.inria.fr>; Thu, 8 Dec 2005 22:17:17 +0100 (MET)
Received: from wproxy.gmail.com (wproxy.gmail.com [64.233.184.194])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jB8LHFYM026183
	for <caml-list@inria.fr>; Thu, 8 Dec 2005 22:17:16 +0100
Received: by wproxy.gmail.com with SMTP id 37so1023942wra
        for <caml-list@inria.fr>; Thu, 08 Dec 2005 13:17:15 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:reply-to:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=WHbFMp2mHfi+GDtgvXw8wRmenNxc0iD/aYZ1YPXsDWlbj+/TcnX86k+eGkb2Eh7BAV1NMvW2EBzGt2TuRSKnjjCm1IOIzqDTM15Z4Va7luLmi2rBVFcJMwMfVEhqIJOaotbYyKrH3vo2EoPmziYXmOdQjPY5D/qyPQhQKpm97po=
Received: by 10.54.118.5 with SMTP id q5mr4939360wrc;
        Thu, 08 Dec 2005 13:17:15 -0800 (PST)
Received: by 10.54.128.3 with HTTP; Thu, 8 Dec 2005 13:17:15 -0800 (PST)
Message-ID: <278733770512081317k58635faal@mail.gmail.com>
Date: Thu, 8 Dec 2005 22:17:15 +0100
From: Virgile Prevosto <virgile.prevosto@gmail.com>
Reply-To: virgile.prevosto@m4x.org
To: caml-list@inria.fr
Subject: Re: [Caml-list] accessing values of a class from another instance
In-Reply-To: <43988791.2060507@mitre.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
References: <43988791.2060507@mitre.org>
X-Miltered: at concorde with ID 4398A2DD.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 4398A2DB.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 simulate:01 accessor:01 accessor:01 tutto:98 oggi:98 volta:98 abstract:01 constructor:01 interfaces:01 coercion:01 caml:02 instances:02 variables:02 objects:02 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_BY_IP autolearn=disabled 
	version=3.0.3

Hello,

2005/12/8, Shaddin Doghmi <shaddin@mitre.org>:
> It seems instance variables of an object are not accessible from other
> objects that are instances of the same class. What is a nice way to
> simulate this functionality? I would like to avoid accessor methods for

A possibility is to use the module system and let your instance
variable and the corresponding accessor method have an abstract type:
this way, you'll still be able to call the method outside of the
module, but you won't be able to use its result. This is described
here:
http://caml.inria.fr/pub/docs/manual-ocaml/manual005.html#ss:friends

Of course, one could probably think of more sophisticated interfaces
for the module, where you would for instance export only a class type
where the accessor method
itself is hidden and a constructor function that performs at the same
time a 'new' and a coercion to this class type. I've never played with
that, though.
--
E tutto per oggi, a la prossima volta
Virgile

