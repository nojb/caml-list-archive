Return-Path: <jonathan.roewen@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id C11B6BB81
	for <caml-list@yquem.inria.fr>; Mon, 26 Dec 2005 00:45:07 +0100 (CET)
Received: from wproxy.gmail.com (wproxy.gmail.com [64.233.184.193])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jBPNj6m8016829
	for <caml-list@yquem.inria.fr>; Mon, 26 Dec 2005 00:45:07 +0100
Received: by wproxy.gmail.com with SMTP id i32so869806wra
        for <caml-list@yquem.inria.fr>; Sun, 25 Dec 2005 15:45:06 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=hJeBKa3MrntLbFgFtsy6MzxRRouJvZ+vHoiMA365Xa8KXuOwzpEhHKrk0E6ZD2BDbvs46vUXGdlFs0qcTNKbAFhCEnTHjkrzQ6Klf+hk2TEJfT3pGjTahDcZCRvOHX9/w1ai+emK08ZSDX/ErpTOoFf3nFCuDhvXX7LbHTlkNJo=
Received: by 10.65.153.10 with SMTP id f10mr2140180qbo;
        Sun, 25 Dec 2005 15:45:06 -0800 (PST)
Received: by 10.65.23.16 with HTTP; Sun, 25 Dec 2005 15:45:06 -0800 (PST)
Message-ID: <ad8cfe7e0512251545i79ebee38q6527e631a7e06c05@mail.gmail.com>
Date: Mon, 26 Dec 2005 12:45:06 +1300
From: Jonathan Roewen <jonathan.roewen@gmail.com>
To: caml-list@yquem.inria.fr
Subject: [Caml-list] Linking confusion...
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
X-Miltered: at nez-perce with ID 43AF2F02.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 makefile:01 specifies:01 dependencies:01 cmo:01 compiler:01 utils:01 symtable:01 cmo:01 emitcode:01 dynlink:01 dependencies:01 bytecode:01 dynlink:01 toplevellib:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_BY_IP autolearn=disabled 
	version=3.0.3

Hi,

I'm looking at dynlinks makefile, which specifies a nice small list of
16 dependencies on .cmo files from compiler environment
(typing/utils/etc). Now my confusion comes on how it can link it
properly when symtable.cmo depends on other .cmos, which depend on yet
others (mainly through dependency on emitcode.cmo).

Now my question is: how can the dynlink library not only compile, but
also link if these dependencies aren't present? Does the bytecode
linker do dead code elimination to avoid dependencies on
modules/module functions not used?

And one smaller, off topic question: if these modules are in my kernel
environment (so I can use dynlink module), and say I dynlink
toplevellib.cma so I can use it at runtime, will it try to use the
already linked in modules in my kernel?

Jonathan

