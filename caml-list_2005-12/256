Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id CB5FBBB9C
	for <caml-list@yquem.inria.fr>; Sun, 25 Dec 2005 03:07:09 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jBP279Dq026137
	for <caml-list@yquem.inria.fr>; Sun, 25 Dec 2005 03:07:09 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA16062 for <caml-list@pauillac.inria.fr>; Sun, 25 Dec 2005 03:07:08 +0100 (MET)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jBP27662014720
	for <caml-list@inria.fr>; Sun, 25 Dec 2005 03:07:07 +0100
Received: from rosella (ppp33-4.lns1.syd2.internode.on.net [59.167.33.4] (may be forged))
	by smtp3.adl2.internode.on.net (8.12.9/8.12.6) with ESMTP id jBP273h8003518
	for <caml-list@inria.fr>; Sun, 25 Dec 2005 12:37:04 +1030 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: PIC
From: skaller <skaller@users.sourceforge.net>
To: caml-list@inria.fr
Content-Type: text/plain
Date: Sun, 25 Dec 2005 13:07:03 +1100
Message-Id: <1135476423.28426.45.camel@rosella>
Mime-Version: 1.0
X-Mailer: Evolution 2.4.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 43ADFECD.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 43ADFECA.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 3.09:01 -fpic:01 ocaml:01 bytecode:01 bytecode:01 sourceforge:01 compile:01 supported:01 native:02 native:02 dynamic:03 library:03 loading:04 startup:05 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

I notice Ocaml 3.09 has -fPIC option. Thanks! This is a step
towards dynamic loading in native code. 

I wonder, is it actually supported -- or even possible 
to load native code (on suitable platforms) at startup
from C? From an Ocaml mainline? 

What's left to be able to 'dlopen()' a function library?
>From C? From Ocaml? Will that ever be possible?

[Another question, whether one can wrap native code
so it can be called from bytecode.. this would allow
bytecode programs to generate and compile bytecode
extensions .. without the bulk of the code running
slowly]

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

