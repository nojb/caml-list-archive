Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id D7B82BB81
	for <caml-list@yquem.inria.fr>; Wed,  7 Dec 2005 06:55:02 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jB75t2HV012468
	for <caml-list@yquem.inria.fr>; Wed, 7 Dec 2005 06:55:02 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id GAA22242 for <caml-list@pauillac.inria.fr>; Wed, 7 Dec 2005 06:55:01 +0100 (MET)
Received: from wproxy.gmail.com (wproxy.gmail.com [64.233.184.200])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jB75t0X6028346
	for <caml-list@inria.fr>; Wed, 7 Dec 2005 06:55:01 +0100
Received: by wproxy.gmail.com with SMTP id i31so275524wra
        for <caml-list@inria.fr>; Tue, 06 Dec 2005 21:55:00 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=Sq0+CPSpPVc6G2mGJOkcDVzEZAs12NpOnZTtugIC9l+mSh4k2Kh7RW6CS71cDhqQr3EDHPQhUn7BnbPBkTFKX/Hc5TpA6lnDtCC6Zc8pRo+P8j6GvkrQbmJLKmgijFeeDckwBCmNqIkc0XbkkgMyrhsvfCw7CEeeQXF4q0XW/Co=
Received: by 10.64.253.17 with SMTP id a17mr1440646qbi;
        Tue, 06 Dec 2005 21:55:00 -0800 (PST)
Received: by 10.65.35.10 with HTTP; Tue, 6 Dec 2005 21:55:00 -0800 (PST)
Message-ID: <ad8cfe7e0512062155k27e8e27pca9fe2479362169d@mail.gmail.com>
Date: Wed, 7 Dec 2005 18:55:00 +1300
From: Jonathan Roewen <jonathan.roewen@gmail.com>
To: Eijiro Sumii <sumii@ecei.tohoku.ac.jp>
Subject: Re: [Caml-list] infinite loop that cannot be interrupted by Control-C
Cc: caml-list@inria.fr
In-Reply-To: <a4d0794e0512062149n3908b6bo8c2dc9c167039c50@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
References: <a4d0794e0512062149n3908b6bo8c2dc9c167039c50@mail.gmail.com>
X-Miltered: at concorde with ID 43967936.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 43967934.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 rec:01 3.09.0:01 ocaml:01 caml:02 objective:02 seems:03 let:03 probably:05 interpreter:06 signals:07 signals:07 cases:08 function:08 gmail:09 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_BY_IP autolearn=disabled 
	version=3.0.3

> It seems that the infinite loop
>
>  let rec x =3D 1 :: x in x =3D x ;;
>
> cannot be interrupted by Control-C in the interactive session of
> Objective Caml 3.09.0

This is probably because of the way the interpreter is designed.

Signals are only checked after function calls, and one other operation
I can't remember off hand. Obviously, in your example, neither of
these cases occur, so ocaml doesn't get a chance to check for any
signals: hence, can't be interrupted.

Jonathan

