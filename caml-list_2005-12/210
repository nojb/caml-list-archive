Return-Path: <jonathan.roewen@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id BE3DBBB81
	for <caml-list@yquem.inria.fr>; Sun, 18 Dec 2005 01:43:45 +0100 (CET)
Received: from zproxy.gmail.com (zproxy.gmail.com [64.233.162.201])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jBI0hiVm003754
	for <caml-list@yquem.inria.fr>; Sun, 18 Dec 2005 01:43:45 +0100
Received: by zproxy.gmail.com with SMTP id z31so912252nzd
        for <caml-list@yquem.inria.fr>; Sat, 17 Dec 2005 16:43:44 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=ToFmj8vgL+SUOihjDPfvaWzMFhV0djzsTtN3zFVgwK1L+QMYzfJQB13K6zRIBDmZXOT0xt881aDSsyPOkbJLqWxma8Rx/mlPuYdEjTxJItu4Xj0hICEv6lWGMN0nb6xQ1syc7gA2PSDs2RZQsr9UB9urTilkX9OY1uwiup48uf0=
Received: by 10.64.249.9 with SMTP id w9mr1183172qbh;
        Sat, 17 Dec 2005 16:43:44 -0800 (PST)
Received: by 10.65.22.12 with HTTP; Sat, 17 Dec 2005 16:43:44 -0800 (PST)
Message-ID: <ad8cfe7e0512171643x667ed16ey83d0e682068f26e6@mail.gmail.com>
Date: Sun, 18 Dec 2005 13:43:44 +1300
From: Jonathan Roewen <jonathan.roewen@gmail.com>
To: caml-list@yquem.inria.fr
Subject: [Caml-list] vmthreads...
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
X-Miltered: at nez-perce with ID 43A4B0C1.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 exception:01 thread:02 seems:03 driver:03 driver:03 mutex:03 mutex:03 locks:04 mean:07 preemption:08 timer:08 i'm:08 gmail:09 propagated:09 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_BY_IP autolearn=disabled 
	version=3.0.3

Hi,

Just a simple question: how does Thread.critical_section ever get set
to false? I see mutex.ml sets it to true, as does condition.ml, but
neither set to false.

Does this mean pre-emption won't work as soon as a mutex is locked?
This -might- explain the weird lockup I'm experiencing with my OS/NIC
driver, as when it locks up (there's no fatal exception being
propagated) not even the timer interrupt which does preemption seems
to do anything (the keyboard driver -should- still run, for instance).

Jonathan

