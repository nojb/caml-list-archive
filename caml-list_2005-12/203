Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 09D96BB81
	for <caml-list@yquem.inria.fr>; Fri, 16 Dec 2005 12:51:56 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jBGBpt3a001223
	for <caml-list@yquem.inria.fr>; Fri, 16 Dec 2005 12:51:55 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA20631 for <caml-list@pauillac.inria.fr>; Fri, 16 Dec 2005 12:51:55 +0100 (MET)
Received: from web51613.mail.yahoo.com (web51613.mail.yahoo.com [68.142.224.86])
	by nez-perce.inria.fr (8.13.0/8.13.0) with SMTP id jBGBprEU001213
	for <caml-list@inria.fr>; Fri, 16 Dec 2005 12:51:54 +0100
Received: (qmail 46674 invoked by uid 60001); 16 Dec 2005 11:51:53 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.com.br;
  h=Message-ID:Received:Date:From:Subject:To:MIME-Version:Content-Type:Content-Transfer-Encoding;
  b=rOkuhKifRGHGkhw9K06eEPI6fAN8NcffVsunVpHex7mmrh2CPdQZPJGdtKI/Huc7CLjFpcq3FvpX8IPKI5sewCkuf8jHtgVE7n/xdqAOeP+xclNkmbS4GntIvXIY6gkveOqdyLytNQhyOxqhYC0VoUGspaovdQ7Iscdhzll0ht8=  ;
Message-ID: <20051216115153.46672.qmail@web51613.mail.yahoo.com>
Received: from [200.19.149.200] by web51613.mail.yahoo.com via HTTP; Fri, 16 Dec 2005 11:51:53 GMT
Date: Fri, 16 Dec 2005 11:51:53 +0000 (GMT)
From: Alexsandro Soares <a_s_soares@yahoo.com.br>
Subject: Concurrent and Distributed Programming in Ocaml
To: caml-list@inria.fr
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Miltered: at nez-perce with ID 43A2AA5B.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 43A2AA5A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 model:01 ocaml:01 threads:01 jocaml:01 jocaml:01 cheers:01 lar:98 expression:01 modules:01 primitives:01 native:02 native:02 constructs:02 concurrent:02 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

Hi all,

   My team is working with evolutionary computing and
we develop a distributed model of gene expression
programming (GEP) in OCaml. Our first try used the
primitives provided in modules Mutex and Condition to
do syncronization between process and threads. The
system is done. However, we will make a refactoring of
the code and, at this time,  we would like to use
higher level constructs to work with concurrent and
distributed programming. What are the options to do
this in OCaml? We started to see Jocaml, but our
system uses native code generation both in Linux and
Windows, and I don't know if Jocaml can be compiled in
native code. Any help?

   Thanks in advance for any answer.

   Cheers,
   Alex



	



	
		
_______________________________________________________ 
Yahoo! doce lar. Faça do Yahoo! sua homepage. 
http://br.yahoo.com/homepageset.html 

