Return-Path: <n8gray@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id DC29EBB81
	for <caml-list@yquem.inria.fr>; Tue, 13 Dec 2005 22:07:11 +0100 (CET)
Received: from zproxy.gmail.com (zproxy.gmail.com [64.233.162.201])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jBDL7A2J006227
	for <caml-list@yquem.inria.fr>; Tue, 13 Dec 2005 22:07:11 +0100
Received: by zproxy.gmail.com with SMTP id x3so1788640nzd
        for <caml-list@yquem.inria.fr>; Tue, 13 Dec 2005 13:07:10 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=jpTNS7jrDw4hWsHJXZAsiKWNeixreovesv6UNwggtHmneaDj8jEobj16SgD0SajRyPhxfKajoayf3SrPYvQdssP6pDR9YKednH9LfflTPlMuzLPQO090gjOOKMSMHRYbfOIUGItu3Kx6sAHJrwW1oZjHBpBhByIK5v/2svGWmWA=
Received: by 10.36.141.19 with SMTP id o19mr7725319nzd;
        Tue, 13 Dec 2005 13:07:10 -0800 (PST)
Received: by 10.36.13.15 with HTTP; Tue, 13 Dec 2005 13:07:10 -0800 (PST)
Message-ID: <aee06c9e0512131307k3fc494a5k3591d549d552f1b@mail.gmail.com>
Date: Tue, 13 Dec 2005 13:07:10 -0800
From: Nathaniel Gray <n8gray@gmail.com>
To: Francois.Pottier@inria.fr
Subject: Re: [Caml-list] [ANNOUNCE] Alpha release of Menhir, an LR(1) parser generator for ocaml
Cc: Caml Mailing List <caml-list@yquem.inria.fr>
In-Reply-To: <20051212175838.GA8502@yquem.inria.fr>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_7435_24363427.1134508030117"
References: <20051212175838.GA8502@yquem.inria.fr>
X-Miltered: at nez-perce with ID 439F37FE.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 parser:01 ocaml:01 ocamlyacc:01 parsing:01 cheers:01 grammar:01 ocaml:01 ocamlyacc:01 grammar:01 parsers:01 parsing:01 replacing:01 sequences:01 syntax:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.5 required=5.0 tests=HTML_20_30,HTML_MESSAGE,
	RCVD_BY_IP autolearn=disabled version=3.0.3

------=_Part_7435_24363427.1134508030117
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

This is pretty nice!  Every time I use ocamlyacc I think "somebody should
write something better."  Now it looks like somebody has!  I can't tell you
how many times I've wanted parameterized rules and simple "library" rules
for parsing delimiter-separated lists and such...

Cheers,
-n8

On 12/12/05, Francois Pottier <Francois.Pottier@inria.fr> wrote:
>
>
> Dear Caml users,
>
> We are proud to announce the first release of Menhir. Menhir compiles
> LR(1)
> grammar specifications to OCaml code.
>
> Menhir is 90% compatible with ocamlyacc. That is, existing ocamlyacc
> grammar
> specifications are accepted and compiled by Menhir; the resulting parsers
> run
> and produce correct parse trees, except they produce incorrect position
> information, because none of the functionality of module Parsing is
> supported. Porting a grammar specification from ocamlyacc to Menhir
> requires
> replacing all calls to the Parsing module with new keywords.
>
> Why switch from ocamlyacc to Menhir? In short,
>
> * Menhir offers parameterized nonterminal symbols as well as a library of
>    standard definitions, including options, sequences, and lists. It also
>    offers limited support for EBNF syntax.
>
> * ocamlyacc accepts LALR(1) grammars; Menhir accepts LR(1) grammars, thus
>    avoiding certain artificial conflicts.
>
> * Menhir explains conflicts in terms of the grammar, not (only) in terms
> of
>    the automaton.
>
> * Menhir allows grammar specifications to be split over multiple files. I=
t
>    also allows several grammars to share a single set of tokens.
>
> * Menhir produces reentrant parsers.
>
> * Menhir is able to produce parsers that are parameterized by Ocaml
> modules.
>
> * ocamlyacc requires semantic values to be referred to via keywords: $1,
> $2,
>    and so on. Menhir allows semantic values to be explicitly named.
>
> * Menhir's error and warning messages are usually more numerous and bette=
r
>    than ocamlyacc's.
>
> A more detailed comparison between ocamlyacc and Menhir appears in
> Menhir's
> documentation.
>
> This is an ALPHA-quality release, so there certainly remain a lot of bugs
> to iron out. Nevertheless, we encourage intrepid testers to have a look
> and send suggestions and bug reports our way. Thanks for your attention!
>
> Menhir requires ocaml 3.09. The source distribution and the documentation
> can
> be found at
>
>   http://pauillac.inria.fr/~fpottier/menhir/menhir-20051212.tar.gz
>   http://pauillac.inria.fr/~fpottier/menhir/manual.pdf
>
> --
> Fran=E7ois Pottier and Yann R=E9gis-Gianas
> {Francois.Pottier,Yann.Regis-Gianas}@inria.fr
> http://pauillac.inria.fr/~fpottier/
> http://pauillac.inria.fr/~regisgia/
>
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>



--
>>>-- Nathaniel Gray -- Caltech Computer Science ------>
>>>-- Mojave Project -- http://mojave.cs.caltech.edu -->

------=_Part_7435_24363427.1134508030117
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

This is pretty nice!&nbsp; Every time I use ocamlyacc I think &quot;somebod=
y should write something better.&quot;&nbsp; Now it looks like somebody has=
!&nbsp; I can't tell you how many times I've wanted parameterized rules and=
 simple &quot;library&quot; rules for parsing delimiter-separated lists and=
 such...
<br><br>Cheers,<br>-n8<br><br><div><span class=3D"gmail_quote">On 12/12/05,=
 <b class=3D"gmail_sendername">Francois Pottier</b> &lt;<a href=3D"mailto:F=
rancois.Pottier@inria.fr">Francois.Pottier@inria.fr</a>&gt; wrote:</span><b=
lockquote class=3D"gmail_quote" style=3D"border-left: 1px solid rgb(204, 20=
4, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<br>Dear Caml users,<br><br>We are proud to announce the first release of M=
enhir. Menhir compiles LR(1)<br>grammar specifications to OCaml code.<br><b=
r>Menhir is 90% compatible with ocamlyacc. That is, existing ocamlyacc gram=
mar
<br>specifications are accepted and compiled by Menhir; the resulting parse=
rs run<br>and produce correct parse trees, except they produce incorrect po=
sition<br>information, because none of the functionality of module Parsing =
is
<br>supported. Porting a grammar specification from ocamlyacc to Menhir req=
uires<br>replacing all calls to the Parsing module with new keywords.<br><b=
r>Why switch from ocamlyacc to Menhir? In short,<br><br> * Menhir offers pa=
rameterized nonterminal symbols as well as a library of
<br>&nbsp;&nbsp; standard definitions, including options, sequences, and li=
sts. It also<br>&nbsp;&nbsp; offers limited support for EBNF syntax.<br><br=
> * ocamlyacc accepts LALR(1) grammars; Menhir accepts LR(1) grammars, thus=
<br>&nbsp;&nbsp; avoiding certain artificial conflicts.
<br><br> * Menhir explains conflicts in terms of the grammar, not (only) in=
 terms of<br>&nbsp;&nbsp; the automaton.<br><br> * Menhir allows grammar sp=
ecifications to be split over multiple files. It<br>&nbsp;&nbsp; also allow=
s several grammars to share a single set of tokens.
<br><br> * Menhir produces reentrant parsers.<br><br> * Menhir is able to p=
roduce parsers that are parameterized by Ocaml modules.<br><br> * ocamlyacc=
 requires semantic values to be referred to via keywords: $1, $2,<br>&nbsp;=
&nbsp; and so on. Menhir allows semantic values to be explicitly named.
<br><br> * Menhir's error and warning messages are usually more numerous an=
d better<br>&nbsp;&nbsp; than ocamlyacc's.<br><br>A more detailed compariso=
n between ocamlyacc and Menhir appears in Menhir's<br>documentation.<br><br=
>This is an ALPHA-quality release, so there certainly remain a lot of bugs
<br>to iron out. Nevertheless, we encourage intrepid testers to have a look=
<br>and send suggestions and bug reports our way. Thanks for your attention=
!<br><br>Menhir requires ocaml 3.09. The source distribution and the docume=
ntation can
<br>be found at<br><br>&nbsp;&nbsp;<a href=3D"http://pauillac.inria.fr/~fpo=
ttier/menhir/menhir-20051212.tar.gz">http://pauillac.inria.fr/~fpottier/men=
hir/menhir-20051212.tar.gz</a><br>&nbsp;&nbsp;<a href=3D"http://pauillac.in=
ria.fr/~fpottier/menhir/manual.pdf">
http://pauillac.inria.fr/~fpottier/menhir/manual.pdf</a><br><br>--<br>Fran=
=E7ois Pottier and Yann R=E9gis-Gianas<br>{Francois.Pottier,Yann.Regis-Gian=
as}@<a href=3D"http://inria.fr">inria.fr</a><br><a href=3D"http://pauillac.=
inria.fr/~fpottier/">
http://pauillac.inria.fr/~fpottier/</a><br><a href=3D"http://pauillac.inria=
.fr/~regisgia/">http://pauillac.inria.fr/~regisgia/</a><br><br>____________=
___________________________________<br>Caml-list mailing list. Subscription=
 management:
<br><a href=3D"http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list">ht=
tp://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list</a><br>Archives: <a =
href=3D"http://caml.inria.fr">http://caml.inria.fr</a><br>Beginner's list:=
=20
<a href=3D"http://groups.yahoo.com/group/ocaml_beginners">http://groups.yah=
oo.com/group/ocaml_beginners</a><br>Bug reports: <a href=3D"http://caml.inr=
ia.fr/bin/caml-bugs">http://caml.inria.fr/bin/caml-bugs</a><br></blockquote=
>
</div><br><br clear=3D"all"><br>-- <br>&gt;&gt;&gt;-- Nathaniel Gray -- Cal=
tech Computer Science ------&gt;<br>&gt;&gt;&gt;-- Mojave Project -- <a hre=
f=3D"http://mojave.cs.caltech.edu">http://mojave.cs.caltech.edu</a> --&gt;

------=_Part_7435_24363427.1134508030117--

