Received: (from weis@localhost) by pauillac.inria.fr (8.6.10/8.6.6) id TAA17872 for caml-redistribution; Tue, 20 Feb 1996 19:49:08 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.6.10/8.6.6) with ESMTP id PAA07463 for <caml-list@pauillac.inria.fr>; Mon, 19 Feb 1996 15:55:50 +0100
Received: from imag.imag.fr (imag.imag.fr [129.88.30.1]) by concorde.inria.fr (8.7.1/8.7.1) with ESMTP id PAA07881 for <caml-list@pauillac.inria.fr>; Mon, 19 Feb 1996 15:55:50 +0100 (MET)
Received: from thot.imag.fr (thot.imag.fr [129.88.38.1]) by imag.imag.fr (8.6.11/8.6.9) with ESMTP id PAA08604 for <caml-list@pauillac.inria.fr>; Mon, 19 Feb 1996 15:55:49 +0100
Received: from [129.88.38.40] (pythagore.imag.fr [129.88.38.40]) by thot.imag.fr (8.6.11/8.6.9) with SMTP id PAA09577 for <caml-list@pauillac.inria.fr>; Mon, 19 Feb 1996 15:55:47 +0100
X-Sender: levy@thot.imag.fr
Message-Id: <v01530537ad4e236a223a@[129.88.38.40]>
Mime-Version: 1.0
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Date: Mon, 19 Feb 1996 15:57:09 +0100
To: caml-list@pauillac.inria.fr
From: Michel.Levy@imag.fr (Michel Levy)
Sender: weis
Status: O


Pouvez-vous, je vous prie, r=E9pondre =E0 quelques questions =E0 propos de c=
amllight

1) L'expression
let rec x =3D 1 :: x ;;
est de type int list. Son ex=E9cution cr=E9e-t-elle une fermeture ?
Je lis d'ailleurs dans le "Doc et user's manual" : the behavior of other
forms of let rec (formes autres que des d=E9finitions de fonction) is
implementation-dependant.

2) Pourquoi le typeur accepte la d=E9finition r=E9cursive pr=E9c=E9dente mai=
s

21)refuse la modification suivante du programme minicaml (cf Le langage
caml de Pierre Weiss et Xavier Leroy p 352) :

let rec env_=E9tendu =3D
(d=E9f.Nom, Val_fermeture
         { D=E9finition =3D liste_de_cas ; Environnement =3D env_=E9tendu}) =
::
env_courant

sous le pr=E9texte que d=E9f.Nom n'est pas acceptable dans une d=E9finition =
r=E9cursive

22)accepte par contre

let nom =3D d=E9f.Nom in
let rec env_=E9tendu =3D
(nom, Val_fermeture
         { D=E9finition =3D liste_de_cas ; Environnement =3D env_=E9tendu}) =
::
env_courant


Remarque : mon but =E9tait d'=E9viter les types mutables pour repr=E9senter =
les
environnements.

Michel Levy
L.S.R.
BP53x - 38041 Grenoble cedex - France
Tel : 76827246
e.mail : Michel.Levy@imag.fr







