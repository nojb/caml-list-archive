Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p1I9Idm7017796
	for <caml-list@sympa-roc.inria.fr>; Fri, 18 Feb 2011 10:18:39 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ArEBAFPIXU0uaTwrmWdsb2JhbACmNQEBAQEBCAsKBxEkvBaFXgQ
X-IronPort-AV: E=Sophos;i="4.62,186,1297033200"; 
   d="scan'208";a="88254624"
Received: from 1.27.mail-out.ovh.net (HELO 27.mail-out.ovh.net) ([46.105.60.43])
  by mail4-smtp-sop.national.inria.fr with SMTP; 18 Feb 2011 10:18:33 +0100
Received: (qmail 23288 invoked by uid 503); 18 Feb 2011 10:11:17 -0000
Received: from b9.ovh.net (HELO mail629.ha.ovh.net) (213.186.33.59)
  by 27.mail-out.ovh.net with SMTP; 18 Feb 2011 10:11:11 -0000
Received: from b0.ovh.net (HELO queueout) (213.186.33.50)
	by b0.ovh.net with SMTP; 18 Feb 2011 11:19:43 +0200
Received: from ip-22.net-82-216-3.versailles2.rev.numericable.fr (HELO ?192.168.0.10?) (forum%x9c.fr@82.216.3.22)
  by ns0.ovh.net with SMTP; 18 Feb 2011 11:19:42 +0200
Mime-Version: 1.0 (Apple Message framework v1082)
Content-Type: text/plain; charset=iso-8859-1
From: "forum@x9c.fr" <forum@x9c.fr>
In-Reply-To: <6C3CFF1F-DD4B-4BE3-BF3E-C78DCFE6200D@math.nagoya-u.ac.jp>
Date: Fri, 18 Feb 2011 10:18:27 +0100
Cc: x9c <forum@x9c.fr>
Message-Id: <C07DF418-81BB-4414-A60B-D20ADE861BB3@x9c.fr>
References: <81B704C0-2971-47D8-BB9E-3F259016AB92@x9c.fr> <6C3CFF1F-DD4B-4BE3-BF3E-C78DCFE6200D@math.nagoya-u.ac.jp>
To: caml-list users <caml-list@inria.fr>
X-Mailer: Apple Mail (2.1082)
X-Ovh-Tracer-Id: 4156259506956403488
X-Ovh-Remote: 82.216.3.22 (ip-22.net-82-216-3.versailles2.rev.numericable.fr)
X-Ovh-Local: 213.186.33.20 (ns0.ovh.net)
X-Spam-Check: DONE|U 0.5/N
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id p1I9Idm7017796
Subject: Re: [Caml-list] Definition of module synonyms


Le 18 févr. 2011 à 10:10, Jacques Garrigue a écrit :

> On 2011/02/18, at 17:30, forum@x9c.fr wrote:
> 
>> Dear list,
>> 
>> Following the goal of providing module synonyms (e. g. abbreviations for lazy
>> developers), it seemed natural to do something along the following lines:
>> 
>> 	module M : sig
>> 	  type t = A
>> 	  val x : t
>> 	end = struct
>> 	  type t = A
>> 	  let x = A
>> 	end
>> 	module S : sig
>> 	  type t = M.t = A
>> 	  include module type of M with type t := M.t
>> 	end = M
>> 
>> However, this is rejected with the following message:
> [...]
> 
> This was just a bug (or a misfeature) in 3.12.0.
> This has been fixed long ago in the 3.12 branch, and will work in 3.12.1.

Thanks for your quick answer, and sorry for noise.
I have so many versions of Caml installed that I easily mixup things and
forget to test with one given version...


Xavier Clerc


