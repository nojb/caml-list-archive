Return-Path: <SRS0=I+4H=UI=polytechnique.org=alan.schmitt@bounces.m4x.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 6E700E436E
	for <caml-list@sympa.inria.fr>; Tue, 29 Mar 2022 09:43:01 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=Pass smtp.pra=alan.schmitt@polytechnique.org; spf=Pass smtp.mailfrom=SRS0=I+4H=UI=polytechnique.org=alan.schmitt@bounces.m4x.org; spf=Pass smtp.helo=postmaster@mx1.polytechnique.org
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  alan.schmitt@polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=pra; client-ip=129.104.30.34;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="SRS0=I+4H=UI=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="alan.schmitt@polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  SRS0=I+4H=UI=polytechnique.org=alan.schmitt@bounces.m4x.org
  designates 129.104.30.34 as permitted sender)
  identity=mailfrom; client-ip=129.104.30.34;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="SRS0=I+4H=UI=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="SRS0=I+4H=UI=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  postmaster@mx1.polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=helo; client-ip=129.104.30.34;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="SRS0=I+4H=UI=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="postmaster@mx1.polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1";
  x-record-text="v=spf1 a -all"
IronPort-SDR: db9HOE3fLL2ByGjKQzCJIog5krdV4YECjveBiI8oT5mcj0sKiqwNlVhiPm25tfYvv7OgRma7OH
 ARHN6j/h07XteWjw1td+dzs4vgibpMPRSqe55vGFHTmsFf9RkQ/UG4HFduHW8CSNLHzBmpCWcF
 2L5FgSJxfIEQVuWWPQvIa+9y5EiuUrWJqNtXh75DGZqtGOxJZqkf95zlxsglp5YBtQ0elrcfmw
 Z6ra5MGMKYlwVQq9oGUNaknGQdqt12SF21j/6xEj50Q8p6WZc1FunMyvpjM7FV/n1TCiqUT5CB
 TGAgBNJ5h3JAAJFVrhxPVLHG
X-IPAS-Result: =?us-ascii?q?A0CWAQCPt0JimCIeaIFagRWCb1kGKBkBXgZXKwcIRIRUi?=
 =?us-ascii?q?QYJiAmBFoIVhiKGeIw2gREDTxABAwENLAEOBQECBAEBghKCbwQCAhcGNAmDd?=
 =?us-ascii?q?gIeBgEFMxMBAgQBAQEBAwIDAQEBAQEBAwEBBQEBAQIBAQIEBAETAQEBAQEBA?=
 =?us-ascii?q?QEJCwkHBgwFEA4FPGRkBIFLBIF0CwcBByUNgjUMDAMDAYNwBAIBGAEIBAY+J?=
 =?us-ascii?q?xQPAxQBBgMCBA0BFwEUCgMUARIUBoJqAYJ1IQQBCpJemkMaJRB6fzKBAYNPA?=
 =?us-ascii?q?QMCAQILAwEOCSaDc4ESUw0CFIEZhhQUQ0sBgwIJgRSCcgIHIBCBVUSBFYIpS?=
 =?us-ascii?q?gdugVABcAMIFwEBAQEBgR8BGwEBEUWCZIJlBJd9Jg4gEQcFAREwDRMBEwcEB?=
 =?us-ascii?q?QsHIgEBFA4sAgYCIQIKCwEKBRQcDgYEGwEBIgUGBQMDBwYtkXcCEA4DGg0CA?=
 =?us-ascii?q?Y1BgUGJIoJdkUAZYTQHg0yBOwYMh0BmgR2Mdogig3SBT4pmhl2QUHAhljwIG?=
 =?us-ascii?q?IIphXV8gRAJgX9ElA8bDQgYhRiBTiprYgEbAgwHMxowQ4I1ATMJRQEDAg0BA?=
 =?us-ascii?q?gIDAQIBAgkBAQJUdYZVhggDFoEEAQhIgXuBPoEmgSRRO4RkaD80AQEBAQEzA?=
 =?us-ascii?q?gYBCgEBAwmFYwEBBRMLAYkRLYIZAQE?=
IronPort-PHdr: A9a23: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
 IUDcI4XU5jVEqRZPpOcuDsz5qypzWXWqWlUjQ==
IronPort-Data: A9a23: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
 28JSw+/Lw==
IronPort-HdrOrdr: A9a23:b6yc86GpbbVAxnV9pLqE78eALOsnbusQ8zAXPiFKKSC9Hfb2qy
 nDpp4mPHzP6Qr5OktPpTnoAsDpKk80nqQY3WB+B9qfdTijkFTtBoBv54nvzlTbak7D398Y87
 xvN4x3CNiYNykesS8W2njbL+od
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-AV: E=Sophos;i="5.90,219,1643670000"; 
   d="scan'208,217";a="28817404"
X-MGA-submission: =?us-ascii?q?MDHZFMwZn2cK09fufnMz9BWkgWTcr+ANaepn0r?=
 =?us-ascii?q?rJSPOv32NCD259CW5/Y5wbJ8FRY8x/qZFZXGzRjxt4L9yzo5qm1SOHK5?=
 =?us-ascii?q?WiCViisab+UZXBcjsDrQne3h9+OGISwNOkCP/qMv4vqT/7Lwu8l4Z7Zj?=
 =?us-ascii?q?JmIUGjMVWceJXBRFWVcBVT9w=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 29 Mar 2022 09:43:00 +0200
Received: from set (cbg35-2-78-242-14-140.fbx.proxad.net [78.242.14.140])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id 1EE695605C5;
	Tue, 29 Mar 2022 09:42:59 +0200 (CEST)
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr
Date: Tue, 29 Mar 2022 09:42:58 +0200
Message-ID: <87r16l5hml.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Mar 29 09:42:59 2022 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.045321, queueID=9867F5605C6
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: multipart/alternative; boundary="==-=-="

--==-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: base64

SGVsbG8NCg0KSGVyZSBpcyB0aGUgbGF0ZXN0IE9DYW1sIFdlZWtseSBOZXdzLCBmb3IgdGhlIHdl
ZWsgb2YgTWFyY2ggMjIgdG8gMjksDQoyMDIyLg0KDQpUYWJsZSBvZiBDb250ZW50cw0K4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCnB5bWxfYmlu
ZGdlbjogYSBDTEkgYXBwIHRvIGdlbmVyYXRlIFB5dGhvbiBiaW5kaW5ncyBkaXJlY3RseSBmcm9t
IE9DYW1sIHZhbHVlIHNwZWNpZmljYXRpb25zDQpUYXJpZGVzIGlzIGhpcmluZyENCkZvciBEaXZl
cnNpdHkgYW5kIHRoZSBPQ2FtbCBDb21tdW5pdHk6IE91dHJlYWNoeSBTdW1tZXIgMjAyMg0KQ2Fx
dGkgMS44LjAgYW5kIHJlbGF0ZWQgbmV3cw0KRmlyc3QgcmVsZWFzZSBvZiBwcmJubWNuLWRhZ2dl
cg0KTWlyYWdlT1MgNC4wDQpPQ2FtbCA0LjE0LjAgaXMgcmVsZWFzZWQNCm9jYW1sLWluLXB5dGhv
bi4wLjEuMDogRWZmb3J0bGVzcyBQeXRob24gYmluZGluZ3MgZm9yIE9DYW1sIG1vZHVsZXMNCk9s
ZCBDV04NCg0KDQpweW1sX2JpbmRnZW46IGEgQ0xJIGFwcCB0byBnZW5lcmF0ZSBQeXRob24gYmlu
ZGluZ3MgZGlyZWN0bHkgZnJvbSBPQ2FtbCB2YWx1ZSBzcGVjaWZpY2F0aW9ucw0K4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToNCiAg
PGh0dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcvdC9hbm4tcHltbC1iaW5kZ2VuLWEtY2xpLWFwcC10
by1nZW5lcmF0ZS1weXRob24tYmluZGluZ3MtZGlyZWN0bHktZnJvbS1vY2FtbC12YWx1ZS1zcGVj
aWZpY2F0aW9ucy84Nzg2LzY+DQoNCg0KUnlhbiBNb29yZSBhbm5vdW5jZWQNCuKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQpOZXcg
cmVsZWFzZXMNCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjA0KDQogIFZlcnNp
b24gMC4zLjAgYW5kIDAuMy4xIGFyZSBub3cgYXZhaWxhYmxlIG9uIFtHaXRIdWJdLiAgMC4zLjAg
aGFzIGJlZW4NCiAgbWVyZ2VkIGludG8gb3BhbSwgYW5kIGEgUFIgZm9yIDAuMy4xIGhhcyBiZWVu
IG9wZW5lZC4gIFRoZSBbY2hhbmdlDQogIGxvZ10gaGFzIG1vcmUgZGV0YWlscyBhYm91dCB0aGUg
Y2hhbmdlcy4NCg0KDQpbR2l0SHViXSA8aHR0cHM6Ly9naXRodWIuY29tL21vb3Jlcnlhbi9vY2Ft
bF9weXRob25fYmluZGdlbi90YWdzPg0KDQpbY2hhbmdlIGxvZ10NCjxodHRwczovL2dpdGh1Yi5j
b20vbW9vcmVyeWFuL29jYW1sX3B5dGhvbl9iaW5kZ2VuL2Jsb2IvbWFpbi9DSEFOR0VMT0cubWQ+
DQoNCg0KQmluZGluZyB0dXBsZXMNCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKV
jOKVjOKVjA0KDQogIFlvdSBjYW4gbm93IGJpbmQgdHVwbGVzIGRpcmVjdGx5LiAgSGVyZSdzIGEg
UHl0aG9uIGZ1bmN0aW9uIHRoYXQgdGFrZXMNCiAgdHdvIGxpc3RzIG9mIHBvaW50cyAod2hlcmUg
ZWFjaCAicG9pbnQiIGlzIGEgdHVwbGUgbGlrZSBgKHgsIHkpJykgYW5kDQogIGFkZHMgdGhlbSB0
b2dldGhlcg0KDQogIOKUjOKUgOKUgOKUgOKUgA0KICDilIIgZGVmIGFkZChwb2ludHMxLCBwb2lu
dHMyKToNCiAg4pSCICAgICByZXR1cm4gWyh4MSArIHkxLCB4MiArIHkyKSBmb3IgKHgxLCB4Miks
ICh5MSwgeTIpIGluIHppcChwb2ludHMxLCBwb2ludHMyKV0NCiAg4pSU4pSA4pSA4pSA4pSADQoN
CiAgQW5kIHlvdSBjb3VsZCBiaW5kIGl0IHVzaW5nIHR1cGxlcyBmcm9tIHRoZSBPQ2FtbCBzaWRl
IGFzIHdlbGwuDQoNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiB2YWwgYWRkIDogcG9pbnRzMToo
aW50ICogaW50KSBsaXN0IC0+IHBvaW50czI6KGludCAqIGludCkgbGlzdCAtPiB1bml0IC0+IChp
bnQgKiBpbnQpIGxpc3QNCiAg4pSU4pSA4pSA4pSA4pSADQoNCiAgTm90ZSB0aGVyZSBhcmUgc29t
ZSByZXN0cmljdGlvbnMgcmVnYXJkaW5nIHR1cGxlcywgd2hpY2ggeW91IGNhbiByZWFkDQogIGFi
b3V0IFtoZXJlXSwgW2hlcmVdLCBvciBbaGVyZV0uDQoNCg0KW2hlcmVdIDxodHRwczovL21vb3Jl
cnlhbi5naXRodWIuaW8vb2NhbWxfcHl0aG9uX2JpbmRnZW4vdHVwbGVzLz4NCg0KW2hlcmVdDQo8
aHR0cHM6Ly9naXRodWIuY29tL21vb3Jlcnlhbi9vY2FtbF9weXRob25fYmluZGdlbi9ibG9iL21h
aW4vZXhhbXBsZXMvUkVBRE1FLm1kPg0KDQpbaGVyZV0NCjxodHRwczovL2dpdGh1Yi5jb20vbW9v
cmVyeWFuL29jYW1sX3B5dGhvbl9iaW5kZ2VuL2Jsb2IvbWFpbi9DSEFOR0VMT0cubWQjMDMwLTIw
MjItMDMtMTg+DQoNCg0KQXR0cmlidXRlcw0K4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM
DQoNCiAgWW91IGNhbiB1c2UgYXR0cmlidXRlcyBvbiB2YWx1ZSBzcGVjaWZpY2F0aW9ucy4gIEN1
cnJlbnRseSB0aGUgb25seQ0KICBvbmUgc3VwcG9ydGVkIGlzIGBweV9mdW5fbmFtZScsIHdoaWNo
IGFsbG93cyB5b3UgdG8gZGVjb3VwbGUgdGhlDQogIFB5dGhvbiBtZXRob2QgbmFtZSBhbmQgdGhl
IGdlbmVyYXRlZCBPQ2FtbCBmdW5jdGlvbiBuYW1lLg0KDQogIEFzIGFuIGV4YW1wbGUsIHRha2Ug
dGhlIGZvbGxvd2luZyBQeXRob24gZnVuY3Rpb24sIHdoaWNoIGFkZHMgdG8NCiAgInRoaW5ncyIu
DQoNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiBkZWYgYWRkKHgsIHkpOg0KICDilIIgICAgIHJl
dHVybiB4ICsgeQ0KICDilJTilIDilIDilIDilIANCg0KICBZb3UgY291bGQgYmluZCBtdWx0aXBs
ZSBPQ2FtbCBmdW5jdGlvbnMgdG8gdGhpcyBzaW5nbGUgZnVuY3Rpb24gbm93Lg0KDQogIOKUjOKU
gOKUgOKUgOKUgA0KICDilIIgdmFsIGFkZF9pbnQgOiB4OmludCAtPiB5OmludCAtPiB1bml0IC0+
IGludA0KICDilIIgW0BAcHlfZnVuX25hbWUgYWRkXQ0KICDilIIgDQogIOKUgiB2YWwgYWRkX2Zs
b2F0IDogeDpmbG9hdCAtPiB5OmZsb2F0IC0+IHVuaXQgLT4gZmxvYXQNCiAg4pSCIFtAQHB5X2Z1
bl9uYW1lIGFkZF0NCiAg4pSCIA0KICDilIIgdmFsIGFkZF9zdHJpbmcgOiB4OnN0cmluZyAtPiB5
OnN0cmluZyAtPiB1bml0IC0+IHN0cmluZw0KICDilIIgW0BAcHlfZnVuX25hbWUgYWRkXQ0KICDi
lJTilIDilIDilIDilIANCg0KDQpQeXRob24gbWFnaWMgbWV0aG9kcw0K4pSE4pSE4pSE4pSE4pSE
4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSEDQoNCiAgVGhpcyBp
cyBhbHNvIG5pY2UgZm9yIGJpbmRpbmcgUHl0aG9uIFttYWdpYyBtZXRob2RzXS4gRm9yIGV4YW1w
bGUsIHlvdQ0KICBkb24ndCBoYXZlIHRvIHVzZSBgX19pbml0X18nIGFzIHRoZSBuYW1lIG9mIHRo
ZSBPQ2FtbCBmdW5jdGlvbiB5b3UgdXNlDQogIHRvIG1ha2UgaW5zdGFuY2VzIG9mIGEgUHl0aG9u
IGNsYXNzLiAgWW91IGNhbiBiaW5kIGl0IHRvIGEgbW9yZQ0KICBuYXR1cmFsIG5hbWUgbGlrZSBg
Y3JlYXRlJyBvciBgbWFrZScuDQoNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiB2YWwgY3JlYXRl
IDogbmFtZTpzdHJpbmcgLT4gYWdlOmludCAtPiB1bml0IC0+IHQNCiAg4pSCIFtAQHB5X2Z1bl9u
YW1lIF9faW5pdF9fXQ0KICDilJTilIDilIDilIDilIANCg0KDQpbbWFnaWMgbWV0aG9kc10NCjxo
dHRwczovL2RvY3MucHl0aG9uLm9yZy8zL3JlZmVyZW5jZS9kYXRhbW9kZWwuaHRtbCNzcGVjaWFs
bmFtZXM+DQoNCg0KVXNpbmcgUHl0eXBlcy5weW9iamVjdCBkaXJlY3RseQ0K4pWM4pWM4pWM4pWM
4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM
4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWMDQoNCiAgU29tZXRpbWVzIHlvdSBtYXkgbm90IHdhbnQg
dG8gYm90aGVyIGNvbnZlcnRpbmcgUHl0aG9uIHR5cGVzIHRvIG5vcm1hbA0KICBPQ2FtbCB0eXBl
cyBhdCBhbGwuICBZb3UgY2FuIGRvIHRoYXQgbm93IGluIHZhbHVlIHNwZWNpZmljYXRpb25zIGJ5
DQogIHVzaW5nIHRoZSBgUHl0eXBlcy5weW9iamVjdCcgYW5kIGBQeS5PYmplY3QudCcgdHlwZXMg
ZGlyZWN0bHkuDQoNCg0KRmV3ZXIgZGVwZW5kZW5jaWVzDQrilYzilYzilYzilYzilYzilYzilYzi
lYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYwNCg0KICBgcmUnIGlzIG5vdyB1c2VkIGlu
c3RlYWQgb2YgYHJlMicsIHdoaWNoIGRyb3BzIHRoZSBudW1iZXIgb2YNCiAgZGVwZW5kZW5jaWVz
IHRoYXQgbmVlZCB0byBiZSBpbnN0YWxsZWQgYnkgYWJvdXQgaGFsZi4gIEFkZGl0aW9uYWxseSwN
CiAgYGNvcmUnLCBgY29yZV9iZW5jaCcsIGFuZCBgYmlzZWN0X3BweCcgZG9uJ3QgbmVlZCB0byBi
ZSBpbnN0YWxsZWQgaWYNCiAgeW91IHdhbnQgdG8gaW5zdGFsbCBgcHltbF9iaW5kZ2VuJyBkaXJl
Y3RseSBmcm9tIHRoZSBnaXQgcmVwb3NpdG9yeSwNCiAgd2hpY2ggZ3JlYXRseSBjdXRzIHRoZSBy
ZXF1aXJlZCBkZXBlbmRlbmNpZXMgaW4gdGhpcyBjYXNlLg0KDQogIFRoYW5rcyBhZ2FpbiB0byBV
bml4SnVua2llIGZvciBzcHVycmluZyBtYW55IG9mIHRoZXNlIHVwZGF0ZXMhDQoNCg0KVGFyaWRl
cyBpcyBoaXJpbmchDQrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZANCg0KICBBcmNoaXZlOiA8aHR0cHM6Ly9kaXNjdXNzLm9jYW1sLm9yZy90L3Rh
cmlkZXMtaXMtaGlyaW5nLzk1NTMvMT4NCg0KDQpUaG9tYXMgR2F6YWduYWlyZSBhbm5vdW5jZWQN
CuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEZvbGxvd2luZyB0aGUgcmVjZW50IGFubm91
bmNlbWVudCBhYm91dCBUYXJpZGVzIChqb2luaW5nIGZvcmNlcyB3aXRoDQogIFtPQ2FtbCBMYWJz
XSBhbmQgW1NlZ2ZhdWx0IFN5c3RlbV0pLCB3ZSBhcmUgbm93IGxvb2tpbmcgdG8gZXhwYW5kIG91
cg0KICB0ZWFtIHdpdGggZXhwZXJpZW5jZWQgc29mdHdhcmUgZW5naW5lZXJzLCBjb21wYXNzaW9u
YXRlIHRlYW0gbGVhZHMgYW5kDQogIGV4cGVydHMgaW4gc29mdHdhcmUgY29uc3VsdGluZyBzZXJ2
aWNlcy4gT3VyIGFtYml0aW9uIGlzIHRvIGJyaW5nDQogIE9DYW1sIHRvIGEgdmFzdCBzZXQgb2Yg
bmV3IGRldmVsb3BlcnMgYW5kIGluZHVzdHJpZXMuIFdlIHdhbnQgdG8gbWFrZQ0KICBkZXZlbG9w
ZXJzIG1vcmUgcHJvZHVjdGl2ZSBieSBzcGVuZGluZyBsZXNzIHRpbWUgb24gZml4aW5nIGJ1Z3Mg
YW5kDQogIG1vcmUgb24gd3JpdGluZyBuZXcgZmVhdHVyZXMuIEFuZCB3ZSB3YW50IHRoZSBzb2Z0
d2FyZSBpbmR1c3RyeSB0bw0KICBidWlsZCBtb3JlIHJvYnVzdCBhbmQgcGVyZm9ybWFudCBzeXN0
ZW1zIHRoYXQgY2FuIGxhc3QgZm9yIGRlY2FkZXMuDQoNCiAgV2UgYXJlIGxvb2tpbmcgZm9yOg0K
DQogIOKAoiBFeHBlcmllbmNlZCBbU29mdHdhcmUgRW5naW5lZXIocyldIHRvIHRha2UgcGFydCBp
biB0aGUgZGV2ZWxvcG1lbnQNCiAgICBvZiBJcm1pbi4gWW91IHdpbGwgYmUgcGFydCBvZiB0aGUg
dGVhbSB0aGF0IGRlc2lnbnMsIGJ1aWxkcyBhbmQNCiAgICBzaGlwcyBJcm1pbiBsaWJyYXJpZXMg
YW5kIGFwcGxpY2F0aW9ucyB0byBvdXIgY29tbXVuaXR5IGFuZA0KICAgIGN1c3RvbWVycy4NCiAg
4oCiIFtUZWFtIExlYWQocyldIHdobyBjYXJlcyBhYm91dCBtb3RpdmF0aW5nIHRoZWlyIHRlYW0g
bWVtYmVycywNCiAgICBzdXBwb3J0aW5nIHRoZWlyIGdyb3d0aCBhbmQgZGV2ZWxvcG1lbnQgYW5k
IHN1Y2Nlc3NmdWxseSBkZWxpdmVyaW5nDQogICAgdGhlIHRlYW0ncyBvYmplY3RpdmVzIG9uIHRp
bWUuDQogIOKAoiBBIFtIZWFkIG9mIENvbnN1bHRpbmcgU2VydmljZXNdIHRvIGRpdmVyc2lmeSBv
dXIgdGVjaG5pY2FsIHRlYW1zIGFuZA0KICAgIGNvbW1lcmNpYWwgc2VydmljZXMgcG9ydGZvbGlv
LiBZb3UnbGwgYmUgdGhlIGZpcnN0IGhpcmUgZm9yIHRoaXMNCiAgICBicmFuZCBuZXcgZGVwYXJ0
bWVudCBhbmQgd2lsbCBoYXZlIHRoZSBvcHBvcnR1bml0eSB0byBoZWxwIHVzIGJ1aWxkDQogICAg
b3VyIHNlcnZpY2VzIHN0cnVjdHVyZSBmcm9tIHNjcmF0Y2gsIGluY2x1ZGluZyBvdXIgc3RyYXRl
Z3ksDQogICAgcHJvY2Vzc2VzLCB0b29scywgYW5kIHRlYW0uDQoNCiAgV2UgYXJlIGFsd2F5cyBs
b29raW5nIGZvciBncmVhdCBPQ2FtbCBlbnRodXNpYXN0cyB0byBqb2luIG91ciB0ZWFtLCBzbw0K
ICBldmVuIGlmIHRoZXNlIGpvYiBkZXNjcmlwdGlvbnMgZG8gbm90IGZpdCB5b3VyIHByb2ZpbGUg
cHJlY2lzZWx5LCB5b3UNCiAgYXJlIHdlbGNvbWUgdG8gc2VuZCB1cyBbYSBzcG9udGFuZW91cyBh
cHBsaWNhdGlvbl0hDQoNCg0KW09DYW1sIExhYnNdDQo8aHR0cHM6Ly90YXJpZGVzLmNvbS9ibG9n
LzIwMjItMDEtMjctb2NhbWwtbGFicy1qb2lucy10YXJpZGVzPg0KDQpbU2VnZmF1bHQgU3lzdGVt
XQ0KPGh0dHBzOi8vdGFyaWRlcy5jb20vYmxvZy8yMDIyLTAzLTAxLXNlZ2ZhdWx0LXN5c3RlbXMt
am9pbnMtdGFyaWRlcz4NCg0KW1NvZnR3YXJlIEVuZ2luZWVyKHMpXQ0KPGh0dHBzOi8vdGFyaWRl
cy5jb20vam9icy9zZW5pb3Itc29mdHdhcmUtZW5naW5lZXI+DQoNCltUZWFtIExlYWQocyldIDxo
dHRwczovL3RhcmlkZXMuY29tL2pvYnMvdGVhbS1sZWFkLWVuZ2luZWVyaW5nPg0KDQpbSGVhZCBv
ZiBDb25zdWx0aW5nIFNlcnZpY2VzXQ0KPGh0dHBzOi8vdGFyaWRlcy5jb20vam9icy9oZWFkLW9m
LWNvbnN1bHRpbmctc2VydmljZXM+DQoNClthIHNwb250YW5lb3VzIGFwcGxpY2F0aW9uXQ0KPGh0
dHBzOi8vdGFyaWRlcy5jb20vam9icy9zcG9udGFuZW91cy1hcHBsaWNhdGlvbj4NCg0KDQpGb3Ig
RGl2ZXJzaXR5IGFuZCB0aGUgT0NhbWwgQ29tbXVuaXR5OiBPdXRyZWFjaHkgU3VtbWVyIDIwMjIN
CuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6DQogIDxodHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3Qv
Zm9yLWRpdmVyc2l0eS1hbmQtdGhlLW9jYW1sLWNvbW11bml0eS1vdXRyZWFjaHktc3VtbWVyLTIw
MjIvOTIzNC82Pg0KDQoNCkRlZXAgaW4gdGhpcyB0aHJlYWQsIEF5YSBhbm5vdW5jZWQNCuKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEBwaXRhZyBhbmQg
SSBoYXZlIHJlc3VibWl0dGVkIHRoZSBQUFggZGVyaXZlcnMgcHJvamVjdCBmb3IgdGhpcyBTdW1t
ZXINCiAgMjAyMiByb3VuZDogKkV4cGFuZCBPQ2FtbCdzIGxpYnJhcnkgb2Ygc3RhbmRhcmQgZGVy
aXZlcnMqISBUaGlzIGlzIHRoZQ0KICBzYW1lIHByb2plY3QgSSB3YXMgdGhlIGludGVybiBmb3Ig
dGhpcyBwYXN0IFdpbnRlciAyMDIyIHJvdW5kLCB3aGVyZQ0KICB0aGUgZ29hbCBpcyB0byBidWls
ZCB1cCBhIFtzdGFuZGFyZCBkZXJpdmVyc10gbGlicmFyeSwgbGlrZQ0KICBgcHB4X2Rlcml2aW5n
JywgdXNpbmcgdGhlIHVwZGF0ZWQgYHBweGxpYicgQVBJLg0KDQogIEknbSBleGNpdGVkIHRvIGJl
IHN1cHBvcnRpbmcgQHBpdGFnIHdpdGggbWVudG9yaW5nLCBhbmQgZm9yIHRoZQ0KICBvcHBvcnR1
bml0eSB0byBzdGF5IGludm9sdmVkIG5vdyB0aGF0IG15IGludGVybnNoaXAgaGFzIGVuZGVkIDpz
bWlsZXk6DQoNCg0KW3N0YW5kYXJkIGRlcml2ZXJzXSA8aHR0cHM6Ly9naXRodWIuY29tL29jYW1s
LXBweC9zdGFuZGFyZF9kZXJpdmVycz4NCg0KDQpDYXF0aSAxLjguMCBhbmQgcmVsYXRlZCBuZXdz
DQrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZANCg0KICBBcmNoaXZlOg0KICA8aHR0cHM6Ly9k
aXNjdXNzLm9jYW1sLm9yZy90L2Fubi1jYXF0aS0xLTgtMC1hbmQtcmVsYXRlZC1uZXdzLzk1NjEv
MT4NCg0KDQoiUGV0dGVyIEEuIFVya2VkYWwgYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIANCg0KICBJIGFtIGhhcHB5IHRvIGFubm91bmNlIHRoZSBzZWNvbmQgcmVsZWFzZSBv
ZiBbQ2FxdGldIHRoaXMgeWVhci4gVGhlDQogIHJlYXNvbiBmb3IgdGhlIHF1aWNrIHN1Y2Nlc3Np
b24gaXMgcGFydGx5IGFuIGFkanVzdG1lbnQgdG8gdGhlIFtuZXcNCiAgQVBJIGZvciByZXF1ZXN0
IGNvbnN0cnVjdGlvbl0gYW5kIHBhcnRseSB0aGF0IFttYXRjaGFibGUgZXJyb3INCiAgY29uZGl0
aW9uc10gZGlkIG5vdCBtYWtlIGl0IGludG8gdGhlIHByZXZpb3VzIHJlbGVhc2UuICBZb3UgY2Fu
IHNlZQ0KICB0aGUgZnVsbCByZWxlYXNlIG5vdGVzIGJlbG93Lg0KDQogIEkgd291bGQgYWxzbyBs
aWtlIHRvIHRoYW5rIFtPQ2FtbCBTb2Z0d2FyZSBGb3VuZGF0aW9uXSBmb3Igc3BvbnNvcmluZw0K
ICBteSBlZmZvcnRzIG9uIHRoZSBDYXF0aSBwcm9qZWN0IHRoaXMgeWVhciwgYWxzbyBpbmNsdWRp
bmcgbW9zdCBvZiB0aGUNCiAgd29yayB0aGF0IHdlbnQgaW50byB0aGUgcHJldmlvdXMgcmVsZWFz
ZS4NCg0KICBPbmUgW2ZlYXR1cmUgaW4gcHJvZ3Jlc3NdIGlzIGEgbmV3IGRyaXZlciBiYXNlZCBv
biB0aGUgcHVyZS1PQ2FtbA0KICBbcGd4XSB3aGljaCBzaG91bGQgbWFrZSBpdCBwb3NzaWJsZSwg
d2l0aCBzb21lIGFkZGl0aW9uYWwgY2hhbmdlcyB0bw0KICB0aGUgd2F5IGRyaXZlcnMgYXJlIGxv
YWRlZCwgdG8gdGFyZ2V0IE1pcmFnZU9TLiBJIGFtIG5vdGUgc3VyZSBpZiB0aGlzDQogIGNhbiBi
ZSBkb25lIGluIGEgbWlub3IgcmVsZWFzZSBvciB3aWxsIHJlcXVpcmUgYSBDYXF0aSAyIGJyYW5j
aC4NCg0KDQpbQ2FxdGldIDxodHRwczovL2dpdGh1Yi5jb20vcGF1cmtlZGFsL29jYW1sLWNhcXRp
Pg0KDQpbbmV3IEFQSSBmb3IgcmVxdWVzdCBjb25zdHJ1Y3Rpb25dDQo8aHR0cHM6Ly9wYXVya2Vk
YWwuZ2l0aHViLmlvL29jYW1sLWNhcXRpL2NhcXRpL0NhcXRpX3JlcXVlc3QvSW5maXgvaW5kZXgu
aHRtbD4NCg0KW21hdGNoYWJsZSBlcnJvciBjb25kaXRpb25zXQ0KPGh0dHBzOi8vZ2l0aHViLmNv
bS9wYXVya2VkYWwvb2NhbWwtY2FxdGkvaXNzdWVzLzcyPg0KDQpbT0NhbWwgU29mdHdhcmUgRm91
bmRhdGlvbl0gPGh0dHBzOi8vb2NhbWwtc2Yub3JnPg0KDQpbZmVhdHVyZSBpbiBwcm9ncmVzc10N
CjxodHRwczovL2dpdGh1Yi5jb20vcGF1cmtlZGFsL29jYW1sLWNhcXRpL2lzc3Vlcy8zOD4NCg0K
W3BneF0gPGh0dHBzOi8vZ2l0aHViLmNvbS9hcmVuYWRvdGlvL3BneD4NCg0KUmVsZWFzZSBOb3Rl
cw0K4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWMDQoNCiAgTmV3IGZlYXR1
cmVzOg0KDQogIOKAoiBBIG1hdGNoYWJsZSByZXByZXNlbnRhdGlvbiBvZiBjb21tb24gY2F1c2Vz
IG9mIGVycm9ycyBvbiB0aGUNCiAgICBkYXRhYmFzZSBzaWRlIGlzIG5vdyBhdmFpbGFibGUsIHdp
dGggbGltaXRhdGlvbnMuICBJdCBmb2N1c2VzIG9uDQogICAgY29uZGl0aW9ucyB3aGljaCBzZWVt
IG1vc3QgbGlrZWx5IHVzZWZ1bCB0byBoYW5kbGUuICBBdCB0aGUgbW9tZW50DQogICAgd2UgbGFj
ayBleHRlbmRlZCBlcnJvciBjb2RlcyBmcm9tIFNRTGl0ZTMgbmVlZGVkIHRvIG1ha2UgdGhlIGNh
dXNlDQogICAgZnVsbHkgcHJlY2lzZS4NCg0KICDigKIgRXhwb3NlIHRoZSB1bmRlcmx5aW5nIGVy
cm9yIGRldGFpbHMgZnJvbSBkYXRhYmFzZSBjbGllbnQgbGlicmFyaWVzLg0KICAgIFRoaXMgaXMg
bWVhbnQgdG8gYmUgdXNlIGFzIGEgbGFzdCByZXNvcnQsIGFuZCByZXF1aXJlcyBkaXJlY3RseQ0K
ICAgIGxpbmtpbmcgd2l0aCB0aGUgcmVsZXZhbnQgZHJpdmVycy4NCg0KICDigKIgQSBzZWNvbmQg
c2V0IG9mIHJlcXVlc3QgY29uc3RydWN0aW9uIG9wZXJhdG9ycyBgLT4uJywgYC0+PycsIGAtPiEn
LA0KICAgIGFuZCBgLT4qJyB3ZXJlIGludHJvZHVjZWQgYWZ0ZXIgZXhwZXJpZW5jZSB3aXRoIGNv
bnZlcnRpbmcgZXhpc3RpbmcNCiAgICBjb2RlLiAgR2l2ZW4gdGhlIHBhcmFtZXRlciBhbmQgcmVz
dWx0IHR5cGUgdGhleSByZXR1cm4gYSBmdW5jdGlvbg0KICAgIHdoaWNoIGNvbnN0cnVjdHMgYSBy
ZXF1ZXN0IGRpcmVjdGx5IGZyb20gYSBxdWVyeSBzdHJpbmcuICBBdm9pZGluZw0KICAgIHRoZSBu
ZWVkIHRvIGNvbXBvc2Ugd2l0aCBgQDotJyBzaW1wbGlmaWVzIGxvY2FsIG9wZW5zIGFuZCB1c2Fn
ZSB3aXRoDQogICAgYExpc3QubWFwJyBldGMuDQoNCiAg4oCiIEVudmlyb25tZW50IHZhcmlhYmxl
cyBhcmUgbm93IGV4cGFuZGVkIGluIHRoZSBkZWJ1ZyBsb2cgd2hlbiB1c2luZw0KICAgIHRoZSBu
ZXcgcmVxdWVzdCBjb25zdHJ1Y3RvcnMgaW50cm9kdWNlZCBpbiAxLjcuMC4NCg0KICDigKIgQSBu
ZXcgYD90d2Vha3NfdmVyc2lvbicgY29ubmVjdGlvbiBwYXJhbWV0ZXIgaGFzIGJlZW4gYWRkZWQg
dG8NCiAgICBjb250cm9sIHdoZW4gdGhlIGNsaWVudCBpcyByZWFkeSB0byBhZGFwdCB0byBjaGFu
Z2VzIGluIGRhdGFiYXNlDQogICAgc2Vzc2lvbiBwYXJhbWV0ZXJzIG9yIG90aGVyIGFkanVzdG1l
bnRzIG9mIHRoZSBpbnRlcmFjdGlvbiB3aXRoDQogICAgc3BlY2lmaWMgZGF0YWJhc2Ugc3lzdGVt
cy4gW1tNb3JlIGRldGFpbHMgYXZhaWxhYmxlIGluIHRoZQ0KICAgIGRvY3VtZW50YXRpb24uXV0N
Cg0KICDigKIgRW5hYmxlIGZvcmVpZ24ga2V5IGNvbnN0cmFpbnQgY2hlY2tzIGZvciBTUUxpdGUz
IHN0YXJ0aW5nIGF0IHR3ZWFrcw0KICAgIHZlcnNpb24gMS43Lg0KDQogIEZpeGVzOg0KDQogIOKA
oiBGaXhlZCBkZWJ1ZyBsb2dnaW5nIHRvIHBhc3MgdGhlIGNvcnJlY3QgZHJpdmVyIGluZm8gdG8g
dGhlIHF1ZXJ5DQogICAgY2FsbGJhY2sgaW5zdGVhZCBvZiBhIGR1bW15IGRyaXZlciBpbmZvIHdo
aWNoIHdvdWxkIGNhdXNlIGEgZmFpbHVyZQ0KICAgIGlmIHVuc3VwcG9ydGVkLg0KDQogIERlcHJl
Y2F0aW9uczoNCg0KICDigKIgVGhlIGAtLT4nIG9wZXJhdG9yIHdhcyByZW5hbWVkIHRvIGAtLT4h
Jywgd2l0aCBhIGRlcHJlY2F0ZWQgYWxpYXMsDQogICAgZm9yIGNvbnNpc3RlbmN5IHdpdGggdGhl
IG5ldyBgLT4hJyBvcGVyYXRvci4NCg0KICDigKIgVGhlIG9sZCBjb252ZW5pZW5jZSBpbnRlcmZh
Y2UgZm9yIGNyZWF0aW5nIHJlcXVlc3RzIGhhcyBiZWVuDQogICAgZGVwcmVjYXRlZCBpbiBmYXZv
dXIgb2YgdGhlIG5ldyBpbmZpeCBvcGVyYXRvcnMgYW5kIHRoZSBuZXcgcXVlcnkNCiAgICB0ZW1w
bGF0ZSBwYXJzZXIuDQoNCiAg4oCiIERvY3VtZW50ZWQtb25seSBkZXByZWNhdGlvbnMgb2YgYENh
cXRpX3NxbF9pbycsIGBDYXF0aV9sd3Rfc3FsX2lvJywNCiAgICBhbmQgYENhcXRpX2FzeW5jX3Nx
bF9pbycgaGF2ZSBiZWVuIGFubm90YXRlZC4NCg0KDQpbTW9yZSBkZXRhaWxzIGF2YWlsYWJsZSBp
biB0aGUgZG9jdW1lbnRhdGlvbi5dDQo8aHR0cHM6Ly9wYXVya2VkYWwuZ2l0aHViLmlvL29jYW1s
LWNhcXRpL2NhcXRpL3R3ZWFrcy5odG1sPg0KDQoNCkZpcnN0IHJlbGVhc2Ugb2YgcHJibm1jbi1k
YWdnZXINCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6
DQogIDxodHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3QvYW5uLWZpcnN0LXJlbGVhc2Utb2YtcHJi
bm1jbi1kYWdnZXIvOTMxMS8yPg0KDQoNCklnYXJuaWVyIGFubm91bmNlZA0K4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCiAgSSdtIHByb3Vk
IHRvIGFubm91bmNlIHRoZSByZWxlYXNlIG9mIHZlcnNpb24gMC4wLjIgb2YNCiAgW3ByYm5tY24t
ZGFnZ2VyXS4NCg0KICBUaGlzIHZlcnNpb24gYWRkcyBTZXF1ZW50aWFsIE1vbnRlLUNhcmxvLCBh
LmsuYS4gW3BhcnRpY2xlDQogIGZpbHRlcnNdLWJhc2VkIGluZmVyZW5jZSB0byB0aGUgbGlicmFy
eS4NCg0KICBIZXJlJ3MgdGhlIGZ1bGwgY2hhbmdlbG9nOg0KICDigKIgRGVwZW5kZW5jeTogYHBy
Ym5tY24tc3RhdHMuMC4wLjMnIC0+IGBwcmJubWNuLXN0YXRzLjAuMC40Jw0KICDigKIgQWRkIGJl
dGEgZGlzdHJpYnV0aW9uIHRvIEdzbCBzYW1wbGVycw0KICDigKIgUmVmYWN0b3IgQ3BzIG1vbmFk
DQogIOKAoiBBZGQgU01DIGluZmVyZW5jZQ0KICDigKIgU2ltcGxpZnkgaGFuZGxlciB0eXBlLCBt
b2R1bGFyaXplIGVmZmVjdCBkZWZpbml0aW9ucyBhd2F5IGZyb20NCiAgICBDcHNfbW9uYWQNCiAg
4oCiIEZpeCB0eXBvOiBiZXJub3VpbGxpIC0+IGJlcm5vdWxsaSAocmVwb3J0IGJ5IEBuaWxzYmVj
a2VyKQ0KDQogIEkgYWxzbyB3cm90ZSB0aGUgZm9sbG93aW5nIGFydGljbGU6IFtBcHBseWluZyBT
ZXF1ZW50aWFsIE1vbnRlLUNhcmxvDQogIHRvIHRpbWUgc2VyaWVzIGZvcmVjYXN0aW5nXSBJdCBj
b250YWlucyBzb21lIHVzZSBjYXNlcyBmb3IgdGhlDQogIGxpYnJhcnksIEkgaG9wZSBzb21lIGZp
bmQgaXQgZnVuIDopDQoNCiAgVG8gY29uY2x1ZGUgdGhpcyBwb3N0LCBhbmQgYXMgYSBwYXJ0aWFs
IGFuc3dlciB0byBAZ2FzY2hlICdzDQogIFtxdWVzdGlvbl0gaW4gYW4gb2xkZXIgdGhyZWFkLCBJ
IGJlbGlldmUgdGhhdCB1bmxpa2Ugc29tZSBvdGhlcg0KICBpbmZlcmVuY2UgdGVjaG5pcXVlcywg
c2luZ2xlLXNob3QgY29udGludWF0aW9ucyBhcmUgZW5vdWdoIHRvDQogIGltcGxlbWVudCBTTUMu
IFdpdGhvdXQgZ2V0dGluZyBpbnRvIHRoZSBkZXRhaWxzLCB0aGUgaW1wbGVtZW50YXRpb24gaXMN
CiAgdmVyeSByZW1pbmlzY2VudCBvZiB0aGF0IG9mIGxpZ2h0d2VpZ2h0IHRocmVhZGluZyBsaWJy
YXJpZXMuIEkgbG9vaw0KICBmb3J3YXJkIHRvIGV4cGVyaW1lbnQgd2l0aCBhIGZpYnJlLWJhc2Vk
IGltcGxlbWVudGF0aW9uIQ0KDQoNCltwcmJubWNuLWRhZ2dlcl0gPGh0dHBzOi8vZ2l0aHViLmNv
bS9pZ2Fybmllci9wcmJubWNuLWRhZ2dlcj4NCg0KW3BhcnRpY2xlIGZpbHRlcnNdIDxodHRwczov
L2VuLndpa2lwZWRpYS5vcmcvd2lraS9QYXJ0aWNsZV9maWx0ZXI+DQoNCltBcHBseWluZyBTZXF1
ZW50aWFsIE1vbnRlLUNhcmxvIHRvIHRpbWUgc2VyaWVzIGZvcmVjYXN0aW5nXQ0KPGh0dHA6Ly9w
cm9iYW5vbWljb24ueHl6L2Jsb2cvd2luZF9wb3dlcl9mb3JlY2FzdC5odG1sPg0KDQpbcXVlc3Rp
b25dDQo8aHR0cHM6Ly9kaXNjdXNzLm9jYW1sLm9yZy90L211bHRpLXNob3QtY29udGludWF0aW9u
cy1nb25lLWZvcmV2ZXIvOTA3Mi81Pg0KDQoNCk1pcmFnZU9TIDQuMA0K4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZTogPGh0dHBzOi8vZGlzY3Vzcy5vY2Ft
bC5vcmcvdC9hbm4tbWlyYWdlb3MtNC0wLzk1OTgvMT4NCg0KDQpUaG9tYXMgR2F6YWduYWlyZSBh
bm5vdW5jZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogICpPbiBiZWhhbGYgb2YgdGhl
IE1pcmFnZU9TIHRlYW0sIEkgYW0gZGVsaWdodGVkIHRvIGFubm91bmNlIHRoZQ0KICByZWxlYXNl
IG9mIE1pcmFnZU9TIDQuMC4wISogSSdkIGxpa2UgdG8gc2VuZCBzcGVjaWFsIHRoYW5rcyB0bw0K
ICBAZGlub3NhdXJlIGFuZCBATG9ydGV4IHdobyBkcm92ZSB0aGF0IHJlbGVhc2UgZm9yd2FyZCBm
b3IgbXVsdGlwbGUNCiAgeWVhcnMuDQoNCiAgU2luY2UgdGhlIGZpcnN0IHJlbGVhc2Ugb2YgMjAx
MywgTWlyYWdlT1MgaGFzIG1hZGUgc3RlYWR5IHByb2dyZXNzDQogIHRvd2FyZCBkZXBsb3lpbmcg
YSBzZWxmLW1hbmFnZWQgaW50ZXJuZXQgaW5mcmFzdHJ1Y3R1cmUuIFRoZSBwcm9qZWN04oCZcw0K
ICBpbml0aWFsIGFpbSB3YXMgdG8gc2VsZi1ob3N0IGFzIG1hbnkgc2VydmljZXMgYXMgcG9zc2li
bGUgYWltZWQgYXQNCiAgZW1wb3dlcmluZyBpbnRlcm5ldCB1c2VycyB0byBzZWN1cmVseSBkZXBs
b3kgaW5mcmFzdHJ1Y3R1cmUgdG8gb3duDQogIHRoZWlyIGRhdGEgYW5kIHRha2UgYmFjayBjb250
cm9sIG9mIHRoZWlyIHByaXZhY3kuIE1pcmFnZU9TIGNhbg0KICBzZWN1cmVseSBkZXBsb3kgW3N0
YXRpYyB3ZWJzaXRlIGhvc3RpbmddIHdpdGgg4oCcTGV04oCZcyBFbmNyeXB04oCdDQogIGNlcnRp
ZmljYXRlIHByb3Zpc2lvbmluZyBhbmQgYSBbc2VjdXJlIFNNVFBzdGFja10gd2l0aCBzZWN1cml0
eQ0KICBleHRlbnNpb25zLiBNaXJhZ2VPUyBjYW4gYWxzbyBkZXBsb3kgZGVjZW50cmFsaXNlZCBj
b21tdW5pY2F0aW9uDQogIGluZnJhc3RydWN0dXJlIGxpa2UgW01hdHJpeF0sIFtPcGVuVlBOIHNl
cnZlcnNdLCBhbmQgW1RMUyB0dW5uZWxzXSB0bw0KICBlbnN1cmUgZGF0YSBwcml2YWN5IG9yIFtE
TlMoU0VDKSBzZXJ2ZXJzXSBmb3IgYmV0dGVyIGF1dGhlbnRpY2F0aW9uLg0KDQogIFRoZSBwcm90
b2NvbCBlY29zeXN0ZW0gbm93IGNvbnRhaW5zIFtodW5kcmVkcyBvZiBsaWJyYXJpZXNdIGFuZA0K
ICBzZXJ2aWNlcyBtaWxsaW9ucyBvZiBkYWlseSB1c2Vycy4gT3ZlciB0aGVzZSB5ZWFycywgbWFq
b3IgY29tbWVyY2lhbA0KICB1c2VycyBoYXZlIGpvaW5lZCB0aGUgcHJvamVjdHMuIFRoZXkgcmVs
eSBvbiBNaXJhZ2VPUyBsaWJyYXJpZXMgdG8NCiAga2VlcCB0aGVpciBwcm9kdWN0cyBzZWN1cmUu
IEZvciBpbnN0YW5jZSwgdGhlIE1pcmFnZU9TIG5ldHdvcmtpbmcgY29kZQ0KICBwb3dlcnMgW0Rv
Y2tlciBEZXNrdG9w4oCZcyBWUE5LaXRdLCB3aGljaCBzZXJ2ZXMgdGhlIHRyYWZmaWMgb2YgbWls
bGlvbnMNCiAgb2YgY29udGFpbmVycyBkYWlseS4gW0NpdHJpeCBIeXBlcnZpc29yXSB1c2VzIE1p
cmFnZU9TIHRvIGludGVyYWN0DQogIHdpdGggWGVuLCB0aGUgaHlwZXJ2aXNvciB0aGF0IHBvd2Vy
cyBtb3N0IG9mIHRvZGF54oCZcyBwdWJsaWMNCiAgY2xvdWQuIFtOaXRyb2tleV0gaXMgZGV2ZWxv
cGluZyBhIG5ldyBoYXJkd2FyZSBzZWN1cml0eSBtb2R1bGUgYmFzZWQNCiAgb24gTWlyYWdlT1Mu
IFtSb2J1cl0gZGV2ZWxvcHMgYSB1bmlrZXJuZWwgb3JjaGVzdHJhdGlvbiBzeXN0ZW0gZm9yDQog
IGZsZWV0cyBvZiBNaXJhZ2VPUyB1bmlrZXJuZWxzLiBbVGFyaWRlc10gdXNlcyBNaXJhZ2VPUyB0
byBpbXByb3ZlIHRoZQ0KICBbVGV6b3NdIGJsb2NrY2hhaW4sIGFuZCBbSHlwZXJdIHVzZXMgTWly
YWdlT1MgdG8gYnVpbGQgc2Vuc29yDQogIGFuYWx5dGljcyBhbmQgYW4gYXV0b21hdGlvbiBwbGF0
Zm9ybSBmb3Igc3VzdGFpbmFibGUgYWdyaWN1bHR1cmUuDQoNCiAgSW4gdGhlIGNvbWluZyB3ZWVr
cywgb3VyIGJsb2cgd2lsbCBmZWF0dXJlIGluLWRlcHRoIHRlY2huaWNhbCBjb250ZW50DQogIGZv
ciB0aGUgbmV3IGZlYXR1cmVzIHRoYXQgTWlyYWdlT1MgYnJpbmdzLCBhcyB3ZWxsIGFzIGEgdG91
ciBvZiB0aGUNCiAgZXhpc3RpbmcgY29tbXVuaXR5IGFuZCBjb21tZXJjaWFsIHVzZXJzIG9mIE1p
cmFnZU9TLiBQbGVhc2UgcmVhY2ggb3V0DQogIGlmIHlvdeKAmWQgbGlrZSB0byB0ZWxsIHVzIGFi
b3V0IHlvdXIgc3RvcnkuDQoNCg0KW3N0YXRpYyB3ZWJzaXRlIGhvc3RpbmddIDxodHRwczovL2dp
dGh1Yi5jb20vcm9idXJpby91bmlwaT4NCg0KW3NlY3VyZSBTTVRQc3RhY2tdIDxodHRwczovL2dp
dGh1Yi5jb20vbWlyYWdlL3B0dD4NCg0KW01hdHJpeF0gPGh0dHBzOi8vZ2l0aHViLmNvbS9taXJh
Z2Uvb2NhbWwtbWF0cml4Pg0KDQpbT3BlblZQTiBzZXJ2ZXJzXSA8aHR0cHM6Ly9naXRodWIuY29t
L3JvYnVyaW8vb3BlbnZwbj4NCg0KW1RMUyB0dW5uZWxzXSA8aHR0cHM6Ly9naXRodWIuY29tL3Jv
YnVyaW8vdGxzdHVubmVsPg0KDQpbRE5TKFNFQykgc2VydmVyc10gPGh0dHBzOi8vZ2l0aHViLmNv
bS9taXJhZ2Uvb2NhbWwtZG5zPg0KDQpbaHVuZHJlZHMgb2YgbGlicmFyaWVzXSA8aHR0cHM6Ly9n
aXRodWIuY29tL21pcmFnZS8+DQoNCltEb2NrZXIgRGVza3RvcOKAmXMgVlBOS2l0XQ0KPGh0dHBz
Oi8vd3d3LmRvY2tlci5jb20vYmxvZy9ob3ctZG9ja2VyLWRlc2t0b3AtbmV0d29ya2luZy13b3Jr
cy11bmRlci10aGUtaG9vZC8+DQoNCltDaXRyaXggSHlwZXJ2aXNvcl0NCjxodHRwczovL3d3dy5j
aXRyaXguY29tL2ZyLWZyL3Byb2R1Y3RzL2NpdHJpeC1oeXBlcnZpc29yLz4NCg0KW05pdHJva2V5
XSA8aHR0cHM6Ly93d3cubml0cm9rZXkuY29tL3Byb2R1Y3RzL25ldGhzbT4NCg0KW1JvYnVyXSA8
aHR0cHM6Ly9yb2J1ci5pby8+DQoNCltUYXJpZGVzXSA8aHR0cHM6Ly90YXJpZGVzLmNvbS8+DQoN
CltUZXpvc10gPGh0dHBzOi8vdGV6b3MuY29tLz4NCg0KW0h5cGVyXSA8aHR0cHM6Ly9oeXBlci5h
Zy8+DQoNCkluc3RhbGwgTWlyYWdlT1MgNA0K4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM
4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWMDQoNCiAgVGhlIGVhc2llc3Qgd2F5IHRvIGluc3RhbGwg
TWlyYWdlT1MgNCBpcyBieSB1c2luZyB0aGUgb3BhbSB2ZXJzaW9uIDIuMQ0KICBhbmQgYG9jYW1s
Pj00LjEyLjFgLiBGb2xsb3cgdGhlIFtpbnN0YWxsYXRpb24gZ3VpZGVdIGZvciBtb3JlIGRldGFp
bHMuDQoNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiAkIG9wYW0gdXBkYXRlDQogIOKUgiAkIG9w
YW0gaW5zdGFsbCAnbWlyYWdlPjQnDQogIOKUlOKUgOKUgOKUgOKUgA0KDQogIC9Ob3RlLzogaWYg
eW91IHVwZ3JhZGUgZnJvbSBNaXJhZ2VPUyAzIHlvdSB3aWxsIG5lZWQgdG8gbWFudWFsbHkgY2xl
YW4NCiAgdGhlIHByZXZpb3VzIGdlbmVyYXRlZCBmaWxlcyAob3IgY2FsbCBgbWlyYWdlIGNsZWFu
JyBiZWZvcmUNCiAgdXBncmFkaW5nKS4gWW91IHdvdWxkIGFsc28gd2FudCB0byByZWFkIFt0aGUg
ZnVsbCBsaXN0IG9mIEFQSQ0KICBjaGFuZ2VzXS4gIFlvdSBjYW4gc2VlIHVuaWtlcm5lbCBleGFt
cGxlcyBpbiBbbWlyYWdlL21pcmFnZS1za2VsZXRvbl0sDQogIFtyb2J1cmlvL3VuaWtlcm5lbHNd
IG9yIFt0YXJpZGVzL3VuaWtlcm5lbHNdLg0KDQoNCltpbnN0YWxsYXRpb24gZ3VpZGVdIDxodHRw
czovL21pcmFnZS5pby9kb2NzL2luc3RhbGw+DQoNClt0aGUgZnVsbCBsaXN0IG9mIEFQSSBjaGFu
Z2VzXSA8aHR0cHM6Ly9taXJhZ2UuaW8vZG9jcy9icmVha2luZy1jaGFuZ2VzPg0KDQpbbWlyYWdl
L21pcmFnZS1za2VsZXRvbl0gPGh0dHBzOi8vZ2l0aHViLmNvbS9taXJhZ2UvbWlyYWdlLXNrZWxl
dG9uPg0KDQpbcm9idXJpby91bmlrZXJuZWxzXSA8aHR0cHM6Ly9naXRodWIuY29tL3JvYnVyaW8v
dW5pa2VybmVscz4NCg0KW3RhcmlkZXMvdW5pa2VybmVsc10gPGh0dHBzOi8vZ2l0aHViLmNvbS90
YXJpZGVzL3VuaWtlcm5lbHM+DQoNCg0KQWJvdXQgTWlyYWdlT1MNCuKVjOKVjOKVjOKVjOKVjOKV
jOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjA0KDQogIE1pcmFnZU9TIGlzIGEgbGlicmFyeSBvcGVy
YXRpbmcgc3lzdGVtIHRoYXQgY29uc3RydWN0cyB1bmlrZXJuZWxzIGZvcg0KICBzZWN1cmUsIGhp
Z2gtcGVyZm9ybWFuY2UsIGxvdy1lbmVyZ3kgZm9vdHByaW50IGFwcGxpY2F0aW9ucyBhY3Jvc3MN
CiAgdmFyaW91cyBoeXBlcnZpc29yIGFuZCBlbWJlZGRlZCBwbGF0Zm9ybXMuIEl0IGlzIGF2YWls
YWJsZSBhcyBhbg0KICBvcGVuLXNvdXJjZSBwcm9qZWN0IGNyZWF0ZWQgYW5kIG1haW50YWluZWQg
YnkgdGhlIFtNaXJhZ2VPUyBDb3JlDQogIFRlYW1dLiBBIHVuaWtlcm5lbCBjYW4gYmUgY3VzdG9t
aXNlZCBiYXNlZCBvbiB0aGUgdGFyZ2V0IGFyY2hpdGVjdHVyZQ0KICBieSBwaWNraW5nIHRoZSBy
ZWxldmFudCBNaXJhZ2VPUyBsaWJyYXJpZXMgYW5kIGNvbXBpbGluZyB0aGVtIGludG8gYQ0KICBz
dGFuZGFsb25lIG9wZXJhdGluZyBzeXN0ZW0sIHdoaWNoIGNvbnRhaW5zIHN0cmljdGx5IHRoZSBm
dW5jdGlvbmFsaXR5DQogIG5lY2Vzc2FyeSBmb3IgdGhlIHRhcmdldC4gVGhpcyBtaW5pbWlzZXMg
dGhlIHVuaWtlcm5lbOKAmXMgZm9vdHByaW50LA0KICBpbmNyZWFzaW5nIHRoZSBzZWN1cml0eSBv
ZiB0aGUgZGVwbG95ZWQgb3BlcmF0aW5nIHN5c3RlbS4NCg0KICBUaGUgTWlyYWdlT1MgYXJjaGl0
ZWN0dXJlIGNhbiBiZSBkaXZpZGVkIGludG8gb3BlcmF0aW5nIHN5c3RlbQ0KICBsaWJyYXJpZXMs
IHR5cGVkIHNpZ25hdHVyZXMsIGFuZCBhIG1ldGFwcm9ncmFtbWluZyBjb21waWxlci4gVGhlDQog
IG9wZXJhdGluZyBzeXN0ZW0gbGlicmFyaWVzIGltcGxlbWVudCB2YXJpb3VzIGZ1bmN0aW9uYWxp
dGllcywgcmFuZ2luZw0KICBmcm9tIGxvdy1sZXZlbCBuZXR3b3JrIGNhcmQgZHJpdmVycywgdG8g
ZnVsbCByZWltcGxlbWVudGF0aW9ucyBvZiB0aGUNCiAgVExTIHByb3RvY29sLCBhcyB3ZWxsIGFz
IHRoZSBHaXQgcHJvdG9jb2wgdG8gc3RvcmUgdmVyc2lvbmVkIGRhdGEuIEENCiAgc2V0IG9mIHR5
cGVkIHNpZ25hdHVyZXMgZW5zdXJlcyB0aGF0IHRoZSBPUyBsaWJyYXJpZXMgYXJlIGNvbnNpc3Rl
bnQNCiAgYW5kIHdvcmsgd2VsbCBpbiBjb25qdW5jdGlvbiB3aXRoIGVhY2ggb3RoZXIuIE1vc3Qg
aW1wb3J0YW50bHksDQogIE1pcmFnZU9TIGlzIGFsc28gYSBtZXRhcHJvZ3JhbW1pbmcgY29tcGls
ZXIgdGhhdCBjYW4gaW5wdXQgT0NhbWwNCiAgc291cmNlIGNvZGUgYWxvbmcgd2l0aCBpdHMgZGVw
ZW5kZW5jaWVzLCBhbmQgYSBkZXBsb3ltZW50IHRhcmdldA0KICBkZXNjcmlwdGlvbiBpbiBvcmRl
ciB0byBnZW5lcmF0ZSBhbiBleGVjdXRhYmxlIHVuaWtlcm5lbCwgaS5lLiwgYQ0KICBzcGVjaWFs
aXNlZCBiaW5hcnkgYXJ0ZWZhY3QgY29udGFpbmluZyBvbmx5IHRoZSBjb2RlIG5lZWRlZCB0byBy
dW4gb24NCiAgdGhlIHRhcmdldCBwbGF0Zm9ybS4gT3ZlcmFsbCwgTWlyYWdlT1MgZm9jdXNlcyBv
biBwcm92aWRpbmcgYSBzbWFsbCwNCiAgd2VsbC1kZWZpbmVkLCB0eXBlZCBpbnRlcmZhY2Ugd2l0
aCB0aGUgc3lzdGVtIGNvbXBvbmVudHMgb2YgdGhlIHRhcmdldA0KICBhcmNoaXRlY3R1cmUuDQoN
CiAgUmVhZCB0aGUgZnVsbCBhbm5vdW5jZW1lbnQgb24gW21pcmFnZS5pbydzIGJsb2ddLg0KDQoN
CltNaXJhZ2VPUyBDb3JlIFRlYW1dIDxodHRwczovL2dpdGh1Yi5jb20vb3Jncy9taXJhZ2UvdGVh
bXMvY29yZS9tZW1iZXJzPg0KDQpbbWlyYWdlLmlvJ3MgYmxvZ10gPGh0dHBzOi8vbWlyYWdlLmlv
L2Jsb2cvYW5ub3VuY2luZy1taXJhZ2UtNDA+DQoNCg0KQW5pbCBNYWRoYXZhcGVkZHkgdGhlbiBh
ZGRlZA0K4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCiAgRm9yIHRob3NlIGN1cmlvdXMg
YWJvdXQgd2hhdCBzb21lIG9mIHRoZSBNaXJhZ2VPUyBsaWJyYXJpZXMgX2FyZV8sDQogIHRoZXJl
IGlzIGEgcmF3IFlhbWwgbGlzdCBvdmVyIGF0IFttaXJhZ2UvbWlyYWdlLXJlcG9zaXRvcmllc10g
bGlzdGluZw0KICBtb3N0IG9mIHRoZW0uICBDb252ZXJzaW9uIG9mIHRoaXMgWWFtbCB0byBIVE1M
IGZvciB0aGUgbWFpbiBtaXJhZ2UuaW8NCiAgd2Vic2l0ZSB3b3VsZCBiZSBhIHdlbGNvbWUgY29u
dHJpYnV0aW9uISA6c2xpZ2h0X3NtaWxlOg0KDQoNClttaXJhZ2UvbWlyYWdlLXJlcG9zaXRvcmll
c10NCjxodHRwczovL2dpdGh1Yi5jb20vbWlyYWdlL21pcmFnZS1yZXBvc2l0b3JpZXMvYmxvYi9t
YWluL3JlcG9zLnltbD4NCg0KDQpPQ2FtbCA0LjE0LjAgaXMgcmVsZWFzZWQNCuKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkA0KDQogIEFyY2hpdmU6IDxodHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3Qvb2NhbWwtNC0x
NC0wLWlzLXJlbGVhc2VkLzk2MDAvMT4NCg0KDQpvY3RhY2hyb24gYW5ub3VuY2VkDQrilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCg0KICBU
aGUgT0NhbWwgdGVhbSBoYXMgdGhlIHBsZWFzdXJlIG9mIGNlbGVicmF0aW5nIHRoZSBiaXJ0aGRh
eSBvZg0KICBBbGV4YW5kZXIgR3JvdGhlbmRpZWNrIGJ5IGFubm91bmNpbmcgdGhlIHJlbGVhc2Ug
b2YgT0NhbWwgdmVyc2lvbg0KICA0LjE0LjAuDQoNCiAgU29tZSBvZiB0aGUgaGlnaGxpZ2h0cyBp
biB0aGUgNC4xNC4wIHJlbGVhc2UgYXJlOg0KDQogIOKAoiBJbnRlZ3JhdGVkIHN1cHBvcnQgZm9y
ICJnbyB0byBkZWZpbml0aW9ucyIgaW4gTWVybGluLg0KICDigKIgU3RhbmRhcmQgbGlicmFyeTog
bmV3IG1vZHVsZXMgYEluX2NoYW5uZWwnIGFuZCBgT3V0X2NoYW5uZWwnLCBtYW55DQogICAgbmV3
IGZ1bmN0aW9ucyBpbiBTZXEgbW9kdWxlLCBVVEYgZGVjb2RpbmcgYW5kIHZhbGlkYXRpb24gc3Vw
cG9ydCBmb3INCiAgICBzdHJpbmdzIGFuZCBieXRlcy4NCiAg4oCiIFJ1bnRpbWUgb3B0aW1pc2F0
aW9uOiBHQyBwcmVmZXRjaGluZy4gQmVuY2htYXJrcyBzaG93IGEgc3BlZWR1cCBvZg0KICAgIGFy
b3VuZCAyMCUgaW4gR0MtaGVhdnkgcHJvZ3JhbXMuDQogIOKAoiBJbXByb3ZlZCBlcnJvciBtZXNz
YWdlcyBpbiBwYXJ0aWN1bGFyIGZvciBtb2R1bGUtbGV2ZWwgZXJyb3IuDQogIOKAoiBEZXByZWNh
dGVkIGZ1bmN0aW9ucyBhbmQgbW9kdWxlcyBpbiBwcmVwYXJhdGlvbiBmb3IgT0NhbWwgNS4gIElu
DQogICAgcGFydGljdWxhciwgdGhlIFN0cmVhbSBhbmQgR2VubGV4IG1vZHVsZXMgYXJlIG5vdyBk
ZXByZWNhdGVkLg0KICDigKIgVHlwZSB2YXJpYWJsZXMgY2FuIGJlIGV4cGxpY2l0bHkgaW50cm9k
dWNlZCBpbiB2YWx1ZSBhbmQgdmFyaWFudA0KICAgIGNvbnN0cnVjdG9yIGRlY2xhcmF0aW9ucy4g
Rm9yIGluc3RhbmNlLA0KICAgIOKUjOKUgOKUgOKUgOKUgA0KICAgIOKUgiB2YWwgZm9sZDogKCdh
Y2MgLT4gJ2VsdCAtPiAnYWNjKSAtPiAnYWNjIC0+ICdlbHQgbGlzdCAtPiAnYWNjDQogICAg4pSC
IHR5cGUgc2hvd2FibGUgPSBTaG93OiAnYSAqICgnYSAtPiBzdHJpbmcpIC0+IHNob3dhYmxlDQog
ICAg4pSU4pSA4pSA4pSA4pSADQogICAgY2FuIG5vdyBiZSB3cml0dGVuIGFzDQogICAg4pSM4pSA
4pSA4pSA4pSADQogICAg4pSCIHZhbCBmb2xkOiAnYWNjICdlbHQuICgnYWNjIC0+ICdlbHQgLT4g
J2FjYykgLT4gJ2FjYyAtPiAnZWx0IGxpc3QgLT4gJ2FjYw0KICAgIOKUgiB0eXBlIHNob3dhYmxl
ID0gU2hvdzogJ2EuICdhICogKCdhIC0+IHN0cmluZykgLT4gc2hvd2FibGUNCiAgICDilJTilIDi
lIDilIDilIANCiAg4oCiIFRhaWwtY2FsbCB3aXRoIHVwIHRvIDY0IGFyZ3VtZW50cyBhcmUgbm93
IGd1YXJhbnRlZWQgdG8gYmUgb3B0aW1pemVkDQogICAgZm9yIGFsbCBhcmNoaXRlY3R1cmVzLg0K
ICDigKIgRXhwZXJpbWVudGFsIHRhaWwgbW9kdWxvIGNvbnMgKFRNQykgdHJhbnNmb3JtYXRpb24N
Cg0KICBUaGUgZnVsbCBsaXN0IG9mIGNoYW5nZXMgY2FuIGJlIGZvdW5kIGluIHRoZSBjaGFuZ2Vs
b2cNCiAgYmVsb3cuICgvZWRpdG9y4oCZcyBub3RlOiBwbGVhc2UgZm9sbG93IHRoZSBhcmNoaXZl
IGxpbmsgZm9yIHRoZSBmdWxsDQogIGNoYW5nZWxvZy8pDQoNCiAgVGhvc2UgcmVsZWFzZXMgYXJl
IGF2YWlsYWJsZSBhcyBPUEFNIHN3aXRjaGVzLCBhbmQgYXMgYSBzb3VyY2UNCiAgZG93bmxvYWQg
aGVyZToNCg0KICDigKIgPGh0dHBzOi8vZ2l0aHViLmNvbS9vY2FtbC9vY2FtbC9hcmNoaXZlLzQu
MTQuMC50YXIuZ3o+DQogIOKAoiA8aHR0cHM6Ly9jYW1sLmlucmlhLmZyL3B1Yi9kaXN0cmliL29j
YW1sLTQuMTQvb2NhbWwtNC4xNC4wLnRhci5nej4NCg0KDQpvY2FtbC1pbi1weXRob24uMC4xLjA6
IEVmZm9ydGxlc3MgUHl0aG9uIGJpbmRpbmdzIGZvciBPQ2FtbCBtb2R1bGVzDQrilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZANCg0KICBBcmNoaXZlOg0KICA8aHR0cHM6Ly9kaXNjdXNzLm9j
YW1sLm9yZy90L2Fubi1vY2FtbC1pbi1weXRob24tMC0xLTAtZWZmb3J0bGVzcy1weXRob24tYmlu
ZGluZ3MtZm9yLW9jYW1sLW1vZHVsZXMvOTYwMy8xPg0KDQoNClRoaWVycnkgTWFydGluZXogYW5u
b3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCg0KICBJIGFtIGhhcHB5IHRvIGFubm91bmNl
IHRoZSBmaXJzdCByZWxlYXNlIG9mIGBvY2FtbC1pbi1weXRob24nOiB0aGlzIGlzDQogIGEgUHl0
aG9uIHBhY2thZ2UgdGhhdCBleHBvc2VzIGFsbCBPQ2FtbCBtb2R1bGVzIGFzIFB5dGhvbiBsaWJy
YXJpZXMsDQogIGdlbmVyYXRpbmcgYmluZGluZ3Mgb24gdGhlIGZseS4gVGhpcyBjYW4gYmUgc2Vl
biBhcyBhIGR1YWwgb2YNCiAgW2BweW1sX2JpbmRnZW4nXTogYHB5bWxfYmluZGdlbicgYmluZHMg
UHl0aG9uIGxpYnJhcmllcyBpbiBPQ2FtbCwNCiAgd2hpbGUgYG9jYW1sLWluLXB5dGhvbicgYmlu
ZHMgT0NhbWwgbW9kdWxlcyBpbiBQeXRob24uDQoNCiAgSXQgaXMgYXZhaWxhYmxlIGZyb20gW0dp
dEh1Yl0gb3IgKnZpYSogYG9wYW0nOiBgb3BhbSBpbnN0YWxsDQogIG9jYW1sLWluLXB5dGhvbicN
Cg0KICBSZXF1aXJlbWVudHM6IGBPQ2FtbCcgPj0gNC4xMywgYFB5dGhvbicgPj0gMy43Lg0KDQog
IE9uY2UgaW5zdGFsbGVkICp2aWEqIGBvcGFtJywgdGhlIHBhY2thZ2Ugc2hvdWxkIGJlIHJlZ2lz
dGVyZWQgaW4gdGhlDQogIFB5dGhvbiBlbnZpcm9ubWVudDoNCg0KICDigKIgZWl0aGVyIGJ5IHJl
Z2lzdGVyaW5nIHRoZSBwYWNrYWdlIHdpdGggYHBpcCcgdXNpbmcgdGhlIGZvbGxvd2luZw0KICAg
IGNvbW1hbmQgKHJlcXVpcmVzIFB5dGhvbiA+PTMuOCk6DQogICAg4pSM4pSA4pSA4pSA4pSADQog
ICAg4pSCIHBpcCBpbnN0YWxsIC0tZWRpdGFibGUgImBvcGFtIHZhciBvY2FtbC1pbi1weXRob246
bGliYCINCiAgICDilJTilIDilIDilIDilIANCiAg4oCiIG9yIGJ5IGFkZGluZyB0aGUgZm9sbG93
aW5nIGRlZmluaXRpb24gdG8gdGhlIGVudmlyb25tZW50Og0KICAgIOKUjOKUgOKUgOKUgOKUgA0K
ICAgIOKUgiBleHBvcnQgUFlUSE9OUEFUSD0iYG9wYW0gdmFyIHNoYXJlYC9weXRob24vOiRQWVRI
T05QQVRIIg0KICAgIOKUlOKUgOKUgOKUgOKUgA0KDQogIFRoZW4sIHdlIGNhbiBgaW1wb3J0IG9j
YW1sJyBpbiBQeXRob24gYW5kIHVzZSBPQ2FtbCBtb2R1bGVzOg0KICDilIzilIDilIDilIDilIAN
CiAg4pSCIFB5dGhvbiAzLjEwLjAgKGRlZmF1bHQsIE5vdiAxMCAyMDIxLCAxOToxNjoxNCkgW0dD
QyA3LjUuMF0gb24gbGludXgNCiAg4pSCIFR5cGUgImhlbHAiLCAiY29weXJpZ2h0IiwgImNyZWRp
dHMiIG9yICJsaWNlbnNlIiBmb3IgbW9yZSBpbmZvcm1hdGlvbi4NCiAg4pSCID4+PiBpbXBvcnQg
b2NhbWwNCiAg4pSCID4+PiBwcmludChvY2FtbC5MaXN0Lm1hcCgobGFtYmRhIHggOiB4ICsgMSks
IFsxLCAyLCAzXSkpDQogIOKUgiBbMjszOzRdDQogIOKUlOKUgOKUgOKUgOKUgA0KDQogIFdlIGNh
biBmb3IgaW5zdGFuY2UgY29tcGlsZSBhbiBPQ2FtbCBtb2R1bGUgb24gdGhlIGZseSBmcm9tIFB5
dGhvbi4NCiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiA+Pj4gbSA9IG9jYW1sLmNvbXBpbGUoJ2xl
dCBoZWxsbyB4ID0gUHJpbnRmLnByaW50ZiAiSGVsbG8sICVzIVxuJSEiIHgnKQ0KICDilIIgPj4+
IG0uaGVsbG8oJ3dvcmxkJykNCiAg4pSCIEhlbGxvLCB3b3JsZCENCiAg4pSU4pSA4pSA4pSA4pSA
DQoNCiAgQW5kIHdlIGNhbiByZXF1aXJlIGFuZCB1c2UgcGFja2FnZXMgL3ZpYS8gYGZpbmRsaWIn
Lg0KICDilIzilIDilIDilIDilIANCiAg4pSCID4+PiBvY2FtbC5yZXF1aXJlKCJwYXJtYXAiKQ0K
ICDilIIgPj4+IGZyb20gb2NhbWwgaW1wb3J0IFBhcm1hcA0KICDilIIgPj4+IHByaW50KFBhcm1h
cC5wYXJtYXAoDQogIOKUgiAuLi4gICAobGFtYmRhIHggOiB4ICsgMSksIFBhcm1hcC5BKFsxLCAy
LCAzXSksIG5jb3Jlcz0yKSkNCiAg4pSCIFsyOzM7NF0NCiAg4pSU4pSA4pSA4pSA4pSADQoNCiAg
RGV0YWlscyBhYm91dCB0aGUgY29udmVyc2lvbnMgYXJlIGdpdmVuIGluIFtgUkVBRE1FLm1kJ10u
DQoNCiAgSGFwcHkgaGFja2luZyENCg0KDQpbYHB5bWxfYmluZGdlbiddDQo8aHR0cHM6Ly9kaXNj
dXNzLm9jYW1sLm9yZy90L2Fubi1weW1sLWJpbmRnZW4tYS1jbGktYXBwLXRvLWdlbmVyYXRlLXB5
dGhvbi1iaW5kaW5ncy1kaXJlY3RseS1mcm9tLW9jYW1sLXZhbHVlLXNwZWNpZmljYXRpb25zLzg3
ODY+DQoNCltHaXRIdWJdIDxodHRwczovL2dpdGh1Yi5jb20vdGhpZXJyeS1tYXJ0aW5lei9vY2Ft
bC1pbi1weXRob24+DQoNCltgUkVBRE1FLm1kJ10NCjxodHRwczovL2dpdGh1Yi5jb20vdGhpZXJy
eS1tYXJ0aW5lei9vY2FtbC1pbi1weXRob24vYmxvYi9tYWluL1JFQURNRS5tZD4NCg0KDQpPbGQg
Q1dODQrilZDilZDilZDilZDilZDilZDilZANCg0KICBJZiB5b3UgaGFwcGVuIHRvIG1pc3MgYSBD
V04sIHlvdSBjYW4gW3NlbmQgbWUgYSBtZXNzYWdlXSBhbmQgSSdsbCBtYWlsDQogIGl0IHRvIHlv
dSwgb3IgZ28gdGFrZSBhIGxvb2sgYXQgW3RoZSBhcmNoaXZlXSBvciB0aGUgW1JTUyBmZWVkIG9m
IHRoZQ0KICBhcmNoaXZlc10uDQoNCiAgSWYgeW91IGFsc28gd2lzaCB0byByZWNlaXZlIGl0IGV2
ZXJ5IHdlZWsgYnkgbWFpbCwgeW91IG1heSBzdWJzY3JpYmUNCiAgW29ubGluZV0uDQoNCiAgW0Fs
YW4gU2NobWl0dF0NCg0KDQpbc2VuZCBtZSBhIG1lc3NhZ2VdIDxtYWlsdG86YWxhbi5zY2htaXR0
QHBvbHl0ZWNobmlxdWUub3JnPg0KDQpbdGhlIGFyY2hpdmVdIDxodHRwczovL2FsYW4ucGV0aXRl
cG9tbWUubmV0L2N3bi8+DQoNCltSU1MgZmVlZCBvZiB0aGUgYXJjaGl2ZXNdIDxodHRwczovL2Fs
YW4ucGV0aXRlcG9tbWUubmV0L2N3bi9jd24ucnNzPg0KDQpbb25saW5lXSA8aHR0cDovL2xpc3Rz
LmlkeWxsLm9yZy9saXN0aW5mby9jYW1sLW5ld3Mtd2Vla2x5Lz4NCg0KW0FsYW4gU2NobWl0dF0g
PGh0dHBzOi8vYWxhbi5wZXRpdGVwb21tZS5uZXQvPg0KDQo=
--==-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2022-03-29 Tue 09:36 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org mode" />
<style type=3D"text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
<script type=3D"text/javascript">
// @license magnet:?xt=3Durn:btih:e95b018ef3580986a04669f1b5879592219e2a7a&=
dn=3Dpublic-domain.txt Public Domain
<!--/*--><![CDATA[/*><!--*/
     function CodeHighlightOn(elem, id)
     {
       var target =3D document.getElementById(id);
       if(null !=3D target) {
         elem.classList.add("code-highlighted");
         target.classList.add("code-highlighted");
       }
     }
     function CodeHighlightOff(elem, id)
     {
       var target =3D document.getElementById(id);
       if(null !=3D target) {
         elem.classList.remove("code-highlighted");
         target.classList.remove("code-highlighted");
       }
     }
    /*]]>*///-->
// @license-end
</script>
</head>
<body>
<div id=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2022.03.22.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2022.04.05.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of March 22 to 29, 2022.
</p>

<div id=3D"table-of-contents">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents">
<ul>
<li><a href=3D"#1">pyml_bindgen: a CLI app to generate Python bindings dire=
ctly from OCaml value specifications</a></li>
<li><a href=3D"#2">Tarides is hiring!</a></li>
<li><a href=3D"#3">For Diversity and the OCaml Community: Outreachy Summer =
2022</a></li>
<li><a href=3D"#4">Caqti 1.8.0 and related news</a></li>
<li><a href=3D"#5">First release of prbnmcn-dagger</a></li>
<li><a href=3D"#6">MirageOS 4.0</a></li>
<li><a href=3D"#7">OCaml 4.14.0 is released</a></li>
<li><a href=3D"#8">ocaml-in-python.0.1.0: Effortless Python bindings for OC=
aml modules</a></li>
<li><a href=3D"#orgfc5addb">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-1" class=3D"outline-2">
<h2 id=3D"1">pyml_bindgen: a CLI app to generate Python bindings directly f=
rom OCaml value specifications</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-pyml-bindgen-a-cli-app-=
to-generate-python-bindings-directly-from-ocaml-value-specifications/8786/6=
">https://discuss.ocaml.org/t/ann-pyml-bindgen-a-cli-app-to-generate-python=
-bindings-directly-from-ocaml-value-specifications/8786/6</a>
</p>
</div>

<div id=3D"outline-container-org61fded5" class=3D"outline-3">
<h3 id=3D"org61fded5">Ryan Moore announced</h3>
<div class=3D"outline-text-3" id=3D"text-org61fded5">
</div>
<div id=3D"outline-container-org1b4a8ae" class=3D"outline-4">
<h4 id=3D"org1b4a8ae">New releases</h4>
<div class=3D"outline-text-4" id=3D"text-org1b4a8ae">
<p>
Version 0.3.0 and 0.3.1 are now available on <a href=3D"https://github.com/=
mooreryan/ocaml_python_bindgen/tags">GitHub</a>.  0.3.0
has been merged into opam, and a PR for 0.3.1 has been opened.  The <a href=
=3D"https://github.com/mooreryan/ocaml_python_bindgen/blob/main/CHANGELOG.m=
d">change
log</a> has more details about the changes.
</p>
</div>
</div>

<div id=3D"outline-container-orgcc21b2e" class=3D"outline-4">
<h4 id=3D"orgcc21b2e">Binding tuples</h4>
<div class=3D"outline-text-4" id=3D"text-orgcc21b2e">
<p>
You can now bind tuples directly.  Here's a Python function that takes two =
lists of points (where each "point" is a
tuple like <code>(x, y)</code>) and adds them together
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-python"><span style=3D"color: #a020f0;">def</span> <s=
pan style=3D"color: #0000ff;">add</span>(points1, points2):
    <span style=3D"color: #a020f0;">return</span> [(x1 + y1, x2 + y2) <span=
 style=3D"color: #a020f0;">for</span> (x1, x2), (y1, y2) <span style=3D"col=
or: #a020f0;">in</span> <span style=3D"color: #483d8b;">zip</span>(points1,=
 points2)]
</pre>
</div>

<p>
And you could bind it using tuples from the OCaml side as well.
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">val</span> <span style=3D"color: #0000ff;">add</span> : <span style=3D=
"color: #008b8b;">points1</span>:(int * int) list -&gt; <span style=3D"colo=
r: #008b8b;">points2</span>:(int * int) list -&gt; unit -&gt; (int * int) l=
ist
</pre>
</div>

<p>
Note there are some restrictions regarding tuples, which you can read about
<a href=3D"https://mooreryan.github.io/ocaml_python_bindgen/tuples/">here</=
a>,
<a href=3D"https://github.com/mooreryan/ocaml_python_bindgen/blob/main/exam=
ples/README.md">here</a>, or
<a href=3D"https://github.com/mooreryan/ocaml_python_bindgen/blob/main/CHAN=
GELOG.md#030-2022-03-18">here</a>.
</p>
</div>
</div>

<div id=3D"outline-container-org428ada7" class=3D"outline-4">
<h4 id=3D"org428ada7">Attributes</h4>
<div class=3D"outline-text-4" id=3D"text-org428ada7">
<p>
You can use attributes on value specifications.  Currently the only one sup=
ported is <code>py_fun_name</code>, which allows you
to decouple the Python method name and the generated OCaml function name.
</p>

<p>
As an example, take the following Python function, which adds to "things".
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-python"><span style=3D"color: #a020f0;">def</span> <s=
pan style=3D"color: #0000ff;">add</span>(x, y):
    <span style=3D"color: #a020f0;">return</span> x + y
</pre>
</div>

<p>
You could bind multiple OCaml functions to this single function now.
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">val</span> <span style=3D"color: #0000ff;">add_int</span> : <span styl=
e=3D"color: #008b8b;">x</span>:int -&gt; <span style=3D"color: #008b8b;">y<=
/span>:int -&gt; unit -&gt; int
<span style=3D"color: #483d8b;">[@@py_fun_name add]</span>

<span style=3D"color: #000000; font-weight: bold;">val</span> <span style=
=3D"color: #0000ff;">add_float</span> : <span style=3D"color: #008b8b;">x</=
span>:float -&gt; <span style=3D"color: #008b8b;">y</span>:float -&gt; unit=
 -&gt; float
<span style=3D"color: #483d8b;">[@@py_fun_name add]</span>

<span style=3D"color: #000000; font-weight: bold;">val</span> <span style=
=3D"color: #0000ff;">add_string</span> : <span style=3D"color: #008b8b;">x<=
/span>:string -&gt; <span style=3D"color: #008b8b;">y</span>:string -&gt; u=
nit -&gt; string
<span style=3D"color: #483d8b;">[@@py_fun_name add]</span>
</pre>
</div>
</div>

<div id=3D"outline-container-orge868446" class=3D"outline-5">
<h5 id=3D"orge868446">Python magic methods</h5>
<div class=3D"outline-text-5" id=3D"text-orge868446">
<p>
This is also nice for binding Python <a href=3D"https://docs.python.org/3/r=
eference/datamodel.html#specialnames">magic
methods</a>. For example, you don't have to use
<code>__init__</code> as the name of the OCaml function you use to make ins=
tances of a Python class.  You can bind it to a more
natural name like <code>create</code> or <code>make</code>.
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">val</span> <span style=3D"color: #0000ff;">create</span> : <span style=
=3D"color: #008b8b;">name</span>:string -&gt; <span style=3D"color: #008b8b=
;">age</span>:int -&gt; unit -&gt; t
<span style=3D"color: #483d8b;">[@@py_fun_name __init__]</span>
</pre>
</div>
</div>
</div>
</div>

<div id=3D"outline-container-org17aede6" class=3D"outline-4">
<h4 id=3D"org17aede6">Using Pytypes.pyobject directly</h4>
<div class=3D"outline-text-4" id=3D"text-org17aede6">
<p>
Sometimes you may not want to bother converting Python types to normal OCam=
l types at all.  You can do that now in
value specifications by using the <code>Pytypes.pyobject</code> and <code>P=
y.Object.t</code> types directly.
</p>
</div>
</div>

<div id=3D"outline-container-org2424b3e" class=3D"outline-4">
<h4 id=3D"org2424b3e">Fewer dependencies</h4>
<div class=3D"outline-text-4" id=3D"text-org2424b3e">
<p>
<code>re</code> is now used instead of <code>re2</code>, which drops the nu=
mber of dependencies that need to be installed by about half.
Additionally, <code>core</code>, <code>core_bench</code>, and <code>bisect_=
ppx</code> don't need to be installed if you want to install <code>pyml_bin=
dgen</code>
directly from the git repository, which greatly cuts the required dependenc=
ies in this case.
</p>

<p>
Thanks again to UnixJunkie for spurring many of these updates!
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-2" class=3D"outline-2">
<h2 id=3D"2">Tarides is hiring!</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/tarides-is-hiring/9553/1">h=
ttps://discuss.ocaml.org/t/tarides-is-hiring/9553/1</a>
</p>
</div>

<div id=3D"outline-container-org5e1f454" class=3D"outline-3">
<h3 id=3D"org5e1f454">Thomas Gazagnaire announced</h3>
<div class=3D"outline-text-3" id=3D"text-org5e1f454">
<p>
Following the recent announcement about Tarides (joining forces with <a hre=
f=3D"https://tarides.com/blog/2022-01-27-ocaml-labs-joins-tarides">OCaml
Labs</a> and <a href=3D"https://tarides.com/blog/2022-03-01-segfault-system=
s-joins-tarides">Segfault
System</a>), we are now looking to expand our team
with experienced software engineers, compassionate team leads and experts i=
n software consulting services. Our
ambition is to bring OCaml to a vast set of new developers and industries. =
We want to make developers more productive
by spending less time on fixing bugs and more on writing new features. And =
we want the software industry to build
more robust and performant systems that can last for decades.
</p>

<p>
We are looking for:
</p>

<ul class=3D"org-ul">
<li>Experienced <a href=3D"https://tarides.com/jobs/senior-software-enginee=
r">Software Engineer(s)</a> to take part in the development of Irmin. You w=
ill be part of the team that designs, builds and ships Irmin libraries and =
applications to our community and customers.</li>
<li><a href=3D"https://tarides.com/jobs/team-lead-engineering">Team Lead(s)=
</a> who cares about motivating their team members, supporting their growth=
 and development and successfully delivering the team's objectives on time.=
</li>
<li>A <a href=3D"https://tarides.com/jobs/head-of-consulting-services">Head=
 of Consulting Services</a> to diversify our technical teams and commercial=
 services portfolio. You'll be the first hire for this brand new department=
 and will have the opportunity to help us build our services structure from=
 scratch, including our strategy, processes, tools, and team.</li>
</ul>

<p>
We are always looking for great OCaml enthusiasts to join our team, so even=
 if these job descriptions do not fit your
profile precisely, you are welcome to send us <a href=3D"https://tarides.co=
m/jobs/spontaneous-application">a spontaneous
application</a>!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-3" class=3D"outline-2">
<h2 id=3D"3">For Diversity and the OCaml Community: Outreachy Summer 2022</=
h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/for-diversity-and-the-ocaml=
-community-outreachy-summer-2022/9234/6">https://discuss.ocaml.org/t/for-di=
versity-and-the-ocaml-community-outreachy-summer-2022/9234/6</a>
</p>
</div>

<div id=3D"outline-container-orgdd37de3" class=3D"outline-3">
<h3 id=3D"orgdd37de3">Deep in this thread, Aya announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgdd37de3">
<p>
@pitag and I have resubmitted the PPX derivers project for this Summer 2022=
 round: <b>Expand OCaml's library of
standard derivers</b>! This is the same project I was the intern for this p=
ast Winter 2022 round, where the goal is to
build up a <a href=3D"https://github.com/ocaml-ppx/standard_derivers">stand=
ard derivers</a> library, like <code>ppx_deriving</code>, using
the updated <code>ppxlib</code> API.
</p>

<p>
I'm excited to be supporting @pitag with mentoring, and for the opportunity=
 to stay involved now that my internship
has ended :smiley:
</p>
</div>
</div>
</div>




<div id=3D"outline-container-4" class=3D"outline-2">
<h2 id=3D"4">Caqti 1.8.0 and related news</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-caqti-1-8-0-and-related=
-news/9561/1">https://discuss.ocaml.org/t/ann-caqti-1-8-0-and-related-news/=
9561/1</a>
</p>
</div>

<div id=3D"outline-container-org8bd699e" class=3D"outline-3">
<h3 id=3D"org8bd699e">"Petter A. Urkedal announced</h3>
<div class=3D"outline-text-3" id=3D"text-org8bd699e">
<p>
I am happy to announce the second release of <a href=3D"https://github.com/=
paurkedal/ocaml-caqti">Caqti</a> this year. The reason
for the quick succession is partly an adjustment to the <a href=3D"https://=
paurkedal.github.io/ocaml-caqti/caqti/Caqti_request/Infix/index.html">new A=
PI for request
construction</a> and partly that
<a href=3D"https://github.com/paurkedal/ocaml-caqti/issues/72">matchable er=
ror conditions</a> did not make it into the previous
release.  You can see the full release notes below.
</p>

<p>
I would also like to thank <a href=3D"https://ocaml-sf.org">OCaml Software =
Foundation</a> for sponsoring my efforts on the Caqti
project this year, also including most of the work that went into the previ=
ous release.
</p>

<p>
One <a href=3D"https://github.com/paurkedal/ocaml-caqti/issues/38">feature =
in progress</a> is a new driver based on the pure-OCaml
<a href=3D"https://github.com/arenadotio/pgx">pgx</a> which should make it =
possible, with some additional changes to the way
drivers are loaded, to target MirageOS. I am note sure if this can be done =
in a minor release or will require a Caqti
2 branch.
</p>
</div>

<div id=3D"outline-container-org01e31aa" class=3D"outline-4">
<h4 id=3D"org01e31aa">Release Notes</h4>
<div class=3D"outline-text-4" id=3D"text-org01e31aa">
<p>
New features:
</p>

<ul class=3D"org-ul">
<li>A matchable representation of common causes of errors on the database
side is now available, with limitations.  It focuses on conditions which
seem most likely useful to handle.  At the moment we lack extended error
codes from SQLite3 needed to make the cause fully precise.</li>

<li>Expose the underlying error details from database client libraries.
This is meant to be use as a last resort, and requires directly linking
with the relevant drivers.</li>

<li>A second set of request construction operators <code>-&gt;.</code>, <co=
de>-&gt;?</code>, <code>-&gt;!</code>, and
<code>-&gt;*</code> were introduced after experience with converting existi=
ng code.
Given the parameter and result type they return a function which
constructs a request directly from a query string.  Avoiding the need to
compose with <code>@:-</code> simplifies local opens and usage with <code>L=
ist.map</code> etc.</li>

<li>Environment variables are now expanded in the debug log when using the
new request constructors introduced in 1.7.0.</li>

<li>A new <code>?tweaks_version</code> connection parameter has been added =
to control
when the client is ready to adapt to changes in database session
parameters or other adjustments of the interaction with specific
database systems. [<a href=3D"https://paurkedal.github.io/ocaml-caqti/caqti=
/tweaks.html">More details available in the documentation.</a>]</li>

<li>Enable foreign key constraint checks for SQLite3 starting at tweaks
version 1.7.</li>
</ul>

<p>
Fixes:
</p>

<ul class=3D"org-ul">
<li>Fixed debug logging to pass the correct driver info to the query
callback instead of a dummy driver info which would cause a failure if
unsupported.</li>
</ul>

<p>
Deprecations:
</p>

<ul class=3D"org-ul">
<li>The <code>--&gt;</code> operator was renamed to <code>--&gt;!</code>, w=
ith a deprecated alias, for
consistency with the new <code>-&gt;!</code> operator.</li>

<li>The old convenience interface for creating requests has been deprecated
in favour of the new infix operators and the new query template parser.</li>

<li>Documented-only deprecations of <code>Caqti_sql_io</code>, <code>Caqti_=
lwt_sql_io</code>, and
<code>Caqti_async_sql_io</code> have been annotated.</li>
</ul>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-5" class=3D"outline-2">
<h2 id=3D"5">First release of prbnmcn-dagger</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-first-release-of-prbnmc=
n-dagger/9311/2">https://discuss.ocaml.org/t/ann-first-release-of-prbnmcn-d=
agger/9311/2</a>
</p>
</div>

<div id=3D"outline-container-org9fe2c67" class=3D"outline-3">
<h3 id=3D"org9fe2c67">Igarnier announced</h3>
<div class=3D"outline-text-3" id=3D"text-org9fe2c67">
<p>
I'm proud to announce the release of version 0.0.2 of <a href=3D"https://gi=
thub.com/igarnier/prbnmcn-dagger">prbnmcn-dagger</a>.
</p>

<p>
This version adds Sequential Monte-Carlo, a.k.a. <a href=3D"https://en.wiki=
pedia.org/wiki/Particle_filter">particle
filters</a>-based inference to the library.
</p>

<p>
Here's the full changelog:
</p>
<ul class=3D"org-ul">
<li>Dependency: <code>prbnmcn-stats.0.0.3</code> -&gt; <code>prbnmcn-stats.=
0.0.4</code></li>
<li>Add beta distribution to Gsl samplers</li>
<li>Refactor Cps monad</li>
<li>Add SMC inference</li>
<li>Simplify handler type, modularize effect definitions away from Cps_mona=
d</li>
<li>Fix typo: bernouilli -&gt; bernoulli (report by @nilsbecker)</li>
</ul>

<p>
I also wrote the following article: <a href=3D"http://probanomicon.xyz/blog=
/wind_power_forecast.html">Applying Sequential Monte-Carlo to time series
forecasting</a>
It contains some use cases for the library, I hope some find it fun :)
</p>

<p>
To conclude this post, and as a partial answer to @gasche 's
<a href=3D"https://discuss.ocaml.org/t/multi-shot-continuations-gone-foreve=
r/9072/5">question</a> in an older thread, I believe
that unlike some other inference techniques, single-shot continuations are =
enough to implement SMC. Without getting
into the details, the implementation is very reminiscent of that of lightwe=
ight threading libraries. I look forward
to experiment with a fibre-based implementation!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-6" class=3D"outline-2">
<h2 id=3D"6">MirageOS 4.0</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-mirageos-4-0/9598/1">ht=
tps://discuss.ocaml.org/t/ann-mirageos-4-0/9598/1</a>
</p>
</div>

<div id=3D"outline-container-orgcafd8ed" class=3D"outline-3">
<h3 id=3D"orgcafd8ed">Thomas Gazagnaire announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgcafd8ed">
<p>
<b>On behalf of the MirageOS team, I am delighted to announce the release o=
f MirageOS 4.0.0!</b> I'd like to send
special thanks to @dinosaure and @Lortex who drove that release forward for=
 multiple years.
</p>

<p>
Since the first release of 2013, MirageOS has made steady progress toward d=
eploying a self-managed internet
infrastructure. The project=E2=80=99s initial aim was to self-host as many =
services as possible
aimed at empowering internet users to securely deploy infrastructure to own=
 their data and take back control of their
privacy. MirageOS can securely deploy <a href=3D"https://github.com/roburio=
/unipi">static website hosting</a> with =E2=80=9CLet=E2=80=99s Encrypt=E2=
=80=9D
certificate provisioning and a <a href=3D"https://github.com/mirage/ptt">se=
cure SMTPstack</a> with security extensions. MirageOS
can also deploy decentralised communication infrastructure like <a href=3D"=
https://github.com/mirage/ocaml-matrix">Matrix</a>,
<a href=3D"https://github.com/roburio/openvpn">OpenVPN servers</a>, and <a =
href=3D"https://github.com/roburio/tlstunnel">TLS tunnels</a> to
ensure data privacy or <a href=3D"https://github.com/mirage/ocaml-dns">DNS(=
SEC) servers</a> for better authentication.
</p>

<p>
The protocol ecosystem now contains <a href=3D"https://github.com/mirage/">=
hundreds of libraries</a> and services
millions of daily users. Over these years, major commercial users have join=
ed the projects. They rely on MirageOS
libraries to keep their products secure. For instance, the MirageOS network=
ing code powers
<a href=3D"https://www.docker.com/blog/how-docker-desktop-networking-works-=
under-the-hood/">Docker Desktop=E2=80=99s VPNKit</a>, which
serves the traffic of millions of containers daily. <a href=3D"https://www.=
citrix.com/fr-fr/products/citrix-hypervisor/">Citrix
Hypervisor</a> uses MirageOS to interact with Xen, the
hypervisor that powers most of today=E2=80=99s public cloud. <a href=3D"htt=
ps://www.nitrokey.com/products/nethsm">Nitrokey</a> is
developing a new hardware security module based on MirageOS. <a href=3D"htt=
ps://robur.io/">Robur</a> develops a unikernel
orchestration system for fleets of MirageOS unikernels. <a href=3D"https://=
tarides.com/">Tarides</a> uses MirageOS to improve the
<a href=3D"https://tezos.com/">Tezos</a> blockchain, and <a href=3D"https:/=
/hyper.ag/">Hyper</a> uses MirageOS to build sensor analytics and an
automation platform for sustainable agriculture.
</p>

<p>
In the coming weeks, our blog will feature in-depth technical content for t=
he new features that MirageOS brings, as
well as a tour of the existing community and commercial users of MirageOS. =
Please reach out if you=E2=80=99d like to tell us
about your story.
</p>
</div>

<div id=3D"outline-container-org2d7fef3" class=3D"outline-4">
<h4 id=3D"org2d7fef3">Install MirageOS 4</h4>
<div class=3D"outline-text-4" id=3D"text-org2d7fef3">
<p>
The easiest way to install MirageOS 4 is by using the opam version 2.1 and =
`ocaml&gt;=3D4.12.1`. Follow the <a href=3D"https://mirage.io/docs/install"=
>installation
guide</a> for more details.
</p>

<pre class=3D"example" id=3D"org01e04c7">
$ opam update
$ opam install 'mirage&gt;4'
</pre>

<p>
<i>Note</i>: if you upgrade from MirageOS 3 you will need to manually clean=
 the previous generated files (or call <code>mirage
clean</code> before upgrading). You would also want to read <a href=3D"http=
s://mirage.io/docs/breaking-changes">the full list of API
changes</a>.  You can see unikernel examples in
<a href=3D"https://github.com/mirage/mirage-skeleton">mirage/mirage-skeleto=
n</a>,
<a href=3D"https://github.com/roburio/unikernels">roburio/unikernels</a> or
<a href=3D"https://github.com/tarides/unikernels">tarides/unikernels</a>.
</p>
</div>
</div>

<div id=3D"outline-container-orgc806b6b" class=3D"outline-4">
<h4 id=3D"orgc806b6b">About MirageOS</h4>
<div class=3D"outline-text-4" id=3D"text-orgc806b6b">
<p>
MirageOS is a library operating system that constructs unikernels for secur=
e, high-performance, low-energy footprint
applications across various hypervisor and embedded platforms. It is availa=
ble as an
open-source project created and maintained by the <a href=3D"https://github=
.com/orgs/mirage/teams/core/members">MirageOS Core
Team</a>. A unikernel can be customised based on the target
architecture by picking the relevant MirageOS libraries and compiling them =
into a standalone operating system, which
contains strictly the functionality necessary for the target. This minimise=
s the unikernel=E2=80=99s footprint, increasing
the security of the deployed operating system.
</p>

<p>
The MirageOS architecture can be divided into operating system libraries, t=
yped signatures, and a metaprogramming
compiler. The operating system libraries implement various functionalities,=
 ranging
from low-level network card drivers, to full reimplementations of the TLS p=
rotocol, as well as the Git protocol to
store versioned data. A set of typed signatures ensures that the OS librari=
es are consistent
and work well in conjunction with each other. Most importantly, MirageOS is=
 also a metaprogramming compiler that can
input OCaml source code along with its dependencies, and a deployment target
description in order to generate an executable unikernel, i.e., a specialis=
ed binary artefact containing only the
code needed to run on the target platform. Overall, MirageOS focuses on pro=
viding a small, well-defined, typed
interface with the system components of the target architecture.
</p>

<p>
Read the full announcement on <a href=3D"https://mirage.io/blog/announcing-=
mirage-40">mirage.io's blog</a>.
</p>
</div>
</div>
</div>


<div id=3D"outline-container-org0eb30e5" class=3D"outline-3">
<h3 id=3D"org0eb30e5">Anil Madhavapeddy then added</h3>
<div class=3D"outline-text-3" id=3D"text-org0eb30e5">
<p>
For those curious about what some of the MirageOS libraries <span class=3D"=
underline">are</span>, there is a raw Yaml list over at
<a href=3D"https://github.com/mirage/mirage-repositories/blob/main/repos.ym=
l">mirage/mirage-repositories</a> listing most of them.
Conversion of this Yaml to HTML for the main mirage.io website would be a w=
elcome contribution! :slight_smile:
</p>
</div>
</div>
</div>




<div id=3D"outline-container-7" class=3D"outline-2">
<h2 id=3D"7">OCaml 4.14.0 is released</h2>
<div class=3D"outline-text-2" id=3D"text-7">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ocaml-4-14-0-is-released/96=
00/1">https://discuss.ocaml.org/t/ocaml-4-14-0-is-released/9600/1</a>
</p>
</div>

<div id=3D"outline-container-org622d857" class=3D"outline-3">
<h3 id=3D"org622d857">octachron announced</h3>
<div class=3D"outline-text-3" id=3D"text-org622d857">
<p>
The OCaml team has the pleasure of celebrating the birthday of Alexander Gr=
othendieck by
announcing the release of OCaml version 4.14.0.
</p>

<p>
Some of the highlights in the 4.14.0 release are:
</p>

<ul class=3D"org-ul">
<li>Integrated support for "go to definitions" in Merlin.</li>
<li>Standard library: new modules <code>In_channel</code> and <code>Out_cha=
nnel</code>,
many new functions in Seq module, UTF decoding and validation support
for strings and bytes.</li>
<li>Runtime optimisation: GC prefetching. Benchmarks show a speedup of arou=
nd 20%
in GC-heavy programs.</li>
<li>Improved error messages in particular for module-level error.</li>
<li>Deprecated functions and modules in preparation for OCaml 5.
In particular, the Stream and Genlex modules are now deprecated.</li>
<li><p>
Type variables can be explicitly introduced in value and variant constructor
declarations. For instance,
</p>
<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">val</span> <span style=3D"color: #0000ff;">fold</span>: ('acc -&gt; 'e=
lt -&gt; 'acc) -&gt; 'acc -&gt; 'elt list -&gt; 'acc
<span style=3D"color: #000000; font-weight: bold;">type</span> <span style=
=3D"color: #228b22;">showable</span> =3D <span style=3D"color: #000000; bac=
kground-color: #ffffff;">Show</span>: 'a * ('a -&gt; string) -&gt; showable
</pre>
</div>
<p>
can now be written as
</p>
<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">val</span> <span style=3D"color: #0000ff;">fold</span>: 'acc 'elt. ('a=
cc -&gt; 'elt -&gt; 'acc) -&gt; 'acc -&gt; 'elt list -&gt; 'acc
<span style=3D"color: #000000; font-weight: bold;">type</span> <span style=
=3D"color: #228b22;">showable</span> =3D <span style=3D"color: #000000; bac=
kground-color: #ffffff;">Show</span>: 'a. 'a * ('a -&gt; string) -&gt; show=
able
</pre>
</div></li>
<li>Tail-call with up to 64 arguments are now guaranteed to be optimized
for all architectures.</li>
<li>Experimental tail modulo cons (TMC) transformation</li>
</ul>

<p>
The full list of changes can be found in the changelog below. (<i>editor=E2=
=80=99s note: please follow the archive link for the full changelog</i>)
</p>

<p>
Those releases are available as OPAM switches, and as a source download her=
e:
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://github.com/ocaml/ocaml/archive/4.14.0.tar.gz">https:=
//github.com/ocaml/ocaml/archive/4.14.0.tar.gz</a></li>
<li><a href=3D"https://caml.inria.fr/pub/distrib/ocaml-4.14/ocaml-4.14.0.ta=
r.gz">https://caml.inria.fr/pub/distrib/ocaml-4.14/ocaml-4.14.0.tar.gz</a><=
/li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-8" class=3D"outline-2">
<h2 id=3D"8">ocaml-in-python.0.1.0: Effortless Python bindings for OCaml mo=
dules</h2>
<div class=3D"outline-text-2" id=3D"text-8">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-ocaml-in-python-0-1-0-e=
ffortless-python-bindings-for-ocaml-modules/9603/1">https://discuss.ocaml.o=
rg/t/ann-ocaml-in-python-0-1-0-effortless-python-bindings-for-ocaml-modules=
/9603/1</a>
</p>
</div>

<div id=3D"outline-container-orgb380a45" class=3D"outline-3">
<h3 id=3D"orgb380a45">Thierry Martinez announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgb380a45">
<p>
I am happy to announce the first release of <code>ocaml-in-python</code>: t=
his is a Python package that exposes all OCaml
modules as Python libraries, generating bindings on the fly. This can be se=
en as a dual of
<a href=3D"https://discuss.ocaml.org/t/ann-pyml-bindgen-a-cli-app-to-genera=
te-python-bindings-directly-from-ocaml-value-specifications/8786"><code>pym=
l_bindgen</code></a>:
<code>pyml_bindgen</code> binds Python libraries in OCaml, while <code>ocam=
l-in-python</code> binds OCaml modules in Python.
</p>

<p>
It is available from <a href=3D"https://github.com/thierry-martinez/ocaml-i=
n-python">GitHub</a> or <b>via</b> <code>opam</code>: <code>opam install
ocaml-in-python</code>
</p>

<p>
Requirements: <code>OCaml</code> &gt;=3D 4.13, <code>Python</code> &gt;=3D =
3.7.
</p>

<p>
Once installed <b>via</b> <code>opam</code>, the package should be register=
ed in the Python environment:
</p>

<ul class=3D"org-ul">
<li><p>
either by registering the package with <code>pip</code> using the following=
 command (requires Python &gt;=3D3.8):
</p>
<div class=3D"org-src-container">
<pre class=3D"src src-shell">pip install --editable <span style=3D"color: #=
8b2252;">"`opam var ocaml-in-python:lib`"</span>
</pre>
</div></li>
<li><p>
or by adding the following definition to the environment:
</p>
<div class=3D"org-src-container">
<pre class=3D"src src-shell"><span style=3D"color: #483d8b;">export</span> =
<span style=3D"color: #a0522d;">PYTHONPATH</span>=3D<span style=3D"color: #=
8b2252;">"`opam var share`/python/:$PYTHONPATH"</span>
</pre>
</div></li>
</ul>

<p>
Then, we can <code>import ocaml</code> in Python and use OCaml modules:
</p>
<div class=3D"org-src-container">
<pre class=3D"src src-python">Python 3.10.0 (default, Nov 10 2021, 19:16:14=
) [GCC 7.5.0] on linux
Type <span style=3D"color: #8b2252;">"help"</span>, <span style=3D"color: #=
8b2252;">"copyright"</span>, <span style=3D"color: #8b2252;">"credits"</spa=
n> <span style=3D"color: #a020f0;">or</span> <span style=3D"color: #8b2252;=
">"license"</span> <span style=3D"color: #a020f0;">for</span> more informat=
ion.
&gt;&gt;&gt; <span style=3D"color: #a020f0;">import</span> ocaml
&gt;&gt;&gt; <span style=3D"color: #a020f0;">print</span>(ocaml.List.<span =
style=3D"color: #483d8b;">map</span>((<span style=3D"color: #a020f0;">lambd=
a</span> x : x + 1), [1, 2, 3]))
[2;3;4]
</pre>
</div>

<p>
We can for instance compile an OCaml module on the fly from Python.
</p>
<div class=3D"org-src-container">
<pre class=3D"src src-python">&gt;&gt;&gt; <span style=3D"color: #a0522d;">=
m</span> =3D ocaml.<span style=3D"color: #483d8b;">compile</span>(<span sty=
le=3D"color: #8b2252;">'let hello x =3D Printf.printf "Hello, %s!\n%!" x'</=
span>)
&gt;&gt;&gt; m.hello(<span style=3D"color: #8b2252;">'world'</span>)
Hello, world!
</pre>
</div>

<p>
And we can require and use packages <i>via</i> <code>findlib</code>.
</p>
<div class=3D"org-src-container">
<pre class=3D"src src-python">&gt;&gt;&gt; ocaml.require(<span style=3D"col=
or: #8b2252;">"parmap"</span>)
&gt;&gt;&gt; <span style=3D"color: #a020f0;">from</span> ocaml <span style=
=3D"color: #a020f0;">import</span> Parmap
&gt;&gt;&gt; <span style=3D"color: #a020f0;">print</span>(Parmap.parmap(
...   (<span style=3D"color: #a020f0;">lambda</span> x : x + 1), Parmap.A([=
1, 2, 3]), ncores=3D2))
[2;3;4]
</pre>
</div>

<p>
Details about the conversions are given in
<a href=3D"https://github.com/thierry-martinez/ocaml-in-python/blob/main/RE=
ADME.md"><code>README.md</code></a>.
</p>

<p>
Happy hacking!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-orgfc5addb" class=3D"outline-2">
<h2 id=3D"orgfc5addb">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-orgfc5addb">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or the <=
a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archive=
s</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname" id=3D"org3a0c4d9">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--==-=-=--

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Pour une =C3=A9valuation ind=C3=A9pendante, transparente et rigoureuse !
Je soutiens la Commission d'=C3=89valuation de l'INRIA.

--=-=-=--

