Return-Path: <aaronngray.lists@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id DD3BCE0128
	for <caml-list@sympa.inria.fr>; Tue, 30 Aug 2022 18:32:40 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=aaronngray.lists@gmail.com; spf=Pass smtp.mailfrom=aaronngray.lists@gmail.com; spf=None smtp.helo=postmaster@mail-qv1-f52.google.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  aaronngray.lists@gmail.com) identity=pra;
  client-ip=209.85.219.52;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="aaronngray.lists@gmail.com";
  x-sender="aaronngray.lists@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  aaronngray.lists@gmail.com designates 209.85.219.52 as
  permitted sender) identity=mailfrom; client-ip=209.85.219.52;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="aaronngray.lists@gmail.com";
  x-sender="aaronngray.lists@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1";
  x-record-text="v=spf1 ip4:35.190.247.0/24 ip4:64.233.160.0/19
  ip4:66.102.0.0/20 ip4:66.249.80.0/20 ip4:72.14.192.0/18
  ip4:74.125.0.0/16 ip4:108.177.8.0/21 ip4:173.194.0.0/16
  ip4:209.85.128.0/17 ip4:216.58.192.0/19 ip4:216.239.32.0/19
  ~all"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qv1-f52.google.com) identity=helo;
  client-ip=209.85.219.52;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="aaronngray.lists@gmail.com";
  x-sender="postmaster@mail-qv1-f52.google.com";
  x-conformance=sidf_compatible
IronPort-SDR: UmqwqVzO1/QbEEiIGYJWqjq1JBLT00jhtTxrx3b2jwqFdia15/fFz9ALITe1/LTo6r6Zv5tY2U
 /3ty/+4770lnLtMQHhIqWH6kQVkzOUWbNGzBLd1ubSSDt080UCyXqGtAVjnTFzjvI7p3GdFyvl
 sr37zyPsO9cagsYr4hhqFHpAXhgQ85KYFX76mMDJVkyYpGn4egWNgFfQoTuO9hv5pOgqcNqr7h
 Rt3rDFMZ8wygyPlmHjFN5RI3e2tVQdzyOpFd6ho7Dl1P3Tpy73eDh8Ie20KwIvKVwe1dw3Xitv
 Wrux7Ef0bUAH0jgBN0P6Azyr
X-IPAS-Result: =?us-ascii?q?A0CNBQBMOg5jfzTbVdFaHgEBCxIMQIFEC4IkgVcvBAtFh?=
 =?us-ascii?q?E6RDQOLN4EGkkILAQMBDUIEAQE/hEgChGQCHQcBBDMGDgECBAEBAQEDAgMBA?=
 =?us-ascii?q?QEBAQEDAQEFAQEBAgEBAgQEARMBARgJGQcODgVgAWEDAUSBT4F0CwMxDYI1K?=
 =?us-ascii?q?QGDYwEBAQECARIRHQEbFgcBAwELBgMCCw0CAiYCAiIBEQEFARwGEyKFSAEDD?=
 =?us-ascii?q?SUDjEOPHoEEQoo4eoEVBReBAYIJBoRPChkoDWcDgVkCBxJ/LAGGe4FCh1Yng?=
 =?us-ascii?q?imBS4J0PoREFYNBgmUElwoBAwcDBAYFDwMDAiEBAgFEHgIJAyMRAwsQCBQXA?=
 =?us-ascii?q?SEGBgEBBAEBAgwCAQQBBQMBBAUDBwIBBQYCCQMDAQgDAQEFAQMEAwMDAgcDA?=
 =?us-ascii?q?QIMBAgDAwIDBAICAgIBAwIHBQgEAgcCAgIBAgICBAIBAwkBAgMFAgIJCwEEA?=
 =?us-ascii?q?gIDAQMBAQIIBAkEAgMEAgEBAwIBAgIBBQIOBQEBAQECBQECAwEGBwIIAhwKA?=
 =?us-ascii?q?QMDAwICBQICAQIDAgIMAQEEAgECAQIGAQMBAgIDAQMBAgIDAgYJAgQBBQMDA?=
 =?us-ascii?q?gIDAQEFDwUCBAIBAgYFAgEBAQQBAwQEBgICAQMDAg4CBAEEAQIBASMDBAIDA?=
 =?us-ascii?q?QMXAQIBAgMDAwQGBwUCAQITAQIBAQEFAQIBAQMEBAcJAwICBAMDBQEBAgMCA?=
 =?us-ascii?q?QEBBwwCAgISAhMDAQYBDgUUAwIEAgIBAgIKAwECAgEDAgkCAQIBBSADAQEPJ?=
 =?us-ascii?q?AEBAgICAgMEBwIBBAYDDQICAQEBBQYNAwIDCAEMAgcDAgEDBQICBAECBAoJA?=
 =?us-ascii?q?QICAQIEBQcCAQgEBQ0FCQsBAQIBAwcEAxECBQMFBQMDAgEKBQIDAQIBAQMEA?=
 =?us-ascii?q?QMEBgEBAgMCAgEGAgIBAQMDBAMBAgYCAgcCAwIBBAIDAwEBAQQCAgICAgMDC?=
 =?us-ascii?q?AMCCAcFAQYBAgEEAwICAQIHAQQBCAIBAwMFAwQBCg8DBQMBAwMCFAoFAQMIB?=
 =?us-ascii?q?gkCBAUCBQMCBAIDAwICCAMCBAMCCwMCBgQCBwQPBwIDAgIFAgICAgIFBAMBA?=
 =?us-ascii?q?gICAgICBQIEAgEFAQICAQICAgQBAgIHBAIDAQMEDgQDAgICBQECAgEGAgcDA?=
 =?us-ascii?q?QIBBAMBAQQCBAECBQIEAQMBAgYCBAMKAgMCAgIGCAMDDAkCAwUCBAEBAgcEA?=
 =?us-ascii?q?gILAQYCBwICAQIDEAEDAgEEBQUDAwMJAgIDAgQCAgoBAQEBAgIBBQUCBAcPA?=
 =?us-ascii?q?gICBAICAgEDAgIBAQICBQQJEgEBAgMGBAYFAwIIGAEGAgIBAQICAgMDAgYCA?=
 =?us-ascii?q?QIIAgQBBAUCAQICAgIEAQMGAgMBAQIBAgIDAwIBBAIEAwMBAgECAgIDAgICA?=
 =?us-ascii?q?wICARACBgYBAgICAgIDAgIBAgEFAQIBAgQCBwIEAwIBAgIFAgICAwEBBgIEC?=
 =?us-ascii?q?wEDAgcGAQMCBwUCAwECAwQDAwsFDAgBBQEDASEDAgIIAgcCAQUDBQEPAwICA?=
 =?us-ascii?q?wICAQQKAgMFAgQCAQIBBAkHAgQBAgkDAwYCBwUYAQICBwQMCgICAgUGAgQBA?=
 =?us-ascii?q?QEBAwECAgECAwQCAwIEBQEFAgECBQQCAgEBAgUCDAECAQcGAgcDAgICAwEEA?=
 =?us-ascii?q?gECAQMDAgMBAQEDBgYFCQQCAwMGAgICBgICAwISAwYHAgYDAgQBDQ4FBAcIA?=
 =?us-ascii?q?QIBAQIHAgQCBwkCDgJPlzsIglEFKD07CzKSGa8dB4NVgUWeYTKDdoxQmDAdl?=
 =?us-ascii?q?mqnUBAjEoFCJIFbHxQaI1AxgjZOAQIBAQENAQIBAQMBAgECCQEBAo4dDBaDU?=
 =?us-ascii?q?IpfQzE7AgYBCgEBAwmKUgEB?=
IronPort-PHdr: A9a23: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
 vsehQ53YOBr/zDpsQ9fGw==
IronPort-Data: A9a23:2nzoH6jtIQonhJjPvOcO8UWTX161oBYKZh0ujC45NGQN5FlHY01je
 htvUW2Bb6qJNmL8fo9wbI7nph4Ev5bUzdY1SQpoqiA9RS9jpJueD7x1DG+gZnLIdpWroGFPt
 phFNIGYdKjYaleG+39B55C49SEUOZmgH+a6UKieUsxIbVcMpB0J0HqPoMZkxN8z6TSFK1nV4
 4mq85aHYAXNNwNcawr41YrT8HuDg9yp4Fv0jnRmDRyclAK2e9E9VfrzFInpR5fKatE88t2SG
 44v+IqEElbxpH/BPD8KfoHTKSXmSpaKVeSHZ+E/t6KK2nCurQRquko32WZ1hUp/0120c95NJ
 NplmsbuRiA2IfDwiMM3cRNBAxNSE6Fk0eqSSZS/mZT7I0zudnLtx7B3EhhzM9BCvOlwBm5K+
 LoTLzVlghKr3brnhuLmDLM114J+dqEHP6tH0p1k5TjQF/EgR5/ZSrSM4d5DwCwYicVHHPKYb
 M0cAdZqREmYPkIVYQ5IYH44tM2o3GHTVDEHk1/PjO0YwVDyxwVY1Le4ZbI5ffTTHZkP9qqCn
 UrI52PlHhAXLvSNyD+P6Hvqh+nVnCq9Vph6PLax8/ovhFyI2kQIGRgOXB26p+O4gwiwQbpix
 1c8/yMvqe0r6hXuQISnGRK/p3GAs1gXXN84//AGBB+l5fCK7CGGGTU4XhlrStY/pP0aazAI/
 wrc9z/2PgBHvLqQQHOb076bqzKuJCQYRVPugwdUHWPpBPGz8OkOYgLzosVLS/Hq04Wkcd3k6
 3Xb83hk3uR7Ydsjjv3jpTj6bySQSo8lpzPZCy3SV2OhqxpnPcurOtbu5l/c4vJNao2eSzFtX
 UToeeDOsoji7rnXzERhpdnh+pn0tp5p1xWB0DZS82EJrWjFxpJaVdk4DMtCDEloKN0YXjTif
 VXevwhcjLcKYiXzMv4oMtnpUJtwpUQFKTgDfqCEBjapSsghHDJrAAkzDaJt9zuwzhZ0wPFX1
 WmzKJ/9VSdy5VtbIMqeHr9Bi9fHNwgxwmTcQZ2T8vhU+ev2WZJhcp9caAHmRrlhssus+VyJm
 /4CaZbi40gACIXWPHOLmaZNdgtiBSZgVfjLRzl/LLHrzvxOQzF/VZc8ANoJJ+RYokiivr6Vo
 ynkBRIJlQqXaL+uAVziV02PoYjHBf5XxU/X9wR1Vbpx83R8M4up8okFcJ47Iesu+OB5nKx7S
 vAEf4OLBfEWEmbL/DEUbJ/cqo1+dUTz1VjeYXb9ODVvLYR9QwHp+8P/elS9+SQLCB2xv5Rsr
 rCl0DTdXpdeFR9pC9zbaa70wl7o5Sodlet+UlHmON5WfEmwooFmJzag3PAyKsAIbx7Ew2LCh
 QqRBB4Zo8jLopM0oIGZ3/Da89/xHrInTERAHmTd4bKnDgXg/zKukd1aTeKFXTHBT2erqqivY
 ONiyfujYvAKmVB9tZUlT+RmwKc40NvYp7FAyzNiEniWPU+gDaltIyXf0MRC6v9Ny7tetVfkU
 06D4IMBa7CAOcegCUBIYQR4NKKM0vYbnjSU5vMweR2o6Chy9buBcENTIxjc13AHfeUtaNsok
 bU7pcobyw2jkR52YNyIuSZZqjaXJXsaXqR765wXXN3xhgwwxg0QaJDQEHWtspSGatEJK1dzZ
 zHJ3uzNgLNTwkeEeH02TCCf0e1YjJUImRZL0F5SeAjTy4Sd3qc6jE9L7DA6bgVJ1REbgeh9D
 W5mah9uLqKU8jY02cVOUghAwe2a6MF1J6Aw97cIqIEdZ0yhV2iINXNkfOjQpgYW9GVTejUd9
 7adoIogvfAGY+mpthbem2Y8wxAgcTC13gLHkcGjWc+CGvHWpBL717S2azNgRwTPWKsMaY6um
 QWu1Ol1YKz/cyUXpsXXzmVcOas4EHi5GYCJfR2tEG7l040RlPFeFAVi83yMR/4=
IronPort-HdrOrdr: A9a23:s1qs7Kjb8LZDgZMlG3YUD9GitHBQXu8ji2hC6mlwRA09TyVXrb
 HWoB19726OtN9xYgBZpTnkAsO9qBznhPtICOUqTNWftUzdyQiVxeJZjLcKoQeQfxEWn9Q1vc
 xdmupFaOEYZmIK6voSjjPIderIA+PqzElrv4rjJrtWIj2CopsP0ztE
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-AV: E=Sophos;i="5.93,275,1654552800"; 
   d="scan'208";a="50572317"
X-MGA-submission: =?us-ascii?q?MDF9upxGrVr3P4YNH/0fHzsAE1uxhpjXFxCgmw?=
 =?us-ascii?q?xUGhJNv+6X9t9RcpbJrMyWsJ/GdjWlSNApaDd5Awc8xebCegZWmGpkwr?=
 =?us-ascii?q?OXQu2Bv3HWt9RCYndA5ZJYkjUaN5bdMvvCyvB+dsB8No4BnjrKESNp/s?=
 =?us-ascii?q?Ynwu5Zsw1pndkeVTCo4s9LBQ=3D=3D?=
Received: from mail-qv1-f52.google.com ([209.85.219.52])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 30 Aug 2022 18:32:39 +0200
Received: by mail-qv1-f52.google.com with SMTP id jy14so3321065qvb.12;
        Tue, 30 Aug 2022 09:32:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20210112;
        h=content-transfer-encoding:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:from:to:cc;
        bh=4LstMkhCsd772PXbpeGJJ2mbetG6HIK5VBOA89YXtus=;
        b=Ke/xa/9qL87QohbkF09ozexijTnfcqsxp4YO6KOnaBW5kR7rdSGqckbJOP3XgXpaxK
         Pri1oLnrVABs37nkLZDSe0krUbGuW5etePvwibzk2SZtBV/cop6x+eylHeNCk0KG4alB
         nbJTUKuJSnk7wa61A6aifhMMPPaQ/TcEYvZlNFQYWCsgD69SYF5nS5pfyO8dzoYoPD14
         Ga0WHIGV0dRJNGqZ3ZobUX5/WfSiCG4z+vZ1KLHxnxIxJg5hd8tyrazPeVKYZsaF0qjD
         dJf4rm+AmV3/7ncWVS7Ls7n5RuTjJO8zsBS8dW/pR6T0GKw1F8oPzHlnaoSfWNgr9PwC
         dAFA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20210112;
        h=content-transfer-encoding:cc:to:subject:message-id:date:from
         :in-reply-to:references:mime-version:x-gm-message-state:from:to:cc;
        bh=4LstMkhCsd772PXbpeGJJ2mbetG6HIK5VBOA89YXtus=;
        b=DfRrXbEFfQH/740M9JzpphAUzYVIlzlzPp9SUyWp1Pee81fOaRbo8n19fFg/sQ+v4w
         yui6PD6uZ9/3GoPuyf0usYxxuzH9R8mM6JIXCc8bJDao3OQWP9JE3P0sHrCaXGxO8sI1
         a/OP+djwfDrxVbmmvNMkP/leDUQQC55ggF7uNUUZd52Bi+sghYGxvdnm0T3GMS9I+78b
         l631pT6V8a2DfXh+TxfNq6ZeO3/YjTmjtFe7bG7Jz6fxj3lpyGfnXuOvZsA0USqab4aR
         E86kHYBxgvDpu5pAs5yQAKiLSzBvHGi8Ww7vTzPXD/6NlMMwgyqHMadiIfLBypLBhdS2
         zzEQ==
X-Gm-Message-State: ACgBeo1XxHrAuZVluTGaw7X61MmFXafSuSxgZI2RdjV29+cwBfEhBfrU
	H7fu4BkIreiLq6BuZHyToxVfHh688166N90aSo907bQjlTg=
X-Google-Smtp-Source: AA6agR68dle4UMH+EiWY47FzckffaogAjktqGfjEoQ/mkAEBgruc0YKe12wA7ofZ1Jxnzjl0DBcOWHca2AVvkRMjPZI=
X-Received: by 2002:a05:6214:e4e:b0:476:c48f:ad7 with SMTP id
 o14-20020a0562140e4e00b00476c48f0ad7mr15732275qvc.33.1661877158516; Tue, 30
 Aug 2022 09:32:38 -0700 (PDT)
MIME-Version: 1.0
References: <CANkmNDf-VLO+1jW1uVCYcP0bh9HaWD-7_5PRD4dVt-SAr356kg@mail.gmail.com>
 <25e68e2c-04d2-7764-e189-00812c08a34a@inria.fr> <CANkmNDeFiieWNq0WEh0p52E61qHUJ2_BMH8int67uif+RrRAQw@mail.gmail.com>
 <8078ad33-f220-b233-4863-06ce30cc8cff@inria.fr>
In-Reply-To: <8078ad33-f220-b233-4863-06ce30cc8cff@inria.fr>
From: Aaron Gray <aaronngray.lists@gmail.com>
Date: Tue, 30 Aug 2022 17:32:22 +0100
Message-ID: <CANkmNDfUOOGcbj5Ty6tNUU0ADikxGCim0==ExPxuwoqQT_jqkQ@mail.gmail.com>
To: =?UTF-8?Q?Fran=C3=A7ois_Pottier?= <francois.pottier@inria.fr>
Cc: OCaML Mailing List <caml-list@inria.fr>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Subject: Re: [Caml-list] coinductive data types

Hi Fran=C3=A7ois,

On Tue, 30 Aug 2022 at 16:47, Fran=C3=A7ois Pottier
<francois.pottier@inria.fr> wrote:
> On 30/08/2022 14:37, Aaron Gray wrote:
>  > My original path of inquiry which I should have actually stated was
>  > regarding how to go about implementing subtyping of mutually recursive
>  > algebraic data types.
>
> Do you mean implementing an algorithm that decides whether two types are
> related by subtyping, in the presence of mutually recursive algebraic
> data types?

Yes exactly, as well as equivalence obviously..

> I guess the answer depends on exactly how the subtying relation is define=
d.
> E.g., if "=CE=B1 foo" and "=CE=B2 bar" are (parameterized) algebraic data=
 types, does
> the subtyping relation "=CE=B1 foo =E2=89=A4 =CE=B2 bar" necessarily impl=
y that "foo" and
> "bar"
> are the same algebraic data type?
>
> - If the answer is positive, then the problem boils down to deciding
>    "=CE=B1 =E2=89=A4 =CE=B2" or "=CE=B2 =E2=89=A4 =CE=B1" or neither or b=
oth, depending on whether this
>    algebraic data type is covariant or contravariant or neither or both.
>    In that case, you are working with "isorecursive" types,
>    also known as "nominal" types.
>
> - If the answer is negative, then (I imagine) you wish to unfold the
>    definitions of "foo" and "bar" and decide whether the two unfoldings
>    are related by subtyping.
>    In that case, you are working with "equirecursive" types,
>    also known as "structural" types.

I am looking at how to support both nominal and structural types in a langu=
age.
Basically at the top level with keywords 'transparent' and 'opaque',
both for type declarations,
and only narrowing 'opaque' for variable declarations and, as only
narrowing casts on value or type parameterization.

> Brandt and Henglein ("Coinductive axiomatization of recursive type equali=
ty
> and subtyping", 1998) study the second problem, if I remember correctly.

Yes I found this paper pretty early on and seems to be the founding
paper in this area, having said that, it does not seem to deal with
union and intersection types.

What I have gathered is that in order to have completeness of type
system and soundness you need the type system to be implemented as a
type lattice, there by underpinning the system on to a topological
space and thus being constructable and well founded.

>  > Does OCaML use/handle subtyping of mutually recursive algebraic data
>  > types ? And if so, is its implementation easily accessible ?
>
> OCaml has explicit subtyping coercions: a user can write `(e : t1 :> t2)`
> and the compiler will check that `t1` is a subtype of `t2`.
>
> As far as algebraic data types are concerned, OCaml's notion of subtyping=
 is
> nominal, I believe. An algebraic data type can be decorated with variance
> annotations, so, for instance, "list" can be declared covariant and "=CE=
=B1 list"
> is considered a subtype of "=CE=B2 list" if =CE=B1 is a subtype of =CE=B2=
. However, "=CE=B1
> list"
> can never be considered a subtype of an algebraic data type other than
> "list".
>
> The variance annotations provided by the programmer are checked when an
> algebraic data type is defined, and are later used when deciding whether =
a
> subtyping relation holds.

Yes this is nice, covariance and contravariance annotations.

I don't know how accessible OCaML's, type system code is. I have had a
brief look, I am used to Haskell, and Haskell's type annotations in
order to get my bearings.

Are there any papers on OCaML's type system proper at all please ?

Many thanks for the comprehensive reply.

Aaron
