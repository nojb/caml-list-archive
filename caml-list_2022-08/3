Return-Path: <SRS0=F0K5=YN=polytechnique.org=alan.schmitt@bounces.m4x.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 04A80E0235
	for <caml-list@sympa.inria.fr>; Tue,  9 Aug 2022 10:02:52 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=Pass smtp.pra=alan.schmitt@polytechnique.org; spf=Pass smtp.mailfrom=SRS0=F0K5=YN=polytechnique.org=alan.schmitt@bounces.m4x.org; spf=Pass smtp.helo=postmaster@mx1.polytechnique.org
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  alan.schmitt@polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=pra; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=F0K5=YN=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="alan.schmitt@polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  SRS0=F0K5=YN=polytechnique.org=alan.schmitt@bounces.m4x.org
  designates 129.104.30.34 as permitted sender)
  identity=mailfrom; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=F0K5=YN=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="SRS0=F0K5=YN=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  postmaster@mx1.polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=helo; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=F0K5=YN=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="postmaster@mx1.polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1";
  x-record-text="v=spf1 a -all"
IronPort-SDR: AHS6kw021wCl6VxWNdE6uadaKsDeDqL8UCQc6Lhaz4P5FdATiK3XsRygfaTm9Had+R5qr2MAPf
 vRVOiUj5ghihk7ZIX523myEojiOcbzF2NzB6V3Es1gRms6W1vOx0WZ4O813Vp18b/IuLlMLFBk
 op2RMpGBNjrsrM7saXu8xUKSHPNu+DNdmliElVx/zDQIs42rvkveRgbuCw9MOUtcK2uraJywAg
 NtNnEDScpyplNJO7kh5vlmIqRO8yVXMIuu5B0jj//trQimD6QsRgr0bYlRPvS0PyHE95Y2lHlv
 XYlOgnj21Rcb7C4uDU/ITJAZ
X-IPAS-Result: =?us-ascii?q?A0BFAQDVE/JimCIeaIFag3lbKBkBZ1cuBwhFhE6BY4cbC?=
 =?us-ascii?q?YgEiVmHAo4ZEAEDAQ0sAQ4EAQIEAQGCE4E+gTYYhGICHgYBBTMTAQIEAQEBA?=
 =?us-ascii?q?QMCAwEBAQEBAQMBAQUBAQECAQECBAQBEwEBAQEBAQEBCQsJBwYMBRAOBTxkZ?=
 =?us-ascii?q?ASBSwSBdAs0DYI1DBmDcAEYCQQGEwEBOBgjAxQBBgMCBA0BFwEeFwESFAaCY?=
 =?us-ascii?q?wGDIgMEAQtDjTGbGnp/MoEBgggBAQaBPwEDAQIBCgICAxglAYN2gVwJJIEZh?=
 =?us-ascii?q?kNiTQGDGwmEFwInEIFVRIEUAYIpUW6CRAcXAQEBAQGBOwEBTYMpgmWYVAc3A?=
 =?us-ascii?q?0UeQgMLUggJFxIQEAIEERoLBgMWPwkCBA4DQAgNAxEEAw8YCRIIEAQGAzEMJ?=
 =?us-ascii?q?QsDBQ8MAQYDBgUDAQMbAxQDBSQHAxkPIw0NBB8dAwMFJQMCAhsHAgIDAgYVB?=
 =?us-ascii?q?gICGDY5CAQIBCsjDwUCBy8FBC8CHgQFBhEIAhYCBgQEBAQWAhAIAggnFwcTM?=
 =?us-ascii?q?xkBBVkQCSEWBigQBQYTAyBJJgVFDygzNTwrHxsKgRIqCSIVAwQEAwIGEwMDI?=
 =?us-ascii?q?gIQLjEDFQYpExItCSt1CQIDIm4DAwQqLgMJIR8HCSQqPQUFYpVpD4F8gT8OO?=
 =?us-ascii?q?AYPbRMBByIBAQQrIQYCOAEKBRQZDQ4rHwsLAi2SBhADCwOOH4pplEF9NAeDV?=
 =?us-ascii?q?IE+BgyINYEijQOIKIN2gVCCC4hpkUqGYiGWXyCCKocDgRgJgkqINYwvCIU1g?=
 =?us-ascii?q?TQaKoFpDgczGjBDgmcJCTwBAwINAQICAwECAQIJAQECjikWgQQBCYIaKIJkg?=
 =?us-ascii?q?XU7WoRyPzQCAQEHMAIGAQoBAQMJhWMBAQUTCwGIfgEB?=
IronPort-PHdr: A9a23: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
IronPort-Data: A9a23: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
 74=
IronPort-HdrOrdr: A9a23:GXbGWqMUqwqPPsBcTvyjsMiBIKoaSvp037BL7TETdfUxSKalfq
 +V8sjzuSWYtN9zYhEdcLK7WZVoKEm0nfVICOIqUotKMjOLhEKYaKlcqaHizzfjFyCWzJ8+6Y
 5QN45kBpnVBVh+5PyKhDVQ/uxQpeW6zA==
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-AV: E=Sophos;i="5.93,224,1654552800"; 
   d="scan'208,217";a="21007989"
X-MGA-submission: =?us-ascii?q?MDFJ8fl78nrHOSPFvqIg36eFQues8MF4B5NCk5?=
 =?us-ascii?q?Eb/zl17V7ua6W+A7QrjCvJuPF2bYD7mj1Dai3IQjTVdumCWIIOWn9p0A?=
 =?us-ascii?q?5CXBHfeWlFtxIcMIEFxHBKoV3SFPmygZp8/MW4GF13QMVgCsRVJW9D7t?=
 =?us-ascii?q?DW2e92pgxlIKFYdk6w9tHTcA=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 09 Aug 2022 10:02:51 +0200
Received: from set (lfbn-cle-1-507-42.w90-114.abo.wanadoo.fr [90.114.250.42])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id 4096D56482C;
	Tue,  9 Aug 2022 10:02:45 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=polytechnique.org;
	s=svoboda; t=1660032169;
	bh=4KS7JPtL5lsWjIW+8req/2jWnfY3GyNrXintjymF7d8=;
	h=From:To:Subject:Date:Message-ID;
	b=05pcLf/qZZNWkwNqml7DLkivVIbuBAvC/V45zjbA3YgorwefByPZtAHPa8QYG7vTl
	 Mh2TVQpu4V8RS3hPYaD/uOrHjOLECLuJ57EI4i2Shf3ySZijVD+i77IpF2m9Bzc5Op
	 bSPFLkAQx5dj0FL/3r5Pz7z25FfGC156I07y92jA=
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr
Date: Tue, 09 Aug 2022 10:02:39 +0200
Message-ID: <87tu6l974w.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Aug  9 10:02:49 2022 +0200 (CEST))
X-Spam-Flag: Unsure, tests=bogofilter, spamicity=0.465487, queueID=84514564834
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: base64

SGVsbG8NCg0KSGVyZSBpcyB0aGUgbGF0ZXN0IE9DYW1sIFdlZWtseSBOZXdzLCBmb3IgdGhlIHdl
ZWsgb2YgQXVndXN0IDAyIHRvIDA5LA0KMjAyMi4NCg0KVGFibGUgb2YgQ29udGVudHMNCuKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQpweW1sX2Jp
bmRnZW46IGEgQ0xJIGFwcCB0byBnZW5lcmF0ZSBQeXRob24gYmluZGluZ3MgZGlyZWN0bHkgZnJv
bSBPQ2FtbCB2YWx1ZSBzcGVjaWZpY2F0aW9ucw0KSW50ZXJlc3RpbmcgT0NhbWwgQXJ0aWNsZXMN
CkxvZ3MgdG8gYSBmaWxlIChhIHByaW1pdGl2ZSB3YXkpDQpUaW1lZGVzYyAwLjguMCAtIG1vZGVy
biBkYXRlIHRpbWUgaGFuZGxpbmcNCk9DYW1sIHdlYnNpdGU6IE93bCBib29rIG5vdCBsaXN0ZWQN
CkFwcGxpY2F0aW9uLXNwZWNpZmljIEltcHJvdmVtZW50cyB0byB0aGUgRWNvc3lzdGVtDQpPdGhl
ciBPQ2FtbCBOZXdzDQpPbGQgQ1dODQoNCg0KcHltbF9iaW5kZ2VuOiBhIENMSSBhcHAgdG8gZ2Vu
ZXJhdGUgUHl0aG9uIGJpbmRpbmdzIGRpcmVjdGx5IGZyb20gT0NhbWwgdmFsdWUgc3BlY2lmaWNh
dGlvbnMNCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0K
DQogIEFyY2hpdmU6DQogIDxodHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3QvYW5uLXB5bWwtYmlu
ZGdlbi1hLWNsaS1hcHAtdG8tZ2VuZXJhdGUtcHl0aG9uLWJpbmRpbmdzLWRpcmVjdGx5LWZyb20t
b2NhbWwtdmFsdWUtc3BlY2lmaWNhdGlvbnMvODc4Ni84Pg0KDQoNClJ5YW4gTW9vcmUgYW5ub3Vu
Y2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIANCg0KTmV3IHJlbGVhc2UNCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKV
jA0KDQogIFZlcnNpb24gMC40LjEgaXMgbm93IGF2YWlsYWJsZSBmcm9tIFtHaXRIdWJdIGFuZCBb
T3BhbV0uICBUaGUgW2NoYW5nZQ0KICBsb2ddIGhhcyBtb3JlIGRldGFpbHMuDQoNCg0KW0dpdEh1
Yl0NCjxodHRwczovL2dpdGh1Yi5jb20vbW9vcmVyeWFuL29jYW1sX3B5dGhvbl9iaW5kZ2VuL3Jl
bGVhc2VzL3RhZy8wLjQuMT4NCg0KW09wYW1dIDxodHRwczovL29wYW0ub2NhbWwub3JnL3BhY2th
Z2VzL3B5bWxfYmluZGdlbi8+DQoNCltjaGFuZ2UgbG9nXQ0KPGh0dHBzOi8vZ2l0aHViLmNvbS9t
b29yZXJ5YW4vb2NhbWxfcHl0aG9uX2JpbmRnZW4vYmxvYi9tYWluL0NIQU5HRUxPRy5tZD4NCg0K
DQpOZXcgc3R1ZmYNCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjA0KDQpOZXcgYXR0cmlidXRl
cw0K4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSE4pSEDQoNCiAgVGhlcmUg
aXMgYSBuZXcgYXR0cmlidXRlIHlvdSBjYW4gdXNlOiBgcHlfYXJnX25hbWUnLiBJdCBhbGxvd3Mg
eW91IHRvDQogIHVzZSBkaWZmZXJlbnQgYXJndW1lbnQgbmFtZXMgb24gdGhlIE9DYW1sIHNpZGUg
ZnJvbSB0aG9zZSB0aGF0IGFyZQ0KICB1c2VkIG9uIHRoZSBQeXRob24gc2lkZS4NCg0KICBPbmUg
dXNlIGNhc2UgaXMgZm9yIFB5dGhvbiBmdW5jdGlvbnMgdGhhdCBoYXZlIGFuIGFyZ3VtZW50IG5h
bWUgdGhhdA0KICBpcyB0aGUgc2FtZSBhcyBzb21lIHJlc2VydmVkIE9DYW1sIGtleXdvcmQuIElu
IHRoaXMgY2FzZSwgeW91IGNhbiB1c2UNCiAgYHB5X2FyZ19uYW1lJyB0byBtYXAgaXQgdG8gc29t
ZXRoaW5nIGVsc2Ugb24gdGhlIE9DYW1sIHNpZGUuDQoNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKU
giB2YWwgZiA6IHQgLT4gbWV0aG9kXzpzdHJpbmcgLT4gdW5pdCAtPiBzdHJpbmcNCiAg4pSCIFtA
QHB5X2FyZ19uYW1lIG1ldGhvZF8gbWV0aG9kXQ0KICDilJTilIDilIDilIDilIANCg0KICBUaGUg
YXR0cmlidXRlIGlzIGZvbGxvd2VkIGJ5IHR3byBpdGVtcywgdGhlIGZpcnN0IGlzIHRoZSBhcmd1
bWVudCBuYW1lDQogIG9uIHRoZSBPQ2FtbCBzaWRlLCBhbmQgdGhlIHNlY29uZCBpcyB0aGUgYXJn
dW1lbnQgbmFtZSBvbiB0aGUgUHl0aG9uDQogIHNpZGUuDQoNCiAgU2VlIHRoZSBbYXR0cmlidXRl
cyBleGFtcGxlXSBvbiBHaXRIdWIgZm9yIG1vcmUgaW5mby4NCg0KDQpbYXR0cmlidXRlcyBleGFt
cGxlXQ0KPGh0dHBzOi8vZ2l0aHViLmNvbS9tb29yZXJ5YW4vb2NhbWxfcHl0aG9uX2JpbmRnZW4v
dHJlZS9tYWluL2V4YW1wbGVzL2F0dHJpYnV0ZXM+DQoNCg0KSGVscGVyIHNjcmlwdHMNCuKUhOKU
hOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhOKUhA0KDQogIEkgYWRkZWQgYSBjb3Vw
bGUgb2Ygc2NyaXB0cyB0byBoZWxwIGluIGNhc2VzIHdoZXJlIHlvdSBuZWVkIHRvIHJ1bg0KICBg
cHltbF9iaW5kZ2VuJyBvbiBhIGxvdCBvZiBkaWZmZXJlbnQgaW5wdXQgZmlsZXMgaW4gb25lIGdv
LiAgSSBoYXZlDQogIGJlZW4gdXNpbmcgdGhlbSB3aGVuIHdyaXRpbmcgYmluZGluZ3MgZm9yIGJp
Z2dlciBQeXRob24gbGlicmFyaWVzLCBhbmQNCiAgaW4gY2FzZXMgd2hlcmUgdGhlcmUgYXJlIGEg
bG90IG9mIGN5Y2xpYyBweXRob24gY2xhc3NlcyB0byBiaW5kLg0KDQogIFtUaGlzXSBleGFtcGxl
IGhhcyBtb3JlIGluZm8gYWJvdXQgdXNpbmcgdGhlIGhlbHBlciBzY3JpcHRzLg0KDQoNCltUaGlz
XQ0KPGh0dHBzOi8vZ2l0aHViLmNvbS9tb29yZXJ5YW4vb2NhbWxfcHl0aG9uX2JpbmRnZW4vdHJl
ZS9tYWluL2V4YW1wbGVzL3JlY3Vyc2l2ZV9tb2R1bGVzPg0KDQoNCk90aGVyIHN0dWZmDQrilITi
lITilITilITilITilITilITilITilITilITilIQNCg0KICDigKIgQWRkZWQgYW4gb3B0aW9uIHRv
IHNwbGl0IGdlbmVyYXRlZCBtb2R1bGVzIGludG8gYG1sJyBhbmQgYG1saScNCiAgICBmaWxlcy4N
CiAg4oCiIEFkZGVkIGEgZGV2IHBhY2thZ2UgZm9yIChob3BlZnVsbHkpIGVhc2llciBpbnN0YWxs
YXRpb24gb2YNCiAgICBkZXZlbG9wbWVudCBkZXBlbmRlbmNpZXMuDQoNCg0KSW50ZXJlc3Rpbmcg
T0NhbWwgQXJ0aWNsZXMNCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6DQogIDxo
dHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3QvaW50ZXJlc3Rpbmctb2NhbWwtYXJ0aWNsZXMvMTg2
Ny85OT4NCg0KDQpDYWxhc2NpYmV0dGEgUm9tYWluIGFubm91bmNlZA0K4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSADQoNCiAgSGksIEkgd291bGQgbGlrZSB0byBzaGFyZSBteSByZWNlbnQg
YXJ0aWNsZSBhYm91dCBHQURUcyBhbmQgc3RhdGUNCiAgbWFjaGluZXM6IFtHQURUcyBhbmQgc3Rh
dGUgbWFjaGluZV0NCg0KICBJdCdzIGFub3RoZXIgaW50cm9kdWN0aW9uIGFib3V0IEdBRFRzIGFu
ZCBpdCBleHBsYWlucyBhIGJpdCB3aGF0IEkgZGlkDQogIGZvciBbcm9idXIuaW9dLiBFZW5qb3kg
aXQgYW5kIGhhcHB5IGhhY2tpbmchDQoNCg0KW0dBRFRzIGFuZCBzdGF0ZSBtYWNoaW5lXQ0KPGh0
dHBzOi8vYmxvZy5vc2F1LnJlL2FydGljbGVzL2dhZHRfYW5kX3N0YXRlX21hY2hpbmUuaHRtbD4N
Cg0KW3JvYnVyLmlvXSA8aHR0cHM6Ly9yb2J1ci5pbz4NCg0KDQpMb2dzIHRvIGEgZmlsZSAoYSBw
cmltaXRpdmUgd2F5KQ0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoN
CiAgQXJjaGl2ZToNCiAgPGh0dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcvdC9sb2dzLXRvLWEtZmls
ZS1hLXByaW1pdGl2ZS13YXkvMTAyNjIvMT4NCg0KDQrwn4yNIE1hcmN1cyBSb2hybW9zZXIgYXNr
ZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEkgZm91bmQNCiAgPGh0dHBzOi8vZ2l0aHViLmNv
bS9veGlkaXppbmcvc2lobC9ibG9iL2M2Nzg2ZjI1NDI0YzFiOWY0MGNlNjU2ZTkwOGJkMzE1MTVm
MWNkMDkvc2lobC9zcmMvY29yZV9sb2cubWwjTDE4Pg0KICBhbmQgd29uZGVyIHdoYXQgYSBwcmlt
aXRpdmUgd2F5IHRvIGxvZyB0byBhIGZpbGUgd291bGQgYmUuDQoNCiAgSSBuZWVkIHRvIGtlZXAg
YHN0ZG91dCcgY2xlYW4gYW5kIG5vdCBzaG93IGFueSBsb2cgbWVzc2FnZSB1bmRlciBhbGwNCiAg
Y2lyY3Vtc3RhbmNlcy4NCg0KDQrwn4yNIE1hcmN1cyBSb2hybW9zZXIgbGF0ZXIgYWRkZWQNCuKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEkgZG8gYSBjZ2kgYW5kIGBz
dGRvdXQnIGlzIHRoZSByZXNwb25zZSDigJMgbG9nZ2luZyBoYXMgdG8gZ28gdG8gYQ0KICBzZXBh
cmF0ZSBmaWxlLiBOb3QgZXZlbiBgc3RkZXJyJyBhcyBJIHdhbnQgZGVidWcgbG9ncyBub3QgdG8g
dGFpbnQgdGhlDQogIHdlYnNlcnZlciBlcnJvciBsb2cgaW4gY2FzZS4gQW5kIEkgd291bGQgbGlr
ZSB0byBmdW5uZWwgbG9nZ2luZw0KICB0aHJvdWdoIGBMb2dzJy4NCg0KDQpZYXdhciBBbWluIHN1
Z2dlc3RlZCBhbmQg8J+MjSBNYXJjdXMgUm9ocm1vc2VyIHJlcGxpZWQNCuKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogICAgICAgIEkgZG9uJ3Qga25vdyBhYm91
dCBgbG9ncycgYnV0IGl0IHNob3VsZCBiZSByZWxhdGl2ZWx5IGVhc3kNCiAgICAgICAgdG8ga2Vl
cCBhbiBvcGVuIGZpbGUgaGFuZGxlIGFuZCBwcmludCBsb2cgbWVzc2FnZXMgdGhlcmUuDQoNCiAg
PGh0dHBzOi8vb3BhbS5vY2FtbC5vcmcvcGFja2FnZXMvbG9ncy8+IC0gSSBsaWtlIHRoZSBsb2ds
ZXZlbA0KICBhcHByb2FjaC4gQnV0IG1heWJlIEkgd2lsbCBkbyB3aXRob3V0IGFuZCBwYXNzIGFy
b3VuZCB0aGUgY2hhbm5lbCwNCiAgeWVzLg0KDQoNCkplYW4gTWljaGVsIHN1Z2dlc3RlZA0K4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSADQoNCiAgSSBiZWxpZXZlIGxvZ3Mgc3VwcG9ydCBsb2dnaW5nIHRvIGEgZmlsZSB2aWEgRm9y
bWF0LiBTZWUNCiAgPGh0dHBzOi8vZXJyYXRpcXVlLmNoL3NvZnR3YXJlL2xvZ3MvZG9jL0xvZ3Mv
aW5kZXguaHRtbCN2YWwtZm9ybWF0X3JlcG9ydGVyPg0KDQoNClNob24gYWxzbyBzdWdnZXN0ZWQN
CuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gA0KDQogIEnigJl2ZSBmb3VuZCBsb2dzIHZlcnkgZXJnb25vbWljIGFuZCBlYXN5IHRvIHdvcmsg
d2l0aC4gSSB0ZW5kIHRvIHB1bGwNCiAgaXQgaW4gdmlhIFtCb3NdLCB3aGljaCBoYXMgYSB2ZXJ5
IG5pY2UgaW50ZXJmYWNlIHRvIE9TDQogIGludGVyYWN0aW9ucy4gT3BlbmluZyB0aGUgYEJvc19z
ZXR1cCcgbW9kdWxlIGFsc28gZG9lcyBkZWZhdWx0IGxvZ3MNCiAgY29uZmlndXJhdGlvbiwgYW5k
IEkgZmluZCBhbGwgcXVpdGUgcGFpbmxlc3MgYW5kIHBsZWFzYW50Lg0KDQoNCltCb3NdIDxodHRw
czovL2VycmF0aXF1ZS5jaC9zb2Z0d2FyZS9ib3M+DQoNCg0K8J+MjSBNYXJjdXMgUm9ocm1vc2Vy
IHNhaWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIHRoYW5rcyBAeWF3YXJhbWluIEBiZWFqZWFubSBA
c2hvbmZlZGVyLCBJIHRvb2sgYSBbbWlkZGxlIGdyb3VuZF0gYW5kDQogIHdlbnQgYWxvbmcgdGhl
IGxpbmVzIG9mIDxodHRwczovL29wYW0ub2NhbWwub3JnL3BhY2thZ2VzL2xvZ3MvPiAodXNpbmcN
CiAgdGhlIGxvZ2xldmVscyBhbmQgbG9nZ2luZyBjYWxsIHN0eWxlKSBidXQgYmFzZSB3cml0aW5n
IGFsbW9zdCBkaXJlY3RseQ0KICBvbiBbb3V0X2NoYW5uZWxdLiAoSSBuZWVkIGEgbG9nIHJvdGF0
aW9uIG9uIHRvcCkNCg0KICBJIHdhcyBzdHJ1Z2dsaW5nIHdpdGggbG9zdCBtZXNzYWdlcyBob3dl
dmVyIOKAkyB0aGUgbG9nZmlsZSByZW1haW5lZA0KICBlbXB0eSB1bnRpbCBJIGZsdXNoZWQgYWZ0
ZXIgZWFjaCBsb2cgbWVzc2FnZS4NCg0KICBJcyB0aGF0IGtub3duIGJlaGF2aW91ciB0aGF0IHdy
aXRpbmcgdG8gYSBjaGFubmVsICh3aXRoDQogIFtQcmludGYuZnByaW50Zl0pIGRvZXNuJ3QgbmVj
ZXNzYXJpbHkgZW5kIHVwIGluIHRoZSBmaWxlPyBFdmVuIHdoZW4NCiAgY2xvc2VkIHF1aWNrbHku
DQoNCg0KW21pZGRsZSBncm91bmRdDQo8aHR0cHM6Ly9jb2RlYmVyZy5vcmcvbXJvL3NlcHBvL3Ny
Yy9icmFuY2gvZGV2ZWxvcC9saWIvbG9nci5tbD4NCg0KW291dF9jaGFubmVsXSA8aHR0cHM6Ly9v
Y2FtbC5vcmcvYXBpL1N0ZGxpYi5odG1sI1RZUEVvdXRfY2hhbm5lbD4NCg0KW1ByaW50Zi5mcHJp
bnRmXSA8aHR0cHM6Ly9vY2FtbC5vcmcvYXBpL1ByaW50Zi5odG1sPg0KDQoNClVuaXhKdW5raWUg
cmVwbGllZA0K4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSADQoNCiAgWW91IG11c3QgUHJpbnRmLnByaW50ZiB3aXRoICIlISIgYXQgdGhlIGVuZCBv
ZiB5b3VyIGZvcm1hdCBzdHJpbmcsIHRvDQogICBiZSBzdXJlIHRoYXQgdGhlIGxvZyBpcyBmbHVz
aGVkIHRvIGZpbGUuDQoNCiAgVGhhdCdzIHdoYXQgSSBkbyBpbiBkb2xvZzogPGh0dHBzOi8vZ2l0
aHViLmNvbS9Vbml4SnVua2llL2RvbG9nPg0KDQoNClRpbWVkZXNjIDAuOC4wIC0gbW9kZXJuIGRh
dGUgdGltZSBoYW5kbGluZw0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToNCiAgPGh0dHBzOi8v
ZGlzY3Vzcy5vY2FtbC5vcmcvdC9hbm4tdGltZWRlc2MtMC04LTAtbW9kZXJuLWRhdGUtdGltZS1o
YW5kbGluZy8xMDEzOC8yPg0KDQoNCkRhcnJlbiBhbm5vdW5jZWQNCuKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIFRpbnkgdXBkYXRlOiBUaW1lZGVz
YyAwLjkuMCBoYXMgYmVlbiByZWxlYXNlZCwgbW92aW5nIGBzZXhwbGliJw0KICBkZXBlbmRlbmN5
IGludG8gYHRpbWVkZXNjLXNleHAnIGFuZCBtb3ZlZCBmcm9tIGBtcGFyc2VyJyB0byBgYW5nc3Ry
b20nDQogIGZvciBzb21lIGRhdGUgdGltZSB0ZXh0IHBhcnNlcnMgc2luY2UgYW5nc3Ryb20gaXMg
YSBzdHJpY3QgbmVjZXNzaXR5DQogIGZvciBzb21lIGJpbmFyeSAoZGUpc2VyaWFsaXphdGlvbiBh
bHJlYWR5Lg0KDQogIFRoaXMgb3ZlcmFsbCBtZWFucyBUaW1lZGVzYyBpcyBhYm91dCBhcyBzbGlt
IGFzIGl0IGNhbiBnZXQgYXMgYSBkYXRlDQogIHRpbWUgaGFuZGxpbmcgbGliLCBkZXBlbmRpbmcg
b25seSBvbjogYHNlcScsIGBhbmdzdHJvbScsIGByZXN1bHQnLCBhbmQNCiAgYHB0aW1lJyAoYHB0
aW1lJyBpcyBub3QgYSBzdHJpY3QgZGVwZW5kZW5jeSwgYnV0IGl0J3MgbmljZSB0byBoYXZlDQog
IHRpbWVkZXNjIDwtPiBwdGltZSBjb252ZXJ0b3JzKS4NCg0KDQpGbG9yZW50IE1vbm5pZXIgYXNr
ZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgA0KDQogIElzIHRoaXMgYSBsaWIgdGhhdCB0YXJnZXRzIHRvIHByb2Nlc3MgZGF0
ZXMgYW5kIHRpbWUgaW4gYQ0KICBwcm9ncmFtbWF0aWNhbGx5IHdheT8gICh0aGlzIGlzIHdoYXQg
dGhlIHByb3ZpZGVkIGV4YW1wbGUgbWFrZSBtZQ0KICB0aGluaykgT3IgaXMgaXQgYWxzbyBzdXBw
b3NlZCB0byBiZSB1c2VkIHRvIHByaW50IHNvbWV0aGluZyByZWFkYWJsZQ0KICBmb3IgYSB1c2Vy
IGVsc2UgdGhhbiBhIHByb2dyYW1tZXI/DQoNCiAgSWYgdGhlcmUgaXMgbm8gZW5kLXVzZXIgZ29h
bCBpbiB0aGlzIGxpYiwgcGxlYXNlIGp1c3QgaWdub3JlIG15DQogIG1lc3NhZ2UsIGFuZCBzb3Jy
eSB0byBtYWtlIHlvdSBsb3NlIHNvbWUgdGltZS4NCg0KICBJbiB0aGUgb3RoZXIgY2FzZSBpZiB5
b3UgY29uc2lkZXIgcHJpbnRpbmcgZm9yIGVuZCB1c2VycywgaXQncyBtYXliZQ0KICB3b3J0aCB0
byBtZW50aW9uIHRoYXQgdGhlcmUgaXMgdGhlIFtEYXRlTG9jYWxlLW9jYW1sXSBtb2R1bGUgdGhh
dCBpcw0KICBhdmFpbGFibGUgYW5kIHdoaWNoIHByb3ZpZGVzIHRoZSBuYW1lIGZvciB0aGUgbW9u
dGhzLCBhbmQgZGF5cyBmb3INCiAgbW9yZSB0aGFuIDIwMCBsYW5ndWFnZXMuIEl0IGFsc28gcHJv
dmlkZXMgYWJicmV2aWF0ZWQgdmVyc2lvbnMgZm9yDQogIGJvdGggbW9udGhzIGFuZCBkYXlzLCB3
aGljaCBhcmUgb2Z0ZW4gdXNlZC4NCg0KICBUaGUgW29jYW1sLWNvbW11bml0eS9jYWxlbmRhcl0g
d2FzIG5vdCBkZXNpZ25lZCB3aXRoIGxvY2FsaXNhdGlvbiBpbg0KICBtaW5kLCBpdCBqdXN0IGRv
ZXMgYFN0cmluZy5zdWIgZCAwIDMnIHRvIHByb3ZpZGUgc2hvcnQgbmFtZXMsIHdoaWNoDQogIHdp
bGwgbm90IHdvcmsgd2l0aCBsYW5ndWFnZXMgdGhhdCBuZWVkIFVURjguDQoNCiAgVGhlcmUgaXMg
dGhpcyBQUiB0aGF0IGlzIHN0aWxsIHdhaXRpbmcgZm9yIHNvbWUgcmV2aWV3IHNpbmNlIDIgeWVh
cnMNCiAgdG8gbWFrZSBpdCBjb21wYXRpYmxlIHdpdGggbG9jYWxpc2F0aW9uOg0KICBbb2NhbWwt
Y29tbXVuaXR5L2NhbGVuZGFyL3B1bGwvMzNdLg0KDQogIChBdCBsZWFzdCB0aGUgcGF0Y2ggaXMg
YXZhaWxhYmxlIHRoZXJlIGZvciBzb21lb25lIHdobyBjb3VsZCBiZQ0KICBpbnRlcmVzdGVkLikN
Cg0KICBJIGRvbid0IGtub3cgaWYgaXQgY291bGQgaW50ZXJlc3Qgc29tZSBvbmUgYnV0IEkgc2Vl
IHRoYXQgdGhlIGV4YW1wbGUNCiAgb3V0cHV0cyBhIGxpc3Qgb2YgZGF0ZXMsIHRoYXQgbG9vayBs
aWtlIHNvbWUga2luZCBvZiBsb2dzLiBJbiBjYXNlDQogIHNvbWUgb25lIHdvdWxkIGxpa2UgdG8g
dmlzdWFsaXNlIGl0IGluIGEgd2F5IHNpbWlsYXIgdGhhbiB0aGUgdW5peA0KICBjb21tYW5kIGBj
YWwnIHlvdSBjYW4ganVzdCBjcmVhdGUgZW1wdHkgZmlsZXMgd2hlcmUgdGhlIGZpbGUgbmFtZQ0K
ICBmb2xsb3dzIHRoZSBwYXR0ZXJuIFlZWVktTU0tREQgbGlrZSBmb3IgZXhhbXBsZSAiZGlyLzIw
MjItMDgtMDYudHh0IiwNCiAgeW91IHdpbGwgdGhlbiBiZSBhYmxlIHRvIHZpc3VhbGlzZSBpdCBp
biB0aGUgY29uc29sZSB3aXRoIFtkZXRyaV0uDQoNCg0KW0RhdGVMb2NhbGUtb2NhbWxdIDxodHRw
czovL2dpdGh1Yi5jb20vZmNjbS9EYXRlTG9jYWxlLW9jYW1sPg0KDQpbb2NhbWwtY29tbXVuaXR5
L2NhbGVuZGFyXSA8aHR0cHM6Ly9naXRodWIuY29tL29jYW1sLWNvbW11bml0eS9jYWxlbmRhcj4N
Cg0KW29jYW1sLWNvbW11bml0eS9jYWxlbmRhci9wdWxsLzMzXQ0KPGh0dHBzOi8vZ2l0aHViLmNv
bS9vY2FtbC1jb21tdW5pdHkvY2FsZW5kYXIvcHVsbC8zMy9jb21taXRzLzlmY2Q3Mzg2ZTI4N2Y4
ODQxZTUwM2ZiMWQxZTA1NDcyOTVhZWIwYzk+DQoNCltkZXRyaV0gPGh0dHBzOi8vZ2l0aHViLmNv
bS9mY2NtL2RldHJpPg0KDQoNCkRhcnJlbiByZXBsaWVkDQrilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIANCg0KICAgICAgICBJcyB0aGlzIGEgbGliIHRoYXQgdGFyZ2V0
cyB0byBwcm9jZXNzIGRhdGVzIGFuZCB0aW1lIGluIGENCiAgICAgICAgcHJvZ3JhbW1hdGljYWxs
eSB3YXk/ICAodGhpcyBpcyB3aGF0IHRoZSBwcm92aWRlZCBleGFtcGxlDQogICAgICAgIG1ha2Ug
bWUgdGhpbmspIE9yIGlzIGl0IGFsc28gc3VwcG9zZWQgdG8gYmUgdXNlZCB0byBwcmludA0KICAg
ICAgICBzb21ldGhpbmcgcmVhZGFibGUgZm9yIGEgdXNlciBlbHNlIHRoYW4gYSBwcm9ncmFtbWVy
Pw0KICBEZXZlbG9wbWVudCBoYXMgYmVlbiBwcmltYXJpbHkgZm9jdXNlZCBvbiBmb3JtZXIsIG1v
c3RseSBiZWNhdXNlDQogIHNvbHZpbmcgaXQgcHJvcGVybHkgd2FzIGFscmVhZHkgKHZlcnkpIGlu
dm9sdmVkLg0KDQogIE5vdyB0aGF0IFRpbWVkZXNjIGhhcyBzdGFiaWxpc2VkLCB0aGUgbGF0dGVy
IHJlYWRzIGxpa2UgYSB2ZXJ5IG5pY2UNCiAgbmV4dCBUT0RPIHRvIG1hdGNoIGZlYXR1cmUgcGFy
aXR5IG9mIG90aGVyIGRhdGUgdGltZSBsaWJzLg0KDQogICAgICAgIEluIHRoZSBvdGhlciBjYXNl
IGlmIHlvdSBjb25zaWRlciBwcmludGluZyBmb3IgZW5kIHVzZXJzLA0KICAgICAgICBpdOKAmXMg
bWF5YmUgd29ydGggdG8gbWVudGlvbiB0aGF0IHRoZXJlIGlzIHRoZQ0KICAgICAgICBbRGF0ZUxv
Y2FsZS1vY2FtbF0gbW9kdWxlIHRoYXQgaXMgYXZhaWxhYmxlIGFuZCB3aGljaA0KICAgICAgICBw
cm92aWRlcyB0aGUgbmFtZSBmb3IgdGhlIG1vbnRocywgYW5kIGRheXMgZm9yIG1vcmUgdGhhbg0K
ICAgICAgICAyMDAgbGFuZ3VhZ2VzLiBJdCBhbHNvIHByb3ZpZGVzIGFiYnJldmlhdGVkIHZlcnNp
b25zIGZvcg0KICAgICAgICBib3RoIG1vbnRocyBhbmQgZGF5cywgd2hpY2ggYXJlIG9mdGVuIHVz
ZWQuDQoNCiAgTG9va3MgbmVhdCEgSSBiZWxpZXZlIHRoZXJlIGhhdmUgYmVlbiByZXF1ZXN0cyBv
ZiBsb2NhbGUgc2Vuc2l0aXZlDQogIHByZXR0eSBwcmludGluZy9jb252ZXJzaW9uIGZ1bmN0aW9u
cywgc28gSSBkZWZpbml0ZWx5IHdvdWxkIGJlDQogIGludGVyZXN0ZWQgaW4gaW5jb3Jwb3JhdGlu
ZyB5b3VyIHdvcmsgKGlmIHRoYXQgd2FzIHRoZSBpbnRlbnRpb24pLg0KDQogICAgICAgIEkgZG9u
4oCZdCBrbm93IGlmIGl0IGNvdWxkIGludGVyZXN0IHNvbWUgb25lIGJ1dCBJIHNlZSB0aGF0DQog
ICAgICAgIHRoZSBleGFtcGxlIG91dHB1dHMgYSBsaXN0IG9mIGRhdGVzLCB0aGF0IGxvb2sgbGlr
ZSBzb21lDQogICAgICAgIGtpbmQgb2YgbG9ncy4gSW4gY2FzZSBzb21lIG9uZSB3b3VsZCBsaWtl
IHRvIHZpc3VhbGlzZSBpdA0KICAgICAgICBpbiBhIHdheSBzaW1pbGFyIHRoYW4gdGhlIHVuaXgg
Y29tbWFuZCBgY2FsYCB5b3UgY2FuIGp1c3QNCiAgICAgICAgY3JlYXRlIGVtcHR5IGZpbGVzIHdo
ZXJlIHRoZSBmaWxlIG5hbWUgZm9sbG93cyB0aGUgcGF0dGVybg0KICAgICAgICBZWVlZLU1NLURE
IGxpa2UgZm9yIGV4YW1wbGUg4oCcZGlyLzIwMjItMDgtMDYudHh04oCdLCB5b3Ugd2lsbA0KICAg
ICAgICB0aGVuIGJlIGFibGUgdG8gdmlzdWFsaXNlIGl0IGluIHRoZSBjb25zb2xlIHdpdGggW2Rl
dHJpXS4NCg0KICBJIHdhcyBpbnRlcmVzdGVkIGluIHNvbWV0aGluZyBsaWtlIHRoaXMgZm9yIGFu
b3RoZXIgc21hbGwgdXRpbGl0eSBjbWQNCiAgSSd2ZSB3cml0dGVuLCBuZWF0IQ0KDQoNCltEYXRl
TG9jYWxlLW9jYW1sXSA8aHR0cHM6Ly9naXRodWIuY29tL2ZjY20vRGF0ZUxvY2FsZS1vY2FtbD4N
Cg0KW2RldHJpXSA8aHR0cHM6Ly9naXRodWIuY29tL2ZjY20vZGV0cmk+DQoNCg0KT0NhbWwgd2Vi
c2l0ZTogT3dsIGJvb2sgbm90IGxpc3RlZA0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToNCiAgPGh0dHBzOi8vZGlzY3Vzcy5vY2FtbC5v
cmcvdC9vY2FtbC13ZWJzaXRlLW93bC1ib29rLW5vdC1saXN0ZWQvMTAyNzQvMT4NCg0KDQpBbmRy
ZWFzIFBvaXNlbCBzYWlkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIANCg0KICBJdCB3b3VsZCBiZSBuaWNlIHRvIGFkZCBbT0NhbWwgU2Np
ZW50aWZpYyBDb21wdXRpbmddIHRvIHRoZSBsaXN0IG9uDQogIDxodHRwczovL29jYW1sLm9yZy9i
b29rcz4uDQoNCiAgVGhpcyBpcyBhIGdyZWF0IGJvb2sgYW5kIGl0IHdvdWxkIGJlIGEgc2hhbWUg
bm90IHRvIHByb21vdGUgaXQuICBNYXliZQ0KICBhbnlvbmUgcmVzcG9uc2libGUgZm9yIHRoZSB3
ZWJzaXRlIHJlYWRzIHRoaXMgb3IgY2FuIHBvaW50IG1lIGluIHRoZQ0KICByaWdodCBkaXJlY3Rp
b24uDQoNCiAgSSdtIG5vdCBpbiBhbnkgd2F5IGFmZmlsaWF0ZWQgd2l0aCB0aGUgYXV0aG9ycyBv
ZiB0aGlzIGJvb2suDQoNCg0KW09DYW1sIFNjaWVudGlmaWMgQ29tcHV0aW5nXQ0KPGh0dHBzOi8v
bGluay5zcHJpbmdlci5jb20vYm9vay8xMC4xMDA3Lzk3OC0zLTAzMC05NzY0NS0zPg0KDQoNCkFw
cGxpY2F0aW9uLXNwZWNpZmljIEltcHJvdmVtZW50cyB0byB0aGUgRWNvc3lzdGVtDQrilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZANCg0KICBBcmNoaXZlOg0KICA8aHR0cHM6Ly9k
aXNjdXNzLm9jYW1sLm9yZy90L2FwcGxpY2F0aW9uLXNwZWNpZmljLWltcHJvdmVtZW50cy10by10
aGUtZWNvc3lzdGVtLzEwMjIzLzQ5Pg0KDQoNCkRlZXAgaW4gdGhpcyB0aHJlYWQsIEtheS1Vd2Ug
S2lyc3RlaW4gc2FpZA0K4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCiAgUGVyc29uYWxseSwgSSBvZnRlbiB1c2Ug
dGhlIG1vbmFkaWMgUmVzdWx0IHR5cGUgdG9nZXRoZXIgd2l0aCBhDQogIHBvbHltb3JwaGljIHZh
cmlhbnQgZm9yIHRoZSBhY3R1YWwgZXJyb3JzLiBUaGlzIG1ha2VzIGRlYWxpbmcgd2l0aA0KICBl
cnJvcnMgZnJvbSBkaWZmZXJlbnQgImxldmVscyIgb2YgbXkgc29mdHdhcmUgKGxpYnJhcnksIGNv
bW1hbmQtbGluZQ0KICB0b29sLCBhbmQgR1VJKSBxdWl0ZSBjb21mb3J0YWJsZSAoYW5kIHR5cGUt
c2FmZSEpLiAgQGtlbGVzaGV2IGhhcw0KICB3cml0dGVuIGEgbmljZSBibG9nIHBvc3Qgb24gdGhp
czoNCiAgPGh0dHBzOi8va2VsZXNoZXYuY29tL2NvbXBvc2FibGUtZXJyb3ItaGFuZGxpbmctaW4t
b2NhbWw+IHdpdGggYQ0KICByZWNlbnQgZm9sbG93IHVwOg0KICA8aHR0cHM6Ly9rZWxlc2hldi5j
b20vYWR2YW5jZWQtZXJyb3ItaGFuZGxpbmctaW4tb2NhbWw+DQoNCg0KT3RoZXIgT0NhbWwgTmV3
cw0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCkZy
b20gdGhlIG9jYW1sLm9yZyBibG9nDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCg0KICBIZXJlIGFyZSBsaW5rcyBm
cm9tIG1hbnkgT0NhbWwgYmxvZ3MgYWdncmVnYXRlZCBhdCBbdGhlIG9jYW1sLm9yZw0KICBibG9n
XS4NCg0KICDigKIgW0lybWluIGluIHRoZSBCcm93c2VyXQ0KDQoNClt0aGUgb2NhbWwub3JnIGJs
b2ddIDxodHRwczovL29jYW1sLm9yZy9ibG9nLz4NCg0KW0lybWluIGluIHRoZSBCcm93c2VyXQ0K
PGh0dHBzOi8vdGFyaWRlcy5jb20vYmxvZy8yMDIyLTA4LTAyLWlybWluLWluLXRoZS1icm93c2Vy
Pg0KDQoNCk9sZCBDV04NCuKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIElmIHlvdSBoYXBwZW4g
dG8gbWlzcyBhIENXTiwgeW91IGNhbiBbc2VuZCBtZSBhIG1lc3NhZ2VdIGFuZCBJJ2xsIG1haWwN
CiAgaXQgdG8geW91LCBvciBnbyB0YWtlIGEgbG9vayBhdCBbdGhlIGFyY2hpdmVdIG9yIHRoZSBb
UlNTIGZlZWQgb2YgdGhlDQogIGFyY2hpdmVzXS4NCg0KICBJZiB5b3UgYWxzbyB3aXNoIHRvIHJl
Y2VpdmUgaXQgZXZlcnkgd2VlayBieSBtYWlsLCB5b3UgbWF5IHN1YnNjcmliZQ0KICBbb25saW5l
XS4NCg0KICBbQWxhbiBTY2htaXR0XQ0KDQoNCltzZW5kIG1lIGEgbWVzc2FnZV0gPG1haWx0bzph
bGFuLnNjaG1pdHRAcG9seXRlY2huaXF1ZS5vcmc+DQoNClt0aGUgYXJjaGl2ZV0gPGh0dHBzOi8v
YWxhbi5wZXRpdGVwb21tZS5uZXQvY3duLz4NCg0KW1JTUyBmZWVkIG9mIHRoZSBhcmNoaXZlc10g
PGh0dHBzOi8vYWxhbi5wZXRpdGVwb21tZS5uZXQvY3duL2N3bi5yc3M+DQoNCltvbmxpbmVdIDxo
dHRwOi8vbGlzdHMuaWR5bGwub3JnL2xpc3RpbmZvL2NhbWwtbmV3cy13ZWVrbHkvPg0KDQpbQWxh
biBTY2htaXR0XSA8aHR0cHM6Ly9hbGFuLnBldGl0ZXBvbW1lLm5ldC8+DQoNCg==
--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2022-08-09 Tue 09:59 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org Mode" />
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
</head>
<body>
<div id=3D"content" class=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2022.08.02.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2022.08.16.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of August 02 to 09, 2022.
</p>

<div id=3D"table-of-contents" role=3D"doc-toc">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents" role=3D"doc-toc">
<ul>
<li><a href=3D"#1">pyml_bindgen: a CLI app to generate Python bindings dire=
ctly from OCaml value specifications</a></li>
<li><a href=3D"#2">Interesting OCaml Articles</a></li>
<li><a href=3D"#3">Logs to a file (a primitive way)</a></li>
<li><a href=3D"#4">Timedesc 0.8.0 - modern date time handling</a></li>
<li><a href=3D"#5">OCaml website: Owl book not listed</a></li>
<li><a href=3D"#6">Application-specific Improvements to the Ecosystem</a></=
li>
<li><a href=3D"#7">Other OCaml News</a></li>
<li><a href=3D"#org77d62dc">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-1" class=3D"outline-2">
<h2 id=3D"1">pyml_bindgen: a CLI app to generate Python bindings directly f=
rom OCaml value specifications</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-pyml-bindgen-a-cli-app-=
to-generate-python-bindings-directly-from-ocaml-value-specifications/8786/8=
">https://discuss.ocaml.org/t/ann-pyml-bindgen-a-cli-app-to-generate-python=
-bindings-directly-from-ocaml-value-specifications/8786/8</a>
</p>
</div>

<div id=3D"outline-container-orgbd26626" class=3D"outline-3">
<h3 id=3D"orgbd26626">Ryan Moore announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgbd26626">
</div>
<div id=3D"outline-container-org7ee58af" class=3D"outline-4">
<h4 id=3D"org7ee58af">New release</h4>
<div class=3D"outline-text-4" id=3D"text-org7ee58af">
<p>
Version 0.4.1 is now available from <a href=3D"https://github.com/mooreryan=
/ocaml_python_bindgen/releases/tag/0.4.1">GitHub</a>
and <a href=3D"https://opam.ocaml.org/packages/pyml_bindgen/">Opam</a>.  Th=
e <a href=3D"https://github.com/mooreryan/ocaml_python_bindgen/blob/main/CH=
ANGELOG.md">change
log</a> has more details.
</p>
</div>
</div>

<div id=3D"outline-container-org85b70f0" class=3D"outline-4">
<h4 id=3D"org85b70f0">New stuff</h4>
<div class=3D"outline-text-4" id=3D"text-org85b70f0">
</div>
<div id=3D"outline-container-org8b8d124" class=3D"outline-5">
<h5 id=3D"org8b8d124">New attributes</h5>
<div class=3D"outline-text-5" id=3D"text-org8b8d124">
<p>
There is a new attribute you can use: <code>py_arg_name</code>. It allows y=
ou to use different argument names on the OCaml side
from those that are used on the Python side.
</p>

<p>
One use case is for Python functions that have an argument name that is the=
 same as some reserved OCaml keyword. In
this case, you can use <code>py_arg_name</code> to map it to something else=
 on the OCaml side.
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">val</span> <span style=3D"color: #0000ff;">f</span> : t -&gt; <span st=
yle=3D"color: #008b8b;">method_</span>:string -&gt; unit -&gt; string
<span style=3D"color: #483d8b;">[@@py_arg_name method_ method]</span>
</pre>
</div>

<p>
The attribute is followed by two items, the first is the argument name on t=
he OCaml side, and the second is the
argument name on the Python side.
</p>

<p>
See the <a href=3D"https://github.com/mooreryan/ocaml_python_bindgen/tree/m=
ain/examples/attributes">attributes example</a> on
GitHub for more info.
</p>
</div>
</div>

<div id=3D"outline-container-org6ea098c" class=3D"outline-5">
<h5 id=3D"org6ea098c">Helper scripts</h5>
<div class=3D"outline-text-5" id=3D"text-org6ea098c">
<p>
I added a couple of scripts to help in cases where you need to run <code>py=
ml_bindgen</code> on a lot of different input files
in one go.  I have been using them when writing bindings for bigger Python =
libraries, and in cases where there are a
lot of cyclic python classes to bind.
</p>

<p>
<a href=3D"https://github.com/mooreryan/ocaml_python_bindgen/tree/main/exam=
ples/recursive_modules">This</a> example has more info
about using the helper scripts.
</p>
</div>
</div>

<div id=3D"outline-container-org503a9a6" class=3D"outline-5">
<h5 id=3D"org503a9a6">Other stuff</h5>
<div class=3D"outline-text-5" id=3D"text-org503a9a6">
<ul class=3D"org-ul">
<li>Added an option to split generated modules into <code>ml</code> and <co=
de>mli</code> files.</li>
<li>Added a dev package for (hopefully) easier installation of development =
dependencies.</li>
</ul>
</div>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-2" class=3D"outline-2">
<h2 id=3D"2">Interesting OCaml Articles</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/interesting-ocaml-articles/=
1867/99">https://discuss.ocaml.org/t/interesting-ocaml-articles/1867/99</a>
</p>
</div>

<div id=3D"outline-container-org3baa672" class=3D"outline-3">
<h3 id=3D"org3baa672">Calascibetta Romain announced</h3>
<div class=3D"outline-text-3" id=3D"text-org3baa672">
<p>
Hi, I would like to share my recent article about GADTs and state machines:=
 <a href=3D"https://blog.osau.re/articles/gadt_and_state_machine.html">GADT=
s and state machine</a>
</p>

<p>
It's another introduction about GADTs and it explains a bit what I did for =
<a href=3D"https://robur.io">robur.io</a>. Eenjoy it
and happy hacking!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-3" class=3D"outline-2">
<h2 id=3D"3">Logs to a file (a primitive way)</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/logs-to-a-file-a-primitive-=
way/10262/1">https://discuss.ocaml.org/t/logs-to-a-file-a-primitive-way/102=
62/1</a>
</p>
</div>

<div id=3D"outline-container-orgbedbefb" class=3D"outline-3">
<h3 id=3D"orgbedbefb">=F0=9F=8C=8D Marcus Rohrmoser asked</h3>
<div class=3D"outline-text-3" id=3D"text-orgbedbefb">
<p>
I found <a href=3D"https://github.com/oxidizing/sihl/blob/c6786f25424c1b9f4=
0ce656e908bd31515f1cd09/sihl/src/core_log.ml#L18">https://github.com/oxidiz=
ing/sihl/blob/c6786f25424c1b9f40ce656e908bd31515f1cd09/sihl/src/core_log.ml=
#L18</a> and
wonder what a primitive way to log to a file would be.
</p>

<p>
I need to keep <code>stdout</code> clean and not show any log message under=
 all circumstances.
</p>
</div>
</div>


<div id=3D"outline-container-org484b74a" class=3D"outline-3">
<h3 id=3D"org484b74a">=F0=9F=8C=8D Marcus Rohrmoser later added</h3>
<div class=3D"outline-text-3" id=3D"text-org484b74a">
<p>
I do a cgi and <code>stdout</code> is the response =E2=80=93 logging has to=
 go to a separate file. Not even <code>stderr</code> as I want debug
logs not to taint the webserver error log in case. And I would like to funn=
el logging through <code>Logs</code>.
</p>
</div>
</div>


<div id=3D"outline-container-org507ffe1" class=3D"outline-3">
<h3 id=3D"org507ffe1">Yawar Amin suggested and =F0=9F=8C=8D Marcus Rohrmose=
r replied</h3>
<div class=3D"outline-text-3" id=3D"text-org507ffe1">
<blockquote>
<p>
I don't know about <code>logs</code> but it should be relatively easy to ke=
ep an open file handle and print log messages there.
</p>
</blockquote>

<p>
<a href=3D"https://opam.ocaml.org/packages/logs/">https://opam.ocaml.org/pa=
ckages/logs/</a> - I like the loglevel approach. But maybe I will do withou=
t and pass around the
channel, yes.
</p>
</div>
</div>


<div id=3D"outline-container-org188f153" class=3D"outline-3">
<h3 id=3D"org188f153">Jean Michel suggested</h3>
<div class=3D"outline-text-3" id=3D"text-org188f153">
<p>
I believe logs support logging to a file via Format. See
<a href=3D"https://erratique.ch/software/logs/doc/Logs/index.html#val-forma=
t_reporter">https://erratique.ch/software/logs/doc/Logs/index.html#val-form=
at_reporter</a>
</p>
</div>
</div>


<div id=3D"outline-container-org888e3c9" class=3D"outline-3">
<h3 id=3D"org888e3c9">Shon also suggested</h3>
<div class=3D"outline-text-3" id=3D"text-org888e3c9">
<p>
I=E2=80=99ve found logs very ergonomic and easy to work with. I tend to pul=
l it in via
<a href=3D"https://erratique.ch/software/bos">Bos</a>, which has a very nic=
e interface to OS interactions. Opening the <code>Bos_setup</code>
module also does default logs configuration, and I find all quite painless =
and pleasant.
</p>
</div>
</div>


<div id=3D"outline-container-org11d86de" class=3D"outline-3">
<h3 id=3D"org11d86de">=F0=9F=8C=8D Marcus Rohrmoser said</h3>
<div class=3D"outline-text-3" id=3D"text-org11d86de">
<p>
thanks @yawaramin @beajeanm @shonfeder, I took a <a href=3D"https://codeber=
g.org/mro/seppo/src/branch/develop/lib/logr.ml">middle
ground</a> and went along the lines of
<a href=3D"https://opam.ocaml.org/packages/logs/">https://opam.ocaml.org/pa=
ckages/logs/</a> (using the loglevels and logging call style) but base writ=
ing almost directly
on <a href=3D"https://ocaml.org/api/Stdlib.html#TYPEout_channel">out_channe=
l</a>. (I need a log rotation on top)
</p>

<p>
I was struggling with lost messages however =E2=80=93 the logfile remained =
empty until I flushed after each log message.
</p>

<p>
Is that known behaviour that writing to a channel (with <a href=3D"https://=
ocaml.org/api/Printf.html">Printf.fprintf</a>) doesn't
necessarily end up in the file? Even when closed quickly.
</p>
</div>
</div>


<div id=3D"outline-container-org1e97bce" class=3D"outline-3">
<h3 id=3D"org1e97bce">UnixJunkie replied</h3>
<div class=3D"outline-text-3" id=3D"text-org1e97bce">
<p>
You must Printf.printf with "%!" at the end of your format string,
 to be sure that the log is flushed to file.
</p>

<p>
That's what I do in dolog:
<a href=3D"https://github.com/UnixJunkie/dolog">https://github.com/UnixJunk=
ie/dolog</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-4" class=3D"outline-2">
<h2 id=3D"4">Timedesc 0.8.0 - modern date time handling</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-timedesc-0-8-0-modern-d=
ate-time-handling/10138/2">https://discuss.ocaml.org/t/ann-timedesc-0-8-0-m=
odern-date-time-handling/10138/2</a>
</p>
</div>

<div id=3D"outline-container-org36560cd" class=3D"outline-3">
<h3 id=3D"org36560cd">Darren announced</h3>
<div class=3D"outline-text-3" id=3D"text-org36560cd">
<p>
Tiny update: Timedesc 0.9.0 has been released, moving <code>sexplib</code> =
dependency into <code>timedesc-sexp</code> and moved from
<code>mparser</code> to <code>angstrom</code> for some date time text parse=
rs since angstrom is a strict necessity for some binary
(de)serialization already.
</p>

<p>
This overall means Timedesc is about as slim as it can get as a date time h=
andling lib, depending only on: <code>seq</code>,
<code>angstrom</code>, <code>result</code>, and <code>ptime</code> (<code>p=
time</code> is not a strict dependency, but it's nice to have timedesc &lt;=
-&gt; ptime
convertors).
</p>
</div>
</div>


<div id=3D"outline-container-orgb5af830" class=3D"outline-3">
<h3 id=3D"orgb5af830">Florent Monnier asked</h3>
<div class=3D"outline-text-3" id=3D"text-orgb5af830">
<p>
Is this a lib that targets to process dates and time in a programmatically =
way?
(this is what the provided example make me think)
Or is it also supposed to be used to print something readable for a user el=
se than a programmer?
</p>

<p>
If there is no end-user goal in this lib, please just ignore my message, an=
d sorry to make you lose some time.
</p>

<p>
In the other case if you consider printing for end users, it's maybe worth =
to mention that there is the
<a href=3D"https://github.com/fccm/DateLocale-ocaml">DateLocale-ocaml</a> m=
odule that is available and which provides the name for
the months, and days for more than 200 languages. It also provides abbrevia=
ted versions for both months and days,
which are often used.
</p>

<p>
The <a href=3D"https://github.com/ocaml-community/calendar">ocaml-community=
/calendar</a> was not designed with localisation in
mind, it just does <code>String.sub d 0 3</code> to provide short names, wh=
ich will not work with languages that need UTF8.
</p>

<p>
There is this PR that is still waiting for some review since 2 years to mak=
e it compatible with localisation:
<a href=3D"https://github.com/ocaml-community/calendar/pull/33/commits/9fcd=
7386e287f8841e503fb1d1e0547295aeb0c9">ocaml-community/calendar/pull/33</a>.
</p>

<p>
(At least the patch is available there for someone who could be interested.)
</p>

<p>
I don't know if it could interest some one but I see that the example outpu=
ts a list of dates, that look like some
kind of logs. In case some one would like to visualise it in a way similar =
than the unix command <code>cal</code> you can just
create empty files where the file name follows the pattern YYYY-MM-DD like =
for example  "dir/2022-08-06.txt", you
will then be able to visualise it in the console with <a href=3D"https://gi=
thub.com/fccm/detri">detri</a>.
</p>
</div>
</div>


<div id=3D"outline-container-org0c5dbb2" class=3D"outline-3">
<h3 id=3D"org0c5dbb2">Darren replied</h3>
<div class=3D"outline-text-3" id=3D"text-org0c5dbb2">
<blockquote>
<p>
Is this a lib that targets to process dates and time in a programmatically =
way?
(this is what the provided example make me think)
Or is it also supposed to be used to print something readable for a user el=
se than a programmer?
</p>
</blockquote>
<p>
Development has been primarily focused on former, mostly because solving it=
 properly was already (very) involved.
</p>

<p>
Now that Timedesc has stabilised, the latter reads like a very nice next TO=
DO to match feature parity of other date
time libs.
</p>

<blockquote>
<p>
In the other case if you consider printing for end users, it=E2=80=99s mayb=
e worth to mention that there is the
<a href=3D"https://github.com/fccm/DateLocale-ocaml">DateLocale-ocaml</a> m=
odule that is available and which provides the name for
the months, and days for more than 200 languages. It also provides abbrevia=
ted versions for both months and days,
which are often used.
</p>
</blockquote>

<p>
Looks neat! I believe there have been requests of locale sensitive pretty p=
rinting/conversion functions, so I
definitely would be interested in incorporating your work (if that was the =
intention).
</p>

<blockquote>
<p>
I don=E2=80=99t know if it could interest some one but I see that the examp=
le outputs a list of dates, that look like some
kind of logs. In case some one would like to visualise it in a way similar =
than the unix command `cal` you can just
create empty files where the file name follows the pattern YYYY-MM-DD like =
for example =E2=80=9Cdir/2022-08-06.txt=E2=80=9D, you will
then be able to visualise it in the console with <a href=3D"https://github.=
com/fccm/detri">detri</a>.
</p>
</blockquote>

<p>
I was interested in something like this for another small utility cmd I've =
written, neat!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-5" class=3D"outline-2">
<h2 id=3D"5">OCaml website: Owl book not listed</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ocaml-website-owl-book-not-=
listed/10274/1">https://discuss.ocaml.org/t/ocaml-website-owl-book-not-list=
ed/10274/1</a>
</p>
</div>

<div id=3D"outline-container-org8853e14" class=3D"outline-3">
<h3 id=3D"org8853e14">Andreas Poisel said</h3>
<div class=3D"outline-text-3" id=3D"text-org8853e14">
<p>
It would be nice to add <a href=3D"https://link.springer.com/book/10.1007/9=
78-3-030-97645-3">OCaml Scientific Computing</a> to the
list on <a href=3D"https://ocaml.org/books">https://ocaml.org/books</a>.
</p>

<p>
This is a great book and it would be a shame not to promote it.
Maybe anyone responsible for the website reads this or can point me in the =
right direction.
</p>

<p>
I'm not in any way affiliated with the authors of this book.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-6" class=3D"outline-2">
<h2 id=3D"6">Application-specific Improvements to the Ecosystem</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/application-specific-improv=
ements-to-the-ecosystem/10223/49">https://discuss.ocaml.org/t/application-s=
pecific-improvements-to-the-ecosystem/10223/49</a>
</p>
</div>

<div id=3D"outline-container-org7984ddd" class=3D"outline-3">
<h3 id=3D"org7984ddd">Deep in this thread, Kay-Uwe Kirstein said</h3>
<div class=3D"outline-text-3" id=3D"text-org7984ddd">
<p>
Personally, I often use the monadic Result type together with a polymorphic=
 variant for the actual errors. This makes
dealing with errors from different "levels" of my software (library, comman=
d-line tool, and GUI) quite comfortable
(and type-safe!).
@keleshev has written a nice blog post on this: <a href=3D"https://keleshev=
.com/composable-error-handling-in-ocaml">https://keleshev.com/composable-er=
ror-handling-in-ocaml</a> with a recent
follow up: <a href=3D"https://keleshev.com/advanced-error-handling-in-ocaml=
">https://keleshev.com/advanced-error-handling-in-ocaml</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-7" class=3D"outline-2">
<h2 id=3D"7">Other OCaml News</h2>
<div class=3D"outline-text-2" id=3D"text-7">
</div>
<div id=3D"outline-container-orgd1077c9" class=3D"outline-3">
<h3 id=3D"orgd1077c9">From the ocaml.org blog</h3>
<div class=3D"outline-text-3" id=3D"text-orgd1077c9">
<p>
Here are links from many OCaml blogs aggregated at <a href=3D"https://ocaml=
.org/blog/">the ocaml.org blog</a>.
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://tarides.com/blog/2022-08-02-irmin-in-the-browser">Ir=
min in the Browser</a></li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-org77d62dc" class=3D"outline-2">
<h2 id=3D"org77d62dc">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org77d62dc">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or the <=
a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archive=
s</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname" id=3D"org7c46c51">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

