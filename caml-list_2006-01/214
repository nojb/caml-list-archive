Return-Path: <jonathan.roewen@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id C07F3BBBB
	for <caml-list@yquem.inria.fr>; Sun, 29 Jan 2006 06:44:13 +0100 (CET)
Received: from zproxy.gmail.com (zproxy.gmail.com [64.233.162.204])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k0T5iC9E016961
	for <caml-list@yquem.inria.fr>; Sun, 29 Jan 2006 06:44:13 +0100
Received: by zproxy.gmail.com with SMTP id s1so861187nze
        for <caml-list@yquem.inria.fr>; Sat, 28 Jan 2006 21:44:12 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=X/iLkmnsIgrn1cRGvcmLOQKzW2eIZS6rAAwW6X+hZD1DbaWtr1WKTaAs/apqWAurRsjQGbDo9jj3Pd1Akey05/SSjqKjwTE4scbCWMAAeZNcqqN6pFcv2AVyLtD0VVLg/jmDkjHGoCDz5CNSRFT0ToTKAryXxm0y6l+nQcYpCbM=
Received: by 10.64.149.1 with SMTP id w1mr1620120qbd;
        Sat, 28 Jan 2006 21:44:12 -0800 (PST)
Received: by 10.64.10.15 with HTTP; Sat, 28 Jan 2006 21:44:12 -0800 (PST)
Message-ID: <ad8cfe7e0601282144w308d2f49u125dbf0a8a9289b3@mail.gmail.com>
Date: Sun, 29 Jan 2006 18:44:12 +1300
From: Jonathan Roewen <jonathan.roewen@gmail.com>
To: caml-list@yquem.inria.fr
Subject: [Caml-list] a functional shell -- beginning an implementation...
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
X-Miltered: at nez-perce with ID 43DC562C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 cmi:01 pointers:01 cmi:01 trie:98 functions:01 modules:01 primitives:01 tree:02 functional:02 module:03 module:03 shell:04 shell:04 function:08 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_BY_IP autolearn=disabled 
	version=3.0.3

Hi,

I'm trying to develop an ocaml-based shell, using functions as first
class primitives in the shell environment.

The idea I have is to have the .cmi files represent the environment
for the shell basics, and a trie to store function names available ..
and each have a list of modules that this name appears in. For a
function with a single module name, it can be executed without
ambiguity. Otherwise, there'd be some mechanism to handle the
ambiguity.

Anyways, to get to the real point: does anyone have some pointers on
where to begin to try extract names of values & module names from .cmi
files for the purpose of building this tree?

Kindest Regards,

Jonathan

