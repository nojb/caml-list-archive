Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 390FABB9C
	for <caml-list@yquem.inria.fr>; Fri, 20 Jan 2006 17:07:04 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k0KG73E2005352
	for <caml-list@yquem.inria.fr>; Fri, 20 Jan 2006 17:07:03 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA30654 for <caml-list@pauillac.inria.fr>; Fri, 20 Jan 2006 17:07:03 +0100 (MET)
Received: from mail.barettadeit.com (h213-255-109-130.albacom.net [213.255.109.130] (may be forged))
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id k0KG72qX031369
	for <caml-list@inria.fr>; Fri, 20 Jan 2006 17:07:02 +0100
Received: from [10.0.0.10] (alex.barettalocal.com [10.0.0.10])
	by mail.barettadeit.com (Postfix) with ESMTP id 420468A4D49
	for <caml-list@inria.fr>; Fri, 20 Jan 2006 17:06:59 +0100 (CET)
Message-ID: <43D10AA1.8050102@barettadeit.com>
Date: Fri, 20 Jan 2006 17:06:57 +0100
From: Alessandro Baretta <a.baretta@barettadeit.com>
User-Agent: Debian Thunderbird 1.0.7 (X11/20051017)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Ocaml <caml-list@inria.fr>
Subject: Associativity of new operators
Content-Type: text/plain; charset=ISO-8859-15; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 43D10AA7.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 43D10AA6.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; baretta:01 baretta:01 barettadeit:01 val:01 val:01 toplevel:01 int:01 int:01 defined:01 alessandro:03 alex:03 let:03 let:03 depends:04 fun:08 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.3

# let (++) = (-);;
val ( ++ ) : int -> int -> int = <fun>
# 10 ++ 4 ++ 6;;
- : int = 0
# let (@@) = (-);;
val ( @@ ) : int -> int -> int = <fun>
# 10 @@ 4 @@ 6;;
- : int = 12

The above toplevel session shows that the associativity of newly defined 
operators depends on the name of the operator itself. Is there a general rule to 
determine the associativity of the operator?

Alex


