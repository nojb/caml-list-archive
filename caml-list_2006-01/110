Return-Path: <fmonnier@linux-nantes.fr.eu.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id DC01DBB9C
	for <caml-list@yquem.inria.fr>; Thu, 19 Jan 2006 00:12:47 +0100 (CET)
Received: from mail.libertysurf.net (mx-out.libertysurf.net [213.36.80.91])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id k0INCjHk015769
	for <caml-list@yquem.inria.fr>; Thu, 19 Jan 2006 00:12:47 +0100
Received: from dyn-83-152-21-40.ppp.tiscali.fr (83.152.21.40) by mail.libertysurf.net (7.1.026)
        id 439E8311005E7505 for caml-list@yquem.inria.fr; Thu, 19 Jan 2006 00:12:45 +0100
From: Florent Monnier <fmonnier@linux-nantes.fr.eu.org>
Organization: l'Association Linux-Nantes
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] C interface style question
Date: Thu, 19 Jan 2006 00:21:11 +0100
User-Agent: KMail/1.8.2
References: <Pine.LNX.4.63.0601181925300.8013@guffert.cip.physik.uni-muenchen.de> <200601182132.45196.fmonnier@linux-nantes.fr.eu.org> <1137619863.11593.107.camel@localhost.localdomain>
In-Reply-To: <1137619863.11593.107.camel@localhost.localdomain>
MIME-Version: 1.0
Content-Disposition: inline
Message-Id: <200601190021.11934.fmonnier@linux-nantes.fr.eu.org>
X-Face: "`cRNH1ww*pA7BMG\%C8RcGZR33F%q#d~:5U8b[K-NbYLSW_wpx@wk**lzqX3\F'a|gyP"K
 /emS.&rsSu'a7OiJH&d?,Z6OxW_L}I"z%\><#5LL%uQXl"QY@~9|XyM7{`tAq?Gp@ul&F'#
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 43CECB6D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 pointers:01 bool:01 o'caml:01 camlreturn:01 camlparam:01 lablgl:01 camlparam:01 camlreturn:01 camlprim:01 val:01 val:01 ocaml:01 compile:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

> > > > value-type parameters to C functions exported to OCaml should be
> > > > registered with CAMLparamX(...). Does this hold in general, or is it
> > > > considered acceptable/appropriate to just ignore this for "immediate"
> > > > values that do not hold pointers, but, say, int, bool etc. values?
> > >
> > > If you don't allocate O'Caml memory you need not to register the
> > > parameters.
> >
> > And in this case there's no need to use CAMLreturn(), return is enough,
> > is it right ?
>
> That would not even compile without a CAMLparam.

Most of the LablGL functions have no CAMLparam and no CAMLreturn.
Here is just an exemple:

CAMLprim value
ml_glDeleteTexture (value texture_id)
{
    GLuint id = Int32_val(texture_id);
    glDeleteTextures(1, &id);
    return Val_unit;
}

And I think the author does know his way around OCaml tricks

-- 
Regards

