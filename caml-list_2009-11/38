Return-Path: <av1474@comtv.ru>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id DADF6BBAF
	for <caml-list@yquem.inria.fr>; Wed,  4 Nov 2009 16:37:22 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhwGAKgu8UpN6B+kYWdsb2JhbACBT5oEICPCN4JBgXwEglc
X-IronPort-AV: E=Sophos;i="4.44,680,1249250400"; 
   d="scan'208";a="36164477"
Received: from fe01x03-cgp.akado.ru (HELO akado.ru) ([77.232.31.164])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 04 Nov 2009 16:37:22 +0100
Received: from [10.0.66.9] ([10.0.66.9] verified)
  by fe01-cgp.akado.ru (CommuniGate Pro SMTP 5.2.13)
  with ESMTP id 123682331; Wed, 04 Nov 2009 18:37:17 +0300
Date: Wed, 4 Nov 2009 18:37:21 +0300 (MSK)
From: malc <av1474@comtv.ru>
X-X-Sender: malc@linmac.oyster.ru
To: Jan Kybic <kybic@fel.cvut.cz>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] AST versus Ocaml
In-Reply-To: <878wem75iq.fsf@fel.cvut.cz>
Message-ID: <Pine.LNX.4.64.0911041836350.2275@linmac.oyster.ru>
References: <878wem75iq.fsf@fel.cvut.cz>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Spam: no; 0.00; malc:01 ocaml:01 ocaml:01 high-level:01 genericity:01 inference:01 explicitely:01 garbage:01 wrote:01 caml-list:01 theorem:02 ast:02 ast:02 functional:02 shootout:02 

On Wed, 4 Nov 2009, Jan Kybic wrote:

> Dear all,
> 
> I am an Ocaml user but execution speed is very important for me, so I am
> constantly looking for ways to make my programs faster, if possible
> without sacrificing the high-level language benefits (genericity,
> garbage collection, safety).  I have just come across a language
> called AST (http://www.ats-lang.org/) which claims to be functional,
> based on ML (or Ocaml), and at the same time very efficient, perhaps
> as efficient as C. (AST has some other features (theorem proving)
> which I cannot fully appreciate at the moment.)
> 
> Some of the benchmarks definitely seem to support the speed claim,
> others are more suspicious as they are actually partly coded in C.

http://www.reddit.com/r/programming/comments/72hmw/language_shootout_ats_is_the_new_top_gunslinger/c05iq0a

> 
> Before devoting more time to investigating AST, I wanted to ask if you
> perhaps already have some experience with this language and can make a
> comparison to Ocaml. I have already observed that the type inference
> seems to be weaker in AST so the function types have to be explicitely
> given. 
> 
> Thank you for your comments.
> 
> Jan
> 
> 

-- 
mailto:av1474@comtv.ru

