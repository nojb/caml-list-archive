Return-Path: <kybic@fel.cvut.cz>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 20618BBAF
	for <caml-list@yquem.inria.fr>; Wed,  4 Nov 2009 15:02:29 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ar0EACcY8UqTIMAkgWdsb2JhbACBTpoOAQEWJMFZgkGBfAQ
X-IronPort-AV: E=Sophos;i="4.44,680,1249250400"; 
   d="scan'208";a="37536267"
Received: from max.feld.cvut.cz ([147.32.192.36])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 04 Nov 2009 15:02:28 +0100
Received: from localhost (unknown [192.168.200.4])
	by max.feld.cvut.cz (Postfix) with ESMTP id D528A19F33CC
	for <caml-list@inria.fr>; Wed,  4 Nov 2009 15:02:26 +0100 (CET)
X-Virus-Scanned: IMAP AMAVIS
Received: from max.feld.cvut.cz ([192.168.200.1])
	by localhost (styx.feld.cvut.cz [192.168.200.4]) (amavisd-new, port 10044)
	with ESMTP id Xjz-nfAOno6F for <caml-list@inria.fr>;
	Wed,  4 Nov 2009 15:02:15 +0100 (CET)
Received: from imap.feld.cvut.cz (imap.feld.cvut.cz [147.32.192.34])
	by max.feld.cvut.cz (Postfix) with ESMTP id 172BA19F33F9
	for <caml-list@inria.fr>; Wed,  4 Nov 2009 15:02:15 +0100 (CET)
Received: from localhost.fel.cvut.cz (meyer.felk.cvut.cz [147.32.84.20])
	(Authenticated sender: kybicjan)
	by imap.feld.cvut.cz (Postfix) with ESMTPSA id CF2EF15C066
	for <caml-list@inria.fr>; Wed,  4 Nov 2009 15:01:59 +0100 (CET)
To: caml-list@inria.fr
Subject: AST versus Ocaml
Reply-To: Jan Kybic <kybic@fel.cvut.cz>
From: Jan Kybic <kybic@fel.cvut.cz>
Date: Wed, 04 Nov 2009 15:01:49 +0100
Message-ID: <878wem75iq.fsf@fel.cvut.cz>
User-Agent: Gnus/5.1008 (Gnus v5.10.8) Emacs/22.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Spam: no; 0.00; ocaml:01 ocaml:01 high-level:01 genericity:01 inference:01 explicitely:01 garbage:01 theorem:02 ast:02 ast:02 functional:02 seems:03 types:05 perhaps:05 perhaps:05 

Dear all,

I am an Ocaml user but execution speed is very important for me, so I am
constantly looking for ways to make my programs faster, if possible
without sacrificing the high-level language benefits (genericity,
garbage collection, safety).  I have just come across a language
called AST (http://www.ats-lang.org/) which claims to be functional,
based on ML (or Ocaml), and at the same time very efficient, perhaps
as efficient as C. (AST has some other features (theorem proving)
which I cannot fully appreciate at the moment.)

Some of the benchmarks definitely seem to support the speed claim,
others are more suspicious as they are actually partly coded in C.

Before devoting more time to investigating AST, I wanted to ask if you
perhaps already have some experience with this language and can make a
comparison to Ocaml. I have already observed that the type inference
seems to be weaker in AST so the function types have to be explicitely
given. 

Thank you for your comments.

Jan

-- 
-------------------------------------------------------------------------
Jan Kybic <kybic@fel.cvut.cz>                       tel. +420 2 2435 5721
http://cmp.felk.cvut.cz/~kybic                      ICQ 200569450

