Return-Path: <rich@annexia.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 93121BBAF
	for <caml-list@yquem.inria.fr>; Sun,  1 Nov 2009 20:57:50 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjwDANp27UpQRFuwWWdsb2JhbACbSAEWFQS7aYQ5BA
X-IronPort-AV: E=Sophos;i="4.44,662,1249250400"; 
   d="scan'208";a="35967696"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 01 Nov 2009 20:57:50 +0100
Received: from rich by furbychan.cocan.org with local (Exim 4.63)
	(envelope-from <rich@annexia.org>)
	id 1N4gYf-00042D-L9; Sun, 01 Nov 2009 19:57:49 +0000
Date: Sun, 1 Nov 2009 19:57:49 +0000
To: Goswin von Brederlow <goswin-v-b@web.de>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Re: How to read different ints from a Bigarray?
Message-ID: <20091101195749.GA15428@annexia.org>
References: <slrnhegkik.q9j.sylvain@gallu.homelinux.org> <87639zd0m9.fsf@frosties.localdomain> <slrnhego3u.q9j.sylvain@gallu.homelinux.org> <87tyxj5rkv.fsf@frosties.localdomain> <527cf6bc0910281548s53a00ec9s99402f4249b2d411@mail.gmail.com> <873a52wmu0.fsf@frosties.localdomain> <20091029122043.GA18905@annexia.org> <87iqdyb028.fsf@frosties.localdomain> <20091030203011.GA30746@annexia.org> <87tyxeqnyf.fsf@frosties.localdomain>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <87tyxeqnyf.fsf@frosties.localdomain>
User-Agent: Mutt/1.5.13 (2006-08-11)
From: Richard Jones <rich@annexia.org>
X-Spam: no; 0.00; bigarray:01 0100,:01 ocaml:01 compiler:01 2009:98 polymorphic:01 wrote:01 inline:01 ints:01 caml-list:01 functions:01 33%:97 slower:02 assembler:02 supported:02 

On Sun, Nov 01, 2009 at 04:11:52PM +0100, Goswin von Brederlow wrote:
> But C calls are still 33% slower than direct access in ocaml (if one
> doesn't use the polymorphic functions).

Are you using noalloc calls?

http://camltastic.blogspot.com/2008/08/tip-calling-c-functions-directly-with.html

I would love to see inline assembler supported by the compiler.

Rich.

-- 
Richard Jones
Red Hat

