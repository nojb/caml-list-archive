Return-Path: <zack@upsilon.cc>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 1E73CBBAF
	for <caml-list@yquem.inria.fr>; Sun, 29 Nov 2009 09:44:50 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvoDACrDEUtDz4HegWdsb2JhbACcEgEBFiS2PIQxBIMg
X-IronPort-AV: E=Sophos;i="4.47,307,1257116400"; 
   d="scan'208";a="51189765"
Received: from fettunta.fettunta.org ([67.207.129.222])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 29 Nov 2009 09:44:49 +0100
Received: from usha.takhisis.invalid (unknown [10.17.0.10])
	by fettunta.fettunta.org (Postfix) with ESMTPS id 6C04F1826D
	for <caml-list@inria.fr>; Sun, 29 Nov 2009 08:44:48 +0000 (UTC)
Received: by usha.takhisis.invalid (Postfix, from userid 1000)
	id 818DB6084; Sun, 29 Nov 2009 09:44:46 +0100 (CET)
Date: Sun, 29 Nov 2009 09:44:46 +0100
From: Stefano Zacchiroli <zack@upsilon.cc>
To: caml-list@inria.fr
Subject: Re: [Caml-list] solicitation for ocamlbuild examples to go in a
 new repository
Message-ID: <20091129084446.GA31920@usha.takhisis.invalid>
Mail-Followup-To: caml-list@inria.fr
References: <243054520911280948p46d484b8vdd1e5c2187447711@mail.gmail.com>
 <4B1174E3.6080903@citycable.ch>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <4B1174E3.6080903@citycable.ch>
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Spam: no; 0.00; zacchiroli:01 zack:01 0100,:01 guillaume:01 afaik:01 cheers:01 zacchiroli:01 postdoc:01 zack:01 28,:98 2009:98 dietro:98 c'e:98 sempre:98 wrote:01 

On Sat, Nov 28, 2009 at 08:07:15PM +0100, Guillaume Yziquel wrote:
> The point is, in my humble opinion, that we do need examples, but
> we'd better try to have a generic plugin that solves most of the use
> cases. And *precise* documentation of ocamlbuild to be able to write
> such a plugin, or other plugins.

AOL on that.

Besides, as long as it is hard to merge together examples that fit
different scenarios, the exercise risks to be even less useful. AFAIK,
currently the best proposed approach to easily combine different plugins
together is by the means of ocamlbuildplus [1], is there any other way
to do that as easily with legacy ocamlbuild?


Cheers.

[1] http://ocamlbuildplus.forge.ocamlcore.org/

-- 
Stefano Zacchiroli -o- PhD in Computer Science \ PostDoc @ Univ. Paris 7
zack@{upsilon.cc,pps.jussieu.fr,debian.org} -<>- http://upsilon.cc/zack/
Dietro un grande uomo c'è ..|  .  |. Et ne m'en veux pas si je te tutoie
sempre uno zaino ...........| ..: |.... Je dis tu à tous ceux que j'aime

