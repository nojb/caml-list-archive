Return-Path: <SRS0=5eoO=W4=polytechnique.org=alan.schmitt@bounces.m4x.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 14BD8E0094
	for <caml-list@sympa.inria.fr>; Tue, 21 Jun 2022 10:06:56 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=Pass smtp.pra=alan.schmitt@polytechnique.org; spf=Pass smtp.mailfrom=SRS0=5eoO=W4=polytechnique.org=alan.schmitt@bounces.m4x.org; spf=Pass smtp.helo=postmaster@mx1.polytechnique.org
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  alan.schmitt@polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=pra; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=5eoO=W4=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="alan.schmitt@polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  SRS0=5eoO=W4=polytechnique.org=alan.schmitt@bounces.m4x.org
  designates 129.104.30.34 as permitted sender)
  identity=mailfrom; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=5eoO=W4=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="SRS0=5eoO=W4=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  postmaster@mx1.polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=helo; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=5eoO=W4=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="postmaster@mx1.polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1";
  x-record-text="v=spf1 a -all"
IronPort-SDR: m+NhxLaH8B/+o6Fo0GXgQ0p5D39OF9hdDZ/pcwDF5v2rrS1Z2l2dKG2FKAR1TMHMD75Y1lxDVG
 8g6OUAEV4zFSJWI+8nnkjZd5fJFqhYEThYCukdwkyhNV7wF5Gm4sbG4TWV6w+NYIL10dq1xJFp
 nkwpGaf275V1GzSgwAwBJM/LbVkiK3Daact6OuXX6rujiTGSja5Oi8zs8UHLREBMkbhtjaGe1q
 h22XPcubsHRNM+S9+LtP6HuHcDz+PuBNvLV7ToxPH6BDkoLUnW4ws+7F/Q4KRlFH68z1U5CNOu
 87Dx0WsGFvFYhuzB3CL553nH
X-IPAS-Result: =?us-ascii?q?A0DjAgDPe7FimCIeaIFaFn+CZIEDGQFnVi4HCESEET2BY?=
 =?us-ascii?q?4cdiAyDK4Ymhn6NRANPEAEDAQ0sAQ4EAQIEAQGDTYIHCYRxAh4GAQUzEwECB?=
 =?us-ascii?q?AEBAQEDAgMBAQEBAQEDAQEFAQEBAgEBAgQEARMBAQEBAQEBAQkLCQcGDAUQD?=
 =?us-ascii?q?gU8ZGQEgUsEgXQLNA2CNQwMAwMBg3MDAQoOCQo6AQMnIwMUAQYDAhEBFwEeF?=
 =?us-ascii?q?wESFAaCYwGDGAMFCpBRnBSBMYEBg08BFQMBDgkmg3OBZSSBGYYgXkoBgw8Jg?=
 =?us-ascii?q?RqCeAInEIFVRIItgWJugVABcwcXAQEBAQEXgQMhAQGDdoJlBIMXljgHOANHN?=
 =?us-ascii?q?BKBIXEBCAYGBwoFMgYCDBgUBAITEk0GHQISDAoGFg5CEhkMDwMSAxEBBwILE?=
 =?us-ascii?q?ggVLAgDAgMIAwIDLgIDFwkHCgMdCAocEhAUAgQTHgsIAxkfLAkCBA4DRQgLC?=
 =?us-ascii?q?gMRBAMTGAsWCBAEBgMJLw0oCwMFDw0BBgMGAgUFAQMgAxQDBScHAyEHCyYND?=
 =?us-ascii?q?QQjHQMDBSYDAgIbBwICAwIGFwYCAhhWCiYNCAQIBBgEHSQQBQIHMQUELwIeB?=
 =?us-ascii?q?AUGEQkCFgIGBAUCBAQWAgISCAIIJxsHFjYZAQVdBgsJIRYGKREFBhYDI0onB?=
 =?us-ascii?q?UgPKTU2PC8hGwqBDRYsCSQhBiKWCBwdhCUcDiAeSzQLBgcDDgMOAQEEHjY4C?=
 =?us-ascii?q?xkHEgQXGx0SCwsGKZITESeYT4JhkVZ8NAeDUYE+BgyHcTyBIoc7gw+COIgjg?=
 =?us-ascii?q?3WBUIpzkTSGdyGWTQgYgiuGf4ESCQeBfEZKlAMEKoUNgU4qgWsMBzMaMEOCa?=
 =?us-ascii?q?AlFAQMCDQECAgMBAgECCQEBAlSNIQEFLhaDUIE+IoEEgXU7B4EmgzdoPzQBA?=
 =?us-ascii?q?QEBNwIGAQoBAQMJhWMBAQUTCwGGMCyBPl4BAQ?=
IronPort-PHdr: A9a23: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
IronPort-Data: A9a23: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
 m8cSt5aLlGtuA==
IronPort-HdrOrdr: A9a23:gU+2D6wofCnd/MrGEMIwKrPwK71zdoMgy1knxilNoH1uEvBw+P
 rAoB1273XJYVUqOU3I++rvBEDoexq1nqKdirN8AV7NZmTbkVrtBL4nx4rvyT/tFkTFh41g/J
 YlVbNxTPn5DV0St7ee3OBUKadD/OW6
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-AV: E=Sophos;i="5.92,209,1650924000"; 
   d="scan'208,217";a="17355175"
X-MGA-submission: =?us-ascii?q?MDG4320apt3vbRD5kni08mP1r8QM1QEmlt4lVb?=
 =?us-ascii?q?qyO1VHE0lhoIrZUv4biuqio72WP+fGok6pzmI1TrrpZNQQzqc9asQtyM?=
 =?us-ascii?q?b/6DqswMSL6GwlcY5Q00gUoh0y20SVzI3fFZfX+bf415RbRjvQiyhVpE?=
 =?us-ascii?q?GsO6/ujlXGKnO4bPkVenLuKg=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 21 Jun 2022 10:06:53 +0200
Received: from set (set.irisa.fr [131.254.10.170])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id DF27C564837;
	Tue, 21 Jun 2022 10:06:50 +0200 (CEST)
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr
Date: Tue, 21 Jun 2022 10:06:34 +0200
Message-ID: <87v8suwid1.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Jun 21 10:06:51 2022 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.073900, queueID=68F5E564A06
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Hello

Here is the latest OCaml Weekly News, for the week of June 14 to 21,
2022.

Table of Contents
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

OBazl Toolsuite - tools for building OCaml with Bazel
Job offer: 3 years compiler engineer at the French tax authority
OCaml 5.0, zeroth alpha release
Tezt, a framework for all your tests
OCaml Stdlib, Containers, Batteries, Base and F# core functions comparisons
Dune 3.3.0
Old CWN


OBazl Toolsuite - tools for building OCaml with Bazel
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/obazl-toolsuite-tools-for-building-ocaml-wit=
h-bazel/10021/1>


Gregg Reynolds announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Version 2 of OBazl, a Bazel ruleset for building OCaml code, will soon
  be available.  I'm letting you know early because I'll be giving a
  presentation about the OBazl Toolsuite for the [Bazel Exchange]
  conference next Wed, 22 June, at 3:00 pm UDT (10:00 am CDT). It's a
  virtual conference so you can tune in from anywhere.  The talk will
  focus on some of the quirks of the OCaml build discipline and how I
  addressed them for the OBazl ruleset.

  The tools are usable now, they're just not yet properly documented and
  packaged, and in a few places there's a little more work to be done on
  the code. Nonetheless there is quite a bit of documentation (CAVEAT:
  some of it is outdated), with more on the way soon, and there are lots
  of demos available.  So if you're interested in using Bazel to build
  your OCaml code I welcome you to take a look:

  [The OBazl Book]

  Twitter handle is @obazldev Discord: [https://discord.gg/PHSAW5DUva]


[Bazel Exchange]
<https://skillsmatter.com/conferences/13682-bazel-exchange>

[The OBazl Book] <https://obazl.github.io/docs_obazl/>

[https://discord.gg/PHSAW5DUva] <https://discord.gg/PHSAW5DUva>


Gregg Reynolds lated added
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80

  PS.  The conference organizers have provided this discount token:
  BAZEL-GR-20

  It should be good for 20% off, registration is at
  [https://events.skillsmatter.com/bazelx2022]


[https://events.skillsmatter.com/bazelx2022]
<https://events.skillsmatter.com/bazelx2022>


Job offer: 3 years compiler engineer at the French tax authority
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/job-offer-3-years-compiler-engineer-at-the-f=
rench-tax-authority/10023/1>


Denis Merigoux announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  [En fran=C3=A7ais parce que c'est une offre d'emploi dans l'administratio=
n]

  Bonjour =C3=A0 toutes et =C3=A0 tous,

  Vous aimez la programmation fonctionnelle et les compilateurs ? Vous
  en avez marre des offres d'emploi dans la blockchain ? =C3=87a tombe bien,
  j'ai ce qu'il vous faut !

  Il y a deux ans, j'ai lanc=C3=A9 un grand projet de modernisation du calc=
ul
  informatique de calcul de l'imp=C3=B4t sur le revenu =C3=A0 la Direction
  G=C3=A9n=C3=A9rale des Finances Publiques (DGFiP), en partenariat avec In=
ria:
  <https://www.inria.fr/fr/mlang-modernisation-calcul-impot-revenu>.

  Le logiciel au c=C5=93ur de ce projet de modernisation est Mlang, un
  compilateur =C3=A9crit en OCaml pour un couple de langages d=C3=A9di=C3=
=A9s utilis=C3=A9s
  par la DGFiP pour encoder le calcul de l'imp=C3=B4t sur le revenu. Depuis
  deux ans, la DGFiP travaille =C3=A0 int=C3=A9grer Mlang =C3=A0 l'infrastr=
ucture
  officielle de calcul de l'imp=C3=B4t sur le revenu pour remplacer des
  syst=C3=A8mes vieillissants. C'est donc un projet =C3=A0 tr=C3=A8s fort i=
mpact (80M=E2=82=AC
  par d'imp=C3=B4ts par an), et proche de la R&D (OCaml, libre, innovation)=
 !
  Depuis un an, la DGFiP emploie la soci=C3=A9t=C3=A9 OCamlPro sur le proje=
t mais
  souhaite maintenant r=C3=A9-internaliser ses comp=C3=A9tences pour garder=
 la
  souverainet=C3=A9 num=C3=A9rique sur son infrastructure de calcul.

  C'est l=C3=A0 que cette offre d'emploi entre en jeu ! En effet la DGFiP
  vient d'ouvrir un poste en CDD de 3 ans pour un.e expert.e en
  compilation ! Les d=C3=A9tails :

  =E2=80=A2 Bureaux =C3=A0 Noisy-le-Grand (+ jusqu'=C3=A0 3 jours t=C3=A9l=
=C3=A9travail/semaine)
  =E2=80=A2 Salaire: =C3=80 n=C3=A9gocier selon exp=C3=A9rience mais simila=
ire =C3=A0 "Inspecteur
    des finances publiques". Selon le site du minist=C3=A8re de l'=C3=A9con=
omie =C3=A7a
    d=C3=A9buterait =C3=A0 3k=E2=82=AC net/mois.
  =E2=80=A2 T=C3=A2ches: Maintenance, =C3=A9volution de Mlang et travaux an=
nexes

  Et pour l'heureux.se recrut=C3=A9.e, la cerise sur le g=C3=A2teau sera de
  pouvoir collaborer avec moi et l'=C3=A9quipe Prosecco d'Inria (ainsi que
  Rapha=C3=ABl Monat, ) :) Attention cependant : il faudra s'attendre =C3=A0
  devoir =C3=A9galement aider l'=C3=A9quipe de la DGFiP sur d'autres chanti=
ers en
  fonction des priorit=C3=A9s. De m=C3=AAme, l'objectif est de partager la
  comp=C3=A9tence en compilation au sein de la DGFiP, donc les profils
  =C3=A9vang=C3=A9lisateurs de la programmation fonctionnelle sont les bien=
venus !

  Pour r=C3=A9f=C3=A9rence, voici l'offre officielle compl=C3=A8te:
  <https://merigoux.ovh/assets/OffreDGFiP.pdf>. S'il vous pla=C3=AEt, pas
  d'autocensure =C3=A0 cause de ce qui est marqu=C3=A9 dans ce PDF! Si vous=
 avez
  un doute contactez-moi par retour de mail.

  Deadline pour les candidatures: 9 juillet. Prise de poste inconnue,
  s=C3=BBrement aux alentours du 1er septembre mais j'imagine que c'est
  n=C3=A9gociable.


Denis Merigoux later added
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80

  Si vous =C3=AAtes int=C3=A9ress=C3=A9.e, envoyez votre CV et lettre de mo=
tivation =C3=A0
  bureau.si-part-rh@dgfip.finances.gouv.fr et
  bureau.rh-mobilite-carriere-a-recrutementchoix@dgfip.finances.gouv.fr.


OCaml 5.0, zeroth alpha release
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ocaml-5-0-zeroth-alpha-release/10026/1>


octachron announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80

  Five months after the initial merge of the multicore branch into the
  mainline OCaml and three months after the release of OCaml 4.14.0,
  OCaml 5.0.0 is starting to take shape.

  I am thus happy to announce an exceptional zeroth alpha release of
  OCaml 5.0.0 (see below for the installation instructions).

  This alpha release is expected to be rougher than an usual alpha
  release, due to the full rewrite of the OCaml runtime. In particular,
  the bytecode debugger will only be available in the next alpha
  release. Similarly, there will be some changes to the internal C
  runtime API and to the files installed by the compiler package in the
  next alpha release.

  Moreover, this zeroth alpha release is the occasion to remind everyone
  that OCaml 5.0 itself is expected to be a more experimental release
  than usual. Notably, the native compiler will only be available on the
  ARM64 and x86-64 architectures in this 5.0 release.

  Nevertheless, this zeroth alpha version is already stable enough for
  fellow hackers eager to join us in our early bug hunting and opam
  ecosystem fixing fun, or to venture in the new era of parallelism and
  (experimental) effects.

  You can follow the progresses in stabilising the opam ecosystem on

  <https://github.com/ocaml/opam-repository/issues/21526>

  A brief summary is that at least dune, merlin, ppxlib, utop,
  ocamlfind, and ocamlbuild work (potentially by using patches from the
  alpha opam repository).

  If you find any bugs, please report them here:

  <https://github.com/ocaml/ocaml/issues>

  In particular, any sequential OCaml 4 library or program should be
  valid in OCaml 5 (except for deprecated modules and functions). Please
  don't hesitate to report any compatibility bugs!

  If you are interested by the ongoing list of bug fixes, the updated
  change log for OCaml 5.0.0 is available at:

  <https://github.com/ocaml/ocaml/blob/5.0/Changes>


Installation instructions
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=
=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=
=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=
=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=
=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=
=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=
=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=
=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=80=95=E2=
=80=95=E2=80=95=E2=80=95=E2=80=95
  The base compiler can be installed as an opam switch with the
  following commands on opam 2.1:
  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam update
  =E2=94=82 opam switch create 5.0.0~alpha0
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  For previous version of opam, the switch creation command line is
  slightly more verbose:
  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam update
  =E2=94=82 opam switch create 5.0.0~alpha0 --repositories=3Ddefault,beta=
=3Dgit+https://github.com/ocaml/ocaml-beta-repository.git
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  If you want to tweak the configuration of the compiler, you can switch
  to the option variant with:
  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam update
  =E2=94=82 opam switch create <switch_name> ocaml-variants.5.0.0~alpha0+op=
tions <option_list>
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  where `<option_list>' is a comma separated list of `ocaml-option-*'
  packages. For instance, for a flambda and no-flat-float-array switch:
  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam switch create 5.0.0~alpha0+flambda+nffa ocaml-variants.5.0=
.0~alpha0+options ocaml-option-flambda
  =E2=94=82 ocaml-option-no-flat-float-array
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  The command line above is slightly more complicated for an opam
  version anterior to opam 2.1:
  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam update
  =E2=94=82 opam switch create <switch_name> --packages=3Docaml-variants.5.=
0.0~alpha0+options,<option_list>
  =E2=94=82 --repositories=3Ddefault,beta=3Dgit+https://github.com/ocaml/oc=
aml-beta-repository.git
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  In both cases, all available options can be listed with `opam search
  ocaml-option'.

  If you want to test this version, it is strongly advised to install
  the alpha opam repository

  <https://github.com/kit-ty-kate/opam-alpha-repository>

  with
  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam repo add alpha git://github.com/kit-ty-kate/opam-alpha-rep=
ository.git
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  This alpha repository contains various fixes in the process of being
  upstreamed.

  The source code for the alpha is also available at these addresses:

  =E2=80=A2 <https://github.com/ocaml/ocaml/archive/5.0.0-alpha0.tar.gz>
  =E2=80=A2 <https://caml.inria.fr/pub/distrib/ocaml-5.0/ocaml-5.0.0~alpha0=
.tar.gz>


Daniel B=C3=BCnzli asked and octachron replied
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

        Does this mean we get [global warming] again ?

  Indeed! I should have mentioned that point! The normal development
  process can restart on the compiler development branch.

  I will also try to slowly go through the backlog of frozen PRs once
  the alpha releases settle down.


[global warming]
<https://discuss.ocaml.org/t/the-road-to-ocaml-5-0/8584#the-sequential-glac=
iation-3>


Tezt, a framework for all your tests
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-tezt-a-framework-for-all-your-tests/1003=
8/1>


rbardou announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

  Tezt (pronounced [/t=C9=9Bzti/]) is a test framework for OCaml that has
  been developed and used at Nomadic Labs to test [Octez], an OCaml
  implementation of the Tezos blockchain. It has become quite mature and
  we feel it would benefit the OCaml community at large, so we are
  releasing it publicly as a standalone product.

  Tezt is well-suited for unit tests, integration tests, and regression
  tests in particular. It was designed with a focus on user experience,
  with colourful logs, various ways to select the tests to run from the
  command-line, and more. It integrates well into CI pipelines. And it
  cleans up after itself, deleting temporary files and killing external
  processes. Unless you tell it not to, of course.

  For a more in-depth tour of Tezt, see [our latest blog post entry].

  Tezt is available on opam:
  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam install tezt
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  Have a look at the [API documentation] and the [source code].


[/t=C9=9Bzti/] <http://ipa-reader.xyz/?text=3Dt%C9%9Bzti>

[Octez]
<https://research-development.nomadic-labs.com/announcing-octez.html>

[our latest blog post entry]
<https://research-development.nomadic-labs.com/announcing-tezt.html>

[API documentation]
<https://tezos.gitlab.io/api/odoc/_html/tezt/Tezt/index.html>

[source code] <https://gitlab.com/tezos/tezos/-/tree/master/tezt/lib>


OCaml Stdlib, Containers, Batteries, Base and F# core functions comparisons
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ocaml-stdlib-containers-batteries-base-and-f=
-core-functions-comparisons/10041/1>


Jp R announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  <https://github.com/Fourchaux/OCaml-Stdlib_Containers_Batteries_Base-and-=
FSharp--core-functions-comparisons>

  Comparisons (names/signatures) of the core functions used in:

  =E2=80=A2 OCaml Stdlib (v4.41.0)
  =E2=80=A2 Containers (v3.8)
  =E2=80=A2 Batteries (v3.5.1)
  =E2=80=A2 Base (v0.15.0)
  =E2=80=A2 F# (v6.0) as a bonus

  Note: F# provides an Array.Parallel module with some functions
   (choose, collect, init, iter, iteri, map, mapi, partition) which
   could be good candidates for OCaml 5.0.0=E2=80=A6


Dune 3.3.0
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ann-dune-3-3-0/10048/1>


Etienne Millon announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  On behalf of the dune team, I=E2=80=99m pleased to announce the release of
  version 3.3.0. This is the first version that supports the upcoming
  OCaml 5.0. It also improves safety by sandboxing more rules and
  enabling more warnings, and there's a bunch of new features on the coq
  side too. Full changelog follows.

  Note that as usual, dune works hard not to break existing packages. So
  even if it mentions that rules require precise dependencies, for
  example, this new safety net is only enabled for project that use
  `(lang dune 3.3)'.

  Happy hacking.


3.3.0 (17-06-2022)
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C

  =E2=80=A2 Sandbox preprocessing, lint, and dialect rules by default. All =
these
    rules now require precise dependency specifications (#5807,
    @rgrinberg)

  =E2=80=A2 Allow list expansion in the `pps' specification for preprocessi=
ng
    (#5820, @Firobe)

  =E2=80=A2 Add warnings 67-69 to dune's default set of warnings. These are
    warnings of the form "unused X.." (#5844, @rgrinberg)

  =E2=80=A2 Introduce project "composition" for coq theories. Coq theories =
in
    separate projects can now refer to each other when in the same
    workspace (#5784, @Alizter, @rgrinberg)

  =E2=80=A2 Fix hint message for `data_only_dirs' that wrongly mentions the
    unknown constructor `data_only' (#5803, @lambdaxdotx)

  =E2=80=A2 Fix creating sandbox directory trees by getting rid of buggy
    memoization (#5794, @rgrinberg, @snowleopard)

  =E2=80=A2 Handle directory dependencies in sandboxed rules. Previously, t=
he
    parents of these directory dependencies weren't created. (#5754,
    @rgrinberg)

  =E2=80=A2 Set the exit code to 130 when dune is terminated with a signal
    (#5769, fixes #5757)

  =E2=80=A2 Support new locations of unix, str, dynlink in OCaml >=3D 5.0 (=
#5582,
    @dra27)

  =E2=80=A2 The `coq.theory' stanza now produces rules for running
    `coqdoc'. Given a theory named `mytheory', the directory targets
    `mytheory.html/' and `mytheory.tex/' or additionally the aliases
    `@doc' and `@doc-latex' will build the HTML and LaTeX documentation
    repsectively. (#5695, fixes #3760, @Alizter)

  =E2=80=A2 Coq theories marked as `(boot)' cannot depend on other theories
    (#5867, @ejgallego)

  =E2=80=A2 Ignore `bigarray' in `(libraries)' with OCaml >=3D 5.0. (#5526,=
 fixes
    #5494, @moyodiallo)

  =E2=80=A2 Start with :standard when building the ctypes generated foreign
    stubs so that we include important compiler flags, such as -fPIC
    (#5816, fixes #5809).


Old CWN
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  [online].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <https://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <https://alan.petitepomme.net/cwn/cwn.rss>

[online] <http://lists.idyll.org/listinfo/caml-news-weekly/>

[Alan Schmitt] <https://alan.petitepomme.net/>


--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2022-06-21 Tue 10:04 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org Mode" />
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
</head>
<body>
<div id=3D"content" class=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2022.06.14.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2022.06.28.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of June 14 to 21, 2022.
</p>

<div id=3D"table-of-contents" role=3D"doc-toc">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents" role=3D"doc-toc">
<ul>
<li><a href=3D"#1">OBazl Toolsuite - tools for building OCaml with Bazel</a=
></li>
<li><a href=3D"#2">Job offer: 3 years compiler engineer at the French tax a=
uthority</a></li>
<li><a href=3D"#3">OCaml 5.0, zeroth alpha release</a></li>
<li><a href=3D"#4">Tezt, a framework for all your tests</a></li>
<li><a href=3D"#5">OCaml Stdlib, Containers, Batteries, Base and F# core fu=
nctions comparisons</a></li>
<li><a href=3D"#6">Dune 3.3.0</a></li>
<li><a href=3D"#org62983ac">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-1" class=3D"outline-2">
<h2 id=3D"1">OBazl Toolsuite - tools for building OCaml with Bazel</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/obazl-toolsuite-tools-for-b=
uilding-ocaml-with-bazel/10021/1">https://discuss.ocaml.org/t/obazl-toolsui=
te-tools-for-building-ocaml-with-bazel/10021/1</a>
</p>
</div>

<div id=3D"outline-container-org9ffac81" class=3D"outline-3">
<h3 id=3D"org9ffac81">Gregg Reynolds announced</h3>
<div class=3D"outline-text-3" id=3D"text-org9ffac81">
<p>
Version 2 of OBazl, a Bazel ruleset for building OCaml code, will soon be a=
vailable.  I'm letting you know early
because I'll be giving a presentation about the OBazl Toolsuite for the <a =
href=3D"https://skillsmatter.com/conferences/13682-bazel-exchange">Bazel
Exchange</a> conference next Wed, 22 June, at 3:00 pm UDT
(10:00 am CDT). It's a virtual conference so you can tune in from anywhere.=
  The talk will focus on some of the
quirks of the OCaml build discipline and how I addressed them for the OBazl=
 ruleset.
</p>

<p>
The tools are usable now, they're just not yet properly documented and pack=
aged, and in a few places there's a little
more work to be done on the code. Nonetheless there is quite a bit of docum=
entation (CAVEAT: some of it is outdated),
with more on the way soon, and there are lots of demos available.  So if yo=
u're interested in using Bazel to build
your OCaml code I welcome you to take a look:
</p>

<p>
<a href=3D"https://obazl.github.io/docs_obazl/">The OBazl Book</a>
</p>

<p>
Twitter handle is @obazldev
Discord:  <a href=3D"https://discord.gg/PHSAW5DUva">https://discord.gg/PHSA=
W5DUva</a>
</p>
</div>
</div>


<div id=3D"outline-container-org7b4483c" class=3D"outline-3">
<h3 id=3D"org7b4483c">Gregg Reynolds lated added</h3>
<div class=3D"outline-text-3" id=3D"text-org7b4483c">
<p>
PS.  The conference organizers have provided this discount token:  BAZEL-GR=
-20
</p>

<p>
It should be good for 20% off, registration is at
<a href=3D"https://events.skillsmatter.com/bazelx2022">https://events.skill=
smatter.com/bazelx2022</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-2" class=3D"outline-2">
<h2 id=3D"2">Job offer: 3 years compiler engineer at the French tax authori=
ty</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/job-offer-3-years-compiler-=
engineer-at-the-french-tax-authority/10023/1">https://discuss.ocaml.org/t/j=
ob-offer-3-years-compiler-engineer-at-the-french-tax-authority/10023/1</a>
</p>
</div>

<div id=3D"outline-container-org87632e7" class=3D"outline-3">
<h3 id=3D"org87632e7">Denis Merigoux announced</h3>
<div class=3D"outline-text-3" id=3D"text-org87632e7">
<p>
[En fran=C3=A7ais parce que c'est une offre d'emploi dans l'administration]
</p>

<p>
Bonjour =C3=A0 toutes et =C3=A0 tous,
</p>

<p>
Vous aimez la programmation fonctionnelle et les compilateurs ? Vous en ave=
z marre des offres d'emploi dans la
blockchain ? =C3=87a tombe bien, j'ai ce qu'il vous faut !
</p>

<p>
Il y a deux ans, j'ai lanc=C3=A9 un grand projet de modernisation du calcul=
 informatique de calcul de l'imp=C3=B4t sur le
revenu =C3=A0 la Direction G=C3=A9n=C3=A9rale des Finances Publiques (DGFiP=
), en partenariat avec Inria:
<a href=3D"https://www.inria.fr/fr/mlang-modernisation-calcul-impot-revenu"=
>https://www.inria.fr/fr/mlang-modernisation-calcul-impot-revenu</a>.
</p>

<p>
Le logiciel au c=C5=93ur de ce projet de modernisation est Mlang, un compil=
ateur =C3=A9crit en OCaml pour un couple de langages
d=C3=A9di=C3=A9s utilis=C3=A9s par la DGFiP pour encoder le calcul de l'imp=
=C3=B4t sur le revenu. Depuis deux ans, la DGFiP travaille =C3=A0
int=C3=A9grer Mlang =C3=A0 l'infrastructure officielle de calcul de l'imp=
=C3=B4t sur le revenu pour remplacer des syst=C3=A8mes
vieillissants. C'est donc un projet =C3=A0 tr=C3=A8s fort impact (80M=E2=82=
=AC par d'imp=C3=B4ts par an), et proche de la R&amp;D (OCaml, libre,
innovation) ! Depuis un an, la DGFiP emploie la soci=C3=A9t=C3=A9 OCamlPro =
sur le projet mais souhaite maintenant
r=C3=A9-internaliser ses comp=C3=A9tences pour garder la souverainet=C3=A9 =
num=C3=A9rique sur son infrastructure de calcul.
</p>

<p>
C'est l=C3=A0 que cette offre d'emploi entre en jeu ! En effet la DGFiP vie=
nt d'ouvrir un poste en CDD de 3 ans pour un.e
expert.e en compilation ! Les d=C3=A9tails :
</p>

<ul class=3D"org-ul">
<li>Bureaux =C3=A0 Noisy-le-Grand (+ jusqu'=C3=A0 3 jours t=C3=A9l=C3=A9tra=
vail/semaine)</li>
<li>Salaire: =C3=80 n=C3=A9gocier selon exp=C3=A9rience mais similaire =C3=
=A0 "Inspecteur des finances publiques". Selon le site du minist=C3=A8re de=
 l'=C3=A9conomie =C3=A7a d=C3=A9buterait =C3=A0 3k=E2=82=AC net/mois.</li>
<li>T=C3=A2ches: Maintenance, =C3=A9volution de Mlang et travaux annexes</l=
i>
</ul>

<p>
Et pour l'heureux.se recrut=C3=A9.e, la cerise sur le g=C3=A2teau sera de p=
ouvoir collaborer avec moi et l'=C3=A9quipe Prosecco
d'Inria (ainsi que Rapha=C3=ABl Monat, ) :) Attention cependant : il faudra=
 s'attendre =C3=A0 devoir =C3=A9galement aider l'=C3=A9quipe
de la DGFiP sur d'autres chantiers en fonction des priorit=C3=A9s. De m=C3=
=AAme, l'objectif est de partager la comp=C3=A9tence en
compilation au sein de la DGFiP, donc les profils =C3=A9vang=C3=A9lisateurs=
 de la programmation fonctionnelle sont les
bienvenus !
</p>

<p>
Pour r=C3=A9f=C3=A9rence, voici l'offre officielle compl=C3=A8te: <a href=
=3D"https://merigoux.ovh/assets/OffreDGFiP.pdf">https://merigoux.ovh/assets=
/OffreDGFiP.pdf</a>. S'il vous pla=C3=AEt, pas
d'autocensure =C3=A0 cause de ce qui est marqu=C3=A9 dans ce PDF! Si vous a=
vez un doute contactez-moi par retour de mail.
</p>

<p>
Deadline pour les candidatures: 9 juillet. Prise de poste inconnue, s=C3=BB=
rement aux alentours du 1er septembre mais
j'imagine que c'est n=C3=A9gociable.
</p>
</div>
</div>


<div id=3D"outline-container-org6798b84" class=3D"outline-3">
<h3 id=3D"org6798b84">Denis Merigoux later added</h3>
<div class=3D"outline-text-3" id=3D"text-org6798b84">
<p>
Si vous =C3=AAtes int=C3=A9ress=C3=A9.e, envoyez votre CV et lettre de moti=
vation =C3=A0 bureau.si-part-rh@dgfip.finances.gouv.fr et
bureau.rh-mobilite-carriere-a-recrutementchoix@dgfip.finances.gouv.fr.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-3" class=3D"outline-2">
<h2 id=3D"3">OCaml 5.0, zeroth alpha release</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ocaml-5-0-zeroth-alpha-rele=
ase/10026/1">https://discuss.ocaml.org/t/ocaml-5-0-zeroth-alpha-release/100=
26/1</a>
</p>
</div>

<div id=3D"outline-container-org88752bf" class=3D"outline-3">
<h3 id=3D"org88752bf">octachron announced</h3>
<div class=3D"outline-text-3" id=3D"text-org88752bf">
<p>
Five months after the initial merge of the multicore branch into the mainli=
ne OCaml and three months after the
release of OCaml 4.14.0, OCaml 5.0.0 is starting to take shape.
</p>

<p>
I am thus happy to announce an exceptional zeroth alpha release of OCaml 5.=
0.0 (see below for the installation
instructions).
</p>

<p>
This alpha release is expected to be rougher than an usual alpha release, d=
ue to the full rewrite of the OCaml
runtime. In particular, the bytecode debugger will only be available in the=
 next alpha release. Similarly, there will
be some changes to the internal C runtime API and to the files installed by=
 the compiler package in the next alpha
release.
</p>

<p>
Moreover, this zeroth alpha release is the occasion to remind everyone that=
 OCaml 5.0 itself is expected to be a more
experimental release than usual. Notably, the native compiler will only be =
available on the ARM64 and x86-64
architectures in this 5.0 release.
</p>

<p>
Nevertheless, this zeroth alpha version is already stable enough for fellow=
 hackers eager to join us in our early bug
hunting and opam ecosystem fixing fun, or to venture in the new era of para=
llelism and (experimental) effects.
</p>

<p>
You can follow the progresses in stabilising the opam ecosystem on
</p>

<p>
<a href=3D"https://github.com/ocaml/opam-repository/issues/21526">https://g=
ithub.com/ocaml/opam-repository/issues/21526</a>
</p>

<p>
A brief summary is that at least dune, merlin, ppxlib, utop, ocamlfind, and=
 ocamlbuild work (potentially by using
patches from the alpha opam repository).
</p>

<p>
If you find any bugs, please report them here:
</p>

<p>
<a href=3D"https://github.com/ocaml/ocaml/issues">https://github.com/ocaml/=
ocaml/issues</a>
</p>

<p>
In particular, any sequential OCaml 4 library or program should be valid in=
 OCaml 5 (except for deprecated modules
and functions). Please don't hesitate to report any compatibility bugs!
</p>

<p>
If you are interested by the ongoing list of bug fixes, the updated change =
log for OCaml 5.0.0 is available at:
</p>

<p>
<a href=3D"https://github.com/ocaml/ocaml/blob/5.0/Changes">https://github.=
com/ocaml/ocaml/blob/5.0/Changes</a>
</p>
</div>

<div id=3D"outline-container-org787eb09" class=3D"outline-4">
<h4 id=3D"org787eb09">Installation instructions</h4>
<div class=3D"outline-text-4" id=3D"text-org787eb09">
<hr />
<p>
The base compiler can be installed as an opam switch with the following com=
mands
on opam 2.1:
</p>
<pre class=3D"example" id=3D"orgea896d4">
opam update
opam switch create 5.0.0~alpha0
</pre>
<p>
For previous version of opam, the switch creation command line is slightly =
more verbose:
</p>
<pre class=3D"example" id=3D"org7561276">
opam update
opam switch create 5.0.0~alpha0 --repositories=3Ddefault,beta=3Dgit+https:/=
/github.com/ocaml/ocaml-beta-repository.git
</pre>
<p>
If you want to tweak the configuration of the compiler, you can switch to t=
he option variant with:
</p>
<pre class=3D"example" id=3D"orgb008f8a">
opam update
opam switch create &lt;switch_name&gt; ocaml-variants.5.0.0~alpha0+options =
&lt;option_list&gt;
</pre>
<p>
where <code>&lt;option_list&gt;</code> is a comma separated list of <code>o=
caml-option-*</code> packages. For instance, for a flambda and
no-flat-float-array switch:
</p>
<pre class=3D"example" id=3D"orga3a63e3">
opam switch create 5.0.0~alpha0+flambda+nffa ocaml-variants.5.0.0~alpha0+op=
tions ocaml-option-flambda
ocaml-option-no-flat-float-array
</pre>
<p>
The command line above is slightly more complicated for an opam version ant=
erior to opam 2.1:
</p>
<pre class=3D"example" id=3D"orgbc20bfd">
opam update
opam switch create &lt;switch_name&gt; --packages=3Docaml-variants.5.0.0~al=
pha0+options,&lt;option_list&gt;
--repositories=3Ddefault,beta=3Dgit+https://github.com/ocaml/ocaml-beta-rep=
ository.git
</pre>
<p>
In both cases, all available options can be listed with <code>opam search o=
caml-option</code>.
</p>

<p>
If you want to test this version, it is strongly advised to install the alp=
ha opam repository
</p>

<p>
<a href=3D"https://github.com/kit-ty-kate/opam-alpha-repository">https://gi=
thub.com/kit-ty-kate/opam-alpha-repository</a>
</p>

<p>
with
</p>
<pre class=3D"example" id=3D"org6e90031">
opam repo add alpha git://github.com/kit-ty-kate/opam-alpha-repository.git
</pre>
<p>
This alpha repository contains various fixes in the process of being upstre=
amed.
</p>

<p>
The source code for the alpha is also available at these addresses:
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://github.com/ocaml/ocaml/archive/5.0.0-alpha0.tar.gz">=
https://github.com/ocaml/ocaml/archive/5.0.0-alpha0.tar.gz</a></li>
<li><a href=3D"https://caml.inria.fr/pub/distrib/ocaml-5.0/ocaml-5.0.0~alph=
a0.tar.gz">https://caml.inria.fr/pub/distrib/ocaml-5.0/ocaml-5.0.0~alpha0.t=
ar.gz</a></li>
</ul>
</div>
</div>
</div>


<div id=3D"outline-container-org7906186" class=3D"outline-3">
<h3 id=3D"org7906186">Daniel B=C3=BCnzli asked and octachron replied</h3>
<div class=3D"outline-text-3" id=3D"text-org7906186">
<blockquote>
<p>
Does this mean we get <a href=3D"https://discuss.ocaml.org/t/the-road-to-oc=
aml-5-0/8584#the-sequential-glaciation-3">global
warming</a> again ?
</p>
</blockquote>

<p>
Indeed! I should have mentioned that point! The normal development process =
can restart on the compiler development
branch.
</p>

<p>
I will also try to slowly go through the backlog of frozen PRs once the alp=
ha releases settle down.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-4" class=3D"outline-2">
<h2 id=3D"4">Tezt, a framework for all your tests</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-tezt-a-framework-for-al=
l-your-tests/10038/1">https://discuss.ocaml.org/t/ann-tezt-a-framework-for-=
all-your-tests/10038/1</a>
</p>
</div>

<div id=3D"outline-container-org8b21fcf" class=3D"outline-3">
<h3 id=3D"org8b21fcf">rbardou announced</h3>
<div class=3D"outline-text-3" id=3D"text-org8b21fcf">
<p>
Tezt (pronounced <a href=3D"http://ipa-reader.xyz/?text=3Dt%C9%9Bzti"><i>t=
=C9=9Bzti</i></a>) is a test framework for OCaml that has been
developed and used at Nomadic Labs to test
<a href=3D"https://research-development.nomadic-labs.com/announcing-octez.h=
tml">Octez</a>, an OCaml implementation of the Tezos
blockchain. It has become quite mature and we feel it would benefit the OCa=
ml community at large, so we are releasing
it publicly as a standalone product.
</p>

<p>
Tezt is well-suited for unit tests, integration tests, and regression tests=
 in particular. It was designed with a
focus on user experience, with colourful logs, various ways to select the t=
ests to run from the command-line, and
more. It integrates well into CI pipelines. And it cleans up after itself, =
deleting temporary files and killing
external processes. Unless you tell it not to, of course.
</p>

<p>
For a more in-depth tour of Tezt, see <a href=3D"https://research-developme=
nt.nomadic-labs.com/announcing-tezt.html">our latest blog post
entry</a>.
</p>

<p>
Tezt is available on opam:
</p>
<pre class=3D"example" id=3D"org1fea4f1">
opam install tezt
</pre>
<p>
Have a look at the <a href=3D"https://tezos.gitlab.io/api/odoc/_html/tezt/T=
ezt/index.html">API documentation</a> and the <a href=3D"https://gitlab.com=
/tezos/tezos/-/tree/master/tezt/lib">source
code</a>.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-5" class=3D"outline-2">
<h2 id=3D"5">OCaml Stdlib, Containers, Batteries, Base and F# core function=
s comparisons</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ocaml-stdlib-containers-bat=
teries-base-and-f-core-functions-comparisons/10041/1">https://discuss.ocaml=
.org/t/ocaml-stdlib-containers-batteries-base-and-f-core-functions-comparis=
ons/10041/1</a>
</p>
</div>

<div id=3D"outline-container-orgdd1558f" class=3D"outline-3">
<h3 id=3D"orgdd1558f">Jp R announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgdd1558f">
<p>
<a href=3D"https://github.com/Fourchaux/OCaml-Stdlib_Containers_Batteries_B=
ase-and-FSharp--core-functions-comparisons">https://github.com/Fourchaux/OC=
aml-Stdlib_Containers_Batteries_Base-and-FSharp--core-functions-comparisons=
</a>
</p>

<p>
Comparisons (names/signatures) of the core functions used in:
</p>

<ul class=3D"org-ul">
<li>OCaml Stdlib (v4.41.0)</li>
<li>Containers (v3.8)</li>
<li>Batteries (v3.5.1)</li>
<li>Base (v0.15.0)</li>
<li>F# (v6.0) as a bonus</li>
</ul>

<p>
Note:
 F# provides an Array.Parallel module with some functions
 (choose, collect, init, iter, iteri, map, mapi, partition)
 which could be good candidates for OCaml 5.0.0&#x2026;
</p>
</div>
</div>
</div>




<div id=3D"outline-container-6" class=3D"outline-2">
<h2 id=3D"6">Dune 3.3.0</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-dune-3-3-0/10048/1">htt=
ps://discuss.ocaml.org/t/ann-dune-3-3-0/10048/1</a>
</p>
</div>

<div id=3D"outline-container-orgf57075e" class=3D"outline-3">
<h3 id=3D"orgf57075e">Etienne Millon announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgf57075e">
<p>
On behalf of the dune team, I=E2=80=99m pleased to announce the release of =
version 3.3.0. This is the first version that
supports the upcoming OCaml 5.0. It also improves safety by sandboxing more=
 rules and enabling more warnings, and
there's a bunch of new features on the coq side too. Full changelog follows.
</p>

<p>
Note that as usual, dune works hard not to break existing packages. So even=
 if it mentions that rules require precise
dependencies, for example, this new safety net is only enabled for project =
that use <code>(lang dune 3.3)</code>.
</p>

<p>
Happy hacking.
</p>
</div>

<div id=3D"outline-container-org33ee732" class=3D"outline-4">
<h4 id=3D"org33ee732">3.3.0 (17-06-2022)</h4>
<div class=3D"outline-text-4" id=3D"text-org33ee732">
<ul class=3D"org-ul">
<li>Sandbox preprocessing, lint, and dialect rules by default. All these ru=
les
now require precise dependency specifications (#5807, @rgrinberg)</li>

<li>Allow list expansion in the <code>pps</code> specification for preproce=
ssing (#5820,
@Firobe)</li>

<li>Add warnings 67-69 to dune's default set of warnings. These are warning=
s of
the form "unused X.." (#5844, @rgrinberg)</li>

<li>Introduce project "composition" for coq theories. Coq theories in separ=
ate
projects can now refer to each other when in the same workspace (#5784,
@Alizter, @rgrinberg)</li>

<li>Fix hint message for <code>data_only_dirs</code> that wrongly mentions =
the unknown
constructor <code>data_only</code> (#5803, @lambdaxdotx)</li>

<li>Fix creating sandbox directory trees by getting rid of buggy memoization
(#5794, @rgrinberg, @snowleopard)</li>

<li>Handle directory dependencies in sandboxed rules. Previously, the paren=
ts of
these directory dependencies weren't created. (#5754, @rgrinberg)</li>

<li>Set the exit code to 130 when dune is terminated with a signal (#5769, =
fixes
#5757)</li>

<li>Support new locations of unix, str, dynlink in OCaml &gt;=3D 5.0 (#5582=
, @dra27)</li>

<li>The <code>coq.theory</code> stanza now produces rules for running <code=
>coqdoc</code>. Given a
theory named <code>mytheory</code>, the directory targets <code>mytheory.ht=
ml/</code> and
<code>mytheory.tex/</code> or additionally the aliases <code>@doc</code> an=
d <code>@doc-latex</code> will
build the HTML and LaTeX documentation repsectively. (#5695, fixes #3760,
@Alizter)</li>

<li>Coq theories marked as <code>(boot)</code> cannot depend on other theor=
ies
(#5867, @ejgallego)</li>

<li>Ignore <code>bigarray</code> in <code>(libraries)</code> with OCaml &gt=
;=3D 5.0. (#5526, fixes #5494,
@moyodiallo)</li>

<li>Start with :standard when building the ctypes generated foreign stubs s=
o that
we include important compiler flags, such as -fPIC (#5816, fixes #5809).</l=
i>
</ul>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-org62983ac" class=3D"outline-2">
<h2 id=3D"org62983ac">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org62983ac">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or the <=
a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archive=
s</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname" id=3D"org9bece91">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

