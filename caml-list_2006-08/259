Return-Path: <micha-1@fantasymail.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.3 required=5.0 tests=SPF_FAIL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 9D41CBB83
	for <caml-list@yquem.inria.fr>; Sat, 26 Aug 2006 12:48:54 +0200 (CEST)
Received: from mail.gmx.net (mail.gmx.de [213.165.64.20])
	by concorde.inria.fr (8.13.6/8.13.6) with SMTP id k7QAmsaC008363
	for <caml-list@yquem.inria.fr>; Sat, 26 Aug 2006 12:48:54 +0200
Received: (qmail invoked by alias); 26 Aug 2006 10:48:41 -0000
Received: from p54A31261.dip0.t-ipconnect.de (EHLO localhost) [84.163.18.97]
  by mail.gmx.net (mp030) with SMTP; 26 Aug 2006 12:48:41 +0200
X-Authenticated: #20477425
Date: Sat, 26 Aug 2006 12:50:08 +0200
From: micha <micha-1@fantasymail.de>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Image recognition
Message-ID: <20060826125008.4c148f33@localhost>
In-Reply-To: <7E98E3F4-3E2B-4760-9B88-A99261A1EDE6@gmail.com>
References: <7E98E3F4-3E2B-4760-9B88-A99261A1EDE6@gmail.com>
X-Mailer: Sylpheed-Claws 2.1.1 (GTK+ 2.8.20; i486-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Y-GMX-Trusted: 0
X-Miltered: at concorde with ID 44F02716.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 cheers:01 2006:98 caml-list:01 implemented:02 algorithms:03 algorithms:03 aug:06 implementing:06 schrieb:08 michael:08 ...:90 think:12 difficult:12 

Am Mon, 21 Aug 2006 13:35:22 +0100
schrieb Joel Reymont <joelr1@gmail.com>:

> Does anyone have tips or sample code for image recognition in OCaml?

last year I did some simple image recogniton, I just googled around and
asked in newsgroups for suitable algorithms and implemented them myself.
Finding the right algorithms is the difficult task I think :-) , not
implementing them in OCaml...

cheers,
 Michael

