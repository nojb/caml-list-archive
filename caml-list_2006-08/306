Return-Path: <caml-list2@davidb.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id BED3C1F454
	for <caml-list@yquem.inria.fr>; Thu, 31 Aug 2006 08:32:32 +0200 (CEST)
Received: from mail.davidb.org (mail.davidb.org [66.93.32.219])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k7V6WUiR000943
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Thu, 31 Aug 2006 08:32:32 +0200
Received: from a64.davidb.org ([66.93.32.226])
	by mail.davidb.org with esmtpa (Exim 4.60 #1 (Debian))
	id 1GIg6D-0007HZ-BO
	for <caml-list@inria.fr>; Wed, 30 Aug 2006 23:32:25 -0700
Message-ID: <44F68278.5060903@davidb.org>
Date: Wed, 30 Aug 2006 23:32:24 -0700
From: David Brown <caml-list2@davidb.org>
User-Agent: Thunderbird 1.5.0.5 (X11/20060801)
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Segfault in caml_oldify_local_roots.
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 44F6827E.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; segfault:01 oldify:01 ocaml-:01 camlzip:01 xavier's:01 lwp:01 oldify:01 gdb:01 gdb:01 heap:01 alloc:01 alloc:01 interprete:01 interp:01 argv:01 

Just wondering if anyone has any ideas on how I might debug this.  The
problem happens with ocaml-3.09.2, and doesn't with 3.08.3.  The program
uses camlzip as well as the sha1 binding pulled out of Xavier's cryptokit.

  Program received signal SIGSEGV, Segmentation fault.
  [Switching to Thread -1210538320 (LWP 24659)]
  0x08059c60 in caml_oldify_local_roots () at roots.c:52
  52              caml_oldify_one (*sp, sp);
  (gdb) p sp
  $1 = (value *) 0x1
  (gdb) bt
  #0  0x08059c60 in caml_oldify_local_roots () at roots.c:52
  #1  0x080729f9 in caml_empty_minor_heap () at minor_gc.c:189
  #2  0x08072b00 in caml_minor_collection () at minor_gc.c:222
  #3  0x08059890 in caml_alloc_string (len=10) at alloc.c:77
  #4  0x0805df53 in caml_create_string (len=21) at str.c:50
  #5  0x0806e802 in caml_interprete (prog=0x80aa520, prog_size=125072)
      at interp.c:863
  #6  0x0807064b in caml_main (argv=0xbfb95954) at startup.c:414
  #7  0x0805882f in main (argc=3, argv=0xbfb95954) at main.c:35

I don't see any obvious problems in either binding and was wondering if
anyone has seen anything like this?

Thanks,
David Brown

