Return-Path: <Guillaume.Rousse@inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 1CFADBB84
	for <caml-list@yquem.inria.fr>; Wed,  2 Aug 2006 14:46:54 +0200 (CEST)
Received: from [128.93.8.195] (alceste.inria.fr [128.93.8.195])
	by nez-perce.inria.fr (8.13.6/8.13.6) with ESMTP id k72CkrhO014990
	for <caml-list@yquem.inria.fr>; Wed, 2 Aug 2006 14:46:53 +0200
Message-ID: <44D09EBD.9010605@inria.fr>
Date: Wed, 02 Aug 2006 14:46:53 +0200
From: Guillaume Rousse <Guillaume.Rousse@inria.fr>
User-Agent: Thunderbird 1.5.0.4 (X11/20060618)
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] ocaml support in autotools
References: <44CE2C74.4070607@inria.fr>	<20060801181500.fcc23a70.mle+ocaml@mega-nerd.com> <054b459f8307f928df4660099b19d65f@vistabella.de>
In-Reply-To: <054b459f8307f928df4660099b19d65f@vistabella.de>
X-Enigmail-Version: 0.94.0.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 44D09EBD.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; guillaume:01 guillaume:01 ocaml:01 lindig:01 ocaml:01 autoconf:01 autoconf:01 ocamlburg:01 librairies:01 flags:01 voluceau:01 rocquencourt:01 2006,:98 wrote:01 wrote:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

Christian Lindig wrote:
> 
> On Aug 1, 2006, at 10:15 AM, Erik de Castro Lopo wrote:
>> I'd like to have ocaml support in autotools (autoconf + automake),
> 
> Having a ./configure is very convenient for developers and users alike.
> Hoever, it does not have to be generated from Autoconf. The OCaml
> distribution uses manually written shell scripts, I am using a Perl
> script (since Perl is basically always available). You can take a look
> here:
> 
>     https://trac.vistabella.de/ocamlburg/browser/trunk/configure
> 
> I found it much easier to implement the checks that I need in my own
> little Perl script rather than relying on Autotools.
You're perfectly right, after all only the result really matters from a
user point of view.

However, from my own experience, people attempting to implement by
themselves a build system, instead of using/contributing to an existing
one (autotools is the not the only one) generally only consider their
own constraints, or the one they are aware of, and generaly fails in
specific scenarios, most notably packaging (properly tagged dynamic
librairies, parallel build, cross-compilation, specific optimisation
flags, fake root installation, etc...). Your own private wheel may be
more convenient for you, but it is generally less robust than one
routinely used by hundreds of people.

Of course, this is recurrente debate :)
-- 
Guillaume Rousse
Projet Estime, INRIA
Domaine de Voluceau
Rocquencourt - B.P. 105
78153 Le Chesnay Cedex - France

