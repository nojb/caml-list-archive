Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 497B8BB83
	for <caml-list@yquem.inria.fr>; Wed, 16 Aug 2006 06:33:09 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k7G4X8qO000553
	for <caml-list@yquem.inria.fr>; Wed, 16 Aug 2006 06:33:08 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id GAA14805 for <caml-list@pauillac.inria.fr>; Wed, 16 Aug 2006 06:33:06 +0200 (MET DST)
Received: from mz2.forethought.net (mzpi4.forethought.net [216.241.36.13])
	by nez-perce.inria.fr (8.13.6/8.13.6) with ESMTP id k7G4X0Bv014246
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@inria.fr>; Wed, 16 Aug 2006 06:33:05 +0200
Received: from [216.241.35.41] (helo=[10.0.0.2])
	by mz2.forethought.net with esmtp (Exim 4.51)
	id 1GDD5K-00043d-Oy
	for caml-list@inria.fr; Tue, 15 Aug 2006 22:32:54 -0600
Message-ID: <44E2A007.5070701@gushee.net>
Date: Tue, 15 Aug 2006 22:33:11 -0600
From: Matt Gushee <matt@gushee.net>
User-Agent: Thunderbird 1.5.0.5 (X11/20060729)
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: [Caml-list] Weak hashtables & aggressive caching
References: <44E08F95.2070105@gushee.net>	<20060815.062335.55488138.garrigue@math.nagoya-u.ac.jp>	<44E10783.5000605@gushee.net> <20060816.095449.21360713.garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <20060816.095449.21360713.garrigue@math.nagoya-u.ac.jp>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 44E2A004.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 44E29FFC.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; hashtables:01 caching:01 allocations:01 lablgtk:01 invokes:01 garbage:01 garbage:01 wrote:01 caml-list:01 data:02 structures:02 external:02 garrigue:03 jacques:03 notion:04 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

Jacques Garrigue wrote:

 >>> means that the memory set should not increase. But with external data
 >>> structures like pixbufs, the GC is called in a pre-programmed way,
 >>> currently at least after every 10 pixbuf allocations.
 >> You mean that LablGTK directly invokes the garbage collector after 
10 images. That's not much (unless, of course, they are big images). 
Sounds like it's a lot of trouble for a small benefit.
 >
 > Again, the trouble is that there is only one allocation function for
 > pixbufs, and it doesn't look at their size. And it isn't aware of how
 > much memory is available either. So the choice was to be extremely
 > conservative.

I'm sorry. I meant that my notion of preloading images would be a lot of 
trouble for a small benefit. I don't have sufficient expertise to judge 
your garbage collection strategy.

Anyway, thanks for the explanation.

-- 
Matt Gushee
: Bantam - lightweight file manager : matt.gushee.net/software/bantam/ :
: RASCL's A Simple Configuration Language :     matt.gushee.net/rascl/ :

