Return-Path: <mle+ocaml@mega-nerd.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 98D25BB84
	for <caml-list@yquem.inria.fr>; Thu,  3 Aug 2006 23:10:34 +0200 (CEST)
Received: from smtp.syd.people.net.au (smtp.syd.people.net.au [218.214.225.98])
	by concorde.inria.fr (8.13.6/8.13.6) with SMTP id k73LAVdN001736
	for <caml-list@yquem.inria.fr>; Thu, 3 Aug 2006 23:10:33 +0200
Received: (qmail 30540 invoked from network); 3 Aug 2006 21:10:28 -0000
Received: from unknown (HELO coltrane.mega-nerd.net) (218.214.64.136)
  by smtp.syd.people.net.au with SMTP; 3 Aug 2006 21:10:28 -0000
Received: from coltrane (coltrane [192.168.1.101])
	by coltrane.mega-nerd.net (Postfix) with SMTP id 0BB877B67
	for <caml-list@yquem.inria.fr>; Fri,  4 Aug 2006 07:10:25 +1000 (EST)
Date: Fri, 4 Aug 2006 07:10:25 +1000
From: Erik de Castro Lopo <mle+ocaml@mega-nerd.com>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] ocaml support in autotools
Message-Id: <20060804071025.994aa31e.mle+ocaml@mega-nerd.com>
In-Reply-To: <44D1F265.4040401@inria.fr>
References: <44CE2C74.4070607@inria.fr>
	<44CE6483.9070205@tepkom.ru>
	<44D1F265.4040401@inria.fr>
Organization: Erik Conspiracy Secret Labs
X-Mailer: Sylpheed version 2.2.6 (GTK+ 2.8.18; i486-pc-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 44D26647.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 guillaume:01 ocamlc:01 camlp:01 ocamlc:01 ocamlopt:01 compilation:01 compilation:01 libtool:01 bytecode:01 wrote:01 caml-list:01 usable:01 macros:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

Guillaume Rousse wrote:

> So my current opinion is:
> - have AC_PROG_OCAML fails if ocamlc is not found
> - have AC_PROG_CAMLP4 fails if ocamlp4 is not found
> - have all other macros never fail
> 
> Second, what to do with optimised versions ? It is desirable for the
> user or the developer to be able to select between optimised and
> non-optimised version of a given tool ?
> 
> If not, having a single variable for each tool, silently defined to the
> optimised version if available and usable, would be the best option.
> OCAMLC would then correspond to ocamlc.opt or ocamlc

I thing you should have separate AC_PROG_OCAMLC and AC_PROG_OCAMLOPT
with separate variables.
 
> Third, I'd like some standard macro to allow the user to select if he
> wants bytcode compilation, native compilation, or both, the same as you
> have when using libtool for producing either static or dynamic
> libraries. Does it makes senses to add those switches to AC_PROG_OCAML,
> and to define additional variables, such as OCAML_WANT_BYTECODE and
> OCAML_WANT_NATIVE ?

Works for me.

Erik
-- 
+-----------------------------------------------------------+
  Erik de Castro Lopo
+-----------------------------------------------------------+
I have found that good programmers either do not make the kind
of mistakes that Ada can prevent, or insert enough checks that
they catch those mistakes about as efficiently as an Ada
environment can. At that point, the use of Ada gives no further
productivity advantage.

