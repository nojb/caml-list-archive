Return-Path: <jun.furuse@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 453048179A
	for <caml-list@sympa.inria.fr>; Mon,  8 Jul 2013 17:42:45 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  jun.furuse@gmail.com) identity=pra; client-ip=74.125.82.170;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jun.furuse@gmail.com";
  x-sender="jun.furuse@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  jun.furuse@gmail.com designates 74.125.82.170 as permitted
  sender) identity=mailfrom; client-ip=74.125.82.170;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jun.furuse@gmail.com";
  x-sender="jun.furuse@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-we0-f170.google.com) identity=helo;
  client-ip=74.125.82.170;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jun.furuse@gmail.com";
  x-sender="postmaster@mail-we0-f170.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AukBAGPd2lFKfVKqjWdsb2JhbABagztNgwirdIk3iDGBCggWDgEBAQEHCwsJEgYkgiMBAQQBIwQZARsLEgEDAQsGBQsDCioCAiEBAREBBQEcBhOHfAEDCQYMm1WLfk+Cf4QcChknDViHcwEFDIx0gSOBRAQHglSBHAOJI4xJgWeBKYp6g0AWKYRELw
X-IPAS-Result: AukBAGPd2lFKfVKqjWdsb2JhbABagztNgwirdIk3iDGBCggWDgEBAQEHCwsJEgYkgiMBAQQBIwQZARsLEgEDAQsGBQsDCioCAiEBAREBBQEcBhOHfAEDCQYMm1WLfk+Cf4QcChknDViHcwEFDIx0gSOBRAQHglSBHAOJI4xJgWeBKYp6g0AWKYRELw
X-IronPort-AV: E=Sophos;i="4.87,1020,1363129200"; 
   d="scan'208";a="25041190"
Received: from mail-we0-f170.google.com ([74.125.82.170])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 08 Jul 2013 17:42:39 +0200
Received: by mail-we0-f170.google.com with SMTP id w57so3881589wes.1
        for <caml-list@inria.fr>; Mon, 08 Jul 2013 08:42:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=9+RFgt9LkK2phuA656E+RKgPkGVNvvmkJnk9DrB/WAE=;
        b=D8J3Vk86YGG/IiLG9OQhl2Ub3ACL68NgRz+BHsFyDOUyBpmVZxVLI3F8OcHkDsCg45
         fyjUMOvtaPSsnU/dY0VAHC5zN6mvSPQ5jMjpTYL6g41am0QSr5g0PzP1zom6gggyEkHv
         68f5FyFxZsDEHzW5l+KfL+HnkvYY4PXtTqrKzGI+DtsRC9pMTKdVN+QaBNsmsw7b2H0j
         X+jccbxQAH3OpjyvPH7lYBmmyRsFgvQJzE7rcFmVPtZST/kUD6i4dmO7SEt/cCLHDf10
         PabdotOjNVIS0W96C476C9wBcy2DggZPltGxuAJvirBIR95pK/gnh4hQe6pKosVNKhKz
         URfA==
MIME-Version: 1.0
X-Received: by 10.194.78.110 with SMTP id a14mr12625582wjx.84.1373298159396;
 Mon, 08 Jul 2013 08:42:39 -0700 (PDT)
Received: by 10.194.136.140 with HTTP; Mon, 8 Jul 2013 08:42:39 -0700 (PDT)
In-Reply-To: <CACLX4jQYGnKJc5UFDfu_STfw5DaM6LYFdq2sW2T31ZRxdRd0+Q@mail.gmail.com>
References: <CAAoLEWs9q6TSgeSm8qyp9Wa0tKVXDvwg0Ke3mp5kyDtaMcLUZg@mail.gmail.com>
	<CACLX4jQYGnKJc5UFDfu_STfw5DaM6LYFdq2sW2T31ZRxdRd0+Q@mail.gmail.com>
Date: Mon, 8 Jul 2013 23:42:39 +0800
Message-ID: <CAAoLEWvOC8brxFBG2XiU_AOzW0M2eON=A6XxGvV2nvvo6eAEGA@mail.gmail.com>
From: Jun Furuse <jun.furuse@gmail.com>
To: Yaron Minsky <yminsky@janestreet.com>
Cc: caml-list <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=047d7bfcf01ef62f8c04e101e474
Subject: Re: [Caml-list] [ANN] OCamlOScope: a new OCaml API search


--047d7bfcf01ef62f8c04e101e474
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Hi Yaron,

I have just updated it so that it expands manifest types. It is a dirty
hack but "split : string -> char -> string list" lists up
Core.Std.String.Escaping.split.

There are still lots of things to do before it becomes as powerful as
Hoogle is, but so far, I am working on its speed and size rather than
search quality.

Jun


On Fri, Jul 5, 2013 at 11:25 AM, Yaron Minsky <yminsky@janestreet.com>wrote:

> Neat!
>
> I played with it for a bit, and the main issue it saw with it is the
> trickiness around type names for things like string.  For example, to find
> core or batteries' string split function, you need to search for
>
> t -> char -> t list
>
> Rather than
>
> string -> char -> string list
>
> Which finds ocplib's equivalent, and the Core.Std.String.Escaping version
> as well.
>
> Fill on unification doesn't seem ideal, but I wonder if some ability to
> recognize equivalent type names can be done without full-on search time
> unification.
> On Jul 5, 2013 5:12 AM, "Jun Furuse" <jun.furuse@gmail.com> wrote:
>
>> Hi list,
>>
>> I have launched a new OCaml API search, OCaml=E2=97=8EScope at
>> http://ocamloscope.herokuapp.com .
>>
>> OCaml=E2=97=8EScope is a type directed library search, derived work from=
 OCaml
>> API Search by Mizuno and its ancestor OCamlBrowser by Garrigue. It is al=
so
>> inspired from Hoogle, the same API search engine for Haskell by MItchell,
>> which I regularly use in my Haskell :-) job.
>>
>> * Fast and Portable. It loads everything in memory, unlike OCaml API
>> Search and OCamlBrowser which load compiled interface files (*.cmi)
>> dynamically. The data file is extracted from compiled files but
>> self-contained, so the search engine does not require to compile the
>> libraries locally.
>> * No use of unification but edit distance of types like Hoogle.
>> Unification does not provide good results in type directed search, and is
>> costy.
>> * OCamlFind and OPAM friendly. OCaml=E2=97=8EScope knows which items are=
 from
>> which OCamlFind and OPAM packages.
>> * OCamlDoc: it also extracts OCamlDoc comments, if possible.
>> * Small: it can even run as a heroku app. Currently it carries 245k
>> entries from 76 OCamlFind packages including Core and Batteries, but the
>> data file (as a marshalled OCaml value) is still 20Mb.
>>
>> There are lots of todos but I think the search results look well sane so
>> far. If you find something strange please drop by
>> https://bitbucket.org/camlspotter/ocamloscope-server/issues?status=3Dnew=
&status=3Dopen and
>> leave some comments. Thanks!
>>
>> Jun Furuse
>>
>>

--047d7bfcf01ef62f8c04e101e474
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi Yaron,<div><br></div><div>I have just updated it so tha=
t it expands manifest types. It is a dirty hack but &quot;split : string -&=
gt; char -&gt; string list&quot; lists up Core.Std.String.Escaping.split.</=
div>
<div><br></div><div>There are still lots of things to do before it becomes =
as powerful as Hoogle is, but so far, I am working on its speed and size ra=
ther than search quality.</div><div><br></div><div>Jun</div></div><div clas=
s=3D"gmail_extra">
<br><br><div class=3D"gmail_quote">On Fri, Jul 5, 2013 at 11:25 AM, Yaron M=
insky <span dir=3D"ltr">&lt;<a href=3D"mailto:yminsky@janestreet.com" targe=
t=3D"_blank">yminsky@janestreet.com</a>&gt;</span> wrote:<br><blockquote cl=
ass=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;p=
adding-left:1ex">
<p dir=3D"ltr">Neat!</p>
<p dir=3D"ltr">I played with it for a bit, and the main issue it saw with i=
t is the trickiness around type names for things like string.=C2=A0 For exa=
mple, to find core or batteries&#39; string split function, you need to sea=
rch for</p>


<p dir=3D"ltr">t -&gt; char -&gt; t list</p>
<p dir=3D"ltr">Rather than</p>
<p dir=3D"ltr">string -&gt; char -&gt; string list</p>
<p dir=3D"ltr">Which finds ocplib&#39;s equivalent, and the Core.Std.String=
.Escaping version as well.</p>
<p dir=3D"ltr">Fill on unification doesn&#39;t seem ideal, but I wonder if =
some ability to recognize equivalent type names can be done without full-on=
 search time unification.</p><div class=3D"HOEnZb"><div class=3D"h5">
<div class=3D"gmail_quote">On Jul 5, 2013 5:12 AM, &quot;Jun Furuse&quot; &=
lt;<a href=3D"mailto:jun.furuse@gmail.com" target=3D"_blank">jun.furuse@gma=
il.com</a>&gt; wrote:<br type=3D"attribution"><blockquote class=3D"gmail_qu=
ote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex=
">

<div dir=3D"ltr">Hi list,<div><br></div><div>I have launched a new OCaml AP=
I search, OCaml=E2=97=8EScope at <a href=3D"http://ocamloscope.herokuapp.co=
m" target=3D"_blank">http://ocamloscope.herokuapp.com</a> .</div><div><br><=
/div><div>

OCaml=E2=97=8EScope is a type directed library search, derived work from OC=
aml API Search by Mizuno and its ancestor OCamlBrowser by Garrigue. It is a=
lso inspired from Hoogle, the same API search engine for Haskell by MItchel=
l, which I regularly use in my Haskell :-) job.</div>


<div><br></div><div>* Fast and Portable. It loads everything in memory, unl=
ike OCaml API Search and OCamlBrowser which load compiled interface files (=
*.cmi) dynamically. The data file is extracted from compiled files but self=
-contained, so the search engine does not require to compile the libraries =
locally.</div>


<div>* No use of unification but edit distance of types like Hoogle. Unific=
ation does not provide good results in type directed search, and is costy.<=
br></div><div>* OCamlFind and OPAM friendly. OCaml=E2=97=8EScope knows whic=
h items are from which OCamlFind and OPAM packages.</div>


<div>* OCamlDoc: it also extracts OCamlDoc comments, if possible.</div><div=
>* Small: it can even run as a heroku app. Currently it carries 245k entrie=
s from 76 OCamlFind packages including Core and Batteries, but the data fil=
e (as a marshalled OCaml value) is still 20Mb.</div>


<div><br></div><div>There are lots of todos but I think the search results =
look well sane so far. If you find something strange please drop by=C2=A0<a=
 href=3D"https://bitbucket.org/camlspotter/ocamloscope-server/issues?status=
=3Dnew&amp;status=3Dopen" target=3D"_blank">https://bitbucket.org/camlspott=
er/ocamloscope-server/issues?status=3Dnew&amp;status=3Dopen</a>=C2=A0and le=
ave some comments. Thanks!</div>


<div><br></div><div>Jun Furuse<br></div><div><br></div></div>
</blockquote></div>
</div></div></blockquote></div><br></div>

--047d7bfcf01ef62f8c04e101e474--
