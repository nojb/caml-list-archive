Return-Path: <edwin+ml-ocaml@etorok.net>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id A9B367ED25
	for <caml-list@sympa.inria.fr>; Fri, 19 Jul 2013 16:21:46 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  edwin+ml-ocaml@etorok.net) identity=pra;
  client-ip=176.9.138.55;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="edwin+ml-ocaml@etorok.net";
  x-sender="edwin+ml-ocaml@etorok.net";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  edwin+ml-ocaml@etorok.net designates 176.9.138.55 as
  permitted sender) identity=mailfrom; client-ip=176.9.138.55;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="edwin+ml-ocaml@etorok.net";
  x-sender="edwin+ml-ocaml@etorok.net";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  postmaster@mail.etorok.net designates 176.9.138.55 as
  permitted sender) identity=helo; client-ip=176.9.138.55;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="edwin+ml-ocaml@etorok.net";
  x-sender="postmaster@mail.etorok.net";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgIFAGtK6VGwCYo3/2dsb2JhbABbgwY1wRaBDxZ0giQBAQVAAQE2Ag8LGAkWDwkDAgECAUUTCAKIEAikXYRCAQWNcAaQFhaDaIkljjuBKYR6iyqBWYE8
X-IPAS-Result: AgIFAGtK6VGwCYo3/2dsb2JhbABbgwY1wRaBDxZ0giQBAQVAAQE2Ag8LGAkWDwkDAgECAUUTCAKIEAikXYRCAQWNcAaQFhaDaIkljjuBKYR6iyqBWYE8
X-IronPort-AV: E=Sophos;i="4.89,702,1367964000"; 
   d="scan'208";a="26641566"
Received: from mail.etorok.net ([176.9.138.55])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 19 Jul 2013 16:21:45 +0200
Received: from [172.30.42.2] (unknown [79.114.32.194])
	(using TLSv1 with cipher ECDHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mail.etorok.net (Postfix) with ESMTPSA id 1EA4B46D7
	for <caml-list@inria.fr>; Fri, 19 Jul 2013 16:21:44 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=etorok.net;
	s=mailout; t=1374243704;
	bh=qh6JZ6ZWcuRHt8tZQiiemOPthWtQkvcgdOuuCaBD/Bw=; l=1380;
	h=Date:From:To:References:In-Reply-To:From;
	b=Fof3KRbLqGKIstqHq8C9T65/V9NyY2t9ytcCncCmAOnShDcIuvCLkNNeW/wa8wKbP
	 WPHQehjQWL5kCvSbeIAhBizoKnLu0D5vJVXuDC0Gm72UJD8vf/OByV+CQwmygXlnqb
	 BBFfxr3wzBpgkhcm61SSgJtJEONJNHp3RVqZo5Sg=
Message-ID: <51E94B76.6070207@etorok.net>
Date: Fri, 19 Jul 2013 17:21:42 +0300
From: =?ISO-8859-1?Q?T=F6r=F6k_Edwin?= <edwin+ml-ocaml@etorok.net>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:17.0) Gecko/20130630 Icedove/17.0.7
MIME-Version: 1.0
To: caml-list@inria.fr
References: <51E9398A.9010402@inria.fr>
In-Reply-To: <51E9398A.9010402@inria.fr>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: clamav-milter 0.97.8 at mail
X-Virus-Status: Clean
Subject: Re: [Caml-list] Request for feedback: Procord, a library to
 delegate tasks to other processes

On 07/19/2013 04:05 PM, Romain Bardou wrote:
> Hello,
> 
> I plan on writing yet another library to help with concurrency in OCaml.
> The motivations for this library, and the interface I have in mind, are
> available here:
> 
> http://romain.bardou.fr/procord/api/Procord.html
> 
> Before actually implementing the library, I would be very happy to
> receive feedback. I am interested to know, among others:
> - whether I miss important information which would make the very
> existence of this library stupid (such as, it already exists);
> - whether I forgot some important use case;

Processing streams of data in parallel without having to read all the data in memory first.
You could sort of do this with your current interface but only on Unix (i.e. mkfifo and pass filename).
Don't know what'd work on Windows, perhaps creating a (named) pipe, and sending the file descriptor to a newly spawned child?

Also it'd be nice to have something similar to the reduce in map-reduce.

> - whether the names I chose have better ubiquitous equivalents;
> - whether you believe I should choose another interface entirely, for
> instance, if you don't like functors.

I'd prefer if there was also a Lwt-like monadic interface, but it is not absolutely required (it could probably be done on top of your already existing interface).

Best regards,
--Edwin
