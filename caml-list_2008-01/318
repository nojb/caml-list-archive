Return-Path: <pedagand@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=AWL,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 4148FBC6B
	for <caml-list@yquem.inria.fr>; Thu, 24 Jan 2008 21:53:45 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAFCJmEfRVYC9kmdsb2JhbACQJAEBAQEHBAQJChaWYId4
X-IronPort-AV: E=Sophos;i="4.25,246,1199660400"; 
   d="scan'208";a="21764941"
Received: from fk-out-0910.google.com ([209.85.128.189])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 24 Jan 2008 21:53:45 +0100
Received: by fk-out-0910.google.com with SMTP id b27so426973fka.11
        for <caml-list@yquem.inria.fr>; Thu, 24 Jan 2008 12:53:44 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        bh=djrNczuQzjP4aazafjkLsnSyXZe0YRiTLU9AcfeDgkQ=;
        b=cEhrRuLlON5CL8QcmDu06xS/YPH9AqXvPAC+ps3vI2tqCIQYDZvqhmFqZnrYa0Z405IaUnP7Y9CenPJrUBNrB0AXeRRQgEuNbfwYR0kv5S0XeDQUI7JTVWQmuuULmJOYQM0x1kdzYmANs0UoYFwaWhKy8gdxtCO5dvspuCOQr2c=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=vZbWxbD6U7Mu4AQBm1Gcb9By+4tGMFRQwiK4YAeBTlryupdLkquLd1swUIM1HAYD6TLQVnCmg3VGr4Mh0sG7MilfKXkzq0Ki/xcQ45xV8P4OKVB6DAeVGxM3yiuD+4yN9u/Oh8X5I/ECEtIeLRzHwNQ0NCZqiNl4+mTJRDez1yQ=
Received: by 10.82.148.7 with SMTP id v7mr2099085bud.10.1201208024281;
        Thu, 24 Jan 2008 12:53:44 -0800 (PST)
Received: by 10.82.163.20 with HTTP; Thu, 24 Jan 2008 12:53:44 -0800 (PST)
Message-ID: <6cb897b30801241253h7c7eb4b9y599eab1d0c0aeaf9@mail.gmail.com>
Date: Thu, 24 Jan 2008 21:53:44 +0100
From: "Pierre-Evariste Dagand" <pedagand@gmail.com>
To: caml-list@yquem.inria.fr
Subject: About Purity
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
X-Spam: no; 0.00; advices:01 ocaml:01 ocaml:01 fanatics:01 kloc:01 subset:01 haskell:01 purely:02 purely:02 functional:02 functional:02 programming:03 let:03 mother:95 indeed:07 

Hi list,

I'm looking for advices, especially from Computer Scientists using
OCaml as a language for their research works.

Here is my situation: I have worked on a system that relies on a
purely functional structure, let say a monad.
At the end, I have come up with a paper explaining how good and great
my work is ;-)
And finally, in order to get some feedback, my paper has been reviewed
by a Haskeller.

Here starts the issues :-)

Using OCaml in combination with a quite strange monad scared the
Haskeller. Indeed, as OCaml does not ensure referential transparency,
there is no formal proof that I'm pure and that what I have used is
truly a monad. And, no way, I did not succeed in convincing him that
my code is pure.

Nonetheless, I know that there are a lot of works in functional
programming that are carried out in OCaml.

So, my question is :

How do you convince these fanatics ;-) that you are pure ?


Obviously, I could show my code but it's about 2kloc that must be pure.

I am considering to re-write my system or at least the purely
functional subset in Haskell. But OCaml is like a mother tongue to me
so that's quite hard (sentimentally speaking) to leave it without
invoking the wisdom of its gurus.

Best regards,

-- 
Pierre-Evariste DAGAND

