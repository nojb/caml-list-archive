Return-Path: <tmp123@menta.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=2.0 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE,
	DNS_FROM_RFC_POST,NO_REAL_NAME autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id D9A4DBC6B
	for <caml-list@yquem.inria.fr>; Sun, 20 Jan 2008 18:56:41 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAALIak0c+KuYMfGdsb2JhbACPIHYBAQkEBgcICgkHmmg
X-IronPort-AV: E=Sophos;i="4.25,224,1199660400"; 
   d="scan'208";a="8088547"
Received: from smtp.ono.com (HELO resmaa03.ono.com) ([62.42.230.12])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 20 Jan 2008 18:56:40 +0100
Received: from [192.168.1.33] (81.38.184.219) by resmaa03.ono.com (7.3.118.8) (authenticated as tmp123@menta.net)
        id 4762CD940111438F for caml-list@yquem.inria.fr; Sun, 20 Jan 2008 18:56:32 +0100
Message-ID: <47938B4B.60902@menta.net>
Date: Sun, 20 Jan 2008 18:56:27 +0100
From: tmp123@menta.net
User-Agent: Mozilla Thunderbird 1.0 (X11/20041206)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: ocamldoc, camlp4r and variant
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; ocamldoc:01 camlp:01 ocamldoc:01 -pp:01 camlp:01 -html:01 foo:01 foo:01 constructor:01 constructor:01 variant:02 blank:97 module:03 tmp:05 joined:93 

Hello,

Please, when the following small source is passed to ocamldoc (ocamldoc 
-pp camlp4r -html foo.ml), the comment "another type" is not asigned to 
type "bar", but joined to the comment of B constructor in type "foo".

I've tried lots of variations, adding blank lines, empty comments, end 
comments, ... without success.

Please, knows someone what is wrong on it?

Thanks a lot.

foo.ml:
=======
(** a module *)

(** a type *)
type foo =
[ A (** a constructor *)
| B (** another constructor *)
];

(** another type *)
type bar =
[ C (** a constructor *)
| D (** another constructor *)
];

