Return-Path: <oliver@first.in-berlin.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 66C72BC6C
	for <caml-list@yquem.inria.fr>; Thu, 17 Jan 2008 22:10:52 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAALpSj0fAXQInh2dsb2JhbACQFwEBAQgKKZ0O
X-IronPort-AV: E=Sophos;i="4.24,304,1196636400"; 
   d="scan'208";a="8009201"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 17 Jan 2008 22:10:52 +0100
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id m0HLApAm018497
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Thu, 17 Jan 2008 22:10:51 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAG5Tj0fAbSoIh2dsb2JhbACQFwEBAQgKKZ0R
X-IronPort-AV: E=Sophos;i="4.24,304,1196636400"; 
   d="scan'208";a="21440772"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 17 Jan 2008 22:10:51 +0100
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: <caml-list@inria.fr>
Received: from einhorn.in-berlin.de (localhost [127.0.0.1])
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id m0HLAokd003636
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <caml-list@inria.fr>; Thu, 17 Jan 2008 22:10:50 +0100
Received: (from www-data@localhost)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Submit) id m0HLAoIM003632
	for caml-list@inria.fr; Thu, 17 Jan 2008 22:10:50 +0100
X-Authentication-Warning: einhorn.in-berlin.de: www-data set sender to oliver@first.in-berlin.de using -f
Received: from dslb-088-073-099-097.pools.arcor-ip.net (dslb-088-073-099-097.pools.arcor-ip.net [88.73.99.97]) 
	by webmail.in-berlin.de (IMP) with HTTP 
	for <first@localhost>; Thu, 17 Jan 2008 22:10:50 +0100
Message-ID: <1200604250.478fc45a531fb@webmail.in-berlin.de>
Date: Thu, 17 Jan 2008 22:10:50 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@inria.fr
Subject: Caml-Exceptions from C-Code and handlingh of Caml-allocations
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
User-Agent: Internet Messaging Program (IMP) 3.2.6
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
X-Miltered: at concorde with ID 478FC45B.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; bandel:01 in-berlin:01 alloc:01 oliver:01 oliver:01 caml:02 caml:02 allocated:02 deallocate:03 tia:08 i'm:09 stuff:09 stuff:09 but:14 but:14 

Hello,

when throwing Caml-exceptions from C-Code,
it's clear to me to deallocate C-allocated stuff by myself,
as I would do in pure C applications also.

But will throwing Caml-exceptions from C automatically free
the CAML<something> / caml_alloc allocated stuff?
(This is what I would expect, but I'm not sure on that.)

TIA,
   Oliver

