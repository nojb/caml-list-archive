Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 759EDBC6B
	for <caml-list@yquem.inria.fr>; Sat, 12 Jan 2008 16:03:30 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ah4FADZliEfUnw7Xi2dsb2JhbACCNI1VAQEBCAQGDxqBFJYC
X-IronPort-AV: E=Sophos;i="4.24,275,1196636400"; 
   d="scan'208";a="6573021"
Received: from fhw-relay07.plus.net ([212.159.14.215])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 12 Jan 2008 16:03:30 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by fhw-relay07.plus.net with esmtp (Exim) id 1JDhtR-0005cH-Ew
	for caml-list@yquem.inria.fr; Sat, 12 Jan 2008 15:03:29 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Reimplementing OCaml on LLVM
Date: Sat, 12 Jan 2008 14:55:59 +0000
User-Agent: KMail/1.9.7
MIME-Version: 1.0
Content-Type: text/plain;
  charset="us-ascii"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200801121455.59613.jon@ffconsultancy.com>
X-Spam: no; 0.00; ocaml:01 ocaml:01 compiler:01 ocaml's:01 polymorphism:01 ffi:01 unboxing:01 frog:98 shortcomings:05 implementing:06 examples:07 awesome:92 written:07 approach:08 fun:08 


Many people including myself have shown considerable interest in using the 
LLVM project from OCaml and, in particular, in implementing an entire FPL 
using this approach.

I'm just wondering if any of the OCaml team would be interested in doing or 
helping with a port themselves? I doubt it could count as "work" but I think 
there are plenty of opportunities for fun tinkering here. :-)

Even if the result were only a toy implementation of a language I am sure 
examples would help non-experts enormously in getting to grips with how such 
a compiler might be written.

This also presents an awesome opportunity to address some of the shortcomings 
of OCaml's current implementation, such as polymorphism, FFI, unboxing and so 
forth and to test alternative approaches.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

