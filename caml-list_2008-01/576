Return-Path: <watersofmemory@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.5 required=5.0 tests=AWL,HTML_10_20,HTML_MESSAGE,
	SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id B46B8BC6C
	for <caml-list@yquem.inria.fr>; Thu, 31 Jan 2008 16:57:25 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAANx+oUdIDtyfk2dsb2JhbACCOTeNMgEBAQEHBAQLCBaXVYFvgXQ
X-IronPort-AV: E=Sophos;i="4.25,285,1199660400"; 
   d="scan'208";a="22023180"
Received: from fg-out-1718.google.com ([72.14.220.159])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 31 Jan 2008 16:57:25 +0100
Received: by fg-out-1718.google.com with SMTP id l27so919113fgb.43
        for <caml-list@yquem.inria.fr>; Thu, 31 Jan 2008 07:57:24 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:sender:to:subject:mime-version:content-type:x-google-sender-auth;
        bh=ZVwzk8TRLsZ26/Uyv2TrOzH19q+WzTqY7OtYPbUPsBU=;
        b=mJWiV528fSl2l0NraF4j//htfPf/RRBHRgUx5DXclbpMfcQu6rCQA/FT4yryQZxIKV7F+MdJYda8phFU/vpvBaKpNW4q+bxfnEAzU9Y4klVmZWhM1YMPjDWfyjUTWTxQLM25i9mLYcwBmT7lvrKDOt8yon7Gz8WJ9Cogx9u4Pk0=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:sender:to:subject:mime-version:content-type:x-google-sender-auth;
        b=l18ZeR9+9ABZn3iiIso+7WB17kVB7T4MxopxSOhZIar2Ju+hfAQ9iWMfAwTiBMgi2VdW9ekrH1075ZVGQX+9F7khvvslI9y2Dezy3XLdMXXTfJoaNM8ll2dpRVLcbugAiJOo4/BppOiLEb/mLF0DeA6zsaEL/iyRtQ1wNfea9ug=
Received: by 10.86.91.12 with SMTP id o12mr2007762fgb.72.1201795044730;
        Thu, 31 Jan 2008 07:57:24 -0800 (PST)
Received: by 10.86.52.20 with HTTP; Thu, 31 Jan 2008 07:57:24 -0800 (PST)
Message-ID: <b256a4c50801310757n4a9b3b48ja8738c0f4dd3a475@mail.gmail.com>
Date: Thu, 31 Jan 2008 10:57:24 -0500
From: "Jonathan Bryant" <jtbryant@valdosta.edu>
Sender: watersofmemory@gmail.com
To: caml-list@yquem.inria.fr
Subject: [OSR] Caml Community Code
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_3230_5175920.1201795044734"
X-Google-Sender-Auth: 5b1d6c436da50031
X-Spam: no; 0.00; ocaml:01 ocaml:01 camlp:01 syntax:01 syntax:01 parser:01 camlp:01 parser:01 functioning:98 cherry:98 functioning:98 cherry:98 threads:01 threads:01 sourceforge:01 

------=_Part_3230_5175920.1201795044734
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

List,

Despite all the great ideas on the [OSR] threads, we seem to be getting
nowhere and talking ourselves to death bickering about implementation
details of code that hasn't even been written yet.  I think the only thing
we can agree on is that tools for use by the community should be written by
the community.  Because of that, we need to start writing them: the best way
to find out what works is to try.

I've created a SourceForge project called Caml Community Code here (
http://sourceforge.net/projects/camlcode) where we can put any code for
community OCaml tools.  The fact that we can't hack the OCaml language
itself (due to French copyright law) seems to have unfortunately caused the
community to not hack together on other tools _for_ the language.  With this
project everyone can hack on the tools we'll (hopefully) end up using every
day, rather than having INRIA or one person try to build something that
satisfies everyone.  If you have code for tools (I know someone at least has
some code for a package manager), please put it in the repository so we can
all see and work on it _as as community_.

Regarding the package manager discussion, what we need is a few functioning
prototypes.  Later we can go back and cherry pick features we like and merge
them down to just two to develop a little more, and finally pick one.  I
also think we should have one CamlP4 grammar with all the community's agreed
upon "standard" syntax extensions (sort of a "new revised" syntax?), a set
of "standard" ocamlbuild plugins, and "standard" interfaces (XML parser,
etc.), all of which can be stored in the project as well.

I was waiting for the project to get approved before sending this out (it
just came through this morning), so I'll go ahead and make a temporary
directory layout.

--Jonathan

------=_Part_3230_5175920.1201795044734
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

List,<br><br>Despite all the great ideas on the [OSR] threads, we seem
to be getting nowhere and talking ourselves to death bickering about
implementation details of code that hasn&#39;t even been written yet.&nbsp; I
think the only thing we can agree on is that tools for use by the
community should be written by the community.&nbsp; Because of that, we need
to start writing them: the best way to find out what works is to try.<br>
<br>I&#39;ve created a SourceForge project called Caml Community Code here (<a href="http://sourceforge.net/projects/camlcode" target="_blank">http://sourceforge.net/projects/camlcode</a>)
where we can put any code for community OCaml tools.&nbsp; The fact that we
can&#39;t hack the OCaml language itself (due to French copyright law)
seems to have unfortunately caused the community to not hack together
on other tools _for_ the language.&nbsp; With this project everyone can hack
on the tools we&#39;ll (hopefully) end up using every day, rather than
having INRIA or one person try to build something that satisfies
everyone.&nbsp; If you have code for tools (I know someone at least has some
code for a package manager), please put it in the repository so we can
all see and work on it _as as community_.<br>
<br>Regarding the package manager discussion, what we need is a few
functioning prototypes.&nbsp; Later we can go back and cherry pick features
we like and merge them down to just two to develop a little more, and
finally pick one.&nbsp; I also think we should have one CamlP4 grammar with
all the community&#39;s agreed upon &quot;standard&quot; syntax extensions (sort of a
&quot;new revised&quot; syntax?), a set of &quot;standard&quot; ocamlbuild plugins, and
&quot;standard&quot; interfaces (XML parser, etc.), all of which can be stored in
the project as well.<br>
<br>I was waiting for the project to get approved before sending this
out (it just came through this morning), so I&#39;ll go ahead and make a
temporary directory layout.<br><font color="#888888"><br>--Jonathan<br><br></font>

------=_Part_3230_5175920.1201795044734--

