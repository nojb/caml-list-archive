Return-Path: <carette@mcmaster.ca>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id A3468BC6C
	for <caml-list@yquem.inria.fr>; Wed, 30 Jan 2008 01:29:03 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAABJUn0fAXQImh2dsb2JhbACQJQEBAQgKKYEUnh4
X-IronPort-AV: E=Sophos;i="4.25,271,1199660400"; 
   d="scan'208";a="6724708"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 30 Jan 2008 01:29:03 +0100
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id m0U0T2ae026625
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Wed, 30 Jan 2008 01:29:03 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAF9Tn0eCcUBTn2dsb2JhbACQJQEBAQEBBgQGCQgYgRSeJw
X-IronPort-AV: E=Sophos;i="4.25,271,1199660400"; 
   d="scan'208";a="21958828"
Received: from sigma957.cis.mcmaster.ca ([130.113.64.83])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 30 Jan 2008 01:29:01 +0100
Received: from Gorash7.UTS.McMaster.CA (Gorash7.UTS.mcmaster.ca [130.113.196.61])
	by sigma957.cis.mcmaster.ca (8.13.7/8.13.7) with ESMTP id m0U0KnWO017666;
	Tue, 29 Jan 2008 19:20:55 -0500 (EST)
Received: from cgpsrv2.cis.mcmaster.ca (univmail.CIS.McMaster.CA [130.113.64.46])
	by Gorash7.UTS.McMaster.CA (8.13.7/8.13.7) with ESMTP id m0U0KIrh001719;
	Tue, 29 Jan 2008 19:20:18 -0500
Received: from [130.113.68.27] (account carette@univmail.cis.mcmaster.ca [130.113.68.27] verified)
  by cgpsrv2.cis.mcmaster.ca (CommuniGate Pro SMTP 4.3.12)
  with ESMTPA id 199595728; Tue, 29 Jan 2008 19:20:19 -0500
Message-ID: <479FC2CB.3000006@mcmaster.ca>
Date: Tue, 29 Jan 2008 19:20:27 -0500
From: Jacques Carette <carette@mcmaster.ca>
Organization: McMaster University
User-Agent: Thunderbird 2.0.0.9 (Windows/20071031)
MIME-Version: 1.0
To: aldor-l@aldor.org,
	felix-language <felix-language@lists.sourceforge.net>,
	Haskell-cafe <haskell-cafe@haskell.org>,
	mapledev <mapledev@maplesoft.com>, metaocaml-users@cs.rice.edu,
	OCaml <caml-list@inria.fr>, om@openmath.org, SEWORLD@cs.colorado.edu,
	types-announce@cis.upenn.edu, calculemus-ig@ags.uni-sb.de,
	frocos@loria.fr, maude-users@peepal.cs.uiuc.edu,
	sigsam-members@listserv.acm.org
Subject: CFP - Programming Languages and Mechanized Mathematics Systems 2008
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-PMX-Version-Mac: 5.4.1.325704, Antispam-Engine: 2.6.0.325393, Antispam-Data: 2008.1.29.160325
X-PerlMx-Spam: Gauge=IIIIIII, Probability=7%, Report='__CP_URI_IN_BODY 0, __CT 0, __CTE 0, __CT_TEXT_PLAIN 0, __HAS_MSGID 0, __MIME_TEXT_ONLY 0, __MIME_VERSION 0, __SANE_MSGID 0, __USER_AGENT 0'
X-Miltered: at discorde with ID 479FC4CE.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; intersection:01 algebra:01 coq:01 semantics:01 untyped:01 coq:01 haskell:01 haskell:01 annotations:01 inference:01 untyped:01 polymorphism:01 genericity:01 entcs:01 entcs:01 


                          FIRST CALL FOR PAPERS
 
                            Second Workshop on
             Programming Languages for Mechanized Mathematics
                              (PLMMS 2008)
 
          http://events.cs.bham.ac.uk/cicm08/workshops/plmms/
 
                        As part of CICM / Calculemus 2008
                     Birmingham, UK, 28-29 July 2008


This workshop is focused on the intersection of programming languages
(PL) and mechanized mathematics systems (MMS). The latter category
subsumes present-day computer algebra systems (CAS), interactive proof
assistants (PA), and automated theorem provers (ATP), all heading
towards fully integrated mechanized mathematical assistants that are
expected to emerge eventually (cf. the objective of Calculemus).

The two subjects of PL and MMS meet in the following topics, which are
of particular interest to this workshop:

  * Dedicated input languages for MMS: covers all aspects of languages
    intended for the user to deploy or extend the system, both
    algorithmic and declarative ones. Typical examples are tactic
    definition languages such as Ltac in Coq, mathematical proof
    languages as in Mizar or Isar, or specialized programming
    languages built into CA systems. Of particular interest are the
    semantics of those languages, especially when current ones are
    untyped.

  * Mathematical modeling languages used for programming: covers the
    relation of logical descriptions vs. algorithmic content. For
    instance the logic of ACL2 extends a version of Lisp, that of Coq
    is close to Haskell, and some portions of HOL are similar to ML
    and Haskell, while Maple tries to do both simultaneously. Such
    mathematical languages offer rich specification capabilities,
    which are rarely available in regular programming languages. How
    can programming benefit from mathematical concepts, without
    limiting mathematics to the computational worldview?

  * Programming languages with mathematical specifications: covers
    advanced "mathematical" concepts in programming languages that
    improve the expressive power of functional specifications, type
    systems, module systems etc. Programming languages with dependent
    types are of particular interest here, as is intentionality vs
    extensionality.

  * Language elements for program verification: covers specific means
    built into a language to facilitate correctness proofs using MMS.
    For example, logical annotations within programs may be turned
    into verification conditions to be solved in a proof assistant
    eventually. How need MMS and PL to be improved to make this work
    conveniently and in a mathematically appealing way?

These issues have a very colorful history. Many PL innovations first
appeared in either CA or proof systems first, before migrating into
more mainstream programming languages. Some examples include type
inference, dependent types, generics, term-rewriting, first-class
types, first-class expressions, first-class modules, code extraction
etc. However, such innovations were never aggressively pursued by
builders of MMS, but often reconstructed by programming language
researchers. This workshop is an opportunity to present the latest
innovations in MMS design that may be relevant to future programming
languages, or conversely novel PL principles that improve upon
implementation and deployment of MMS.

We also want to critically examine what has worked, and what has not.
Why are all the languages of mainstream CA systems untyped? Why are the
(strongly typed) proof assistants so much harder to use than a typical
CAS? What forms of polymorphism exist in mathematics? What forms of
dependent types may be used in mathematical modeling? How can MMS
regain the upper hand on issues of "genericity" and "modularity"? What
are the biggest barriers to using a more mainstream language as a host
language for a CAS or PA/ATP?


Submission
----------

Submission works through EasyChair
http://www.easychair.org/conferences/?conf=plmms2008

Two kinds of papers will be considered:

 * Full research papers may be up to 12 pages long. Authors of
   accepted papers are expected to present their work on the workshop
   in a regular talk.

 * Position papers may be up to 4 pages long. The workshop
   presentation of accepted position papers consists of two parts: a
   stimulating statement of certain issues or challenges by the
   author, followed by a discussion in the plenum.

Papers should use the usual ENTCS style http://www.entcs.org/prelim.html
(11 point version), and will be reviewed by the program
committee. Informal workshop proceedings will be circulated as a
technical report. We also plan post-workshop proceedings of improved
research papers, or position papers that have been completed into full
papers, as a special issue in a journal; papers from both PLMMS 2007
and 2008 will be considered here (details to follow).


Programme Committee
-------------------

   Jacques Carette (Co-Chair) (McMaster University, Canada)
   John Harrison              (Intel Corporation, USA)
   Hugo Herbelin              (INRIA, Ecole polytechnique, France)
   James McKinna              (Radboud University Nijmegen, Netherlands)
   Ulf Norell                 (Chalmers University, Sweden)
   Bill Page
   Christophe Raffalli        (Universite de Savoie, France)
   Josef Urban                (Charles University, Czech Republic)
   Stephen Watt               (ORCCA, University of Western Ontario, Canada)
   Makarius Wenzel (Co-Chair) (Technische Universitaet Muenchen, Germany)
   Freek Wiedijk              (Radboud University Nijmegen, Netherlands)


Important Dates
---------------

  * Submission deadline - 5 May 2008
  * Notification of acceptance - 6 June 2008
  * Final version - 7 July 2008 (approximately)
  * Workshop - 28-29 July 2008

