Return-Path: <nicolas.pouillard@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.1 required=5.0 tests=AWL,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 2BA63BC70
	for <caml-list@yquem.inria.fr>; Wed, 30 Jan 2008 15:07:48 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAB0ToEfAXQInh2dsb2JhbACQJwEBAQgKKZ8v
X-IronPort-AV: E=Sophos;i="4.25,277,1199660400"; 
   d="asc'?scan'208";a="7431447"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 30 Jan 2008 15:07:48 +0100
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id m0UE7gFk031503
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Wed, 30 Jan 2008 15:07:47 +0100
X-IronPort-AV: E=Sophos;i="4.25,277,1199660400"; 
   d="asc'?scan'208";a="21979638"
Received: from peray.inria.fr (HELO ausone.inria.fr) ([128.93.8.98])
  by mail4-relais-sop.national.inria.fr with SMTP; 30 Jan 2008 15:07:47 +0100
Received: by ausone.inria.fr (sSMTP sendmail emulation); Wed, _d Jan 2008 15:06:43 +0100
From: "Nicolas Pouillard" <nicolas.pouillard@gmail.com>
Cc: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Re: [OSR] Ports-like package management system
To: jon <jon@ffconsultancy.com>
References: <479F0664.2070706@exalead.com> <200801301043.55944.jon@ffconsultancy.com> <1201694164-sup-1694@ausone.inria.fr> <200801301325.29265.jon@ffconsultancy.com>
In-Reply-To: <200801301325.29265.jon@ffconsultancy.com>
Date: Wed, 30 Jan 2008 15:06:38 +0100
Message-Id: <1201700234-sup-7930@ausone.inria.fr>
User-Agent: Sup/git
Content-Type: multipart/signed; protocol="application/pgp-signature"; boundary="=-1201702003-281538-27517-3280-19-="; micalg="pgp-sha1"
MIME-Version: 1.0
X-Miltered: at concorde with ID 47A084AE.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; wiki:01 git:98 imho:01 wrote:01 partial:01 partial:01 caml-list:01 conflicts:01 algorithm:01 functional:02 incomplete:03 imply:03 theoretical:03 optimization:03 patches:03 
X-Attachments: cset="UTF-8" type="application/pgp-signature" name="signature.asc" name="signature.asc" 


--=-1201702003-281538-27517-3280-19-=
Content-Type: text/plain; charset=UTF-8

Excerpts from jon's message of Wed Jan 30 14:25:28 +0100 2008:
> On Wednesday 30 January 2008 12:00:01 Nicolas Pouillard wrote:
> > Users  that  consider  darcs  broken and/or unusable are not darcs users,
> > they perhaps  tried  it, that's all.
> 
> So you have not personally experienced performance problems with darcs.

For day-to-day operations... no.

* darcs get URL:
  The  initial "darcs get" can takes some time, because like any other DVCS
  it has to checkout all versions of the project.

  However  having  multiple  branches  of the same project don't imply running
  more  than  one  "darcs  get"  of the upstream URL. One rather clone our our
  local  copy  to  make  another branch. Hard links are used in order to share
  common patches.

  Moreover  darcs  supports  partial  checkout  up  to a checkpoint. Basically
  upstream  makes  checkpoints  when regularly tagging the upstream repo. Then
  if  you  do  a  partial  get,  you only take the last checkpoint and patches
  after  this checkpoint. The problem with partial repository is when you want
  to  access  the  history  before  the  checkpoint,  in  darcs1 you can't. In
  darcs2, it will lazily download missing patches when needed.

  Then  darcs2  have  made  a  lot of progress for improving "darcs get", like
  http pipelining.

* When having a lot of conflicts:
  darcs1  suffer  from  a flawed conflict-resolution algorithm (an exponential
  one). darcs2 handle much better this kind of situations.

* There   is some other cases where darcs can be very slow. However that's not
  when  doing  day-to-day  tasks  but  when  using advanced repository hacking
  things.

> > IMHO  they've  applied  the  "correction  before  optimization"  principle.
> > A principle that we often spread in functional programming community.
> 
> If darcs is unusably slow then its theoretical correctness is irrelevant. 

But  that's  not the case. I use it all the day long and I'm far from being alone
in this case.

> Regardless, its actual correctness is still in question because it has so few 
> users that it is basically untested software.

I  really  doubt  that.  There is an incomplete and certainly outdated list of
projects  using  it  [1].  I also that darcs is far more mature than git or hg
(original announcement in 2003).

Moreover  as  you  know, some programming techniques and languages can help to
gain robustness without huge mass user testing.

[1]: http://wiki.darcs.net/DarcsWiki/ProjectsUsingDarcs

-- 
Nicolas Pouillard aka Ertai

--=-1201702003-281538-27517-3280-19-=
Content-Disposition: attachment; filename="signature.asc"
Content-Type: application/pgp-signature; name="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.6 (Darwin)

iD8DBQFHoIRzj+FCNw9dwLkRAotXAJsEHAs7/Mzi773dzpW+AzSoipsb6wCfUJTe
1vZaODkIitwWUkwiQSFmM/Q=
=7cOt
-----END PGP SIGNATURE-----

--=-1201702003-281538-27517-3280-19-=--

