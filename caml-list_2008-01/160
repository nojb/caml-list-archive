Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 4FC07BC6B
	for <caml-list@yquem.inria.fr>; Sun, 13 Jan 2008 00:57:32 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmYmAGDiiEfUnw7WbGdsb2JhbACCNI1VCwQGEBmWRg
X-IronPort-AV: E=Sophos;i="4.24,276,1196636400"; 
   d="scan'208";a="21167727"
Received: from ptb-relay03.plus.net ([212.159.14.214])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 13 Jan 2008 00:57:31 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay03.plus.net with esmtp (Exim) id 1JDqEF-0002mK-1e
	for caml-list@yquem.inria.fr; Sat, 12 Jan 2008 23:57:31 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Performance questions, -inline, ...
Date: Sat, 12 Jan 2008 23:50:03 +0000
User-Agent: KMail/1.9.7
References: <470169.25970.qm@web54603.mail.re2.yahoo.com>
In-Reply-To: <470169.25970.qm@web54603.mail.re2.yahoo.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200801122350.03502.jon@ffconsultancy.com>
X-Spam: no; 0.00; -inline:01 gtk:01 gtk:01 ocaml:01 ocamlnet:01 cduce:01 ocaml:01 bindings:01 ocaml's:01 gerd:01 haskell:01 bindings:01 haskell's:01 ffi:01 ocaml's:01 

On Saturday 12 January 2008 16:18:46 Dario Teixeira wrote:
> > > IMHO, the latter is now a few years ahead of GTK, and is only gaining
> > > the advantage as time passes.
> >
> > May I ask what features Qt has that GTK does not?
>
> Though some would argue this is a matter of taste, Qt feels like a
> much more elegant API.  And yes, feature-wise is also a far more
> comprehensive library.  It includes modules not only for the expected
> GUI widgets, but also for database connectivity, XML processing,
> network programming, easy integration with openGL, generation and
> visualisation of SVG and PDF, etc, etc.  Moreover, the various modules
> are well integrated and go well together.  To achieve the same degree
> of functionality in Gtk-land, you need to mix in several independent
> libraries (Gtk+Cairo+...), which not always feel like part of a coherent
> whole.

I see. That's very interesting.

> You could of course argue that in the Ocaml world we have better solutions
> for some of the modules present in Qt.  Ocamlnet is top-notch, and the
> facilities for XML processing (such as Cduce and allies) are so good you
> probably will find the similarly-purposed Qt modules unnecessary.
> Nevertheless, just the graphics facilities present in Qt would more
> than justify Ocaml bindings.

I'm surprised to hear that. The last time I looked (a long time ago) I thought 
OCaml's support for such things (and unicode) was not that good but we do 
seem to be hearing about web-related successes with OCaml all the time and 
they must require working implementations of these kinds of libraries. Gerd 
always seems to be involved. ;-)

> Incidentally, the Haskell folks are working on bindings:
> http://qthaskell.sourceforge.net/

Yes. I noticed those Qt bindings for GHC being advertised recently but it 
turns out they are pre-alpha release have no applications using them and no 
Debian or Ubuntu packages providing them.

> Does Haskell's FFI make this an easier task than Ocaml's?

Haskell certainly has far more bindings to libraries than OCaml but it also 
has far fewer working applications using those bindings, which makes me 
suspicious. ;-)

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

