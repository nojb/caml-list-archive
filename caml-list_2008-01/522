Return-Path: <ober.14@osu.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE,
	SUBJECT_EXCESS_QP autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 6D232BC6C
	for <caml-list@yquem.inria.fr>; Wed, 30 Jan 2008 17:26:38 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AswMAPIzoEdDWxLC/2dsb2JhbACBWI8peAGeIg
X-IronPort-AV: E=Sophos;i="4.25,278,1199660400"; 
   d="scan'208";a="6749755"
Received: from ip67-91-18-194.z18-91-67.customer.algx.net (HELO server1.bertec.net) ([67.91.18.194])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 30 Jan 2008 17:26:37 +0100
Received: from kuba.bertec.net (kuba.bertec.net [192.168.2.16])
	by server1.bertec.net (Postfix) with ESMTP id D9453CDFAF
	for <caml-list@yquem.inria.fr>; Wed, 30 Jan 2008 11:26:36 -0500 (EST)
From: Kuba Ober <ober.14@osu.edu>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Re: The OCaml Community (aka back from =?utf-8?q?the=09Developer?= Days)
Date: Wed, 30 Jan 2008 11:26:35 -0500
User-Agent: KMail/1.9.6 (enterprise 0.20071204.744707)
References: <1201439362.6302.15.camel@Blefuscu> <200801300917.13359.ober.14@osu.edu> <200801301514.12327.jon@ffconsultancy.com>
In-Reply-To: <200801301514.12327.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200801301126.36166.ober.14@osu.edu>
X-Spam: no; 0.00; ocaml:01 suitably:01 ocaml:01 cygwin:01 dependencies:01 compiler:01 ocaml's:01 non-free:01 iirc:01 trolls:01 lablgtk:01 compiler:01 parser:01 bindings:01 higher-level:01 

On Wednesday 30 January 2008, Jon Harrop wrote:
> On Wednesday 30 January 2008 14:17:13 Kuba Ober wrote:
> > It would make sense as a business venture when you'd throw in some
> > economy of scale. MS can sell visual studio for peanuts, and keep that
> > business unit out of the red, of course because they sell so many.
>
> Visual Studio should be making a lot of profit. Microsoft have many
> commercial developers and it is illegal for them to sell products built
> using many of Microsoft's freely available tools. To buy decent tools for
> commercial development, you're looking at 3,000 euros. Either you're very
> rich, or that isn't "peanuts". :-)

I don't think you're prohibited from using Visual Studio Standard in 
commercial development, and that does sell for peanuts.

> If I wanted to pay you to "complete" the String module, how much would you
> charge? Many suitably qualified people would be happy to earn $100 for
> doing that and, I believe, many people/companies would be willing to pay
> that.

I'm sure as a student I'd be very happy. A professional who can choose between 
consulting hours and doing that, the person would probably choose consulting 
hours.

> I'd much rather give people a one-off small contract paid on-line by 
> credit card to solve a niggling problem that I didn't have time to fix
> myself than employ someone with tax, insurance and liability concerns. If
> they're good, I'll use them again.

Yet I doubt that professional developers who want to earn off of their work 
will pick up such projects.

> When I'm selling books like hot cakes and have more outstanding consultancy
> contracts than I can shake a stick at, I'll be more than happy to throw
> money at you to improve things. When I'm going hungry and struggling to
> keep my head above water, I'll be more than happy to solve your problems
> for a small fee. :-)

See? :)

> > I guess it's a big stride to break that small-to-mid-scale barrier.
> > Trolltech had done that, and they are IMHO good technical innvoators too.
> > If there was a way for some OCaml-centric business to do what Trolltech
> > had done, it could probably take off and make very feature-rich OCaml
> > environment available for a good price I wouldn't mind paying $1500/year
> > for an OCaml environment that could run natively (as in no .net and no
> > Cygwin dependencies) on Windows and Linux, and just "do the job". Qt is
> > really nice in that regard: you only need the C++ compiler, and
> > everything else is included and ready to go. It even builds its own build
> > tools (qmake, moc, uic).
>
> OCaml is not as big as TrollTech and has some annoying problems that make
> it unviable as a commercial platform in many ways but I think our company
> has shown that OCaml's commercial market is now sufficient that you can
> earn a living from it.

Which is why any sort of an OCaml startup, a company that could potentially 
provide a non-free toolkit, ide, and whatnot, would need to get some key 
customers very very soon. IIRC, the primordial trolls did get I think 10 
seats sold very soon after they were weaned off their wives (pun intended).

> To be honest, I would love to be able to buy more books on OCaml (e.g. on
> LablGTK2), more software written in OCaml and libraries for OCaml and so
> on. I believe there are now tens of thousands of prospective customers out
> there for such OCaml products.

If there was something on par with Visual Studio Standard for OCaml, even if 
the IDE was an order of magnitude simpler than that, I'd pay $1500/year for a 
single architecture without much second thoughts.

The compiler, though, would likely need to be much amended from the current 
state of affairs, as I can't see it as a viable product without offering a 
built-in C++ ABI support for ia32 at least. I.e. it must be able to interface 
not only to C libraries without writing any C code, but it must be able to 
interface directly with C++ libraries. It can, of course, use the C++ 
compiler to generate some of the needed code, but it has to be transparent. 

It also implies throwing in a C++ parser eventually, but there's no other 
way -- there's just too many good C++ libraries around to ignore them. And my 
key requirement is use of Qt -- if I can't use it, I won't buy such a 
platform, and I won't use any bindings either. To me, the whole binding thing 
is upside down: foreign-language stuff shouldn't be bent to mend with 
higher-level language, it should be the other way around: high level 
languages such as OCaml need to acquire necessary ABI support.

A good first step (good enough for me) would be for OCaml to support C++ ABI 
while not understanding any C++, i.e. only using for-the-purpose OCaml 
constructs. That way one could do the "bindings" by hand-translating some C++ 
headers to OCaml.

This could be implemented maybe in symbiosis with the trolls somehow -- after 
all they could benefit from opening up their market to functional programming 
folks.

Cheers, Kuba

