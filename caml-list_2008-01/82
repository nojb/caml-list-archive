Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 9352EBC6B
	for <caml-list@yquem.inria.fr>; Tue,  8 Jan 2008 21:31:47 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ah4FAMpsg0fUnw6Eg2dsb2JhbACCNY1mAQEBCAIIIgeZAQ
X-IronPort-AV: E=Sophos;i="4.24,259,1196636400"; 
   d="scan'208";a="5849530"
Received: from pih-relay05.plus.net ([212.159.14.132])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 08 Jan 2008 21:31:47 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay05.plus.net with esmtp (Exim) id 1JCL6w-0005eN-Dd
	for caml-list@yquem.inria.fr; Tue, 08 Jan 2008 20:31:46 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Parallelism with threads
Date: Tue, 8 Jan 2008 20:23:47 +0000
User-Agent: KMail/1.9.7
References: <200801081456.49677.jon@ffconsultancy.com> <4d5f7bec0801081131u2ebfae8aia0b13564d13b03c6@mail.gmail.com> <4783D640.7080800@janestcapital.com>
In-Reply-To: <4783D640.7080800@janestcapital.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200801082023.47635.jon@ffconsultancy.com>
X-Spam: no; 0.00; parallelism:01 ocaml:01 runtimes:01 sockets:01 erlang:01 model:01 frog:98 threads:01 threads:01 wrote:01 heap:01 heap:01 caml-list:01 typed:04 mpi:04 

On Tuesday 08 January 2008 20:00:00 Brian Hurt wrote:
> Actually, something that might be nice to see, now that the flat page
> table has been replaced with a heap that can handle disjoint heap
> spaces, is to allow multiple different Ocaml runtimes to be running in
> seperate threads in the same process.
> The heaps wouldn't be able to see each other, but they'd be able to
> communicate via light weight (and strongly typed) message passing, and
> you wouldn't have to dink around with sockets, pipes, MPI, or simiar
> "heavy weight" solutions, so it'd be simpler, and possibly faster.  This
> is not unlike the Erlang model, in fact.

This is exactly the kind of thing I'm interested in!

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

