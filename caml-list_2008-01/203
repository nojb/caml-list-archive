Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id AB15FBC69
	for <caml-list@yquem.inria.fr>; Wed, 16 Jan 2008 04:49:25 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aj0KAHoNjUfUnw7Vlmdsb2JhbACCNo1VAQEBAQcEBiIHnDo
X-IronPort-AV: E=Sophos;i="4.24,291,1196636400"; 
   d="scan'208";a="6097170"
Received: from ptb-relay02.plus.net ([212.159.14.213])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 16 Jan 2008 04:49:25 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay02.plus.net with esmtp (Exim) id 1JEzHI-0007id-Ki
	for caml-list@yquem.inria.fr; Wed, 16 Jan 2008 03:49:24 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Re: Hash clash in polymorphic variants
Date: Wed, 16 Jan 2008 03:42:20 +0000
User-Agent: KMail/1.9.7
References: <200801150459.03896.jon@ffconsultancy.com> <20080116.122627.-10635426.garrigue@math.nagoya-u.ac.jp> <891bd3390801151934s62c5c698vf4a5ac54bfe2fd4d@mail.gmail.com>
In-Reply-To: <891bd3390801151934s62c5c698vf4a5ac54bfe2fd4d@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200801160342.20595.jon@ffconsultancy.com>
X-Spam: no; 0.00; hash:01 variants:01 yaron:01 minsky:01 ocaml:01 guis:01 ocaml:01 lablgtk:01 guis:01 lablgtk:01 frog:98 polymorphic:01 wrote:01 caml-list:01 back-end:02 

On Wednesday 16 January 2008 03:34:54 Yaron Minsky wrote:
> We started out doing entirely back-end processes using OCaml, but as time
> went on, we started building more and more GUIs.  The fact that OCaml has
> lablgtk makes it much more useful for us, without a doubt.  The main reason
> we like to do GUIs in OCaml is that we see a lot of value in sharing type
> definitions and code between the GUIs and the back-end services they
> connect to.

Yes, this is exactly the kind of thing I was referring to. I think a lot of 
people want simple GUIs that are perfectly feasible to construct entirely in 
OCaml and the overhead of splitting a project across languages is much 
higher. Fortunately, LablGTK makes this feasible in OCaml.

There must be some reason why LablGTK is so popular! ;-)

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

