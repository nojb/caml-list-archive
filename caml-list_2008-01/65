Return-Path: <ober.14@osu.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 42954BC6B
	for <caml-list@yquem.inria.fr>; Tue,  8 Jan 2008 15:26:00 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aq4HAMgWg0dDWxLC/2dsb2JhbACBV6d0
X-IronPort-AV: E=Sophos;i="4.24,258,1196636400"; 
   d="scan'208";a="21020201"
Received: from ip67-91-18-194.z18-91-67.customer.algx.net (HELO server1.bertec.net) ([67.91.18.194])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 08 Jan 2008 15:25:59 +0100
Received: from kuba.bertec.net (kuba.bertec.net [192.168.2.16])
	by server1.bertec.net (Postfix) with ESMTP id 23ED7105830
	for <caml-list@yquem.inria.fr>; Tue,  8 Jan 2008 09:25:58 -0500 (EST)
From: Kuba Ober <ober.14@osu.edu>
To: caml-list@yquem.inria.fr
Subject: Re: Re : Re : Re: [Caml-list] Re: MinGW port w/o Cygwin?
Date: Tue, 8 Jan 2008 09:25:56 -0500
User-Agent: KMail/1.9.6 (enterprise 0.20071123.740460)
References: <200712200930.29585.ober.14@osu.edu> <200712261254.44486.ober.14@osu.edu> <666572260801060714i1c6251a1r7e540f19dcb8e151@mail.gmail.com>
In-Reply-To: <666572260801060714i1c6251a1r7e540f19dcb8e151@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200801080925.57135.ober.14@osu.edu>
X-Spam: no; 0.00; mingw:01 cygwin:01 ocaml:01 cygwin:01 mingw:01 ocaml:01 compiler:01 compiler:01 lacks:01 flags:01 makefile:01 makefiles:01 gcc:01 makefile:01 makefiles:01 

On Sunday 06 January 2008, you wrote:
> 2007/12/26, Kuba Ober <ober.14@osu.edu>:
> > On Sunday 23 December 2007, Adrien wrote:
> > > 2007/12/20, Kuba Ober <ober.14@osu.edu>:
> > > > I guess that Ocaml maintainers should just drop that Cygwin
> > > > requirement, and tweak their build process to work "out of the box"
> > > > with MSYS/MinGW.
> > >
> > > You shouldn't see cygwin as a _requirement_.
> > > Ocaml installation from source (let the binary distributions be a
> > > special case) use C. If there is no c compiler installed as it is
> > > under all windows installations (I mean right after setup is
> > > completed) ocaml simply can't be installed ; the problem is not with
> > > ocaml or cygwin but with windows. Cygwin is not a fancy requirement
> > > just one of the few ways to get a c compiler under windows.
> > >
> > > Also mingw without cygwin still lacks a lot of things. Capabilities
> > > are there but it seems header files have not been updated in ages and
> > > linker flags need to be different (you will often need -lws2_32 for
> > > many C apps especially).
> >
> > THe right way is to update mingw headers, submit to the maintainers, and
> > go from there. That's the OSS way.
>
> I know, I only lack of time to do this properly and I've been
> astonished to see some headers were older than Internet Explorer 5.5
> (or even 5) !
> It seemed to be the dev just didn't feel like updating the headers so
> it would take me some time to convince them with a nice and polished
> patch.
>
> > > Anyway, the result is a big headache for the developper. I perfectly
> > > understand the ocaml team is not willing to make a complete mingw/msys
> > > port ; it's such a mess.
> >
> > It's the only sane way to go. THere's no technical reason to require a
> > unix environment to build ocaml. Big applications build on Windows just
> > fine...
>
> Ocaml doesn't rely on an unix environment. It makes use of it when
> available though. How could you run a configure script on windows
> without msys|mingw|cygwin ?

You write it in something other than shell. Say in C++ or OCaml. Qt does just 
fine with configure written in C++/Qt. They even have a graphical front-end 
to it.

> The only solutions are else proprietary non-microsoft
> shells 

Nope. See above.

> About the windows build, it is already avoiding configure scripts but
> then the options are determined by the lowest common factor because
> since most of the required tools are not provided by windows (cc,
> headers), you can't be sure about what is available. But then the
> ocaml Makefile.nt files are already doing this.

Trolltech has approached that problem reasonably well. They provide a 
precompiled (executable) configure mechanism, and a few handmade makefiles to 
build their makefile-generator under the supported development environments 
(3 versions of Visual C++, Mingw gcc). After the makefile generator is built, 
it creates native makefiles which work either in Microsoft's nmake, or under 
Mingw/MSYS gnu make.

Cheers, Kuba

