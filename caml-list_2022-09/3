Return-Path: <SRS0=q1h0=ZQ=polytechnique.org=alan.schmitt@bounces.m4x.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 5F8A9E0038
	for <caml-list@sympa.inria.fr>; Tue, 13 Sep 2022 10:40:45 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=Pass smtp.pra=alan.schmitt@polytechnique.org; spf=Pass smtp.mailfrom=SRS0=q1h0=ZQ=polytechnique.org=alan.schmitt@bounces.m4x.org; spf=Pass smtp.helo=postmaster@mx1.polytechnique.org
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  alan.schmitt@polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=pra; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=q1h0=ZQ=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="alan.schmitt@polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  SRS0=q1h0=ZQ=polytechnique.org=alan.schmitt@bounces.m4x.org
  designates 129.104.30.34 as permitted sender)
  identity=mailfrom; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=q1h0=ZQ=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="SRS0=q1h0=ZQ=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  postmaster@mx1.polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=helo; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=q1h0=ZQ=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="postmaster@mx1.polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1";
  x-record-text="v=spf1 a -all"
IronPort-SDR: MDCfbrMc9Oqm4VIAVbGMDp4vu9hrmb+M4Kv4TQiFvICrrCWU+PJJCfZtnOnzqz8vBxmfKr6F4S
 2PvuryEe9EbPylluaF2E8LwzgnSGylNcn/HCCoV4qFOfmfcvzxcBPfL882GjrX56rSzIlMR0nE
 XvTcobt/XkDNwSg1XaZtlgK+wS6AhZ1MA9Fdb+wo/OQ9iGEFmJSdOUNyyOqs8yq6jxiXnkwG+8
 HJ1bCri44kuRZpXegfxHZNVJb7gL3FQwT3DnV4JmyL/KZ70Ny1mzOczfvR1y80FsCdvs9yYWup
 keHCa3OsUKQkux42U1U6x5Yj
X-IPAS-Result: =?us-ascii?q?A0CRAQCnQCBjmCIeaIFaAR0BEgsBDIIEC4EhgQMZAWdWL?=
 =?us-ascii?q?gcIRYROiH6IFIEWiEiHCYwqFIERA08QAQMBDSwBDAYBAgQBAYQvVoRpAh4GA?=
 =?us-ascii?q?QUxBw4BAgQBAQEBAwIDAQEBAQEBAwEBBQEBAQIBAQIEBAETAQEBAQEBAQEUC?=
 =?us-ascii?q?RkFEA4FPGRkBIFLBIF0CwcGJw2CNQwZg3ABGAkKEwEBKwMEBhgUDwMUAQYDA?=
 =?us-ascii?q?hEBFwEeAxQBEhQGAYJiAYMgAwULi1SaTho1eoExgQGCCAEBBoFAAQMDCwICA?=
 =?us-ascii?q?wEOCSUBg3aBXAkkgRmHAm5VAYM2CYQdAicQgVVEgRWCDGcHboFQcAsXAQEBA?=
 =?us-ascii?q?QGBHhcGAQEIRYMpgmWSOIVgBzcDRR1BAwt3AxUDFAMFJAcDGQ8jDQ0EHQwDA?=
 =?us-ascii?q?wUlAwICGwcCAgMCBhMFAgIXNjgIBAgEKyQPBQIHLwUELwIeBAUGEQgCFgIGB?=
 =?us-ascii?q?AQEBBUCEAgCCCYXBxMzGQEFWRAJIRYGKA0FBhMDIEkmBUUPKDM1OSsdGwqBD?=
 =?us-ascii?q?ioJHxUDBAQDAgYTAwMiAhAqMRQEKRMSLQcrcwkCAyJqAwMEKCwDCSEfBygmP?=
 =?us-ascii?q?AdZEigFAwMQIj0GAwkDAiRbgQUsKAUDDRkmCAWVeoFPgUUOCi4XIgsPBw4GD?=
 =?us-ascii?q?QcTAQcDHwEBBRQHAgcvCSQLAQoEIxgOHS0FAwECDQQpA5IJEBInjgCKa4Jhk?=
 =?us-ascii?q?mk0B4NXgUEGDIg/gSONA4gqg3aBUIsAhmSRVCGWaSCJLYEYCYJLhHSDSIY4h?=
 =?us-ascii?q?U0rE4FCg2iBThoELzsNYgEdDAczGjBQGYINAQEBMQlFAQMCDQECAgMBAgECC?=
 =?us-ascii?q?QEBAoscgw0WgVhagR4QglSBPDk7WoRyPzQCAQE3AgYBCgEBAwmFYwEBBRMLA?=
 =?us-ascii?q?YMMgkcBAQ?=
IronPort-PHdr: A9a23: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
IronPort-Data: A9a23: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
 77s
IronPort-HdrOrdr: A9a23:J8l7nKib5TtSiaU/+atiWa8HyHBQXucji2hC6mlwRA09TyX4rb
 HMoB1/73XJYVkqNk3I9ersBEDiexPhHPxOgLX5VI3KNGLbUQCTQ72Kg7GP/xTQXwXAssRd2a
 1jf6UWMqyTMXFKyeDg7k2dG9YkqeP3lJxAaN2uqktQcQ==
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-AV: E=Sophos;i="5.93,312,1654552800"; 
   d="scan'208,217";a="23556978"
X-MGA-submission: =?us-ascii?q?MDFbEvWWc2ff2fCc0EBNyixt0tlVcJ/zQaolng?=
 =?us-ascii?q?x772bFnAU9wtnuTX8lCOf3DU3wodOCeDJfj+rfqMZoG9P1m8zr9uRD5j?=
 =?us-ascii?q?8/LkUUDqOjAYluWbzPnZjyKJOlskKzmoAHUOCNgz8MVqrwD3MOfNSlM7?=
 =?us-ascii?q?mLlIe4usO9yp+pRYbMQREbHw=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 13 Sep 2022 10:40:43 +0200
Received: from set (set.irisa.fr [131.254.10.170])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id 4F12F5605BC;
	Tue, 13 Sep 2022 10:40:42 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=polytechnique.org;
	s=svoboda; t=1663058442;
	bh=oWLA28S2ytnFnQjieulzH2ml8CMEfA/ItUcAof2y4us=;
	h=From:To:Subject:Date:Message-ID;
	b=P2w+Uf57TE1LxKsbJjuOsZ9YMWa67U7eBa57VeS1vGbBD+MyNdtQ38MuDyEPadRGf
	 eW4bM2ly8v0LtfmIpejOiFqZNV3qqAFtl73uOdTAknEx6B2CyfW+2XVK6hZAviXol0
	 /YtmMiM2mxrX6gi69DoB0R6Do00r6Y8sqhYBh8Mg=
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr
Date: Tue, 13 Sep 2022 10:40:41 +0200
Message-ID: <87sfkv8y5y.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Sep 13 10:40:42 2022 +0200 (CEST))
X-Spam-Flag: Unsure, tests=bogofilter, spamicity=0.484746, queueID=93CDD5605BD
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Hello

Here is the latest OCaml Weekly News, for the week of September 06 to
13, 2022.

Table of Contents
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

Caqti 1.9.0 and Plans for 2.0.0
Outreachy summer =E2=80=9922 closing commemoration session on 23rd Sept
MirageOS for B2B SaaS
Tuareg and Caml modes for Emacs: what are the differences?
Engineer position at Imandra (Austin TX/UK)
Acme plumbing rules for OCaml
Other OCaml News
Old CWN


Caqti 1.9.0 and Plans for 2.0.0
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-caqti-1-9-0-and-plans-for-2-0-0/10448/1>


Petter A. Urkedal announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80

  First I would like to announce the 1.9.0 minor release, see the
  release notes below for details.

  There is also ongoing work in the [caqti2 branch] targeted for the
  next major release. If someone have an opinion on directions, we can
  discuss it here, or in the issue tracker ([meta-issue]), see my brief
  notes below.

  I will attend parts of the ICFP 2022 virtually next week so there may
  be time to discuss over audio.


[caqti2 branch] <https://github.com/paurkedal/ocaml-caqti/tree/caqti2>

[meta-issue] <https://github.com/paurkedal/ocaml-caqti/issues/90>

Release Notes for 1.9.0
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  New features:

  =E2=80=A2 Allow unquoted semicolons in query strings in the new API. Ther=
e are
    corner cases where it is needed, as reported in issue #87, and a
    parser which rejects semicolons are still available for loading
    schema files statement by statement.

  =E2=80=A2 Add support for MySQL and MariaDB configuration files, as a sol=
ution
    to issue #86.

  =E2=80=A2 Add a limit to the number of times a database connection is reu=
sed
    when pooling connections (#94). Thanks to Peter Mondlock for
    investigating resource usage server side motivating this addition.

  =E2=80=A2 Provide access to the raw SQLite3 connection handle for the pur=
pose
    of defining custom functions (#56).

  Fixes:

  =E2=80=A2 Add missing dune dependency on unix (GPR#85 by David Allsopp).

  =E2=80=A2 Documentation fixes (GPR#82, GPR#83, GPR#84 by Reynir Bj=C3=B6r=
nsson,
    GPR#88 by Jonathan Duarte, and GPR#92 by Jim Tittsler).

  Deprecations:

  =E2=80=A2 `Caqti_type.field' was deprecated in favour of `Caqti_type.Fiel=
d.t'.

  Other:

  =E2=80=A2 Replace deprecated core_kernel dependency with core.


Notes on 2.0.0 Development
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=
=E2=95=8C

  The main addition is pgx and mirage support. It is already functional,
  but not very useful for production, since it lacks TLS. The trick here
  is that PostgreSQL uses STARTTLS, so we can=E2=80=99t use conduit-lwt as-=
is.

  Another thing in progress, but unpublished, is [per-connection
  configuration]. Up till now, configuration has only been possible
  through the connection URL or behind-the-scene via C libraries (now
  also for MariaDB). However, this will no longer be practical for
  delivering CA certificates to pgx. Two design issues which you may
  have an opinion about:

  =E2=80=A2 Driver specific options can be defined in the `caqti' package o=
r in
    `caqti-driver-*' packages. In the former case, the configuration can
    be manipulated without depending on specific drivers, but the
    downside is that we will pull in dependencies on `x509',
    `domain-name', `ipaddr' and possibly `tls' and `sexplib0'.
  =E2=80=A2 My current sketch provides sexp-serialisation, a choice mainly
    motivated by the availability of such serialization for client
    configuration of `tls', but I hope to find a more generic solution
    which allows easy embedding of Caqti configuration in application
    configuration independent of which format is used.

  An example of how an sexp-formatted configuration might look like:
  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 (connection
  =E2=94=82  (pool
  =E2=94=82   (max-use-count 20)
  =E2=94=82   (max-idle-size 10))
  =E2=94=82  (driver postgresql)
  =E2=94=82  (endpoints
  =E2=94=82   (inet pg1.example.org)
  =E2=94=82   (inet pg2.example.org))
  =E2=94=82  (target-session-attrs read-write))
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  where the `(pool ...)' clause is driver-indepnedent and the `(driver
  ...)' clause determines which DB-specific options are valid. In the
  current draft, order does not matter despite this dependency.

  (I could also mention plans of wrapping modules, but this will be done
  first as a forward-compatible module in parallel to the current
  modules preferably at the beginning of a major release cycle. The
  reason I haven=E2=80=99t written that main `Caqti' module yet, is that I =
would
  like to take the opportunity to tidy up the namespace to make it
  easier for newcomers to discover the main entry points.)


[per-connection configuration]
<https://github.com/paurkedal/ocaml-caqti/issues/89>


Outreachy summer =E2=80=9922 closing commemoration session on 23rd Sept
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/outreachy-summer-22-closing-commemoration-se=
ssion-on-23rd-sept/10450/1>


Moazzam Moriani announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I, along with Jay, were the two [Outreachy] interns working with the
  OCaml :camel: community this summer. I worked on [Multicore
  Applications] and Jay on [TopoJSON]. Our internship, of course, was
  only made possible because @sudha and @patricoferris generously chose
  to volunteer to mentor us=E2=80=93as our respective mentors=E2=80=93throu=
ghout the
  summer. We are grateful to the both of them :heart:.

  Our three-month long Outreachy internship just ended relatively
  recently and, personally, I have really enjoyed working on my project
  and learning OCaml. So much so that Jay and I would like to share our
  experiences with the rest of the community. :sparkles:

  To carry forward a tradition established by the [previous Outreachy
  cohort], we will host a virtual session that will consist of two short
  presentations from the both of us followed by a Q&A. The session will
  be on Friday 23rd September 2-3pm CET.

  It is open to whoever wishes to join. A recording will be shared later
  online as well.

  We hope you will join us! :raised_hands:


[Outreachy] <https://www.outreachy.org/>

[Multicore Applications] <https://github.com/ocaml-bench/sandmark>

[TopoJSON] <https://github.com/geocaml/ocaml-topojson>

[previous Outreachy cohort]
<https://discuss.ocaml.org/t/friday-03-04-intern-presentations-open-attenda=
nce/9429>


Marcus Rohrmoser asked and Moazzam Moriani replied
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

        I suppose you mean CEST i.e.
        2022-09-23T14:00:00+02:00/PT1H

  Yes I do. Thank you for pointing it out.


MirageOS for B2B SaaS
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/mirageos-for-b2b-saas/10454/1>


Volodymyr Melnyk asked
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I have an idea to build a SaaS for corporate blogging (like Medium,
  but for companies) and I want to try MirageOS as a total platform for
  services. I have no production experience with OCaml (only Golang, JS,
  Ruby) and have no experience with MirageOS and unikernels (only
  Docker, Linux, and a little bit k8s), but I=E2=80=99m very interested in =
both.
  Could you please help me to clarify possible issues with such an
  approach?

  Also I=E2=80=99m interested about a hosting for MirageOS services. I don=
=E2=80=99t
  like containers and k8s stuff and I prefer dedicated and virtual
  servers instead of cloud stuff because I have no resources to pay up
  to 5x more for hosting.

  Thank you for your help!


Calascibetta Romain replied
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80

  Thank you for your interest in MirageOS. MirageOS is first and
  foremost a framework for creating an application (such as a blog) for
  several targets. One of these targets is [Solo5] which allows to
  create an entire system which includes everything necessary for OCaml
  (its runtime). Thus, one can deploy a MirageOS application on:
  =E2=80=A2 KVM (with the target `hvt')
  =E2=80=A2 [Xen]
  =E2=80=A2 or produce a simple executable taking advantage of [seccomp] (a=
nd
    thus finely controlling access to the executable).
  =E2=80=A2 we can also mention the experimental target for [Raspberry Pi 4]

  The objective of MirageOS is to make the choice of targets transparent
  to the application. This means that for a given application, deploying
  for KVM or Xen should not be an upstream choice (which would govern
  the development of the application) but the last of the choices which
  can, of course, be left to third party users.

  This reverses the development logic of an application thanks to
  abstraction mechanisms (specific to OCaml) (the [functors]) that allow
  to get rid of any specialisation to a given system (Solo5, Unix,
  Raspberry Pi, etc.).

  This is of course the theory and in practice, it works quite well :) .

  To take the example of the blog, you can see [Hannes=E2=80=99 blog] or [m=
ine]
  which runs on MirageOS (KVM). The latter have a similar architecture:
  a unikernel managing TLS certificates and redirecting HTTP connections
  to unikernels on a local network ([tlstunnel] or [contruno]) and a
  unikernel ([unipi]) that only transmits what appears in a Git
  repository via the HTTP protocol (http/1.1 and h2).

  Deployment depends of course on what you have. Regarding KVM, you can
  follow the tutorials [here] (quite general) and [there]. You can
  deploy your unikernels on Google Cloud with this (probably a bit old)
  [tutorial]. Finally, a deployment with seccomp is possible, it is a
  simple executable.

  Of course, most of these unikernels are already available for download
  [here] thanks to the excellent work of [robur.io]. It is ensured that
  the generated image is reproducible regardless of the context.

  There is of course a whole series of unikernels made by the community
  that you can mainly find on GitHub. We can talk about several services
  like [DNS] or [emails].

  I would like to specify that all this is still experimental. We are
  gradually reaching the stage where our unikernels are used in
  production domains, but it still requires a lot of work and a lot of
  skills for such a small team :) . Of course, we are open to everyone=E2=
=80=99s
  participation and we are especially here to help newcomers.


[Solo5] <https://github.com/Solo5/solo5/>

[Xen] <https://xenproject.org/>

[seccomp]
<https://code.google.com/archive/p/seccompsandbox/wikis/overview.wiki>

[Raspberry Pi 4] <https://github.com/dinosaure/gilbraltar/>

[functors] <https://ocaml.org/docs/functors>

[Hannes=E2=80=99 blog] <https://hannes.nqsb.io/>

[mine] <https://blog.osau.re>

[tlstunnel] <https://github.com/roburio/tlstunnel>

[contruno] <https://github.com/dinosaure/contruno>

[unipi] <https://github.com/roburio/unipi>

[here] <https://robur.coop/Projects/Reproducible_builds>

[there] <https://blog.osau.re/articles/blog_requiem.html>

[tutorial]
<https://github.com/aantron/dream/tree/master/example/w-mirage>

[here] <https://builds.robur.coop/>

[robur.io] <https://robur.io/>

[DNS] <https://github.com/roburio/dns-primary-git>

[emails] <https://mirage.io/blog/2022-04-01-Mr-MIME>


Tuareg and Caml modes for Emacs: what are the differences?
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/tuareg-and-caml-modes-for-emacs-what-are-the=
-differences/10285/12>


Deep in this thread, Tim McGilchrist announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I wrote up a longer form version of my setup at
  <https://lambdafoo.com/posts/2022-09-07-ocaml-with-emacs-2022.html>
  There are still some bits I am not happy with but I have been using it
  daily. Also @bbatsov wrote his version at
  <https://batsov.com/articles/2022/08/23/setting-up-emacs-for-ocaml-develo=
pment/>


Engineer position at Imandra (Austin TX/UK)
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/engineer-position-at-imandra-austin-tx-uk/10=
465/1>


Simon Cruanes announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  [Imandra] is looking for a full time engineer in the UK or in Austin,
  Texas.

  The job offers can be found [here].Imandra is an AI startup developing
  a cloud-native automated reasoning engine for analysis of algorithms
  and data. Whether you=E2=80=99re writing mission-critical code or need to
  understand the countless complex decisions that a system may make, use
  Imandra to ensure the algorithms you create are safe, explainable and
  fair. OCaml is the main language used at Imandra.


[Imandra] <https://imandra.ai/>

[here] <https://apply.workable.com/imandra/>


Acme plumbing rules for OCaml
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/acme-plumbing-rules-for-ocaml/10467/1>


David A. Arroyo announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I am sure that the intersection of OCaml users and [Acme] users is
  small, but I have reason to believe it is a non-zero set :) . For
  those of you using this spartan editor, here are some plumbing rules
  that I use that allow me to right-click on error messages returned by
  the OCaml compilers, and jump to the referenced location in acme:

  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 # example: in file "foo/bar.ml", line 155, characters 30-62
  =E2=94=82 type	is	text
  =E2=94=82 data	matches	'.*[Ff]ile "([^"]+)", line ([0-9]+), characters ([=
0-9]+)-([0-9]+).*'$nl'?'
  =E2=94=82 arg	isfile	$1
  =E2=94=82 data	set	$file
  =E2=94=82 attr	add	addr=3D$2-#0+#$3,$2-#0+#$4
  =E2=94=82 plumb	to	edit
  =E2=94=82 plumb	client	$editor
  =E2=94=82=20
  =E2=94=82 # example: File "tests/dune", line 2, characters 7-22:
  =E2=94=82 type	is	text
  =E2=94=82 data	matches	'.*[Ff]ile "([^"]+)", lines ([0-9]+)-([0-9]+).*'$n=
l'?'
  =E2=94=82 arg	isfile	$1
  =E2=94=82 data	set	$file
  =E2=94=82 attr	add	addr=3D$2,$3
  =E2=94=82 plumb	to	edit
  =E2=94=82 plumb	client	$editor
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  It could probably be extended to search `~/.opam' so you could plumb
  errors in files outside of your project, but I do not use opam, so I
  haven=E2=80=99t needed to do it.

  Here is a short demo of its use: <https://youtu.be/Evl-N0oNNd0>

  It=E2=80=99s not in OCaml, but I also wrote
  <https://github.com/droyo/acme-autoformat> and put an `OcamlFmt'
  script in acme=E2=80=99s $PATH like so:

  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 #!/bin/sh
  =E2=94=82 exec /usr/local/bin/acme-autoformat -r '\.mli?$' \
  =E2=94=82 	-- ocamlformat --name=3D'{{.Basename}}' --enable-outside-detec=
ted-project -
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  This calls `ocamlformat' whenever I Put an .ml[i] file. This is
  probably obviated by combining acme-lsp and ocaml-lsp, but these two
  bits work well enough that I haven=E2=80=99t felt a need to pursue it.


[Acme] <https://acme.cat-v.org/>


Other OCaml News
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

>From the ocaml.org blog
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Here are links from many OCaml blogs aggregated at [the ocaml.org
  blog].

  =E2=80=A2 [Tarides Sponsors Girls Can Code]
  =E2=80=A2 [Introducing the Jane Street Graduate Research Fellowship]


[the ocaml.org blog] <https://ocaml.org/blog/>

[Tarides Sponsors Girls Can Code]
<https://tarides.com/blog/2022-09-06-tarides-sponsors-girls-can-code>

[Introducing the Jane Street Graduate Research Fellowship]
<https://blog.janestreet.com/graduate-research-fellowship/>


Old CWN
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  If you happen to miss a CWN, you can [send me a message] and I=E2=80=99ll=
 mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  [online].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <https://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <https://alan.petitepomme.net/cwn/cwn.rss>

[online] <http://lists.idyll.org/listinfo/caml-news-weekly/>

[Alan Schmitt] <https://alan.petitepomme.net/>


--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2022-09-13 Tue 10:34 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org Mode" />
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { }
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
</head>
<body>
<div id=3D"content" class=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2022.09.06.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2022.09.20.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of September 06 to 13, 2=
022.
</p>

<div id=3D"table-of-contents" role=3D"doc-toc">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents" role=3D"doc-toc">
<ul>
<li><a href=3D"#1">Caqti 1.9.0 and Plans for 2.0.0</a></li>
<li><a href=3D"#2">Outreachy summer &rsquo;22 closing commemoration session=
 on 23rd Sept</a></li>
<li><a href=3D"#3">MirageOS for B2B SaaS</a></li>
<li><a href=3D"#4">Tuareg and Caml modes for Emacs: what are the difference=
s?</a></li>
<li><a href=3D"#5">Engineer position at Imandra (Austin TX/UK)</a></li>
<li><a href=3D"#6">Acme plumbing rules for OCaml</a></li>
<li><a href=3D"#7">Other OCaml News</a></li>
<li><a href=3D"#org09bb814">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-1" class=3D"outline-2">
<h2 id=3D"1">Caqti 1.9.0 and Plans for 2.0.0</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-caqti-1-9-0-and-plans-f=
or-2-0-0/10448/1">https://discuss.ocaml.org/t/ann-caqti-1-9-0-and-plans-for=
-2-0-0/10448/1</a>
</p>
</div>

<div id=3D"outline-container-org0420b36" class=3D"outline-3">
<h3 id=3D"org0420b36">Petter A. Urkedal announced</h3>
<div class=3D"outline-text-3" id=3D"text-org0420b36">
<p>
First I would like to announce the 1.9.0 minor release, see the release not=
es below for details.
</p>

<p>
There is also ongoing work in the <a href=3D"https://github.com/paurkedal/o=
caml-caqti/tree/caqti2">caqti2 branch</a> targeted for
the next major release.  If someone have an opinion on directions, we can d=
iscuss it here, or in the issue tracker
(<a href=3D"https://github.com/paurkedal/ocaml-caqti/issues/90">meta-issue<=
/a>), see my brief notes below.
</p>

<p>
I will attend parts of the ICFP 2022 virtually next week so there may be ti=
me to discuss over audio.
</p>
</div>

<div id=3D"outline-container-org21d9c18" class=3D"outline-4">
<h4 id=3D"org21d9c18">Release Notes for 1.9.0</h4>
<div class=3D"outline-text-4" id=3D"text-org21d9c18">
<p>
New features:
</p>

<ul class=3D"org-ul">
<li>Allow unquoted semicolons in query strings in the new API.  There are
corner cases where it is needed, as reported in issue #87, and a parser
which rejects semicolons are still available for loading schema files
statement by statement.</li>

<li>Add support for MySQL and MariaDB configuration files, as a solution to
issue #86.</li>

<li>Add a limit to the number of times a database connection is reused when
pooling connections (#94).  Thanks to Peter Mondlock for investigating
resource usage server side motivating this addition.</li>

<li>Provide access to the raw SQLite3 connection handle for the purpose of
defining custom functions (#56).</li>
</ul>

<p>
Fixes:
</p>

<ul class=3D"org-ul">
<li>Add missing dune dependency on unix (GPR#85 by David Allsopp).</li>

<li>Documentation fixes (GPR#82, GPR#83, GPR#84 by Reynir Bj=C3=B6rnsson,
GPR#88 by Jonathan Duarte, and GPR#92 by Jim Tittsler).</li>
</ul>

<p>
Deprecations:
</p>

<ul class=3D"org-ul">
<li><code>Caqti_type.field</code> was deprecated in favour of <code>Caqti_t=
ype.Field.t</code>.</li>
</ul>

<p>
Other:
</p>

<ul class=3D"org-ul">
<li>Replace deprecated core_kernel dependency with core.</li>
</ul>
</div>
</div>

<div id=3D"outline-container-org2ff78b6" class=3D"outline-4">
<h4 id=3D"org2ff78b6">Notes on 2.0.0 Development</h4>
<div class=3D"outline-text-4" id=3D"text-org2ff78b6">
<p>
The main addition is pgx and mirage support.  It is already functional, but=
 not very useful for production, since it
lacks TLS.  The trick here is that PostgreSQL uses STARTTLS, so we can&rsqu=
o;t use conduit-lwt as-is.
</p>

<p>
Another thing in progress, but unpublished, is <a href=3D"https://github.co=
m/paurkedal/ocaml-caqti/issues/89">per-connection configuration</a>.  Up ti=
ll now, configuration has only been
possible through the connection URL or behind-the-scene via C libraries (no=
w also for MariaDB).  However, this will
no longer be practical for delivering CA certificates to pgx.  Two design i=
ssues which you may have an opinion
about:
</p>

<ul class=3D"org-ul">
<li>Driver specific options can be defined in the <code>caqti</code> packag=
e or in <code>caqti-driver-*</code> packages. In the former case, the confi=
guration can be manipulated without depending on specific drivers, but the =
downside is that we will pull in dependencies on <code>x509</code>, <code>d=
omain-name</code>, <code>ipaddr</code> and possibly <code>tls</code> and <c=
ode>sexplib0</code>.</li>
<li>My current sketch provides sexp-serialisation, a choice mainly motivate=
d by the availability of such serialization for client configuration of <co=
de>tls</code>, but I hope to find a more generic solution which allows easy=
 embedding of Caqti configuration in application configuration independent =
of which format is used.</li>
</ul>

<p>
An example of how an sexp-formatted configuration might look like:
</p>
<pre class=3D"example" id=3D"org2ca5369">
(connection
 (pool
  (max-use-count 20)
  (max-idle-size 10))
 (driver postgresql)
 (endpoints
  (inet pg1.example.org)
  (inet pg2.example.org))
 (target-session-attrs read-write))
</pre>
<p>
where the <code>(pool ...)</code> clause is driver-indepnedent and the <cod=
e>(driver ...)</code> clause determines which DB-specific
options are valid. In the current draft, order does not matter despite this=
 dependency.
</p>

<p>
(I could also mention plans of wrapping modules, but this will be done firs=
t as a forward-compatible module in
parallel to the current modules preferably at the beginning of a major rele=
ase cycle.  The reason I haven&rsquo;t written
that main <code>Caqti</code> module yet, is that I would like to take the o=
pportunity to tidy up the namespace to make it
easier for newcomers to discover the main entry points.)
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-2" class=3D"outline-2">
<h2 id=3D"2">Outreachy summer &rsquo;22 closing commemoration session on 23=
rd Sept</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/outreachy-summer-22-closing=
-commemoration-session-on-23rd-sept/10450/1">https://discuss.ocaml.org/t/ou=
treachy-summer-22-closing-commemoration-session-on-23rd-sept/10450/1</a>
</p>
</div>

<div id=3D"outline-container-org8d35dd9" class=3D"outline-3">
<h3 id=3D"org8d35dd9">Moazzam Moriani announced</h3>
<div class=3D"outline-text-3" id=3D"text-org8d35dd9">
<p>
I, along with Jay, were the two <a href=3D"https://www.outreachy.org/">Outr=
eachy</a> interns working with the OCaml :camel:
community  this summer. I worked on <a href=3D"https://github.com/ocaml-ben=
ch/sandmark">Multicore Applications</a> and Jay on
<a href=3D"https://github.com/geocaml/ocaml-topojson">TopoJSON</a>. Our int=
ernship, of course, was only made possible because
@sudha and @patricoferris generously chose to volunteer to mentor us&#x2013=
;as our respective mentors&#x2013;throughout the
summer. We are grateful to the both of them :heart:.
</p>

<p>
Our three-month long Outreachy internship just ended relatively recently an=
d, personally, I have really enjoyed
working on my project and learning OCaml. So much so that Jay and I would l=
ike to share our experiences with the
rest of the community. :sparkles:
</p>

<p>
To carry forward a tradition established by the <a href=3D"https://discuss.=
ocaml.org/t/friday-03-04-intern-presentations-open-attendance/9429">previou=
s Outreachy
cohort</a>, we will host a virtual
session that will consist of two short presentations from the both of us fo=
llowed by a Q&amp;A. The session will be on
Friday 23rd September 2-3pm CET.
</p>

<p>
It is open to whoever wishes to join. A recording will be shared later onli=
ne as well.
</p>

<p>
We hope you will join us! :raised_hands:
</p>
</div>
</div>


<div id=3D"outline-container-org7c8842b" class=3D"outline-3">
<h3 id=3D"org7c8842b">Marcus Rohrmoser asked and Moazzam Moriani replied</h=
3>
<div class=3D"outline-text-3" id=3D"text-org7c8842b">
<blockquote>
<p>
I suppose you mean CEST i.e. 2022-09-23T14:00:00+02:00/PT1H
</p>
</blockquote>

<p>
Yes I do. Thank you for pointing it out.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-3" class=3D"outline-2">
<h2 id=3D"3">MirageOS for B2B SaaS</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/mirageos-for-b2b-saas/10454=
/1">https://discuss.ocaml.org/t/mirageos-for-b2b-saas/10454/1</a>
</p>
</div>

<div id=3D"outline-container-org47d959e" class=3D"outline-3">
<h3 id=3D"org47d959e">Volodymyr Melnyk asked</h3>
<div class=3D"outline-text-3" id=3D"text-org47d959e">
<p>
I have an idea to build a SaaS for corporate blogging (like Medium, but for=
 companies) and I want to try MirageOS as
a total platform for services. I have no production experience with OCaml (=
only Golang, JS, Ruby) and have no
experience with MirageOS and unikernels (only Docker, Linux, and a little b=
it k8s), but I&rsquo;m very interested in both.
Could you please help me to clarify possible issues with such an approach?
</p>

<p>
Also I&rsquo;m interested about a hosting for MirageOS services. I don&rsqu=
o;t like containers and k8s stuff and I prefer
dedicated and virtual servers instead of cloud stuff because I have no reso=
urces to pay up to 5x more for hosting.
</p>

<p>
Thank you for your help!
</p>
</div>
</div>


<div id=3D"outline-container-org3544f85" class=3D"outline-3">
<h3 id=3D"org3544f85">Calascibetta Romain replied</h3>
<div class=3D"outline-text-3" id=3D"text-org3544f85">
<p>
Thank you for your interest in MirageOS. MirageOS is first and foremost a f=
ramework for creating an application
(such as a blog) for several targets. One of these targets is <a href=3D"ht=
tps://github.com/Solo5/solo5/">Solo5</a> which allows
to create an entire system which includes everything necessary for OCaml (i=
ts runtime). Thus, one can deploy a
MirageOS application on:
</p>
<ul class=3D"org-ul">
<li>KVM (with the target <code>hvt</code>)</li>
<li><a href=3D"https://xenproject.org/">Xen</a></li>
<li>or produce a simple executable taking advantage of <a href=3D"https://c=
ode.google.com/archive/p/seccompsandbox/wikis/overview.wiki">seccomp</a> (a=
nd thus finely controlling access to the executable).</li>
<li>we can also mention the experimental target for <a href=3D"https://gith=
ub.com/dinosaure/gilbraltar/">Raspberry Pi 4</a></li>
</ul>

<p>
The objective of MirageOS is to make the choice of targets transparent to t=
he application. This means that for a
given application, deploying for KVM or Xen should not be an upstream choic=
e (which would govern the development of
the application) but the last of the choices which can, of course, be left =
to third party users.
</p>

<p>
This reverses the development logic of an application thanks to abstraction=
 mechanisms (specific to OCaml) (the
<a href=3D"https://ocaml.org/docs/functors">functors</a>) that allow to get=
 rid of any specialisation to a given system (Solo5,
Unix, Raspberry Pi, etc.).
</p>

<p>
This is of course the theory and in practice, it works quite well :) .
</p>

<p>
To take the example of the blog, you can see <a href=3D"https://hannes.nqsb=
.io/">Hannes&rsquo; blog</a> or <a href=3D"https://blog.osau.re">mine</a>
which runs on MirageOS (KVM). The latter have a similar architecture: a uni=
kernel managing TLS certificates and
redirecting HTTP connections to unikernels on a local network (<a href=3D"h=
ttps://github.com/roburio/tlstunnel">tlstunnel</a> or
<a href=3D"https://github.com/dinosaure/contruno">contruno</a>) and a unike=
rnel (<a href=3D"https://github.com/roburio/unipi">unipi</a>) that
only transmits what appears in a Git repository via the HTTP protocol (http=
/1.1 and h2).
</p>

<p>
Deployment depends of course on what you have. Regarding KVM, you can follo=
w the tutorials
<a href=3D"https://robur.coop/Projects/Reproducible_builds">here</a> (quite=
 general) and
<a href=3D"https://blog.osau.re/articles/blog_requiem.html">there</a>. You =
can deploy your unikernels on Google Cloud with this
(probably a bit old) <a href=3D"https://github.com/aantron/dream/tree/maste=
r/example/w-mirage">tutorial</a>. Finally, a
deployment with seccomp is possible, it is a simple executable.
</p>

<p>
Of course, most of these unikernels are already available for download <a h=
ref=3D"https://builds.robur.coop/">here</a> thanks to
the excellent work of <a href=3D"https://robur.io/">robur.io</a>. It is ens=
ured that the generated image is reproducible
regardless of the context.
</p>

<p>
There is of course a whole series of unikernels made by the community that =
you can mainly find on GitHub. We can
talk about several services like <a href=3D"https://github.com/roburio/dns-=
primary-git">DNS</a> or
<a href=3D"https://mirage.io/blog/2022-04-01-Mr-MIME">emails</a>.
</p>

<p>
I would like to specify that all this is still experimental. We are gradual=
ly reaching the stage where our
unikernels are used in production domains, but it still requires a lot of w=
ork and a lot of skills for such a small
team :) . Of course, we are open to everyone&rsquo;s participation and we a=
re especially here to help newcomers.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-4" class=3D"outline-2">
<h2 id=3D"4">Tuareg and Caml modes for Emacs: what are the differences?</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/tuareg-and-caml-modes-for-e=
macs-what-are-the-differences/10285/12">https://discuss.ocaml.org/t/tuareg-=
and-caml-modes-for-emacs-what-are-the-differences/10285/12</a>
</p>
</div>

<div id=3D"outline-container-org3d5c9e4" class=3D"outline-3">
<h3 id=3D"org3d5c9e4">Deep in this thread, Tim McGilchrist announced</h3>
<div class=3D"outline-text-3" id=3D"text-org3d5c9e4">
<p>
I wrote up a longer form version of my setup at <a href=3D"https://lambdafo=
o.com/posts/2022-09-07-ocaml-with-emacs-2022.html">https://lambdafoo.com/po=
sts/2022-09-07-ocaml-with-emacs-2022.html</a>
There are still some bits I am not happy with but I have been using it dail=
y.
Also @bbatsov wrote his version at <a href=3D"https://batsov.com/articles/2=
022/08/23/setting-up-emacs-for-ocaml-development/">https://batsov.com/artic=
les/2022/08/23/setting-up-emacs-for-ocaml-development/</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-5" class=3D"outline-2">
<h2 id=3D"5">Engineer position at Imandra (Austin TX/UK)</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/engineer-position-at-imandr=
a-austin-tx-uk/10465/1">https://discuss.ocaml.org/t/engineer-position-at-im=
andra-austin-tx-uk/10465/1</a>
</p>
</div>

<div id=3D"outline-container-org48f1339" class=3D"outline-3">
<h3 id=3D"org48f1339">Simon Cruanes announced</h3>
<div class=3D"outline-text-3" id=3D"text-org48f1339">
<p>
<a href=3D"https://imandra.ai/">Imandra</a> is looking for a full time engi=
neer in the UK or in Austin, Texas.
</p>

<p>
The job offers can be found <a href=3D"https://apply.workable.com/imandra/"=
>here</a>.Imandra is an AI startup developing a
cloud-native automated reasoning engine for analysis of algorithms and data=
. Whether you&rsquo;re writing mission-critical
code or need to understand the countless complex decisions that a system ma=
y make, use Imandra to ensure the
algorithms you create are safe, explainable and fair. OCaml is the main lan=
guage used at Imandra.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-6" class=3D"outline-2">
<h2 id=3D"6">Acme plumbing rules for OCaml</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/acme-plumbing-rules-for-oca=
ml/10467/1">https://discuss.ocaml.org/t/acme-plumbing-rules-for-ocaml/10467=
/1</a>
</p>
</div>

<div id=3D"outline-container-orgdd444bb" class=3D"outline-3">
<h3 id=3D"orgdd444bb">David A. Arroyo announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgdd444bb">
<p>
I am sure that the intersection of OCaml users and <a href=3D"https://acme.=
cat-v.org/">Acme</a> users is small, but I have reason
to believe it is a non-zero set :) . For those of you using this spartan ed=
itor, here are some plumbing rules that I
use that allow me to right-click on error messages returned by the OCaml co=
mpilers, and jump to the referenced
location in acme:
</p>

<pre class=3D"example" id=3D"org3374e94">
# example: in file "foo/bar.ml", line 155, characters 30-62
type	is	text
data	matches	'.*[Ff]ile "([^"]+)", line ([0-9]+), characters ([0-9]+)-([0-9=
]+).*'$nl'?'
arg	isfile	$1
data	set	$file
attr	add	addr=3D$2-#0+#$3,$2-#0+#$4
plumb	to	edit
plumb	client	$editor

# example: File "tests/dune", line 2, characters 7-22:
type	is	text
data	matches	'.*[Ff]ile "([^"]+)", lines ([0-9]+)-([0-9]+).*'$nl'?'
arg	isfile	$1
data	set	$file
attr	add	addr=3D$2,$3
plumb	to	edit
plumb	client	$editor
</pre>

<p>
It could probably be extended to search <code>~/.opam</code> so you could p=
lumb errors in files outside of your project, but I
do not use opam, so I haven&rsquo;t needed to do it.
</p>

<p>
Here is a short demo of its use: <a href=3D"https://youtu.be/Evl-N0oNNd0">h=
ttps://youtu.be/Evl-N0oNNd0</a>
</p>

<p>
It&rsquo;s not in OCaml, but I also wrote <a href=3D"https://github.com/dro=
yo/acme-autoformat">https://github.com/droyo/acme-autoformat</a> and put an=
 <code>OcamlFmt</code> script in
acme&rsquo;s $PATH like so:
</p>

<pre class=3D"example" id=3D"org0fedda4">
#!/bin/sh
exec /usr/local/bin/acme-autoformat -r '\.mli?$' \
	-- ocamlformat --name=3D'{{.Basename}}' --enable-outside-detected-project -
</pre>

<p>
This calls <code>ocamlformat</code> whenever I Put an .ml[i] file. This is =
probably obviated by combining acme-lsp and
ocaml-lsp, but these two bits work well enough that I haven&rsquo;t felt a =
need to pursue it.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-7" class=3D"outline-2">
<h2 id=3D"7">Other OCaml News</h2>
<div class=3D"outline-text-2" id=3D"text-7">
</div>
<div id=3D"outline-container-org6bfd6d2" class=3D"outline-3">
<h3 id=3D"org6bfd6d2">From the ocaml.org blog</h3>
<div class=3D"outline-text-3" id=3D"text-org6bfd6d2">
<p>
Here are links from many OCaml blogs aggregated at <a href=3D"https://ocaml=
.org/blog/">the ocaml.org blog</a>.
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://tarides.com/blog/2022-09-06-tarides-sponsors-girls-c=
an-code">Tarides Sponsors Girls Can Code</a></li>
<li><a href=3D"https://blog.janestreet.com/graduate-research-fellowship/">I=
ntroducing the Jane Street Graduate Research Fellowship</a></li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-org09bb814" class=3D"outline-2">
<h2 id=3D"org09bb814">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org09bb814">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I&rsquo;ll mail it to you, or go take=
 a look at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or=
 the <a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the a=
rchives</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname" id=3D"org642e8af">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

