Return-Path: <examachine@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 7E1F5BC57
	for <caml-list@yquem.inria.fr>; Tue, 20 Jul 2010 02:36:19 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqEBANaLREzRVdY0kGdsb2JhbACfZwgVAQEBAQkJDAcRAx+zCIIQhiIuiFQBAQMFhR0Eg3qEXA
X-IronPort-AV: E=Sophos;i="4.55,229,1278280800"; 
   d="scan'208";a="54491815"
Received: from mail-bw0-f52.google.com ([209.85.214.52])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 20 Jul 2010 02:36:19 +0200
Received: by bwz14 with SMTP id 14so3275074bwz.39
        for <caml-list@yquem.inria.fr>; Mon, 19 Jul 2010 17:36:18 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:received:in-reply-to
         :references:date:message-id:subject:from:to:cc:content-type;
        bh=ElqVMDvyHq5ZJjAfZAplkbYw3JZN0AeuRygiR9H+JxE=;
        b=h5GGyuErlPOKoSLyW56UQe9XePiT4vKEh1XIC1KTbfM0lciHpjrpkdnV6BCIDyR4zi
         n//WcVZWexOhae5dpJv39YltdhH9ci0Fuh045iMkDnaZN4jwgjZlZyvoL/p6QQz8xTJ8
         zt4gBfJ2uPZzDVmcD+cR4QjiYK8/6auoO9ePs=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        b=d3umhiB2jWq0SfCE9HLhCbmDXQsODtlOYNgTnd3ZojeBz92MCMJze7+em50EpCQTUl
         JegEBmAZzXSJwcV7LdCTSypcEUnRGj6NxXjc7lBbKrVgf67qkm1eZbeNz5A0cQnKoOJR
         hSvHc/KXa978Tx3w60tijDBvyFzUdPrU4undE=
MIME-Version: 1.0
Received: by 10.204.67.70 with SMTP id q6mr4546393bki.46.1279586178471; Mon, 
	19 Jul 2010 17:36:18 -0700 (PDT)
Received: by 10.204.16.195 with HTTP; Mon, 19 Jul 2010 17:36:18 -0700 (PDT)
In-Reply-To: <AANLkTiltvIH58qPFuPZS3yRWwj5x2c3EJGTTVNjjPNQP@mail.gmail.com>
References: <AANLkTinJUmJ8p52MsQBnGU2xDuYwW3hIJDp8k9j-KSOY@mail.gmail.com>
	<AANLkTimSpG6n24H_i6KK0bwNvi-ns5R-cQYePf6XCyUn@mail.gmail.com>
	<AANLkTilMoTaSw5jEWH1pCrZIv1vZPGQGIdDkqj4ZpSb9@mail.gmail.com>
	<AANLkTinKQFHMeI6vbe9E2Dm9PZxpgQbLUKQFTv1rZJ4X@mail.gmail.com>
	<AANLkTiltvIH58qPFuPZS3yRWwj5x2c3EJGTTVNjjPNQP@mail.gmail.com>
Date: Tue, 20 Jul 2010 03:36:18 +0300
Message-ID: <AANLkTinhmDybCbXKTtyI53yzuOZKid4DC7t-grDrRGre@mail.gmail.com>
Subject: Re: [Caml-list] ocaml for embedding
From: Eray Ozkural <examachine@gmail.com>
To: Gaspard Bucher <gaspard@teti.ch>
Cc: David MENTRE <dmentre@linux-france.org>, caml-list@yquem.inria.fr
Content-Type: multipart/alternative; boundary=001636c5ad6ea098d6048bc6dfd4
X-Spam: no; 0.00; ocaml:01 eray:01 ozkural:01 jocaml:01 source-level:01 ocamlmpi:01 speedup:01 eray:01 ozkural:01 bilkent:01 jocaml:01 source-level:01 ocamlmpi:01 speedup:01 bilkent:01 

--001636c5ad6ea098d6048bc6dfd4
Content-Type: text/plain; charset=ISO-8859-1

On Mon, Jul 12, 2010 at 4:19 PM, Gaspard Bucher <gaspard@teti.ch> wrote:

>  Just a final question on the topic: has JoCaml anything to do with
> this concurrency (shared memory) question ?


It seems to me that it can be implemented for a shared memory system. Why
not? But it's been designed with distributed memory in mind. So, I suppose
writing to shared memory could be slow. It'd be sort of like implementing
synchronization on top of a message passing system. Although I can see that
reading is OK. I would still like a nice and sound source-level support for
shared memory, if possible :) Do not all of us need such a feature? My cores
are idle. That's a pity. Yes, I did use ocamlmpi to get some speedup on
shared memory, but it's not the same thing. I shouldn't have to go back to
C++ just for implementing a shared memory algorithm.

Best,
-- 
Eray Ozkural, PhD candidate.  Comp. Sci. Dept., Bilkent University, Ankara

--001636c5ad6ea098d6048bc6dfd4
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

On Mon, Jul 12, 2010 at 4:19 PM, Gaspard Bucher <span dir=3D"ltr">&lt;<a hr=
ef=3D"mailto:gaspard@teti.ch">gaspard@teti.ch</a>&gt;</span> wrote:<br><div=
 class=3D"gmail_quote"><blockquote class=3D"gmail_quote" style=3D"margin: 0=
pt 0pt 0pt 0.8ex; border-left: 1px solid rgb(204, 204, 204); padding-left: =
1ex;">
=A0Just a final question on the topic: has JoCaml anything to do with<br>
this concurrency (shared memory) question ?<font color=3D"#888888"></font><=
/blockquote><div><br>It seems to me that it can be implemented for a shared=
 memory system. Why not? But it&#39;s been designed with distributed memory=
 in mind. So, I suppose writing to shared memory could be slow. It&#39;d be=
 sort of like implementing synchronization on top of a message passing syst=
em. Although I can see that reading is OK. I would still like a nice and so=
und source-level support for shared memory, if possible :) Do not all of us=
 need such a feature? My cores are idle. That&#39;s a pity. Yes, I did use =
ocamlmpi to get some speedup on shared memory, but it&#39;s not the same th=
ing. I shouldn&#39;t have to go back to C++ just for implementing a shared =
memory algorithm.<br>
<br>Best, <br></div></div>-- <br>Eray Ozkural, PhD candidate.=A0 Comp. Sci.=
 Dept., Bilkent University, Ankara<br><br>

--001636c5ad6ea098d6048bc6dfd4--

