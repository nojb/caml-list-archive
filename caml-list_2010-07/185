Return-Path: <gclci-caml-list@m.gmane.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id D7DFCBBAF
	for <caml-list@yquem.inria.fr>; Mon, 26 Jul 2010 11:08:10 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjQGAJrsTExQW+UMgWdsb2JhbACTGYxHFQEBFiIiiBe2KoU2BIQugyWBEQ
X-IronPort-AV: E=Sophos;i="4.55,260,1278280800"; 
   d="scan'208";a="64407430"
Received: from lo.gmane.org ([80.91.229.12])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 26 Jul 2010 11:08:10 +0200
Received: from list by lo.gmane.org with local (Exim 4.69)
	(envelope-from <gclci-caml-list@m.gmane.org>)
	id 1OdJfN-0005eD-Da
	for caml-list@inria.fr; Mon, 26 Jul 2010 11:08:09 +0200
Received: from ks368928.kimsufi.com ([94.23.39.26])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Mon, 26 Jul 2010 11:08:09 +0200
Received: from sylvain by ks368928.kimsufi.com with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Mon, 26 Jul 2010 11:08:09 +0200
X-Injected-Via-Gmane: http://gmane.org/
To: caml-list@inria.fr
From: Sylvain Le Gall <sylvain@le-gall.net>
Subject: Re: scalable web apps
Date: Mon, 26 Jul 2010 09:08:00 +0000 (UTC)
Lines: 38
Message-ID: <slrni4qk3g.e23.sylvain@gallu.homelinux.org>
References: <863869.15208.qm@web111515.mail.gq1.yahoo.com>
 <E842FCA4-B51A-43AB-BDA8-8C1FDF198FEA@wanadoo.fr>
X-Complaints-To: usenet@dough.gmane.org
X-Gmane-NNTP-Posting-Host: ks368928.kimsufi.com
User-Agent: slrn/pre1.0.0-11 (Linux)
X-Spam: no; 0.00; le-gall:01 scalable:01 trivial:01 struct:01 scm:98 scm:98 wrote:01 wrote:01 checking:02 python:03 languages:03 languages:03 programming:03 root:04 root:04 

Hello,

On 25-07-2010, Yoann Padioleau <padator@wanadoo.fr> wrote:
> On Jul 25, 2010, at 2:45 PM, Dario Teixeira wrote:
>> 
>> 
>>> Or if you prefer think of it this way: People are using really
>>> unsuitable languages (PHP) and really slow languages (Ruby, PHP,
>>> Python, Perl) on some massive websites out there.
>> 
>> Yeap.  Personally, I find Ocsigen's greatest advantage to be the safety
>> and expressiveness that it brings to backend programming (and soon also
>> to the frontend).  The fact that it's also fast is just icing on the cake...
>
> My biggest issue with OCsigen is the lack of documentation and examples.
> With rails you got lots of books, and you got example of non trivial websites
> like a mini amazon (called depot: http://pragprog.com/titles/rails2/source_code)
> in less than 2000 lines of code.
>

There are examples of ocsigen websites:
http://ocsigen.org/ocsimore/sources/
https://forge.ocamlcore.org/scm/viewvc.php/?root=ocsforge
http://ocsigen.org/ocsigenserver/sources/examples

You could even found some of them outside ocsigen websites:
https://forge.ocamlcore.org/scm/viewvc.php/?root=lambdoc
http://github.com/mfp/ocsiblog

But, I think the documentation issue is a chicken and egg problem. If
more people are interested in ocsigen, the documentation will improve...

I am experimenting with ocsigen since one month and I think it is a good
framework. It provides a good type checking of HTML struct, errors
outputted are not very clear, but you know where the problem is.

Regards,
Sylvain Le Gall

