Return-Path: <info@gerd-stolpmann.de>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 689FDBC58
	for <caml-list@yquem.inria.fr>; Wed,  7 Jul 2010 00:07:01 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Av8CAFpGM0zU4xEIkGdsb2JhbACDHZxmFQEBAQEJCQwHEQMfry2RMgKBJ4MKcgQ
X-IronPort-AV: E=Sophos;i="4.53,548,1272837600"; 
   d="scan'208";a="62843227"
Received: from moutng.kundenserver.de ([212.227.17.8])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 07 Jul 2010 00:07:01 +0200
Received: from office1.lan.sumadev.de (dslb-084-059-064-235.pools.arcor-ip.net [84.59.64.235])
	by mrelayeu.kundenserver.de (node=mreu2) with ESMTP (Nemesis)
	id 0MRQR2-1OhHsB2VWy-00TOqJ; Wed, 07 Jul 2010 00:06:59 +0200
Received: from [192.168.5.106] (dslb-084-059-064-235.pools.arcor-ip.net [84.59.64.235])
	by office1.lan.sumadev.de (Postfix) with ESMTPA id 447EA5F701;
	Wed,  7 Jul 2010 00:06:59 +0200 (CEST)
Subject: Re: [Caml-list] OCaml 3.12.0+beta1 on Cygwin 1.7.5
From: Gerd Stolpmann <info@gerd-stolpmann.de>
To: Taylor Venable <tcvena@gmail.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <AANLkTin-Qm7O8xgzjc4m-3llEoHyk1XAxyi3gOwxabmG@mail.gmail.com>
References: <AANLkTin-Qm7O8xgzjc4m-3llEoHyk1XAxyi3gOwxabmG@mail.gmail.com>
Content-Type: text/plain; charset="UTF-8"
Date: Wed, 07 Jul 2010 00:06:55 +0200
Message-ID: <1278454015.14359.102.camel@thinkpad>
Mime-Version: 1.0
X-Mailer: Evolution 2.28.1 
Content-Transfer-Encoding: 7bit
X-Provags-ID: V02:K0:1kSEetSP+00lPFTu5FQf/v+5okyFpyaFM/2lvDzZWKP
 EfHAzhTckBNseHC/q8Gz1pJDBu3jfLSN8pcIvCsM2cS2mD69jE
 GOcG+zxCoSGUzBds0DznSbpjxsQBY0o3TKlNOQ1kRfFlmPZrjL
 VL0Hq7Xy0pQilV2ZqRWQScX4p/CQxVjbOqB/OKxvUj5/7u29T6
 zF9jUq5QH/e9yCryL6/cA==
X-Spam: no; 0.00; ocaml:01 cygwin:01 gerd:01 stolpmann:01 ocaml:01 cygwin:01 makefile:01 -ldl:01 usr:01 lib:01 bug:01 bytecode:01 bytecode:01 ocamlrun:01 trivial:01 

Am Dienstag, den 06.07.2010, 17:36 -0400 schrieb Taylor Venable:
> Hi there, I'm thinking of writing some programs in OCaml to assist a
> custom build infrastructure (currently 95% Tcl, 5% external Lua
> programs) that we use at work.  Since we build on Windows, Mac, and
> Linux I have to make sure that whatever I end up writing works in all
> three.  I haven't written much OCaml in my life, and the little that I
> did was probably five years ago, but any tools I write will have to be
> usable for a while.  So I tried compiling OCaml 3.12.0+beta1 in Cygwin
> 1.7.5 -- the information I found about it seemed to imply that it
> should work.  I put flexdll in the PATH and I was able to use the
> configure script and "make world.opt" with only a single problem:
> there were lots of linker errors when it came to building
> tools/objinfo_helper.exe, symbols like _lbasename, _sch_istable, and
> _objalloc_free could not be found.  [I'd paste the full error but I
> forgot to email it to my private address today and the machine is in
> corporate lockdown mode, so I can't access it right now, but I can
> obtain it tomorrow at work if anybody would like to see the full
> message.]  The way to fix it, for me anyway, was to modify the
> definition of LIBBFD_LINK in config/Makefile (which started out as
> "-lbfd -ldl") to append to it "-lintl -lz /usr/lib/libiberty.a"; and
> after that everything worked.  I don't know if that constitutes a
> problem with the configure script or just something about how my
> Cygwin is installed, but I wanted to mention it somewhere in case it
> was a bug.
> 
> In addition to that, I have a question: is bytecode compatible across
> operating systems and/or CPU architectures?  In other words, if I
> compile to bytecode on Linux/x86, can I run that using ocamlrun on
> Windows/x86 or Linux/amd64?

Trivial programs: yes. (As "trivial" as the ocaml compiler which uses
the same bytecode to bootstrap on all platforms.) There is a problem
with some libraries, however, because they differ by platform, for
example the unix library (i.e. unix.cma is different on Linux and
Windows).

You can try to work around by linking ad-hoc, but you need the "ocaml"
executable then, e.g.

ocaml unix.cma your_library.cma your_script.ml

which then links with the unix.cma that is locally installed, and
immediately runs the program. At least the module checksums for unix.cma
should be identical on all platforms.

Gerd
-- 
------------------------------------------------------------
Gerd Stolpmann, Bad Nauheimer Str.3, 64289 Darmstadt,Germany 
gerd@gerd-stolpmann.de          http://www.gerd-stolpmann.de
Phone: +49-6151-153855                  Fax: +49-6151-997714
------------------------------------------------------------

