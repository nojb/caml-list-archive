Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA04485 for caml-redistribution; Wed, 16 Jun 1999 02:34:13 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA03472 for <caml-list@pauillac.inria.fr>; Tue, 15 Jun 1999 23:45:26 +0200 (MET DST)
Received: from mail2.digital.com (mail2.digital.com [204.123.2.56])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id XAA24929
	for <caml-list@inria.fr>; Tue, 15 Jun 1999 23:45:18 +0200 (MET DST)
Received: from src-mail.pa.dec.com (src-mail.pa.dec.com [16.4.16.35])
	by mail2.digital.com (8.9.2/8.9.2/WV2.0g) with ESMTP id OAA11485
	for <caml-list@inria.fr>; Tue, 15 Jun 1999 14:45:17 -0700 (PDT)
Received: by src-mail.pa.dec.com; id OAA26614; Tue, 15 Jun 1999 14:45:16 -0700 (PDT)
Received: (from fessant@localhost)
	by virtualc5.pa.dec.com (8.9.3/8.9.3) id OAA08914;
	Tue, 15 Jun 1999 14:45:11 -0700
From: Fabrice Le Fessant <fessant@pa.dec.cmo>
Message-ID: <14182.51559.452813.300967@virtualc5.pa.dec.com>
Date: Tue, 15 Jun 1999 14:45:11 -0700 (PDT)
To: caml-list@inria.fr
Subject: Objects contrib
X-Mailer: VM 6.62 under Emacs 19.34.1
Reply-To: fessant@pa.dec.com
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain; charset=iso-8859-1
Sender: weis


I have made a small patch to ocaml-2.02 to allow safe casts of objects.
The patch adds two new keywords "implements" and "cast". 

 - "implements" ("implements c1 c2") is used to declare that objects
from a class c1 can be cast to the type of another class
c2. Implements checks at compile time that a such cast is
safe. Polymorphic classes (class ['a] ...)  are not allowed as
"implements" parameters. However, derived classes are allowed 
(class b = [int] t). By default, casting objects to their original class
is always allowed without using "implements", but all other casts must be
precedeed by an "implements" which allows them.

- "cast" ("cast o1 c1") is used to cast an object o1 to the type of a class c1.
A runtime check is performed to verify that the original class of the object
can be cast to the new class (thanks to an "implements" instruction). If
not correct, a (Failure "Cast failure") is raised.

Here is an example of use. Such a cast is interesting to retrieve the
original type of an object after it has been subtyped to be stored in
a generic structure.

class t1 () =
  object 
  method a = 0
  end;;

class t2 () = 
  object
  method b = 1
  method a = 0
  end;;

let o1 = new t1 ();;
let o2 = new t2 ();; (* val o2 : t2 *)

let x = (o2 :> t1);; (* val x : t1 *)
let y = cast x t2;; (* cast x to its original class, val y : t2 *)

implements t2 t1;; (* t2 implements the interface of t1 *)
let x = (o2 :> < >);; (* val x: < > no methods *)
let y = cast x t1;; (* cast x to the interface of t1, val y : t1 *)

let z = cast o1 t2;;  (* ERROR: Failure "Cast failure" *)
implements t1 t2;;    (* ERROR: not (t1 :> t2) *)

This patch is available at:
http://pauillac.inria.fr/~lefessan/src/patch-cast.tar.gz

- Fabrice LE FESSANT

Homepage: http://pauillac.inria.fr/~lefessan



