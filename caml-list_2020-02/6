Return-Path: <alan.schmitt@polytechnique.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 38AF67EC77
	for <caml-list@sympa.inria.fr>; Tue,  4 Feb 2020 09:47:46 +0100 (CET)
X-IronPort-AV: E=Sophos;i="5.70,398,1574118000"; 
   d="scan'208,217";a="434325706"
Received: from set.irisa.fr (HELO set) ([131.254.10.170])
  by mail2-relais-roc.national.inria.fr with ESMTP/TLS/AES256-GCM-SHA384; 04 Feb 2020 09:47:45 +0100
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr, comp@lists.orbitalfox.eu
Date: Tue, 04 Feb 2020 09:47:45 +0100
Message-ID: <878sliivri.fsf@polytechnique.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Hello

Here is the latest OCaml Weekly News, for the week of January 28 to
February 04, 2020.

Table of Contents
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

Multicore OCaml: January 2020 update
Use Case for Ephemerons?
`json-data-encoding' version 0.8 (was `ocplib-json-typed')
Developer position at Abacus Medicine, Copenhagen
Camlp5 version 7.11 release (4.10 compatibility)
Old CWN


Multicore OCaml: January 2020 update
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/multicore-ocaml-january-2020-update/5090/1>


Anil Madhavapeddy announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80

  Welcome to the January 2020 news update from the Multicore OCaml team!
  We're going to summarise our activites monthly to highlight what we're
  working on throughout this year. This update has kindly been assembled
  by @shakthimaan and @kayceesrk.

  The most common question we get is how to contribute to the overall
  multicore effort. As I [noted last year], we are now in the process of
  steadily upstreaming our efforts to mainline OCaml. Therefore, the
  best way by far to contribute is to test for regressions or
  opportunities for improvements in the patches that are outstanding in
  the main OCaml repository.

  A secondary benefit would be to review the PRs in the [multicore
  repository], but those tend to be more difficult to evaluate
  externally as they are being spotted as a result of stress testing at
  the moment. A negative contribution would be to raise discussion of
  orthogonal features or new project management mechanisms =E2=80=93 this t=
akes
  time and effort to reply to, and the team has a very full plate
  already now that the upstreaming has begun. We don't want to prevent
  those discussions from happening of course, but would appreciate if
  they were directed to the general OCaml bugtracker or another thread
  on this forum.

  We'll first go over the OCaml PRs and issues, then cover the multicore
  repository and our Sandmark benchmarking infrastructure. A new
  initiative to implement and test new parallel algorithms for Multicore
  OCaml is also underway.


[noted last year]
<https://discuss.ocaml.org/t/multicore-prerequisite-patches-appearing-in-re=
leased-ocaml-compilers-now/4408>

[multicore repository]
<https://github.com/ocaml-multicore/ocaml-multicore/pulls>

OCaml
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

=E2=97=8A Ongoing

  =E2=80=A2 [ocaml/ocaml#9082] Eventlog tracing system

    Eventlog is a proposal for a new tracing facility for OCaml runtime
    that provides metrics and counters, and uses the Binary Trace Format
    (CTF). The next step to get this merged is to incubate the tracing
    features in separate runtime variant, so it can be selected at
    application link time.

  =E2=80=A2 [ocaml/ocaml#8984] Towards a new closure representation

    A new layout for closures has been proposed for traversal by the
    garbage collector without the use of a page table. This is very much
    useful for Multicore OCaml and for performance improvements. The PR
    is awaiting review from other developers, and can then be rebased
    against trunk for testing and merge.

  =E2=80=A2 [ocaml-multicore/ocaml-multicore#187] Better Safe Points

    A patch to regularly poll for inter-domain interrupts to provide
    better safe points is actively being reviewed. This is to ensure
    that any pending interrupts are notified by the runtime system.

  =E2=80=A2 Work is underway on improving the marshaling (runtime/extern.c)=
 in
    upstream OCaml to avoid using GC mark bits to represent visitedness,
    and to use a hash table (addrmap) implementation.


  [ocaml/ocaml#9082] <https://github.com/ocaml/ocaml/pull/9082>

  [ocaml/ocaml#8984] <https://github.com/ocaml/ocaml/pull/8984>

  [ocaml-multicore/ocaml-multicore#187]
  <https://github.com/ocaml-multicore/ocaml-multicore/issues/187>


=E2=97=8A Completed

  The following PRs have been merged to upstream OCaml trunk:

  =E2=80=A2 [ocaml/ocaml#8713] Move C global variables to a dedicated struc=
ture

    This PR moves the C global variables to a "domain state"
    table. Every domain requires its own table of domain local
    variables, and hence this is required for Multicore runtime.

    This uncovered a number of [compatability issues] with the C header
    files, which were all included in the recent OCaml 4.10.0+beta2
    release via the next item.

  =E2=80=A2 [ocaml/ocaml#9253] Move back `caml_*' to thematic headers

    The `caml_*' definitions from runtime/caml/compatibility.h have been
    moved to provide a compatible API for OCaml versions 4.04 to
    4.10. This change is also useful for Multicore domains that have
    their own state.


  [ocaml/ocaml#8713] <https://github.com/ocaml/ocaml/pull/8713>

  [compatability issues] <https://github.com/ocaml/ocaml/issues/9205>

  [ocaml/ocaml#9253] <https://github.com/ocaml/ocaml/pull/9253>


Multicore OCaml
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  The following PRs have been merged into the Multicore OCaml trees:

  =E2=80=A2 [ocaml-multicore/ocaml-multicore#275] Fix lazy behaviour for
    Multicore

    A `caml_obj_forward_lazy()' function is implemented to handle lazy
    values in Multicore Ocaml.

  =E2=80=A2 [ocaml-multicore/ocaml-multicore#269] Move from a global
    `pools_to_rescan' to a domain-local one

    During stress testing, a segmentation fault occurred when a pool was
    being rescanned while a domain was allocating in to it. The rescan
    has now been moved to the domain local, and hence this situation
    will not occur again.

  =E2=80=A2 [ocaml-multicore/ocaml-multicore#268] Fix for a few space leaks

    The space leaks that occurred during domain spawning and termination
    when performing the stress tests have been fixed in this PR.

  =E2=80=A2 [ocaml-multicore/ocaml-multicore#272] Fix for DWARF CFI for
    non-allocating external calls

    The entry to `caml_classify_float_unboxed' caused a corrupted
    backtrace, and a fix that clearly specifies the boundary between
    OCaml and C has been provided.

  =E2=80=A2 An effort to implement a synchronized minor garbage collector f=
or
    Multicore OCaml is actively being researched and worked
    upon. Benchmarking for a work-sharing parallel stop-the-world branch
    against multicore trunk has been performed along with clearing
    technical debt, handling race conditions, and fixing segmentation
    faults. The C-API reversion changes have been tested and merged into
    the stop-the-world minor GC branch for Multicore OCaml.


[ocaml-multicore/ocaml-multicore#275]
<https://github.com/ocaml-multicore/ocaml-multicore/pull/275>

[ocaml-multicore/ocaml-multicore#269]
<https://github.com/ocaml-multicore/ocaml-multicore/pull/269>

[ocaml-multicore/ocaml-multicore#268]
<https://github.com/ocaml-multicore/ocaml-multicore/pull/268>

[ocaml-multicore/ocaml-multicore#272]
<https://github.com/ocaml-multicore/ocaml-multicore/pull/272>


Benchmarking
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 The [Sandmark] performance benchmarking infrastructure has been
    improved for backfilling data, tracking branches and naming
    benchmarks.

  =E2=80=A2 Numerical parallel benchmarks have been added to the Multicore
    compiler.

  =E2=80=A2 An [Irmin] macro benchmark has been included in Sandmark. A tes=
t for
    measuring Irmin's merge capabilities with Git as its filesystem is
    being tested with different read and write rates.

  =E2=80=A2 Work is also underway to implement parallel algorithms for N-bo=
dy,
    reverse-complement, k-nucleotide, binary-trees, fasta,
    fannkuch-redux, regex-redux, Game of Life, RayTracing, Barnes Hut,
    Count Graphs, SSSP and from the MultiMLton benchmarks to test on
    Multicore OCaml.


[Sandmark] <http://bench2.ocamllabs.io/>

[Irmin] <https://irmin.org>


Documentation
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 A chapter on Parallel Programming in Multicore OCaml is being
    written and an early draft will be made available to the community
    for their feedback. It is based on Domains, with examples to
    implement array sums, Pi approximation, and trapezoidal rules for
    definite integrals.


Acronyms
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 API: Application Programming Interface
  =E2=80=A2 CTF: Common Trace Format
  =E2=80=A2 CFI: Call Frame Information
  =E2=80=A2 DWARF: Debugging With Attributed Record Formats
  =E2=80=A2 GC: Garbage Collector
  =E2=80=A2 PR: Pull Request
  =E2=80=A2 SSSP: Single Source Shortest Path


Nicolas Tollenaere asked
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  If I may ask a question, I am curious about the status of integration
  of effects into the type system. According to this page
  <https://ocamlverse.github.io/content/future_ocaml.html#typed-algebraic-e=
ffects>,
  original plan was to merge an untyped version of effect, before it was
  decided to integrate them into the system. I have seen this
  presentation of leo white on this matter
  <https://www.janestreet.com/tech-talks/effective-programming/> along
  with this one <https://www.youtube.com/watch?v=3DibpUJmlEWi4> (from
  2016). My understanding was that, at the time of the last
  presentation, there was still some theoretical issues to be solved
  (although the speaker did not seem too worried about finding some way
  around eventually). I have no idea about the current status of the
  project. Reading your post it seems that you are now in an integration
  phase (PR reviews and all) that would imply that you're done with
  (most) theoretical questions. But that could either mean that you are
  integrating an untyped version of effects (and the type system is let
  for future development) or that you have indeed settled on a
  design. Which one is it ? Anyway, thanks for the post and the work in
  general, this project seems awesome (even if I did not dive into it
  too much until now)


Anil Madhavapeddy replied
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Good question; our current focus in getting the runtime components
  upstreamed (the "Domains" API) and some of the mechanisms that could
  be used by an effect system.  We haven't yet settled on a final design
  for an effect extension to OCaml, but the general preference is to
  skip integrating an untyped effect system if a typed version lands in
  the right timescales. This will happen after all the runtime pieces
  are upstreamed, which will allow everyone to use multicore parallelism
  via the lower-level Domains API.


Use Case for Ephemerons?
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/use-case-for-ephemerons/2838/3>


Continuing this old thread, Yawar Amin said
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80

  [Here's another use] (disclaimer: this is my project).

  What's happening here is that I'm using an 'ephemeral cache' (i.e. a
  cache backed by an ephemeron hash table, [here]) to store subscribers
  to a 'topic', i.e. a pub-sub bus. You get a subscription token when
  you subscribe to a topic, and part of that token is the cache key. The
  cache is 'ephemeral' so as soon as the subscription token goes out of
  scope, it and its corresponding subscription (concretely, the stream
  and its push function) are automatically deleted from the cache.

  Hence, there's no 'unsubscribe' or 'close topic' functionality=E2=80=93it=
's
  assumed that you want to unsubscribe if you let the subscription token
  go out of scope.


[Here's another use]
<https://github.com/yawaramin/re-web/blob/766da0c0e06652824e34416bc518ee371=
97a90fb/ReWeb/Topic.ml>

[here]
<https://github.com/yawaramin/re-web/blob/766da0c0e06652824e34416bc518ee371=
97a90fb/ReWeb/Cache.ml#L41>


`json-data-encoding' version 0.8 (was `ocplib-json-typed')
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-json-data-encoding-version-0-8-was-ocpli=
b-json-typed/5095/1>


Rapha=C3=ABl Proust announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I'm happy to announce that Nomadic Labs is now in charge of the
  development, maintenance and release of `json-data-encoding' =E2=80=93 the
  library previously known as `ocplib-json-typed'. Even though we are
  changing to a more descriptive name, we are maintaining continuity of
  version numbers. As a result, this is an announce for the version
  `0.8'.

  The library `json-data-encoding' lets you define encodings for a given
  OCaml type, and use that encoding to encode values of that type into
  JSON or decode JSON into values of that type. The library supports
  multiple JSON backends: `Ezjsonm', `Yojson', native browser
  representation (for `js_of_ocaml', via the package
  `json-data-encoding-browser') and `BSON' (via the package
  `json-data-encoding-bson').

  It is available via `opam' (`opam install json-data-encoding') and
  hosted on <https://gitlab.com/nomadic-labs/json-data-encoding/>

  Changes from the version v0.7 include:
  =E2=80=A2 extensive tests using `Crowbar' (adapted from similar tests on
    `data-encoding' originally by @gasche)
  =E2=80=A2 minor documentation improvements
  =E2=80=A2 improved self documentation capabilities for unions' cases (wor=
k by
    @smondet)
  =E2=80=A2 improved schema equality (work by @rbardou)


Developer position at Abacus Medicine, Copenhagen
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/developer-position-at-abacus-medicine-copenh=
agen/5119/1>


mokn announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Abacus Medicine has an open developer position. We do parallel
  distribution of medicine in EU and for that we have developed a system
  to handle the trading. A part of this system is developed in OCaml.

  Unfortunately the job description is only in danish, but we do accept
  applications in english: [Job description]


[Job description]
<https://www.jobindex.dk/jobannonce/351439/software-developer>


Camlp5 version 7.11 release (4.10 compatibility)
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-camlp5-version-7-11-release-4-10-compati=
bility/5121/1>


Chet Murthy announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  New release 7.11 of Camlp5. Compatible with all OCaml versions >=3D
  4.00.0, latest OCaml version 4.10+beta2 included.

  Main improvement: compatible with 4.10's blank module names and
  generative functors.

  Home page, including downloading and documentation at:
  <https://camlp5.github.io/>

  Enjoy!

  N.B. I'm new to helping out with camlp5, so might have made some
  mistakes; any users who find problems should contact me either
  directly, or (better) thru issues on
  <https://github.com/camlp5/camlp5/releases> and I'll be sure to get
  right on it.

  N.B.#2: There are still lots of gaps between current Ocaml, and
  Camlp5's support; I'm working on fixing that, and there'll soon be a
  release that brings camlp5 as up-to-date as possible with Ocaml.


Old CWN
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  [online].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <http://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <http://alan.petitepomme.net/cwn/cwn.rss>

[online] <http://lists.idyll.org/listinfo/caml-news-weekly/>

[Alan Schmitt] <http://alan.petitepomme.net/>


--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2020-02-04 Tue 09:44 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org mode" />
<style type=3D"text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
<script type=3D"text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2019 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target =3D document.getElementById(id);
   if(null !=3D target) {
     elem.cacheClassElem =3D elem.className;
     elem.cacheClassTarget =3D target.className;
     target.className =3D "code-highlighted";
     elem.className   =3D "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target =3D document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className =3D elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className =3D elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"http://alan.petitepomme.net/cwn/2020.01.28.html">Previous Week</=
a> <a href=3D"http://alan.petitepomme.net/cwn/index.html">Up</a> <a href=3D=
"http://alan.petitepomme.net/cwn/2020.02.11.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of January 28 to Februar=
y 04, 2020.
</p>

<div id=3D"table-of-contents">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents">
<ul>
<li><a href=3D"#1">Multicore OCaml: January 2020 update</a></li>
<li><a href=3D"#2">Use Case for Ephemerons?</a></li>
<li><a href=3D"#3"><code>json-data-encoding</code> version 0.8 (was <code>o=
cplib-json-typed</code>)</a></li>
<li><a href=3D"#4">Developer position at Abacus Medicine, Copenhagen</a></l=
i>
<li><a href=3D"#5">Camlp5 version 7.11 release (4.10 compatibility)</a></li>
<li><a href=3D"#org11d32fb">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-orge097165" class=3D"outline-2">
<h2 id=3D"1">Multicore OCaml: January 2020 update</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/multicore-ocaml-january-202=
0-update/5090/1">https://discuss.ocaml.org/t/multicore-ocaml-january-2020-u=
pdate/5090/1</a>
</p>
</div>

<div id=3D"outline-container-org30dc03a" class=3D"outline-3">
<h3 id=3D"org30dc03a">Anil Madhavapeddy announced</h3>
<div class=3D"outline-text-3" id=3D"text-org30dc03a">
<p>
Welcome to the January 2020 news update from the Multicore OCaml team! We'r=
e going to summarise our activites monthly to highlight what we're working =
on throughout this year. This update has kindly been assembled by @shakthim=
aan and @kayceesrk.
</p>

<p>
The most common question we get is how to contribute to the overall multico=
re effort. As I <a href=3D"https://discuss.ocaml.org/t/multicore-prerequisi=
te-patches-appearing-in-released-ocaml-compilers-now/4408">noted last year<=
/a>, we are now in the process of steadily upstreaming our efforts to mainl=
ine OCaml. Therefore, the best way by far to contribute is to test for regr=
essions or opportunities for improvements in the patches that are outstandi=
ng in the main OCaml repository.
</p>

<p>
A secondary benefit would be to review the PRs in the <a href=3D"https://gi=
thub.com/ocaml-multicore/ocaml-multicore/pulls">multicore repository</a>, b=
ut those tend to be more difficult to evaluate externally as they are being=
 spotted as a result of stress testing at the moment. A negative contributi=
on would be to raise discussion of orthogonal features or new project manag=
ement mechanisms &#x2013; this takes time and effort to reply to, and the t=
eam has a very full plate already now that the upstreaming has begun. We do=
n't want to prevent those discussions from happening of course, but would a=
ppreciate if they were directed to the general OCaml bugtracker or another =
thread on this forum.
</p>

<p>
We'll first go over the OCaml PRs and issues, then cover the multicore repo=
sitory and our Sandmark benchmarking infrastructure. A new initiative to im=
plement and test new parallel algorithms for Multicore OCaml is also underw=
ay.
</p>
</div>

<div id=3D"outline-container-org580cd14" class=3D"outline-4">
<h4 id=3D"org580cd14">OCaml</h4>
<div class=3D"outline-text-4" id=3D"text-org580cd14">
</div>
<ul class=3D"org-ul">
<li><a id=3D"org22beea8"></a>Ongoing<br />
<div class=3D"outline-text-5" id=3D"text-org22beea8">
<ul class=3D"org-ul">
<li><p>
<a href=3D"https://github.com/ocaml/ocaml/pull/9082">ocaml/ocaml#9082</a> E=
ventlog tracing system
</p>

<p>
Eventlog is a proposal for a new tracing facility for OCaml runtime that pr=
ovides metrics and counters, and uses the Binary Trace Format (CTF). The ne=
xt step to get this merged is to incubate the tracing features in separate =
runtime variant, so it can be selected at application link time.
</p></li>

<li><p>
<a href=3D"https://github.com/ocaml/ocaml/pull/8984">ocaml/ocaml#8984</a> T=
owards a new closure representation
</p>

<p>
A new layout for closures has been proposed for traversal by the  garbage c=
ollector without the use of a page table. This is very much useful for Mult=
icore OCaml and for performance improvements. The PR is awaiting review fro=
m other developers, and can then be rebased against trunk for testing and m=
erge.
</p></li>

<li><p>
<a href=3D"https://github.com/ocaml-multicore/ocaml-multicore/issues/187">o=
caml-multicore/ocaml-multicore#187</a> Better Safe Points
</p>

<p>
A patch to regularly poll for inter-domain interrupts to provide better saf=
e points is actively being reviewed. This is to ensure that any pending int=
errupts are notified by the runtime system.
</p></li>

<li>Work is underway on improving the marshaling (runtime/extern.c) in upst=
ream OCaml to avoid using GC mark bits to represent visitedness, and to use=
 a hash table (addrmap) implementation.</li>
</ul>
</div>
</li>

<li><a id=3D"org05f4c68"></a>Completed<br />
<div class=3D"outline-text-5" id=3D"text-org05f4c68">
<p>
The following PRs have been merged to upstream OCaml trunk:
</p>

<ul class=3D"org-ul">
<li><p>
<a href=3D"https://github.com/ocaml/ocaml/pull/8713">ocaml/ocaml#8713</a> M=
ove C global variables to a dedicated structure
</p>

<p>
This PR moves the C global variables to a "domain state" table. Every domai=
n requires its own table of domain local variables, and hence this is requi=
red for Multicore runtime.
</p>

<p>
This uncovered a number of <a href=3D"https://github.com/ocaml/ocaml/issues=
/9205">compatability issues</a> with the C header files, which were all inc=
luded in the recent OCaml 4.10.0+beta2 release via the next item.
</p></li>

<li><p>
<a href=3D"https://github.com/ocaml/ocaml/pull/9253">ocaml/ocaml#9253</a> M=
ove back <code>caml_*</code> to thematic headers
</p>

<p>
The <code>caml_*</code> definitions from runtime/caml/compatibility.h have =
been moved to provide a compatible API for OCaml versions 4.04 to 4.10. Thi=
s change is also useful for Multicore domains that have their own state.
</p></li>
</ul>
</div>
</li>
</ul>
</div>

<div id=3D"outline-container-orga396ebf" class=3D"outline-4">
<h4 id=3D"orga396ebf">Multicore OCaml</h4>
<div class=3D"outline-text-4" id=3D"text-orga396ebf">
<p>
The following PRs have been merged into the Multicore OCaml trees:
</p>

<ul class=3D"org-ul">
<li><p>
<a href=3D"https://github.com/ocaml-multicore/ocaml-multicore/pull/275">oca=
ml-multicore/ocaml-multicore#275</a>
Fix lazy behaviour for Multicore
</p>

<p>
A <code>caml_obj_forward_lazy()</code> function is implemented to handle la=
zy values in Multicore Ocaml.
</p></li>

<li><p>
<a href=3D"https://github.com/ocaml-multicore/ocaml-multicore/pull/269">oca=
ml-multicore/ocaml-multicore#269</a>
Move from a global <code>pools_to_rescan</code> to a domain-local one
</p>

<p>
During stress testing, a segmentation fault occurred when a pool was  being=
 rescanned while a domain was allocating in to it. The rescan has now been =
moved to the domain local, and hence this situation will not occur again.
</p></li>

<li><p>
<a href=3D"https://github.com/ocaml-multicore/ocaml-multicore/pull/268">oca=
ml-multicore/ocaml-multicore#268</a>
Fix for a few space leaks
</p>

<p>
The space leaks that occurred during domain spawning and termination when p=
erforming the stress tests have been fixed in this PR.
</p></li>

<li><p>
<a href=3D"https://github.com/ocaml-multicore/ocaml-multicore/pull/272">oca=
ml-multicore/ocaml-multicore#272</a>
Fix for DWARF CFI for non-allocating external calls
</p>

<p>
The entry to <code>caml_classify_float_unboxed</code> caused a corrupted ba=
cktrace, and a fix that clearly specifies the boundary between OCaml and C =
has been provided.
</p></li>

<li>An effort to implement a synchronized minor garbage collector for Multi=
core OCaml is actively being researched and worked upon. Benchmarking for a=
 work-sharing parallel stop-the-world branch against multicore trunk has be=
en performed along with clearing technical debt, handling race conditions, =
and fixing segmentation faults. The C-API reversion changes have been teste=
d and merged into the stop-the-world minor GC branch for Multicore OCaml.</=
li>
</ul>
</div>
</div>

<div id=3D"outline-container-org9ad0703" class=3D"outline-4">
<h4 id=3D"org9ad0703">Benchmarking</h4>
<div class=3D"outline-text-4" id=3D"text-org9ad0703">
<ul class=3D"org-ul">
<li>The <a href=3D"http://bench2.ocamllabs.io/">Sandmark</a> performance be=
nchmarking infrastructure has been improved for backfilling data, tracking =
branches and naming benchmarks.</li>

<li>Numerical parallel benchmarks have been added to the Multicore compiler=
.</li>

<li>An <a href=3D"https://irmin.org">Irmin</a> macro benchmark has been inc=
luded in Sandmark. A test for measuring Irmin's merge capabilities with Git=
 as its filesystem is being tested with different read and write rates.</li>

<li>Work is also underway to implement parallel algorithms for N-body, reve=
rse-complement, k-nucleotide, binary-trees, fasta, fannkuch-redux, regex-re=
dux, Game of Life, RayTracing, Barnes Hut, Count Graphs, SSSP and from the =
MultiMLton benchmarks to test on Multicore OCaml.</li>
</ul>
</div>
</div>

<div id=3D"outline-container-orgaffa0c7" class=3D"outline-4">
<h4 id=3D"orgaffa0c7">Documentation</h4>
<div class=3D"outline-text-4" id=3D"text-orgaffa0c7">
<ul class=3D"org-ul">
<li>A chapter on Parallel Programming in Multicore OCaml is being written a=
nd an early draft will be made available to the community for their feedbac=
k. It is based on Domains, with examples to implement array sums, Pi approx=
imation, and trapezoidal rules for definite integrals.</li>
</ul>
</div>
</div>

<div id=3D"outline-container-org6396925" class=3D"outline-4">
<h4 id=3D"org6396925">Acronyms</h4>
<div class=3D"outline-text-4" id=3D"text-org6396925">
<ul class=3D"org-ul">
<li>API: Application Programming Interface</li>
<li>CTF: Common Trace Format</li>
<li>CFI: Call Frame Information</li>
<li>DWARF: Debugging With Attributed Record Formats</li>
<li>GC: Garbage Collector</li>
<li>PR: Pull Request</li>
<li>SSSP: Single Source Shortest Path</li>
</ul>
</div>
</div>
</div>


<div id=3D"outline-container-orge0c9576" class=3D"outline-3">
<h3 id=3D"orge0c9576">Nicolas Tollenaere asked</h3>
<div class=3D"outline-text-3" id=3D"text-orge0c9576">
<p>
If I may ask a question, I am curious about the status of integration of ef=
fects into the type system. According to this page <a href=3D"https://ocaml=
verse.github.io/content/future_ocaml.html#typed-algebraic-effects">https://=
ocamlverse.github.io/content/future_ocaml.html#typed-algebraic-effects</a>,=
 original plan was to merge an untyped version of effect, before it was dec=
ided to integrate them into the system. I have seen this presentation of le=
o white on this matter <a href=3D"https://www.janestreet.com/tech-talks/eff=
ective-programming/">https://www.janestreet.com/tech-talks/effective-progra=
mming/</a> along with this one <a href=3D"https://www.youtube.com/watch?v=
=3DibpUJmlEWi4">https://www.youtube.com/watch?v=3DibpUJmlEWi4</a> (from 201=
6). My understanding was that, at the time of the last presentation, there =
was still some theoretical issues to be solved (although the speaker did no=
t seem too worried about finding some way around eventually). I have no ide=
a about the current status of the project. Reading your post it seems that =
you are now in an integration phase (PR reviews and all) that would imply t=
hat you're done with (most) theoretical questions. But that could either me=
an that you are integrating an untyped  version of effects  (and the type s=
ystem is let for future development) or that you have indeed settled on a d=
esign. Which one is it ? Anyway, thanks for the post and the work in genera=
l, this project seems awesome (even if I did not dive into it too much unti=
l now)
</p>
</div>
</div>


<div id=3D"outline-container-org3c2a5d4" class=3D"outline-3">
<h3 id=3D"org3c2a5d4">Anil Madhavapeddy replied</h3>
<div class=3D"outline-text-3" id=3D"text-org3c2a5d4">
<p>
Good question; our current focus in getting the runtime components upstream=
ed (the "Domains" API) and some of the mechanisms that could be used by an =
effect system.  We haven't yet settled on a final design for an effect exte=
nsion to OCaml, but the general preference is to skip integrating an untype=
d effect system if a typed version lands in the right timescales. This will=
 happen after all the runtime pieces are upstreamed, which will allow every=
one to use multicore parallelism via the lower-level Domains API.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org35ceeee" class=3D"outline-2">
<h2 id=3D"2">Use Case for Ephemerons?</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/use-case-for-ephemerons/283=
8/3">https://discuss.ocaml.org/t/use-case-for-ephemerons/2838/3</a>
</p>
</div>

<div id=3D"outline-container-orgb2a2876" class=3D"outline-3">
<h3 id=3D"orgb2a2876">Continuing this old thread, Yawar Amin said</h3>
<div class=3D"outline-text-3" id=3D"text-orgb2a2876">
<p>
<a href=3D"https://github.com/yawaramin/re-web/blob/766da0c0e06652824e34416=
bc518ee37197a90fb/ReWeb/Topic.ml">Here's another use</a> (disclaimer: this =
is my project).
</p>

<p>
What's happening here is that I'm using an 'ephemeral cache' (i.e. a cache =
backed by an ephemeron hash table, <a href=3D"https://github.com/yawaramin/=
re-web/blob/766da0c0e06652824e34416bc518ee37197a90fb/ReWeb/Cache.ml#L41">he=
re</a>) to store subscribers to a 'topic', i.e. a pub-sub bus. You get a su=
bscription token when you subscribe to a topic, and part of that token is t=
he cache key. The cache is 'ephemeral' so as soon as the subscription token=
 goes out of scope, it and its corresponding subscription (concretely, the =
stream and its push function) are automatically deleted from the cache.
</p>

<p>
Hence, there's no 'unsubscribe' or 'close topic' functionality=E2=80=93it's=
 assumed that you want to unsubscribe if you let the subscription token go =
out of scope.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org6d8a5cf" class=3D"outline-2">
<h2 id=3D"3"><code>json-data-encoding</code> version 0.8 (was <code>ocplib-=
json-typed</code>)</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-json-data-encoding-vers=
ion-0-8-was-ocplib-json-typed/5095/1">https://discuss.ocaml.org/t/ann-json-=
data-encoding-version-0-8-was-ocplib-json-typed/5095/1</a>
</p>
</div>

<div id=3D"outline-container-orgbb98c1a" class=3D"outline-3">
<h3 id=3D"orgbb98c1a">Rapha=C3=ABl Proust announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgbb98c1a">
<p>
I'm happy to announce that Nomadic Labs is now in charge of the development=
, maintenance and release of <code>json-data-encoding</code> =E2=80=93 the =
library previously known as <code>ocplib-json-typed</code>. Even though we =
are changing to a more descriptive name, we are maintaining continuity of v=
ersion numbers. As a result, this is an announce for the version <code>0.8<=
/code>.
</p>

<p>
The library <code>json-data-encoding</code> lets you define encodings for a=
 given OCaml type, and use that encoding to encode values of that type into=
 JSON or decode JSON into values of that type. The library supports multipl=
e JSON backends: <code>Ezjsonm</code>, <code>Yojson</code>, native browser =
representation (for <code>js_of_ocaml</code>, via the package <code>json-da=
ta-encoding-browser</code>) and <code>BSON</code> (via the package <code>js=
on-data-encoding-bson</code>).
</p>

<p>
It is available via <code>opam</code> (<code>opam install json-data-encodin=
g</code>) and hosted on <a href=3D"https://gitlab.com/nomadic-labs/json-dat=
a-encoding/">https://gitlab.com/nomadic-labs/json-data-encoding/</a>
</p>

<p>
Changes from the version v0.7 include:
</p>
<ul class=3D"org-ul">
<li>extensive tests using <code>Crowbar</code> (adapted from similar tests =
on <code>data-encoding</code> originally by @gasche)</li>
<li>minor documentation improvements</li>
<li>improved self documentation capabilities for unions' cases (work by @sm=
ondet)</li>
<li>improved schema equality (work by @rbardou)</li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-orga66b689" class=3D"outline-2">
<h2 id=3D"4">Developer position at Abacus Medicine, Copenhagen</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/developer-position-at-abacu=
s-medicine-copenhagen/5119/1">https://discuss.ocaml.org/t/developer-positio=
n-at-abacus-medicine-copenhagen/5119/1</a>
</p>
</div>

<div id=3D"outline-container-orgadb8a52" class=3D"outline-3">
<h3 id=3D"orgadb8a52">mokn announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgadb8a52">
<p>
Abacus Medicine has an open developer position. We do parallel distribution=
 of medicine in EU and for that we have developed a system to handle the tr=
ading. A part of this system is developed in OCaml.
</p>

<p>
Unfortunately the job description is only in danish, but we do accept appli=
cations in english:
<a href=3D"https://www.jobindex.dk/jobannonce/351439/software-developer">Jo=
b description</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org272e89c" class=3D"outline-2">
<h2 id=3D"5">Camlp5 version 7.11 release (4.10 compatibility)</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-camlp5-version-7-11-rel=
ease-4-10-compatibility/5121/1">https://discuss.ocaml.org/t/ann-camlp5-vers=
ion-7-11-release-4-10-compatibility/5121/1</a>
</p>
</div>

<div id=3D"outline-container-org8cd60fb" class=3D"outline-3">
<h3 id=3D"org8cd60fb">Chet Murthy announced</h3>
<div class=3D"outline-text-3" id=3D"text-org8cd60fb">
<p>
New release 7.11 of Camlp5. Compatible with all OCaml versions &gt;=3D 4.00=
.0, latest OCaml version 4.10+beta2 included.
</p>

<p>
Main improvement: compatible with 4.10's blank module names and generative =
functors.
</p>

<p>
Home page, including downloading and documentation at: <a href=3D"https://c=
amlp5.github.io/">https://camlp5.github.io/</a>
</p>

<p>
Enjoy!
</p>

<p>
N.B. I'm new to helping out with camlp5, so might have made some mistakes; =
any users who find problems should contact me either directly, or (better) =
thru issues on <a href=3D"https://github.com/camlp5/camlp5/releases">https:=
//github.com/camlp5/camlp5/releases</a> and I'll be sure to get right on it.
</p>

<p>
N.B.#2: There are still lots of gaps between current Ocaml, and Camlp5's su=
pport; I'm working on fixing that, and there'll soon be a release that brin=
gs camlp5 as up-to-date as possible with Ocaml.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org11d32fb" class=3D"outline-2">
<h2 id=3D"org11d32fb">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org11d32fb">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"http://alan.petitepomme.net/cwn/">the archive</a> or the <a=
 href=3D"http://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archives<=
/a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname">
<p>
<a href=3D"http://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--
