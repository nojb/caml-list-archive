Return-Path: <rich@annexia.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id D21B97F3B1
	for <caml-list@sympa.inria.fr>; Sat, 29 Feb 2020 11:32:39 +0100 (CET)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=rich@annexia.org; spf=Pass smtp.mailfrom=rich@annexia.org; spf=None smtp.helo=postmaster@mail.annexia.org
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  rich@annexia.org) identity=pra; client-ip=81.187.83.230;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rich@annexia.org";
  x-sender="rich@annexia.org"; x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  rich@annexia.org designates 81.187.83.230 as permitted
  sender) identity=mailfrom; client-ip=81.187.83.230;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rich@annexia.org";
  x-sender="rich@annexia.org"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail.annexia.org) identity=helo;
  client-ip=81.187.83.230;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="rich@annexia.org";
  x-sender="postmaster@mail.annexia.org";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3Ad4lRURXmiNsB7WOTrMlK35OR1sfV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbBaOt8tkgFKBZ4jH8fUM07OQ7/m8HzVYud3Y7zgrS99laVwssY?=
 =?us-ascii?q?0uhQsuAcqIWwXQDcXBSGgEJvlET0Jv5HqhMEJYS47UblzWpWCuv3ZJQk2sfQV6?=
 =?us-ascii?q?Kf7oFYHMks+5y/69+4HJYwVPmTGxfa5+IA+5oAnMucQam5ZuJrotxhfGv3dFef?=
 =?us-ascii?q?ldyH91K16Ugxvz6cC88YJ5/S9Nofwh7clAUav7f6Q8U7NVCSktPn426sP2qxTN?=
 =?us-ascii?q?VBOD6XQAXGoYlBpIGBXF4wrhXpjtqCv6t/Fy1zecMMbrUL07QzWi76NsSB/1lC?=
 =?us-ascii?q?cKMiMy/W/LhsBsiq9QvQmsrAJjzYHKfI6VNeJ+fqLDctMcWWpBRdtaWyhYDo+h?=
 =?us-ascii?q?c4cDE+8NMOBFpIf/ulQOtwOzCwesCu3x1zFGhXH20qIm3Os8Ew7J0hctH84SvH?=
 =?us-ascii?q?nOsNn5KL0fXf6zwaLVzTvDdfRW2TLl5YTGbh4hoO2DXbJqfsrL1EYkCgPKgk+X?=
 =?us-ascii?q?p4D/Ijib0uMNs26F4Op7W+6klmkqqxtwojezxschkZPGhoQTyl/a+iR5wZw6Kc?=
 =?us-ascii?q?e/SE5hbt6pCZ1dvDyUOYtxR8MtWWBouCAix70HvJ67ZCwKx4oixxHBbfyHb5KH?=
 =?us-ascii?q?4g7iVOaWJzd0nndleLa5ih2v8kag0vXxW8qp3FpQsyZIkdvBumoO2hHd8MSLVP?=
 =?us-ascii?q?Vw8lun1D2SzQ7c8PtELloxlafDK54u3Lowlp0LvETGBCD2mUH2gLWMeUUi/Oin?=
 =?us-ascii?q?9evmYrT8qZOGMI90kA7+Prwvmsy5H+s4LhADUmuG9eimybHu/k/0TK9Jg/A4iK?=
 =?us-ascii?q?XVrp7XKdgDqq68GQBV04Ij6xilDzeh1dQVhWMHLFNZdxKHlIXmIVfOIPbmAvaw?=
 =?us-ascii?q?glSjii1nx/fcPr3uGpnNNGTMkK/9fbZh7E5R0BY8wspa55JQE70BJPPzWlTttN?=
 =?us-ascii?q?HDFR84Mwm0w/79B9ln14MeX3iPAq6DP6/Iv1+I/LFnH+7ZS4YfojfwL7Ae7P7j?=
 =?us-ascii?q?l3Ij0QsSdKOz3JYTLmuzHvl8Ll+xbn/lg9NHGmAP6FkQVuvv3Re4UDVTbmy+F5?=
 =?us-ascii?q?16w3dzKoWgAJyJDtS3gbeB9C69GJBGZ2kADUqDRyS7P76YUusBPXrBavRqlSYJ?=
 =?us-ascii?q?AP34E9d4hEOe8TTiwr8iFdL6vygRtJbtzt9wvraBnBc0+Cx1BoKayW7fFjgozF?=
 =?us-ascii?q?NNfCc/2eVEmWI40k2KiPMqivpeGMxS7rVOSAhobceBndw/MMj7X0f6RvnMSFui?=
 =?us-ascii?q?RYz2UzQ4T9Z3ytkIblZ8EpOllB+Rhyc=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DBCQCXPFpeW+ZTu1FmgkGCKSYBRSBVE?=
 =?us-ascii?q?iqNF4V7AUMKAwMGgTebPgkBAwEMHxAEAQGEQAKCBx8HAQQzBg4CEAEBBQEBAQI?=
 =?us-ascii?q?BAgMEAQYaFYVBTAyCOykBgn8BBTocIxALGAkTEg8FGA0KGoM6glYpr2uKPYE4j?=
 =?us-ascii?q?DkGeT5JgUeCMC4+iA6CLASNSEqIY4Iphz6PPwcDgjyHUY8IDByDSJdpqmCBaIF?=
 =?us-ascii?q?7fQg7gmwJRxgNljCGNUQwj3IBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DBCQCXPFpeW+ZTu1FmgkGCKSYBRSBVEiqNF4V7AUMKAwM?=
 =?us-ascii?q?GgTebPgkBAwEMHxAEAQGEQAKCBx8HAQQzBg4CEAEBBQEBAQIBAgMEAQYaFYVBT?=
 =?us-ascii?q?AyCOykBgn8BBTocIxALGAkTEg8FGA0KGoM6glYpr2uKPYE4jDkGeT5JgUeCMC4?=
 =?us-ascii?q?+iA6CLASNSEqIY4Iphz6PPwcDgjyHUY8IDByDSJdpqmCBaIF7fQg7gmwJRxgNl?=
 =?us-ascii?q?jCGNUQwj3IBAQ?=
X-IronPort-AV: E=Sophos;i="5.70,499,1574118000"; 
   d="scan'208";a="340794898"
X-MGA-submission: =?us-ascii?q?MDG0GEH9uJ5XuXr/YWtSJviRFq/uxkV7p7Ipgy?=
 =?us-ascii?q?rMY8fjKyPbg3b45Q0lEX8GHLNJQ3x+U4eoBcfHFFYO2JUyu1U8ldgeB7?=
 =?us-ascii?q?JmOTEi0uTYGVW/NvTGumR3dWY5NkTE/rQfnBQau/2KzlaChW1v3B6qVT?=
 =?us-ascii?q?jfxl4pj3ccGtVb0I9N/whCnA=3D=3D?=
Received: from 230.83.187.81.in-addr.arpa (HELO mail.annexia.org) ([81.187.83.230])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 29 Feb 2020 11:32:39 +0100
Received: by mail.annexia.org (Postfix, from userid 1000)
	id 3D852AC00D14; Sat, 29 Feb 2020 10:32:38 +0000 (GMT)
Date: Sat, 29 Feb 2020 10:32:38 +0000
From: "Richard W.M. Jones" <rich@annexia.org>
To: Gabriel Scherer <gabriel.scherer@gmail.com>
Cc: caml users <caml-list@inria.fr>
Message-ID: <20200229103238.GE11122@rich.annexia.org>
References: <20200229085319.GD11122@rich.annexia.org>
 <CAPFanBFcX2gLbdBVt=k+S6P79x2VpSH3CURQmecauR6xgJm=Ww@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <CAPFanBFcX2gLbdBVt=k+S6P79x2VpSH3CURQmecauR6xgJm=Ww@mail.gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Subject: Re: [Caml-list] #use is not textual inclusion

On Sat, Feb 29, 2020 at 10:09:51AM +0100, Gabriel Scherer wrote:
> I think that your example is rejected not because of the semantics of #use,
> but because toplevel directives in general are parsed at the level of
> toplevel *phrases*, and not possibly-in-depth structure items. In other
> words, a toplevel script is a sequence of structure items or toplevel
> directives, but directives are not (nestable) structure items. The
> documentation seems correct -- consistent with this behavior.
> 
> I see a way to do what you want using #mod_use, but it is a bit indirect
> because #mod_use does not directly support signature checking:
> 
>     module type Foo_sig = sig ... end
>     #mod_use "implementation.ml";;
>     module Foo = (Implementation : Foo_sig);;
> 
> This approach defines a suitably restricted Foo, but it also exposes the
> Implementation module in the rest of the scope. You can avoid this if you
> use the same .ml name as the module name you want, so that shadowing hides
> the implementation module
> 
>     module type Foo_sig = sig ... end
>     #mod_use "foo.ml <http://implementation.ml>";;
>     module Foo = (Foo : Foo_sig);;

These do pretty much what I want, thanks.

Rich.

