Return-Path: <markus.mottl@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.8 required=5.0 tests=AWL,DNS_FROM_RFC_POST,
	SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id BC338BBC4
	for <caml-list@yquem.inria.fr>; Fri, 20 Feb 2009 23:43:48 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlcGADzBnknRVdmdcGdsb2JhbACDHpB7PwEMCgsHD64wgQWPQQEDAQOEDAaGJA
X-IronPort-AV: E=Sophos;i="4.38,243,1233529200"; 
   d="scan'208";a="35537730"
Received: from mail-gx0-f157.google.com ([209.85.217.157])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 20 Feb 2009 23:43:48 +0100
Received: by gxk1 with SMTP id 1so578170gxk.9
        for <caml-list@inria.fr>; Fri, 20 Feb 2009 14:43:47 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:in-reply-to:references
         :date:message-id:subject:from:to:cc:content-type
         :content-transfer-encoding;
        bh=9jSWYMzFdIHMSZX4rFzgZtlQjz1FLoKK6aLhnBfb5xk=;
        b=rZDuQNNnU+IY19W4aTST7TDN/r3CB977Zv029djUfhKIbV2rjaycA7NpXt8TbFOPDZ
         IYBYpM4XFI6q7qX5WUHsDUIpXMhcOwlTCIDh2QMRFvAo5SoYwAahi4G6NdoAZLHUZe4X
         YMdUx5avib3VJRCAVEo99Q9JJd45/WJIdBtik=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:content-transfer-encoding;
        b=jCB+K8P2kTllMF+8C6HBh/4KrdTXtrc9Rq5KXgmOLt4iwPUe1+DmeKr4JsJKynef4W
         Dbq17RY36QPPX8BPLro98aDlR8+LgEnMdF1eyjZSvNRlU98E+KubJO4WB0GctYlOhAM5
         +ZDz79jmNYn347oFep3MOr9l91NUIXmrLBdzo=
MIME-Version: 1.0
Received: by 10.90.99.6 with SMTP id w6mr42219agb.70.1235169825352; Fri, 20 
	Feb 2009 14:43:45 -0800 (PST)
In-Reply-To: <ef6818c20902201430y7473f4d1k3563995f3a154792@mail.gmail.com>
References: <243054520902200740j1d1874adib27645f6e090b073@mail.gmail.com>
	 <499EFA7E.7010400@inria.fr>
	 <243054520902201153q4efbe1f0j686bd7212b515c03@mail.gmail.com>
	 <2a1a1a0c0902201423o5ae7dd3dhb5c64da3c3255a69@mail.gmail.com>
	 <ef6818c20902201430y7473f4d1k3563995f3a154792@mail.gmail.com>
Date: Fri, 20 Feb 2009 17:43:45 -0500
Message-ID: <f8560b80902201443q39c106d1pcdee9193a3e4f7b3@mail.gmail.com>
Subject: Re: [Caml-list] speeding up matrix multiplication (newbie question)
From: Markus Mottl <markus.mottl@gmail.com>
To: "Will M. Farr" <farr@mit.edu>
Cc: Mike Lin <nilekim@gmail.com>, caml-list@inria.fr
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; markus:01 mottl:01 markus:01 mottl:01 blas:01 lapack:01 matrices:01 lacaml:01 matrices:01 ocaml:01 caml-list:01 newbie:02 bounds:02 checking:02 seems:03 

Unless you want to interface C-calls into BLAS/LAPACK directly without
bounds checking, releasing the OCaml-lock, and other "fru-fru", it
seems unlikely that you will get much of an advantage using those
libraries given the small size of your matrices.  E.g. Lacaml is
optimized for larger matrices (probably > 10x10).

I guess you should be fine rolling your own implementation for such
small matrices.

Regards,
Markus

-- 
Markus Mottl        http://www.ocaml.info        markus.mottl@gmail.com

