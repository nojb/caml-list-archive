Return-Path: <hcarty@mulethief.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.8 required=5.0 tests=AWL,SPF_SOFTFAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 3E344BBC4
	for <caml-list@yquem.inria.fr>; Sat, 21 Feb 2009 16:42:25 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AiQFANSvn0nRVdqgcGdsb2JhbACUGz8BDAoLBw+vE4VOiEqEDwY
X-IronPort-AV: E=Sophos;i="4.38,246,1233529200"; 
   d="scan'208";a="21489727"
Received: from mail-bw0-f160.google.com ([209.85.218.160])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 21 Feb 2009 16:42:24 +0100
Received: by bwz4 with SMTP id 4so3719858bwz.3
        for <caml-list@yquem.inria.fr>; Sat, 21 Feb 2009 07:42:24 -0800 (PST)
MIME-Version: 1.0
Sender: hcarty@mulethief.com
Received: by 10.103.6.18 with SMTP id j18mr2414466mui.33.1235230943991; Sat, 
	21 Feb 2009 07:42:23 -0800 (PST)
In-Reply-To: <200902211523.29271.jon@ffconsultancy.com>
References: <200902211523.29271.jon@ffconsultancy.com>
Date: Sat, 21 Feb 2009 10:42:23 -0500
X-Google-Sender-Auth: 78670ab2f8856992
Message-ID: <3a360f590902210742w73120bb5n5af494fff7789c16@mail.gmail.com>
Subject: Re: [Caml-list] invoke
From: "Hezekiah M. Carty" <hcarty@atmos.umd.edu>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; forks:01 ocaml's:01 2009:98 invoke:01 invoke:01 wrote:01 unix:01 caml-list:01 functions:01 implemented:02 tree:02 parallel:05 parallel:05 function:08 function:08 

On Sat, Feb 21, 2009 at 10:23 AM, Jon Harrop <jon@ffconsultancy.com> wrote:
>
> Is the "invoke" function that forks a Unix process to compute a future in
> parallel implemented in any of OCaml's third party libraries?

I think the parallel processing functions in Prelude.ml
(http://github.com/kig/preludeml/tree/master) are built around a
forking invoke function based on one you posted a while ago.

Hez

-- 
Hezekiah M. Carty
Graduate Research Assistant
University of Maryland
Department of Atmospheric and Oceanic Science

