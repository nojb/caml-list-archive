Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA01369; Sun, 5 Jan 2003 03:54:30 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA01366 for <caml-list@pauillac.inria.fr>; Sun, 5 Jan 2003 03:54:28 +0100 (MET)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from sm205.163.com ([202.108.44.205])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h052s3r07263;
	Sun, 5 Jan 2003 03:54:11 +0100 (MET)
Received: from localhost (localhost [127.0.0.1])
	by sm205.163.com (Postfix) with SMTP
	id 68FF41C67CBB4; Sun,  5 Jan 2003 10:53:44 +0800 (CST)
Received: from climbxp (unknown [159.226.149.121])
	by 192.168.1.205 (Coremail:www.163.com) with SMTP id Lw4AADaeFz4FN5V5.2
	for <xavier.leroy@inria.fr>; Sun, 05 Jan 2003 10:53:44 +0800 (CST)
From: "climb" <onlyclimb@163.com>
To: Xavier Leroy <xavier.leroy@inria.fr>
Cc: "caml-list@inria.fr" <caml-list@inria.fr>
Subject: Re: Re: Coyote Gulch test in Caml (was Re: [Caml-list] speed )
X-mailer: Foxmail 4.2 [cn]
Mime-Version: 1.0
Content-Type: text/plain;
      charset="GB2312"
Content-Transfer-Encoding: 7bit
Date: Sun, 5 Jan 2003 10:53:38 +0800
Message-Id: <20030105025344.68FF41C67CBB4@sm205.163.com>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

So i think the whole thing is very interesting.
at http://caml.inria.fr/ it says
04/2001. Objective Caml ranks 2nd on speed (between C and C++) on Doug Bagley's computer language shootout.

Now on the shoot out 
take for example
Random  numbers generated
   Test Source 1000 300000 600000 900000 
     ocaml      0.00 0.06 0.12 0.18 
     java       0.61 0.75 0.91 1.01 
then for ocaml it is about   0.06 per 300000
for java  it is about   0.13 per 300000          0.13 = (( 0.91-0.75) + ( 1.01-0.91))/2
It is aproximately of factor 2.  (by calulating like this, we can remove the effect of java's slow starup)

And for many test in the snap shot,   the factor is approximately of factor 2  .many are quite more than 2
Exceptions are string Concatenation (factor <1) and Sum a Column of Integers(factor <2)   and Echo Client/Server (factor<2)
Hashes, Part II (facor <2) and Heapsort(factor 1)  and Method Calls (factor <2)
and Ackermann's Function is not quite stable 
>Still, I haven't really understood where the factor of 2 comes from.  
So , it is possible to get a factor of 2 .

But however , i am a little doubting the objectivity of   "04/2001. Objective Caml ranks 2nd on speed (between C and C++) on Doug Bagley's computer language shootout.".  It is true  as merely as a sentence  or a news and also is the result of the shootout. but actually the whole speed is not that much fast especially in acdamic area. ( assume C is fast. :-), and for C++, if well programed , is also fast) 
This sentence is luring peple to think Ocaml is quite fast ( considering the fact on the maillist that many guys dont believe the factor is only 2 "surly will be more faster" ;-)). 
As to the bytecode, i think noone will think it is fast. And some feathers of the ocaml , may not be well mixed up. for example speed and cross platform. Sometime , peple change into Ocaml is for the speed which claimed as well as easy programming. 
So i sugest to remove that news from offical site. It seems objective , however not. It is somehow like an advertisement. I think the great charm of Ocaml superior to java is just its acadamic sence not its easy use or speed ( now i found).  




             
                          Yours
                                 climb
                                 onlyclimb@163.com
                                 2003-01-05



          
             



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

