Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA11816; Tue, 21 Jan 2003 13:54:33 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA11168 for <caml-list@pauillac.inria.fr>; Tue, 21 Jan 2003 13:54:30 +0100 (MET)
Received: from hawk.mail.pas.earthlink.net (hawk.mail.pas.earthlink.net [207.217.120.22])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h0LCsTv25568
	for <caml-list@inria.fr>; Tue, 21 Jan 2003 13:54:29 +0100 (MET)
Received: from user-0cev2t6.cable.mindspring.com ([24.239.139.166] helo=[192.168.0.3])
	by hawk.mail.pas.earthlink.net with esmtp (Exim 3.33 #1)
	id 18axv9-00078q-00
	for caml-list@inria.fr; Tue, 21 Jan 2003 04:54:27 -0800
Subject: Re: [Caml-list] view types in ocaml?
From: "Yaron M. Minsky" <yminsky@CS.Cornell.EDU>
To: Caml List <caml-list@inria.fr>
In-Reply-To: <8765sj718s.fsf@cs.uga.edu>
References: <8765sj718s.fsf@cs.uga.edu>
Content-Type: text/plain
Organization: Cornell University
Message-Id: <1043153665.12441.1603.camel@dragonfly.localdomain>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.1 
Date: 21 Jan 2003 07:54:26 -0500
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Speaking of suggestions for toplevel improvements, I've got a couple:

- don't print really long strings.
        
        The mechanism for ensuring that overly long things don't get
        printed to the screen apparently doesn't work for strings.  The
        result is that if you do anything with a large string (say,
        allocate a 100K buffer), every character gets printed to the
        screen.  (and if that buffer is mostly zeros, each buffer
        character is printed as '\000', taking 4 characters.  Argh!)
        
- don't print let-bound values
        
        If I type an expression, such "let x = foobar a b c", the value
        of x is dumped to the screen.  This is contrary to the behavior
        of most language interpreters (see python or matlab for
        examples.)  It means you have no way of supressing the printing
        of the values you generate, which is quite inconvenient. 
        Perhaps the type should always be printed (although maybe not),
        but printing the value every time make no sense.

Suggestively,
y


On Mon, 2003-01-20 at 20:14, Ed L Cashin wrote:
> Hi.  I like ocamlbrowser well enough, but is there a way to view type
> info right from the interactive ocaml prompt.  Here's what I'm
> thinking of (which won't work, of course).
> 
>           Objective Caml version 3.06
>   
>   # #load "unix.cma";;
>   # Unix.LargeFile.lseek;;
>   - : Unix.file_descr -> int64 -> Unix.seek_command -> int64 = <fun>
>   # Unix.LargeFile.stats;;
>   type stats = {
>     st_dev : int;
>     st_ino : int;
>     st_kind : Unix.file_kind;
>     st_perm : Unix.file_perm;
>     st_nlink : int;
>     st_uid : int;
>     st_gid : int;
>     st_rdev : int;
>     st_size : int64;
>     st_atime : float;
>     st_mtime : float;
>     st_ctime : float;
>   } 

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

