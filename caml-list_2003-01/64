Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA31123; Thu, 9 Jan 2003 15:58:20 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA31342 for <caml-list@pauillac.inria.fr>; Thu, 9 Jan 2003 15:58:18 +0100 (MET)
Received: from iona.labri.fr (iona.labri.fr [147.210.8.143])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h09EwI518394;
	Thu, 9 Jan 2003 15:58:18 +0100 (MET)
Received: from localhost (localhost.localdomain [127.0.0.1])
	by iona.labri.fr (Postfix) with ESMTP
	id 1E79E7DDF; Thu,  9 Jan 2003 15:58:17 +0100 (CET)
Received: from Ordinateur-de-G-rard-Huet.local. (amrita.labri.fr [147.210.8.242])
	by iona.labri.fr (Postfix) with ESMTP
	id 6A7B97DE0; Thu,  9 Jan 2003 15:57:51 +0100 (CET)
Date: Thu, 9 Jan 2003 15:59:39 +0100
Subject: [Caml-list] Lambda Calculus
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Mime-Version: 1.0 (Apple Message framework v543)
Cc: =?ISO-8859-1?Q?G=E9rard_Huet?= <Gerard.Huet@inria.fr>
To: caml-list@inria.fr
From: =?ISO-8859-1?Q?G=E9rard_Huet?= <Gerard.Huet@inria.fr>
Content-Transfer-Encoding: quoted-printable
Message-Id: <FA118945-23E2-11D7-B0F0-0003938819CE@inria.fr>
X-Mailer: Apple Mail (2.543)
X-Virus-Scanned: by AMaViS new-20020517
X-Razor-id: 3f5cd0641e0e8d2c8ba7f9382779fc626af99ef8
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Everything you wanted to know about lambda-calculus - but were afraid=20
to ask.
Nicely packaged as a set of executable Ocaml modules in limpid Pidgin=20
ML syntax.

Learn how to program in pure lambda calculus the slowest quicksort in=20
the world:

# let _L=3Dlist[3;2;5;1] in normal_list<<(^Quicksort ^L)>>;
- : list int =3D [1; 2; 3; 5]

Freak out with the B=F6hm-out technique and amaze your local theory guru=20=

by challenging him to separate Quicksort and Factorial:

# bohm(_Quicksort,_Fact);
- : list Term.term =3D [[x0,x1,x2,x3,x4]x3; [x0,x1]x0; [x0,x1]x0; =
[x0]x0]

Learn Recursion theory in one easy lesson, and surprise your friends by=20=

revealing that
Kleene is Church composed with G=F6del :

value kleene t =3D church (godel t);

Win fortunes at TV Quiz shows by computing G=F6del numbers faster than=20=

lightning:

# godel _Fix =3D =
6941718342796165477078794502929179108365127687513804648;
- : bool =3D True

All this and more in the Constructive Computation Theory course,=20
available in the Ocaml Hump:

http://caml.inria.fr/humps/

or directly at:
http://pauillac.inria.fr/~huet/CCT/

Enjoy!
GH

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

