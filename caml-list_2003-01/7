Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA29266; Fri, 3 Jan 2003 13:46:02 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA29260 for <caml-list@pauillac.inria.fr>; Fri, 3 Jan 2003 13:45:59 +0100 (MET)
Received: from igw2.watson.ibm.com (igw2.watson.ibm.com [129.34.20.6])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h03Cjw525458
	for <caml-list@inria.fr>; Fri, 3 Jan 2003 13:45:58 +0100 (MET)
Received: from sp1n293en1.watson.ibm.com (sp1n293en1.watson.ibm.com [9.2.112.57])
	by igw2.watson.ibm.com (8.11.4/8.11.4) with ESMTP id h03CjQ310532;
	Fri, 3 Jan 2003 07:45:26 -0500
Received: from nautilus-chet.watson.ibm.com (sig-9-65-119-123.mts.ibm.com [9.65.119.123])
	by sp1n293en1.watson.ibm.com (8.11.4/8.11.4) with ESMTP id h03CjQT36152;
	Fri, 3 Jan 2003 07:45:26 -0500
Received: from maine (maine [127.0.0.1])
	by nautilus-chet.watson.ibm.com (8.12.5/8.12.5/Debian-1) with ESMTP id h02GjkXh003643;
	Thu, 2 Jan 2003 11:45:46 -0500
Message-Id: <200301021645.h02GjkXh003643@nautilus-chet.watson.ibm.com>
To: Noel Welsh <noelwelsh@yahoo.com>
cc: onlyclimb <onlyclimb@163.com>, caml-list@inria.fr
Subject: Re: [Caml-list] speed 
In-Reply-To: Your message of "Fri, 03 Jan 2003 03:47:53 PST."
             <20030103114753.99228.qmail@web41214.mail.yahoo.com> 
References: <20030103114753.99228.qmail@web41214.mail.yahoo.com> 
Date: Thu, 02 Jan 2003 11:45:46 -0500
From: Chet Murthy <chet@watson.ibm.com>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


[I work for IBM.  Notwithstanding, I'm really not a Java shill.  But,
well, try whatever you do on the IBM JDKs, or the _Sunsoft_ _Solaris_
JDKs.]

Actually, I think you'll find that for tight integer loops and
floating-point stuff, Java is already as fast as good C++.  After all,
that's what the JIT guys optimized first and best.  That said, I've
found that in fact, you can get as good performance from Java, as from
Perl or Caml.  You just gotta really optimize your Java code in
strange (non-JDK-compliant) ways.

--chet--

>>>>> "NW" == Noel Welsh <noelwelsh@yahoo.com> writes:

    NW> --- onlyclimb <onlyclimb@163.com> wrote:

    >> Is it normal that my ocaml program is only 2 times faster than
    >> the java counterpart ?(using the same method and complied into
    >> native. jdk is 1.4.1

    NW> It depends entirely on the program.  I wouldn't expect a huge
    NW> difference in speed in, say, an HTTP server where most of the
    NW> time is spent waiting for the disk. In numeric applications I
    NW> would expect O'Caml to be significantly faster than Java.
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

