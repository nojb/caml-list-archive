Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA12224; Sun, 19 Jan 2003 10:45:19 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA12371 for <caml-list@pauillac.inria.fr>; Sun, 19 Jan 2003 10:45:18 +0100 (MET)
Received: from teutates.kfunigraz.ac.at (TEUTATES.kfunigraz.ac.at [143.50.129.26])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h0J9jHr01701
	for <caml-list@inria.fr>; Sun, 19 Jan 2003 10:45:17 +0100 (MET)
Received: from localhost (localhost.localdomain [127.0.0.1])
	by teutates.kfunigraz.ac.at (Postfix) with ESMTP id CDC2C3D23DB
	for <caml-list@inria.fr>; Sun, 19 Jan 2003 10:45:14 +0100 (CET)
Received: from teutates.kfunigraz.ac.at ([127.0.0.1])
 by localhost (teutates.kfunigraz.ac.at [127.0.0.1:10024]) (amavisd-new)
 with ESMTP id 11931-05 for <caml-list@inria.fr>;
 Sun, 19 Jan 2003 10:45:14 +0100 (CET)
Received: from stud.uni-graz.at (IGAM08AV.kfunigraz.ac.at [143.50.39.35])
	by teutates.kfunigraz.ac.at (Postfix) with ESMTP id C89A83D23DA
	for <caml-list@inria.fr>; Sun, 19 Jan 2003 10:45:13 +0100 (CET)
Message-ID: <3E2A7F4B.2000603@stud.uni-graz.at>
Date: Sun, 19 Jan 2003 11:34:51 +0100
From: Siegfried Gonzi <siegfried.gonzi@stud.uni-graz.at>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.8) Gecko/20020204
X-Accept-Language: en-us
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: Coyote Gulch test in Caml (was Re: [Caml-list] speed )
References: <3E15B3B3.3040106@163.com> <20030103071042.T22850@speakeasy.org> <20030104193118.A26208@pauillac.inria.fr> <200301181749.48295.oleg_inconnu@myrealbox.com>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: by amavisd-new
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Oleg wrote:

>On Saturday 04 January 2003 01:31 pm, Xavier Leroy wrote:
>
>>Apparently, the ocamlopt-generated code
>>offers less instruction-level parallelism than the g++-generated code
>>for the float computations.  Still, I haven't really understood where
>>the factor of 2 comes from.  
>>
>
>It's been a couple of weeks. I'm wondering if you got any new insights into 
>this?
>
I am wondering whether they did analysize the Bigloo (Scheme) results:

[according to Manuel based on code by S. Gonzi; see comp.lang.scheme]

          Compiler                                              usr+usr
-----------------------------------------------------------+---------------
ocamlopt -unsafe -noassert -inline 2:                           95.01s
bigloo -Obench -jvm (jdk1.3.1):                                 55.73s
java (jdk1.3.1):                                                52.53s
bigloo -Obench -copt "-ffast-math -fomit-frame-pointer -O3":    40.57s
gcc -ffast-math -fomit-frame-pointer -O3:                       38.37s

Btw: the Stalin compiler produces code (note: common Scheme operators) 
which runs faster than the C++ version even.


S. Gonzi

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

