Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA00894; Fri, 31 Jan 2003 20:39:44 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA00540 for <caml-list@pauillac.inria.fr>; Fri, 31 Jan 2003 20:39:43 +0100 (MET)
Received: from escargot.exelixis.com (shaker.exelixis.com [65.209.203.254])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h0VJdgf13625
	for <caml-list@inria.fr>; Fri, 31 Jan 2003 20:39:42 +0100 (MET)
Received: from quasar.ipa.nw.ru (dhcp-172-29-16-189.exelixis.com [172.29.16.189]) 
  by escargot.exelixis.com (8.8.8/8.8.8/GNAC-GW-2.1) with ESMTP id LAA16394;
  Fri, 31 Jan 2003 11:34:36 -0800 (PST)
Message-ID: <3E3ACF41.8060507@quasar.ipa.nw.ru>
Date: Fri, 31 Jan 2003 11:32:17 -0800
From: "Alexander V. Voinov" <avv@quasar.ipa.nw.ru>
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.0; en-US; rv:1.0.1) Gecko/20020823 Netscape/7.0
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Russ Ross <caml@russross.com>
CC: caml-list@inria.fr
Subject: Re: [Caml-list] @, List.append, and tail recursion
References: <11707E79-34C2-11D7-9ECD-000393BA7EBA@wetware.com> <Pine.LNX.4.33.0301310958420.3577-100000@eagle.ancor.com> <20030131191806.GA28910@juvenileinstructor.com>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi All,

Russ Ross wrote:

>resources about this topic.  Right now I think there is some
>low-hanging fruit to be plucked--recognizing and transforming a few
>simple patterns (code that looks like List.map) would make a big
>difference in a lot of code.  Handling more complex cases is
>undoubtedly harder, but I think the potential benefits are
>considerable.
>
Yes, yes, yes. And this is a matter of adoption as well. Even if the 
global compiler strategy can't be changed quickly (to accomodate 
'futures' or 'holes' or whatever), let's just make the List module 
completely and absolutely tail recursive, one way or another. So that 
any newcomer can quickly map his/her favorite interative patterns of 
construction of homogeneous data structures (lists, arrays) to maps and 
folds.

Alexander


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

