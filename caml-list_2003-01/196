Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA15422; Fri, 24 Jan 2003 13:02:46 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA15589 for caml-list@pauillac.inria.fr; Fri, 24 Jan 2003 13:02:46 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA12515 for <caml-list@pauillac.inria.fr>; Fri, 24 Jan 2003 11:39:57 +0100 (MET)
Received: from ep09.kernel.pl (ep09.kernel.pl [212.87.11.162])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h0OAdur15260
	for <caml-list@inria.fr>; Fri, 24 Jan 2003 11:39:57 +0100 (MET)
Received: (qmail 15565 invoked by uid 566); 24 Jan 2003 10:39:50 -0000
Date: Fri, 24 Jan 2003 11:36:26 +0100
From: Michal Moskal <malekith@pld-linux.org>
To: =?iso-8859-1?Q?Micha=EBl_Gr=FCnewald?= <michael-grunewald@wanadoo.fr>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Re: uname for Ocaml
Message-ID: <20030124103626.GA3390@roke.freak>
References: <15917.26071.995917.528195@hector.lesours> <87u1g1uo66.fsf@ketanu.dyndns.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <87u1g1uo66.fsf@ketanu.dyndns.org>
User-Agent: Mutt/1.4i
X-PGP-Fingerprint: CF89 1B14 11BE 1CC9 2CA3  7497 5E32 69B4 BC71 B4C2
X-AntiVirus: scanned for viruses by AMaViS 0.2.1 (http://amavis.org/)
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, Jan 22, 2003 at 05:47:29PM +0100, Michaël Grünewald wrote:
> Basile STARYNKEVITCH <basile@starynkevitch.net> writes:
> 
> > Dear All,
> > 
> > If you need to call uname(2) from some Ocaml program you can steal my
> > tiny code in util.ml util.mli util_ml.c on
> > 
> > I actually wish that uname(2) will be incorporated in the Unix module.
> 
> Would not be more accurate to complete, and much more simple, the
> 'Sys.os_type' information string by a 'Sys.os_name' information string
> (or os_uname ...).

There are also other fields in structure returned by uname:

              struct utsname {
                      char sysname[];
                      char nodename[];
                      char release[];
                      char version[];
                      char machine[];
              #ifdef _GNU_SOURCE
                      char domainname[];
              #endif
              };

I don't see much point messing with Sys modules with all this stuff.

-- 
: Michal Moskal ::::: malekith/at/pld-linux.org :  GCS {C,UL}++++$ a? !tv
: PLD Linux ::::::: Wroclaw University, CS Dept :  {E-,w}-- {b++,e}>+++ h
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

