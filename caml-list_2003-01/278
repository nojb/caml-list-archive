Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA15340; Fri, 31 Jan 2003 11:33:46 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA15289 for <caml-list@pauillac.inria.fr>; Fri, 31 Jan 2003 11:33:44 +0100 (MET)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from mailb.telia.com (mailb.telia.com [194.22.194.6])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h0VAXif10344
	for <caml-list@inria.fr>; Fri, 31 Jan 2003 11:33:44 +0100 (MET)
Received: from d1o849.telia.com (d1o849.telia.com [213.66.248.241])
	by mailb.telia.com (8.12.5/8.12.5) with ESMTP id h0VAXhUV007572;
	Fri, 31 Jan 2003 11:33:43 +0100 (CET)
X-Original-Recipient: caml-list@inria.fr
Received: from gateway (h13n2fls34o849.telia.com [217.208.235.13])
	by d1o849.telia.com (8.10.2/8.10.1) with ESMTP id h0VAXgs20200;
	Fri, 31 Jan 2003 11:33:42 +0100 (CET)
From: "Mattias Waldau" <mattias.waldau@abc.se>
To: "'Christophe Raffalli'" <Christophe.Raffalli@univ-savoie.fr>,
        <brogoff@speakeasy.net>
Cc: "'Andrew Kennedy'" <akenn@microsoft.com>,
        "'Brian Hurt'" <brian.hurt@qlogic.com>,
        "'Ocaml Mailing List'" <caml-list@inria.fr>
Subject: RE: [Caml-list] @, List.append, and tail recursion
Date: Fri, 31 Jan 2003 11:33:44 +0100
Message-ID: <01c401c2c914$3b3bf830$0a00a8c0@gateway>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.3416
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1106
In-Reply-To: <3E38F6F6.7000206@univ-savoie.fr>
Importance: Normal
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> brogoff@speakeasy.net wrote:
> > Thanks for the reference. I get nailed by this a couple of times a
> > year, and I usually just blame myself for being sloppy and recode 
> > all of my maps, appends, and filters to remove it. I think it would 

I agree that this is recurring problem, I myself often get bit by
List.map.

It makes it very easy to make non-scalable program, works for input less
that 1000 elements, and the when applied to a large problem it fails
without a trace. It is very difficult to find the location of the
problem if you use the native compiler, and most of these programs
doesn't even work using the byte-code compiler.

So one of my coding guidelines is:
- do not use List.map

I would like a prefer other solutions.

/mattias

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

