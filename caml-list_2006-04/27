Return-Path: <Andrej.Bauer@andrej.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id F3D35BB81
	for <caml-list@yquem.inria.fr>; Mon, 10 Apr 2006 15:40:29 +0200 (CEST)
Received: from haka.fmf.uni-lj.si (haka.fmf.uni-lj.si [193.2.67.18])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id k3ADeT7w015342
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Mon, 10 Apr 2006 15:40:29 +0200
Received: from katapult.fmf.uni-lj.si ([193.2.67.50] helo=[10.10.4.79])
	by haka.fmf.uni-lj.si with esmtpa (Exim 4.50)
	id 1FSwcr-00035P-22
	for caml-list@yquem.inria.fr; Mon, 10 Apr 2006 15:40:29 +0200
From: Andrej Bauer <Andrej.Bauer@andrej.com>
To: caml-list@yquem.inria.fr
Date: Mon, 10 Apr 2006 15:42:48 +0200
User-Agent: KMail/1.8.3
References: <c1490a380604100151s256d05y13cc8ffa11580770@mail.gmail.com>
In-Reply-To: <c1490a380604100151s256d05y13cc8ffa11580770@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="windows-1250"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Message-Id: <200604101542.48960.Andrej.Bauer@andrej.com>
X-SA-Exim-Connect-IP: 193.2.67.50
X-SA-Exim-Mail-From: Andrej.Bauer@andrej.com
Subject: Re: [Caml-list] Type Inference and Overloading
X-SA-Exim-Version: 4.2 (built Thu, 03 Mar 2005 10:44:12 +0100)
X-SA-Exim-Scanned: Yes (on haka.fmf.uni-lj.si)
X-Miltered: at concorde with ID 443A604D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; andrej:01 andrej:01 inference:01 overloading:01 overloading:01 haskell:01 haskell's:01 2006:98 insult:98 wrote:01 caml-list:01 usability:04 programmer:06 classes:06 classes:06 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Monday 10 April 2006 10:51, Tom Primo=9Ei=E8 wrote:
> I would like to pose one really perverse question (perverse because it
> mentions overloading).

To add insult to perversion, I will mention Haskell. Have you had a look at=
=20
Haskell's type classes? They allow you to write "+" or "print" to mean many=
=20
different things, while not doing actual overloading.

So if all you care about is usability for programmer, and not so much about=
=20
overloading for the sake of overloading, type classes might be a nice optio=
n.

Andrej

