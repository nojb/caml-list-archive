Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 8DD46BB83
	for <caml-list@yquem.inria.fr>; Thu, 27 Apr 2006 15:55:12 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id k3RDtCOK014195
	for <caml-list@yquem.inria.fr>; Thu, 27 Apr 2006 15:55:12 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA15114 for <caml-list@pauillac.inria.fr>; Thu, 27 Apr 2006 15:55:11 +0200 (MET DST)
Received: from mta1.cl.cam.ac.uk (mta1.cl.cam.ac.uk [128.232.0.15])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id k3RDtBfk014191
	for <caml-list@inria.fr>; Thu, 27 Apr 2006 15:55:11 +0200
Received: from stem.cl.cam.ac.uk ([128.232.9.62] helo=cl.cam.ac.uk)
	by mta1.cl.cam.ac.uk with esmtp (Exim 3.092 #1)
	id 1FZ6xb-0005LI-00
	for caml-list@inria.fr; Thu, 27 Apr 2006 14:55:11 +0100
To: caml-list@inria.fr
Subject: Type-safe marshalling for OCaml 
Date: Thu, 27 Apr 2006 14:55:10 +0100
From: Peter Sewell <Peter.Sewell@cl.cam.ac.uk>
Message-Id: <E1FZ6xb-0005LI-00@mta1.cl.cam.ac.uk>
X-Miltered: at concorde with ID 4450CD40.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 4450CD3F.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; type-safe:01 marshalling:01 ocaml:01 ocaml:01 bytecode:01 compiler:01 type-safe:01 marshalling:01 variants:01 shinwell:01 billings:98 polymorphic:01 naming:01 usable:01 supported:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3


Dear all,

We are pleased to announce a preliminary release of HashCaml, an
extension of the OCaml bytecode compiler with support for type-safe
marshalling and related naming features.

This makes the core type-safe and abstraction-safe marshalling
constructs from the Acute prototype language available within OCaml.
Some OCaml features are not supported (including marshalling of
polymorphic variants and objects), and this is very much an alpha
release - there may well be serious problems in the implementation.
Nonetheless, it should be usable for nontrivial experiments, and any
feedback and comment would be most welcome.

Further details, including a draft paper, the README, examples, and
the full distribution can be found at

  http://www.cl.cam.ac.uk/users/pes20/hashcaml


Peter 
for the HashCaml team: John Billings, Peter Sewell, Mark Shinwell, Rok Strnisa

