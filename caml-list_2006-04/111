Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 3073ABB83
	for <caml-list@yquem.inria.fr>; Wed, 19 Apr 2006 10:36:25 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k3J8aOWK020361
	for <caml-list@yquem.inria.fr>; Wed, 19 Apr 2006 10:36:24 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA30716 for <caml-list@pauillac.inria.fr>; Wed, 19 Apr 2006 10:36:24 +0200 (MET DST)
Received: from parmail03.sgcib.com (parmail03.sgcib.com [207.45.250.36])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id k3J8aNku020990
	for <caml-list@inria.fr>; Wed, 19 Apr 2006 10:36:23 +0200
X-IronPort-AV: i="4.04,133,1144015200"; 
   d="scan'208"; a="5840944:sNHT27500056"
Content-class: urn:content-classes:message
MIME-Version: 1.0
X-MimeOLE: Produced By Microsoft Exchange V6.5.7226.0
Subject: Dynlink, libcamlrun and ocamlrun: How to load libraries with external C functions
Date: Wed, 19 Apr 2006 10:36:22 +0200
Message-ID: <7F070E410B10EE419826BF5206322CC2095266@frdef-exmb01.europe.am.socgen>
Thread-Topic: Dynlink, libcamlrun and ocamlrun: How to load libraries with external C functions
Thread-Index: AcZjjFZlFvRmm6TlSZWcsXVEFaaFaQ==
From: "EL CHAAR Rabih   SGAM/AI/SAM" <RABIH.ELCHAAR@sgam.com>
To: <caml-list@inria.fr>
X-OriginalArrivalTime: 19 Apr 2006 08:36:22.0686 (UTC) FILETIME=[56A4F3E0:01C6638C]
X-NAI-Spam-Rules: 1 Rules triggered
	BAYES_00=-2.5
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain; charset="us-ascii"
X-Miltered: at nez-perce with ID 4445F688.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 4445F687.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; dynlink:01 libcamlrun:01 ocamlrun:01 ocaml:01 dynlink:01 statically:01 libcamlrun:01 lib:01 statically:01 toplevel:01 ocamlrun:01 lib:01 recompile:01 runtime:01 runtime:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

Sorry for sending back the same post, but last one was in MIME format.


Hello everyone,

We have the following constraint:

We are planning to use an executable (let's name it A) from a
third-party, built upon ocaml.

It enables us to load our inhouse caml libraries via the Dynlink module.

The executable A is statically linked against libcamlrun.lib

Several of our libraries use external C functions, and we have them
built in two flavours : .cma for statically linked executables, and
_d.cma for loading via the toplevel (linked therefore with
ocamlrun.lib).

Our goal is to be able to load these libraries dynamically against A
(since we can't recompile A).

After making sure that the Dynlink module enables unsafe features, we
tried to load these libraries (_d.cma) and we were facing some access
violation exceptions.

After a thorough investigation, this seems to come from the fact that
our libraries were creating values with respect to ocamlrun runtime, and
the executable is expecting values with respect to libcamlrun runtime.
I'm not an expert on this issue (links are really appreciated), but
these two runtimes don't seem to share the same memory representation of
values (the exceptions were arising when calling from c functions like
caml_copy_double, ...).


This seems to point that it is not possible to use jointly libraries
with ocamlrun and libcamlrun runtimes, which is quite understandable.


We still need these libraries to be loaded dynamically, and they have
some external C functions. I have the impression that the only way to do
these is through linking with ocamlrun.lib and defining the CAML_DLL
symbol for the exported function using the Camlprim keyword.

I tried to switch the link library from ocamlrun to libcamlrun, but I
was having some undefined symbols=20

b=2Eobj : error LNK2019: unresolved external symbol __imp__caml_failwith
referenced in function ...
b=2Eobj : error LNK2019: unresolved external symbol
__imp__caml_local_roots referenced in function ...
b=2Eobj : error LNK2019: unresolved external symbol
__imp__caml_alloc_custom referenced in function ...
b=2Eobj : error LNK2019: unresolved external symbol
__imp__caml_copy_double referenced in function ...

1)       Is there a way to create such libraries with the libcamlrun
runtime ?
2)       What is the correct approach to load libraries through Dynlink
with external functions ?
=20
Thanks in advance for your help and advices.
If the post seems vague, please point it out and i'll give more
explanations or details.

Sincerely yours,
Rabih Chaar
Ce message et toutes les pieces jointes (ci-apres le "message") sont confid=
entiels et etablis a l'intention exclusive de ses destinataires.=20
Toute utilisation ou diffusion non autorisee est interdite.=20
Tout message electronique est susceptible d'alteration.=20
Societe Generale Asset Management et ses filiales declinent toute responsab=
ilite au titre de ce message s'il a ete altere, deforme ou falsifie.=20
 =20
Decouvrez l'offre et les services de Societe Generale Asset Management sur =
le site www.sgam.fr=20
 =20
                                ********=20
 =20
This message and any attachments (the "message") are confidential and inten=
ded solely for the addressees.=20
Any unauthorised use or dissemination is prohibited.=20
E-mails are susceptible to alteration.=20
Neither Societe Generale Asset Management nor any of its subsidiaries or af=
filiates shall be liable for the message if altered, changed or falsified.=20
=20
Find out more about Societe Generale Asset Management's proposal on www.sga=
m=2Ecom

