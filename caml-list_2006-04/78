Return-Path: <garrigue@math.nagoya-u.ac.jp>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 30480BB84
	for <caml-list@yquem.inria.fr>; Mon, 17 Apr 2006 01:45:24 +0200 (CEST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k3GNjMe0018818
	for <caml-list@yquem.inria.fr>; Mon, 17 Apr 2006 01:45:23 +0200
Received: from localhost (suiren [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.13.6/8.13.6) with ESMTP id k3GNjIdW014423;
	Mon, 17 Apr 2006 08:45:18 +0900 (JST)
Date: Mon, 17 Apr 2006 08:45:16 +0900 (JST)
Message-Id: <20060417.084516.07640451.garrigue@math.nagoya-u.ac.jp>
To: ivan.matveich@gmail.com
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] lablgtk2: receiving messages from network?
From: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <b5def3a40604161528l636cd34av486f118a3eccb694@mail.gmail.com>
References: <b5def3a40604151233q774da2d8q403d6048c861c006@mail.gmail.com>
	<6b8a91420604151554jb36f96aw789a8d42755c1add@mail.gmail.com>
	<b5def3a40604161528l636cd34av486f118a3eccb694@mail.gmail.com>
X-Mailer: Mew version 4.2 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 4442D712.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; lablgtk:01 struct:01 unix:01 sockaddr:01 unix:01 sockaddr:01 caml-list:01 marshal:01 marshal:01 unsafe:01 jacques:01 jacques:01 string:02 garrigue:03 garrigue:03 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=DNS_FROM_RFC_ABUSE 
	autolearn=disabled version=3.0.3

From: "Ivan Matveich" <ivan.matveich@gmail.com>

> Now I have another question. I've started writing some code,
> 
> module Channel =
>   struct
>     type event =
>       | Connected of Unix.sockaddr
>       | Dropped of Unix.sockaddr
>       | Received of Unix.sockaddr * x
>       | Sent of Unix.sockaddr * x
>     type action =
>       | Associate of Unix.sockaddr
>       | Dissociate of Unix.sockaddr
>       | Send of Unix.sockaddr * x
> 
> where x will be something returned by Marshal.from_string.
> 
> How do I properly specify its type?

I suppose x should be Obj.t, meaning that you're going to use Obj.repr
and Obj.obj. This is clearly unsafe, but any use of Marshal is.

Jacques Garrigue

