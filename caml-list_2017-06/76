Return-Path: <julia.lawall@lip6.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 387AA80161
	for <caml-list@sympa.inria.fr>; Mon, 19 Jun 2017 22:58:28 +0200 (CEST)
X-IronPort-AV: E=Sophos;i="5.39,362,1493676000"; 
   d="scan'208";a="228928009"
Received: from 198.67.28.109.rev.sfr.net (HELO [192.168.1.69]) ([109.28.67.198])
  by mail3-relais-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 19 Jun 2017 22:58:27 +0200
Date: Mon, 19 Jun 2017 22:58:26 +0200 (CEST)
From: Julia Lawall <julia.lawall@lip6.fr>
X-X-Sender: jll@hadrien
To: =?ISO-8859-15?Q?David_MENTR=C9?= <dmentre@linux-france.org>
cc: caml-list@inria.fr
In-Reply-To: <88108a18-8044-bc46-bed3-aef241b4ff48@linux-france.org>
Message-ID: <alpine.DEB.2.20.1706192254270.2076@hadrien>
References: <alpine.DEB.2.20.1706182133490.30282@hadrien> <88108a18-8044-bc46-bed3-aef241b4ff48@linux-france.org>
User-Agent: Alpine 2.20 (DEB 67 2015-01-07)
MIME-Version: 1.0
Content-Type: multipart/mixed; BOUNDARY="8323329-1735856105-1497905907=:2076"
Subject: Re: [Caml-list] segmentation fault

--8323329-1735856105-1497905907=:2076
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8BIT



On Mon, 19 Jun 2017, David MENTRÉ wrote:

> Hello Julia,
>
> Le 2017-06-18 à 21:41, Julia Lawall a écrit :
> > Over several
> > runs on two different laptops, the backtraces have nothing obvious in
> > common.  The bytecode version does not seem to stack overflow.  Adding
> > Gc.print_stat() at a periodic quiescent point in the execution did not
> > show a memory leak.
>
> A similar issue related to random crash in native code version was asked
> by Alexey Egorov on this list 9 days ago. Daniel Bünzli advised to him
> to frequently call Gc.full_major () to have a crash closer to the real
> issue.

OK, I will try this.

> In the case of Alexey, it was a non tail-recursive call that triggered a
> stack overflow and that is not detected in OCaml native code. Apparently
> this kind of issue is fixed in next to come OCaml 4.06.0.

Why would something like this not be deterministic?  In my case, it can
happen after seconds or after tens of minutes.

> Of course, your issue might be entirely different. But frequently
> calling Gc.full_major () seems a sensible starting point to me.
>
> Otherwise you have the usual suspects: are you using C bidings? Threads?

There are no threads.  The software may use C bindings.  I don't think
they are involved in the failing execution, but I'm not 100% sure.

thanks,
julia

> Good luck!
> david
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
--8323329-1735856105-1497905907=:2076--
