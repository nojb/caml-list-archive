Return-Path: <zhenya1007@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id B0E118018D
	for <caml-list@sympa.inria.fr>; Thu, 29 Jun 2017 17:36:27 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=zhenya1007@gmail.com; spf=Pass smtp.mailfrom=zhenya1007@gmail.com; spf=None smtp.helo=postmaster@mail-yw0-f176.google.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  zhenya1007@gmail.com) identity=pra; client-ip=209.85.161.176;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="zhenya1007@gmail.com";
  x-sender="zhenya1007@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  zhenya1007@gmail.com designates 209.85.161.176 as permitted
  sender) identity=mailfrom; client-ip=209.85.161.176;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="zhenya1007@gmail.com";
  x-sender="zhenya1007@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-yw0-f176.google.com) identity=helo;
  client-ip=209.85.161.176;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="zhenya1007@gmail.com";
  x-sender="postmaster@mail-yw0-f176.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AuVlaDROBK+kbAbxFTT8l6mtUPXoX/o7sNwtQ0KIM?=
 =?us-ascii?q?zox0Ivn5rarrMEGX3/hxlliBBdydsKMbzbKO+4nbGkU4qa6bt34DdJEeHzQksu?=
 =?us-ascii?q?4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2aFLduGC94iAPERvjKwV1?=
 =?us-ascii?q?Ov71GonPhMiryuy+4ZPebgFKiTanfb9+MAi9oBnMuMURnYZsMLs6xAHTontPde?=
 =?us-ascii?q?RWxGdoKkyWkh3h+Mq+/4Nt/jpJtf45+MFOTav1f6IjTbxFFzsmKHw65NfqtRbY?=
 =?us-ascii?q?UwSC4GYXX3gMnRpJBwjF6wz6Xov0vyDnuOdxxDWWMMvrRr0vRz+s87lkRwPpiC?=
 =?us-ascii?q?cfNj427mfXitBrjKlGpB6tvgFzz5LIbI2QMvd1Y6HTcs4ARWdZXMlRWSxPDI2/?=
 =?us-ascii?q?YYUSEeQOIf1VoJPhq1YUtxayGRWgCeHpxzRVhnH2x6o60+E5HA/JwgwgEMwBsH?=
 =?us-ascii?q?LUrd7oKKkSVv21w7LJzTXFc/xW2Sv955bJchAnvPqBWrNxccrPxkkpFwLKlEic?=
 =?us-ascii?q?pZD5Mz6XzekNvG2b4PBhVeKrkWIotwZxoj22y8oql4LHiIUVylXe+iV4xoY4Pd?=
 =?us-ascii?q?y4SEhhYd6lCpRcrS+aN5FuTsM4XW5noiI6y7MBuZ6heCgF1ZMnyALFZPyCd4iE?=
 =?us-ascii?q?+BXjVPyeITp+mXlre6q/ig6s/US8zuDwTMq53VZQoiZYk9TAq2oB2wHR58WGTP?=
 =?us-ascii?q?Z2412v1iyV1w/J7+FJOUA0mrTfK54m2rMwk4AcsUXHHiPvmET3grOaelwq+uS1?=
 =?us-ascii?q?6enqY6/qppCbN49zhQH+NrohltajDuQ/NwgCR2mb+eKi273/5UD1XqlGg/ksnq?=
 =?us-ascii?q?TasJ3WP9kXq6+kDwNPz4ou6ReyAy+j0NsCnHkHKFxFeAiAj4jsI1zPIfD4Aum5?=
 =?us-ascii?q?g1Wsijhn2uzKMqHjD5jWIXjDla3ufbd560JG1AUzytVf64pOCr4dOPLzRlPxtN?=
 =?us-ascii?q?vAAxAlKQO0xuLnBMx51oMfQmKPHrSUMLjSsF+N/uIgOfOAZI4TuDbnKvgq/eTi?=
 =?us-ascii?q?jXEjmQxVQa784J4eaWrwJfVqL0SAfHek1soEGGYQ+AogQ8TljVSDVXhYYHPkDI?=
 =?us-ascii?q?wm4TRuJZypAIHSDrqqnbaA2iy7ApBXYCgSGFCBF2bhLt3cBN8DbSuTJolqlTlS?=
 =?us-ascii?q?BuvpcJMoyRz77Fyy8LFgNOeBv3RA7Z8=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ANBgDpHVVZhrChVdFdHQEFAQsBGAEFA?=
 =?us-ascii?q?QsBhBF8EgeDZYE2mkyNWIo0LoVuAoMJB0MUAQEBAQEBAQEBAQESAQEBCAsLCCg?=
 =?us-ascii?q?vQg4BgWIkAYJBAQICASMdARsdAQMBCwYFBAc3AgIhAQERAQUBHAYTihYBAwgFC?=
 =?us-ascii?q?BCmEj+MCYIEBQEcgwgFg1cKGScNVoMqAQEBAQEBBAEBAQEBAQEZAgEFEoMVh0W?=
 =?us-ascii?q?BDIJXgkCCZoJhAQSBLAEBAZ0MIRAIAQGBSQqFaYdRhGeCCok4hlWLa4d3FB+BF?=
 =?us-ascii?q?TaBK3ReGVuEDh+CDiQ2AYVCg2UBAQE?=
X-IPAS-Result: =?us-ascii?q?A0ANBgDpHVVZhrChVdFdHQEFAQsBGAEFAQsBhBF8EgeDZYE?=
 =?us-ascii?q?2mkyNWIo0LoVuAoMJB0MUAQEBAQEBAQEBAQESAQEBCAsLCCgvQg4BgWIkAYJBA?=
 =?us-ascii?q?QICASMdARsdAQMBCwYFBAc3AgIhAQERAQUBHAYTihYBAwgFCBCmEj+MCYIEBQE?=
 =?us-ascii?q?cgwgFg1cKGScNVoMqAQEBAQEBBAEBAQEBAQEZAgEFEoMVh0WBDIJXgkCCZoJhA?=
 =?us-ascii?q?QSBLAEBAZ0MIRAIAQGBSQqFaYdRhGeCCok4hlWLa4d3FB+BFTaBK3ReGVuEDh+?=
 =?us-ascii?q?CDiQ2AYVCg2UBAQE?=
X-IronPort-AV: E=Sophos;i="5.40,281,1496095200"; 
   d="scan'208,217";a="281224301"
Received: from mail-yw0-f176.google.com ([209.85.161.176])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 29 Jun 2017 17:36:26 +0200
Received: by mail-yw0-f176.google.com with SMTP id l21so30011089ywb.1
        for <caml-list@inria.fr>; Thu, 29 Jun 2017 08:36:26 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=AGTHu+JuIrCHwtqDvnNzmEZpclXsXSUlGlLkasWK9oY=;
        b=X7aN94ycPiHx7Qx7nbHKkYj6G5i/cGbX4L1jXYQybyRdiIPKb00oEaEnErNP0fM+4i
         L4sgsO22LXyfgZaN6EIleXZw8cslk9T6AC5fLqZb69iA3RYw+aCOW6yXUt4qE1SGSZyT
         NzoBPMaVplWr/GR0GDsW++cDuUB/g8nPTOsnfii5MZi5kbrrKw7JN2PyQCiFLlOCnA4N
         BBFZEvpJS0tCTQQueBii4VJ3enn473oWmAKLZGIB7ldqIgVyZVBfo2nlSiLyQd4L9mUc
         XQHnL/5Vr1YiUELbTJ2pI2ZgVbvCCTj58FObwrPXttETg6I71Qcoi6psj74LqHzy4zwf
         rpiw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc;
        bh=AGTHu+JuIrCHwtqDvnNzmEZpclXsXSUlGlLkasWK9oY=;
        b=i5v1G+pVqWqbO2OEk/KNzq0HID2nUP68fjtvRDHHmg1mrqVrAPmaGeyc++zWgqN0HC
         p19KeQBHY9UtDtf5LV0cYc4tNX3vSArJLSM8bquO7B0DmjwasyoK4ASGbOzUP9ONhjas
         l+2V87ZJXT/xOg+zYvRIvuhaz/jw25p0RAu9T5j5N22E5zANd0jecuDY7vWqY3JwMMDC
         tEcGSrvsZ+UekmVym+XmPbso65mEqala7mrFalZQm1SMSA/iObuHzzpteak+e0XNPWmz
         9+5C1d7tXS+9ObM0kHWfA6UP8yWUwpnF6ehDQi8Fk8ik9I3lGDb4o5uv9eyIuHvwht4I
         Onyw==
X-Gm-Message-State: AKS2vOys+i1xGRAs2ZASwTzytdNDxcs/eBQtEkO+IpkyEHp0/eg0Onus
	k9ZffoT7UbkLuovN/roHswHiKPmmIQ==
X-Received: by 10.13.230.12 with SMTP id p12mr3972192ywe.276.1498750585871;
 Thu, 29 Jun 2017 08:36:25 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.37.170.163 with HTTP; Thu, 29 Jun 2017 08:36:25 -0700 (PDT)
In-Reply-To: <CAFJB9SF2WT19_HjvPevOE4OPmJS_+6d4ZcpqiWxZqYCiFu64YQ@mail.gmail.com>
References: <CAFJB9SF2WT19_HjvPevOE4OPmJS_+6d4ZcpqiWxZqYCiFu64YQ@mail.gmail.com>
From: Evgeny Roubinchtein <zhenya1007@gmail.com>
Date: Thu, 29 Jun 2017 11:36:25 -0400
Message-ID: <CAGYXaSZU24UTdZFQ-GzwkRMe-UVSakDg3hy0bfiEBN003hc9Hw@mail.gmail.com>
To: Umair Siddique <umair.hvg@gmail.com>
Cc: OCaml Mailing List <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary="94eb2c05d3344752ad05531b10fc"
Subject: Re: [Caml-list] Reading Custom Type

--94eb2c05d3344752ad05531b10fc
Content-Type: text/plain; charset="UTF-8"

You need a parser for the printed representation of your type. There are
many sources of information on parsing in OCaml, for example:
https://realworldocaml.org/v1/en/html/parsing-with-ocamllex-and-menhir.html,
https://caml.inria.fr/pub/docs/oreilly-book/html/book-ora103.html; if you
have a copy of "The Functional Approach To Programming" parsing is covered
there also.  As a shortcut, you _may_ be able to use sexp-lib to
automagically create a parser for you; sexp-lib is covered in
https://realworldocaml.org/v1/en/html/data-serialization-with-s-expressions.html
.

-- 
Best,
Zhenya

On Thu, Jun 29, 2017 at 11:24 AM, Umair Siddique <umair.hvg@gmail.com>
wrote:

> Hi all,
>
> Can someone indicate me the best way to read custom type from a file or
> from command line.
>
> for example, type abc = Awsome | Great ;;
>
> I want to read it from a file or command line
>
>
> Thanks
>
> Uma
>

--94eb2c05d3344752ad05531b10fc
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div><div>You need a parser for the printed representation=
 of your type. There are many sources of information on parsing in OCaml, f=
or example: <a href=3D"https://realworldocaml.org/v1/en/html/parsing-with-o=
camllex-and-menhir.html">https://realworldocaml.org/v1/en/html/parsing-with=
-ocamllex-and-menhir.html</a>, <a href=3D"https://caml.inria.fr/pub/docs/or=
eilly-book/html/book-ora103.html">https://caml.inria.fr/pub/docs/oreilly-bo=
ok/html/book-ora103.html</a>; if you have a copy of &quot;The Functional Ap=
proach To Programming&quot; parsing is covered there also.=C2=A0 As a short=
cut, you _may_ be able to use sexp-lib to automagically create a parser for=
 you; sexp-lib is covered in <a href=3D"https://realworldocaml.org/v1/en/ht=
ml/data-serialization-with-s-expressions.html">https://realworldocaml.org/v=
1/en/html/data-serialization-with-s-expressions.html</a>.<br><br>-- <br></d=
iv>Best,<br></div>Zhenya<br></div><div class=3D"gmail_extra"><br><div class=
=3D"gmail_quote">On Thu, Jun 29, 2017 at 11:24 AM, Umair Siddique <span dir=
=3D"ltr">&lt;<a href=3D"mailto:umair.hvg@gmail.com" target=3D"_blank">umair=
.hvg@gmail.com</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" s=
tyle=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div=
 dir=3D"ltr"><div>Hi all,=C2=A0</div><div><br></div><div>Can someone indica=
te me the best way to read custom type from a file or from command line.</d=
iv><div><br></div><div>for example, type abc =3D Awsome | Great ;;=C2=A0</d=
iv><div><br></div><div>I want to read it from a file or command line =C2=A0=
</div><div><br></div><div><br></div><div>Thanks=C2=A0</div><div><br></div><=
div>Uma</div></div>
</blockquote></div><br></div>

--94eb2c05d3344752ad05531b10fc--
