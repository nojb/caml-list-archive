Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 0BA0DBBAF
	for <caml-list@yquem.inria.fr>; Fri, 30 Jun 2006 20:42:25 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.6/8.13.6) with ESMTP id k5UIgPAo024900
	for <caml-list@yquem.inria.fr>; Fri, 30 Jun 2006 20:42:25 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA27235 for <caml-list@pauillac.inria.fr>; Fri, 30 Jun 2006 20:42:24 +0200 (MET DST)
Received: from mail.enyo.de (mail.enyo.de [212.9.189.167])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k5UIgLlR004290
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Fri, 30 Jun 2006 20:42:24 +0200
Received: from deneb.vpn.enyo.de ([212.9.189.177] helo=deneb.enyo.de)
	by mail.enyo.de with esmtp id 1FwNwI-00020B-B7; Fri, 30 Jun 2006 20:42:02 +0200
Received: from fw by deneb.enyo.de with local (Exim 4.62)
	(envelope-from <fw@deneb.enyo.de>)
	id 1FwNgy-0002XY-5k; Fri, 30 Jun 2006 20:26:12 +0200
From: Florian Weimer <fw@deneb.enyo.de>
To: Vincent Balat <Vincent.Balat@pps.jussieu.fr>
Cc: "David MENTRE" <david.mentre@gmail.com>, caml-list@inria.fr
Subject: Re: [Caml-list] Which development framework for web application in OCaml?
References: <3d13dcfc0606230918i1b20de56ne27a7b823eb06660@mail.gmail.com>
	<200606301549.16121.balat@pps.jussieu.fr>
	<3d13dcfc0606300814l1ea8bd28veafca84ab4613121@mail.gmail.com>
	<200606301801.00067.balat@pps.jussieu.fr>
Date: Fri, 30 Jun 2006 20:26:12 +0200
In-Reply-To: <200606301801.00067.balat@pps.jussieu.fr> (Vincent Balat's
	message of "Fri, 30 Jun 2006 18:00:59 +0200")
Message-ID: <87y7vepkjf.fsf@mid.deneb.enyo.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at nez-perce with ID 44A57091.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 44A5708D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 model:01 ocaml:01 unix:01 caml-list:01 caml:02 florian:02 variables:02 guess:03 correctly:04 startup:05 usual:05 implement:06 vincent:06 written:07 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

* Vincent Balat:

> I don't thing we can implement Ocsigen with CGI because our model is not "page 
> based" (with Ocsigen, you program web site as a whole, like a usual caml 
> program, you do not have a file for each URL). It may be possible with 
> FastCGI (?).

I've written a small C program which "runs" a small script containing
instructions which environment variables to forward to a domain name
socket, using a very simple protocol.  In my case, the reason was
reduced startup time (the application isn't written in Ocaml) and
clean separation of web server process and application (different UNIX
users).  FastCGI could have done the same, I guess, but its license is
a bit obnoxious and I found it very hard to configure correctly when I
used it a couple of years ago.  The downside with my approach is that
you need to take care of starting the service by some other means.

This small C program hasn't been published so far because I hope that
someone else has already published something similar. 8-/

