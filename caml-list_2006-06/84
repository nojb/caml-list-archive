Return-Path: <jon@ffconsultancy.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 6740FBBAF
	for <caml-list@yquem.inria.fr>; Wed, 28 Jun 2006 02:01:07 +0200 (CEST)
Received: from pih-relay04.plus.net (pih-relay04.plus.net [212.159.14.131])
	by nez-perce.inria.fr (8.13.6/8.13.6) with ESMTP id k5S0117C029588
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Wed, 28 Jun 2006 02:01:08 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by pih-relay04.plus.net with esmtp (Exim) id 1FvNUK-0003sx-9U
	for caml-list@yquem.inria.fr; Wed, 28 Jun 2006 01:01:00 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Marshalling data format deteriorates compressibility
Date: Wed, 28 Jun 2006 01:00:26 +0100
User-Agent: KMail/1.9.1
References: <f8560b80606271404k43c7eacer8a659395c4d1674@mail.gmail.com>
In-Reply-To: <f8560b80606271404k43c7eacer8a659395c4d1674@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200606280100.27399.jon@ffconsultancy.com>
X-Miltered: at nez-perce with ID 44A1C6BD.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; marshalling:01 markus:01 mottl:01 marshalling:01 locality:01 pointers:01 higher-order:01 coder:01 internals:01 ocaml:01 2006:98 frog:98 wrote:01 caml-list:01 rewrite:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Tuesday 27 June 2006 22:04, Markus Mottl wrote:
> As it seems, the current marshalling algorithm uses this relative
> addressing approach to save space: relative offsets are encoded with
> variable length (this assumes some degree of locality), which is not
> possible with absolute addressing.  Unfortunately, this does not take
> compression algorithms into account, which may greatly benefit from
> repeating patterns of pointers.

Interesting. Perhaps using a higher-order bitwise arithmetic coder instead of 
*zip would be the least intrusive solution? Alternatively, a custom rewrite 
tool in order to evade the compiler's internals?

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

