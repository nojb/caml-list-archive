Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id A7D89BB84
	for <caml-list@yquem.inria.fr>; Wed, 28 Jun 2006 17:24:32 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k5SFOX4H002199
	for <caml-list@yquem.inria.fr>; Wed, 28 Jun 2006 17:24:33 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA20411 for <caml-list@pauillac.inria.fr>; Wed, 28 Jun 2006 17:24:32 +0200 (MET DST)
Received: from [128.93.11.101] (buzet.inria.fr [128.93.11.101])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id k5SFOVuQ002193
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Wed, 28 Jun 2006 17:24:32 +0200
Message-ID: <44A29ED1.6000207@inria.fr>
Date: Wed, 28 Jun 2006 17:22:57 +0200
From: Alain Frisch <Alain.Frisch@inria.fr>
User-Agent: Thunderbird 1.5.0.2 (X11/20060501)
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: [announce] XStream: streaming XML transformation
X-Enigmail-Version: 0.94.0.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 44A29F31.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 44A29F30.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; frisch:01 frisch:01 computed:01 higher-level:01 ml-like:01 higher-order:01 ocaml:01 compiler:01 ocaml:01 parsed:01 caml-list:01 functions:01 native:02 data:02 output:02 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

Dear caml-list,

This is to announce the first public release of XStream, a simple
programming language for XML. Transformations written in XStream are
compiled into efficient XML stream processors: the output is computed
and produced while the input is being parsed, which makes it possible to
run some transformations on very big XML documents which could not even
fit in memory.

Though XStream is mostly intended as a back-end for higher-level
languages, it is also possible to use it directly. The language
features ML-like pattern matching and higher-order functions, but no types.


Here's how XStream relates to OCaml: the compiler is written in OCaml
and uses OCaml as a back-end to produce efficient native code. Moreover,
XStream programs can embed OCaml code and manipulate OCaml values
(useful to deal with non-XML data).


Web-site: http://yquem.inria.fr/~frisch/xstream


  Alain

