Return-Path: <info@gerd-stolpmann.de>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 8EE43BC02
	for <caml-list@yquem.inria.fr>; Mon, 26 Jun 2006 21:18:20 +0200 (CEST)
Received: from moutng.kundenserver.de (moutng.kundenserver.de [212.227.126.188])
	by nez-perce.inria.fr (8.13.6/8.13.6) with ESMTP id k5QJIKj8008564
	for <caml-list@yquem.inria.fr>; Mon, 26 Jun 2006 21:18:21 +0200
Received: from [84.58.137.123] (helo=gate.lan.gerd-stolpmann.de)
	by mrelayeu.kundenserver.de (node=mrelayeu6) with ESMTP (Nemesis),
	id 0ML29c-1FuwbD3ZiU-0003P7; Mon, 26 Jun 2006 21:18:20 +0200
Received: from free-238.machinephasesystems.com (dsl092-191-028.sfo1.dsl.speakeasy.net [66.92.191.28])
	by gate.lan.gerd-stolpmann.de (Postfix) with ESMTP id 804BEC177;
	Mon, 26 Jun 2006 21:18:18 +0200 (CEST)
Subject: Re: [Caml-list] findlib/ocamldbi
From: Gerd Stolpmann <info@gerd-stolpmann.de>
To: Jonathan Roewen <jonathan.roewen@gmail.com>
Cc: OCaml <caml-list@yquem.inria.fr>
In-Reply-To: <ad8cfe7e0606260541g6c1dc878x825fb12f1dae0ed3@mail.gmail.com>
References: <ad8cfe7e0606260541g6c1dc878x825fb12f1dae0ed3@mail.gmail.com>
Content-Type: multipart/mixed; boundary="=-zCJ6vBZjZ7BEll+IkX8B"
Date: Mon, 26 Jun 2006 21:18:15 +0200
Message-Id: <1151349496.14210.2.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.4.1 
X-Provags-ID: kundenserver.de abuse@kundenserver.de login:a6865a839c0178d9aa0ce41878507ea2
X-Miltered: at nez-perce with ID 44A032FC.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; findlib:01 gerd:01 stolpmann:01 findlib:01 bindings:01 toplevel:01 topfind:01 gerd:01 stolpmann:01 viktoriastr:01 64293:01 darmstadt:01 6151:01 6151:01 ocaml:01 
X-Attachments: name="META" 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.3


--=-zCJ6vBZjZ7BEll+IkX8B
Content-Type: text/plain
Content-Transfer-Encoding: 7bit

Am Dienstag, den 27.06.2006, 00:41 +1200 schrieb Jonathan Roewen:
> Hi,
> 
> Since I'm not sure whether this is an ocamldbi or a findlib problem, I
> thought it best to post my problem here.
> 
> I'm trying to use ocamldbi using the mysql bindings.
> 
> so I'm testing in the toplevel, and get something of the sort:
> 
> # #use "topfind";;
> ....
> # #require "dbi.mysql";;
> No such package: postgres - Required by package "dbi.postgres"
> # #require "dbi";;
> No such package: postgres - Required by package "dbi.postgres"
> 
> This dependency seems to be a phantom, as the dbi module itself
> doesn't depend on any of the client implementations...

Exactly.

The META file should include an exists_if directive to express that.
Example attached.

If you are using Godi, I recently updated the package.

Gerd
-- 
------------------------------------------------------------
Gerd Stolpmann * Viktoriastr. 45 * 64293 Darmstadt * Germany 
gerd@gerd-stolpmann.de          http://www.gerd-stolpmann.de
Phone: +49-6151-153855                  Fax: +49-6151-997714
   Currently in Montain View, California, till July, 21.
------------------------------------------------------------

--=-zCJ6vBZjZ7BEll+IkX8B
Content-Description: 
Content-Disposition: inline; filename=META
Content-Type: text/plain; charset=ISO-8859-15
Content-Transfer-Encoding: 7bit

name="ocamldbi"
version="0.9.11"
description="OCaml Database Independent Library"
archive(byte) = "dbi.cma"
archive(native) = "dbi.cmxa"
requires = "num"

package "mysql" (
  requires = "dbi,mysql"
  archive(byte) = "dbi_mysql.cmo"
  archive(native) = "dbi_mysql.cmx"
  exists_if = "dbi_mysql.cmo"
)

package "perl" (
  requires = "dbi,perl"
  archive(byte) = "dbi_perl.cmo"
  archive(native) = "dbi_perl.cmx"
  exists_if = "dbi_perl.cmo"
)

package "postgres" (
  requires = "dbi,postgres,pcre"
  archive(byte) = "dbi_postgres.cmo"
  archive(native) = "dbi_postgres.cmx"
  exists_if = "dbi_postgres.cmo"
)

package "postgresql" (
  requires = "dbi,postgresql,pcre"
  archive(byte) = "dbi_postgresql.cmo"
  archive(native) = "dbi_postgresql.cmx"
  exists_if = "dbi_postgresql.cmo"
)

package "sqlite" (
  requires = "dbi,sqlite"
  archive(byte) = "dbi_sqlite.cmo"
  archive(native) = "dbi_sqlite.cmx"
  exists_if = "dbi_sqlite.cmo"
)

--=-zCJ6vBZjZ7BEll+IkX8B--

