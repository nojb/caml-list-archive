Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA05410; Sat, 20 Apr 2002 14:18:47 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA05433 for <caml-list@pauillac.inria.fr>; Sat, 20 Apr 2002 14:18:46 +0200 (MET DST)
Received: from dpt-info.u-strasbg.fr (dpt-info.u-strasbg.fr [130.79.44.193])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g3KCIjL15086
	for <caml-list@inria.fr>; Sat, 20 Apr 2002 14:18:45 +0200 (MET DST)
Received: (from luther@localhost)
	by dpt-info.u-strasbg.fr (8.9.3/8.9.3) id OAA03188;
	Sat, 20 Apr 2002 14:19:37 +0200
Date: Sat, 20 Apr 2002 14:19:37 +0200
From: Sven <luther@dpt-info.u-strasbg.fr>
To: John Max Skaller <skaller@ozemail.com.au>
Cc: Warp <warplayer@free.fr>, Will Benton <willb@cs.wisc.edu>,
        caml-list@inria.fr
Subject: Re: [Caml-list] OCamlSDL
Message-ID: <20020420141937.B3171@dpt-info.u-strasbg.fr>
References: <m0hem93wnm.fsf@beepbeep.dev33.cvf> <02c601c1e724$deae7a60$3900a8c0@warp> <3CC03C7D.8020505@ozemail.com.au> <006101c1e7bb$18ebc610$3900a8c0@warp> <20020419110629.C30809@cilantro.cs.wisc.edu> <001b01c1e7c5$f1509c10$3900a8c0@warp> <20020419194545.A32416@dpt-info.u-strasbg.fr> <3CC1329B.6090608@ozemail.com.au>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0.1i
In-Reply-To: <3CC1329B.6090608@ozemail.com.au>; from skaller@ozemail.com.au on Sat, Apr 20, 2002 at 07:19:23PM +1000
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sat, Apr 20, 2002 at 07:19:23PM +1000, John Max Skaller wrote:
> Sven wrote:
> 
> >
> >Yes, if they are clearly isolated, which is something that ocaml makes easier,
> >then this could be done easily.
> >
> This is actually very hard to do.  In general, there is a tight
> integration between graphics and game-play engine.
> Mainly, this is because realtime behaviour demand it:
> even abstraction layers like D3D etc cause serious problems
> due to to inadequate coupling .. Diablo II is a pefect example
> of extremely bad interactive design precisely because
> it didn't lock the frame rate down, or phase lock the
> NPCs properly...the graphics were absolutely superb ..
> but they had no idea what to do about non-constant rendering
> times or how to synch the client and server properly in the presence
> of internet lag .. Blizzard sold heaps .. but their reputation is
> in tatters now ..

Mmm, yes but :

you could move all the graphic access stuff into a module, and have your
rendering code becomes a functor of such a module. True you loose a bit of
speed because of functor application and such, but i don't think it will be
that significant if you don't go down to the real low level.

That is one of the things that you can easily do in ocaml and which are not
possible in existing commercial games.

Friendly,

Sven Luther
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

