Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA19707; Mon, 15 Apr 2002 19:04:47 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA23999 for <caml-list@pauillac.inria.fr>; Mon, 15 Apr 2002 19:04:46 +0200 (MET DST)
Received: from idmc.idolminds.com ([207.174.143.98])
	by nez-perce.inria.fr (8.11.1/8.11.1) with SMTP id g3FH4hv25255
	for <caml-list@inria.fr>; Mon, 15 Apr 2002 19:04:43 +0200 (MET DST)
To: "'Jun P.FURUSE'" <Jun.Furuse@inria.fr>
Cc: "Caml-List (E-mail)" <caml-list@inria.fr>
Received: From IDMC.IDOLMINDS.COM (207.174.143.98[207.174.143.98 port:3391]) by idmc.idolminds.comMail essentials (server 2.429) with SMTP id: <3098@idmc.idolminds.com>transfer for <caml-list@inria.fr>; Mon, 15 Apr 2002 11:05:41 AM -0600 ;transfer smtpmailfrom <ITrotts@IdolMinds.com>
X-MESINK_Inbound: 0
X-MESINK_MailForType: SMTP
X-MESINK_SenderType: SMTP
X-MESINK_Sender: ITrotts@IdolMinds.com
X-MESINK_MailFor: caml-list@inria.fr
Received: by IDMC with Internet Mail Service (5.5.2653.19)id <2VKXB3HC>; Mon, 15 Apr 2002 11:05:40 -0600
From: Issac Trotts <ITrotts@IdolMinds.com>
subject: RE: [Caml-list] operator overloading
Date: Mon, 15 Apr 2002 11:05:39 -0600
X-Mailer: Internet Mail Service (5.5.2653.19)
Content-Type: text/plain;charset="iso-8859-1"
x-receiver: caml-list@inria.fr
x-sender: ITrotts@IdolMinds.com
Content-Transfer-Encoding: Quoted-Printable
MIME-Version: 1.0
Message-ID: <6b4f42b401168407d2@[192.168.1.6]>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello,

> > Looking at the Google results, operator overloading has come up 
> > as a frequently discussed topic.  Still I didn't find anything 
> > very useful in the posts that Google brought up.  Can anyone 
> > recommend a way to work around OCaml's lack of operator overloading
> > when dealing with matrices, vectors, and spinors?  Is there a 
> > way to implement this with ocamlp4?
> 
> As already someone has mentioned, you can try G'Caml: O'Caml with
> Extensional Polymorphism Extension. You can overload values
> over identifiers (including constants and operators),
> in the style of the pattern matching on types. Its experimental
> implementation is found at 
> 
>    http://pauillac.inria.fr/~furuse/generics/
> 
> Regards,
> --------------------------------------------------------------
> ---------
> Jun P. Furuse =09=09=09=09=09 
> Jun.Furuse@inria.fr
> 

This looks like a very useful variant of OCaml.  Are there any plans
to merge it with the main OCaml source after the bugs are worked out?

Cheers,
Issac Trotts
Programmer
Idol Minds




-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

