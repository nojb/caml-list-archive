Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA10805; Mon, 15 Apr 2002 18:22:14 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA22743 for <caml-list@pauillac.inria.fr>; Mon, 15 Apr 2002 18:22:13 +0200 (MET DST)
Received: from cahors.inria.fr (cahors.inria.fr [128.93.8.84])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g3FGMAD14466;
	Mon, 15 Apr 2002 18:22:10 +0200 (MET DST)
Received: from localhost (cahors.inria.fr [128.93.8.84])
	by cahors.inria.fr (Postfix) with ESMTP
	id 22519FD01; Mon, 15 Apr 2002 18:22:09 +0200 (CEST)
Date: Mon, 15 Apr 2002 18:22:03 +0200 (CEST)
Message-Id: <20020415.182203.304103632.Jun.Furuse@inria.fr>
To: ITrotts@IdolMinds.com
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] operator overloading
From: "Jun P.FURUSE" <Jun.Furuse@inria.fr>
In-Reply-To: <5c4c7f87050f7f07d2@[192.168.1.6]>
References: <5c4c7f87050f7f07d2@[192.168.1.6]>
X-URL: http://pauillac.inria.fr/~furuse/
X-Mailer: Mew version 2.2 on XEmacs 21.4.6 (Common Lisp)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello,

> Looking at the Google results, operator overloading has come up 
> as a frequently discuseed topic.  Still I didn't find anything 
> very useful in the posts that Google brought up.  Can anyone 
> recommend a way to work around OCaml's lack of operator overloading
> when dealing with matrices, vectors, and spinors?  Is there a 
> way to implement this with ocamlp4?

As already someone has mentioned, you can try G'Caml: O'Caml with
Extensional Polymorphism Extension. You can overload values
over identifiers (including constants and operators),
in the style of the pattern matching on types. Its experimental
implementation is found at 

   http://pauillac.inria.fr/~furuse/generics/

Regards,
-----------------------------------------------------------------------
Jun P. Furuse 					 Jun.Furuse@inria.fr
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

