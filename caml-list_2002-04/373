Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA12191; Thu, 25 Apr 2002 14:25:06 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA11980 for <caml-list@pauillac.inria.fr>; Thu, 25 Apr 2002 14:25:05 +0200 (MET DST)
Received: from hirsch.in-berlin.de (hirsch.in-berlin.de [192.109.42.6])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g3PCP3T00788
	for <caml-list@inria.fr>; Thu, 25 Apr 2002 14:25:04 +0200 (MET DST)
Received: from hirsch.in-berlin.de (localhost [127.0.0.1])
	by hirsch.in-berlin.de (8.12.1/8.12.1/Debian -2) with ESMTP id g3PCP2wm022479
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NOT);
	Thu, 25 Apr 2002 14:25:02 +0200
Received: (from uucp@localhost)
	by hirsch.in-berlin.de (8.12.1/8.12.1/Debian -2) with UUCP id g3PCP29Y022457;
	Thu, 25 Apr 2002 14:25:02 +0200
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: caml-list@inria.fr
Received: from localhost (oliver@localhost) by first.in-berlin.de (8.7.6/8.7.3) with SMTP id OAA00569; Thu, 25 Apr 2002 14:13:08 +0200
Date: Thu, 25 Apr 2002 14:13:07 +0200 (MET DST)
From: Oliver Bandel <oliver@first.in-berlin.de>
To: John Max Skaller <skaller@ozemail.com.au>
cc: caml-list@inria.fr
Subject: Re: [Caml-list] Some/None
In-Reply-To: <3CC75FF5.5020605@ozemail.com.au>
Message-ID: <Pine.LNX.3.95.1020425135439.483B-100000@first.in-berlin.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=ISO-8859-1
Content-Transfer-Encoding: 8BIT
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello,

On Thu, 25 Apr 2002, John Max Skaller wrote:

> Oliver Bandel wrote:
> 
> >>type file_data =
> >>      | Regular of int (* file size in megs *)
> >>      | Directory of int (* number of entries *)
> >>      | Special
> >>    ....
> >>
> >
> >nice idea. :)
> >
> 
> Perhaps. I would say designing appropriate types
> and functions for a system is hard, in any language.
> 
> The difference with Ocaml is that representing
> your designs is much easier than, say, C or C++.

Yes. I see it.
I have to explore the type-system of Ocaml
and it's facilities more intensive.
It's a wide field.

But I can see, the advantages right now.

But when you have written code in C and Perl
formany years, it's really an unknown land...
C and Perl don't give you results like
"Some 8" or such.
You only have a raw value in C (no matter if it is a
int, char, a function pointer or a pointer to
data of any type (where the types themselves
are never types in theit own right. If using
typedefs in C that is not comparable to the
type-statement of Ocaml.... that's confusing
in the first moment (even if the advantages
will get clearer from time to time))).

It could possible that maybe one day there will be
a C-toplevel, giving back the type of a C-data
(maybe gdb can be used for that). But that is
nothing, what the language itself supports.

So at first contact with Ocaml it seems
strange for C-/Perl-programmers (even
if it's possible to have a slight idea
of what is possible with that typesystem).


> The language is very expressive and yet compact,
> and it is very rarely that I bother representing
> a design on paper before coding .. the code is so
> expressive of the design it usually isn't necessary ..

It's nearly natural language you mean? ;-)


[...]
> Just my usual warning .. ocaml is a powerful drug ..
> its additive ..

I know. I reached the state, where I can acknowledge this.
And I'm prising OCaml wherever I can, even if I only have
a slight insight of it.
Maybe, some weeks or months later I will not ACK that
it's a drug - the typical reaction of a addict people:
"No, I'm not an OCaml-addict. I can stop whith it,
whenever I want to! Really! Believe me! But today I
don't want to stop programming with it... but I could
really, if I wanted to... no, I'Äm not addict..." ;-)


> a one way street .. ask Markus Mottl ..

He's really addict. So he would not say that it's
a drug. ;-)


> you just won't be able to go back to C/C++ afterwards ..
> the withdrawal symptoms are quite deadly .. :-))

:)


I know it.

Even if I stumble in Ocaml right now (but can walk better
than in my last Ocaml-phase, some months ago (I had paused
learning/using it until  the english translation of the
O'Reilly book was published in the net...))

I see the many advantages of it, compared to C.

Always when I look back to C-programming, I know,
that programming paradise is not far away when looking
forward to Ocaml. :)

Ciao,
   Oliver

P.S.: Why not doing some Ocaml-marketing and send a mail to
      Mr. Greeve from the Brave GNU World?
      Doesn't it make sense to make it more public...?
      Or is it better to wait until the OCaml-book will
      be available in the bookshops?

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

