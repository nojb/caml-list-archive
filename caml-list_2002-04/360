Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA01800; Thu, 25 Apr 2002 03:46:43 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA01786 for <caml-list@pauillac.inria.fr>; Thu, 25 Apr 2002 03:46:42 +0200 (MET DST)
Received: from sunny.pacific.net.au (sunny.pacific.net.au [203.25.148.40])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g3P1kd128711
	for <caml-list@inria.fr>; Thu, 25 Apr 2002 03:46:40 +0200 (MET DST)
Received: from wisma.pacific.net.au (wisma.pacific.net.au [210.23.129.72])
          by sunny.pacific.net.au with ESMTP
          id g3P1kVXt018974; Thu, 25 Apr 2002 11:46:31 +1000 (EST)
Received: from ozemail.com.au (ppp240.dyn18.pacific.net.au [61.8.18.240])
        by wisma.pacific.net.au with ESMTP
        id LAA28334; Thu, 25 Apr 2002 11:46:29 +1000 (EST)
Message-ID: <3CC75FF5.5020605@ozemail.com.au>
Date: Thu, 25 Apr 2002 11:46:29 +1000
From: John Max Skaller <skaller@ozemail.com.au>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.2.1) Gecko/20010901
X-Accept-Language: en-us
MIME-Version: 1.0
To: Oliver Bandel <oliver@first.in-berlin.de>
CC: caml-list@inria.fr
Subject: Re: [Caml-list] Some/None
References: <Pine.LNX.3.95.1020424183916.3286B-100000@first.in-berlin.de>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Oliver Bandel wrote:

>>type file_data =
>>      | Regular of int (* file size in megs *)
>>      | Directory of int (* number of entries *)
>>      | Special
>>    ....
>>
>
>nice idea. :)
>

Perhaps. I would say designing appropriate types
and functions for a system is hard, in any language.

The difference with Ocaml is that representing
your designs is much easier than, say, C or C++.
The language is very expressive and yet compact,
and it is very rarely that I bother representing
a design on paper before coding .. the code is so
expressive of the design it usually isn't necessary ..
in effect, ocaml lets you compile your design
to check it's consistency .. and afterwards
you can execute it .. I'm being extreme here ..
heh .. but only a bit extreme :-)

Just my usual warning .. ocaml is a powerful drug ..
its additive .. a one way street .. ask Markus Mottl ..
you just won't be able to go back to C/C++ afterwards ..
the withdrawal symptoms are quite deadly .. :-))

-- 
John Max Skaller, mailto:skaller@ozemail.com.au
snail:10/1 Toxteth Rd, Glebe, NSW 2037, Australia.
voice:61-2-9660-0850




-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

