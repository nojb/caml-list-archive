Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA13556; Thu, 18 Apr 2002 10:13:52 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA13552 for <caml-list@pauillac.inria.fr>; Thu, 18 Apr 2002 10:13:51 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g3I8Dmb14504
	for <caml-list@inria.fr>; Thu, 18 Apr 2002 10:13:49 +0200 (MET DST)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3/3.7W) with ESMTP id RAA19529;
	Thu, 18 Apr 2002 17:13:38 +0900 (JST)
To: jerome.marant@fr.thalesgroup.com
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Printf and i18n
In-Reply-To: <20020418100241.B2735@fr.thalesgroup.com>
References: <87ads2rzu8.fsf@marant.org>
	<20020418084753.A11351@verdot.inria.fr>
	<20020418100241.B2735@fr.thalesgroup.com>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20020418171338C.garrigue@kurims.kyoto-u.ac.jp>
Date: Thu, 18 Apr 2002 17:13:38 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 14
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

>   One more question : could you (or any other OCaml developer) give some
>   explainations about the Obj module since, even "not for the casual user",
>   it can be usefull sometimes (well at least for you and in the printf
>   functions)?

The Obj module lets you access the internal representation of ocaml
objects, as desribed in the "Interfacing with C" section of the
manual.
Once you have understood the details of this representation, you can
start using it sparingly, to avoid having to write external C
functions. i.e. it is best seen as an alternative to writing C code,
and is not much safer than that (just a bit easier at the GC level).

Jacques
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

