Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA18862; Sat, 13 Apr 2002 02:36:08 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA31308 for <caml-list@pauillac.inria.fr>; Sat, 13 Apr 2002 02:36:02 +0200 (MET DST)
Received: from hotmail.com (f17.law8.hotmail.com [216.33.241.17])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g3D0a1L00096
	for <caml-list@inria.fr>; Sat, 13 Apr 2002 02:36:01 +0200 (MET DST)
Received: from mail pickup service by hotmail.com with Microsoft SMTPSVC;
	 Fri, 12 Apr 2002 17:36:00 -0700
Received: from 68.82.49.153 by lw8fd.law8.hotmail.msn.com with HTTP;
	Sat, 13 Apr 2002 00:35:59 GMT
X-Originating-IP: [68.82.49.153]
From: "Ryan Tarpine" <rtarpine@hotmail.com>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Applications written in O'Caml
Date: Fri, 12 Apr 2002 20:35:59 -0400
Mime-Version: 1.0
Content-Type: text/plain; format=flowed
Message-ID: <F172oHzGkzMcvsq9IcV0000067b@hotmail.com>
X-OriginalArrivalTime: 13 Apr 2002 00:36:00.0286 (UTC) FILETIME=[2F287BE0:01C1E283]
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

>From: Vincent Foley <vinfoley@iquebec.com>
>To: caml-list@inria.fr
>Subject: [Caml-list] Applications written in O'Caml
>Date: Fri, 12 Apr 2002 11:51:27 -0400
>
>On http://caml.inria.fr, there's a section mentionning some applications
>written in O'Caml.  I'm pretty sure this list is not quite up to date
>(considering that a very nice application, Active DVI, is not included
>there.)  I'd like to know, besides the application mentionned there and
>Active DVI, are there other significant applications written in O'Caml?
>
>...

I wouldn't call this a significant application, but I thought it would be 
nice to announce this now, anyway:  my science fair project.  I wrote an 
interpreted programming language dubbed Orion that had a simple English-like 
syntax (inspired partly by Ada), first-class functions (with closures, of 
course), run-time modifiable classes, and exception handling.  One 
interesting thing I added was the ability to change the class of an object 
at runtime; you can change the methods it responds to, thereby changing its 
interface, or (keeping the same interface) how methods are implemented (i.e. 
a random number generator object could always store a seed and by changing 
its class the next number could be generated differently).

Just last night was the awards ceremony, where it won special awards from 
Intel and Yale and the first place in eleventh grade computer science 
(getting me a half-scholarship to Drexel).  Unfortunately I did not move on 
to the international science fair (only three from each grade can go; this 
fair was at the regional level - Pennsylvania, Delaware, and New Jersey 
area).  It wouldn't have been possible without help from this list, 
especially Rémi Vanicat.  Thank you for answering all of my silly questions!

Ryan Tarpine, rtarpine@hotmail.com
"To err is human, to compute divine.  Trust your computer but not its 
programmer."
  - Morris Kingston


_________________________________________________________________
MSN Photos is the easiest way to share and print your photos: 
http://photos.msn.com/support/worldwide.aspx

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

