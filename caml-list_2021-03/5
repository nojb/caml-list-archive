Return-Path: <jdimino@janestreet.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id B178BE0171
	for <caml-list@sympa.inria.fr>; Fri,  5 Mar 2021 10:45:16 +0100 (CET)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=jdimino@janestreet.com; spf=Pass smtp.mailfrom=jdimino@janestreet.com; spf=None smtp.helo=postmaster@mxout2.mail.janestreet.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  jdimino@janestreet.com) identity=pra;
  client-ip=38.105.200.79;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jdimino@janestreet.com";
  x-sender="jdimino@janestreet.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  jdimino@janestreet.com designates 38.105.200.79 as permitted
  sender) identity=mailfrom; client-ip=38.105.200.79;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jdimino@janestreet.com";
  x-sender="jdimino@janestreet.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mxout2.mail.janestreet.com) identity=helo;
  client-ip=38.105.200.79;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="jdimino@janestreet.com";
  x-sender="postmaster@mxout2.mail.janestreet.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AJryTvhQU+wubSGSYlalz9c/Fsdpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa67ZhWEt8tkgFKBZ4jH8fUM07OQ7/mxHzVYvN3Y6StKWacPfidNsd?=
 =?us-ascii?q?8RkQ0kDZzNImzAB9muURYHGt9fXkRu5XCxPBsdMs//Y1rPvi/6tmZKSV3wOgVv?=
 =?us-ascii?q?O+v6BJPZgdip2OCu4Z3TZBhDiCagbb9oIxi6sAHcutMLjYd+Kqs9xQbFrmZGdu?=
 =?us-ascii?q?9L2W5mOFWfkgrm6Myt5pBj6SNQu/wg985ET6r3erkzQKJbAjo7LW07/dXnuhbf?=
 =?us-ascii?q?QwSB4HscSXgWnQFTAwfZ9hH6X4z+vTX8u+FgxSSVJ8z2TbQzWTS/86dmTQLjhS?=
 =?us-ascii?q?kbOzIl9mzcl9d9h7xHrh2/uxN/wpbUYICLO/p4YqPdZs4RSW5YUspMSyBNHoaw?=
 =?us-ascii?q?Yo0SBOQDIOlYtZHwqFQArRS8BQeiCuDhxCJWiHDqxqA1yfgtHBvc0QA8A94Dsn?=
 =?us-ascii?q?LZp8j1OqcIVuC1ybHFwzHdYPNMxzj97YnIfQ48qv+CXLJwdMvRyU8oFwjYiViQ?=
 =?us-ascii?q?q5HqPzKQ1uQMtWib6PFtVeC1hG4htQ5xuSSvxt0yhYbXmoIZ0EzL9SJ8wIssI9?=
 =?us-ascii?q?CzVUF0b8K+HpRKqyGaK5V5QtkkQ2xwvCs0xKMKtJy1cSUEyZkr2QLSZv+JfYWU?=
 =?us-ascii?q?/h7vSvucLDV7iX9mZb+yhBK//Em9x+PzSMW53khHoCRFn9fMuH4Ayhre4dWJRP?=
 =?us-ascii?q?t6+0euwzeP1wbL5+FBIUE0ia3bK4Y7zr41kpofqUvDHi7qmEX2ka+ZbV8o9fSv?=
 =?us-ascii?q?6+TiernpuIWcN5VuhQHiM6Qug9G/DvoiPgcSX2iX4fi81Lr7/U3iXLVFlOc2kr?=
 =?us-ascii?q?XDvJDfIcQXvqu5Ag9N3YY/7Ba/Fyym0MgCknkdMFJJYheHj4zxN1HSJ/D4FfK/?=
 =?us-ascii?q?jE6tkDdt3fzGO7nhDo3ILnnDiLjhYbF961ZZyAUpzNBf4YhYCrQFIP7rRk/xs8?=
 =?us-ascii?q?TYDhs+Mwyz2+brEtB91ocGVWKKAq6WKL/SsViQ5uIrJOmMY5cVtCz4K/gh//Lu?=
 =?us-ascii?q?kXg5mUcAcqmox5sXc2q0HvFiI0mBZHrtgs8OEXsNvgomUePqiUeCUSVJa3a3W6?=
 =?us-ascii?q?Iw/jY7B56mDYjZXIyimqCO0D25Hp1OYG1NF1OCEW/weoiKWPoAcj+eLtNhnzAe?=
 =?us-ascii?q?S7StV5Mt2QusuQL+07ZrMPbY9ykCuZ/g1NV5/fPfmQ0x+DBuDcmRzWeARHxukG?=
 =?us-ascii?q?wSXT85xqV/rFR9ylid1ah4hORVFdlc5vNOTwc6KYDQw/Z/C9/oWwLBes2FSFS8?=
 =?us-ascii?q?TdWgHz4xVc4xw8UQbEljB9WulAzM3y2vA7MNlryLAoI78r7E0nX/JMtx0WvK2L?=
 =?us-ascii?q?UhglU8XMdDKXGqirR9+gXXH4LJll+Wl6eudaQSxi7N82KDwHKMvE5FUQ5wVKTF?=
 =?us-ascii?q?XXYYZkbNr9T2/EXCQKG1CbQ7KAtO19CNKrdQZtL1ilVGQe/vOM7CbGKph2ewGR?=
 =?us-ascii?q?GIy6uQY4XwfmUd2DzRCEwFkwAI4XaLLhM+Byeko2LGFjNiD1PvY0X28el/sny3?=
 =?us-ascii?q?VEE0zxvZJ3Fmgpm4/B8ehf3UYuga3/pQsTwoqh11BxC61NLfTdOL4Qh5KvZye9?=
 =?us-ascii?q?Q4tXVKz2/ctgE1Ep2lLqZlzgocfwVyvkXp/xd+DIhbjdInoW9sxw13f/HLmGhd?=
 =?us-ascii?q?fi+ViMijcobcLXP/qVX2M/aPiwPule2O86JK08wW7lDqvQWnDE0nqis10dBT3m?=
 =?us-ascii?q?CA/JjHEEwZVpejCx9rpSg/nKnTZ2wG362RzWdlaPfmsDbE1sk1HuYo1lCreNIN?=
 =?us-ascii?q?aPrZRj+3KNUTAo2VEMJvm1WtaUhUbuVC87MoZYWjfvqCnqyiOut7gCirgHgB64?=
 =?us-ascii?q?d4gBqB?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CtAwAL/UFgl0/IaSZiDgiFY1c5MYRBg?=
 =?us-ascii?q?R6QOwODGZEViB0LAQMBDSgMBAEBgViCdQKBegIdBwEENBMCEAEBBQEBAQIBAwM?=
 =?us-ascii?q?EARMBAQEBAQEBAQkWBoYRDYI4KQGDYwEBAwESEQQZAQExBgEECwkCCzcCAiISA?=
 =?us-ascii?q?QUBHAYTFA6CTgGCZiEDDJIwjxKBBD2KPnZ/M4MEAQEGR4VMgTwJEoEnhnwBAYZ?=
 =?us-ascii?q?EJhyBSUKBR4JkPoJRCwKCDYJpgl+CShcbDBwiPgEvIYEALQecRIwpkU6DCIlAk?=
 =?us-ascii?q?mQihG6eeoZNl0iCB4QJjiiEThAjgR4qgXozGggbFTsxBoIyCUcZDY4oEAmDJSi?=
 =?us-ascii?q?DBoEahXhBQTICNgIGAQkBAQMJjkQBAQ?=
X-IPAS-Result: =?us-ascii?q?A0CtAwAL/UFgl0/IaSZiDgiFY1c5MYRBgR6QOwODGZEViB0?=
 =?us-ascii?q?LAQMBDSgMBAEBgViCdQKBegIdBwEENBMCEAEBBQEBAQIBAwMEARMBAQEBAQEBA?=
 =?us-ascii?q?QkWBoYRDYI4KQGDYwEBAwESEQQZAQExBgEECwkCCzcCAiISAQUBHAYTFA6CTgG?=
 =?us-ascii?q?CZiEDDJIwjxKBBD2KPnZ/M4MEAQEGR4VMgTwJEoEnhnwBAYZEJhyBSUKBR4JkP?=
 =?us-ascii?q?oJRCwKCDYJpgl+CShcbDBwiPgEvIYEALQecRIwpkU6DCIlAkmQihG6eeoZNl0i?=
 =?us-ascii?q?CB4QJjiiEThAjgR4qgXozGggbFTsxBoIyCUcZDY4oEAmDJSiDBoEahXhBQTICN?=
 =?us-ascii?q?gIGAQkBAQMJjkQBAQ?=
X-IronPort-AV: E=Sophos;i="5.81,224,1610406000"; 
   d="scan'208,217";a="496296350"
X-MGA-submission: =?us-ascii?q?MDGT8YuRQQaH7cS1BGe15LIa7skPa064FFinEM?=
 =?us-ascii?q?sZ8oQfoO2opDnvyMIYPabnyaSlyOvI+ju/G1EY22n5eM2ZMO9rscYH+r?=
 =?us-ascii?q?qJfS4nQUOzvOJnBwCHWdnsM1dmVGl1L2zopSLqHdjuoSWG+Kx1nUvXiM?=
 =?us-ascii?q?PyAm70CrKt9mFefFnzwMm6Lg=3D=3D?=
Received: from mxout2.mail.janestreet.com ([38.105.200.79])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 05 Mar 2021 10:45:07 +0100
Received: from mail-ed1-f72.google.com ([209.85.208.72])
 	by mxgoog2.mail.janestreet.com with esmtps (TLS1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
 	(Exim 4.94)
 	id 1lI714-0007P4-Tz
 	for caml-list@inria.fr; Fri, 05 Mar 2021 04:45:03 -0500
Received: by mail-ed1-f72.google.com with SMTP id l23so659257edt.23
         for <caml-list@inria.fr>; Fri, 05 Mar 2021 01:45:02 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
         d=janestreet.com; s=google;
         h=mime-version:references:in-reply-to:from:date:message-id:subject:to
          :cc;
         bh=Pk9+ar41PSK5Mt4S/xGoqGLSeSqNq9TtuXUmOGGOhZA=;
         b=QsRWGGNgqOHEldUKhwJz3relTTu8lxSr6pnjKBMykNa7azdgW/1tqGTIjYhQ+OB+6u
          vz3LdfxxVTEKo5oYsyTTc37d/Hdk0sy1HOcqEUFzZWIzy5VrXK/xi6om4w1Km/OqRtvj
          223M//BJKnhJJHatI05iJ/1j1iJTaVyaCklUc=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
         d=1e100.net; s=20161025;
         h=x-gm-message-state:mime-version:references:in-reply-to:from:date
          :message-id:subject:to:cc;
         bh=Pk9+ar41PSK5Mt4S/xGoqGLSeSqNq9TtuXUmOGGOhZA=;
         b=qwGWaohOpjFYzabVLjktX2zbQQyQasTZMPohHF/uPppOwuM0shQgRGXpUtxRpnTJNy
          Z5dWgDXfu1/4y0JXD6TNrBiT8oHXBJrOj86oLKsLJnsZjOqCWstecMaEVeXOPuYEMmLp
          IVGvhN/mBRPuYkao2RA0aig2tfjtAZEub7754aMofyxOM0LcmIEr8W+CY2W6CXSecP4N
          TifHI+cWidOFnC393TGgZmebqqF/vCfQWcOOBuaKupazmlb/Rj2XCRKpxmsMLUk3FEP4
          umruG+Arz+e6LbfRihcj3zCIqBcvvd1rS1NPBKbSVxhrP+vpxe719refJxw/mt7qtjNN
          K5qA==
X-Gm-Message-State: AOAM530mAX8vxi6PjWkkmHnP/Z1u3pJs/ZdigfnRcFLwkwEcm9K4YToU
 	XWBw0qzkXrN+6mFzb99gxOtPEDIFKZVOXOGyKVlcuUUqA3KPTnzTWTeI4/ULha+NnBxHpEkxnJP
 	9xnJJTSP32GWnV9doNRiBXd67bw==
X-Received: by 2002:a17:906:7194:: with SMTP id h20mr1530447ejk.154.1614937501739;
         Fri, 05 Mar 2021 01:45:01 -0800 (PST)
X-Google-Smtp-Source: ABdhPJxW7xdgSp0VEDNFZClAYd8RAKVcwDTR4CfBQqJNgrk6qpHueQyna4F8lEprc//YV/vTqgjA1r2q0bggPokQX0E=
X-Received: by 2002:a17:906:7194:: with SMTP id h20mr1530432ejk.154.1614937501480;
  Fri, 05 Mar 2021 01:45:01 -0800 (PST)
MIME-Version: 1.0
References: <20210305050509.GA97697@pllab.is.ocha.ac.jp>
In-Reply-To: <20210305050509.GA97697@pllab.is.ocha.ac.jp>
From: Jeremie Dimino <jdimino@janestreet.com>
Date: Fri, 5 Mar 2021 09:44:50 +0000
Message-ID: <CANhEzE500WBfKuJaML35XECExZoa-oHHMXyhSq-sFV418oJJCA@mail.gmail.com>
To: Kenichi Asai <asai@is.ocha.ac.jp>
Cc: caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary="0000000000001c4d7d05bcc6f0ba"
Subject: Re: [Caml-list] a simple example of compiler-libs.toplevel?

--0000000000001c4d7d05bcc6f0ba
Content-Type: text/plain; charset="UTF-8"

Hi Kenichi,

It is possible to do this kind of thing. If you only want to change the
character for the prompt, you can set the Toploop.read_interactive_input
function. Then to create a custom toplevel, you need to call [Topmain.main]
and link your program with the compiler-libs.toplevel library. Here is a
complete example where I copied and adapted the default
[read_interactive_input] function from the compiler libraries, and used
dune to build a custom toplevel:

$ cat mytop.ml
let read_input prompt buffer len =
  let prompt =
    if prompt <> "" && prompt.[0] = '#' then
      String.mapi (fun i c -> if i = 0 then '%' else c) prompt
    else
      prompt
  in
  output_string stdout prompt; flush stdout;
  let i = ref 0 in
  try
    while true do
      if !i >= len then raise Exit;
      let c = input_char stdin in
      Bytes.set buffer !i c;
      Option.iter (fun b -> Buffer.add_char b c)
!Location.input_phrase_buffer;
      incr i;
      if c = '\n' then raise Exit;
    done;
    (!i, false)
  with
  | End_of_file ->
      (!i, true)
  | Exit ->
      (!i, false)

let () =
  Toploop.read_interactive_input := read_input;
  Topmain.main ()
$ cat dune
(executable
 (name mytop)
 (libraries compiler-libs.toplevel)
 (link_flags :standard -linkall)
 (modes byte))
$ dune exec ./mytop.exe
        OCaml version 4.11.1

% 1 + 1;;
- : int = 2

FTR, the compiler invocation to build myutop.exe is:
$ ocamlc -linkall -I +compiler-libs ocamlcommon.cma ocamlbytecomp.cma
ocamltoplevel.cma mytop.ml -o mytop.exe
$ ./mytop.exe
        OCaml version 4.11.1

% 1 + 1;;
- : int = 2

If you want to go further, there are few projects that add line edition
support to the toplevel, colors etc, using similar methods:
- utop: https://github.com/ocaml-community/utop
- down: https://erratique.ch/software/down

Finally, if you'd like to improve the toplevel API so that doing this kind
of thing is easier in the future, a PR is always welcome :)

Happy hacking,

Jeremie



On Fri, Mar 5, 2021 at 5:05 AM Kenichi Asai <asai@is.ocha.ac.jp> wrote:

> Is there a simple (but complete) example that uses
> compiler-libs.toplevel, like creating an OCaml toplevel that uses a
> different character for a prompt?  When I tried:
>
> - copy toplevel/topstart.ml to my_topstart.ml and change Topmain in it
>   to My_topmain
> - copy toplevel/topmain.ml to my_topmain.ml and change Toploop in it
>   to My_toploop
> - copy toplevel/toploop.ml to my_toploop.ml and change the prompt
>   character in it
> - optionally, copy toplevel/topdirs.ml to my_topdirs.ml and change
>   Toploop, etc., to My_toploop (this does not affect the story below)
>
> I ran into the following error:
>
> The ocamltoplevel.cma library from compiler-libs cannot be loaded
> inside the OCaml toplevel
>
> When I disable it (by removing the expression that raises this error
> in my_toploop.ml), I can launch the new toplevel, but I cannot define
> a new name:
>
> let a = 3
>
> results in "Fatal error: a unbound at toplevel".  Is it possible to do
> this kind of creating a new OCaml toplevel using compiler-libs.toplevel?
> Or is the compiler-libs.toplevel intended for something else?
>
> A bit of background.  I am developing an OCaml type debugger:
>
> http://pllab.is.ocha.ac.jp/~asai/TypeDebugger/
>
> and am currently trying to port it to a newer version of OCaml.  For
> the current type debugger, I inserted code for type debugging into the
> main loop in toploop.ml.  However, inserting code directly into the
> OCaml source requires me to recompile whole (or at least the core of)
> the OCaml.  If I could do the same with compiler-libs, that would be
> great.
>
> Any help is welcome.  (I also welcome the negative information saying
> that it is impossible to do this kind of thing.  Then, I would fall
> back to the old way of compiling whole the OCaml.)
>
> Thank you in advance.
>
> Sincerely,
>
> --
> Kenichi Asai
>


-- 
Jeremie

--0000000000001c4d7d05bcc6f0ba
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_default" style=3D"font-family:arial,he=
lvetica,sans-serif">Hi Kenichi,</div><div class=3D"gmail_default" style=3D"=
font-family:arial,helvetica,sans-serif"><br></div><div class=3D"gmail_defau=
lt" style=3D"font-family:arial,helvetica,sans-serif">It is possible to do t=
his kind of thing. If you only want to change the character for the prompt,=
 you can set the Toploop.read_interactive_input function. Then to create a =
custom toplevel, you need to call [Topmain.main] and link your program with=
 the compiler-libs.toplevel library. Here is a complete example where I cop=
ied and adapted the default [read_interactive_input] function from the comp=
iler libraries, and used dune to build a custom toplevel:</div><div class=
=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif"><br></d=
iv><div class=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-s=
erif">$ cat <a href=3D"http://mytop.ml">mytop.ml</a><br>let read_input prom=
pt buffer len =3D<br>=C2=A0 let prompt =3D<br>=C2=A0 =C2=A0 if prompt &lt;&=
gt; &quot;&quot; &amp;&amp; prompt.[0] =3D &#39;#&#39; then<br>=C2=A0 =C2=
=A0 =C2=A0 String.mapi (fun i c -&gt; if i =3D 0 then &#39;%&#39; else c) p=
rompt<br>=C2=A0 =C2=A0 else<br>=C2=A0 =C2=A0 =C2=A0 prompt<br>=C2=A0 in<br>=
=C2=A0 output_string stdout prompt; flush stdout;<br>=C2=A0 let i =3D ref 0=
 in<br>=C2=A0 try<br>=C2=A0 =C2=A0 while true do<br>=C2=A0 =C2=A0 =C2=A0 if=
 !i &gt;=3D len then raise Exit;<br>=C2=A0 =C2=A0 =C2=A0 let c =3D input_ch=
ar stdin in<br>=C2=A0 =C2=A0 =C2=A0 Bytes.set buffer !i c;<br>=C2=A0 =C2=A0=
 =C2=A0 Option.iter (fun b -&gt; Buffer.add_char b c) !Location.input_phras=
e_buffer;<br>=C2=A0 =C2=A0 =C2=A0 incr i;<br>=C2=A0 =C2=A0 =C2=A0 if c =3D =
&#39;\n&#39; then raise Exit;<br>=C2=A0 =C2=A0 done;<br>=C2=A0 =C2=A0 (!i, =
false)<br>=C2=A0 with<br>=C2=A0 | End_of_file -&gt;<br>=C2=A0 =C2=A0 =C2=A0=
 (!i, true)<br>=C2=A0 | Exit -&gt;<br>=C2=A0 =C2=A0 =C2=A0 (!i, false)<br><=
br>let () =3D<br>=C2=A0 Toploop.read_interactive_input :=3D read_input;<br>=
=C2=A0 Topmain.main ()<br>$ cat dune<br>(executable<br>=C2=A0(name mytop)<b=
r>=C2=A0(libraries compiler-libs.toplevel)<br>=C2=A0(link_flags :standard -=
linkall)<br>=C2=A0(modes byte))<br>$ dune exec ./mytop.exe<br>=C2=A0 =C2=A0=
 =C2=A0 =C2=A0 OCaml version 4.11.1<br><br>% 1 + 1;;<br>- : int =3D 2<br><b=
r></div><div class=3D"gmail_default" style=3D"font-family:arial,helvetica,s=
ans-serif">FTR, the compiler invocation to build myutop.exe is:</div><div c=
lass=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif">$ o=
camlc -linkall -I +compiler-libs ocamlcommon.cma ocamlbytecomp.cma ocamltop=
level.cma <a href=3D"http://mytop.ml">mytop.ml</a> -o mytop.exe<br>$ ./myto=
p.exe<br>=C2=A0 =C2=A0 =C2=A0 =C2=A0 OCaml version 4.11.1<br><br>% 1 + 1;;<=
br>- : int =3D 2<br><br></div><div class=3D"gmail_default" style=3D"font-fa=
mily:arial,helvetica,sans-serif">If you want to go further, there are few p=
rojects that add line edition support to the toplevel, colors=C2=A0etc, usi=
ng similar methods:<br></div><div class=3D"gmail_default" style=3D"font-fam=
ily:arial,helvetica,sans-serif">- utop:=C2=A0<a href=3D"https://github.com/=
ocaml-community/utop">https://github.com/ocaml-community/utop</a></div><div=
 class=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif">-=
 down:=C2=A0<a href=3D"https://erratique.ch/software/down">https://erratiqu=
e.ch/software/down</a></div><div class=3D"gmail_default" style=3D"font-fami=
ly:arial,helvetica,sans-serif"><br></div><div class=3D"gmail_default" style=
=3D"font-family:arial,helvetica,sans-serif">Finally, if you&#39;d like to i=
mprove the toplevel API so that doing this kind of thing is easier in the f=
uture, a PR is always welcome :)</div><div class=3D"gmail_default" style=3D=
"font-family:arial,helvetica,sans-serif"><br></div><div class=3D"gmail_defa=
ult" style=3D"font-family:arial,helvetica,sans-serif">Happy hacking,</div><=
div class=3D"gmail_default" style=3D"font-family:arial,helvetica,sans-serif=
"><br></div><div class=3D"gmail_default" style=3D"font-family:arial,helveti=
ca,sans-serif">Jeremie</div><div class=3D"gmail_default" style=3D"font-fami=
ly:arial,helvetica,sans-serif"><br></div><div class=3D"gmail_default" style=
=3D"font-family:arial,helvetica,sans-serif"><br></div></div><br><div class=
=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail_attr">On Fri, Mar 5, 2021 =
at 5:05 AM Kenichi Asai &lt;<a href=3D"mailto:asai@is.ocha.ac.jp">asai@is.o=
cha.ac.jp</a>&gt; wrote:<br></div><blockquote class=3D"gmail_quote" style=
=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding=
-left:1ex">Is there a simple (but complete) example that uses<br>
compiler-libs.toplevel, like creating an OCaml toplevel that uses a<br>
different character for a prompt?=C2=A0 When I tried:<br>
<br>
- copy toplevel/<a href=3D"http://topstart.ml" rel=3D"noreferrer" target=3D=
"_blank">topstart.ml</a> to <a href=3D"http://my_topstart.ml" rel=3D"norefe=
rrer" target=3D"_blank">my_topstart.ml</a> and change Topmain in it<br>
=C2=A0 to My_topmain<br>
- copy toplevel/<a href=3D"http://topmain.ml" rel=3D"noreferrer" target=3D"=
_blank">topmain.ml</a> to <a href=3D"http://my_topmain.ml" rel=3D"noreferre=
r" target=3D"_blank">my_topmain.ml</a> and change Toploop in it<br>
=C2=A0 to My_toploop<br>
- copy toplevel/<a href=3D"http://toploop.ml" rel=3D"noreferrer" target=3D"=
_blank">toploop.ml</a> to <a href=3D"http://my_toploop.ml" rel=3D"noreferre=
r" target=3D"_blank">my_toploop.ml</a> and change the prompt<br>
=C2=A0 character in it<br>
- optionally, copy toplevel/<a href=3D"http://topdirs.ml" rel=3D"noreferrer=
" target=3D"_blank">topdirs.ml</a> to <a href=3D"http://my_topdirs.ml" rel=
=3D"noreferrer" target=3D"_blank">my_topdirs.ml</a> and change<br>
=C2=A0 Toploop, etc., to My_toploop (this does not affect the story below)<=
br>
<br>
I ran into the following error:<br>
<br>
The ocamltoplevel.cma library from compiler-libs cannot be loaded<br>
inside the OCaml toplevel<br>
<br>
When I disable it (by removing the expression that raises this error<br>
in <a href=3D"http://my_toploop.ml" rel=3D"noreferrer" target=3D"_blank">my=
_toploop.ml</a>), I can launch the new toplevel, but I cannot define<br>
a new name:<br>
<br>
let a =3D 3<br>
<br>
results in &quot;Fatal error: a unbound at toplevel&quot;.=C2=A0 Is it poss=
ible to do<br>
this kind of creating a new OCaml toplevel using compiler-libs.toplevel?<br=
>
Or is the compiler-libs.toplevel intended for something else?<br>
<br>
A bit of background.=C2=A0 I am developing an OCaml type debugger:<br>
<br>
<a href=3D"http://pllab.is.ocha.ac.jp/~asai/TypeDebugger/" rel=3D"noreferre=
r" target=3D"_blank">http://pllab.is.ocha.ac.jp/~asai/TypeDebugger/</a><br>
<br>
and am currently trying to port it to a newer version of OCaml.=C2=A0 For<b=
r>
the current type debugger, I inserted code for type debugging into the<br>
main loop in <a href=3D"http://toploop.ml" rel=3D"noreferrer" target=3D"_bl=
ank">toploop.ml</a>.=C2=A0 However, inserting code directly into the<br>
OCaml source requires me to recompile whole (or at least the core of)<br>
the OCaml.=C2=A0 If I could do the same with compiler-libs, that would be<b=
r>
great.<br>
<br>
Any help is welcome.=C2=A0 (I also welcome the negative information saying<=
br>
that it is impossible to do this kind of thing.=C2=A0 Then, I would fall<br=
>
back to the old way of compiling whole the OCaml.)<br>
<br>
Thank you in advance.<br>
<br>
Sincerely,<br>
<br>
-- <br>
Kenichi Asai<br>
</blockquote></div><br clear=3D"all"><div><br></div>-- <br><div dir=3D"ltr"=
 class=3D"gmail_signature">Jeremie</div>

--0000000000001c4d7d05bcc6f0ba--
