Return-Path: <alan.schmitt@polytechnique.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id E8034E01C3
	for <caml-list@sympa.inria.fr>; Tue, 23 Mar 2021 10:05:36 +0100 (CET)
IronPort-HdrOrdr: =?us-ascii?q?A9a23=3AK6J+SqF60Xlhq1uPpLqEU8eALOonbusQ8zAX?=
 =?us-ascii?q?/mp2TgFYddHdqtC2kJ0gpGbJoRsyeFVlo9CPP6GcXWjRnKQf3aA9NaqvNTOW31?=
 =?us-ascii?q?eAA5pl6eLZsl7dMgj/7PMY6aB7b6NlAsbxBlQSt6bHyS2ZN/pl/9Wd6qCvgo7l?=
 =?us-ascii?q?vhFQZCVncbtp4Qs8KivzKCBLbTJLD5Y4C5aQj/Avz1CdUE8ad8GqQkQCNtKzxe?=
 =?us-ascii?q?Hjro7sYhINGnccmW2zpA6vgYSKdiSw71M0UzRDwbAtmFKoryXJoq+ivpiAqyP0?=
 =?us-ascii?q?5ive6oxuntaJ8LV+Lf3Jhs0MEDXwhiaEDb4PZ4G/?=
X-IronPort-AV: E=Sophos;i="5.81,271,1610406000"; 
   d="scan'208,217";a="499446043"
Received: from clt-128-93-181-133.vpn.inria.fr (HELO set) ([128.93.181.133])
  by mail2-relais-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 23 Mar 2021 10:05:35 +0100
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr,
 comp@lists.orbitalfox.eu
Date: Tue, 23 Mar 2021 10:05:35 +0100
Message-ID: <87k0pyutnk.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: base64

SGVsbG8NCg0KSGVyZSBpcyB0aGUgbGF0ZXN0IE9DYW1sIFdlZWtseSBOZXdzLCBmb3IgdGhlIHdl
ZWsgb2YgTWFyY2ggMTYgdG8gMjMsDQoyMDIxLg0KDQpUYWJsZSBvZiBDb250ZW50cw0K4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCmZpbmRsaWIt
MS45LjENCkNvbmZvcm1pc3QgMC4yLjENCkNvbXBpbGVyIEV4cGxvcmVyIG5vdyBzdXBwb3J0cyBP
Q2FtbCA0LjEyLjANCkFubm91Y2VtZW50IG9mIE9GTEFULCBhIHdlYi1iYXNlZCBwbGF0Zm9ybSB0
byBzdXBwb3J0IGNvdXJzZXMgb24gRm9ybWFsIExhbmd1YWdlcyBhbmQgQXV0b21hdGEgVGhlb3J5
DQpPbGQgQ1dODQoNCg0KZmluZGxpYi0xLjkuMQ0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToNCiAgPGh0dHBzOi8vc3ltcGEuaW5yaWEuZnIvc3lt
cGEvYXJjL2NhbWwtbGlzdC8yMDIxLTAzL21zZzAwMDE0Lmh0bWw+DQoNCg0KR2VyZCBTdG9scG1h
bm4gYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCg0KICBhIGNvdXBsZSBvZiBpbnN0YWxsYXRp
b24gcHJvYmxlbXMgc2xpcHBlZCBpbnRvIGZpbmRsaWItMS45LCBtb3N0bHkNCiAgbWlzc2luZyBm
aWxlcyBpbiB0aGUgcmVsZWFzZSB0YXJiYWxsLCBidXQgYWxzbyBhIEZyZWVCU0QNCiAgaW5jb21w
YXRpYmlsaXR5LiBGb3IgdGhhdCByZWFzb24sIHRoZXJlIGlzIG5vdyBmaW5kbGliLTEuOS4xIGZp
eGluZw0KICB0aGUgcHJvYmxlbXMgKHNvIGZhciBrbm93biwgYW5kIEkgaG9wZSB3ZSBjYXVnaHQg
dGhlbSBhbGwpLg0KDQogIFNhbWUgbGluayBhcyBiZWZvcmU6DQoNCiAgPGh0dHA6Ly9wcm9qZWN0
cy5jYW1sY2l0eS5vcmcvcHJvamVjdHMvZmluZGxpYi5odG1sPg0KDQoNCkNvbmZvcm1pc3QgMC4y
LjENCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQog
IEFyY2hpdmU6IDxodHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3QvYW5uLWNvbmZvcm1pc3QtMC0y
LTEvNzQ4Mi8xPg0KDQoNCmplcmJlbiBhbm5vdW5jZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEkgYW0gaGFwcHkgdG8gYW5ub3VuY2UgdGhl
IHJlbGVhc2Ugb2YgY29uZm9ybWlzdCAwLjIuMS4NCg0KICBbQ29uZm9ybWlzdF0gZGVhbHMgd2l0
aCBzY2hlbWEgZGVmaW5pdGlvbiBhbmQgdmFsaWRhdGlvbi4gSXQgc3VwcG9ydHMNCiAgZGVjb2Rp
bmcgdG8gYnJpZGdlIHRoZSBnYXAgYmV0d2VlbiBydW50aW1lIHR5cGVzIGFuZCBzdGF0aWMgdHlw
ZXMNCiAgd2l0aG91dCBwcHguDQoNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiB0eXBlIG9jY3Vw
YXRpb24gPQ0KICDilIIgICB8IE1hdGhlbWF0aWNpYW4NCiAg4pSCICAgfCBFbmdpbmVlcg0KICDi
lIIgDQogIOKUgiB0eXBlIHVzZXIgPQ0KICDilIIgICB7IG9jY3VwYXRpb24gOiBvY2N1cGF0aW9u
DQogIOKUgiAgIDsgZW1haWwgOiBzdHJpbmcNCiAg4pSCICAgOyBiaXJ0aGRheSA6IGludCAqIGlu
dCAqIGludA0KICDilIIgICA7IG5yX29mX3NpYmxpbmdzIDogaW50DQogIOKUgiAgIDsgY29tbWVu
dCA6IHN0cmluZyBvcHRpb24NCiAg4pSCICAgOyB3YW50c19wcmVtaXVtIDogYm9vbA0KICDilIIg
ICB9DQogIOKUgiANCiAg4pSCIGxldCB1c2VyIG9jY3VwYXRpb24gZW1haWwgYmlydGhkYXkgbnJf
b2Zfc2libGluZ3MgY29tbWVudCB3YW50c19wcmVtaXVtID0NCiAg4pSCICAgeyBvY2N1cGF0aW9u
OyBlbWFpbDsgYmlydGhkYXk7IG5yX29mX3NpYmxpbmdzOyBjb21tZW50OyB3YW50c19wcmVtaXVt
IH0NCiAg4pSCIDs7DQogIOKUgiANCiAg4pSCIGxldCBvY2N1cGF0aW9uX2RlY29kZXIgPSBmdW5j
dGlvbg0KICDilIIgICB8ICJtYXRoZW1hdGljaWFuIiAtPiBPayBNYXRoZW1hdGljaWFuDQogIOKU
giAgIHwgImVuZ2luZWVyIiAtPiBPayBFbmdpbmVlcg0KICDilIIgICB8IF8gLT4gRXJyb3IgIlVu
a25vd24gb2NjdXBhdGlvbiBwcm92aWRlZCINCiAg4pSCIDs7DQogIOKUgiANCiAg4pSCIGxldCBv
Y2N1cGF0aW9uX2VuY29kZXIgPSBmdW5jdGlvbg0KICDilIIgICB8IE1hdGhlbWF0aWNpYW4gLT4g
Im1hdGhlbWF0aWNpYW4iDQogIOKUgiAgIHwgRW5naW5lZXIgLT4gImVuZ2luZWVyIg0KICDilIIg
OzsNCiAg4pSCIA0KICDilIIgbGV0IHVzZXJfc2NoZW1hID0NCiAg4pSCICAgQ29uZm9ybWlzdC4o
DQogIOKUgiAgICAgbWFrZQ0KICDilIIgICAgICAgRmllbGQuDQogIOKUgiAJWyBjdXN0b20NCiAg
4pSCIAkgICAgb2NjdXBhdGlvbl9kZWNvZGVyDQogIOKUgiAJICAgIG9jY3VwYXRpb25fZW5jb2Rl
cg0KICDilIIgCSAgICAib2NjdXBhdGlvbiINCiAg4pSCIAkgICAgfm1ldGE6KCkNCiAg4pSCIAk7
IHN0cmluZyAiZW1haWwiDQogIOKUgiAJOyBkYXRlICJiaXJ0aGRheSINCiAg4pSCIAk7IGludCB+
ZGVmYXVsdDowICJucl9vZl9zaWJsaW5ncyINCiAg4pSCIAk7IG9wdGlvbmFsIChzdHJpbmcgImNv
bW1lbnQiKQ0KICDilIIgCTsgYm9vbCAid2FudHNfcHJlbWl1bSINCiAg4pSCIAldDQogIOKUgiAg
ICAgICB1c2VyKQ0KICDilIIgOzsNCiAg4pSCIA0KICDilIIgICBsZXQgaW5wdXQgPQ0KICDilIIg
ICAgIFsgIm9jY3VwYXRpb24iLCBbICJlbmdpbmVlciIgXQ0KICDilIIgICAgIDsgImVtYWlsIiwg
WyAidGVzdEBleGFtcGxlLmNvbSIgXQ0KICDilIIgICAgIDsgImJpcnRoZGF5IiwgWyAiMjAyMC0x
Mi0wMSIgXQ0KICDilIIgICAgIDsgIm5yX29mX3NpYmxpbmdzIiwgWyAiMyIgXQ0KICDilIIgICAg
IDsgImNvbW1lbnQiLCBbICJoZWxsbyIgXQ0KICDilIIgICAgIDsgIndhbnRzX3ByZW1pdW0iLCBb
ICJ0cnVlIiBdDQogIOKUgiAgICAgXQ0KICDilIIgDQogIOKUgiBsZXQgdXNlciA9DQogIOKUgiAg
IENvbmZvcm1pc3QuZGVjb2RlIFNjaGVtYS51c2VyX3NjaGVtYSBpbnB1dA0KICDilIIgDQogIOKU
giBsZXQgdmFsaWRhdGlvbl9lcnJvcnMgPQ0KICDilIIgICBDb25mb3JtaXN0LnZhbGlkYXRlIFNj
aGVtYS51c2VyX3NjaGVtYSBpbnB1dA0KICDilJTilIDilIDilIDilIANCg0KICBUaGUgYHVzZXJf
c2NoZW1hJyBhbmQgdGhlIGB1c2VyJyBjcmVhdGUgZnVuY3Rpb24gYXJlIGd1YXJhbnRlZWQgdG8g
YmUNCiAgaW4gc3luYyBhdCBjb21waWxlIHRpbWUuDQoNCg0KW0NvbmZvcm1pc3RdIDxodHRwczov
L2dpdGh1Yi5jb20vb3hpZGl6aW5nL2NvbmZvcm1pc3Q+DQoNCg0KQ29tcGlsZXIgRXhwbG9yZXIg
bm93IHN1cHBvcnRzIE9DYW1sIDQuMTIuMA0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToN
CiAgPGh0dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcvdC9hbm4tY29tcGlsZXItZXhwbG9yZXItbm93
LXN1cHBvcnRzLW9jYW1sLTQtMTItMC83NDc5LzM+DQoNCg0KQ29udGludWluZyB0aGlzIHRocmVh
ZCwgU29yYSBNb3JpbW90byBhbm5vdW5jZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0K
DQogIFRvZGF5IHdlIGRlcGxveWVkIDQuMTIuMCBmbGFtYmRhLiBJdCBtdXN0IGFscmVhZHkgYmUg
YXZhaWxhYmxlIQ0KDQoNCkFubm91Y2VtZW50IG9mIE9GTEFULCBhIHdlYi1iYXNlZCBwbGF0Zm9y
bSB0byBzdXBwb3J0IGNvdXJzZXMgb24gRm9ybWFsIExhbmd1YWdlcyBhbmQgQXV0b21hdGEgVGhl
b3J5DQrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZANCg0KICBBcmNoaXZlOg0KICA8aHR0cHM6Ly9zeW1wYS5p
bnJpYS5mci9zeW1wYS9hcmMvY2FtbC1saXN0LzIwMjEtMDMvbXNnMDAwMjYuaHRtbD4NCg0KDQpB
bnRvbmlvIFJhdmFyYSBhbm5vdW5jZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIDxodHRwOi8vY3Rw
LmRpLmZjdC51bmwucHQvRkFDVE9SL09GTEFULz4NCg0KICBUbyBzdXBwb3J0IHN0dWRlbnRz4oCZ
IGF1dG9ub21vdXMgd29yayBvbiB0b3BpY3MgcmVsYXRlZCB3aXRoIEZvcm1hbA0KICBMYW5ndWFn
ZXMgYW5kIEF1dG9tYXRhIFRoZW9yeSAoRkxBVCksIGludGVyYWN0aXZlIHRvb2xzIHRoYXQgYWxs
b3cNCiAgdGhlbSB0byBleHBlcmltZW50IHdpdGggZXhhbXBsZXMgYW5kIHNvbHZlIGV4ZXJjaXNl
cyBhcmUgdmVyeQ0KICBpbXBvcnRhbnQgLSBzZXZlcmFsIHN0dWRpZXMgZGVtb25zdHJhdGUgdGhp
cy4NCg0KICBUaGVyZSBhcmUgYXBwbGljYXRpb25zIHdpdGggdGhpcyBhaW0uIFdoaWxlIHNvbWUg
YXJlIGltcHJlc3NpdmVseQ0KICBjb21wbGV0ZSwgYnV0IGFyZSBtYWlubHkgRGVza3RvcCBhcHBs
aWNhdGlvbnMgKGxpa2UgSkZMQVApLCBvdGhlcnMNCiAgdGhhdCBjYW4gYmUgdXNlZCB2aWEgYSB3
ZWIgYnJvd3NlciBhcmUgdW5kZXItZGV2ZWxvcGVkLiBNb3Jlb3ZlciwNCiAgdGhlc2UgYXBwbGlj
YXRpb25zIGFyZSBvZnRlbiBub3QgZnVsbHkgaW50ZXJhY3RpdmUgLSBpbGx1c3RyYXRpb25zIG9y
DQogIGV2ZW4gc3RlcC1ieS1zdGVwIGV4ZWN1dGlvbiBpcyBrZXkgdG8gdW5kZXJzdGFuZCB0aGUg
YWxnb3JpdGhtcyAtIGFuZCwNCiAgZHVlIHRvIHRoZSBwcm9ncmFtbWluZyBsYW5ndWFnZXMgdXNl
ZCwgaW1wbGVtZW50IHRoZSBjb25jZXB0cyBpbiBhIHdheQ0KICBxdWl0ZSBkaXN0YW50IGZyb20g
dGhlIHRleHRib29rIE1hdGhlbWF0aWNhbCBkZWZpbml0aW9ucy4gQ29kZSB0aGF0DQogIGltcGxl
bWVudHMgY2xvc2VseSB0aGUgZGVmaW5pdGlvbnMgaXMgYWxzbyBhIHJlbGV2YW50IHBlZGFnb2dp
Y2FsDQogIHRvb2wuDQoNCiAgV2l0aCB0aHJlZSBjb25jZXJucyBpbiBtaW5kIC0gYXZhaWxhYmls
aXR5IGluIG1vYmlsZSBkZXZpY2VzLA0KICBpbnRlcmFjdGl2ZSBydW4gb2YgdGhlIGFsZ29yaXRo
bXMgKG9yIGF0IGxlYXN0IHByZXNlbnRpbmcgY2xlYXINCiAgZXhwbGFuYXRpb25zKSwgYW5kIGNv
ZGUgZm9sbG93aW5nIGNsb3NlbHkgdGhlIGRlZmluaXRpb25zIC0gd2UNCiAgZGV2ZWxvcGVkIE9G
TEFULCBhIHdlYi1iYXNlZCB0b29sIHRvIHJlcHJlc2VudCBhbmQgaWxsdXN0cmF0ZQ0KICBncmFw
aGljYWxseSBjbGFzc2ljYWwgbWVjaGFuaXNtcyBhbmQgYWxnb3JpdGhtcyBvZiBGb3JtYWwgTGFu
Z3VhZ2VzDQogIGFuZCBBdXRvbWF0YSBUaGVvcnkuIEl0IGluY2x1ZGVzIG5vdCBvbmx5IGV4ZXJj
aXNlcyBldmFsdWF0ZWQNCiAgYXV0b21hdGljYWxseSBhbmQgcHJvdmlkaW5nIGZlZWRiYWNrLCBi
dXQgYWxzbyBhbGxvd3Mgc3R1ZGVudHMgdG8NCiAgY3JlYXRlIHRoZWlyIG93biBleGVyY2lzZXMu
IEFuIGludGVncmF0aW9uIHdpdGggYSBncmFkaW5nIHBsYXRmb3JtDQogIGxpa2UgTGVhcm4tT0Nh
bWwgaXMgdW5kZXJ3YXkuDQoNCiAgVGhlIHRvb2wgaXMgaW1wbGVtZW50ZWQgaW4gT0NhbWwgYW5k
IGlzIG9yZ2FuaXNlZCBpbiB0d28gcGFydHM6IGENCiAgbGlicmFyeSAtIE9DYW1sRkxBVCAtIHdo
aWNoIGNvbmNlbnRyYXRlcyB0aGUgbG9naWMgb2YgRkxBVCBjb25jZXB0cywNCiAgYW5kIHRoZSBp
bnRlcmFjdGl2ZSBhcHBsaWNhdGlvbmFsIHBhcnQgLSBPRkxBVC4gVG8gcnVuIG9uIGJyb3dzZXJz
LA0KICB0aGUgYXBwbGljYXRpb24gdXNlcyB0aGUgT0NhbWwgdG8gSmF2YXNjcmlwdCB0cmFuc2xh
dG9yDQogIEpzX29mX09DYW1sLiBUbyBpbXBsZW1lbnQgdGhlIGludGVyYWN0aXZlIGdyYXBoaWNz
LCBpdCB1c2VzIEN5dG9zY2FwZSwNCiAgYSBKYXZhc2NyaXB0IGxpYnJhcnkgZm9yIGdyYXBocy4g
QWxsIGNvZGUgaXMgYXZhaWxhYmxlIGluIHRoZSBHaXQgb2YNCiAgdGhlIHByb2plY3Q6IDxodHRw
czovL2dpdGxhYi5jb20vcmVsZWFzZWxhYi9sZWFmL09DYW1sRmxhdD4sDQogIDxodHRwczovL2dp
dGxhYi5jb20vcmVsZWFzZWxhYi9sZWFmL09GTEFUPi4NCg0KICBUaGUgZGV2ZWxvcG1lbnQgb2Yg
bmV3IGZ1bmN0aW9uYWxpdGllcyBpcyBvbmdvaW5nICh3ZSdyZSBub3cgd29ya2luZw0KICBtb3Jl
IGFuaW1hdGlvbnMgYW5kIG9uIENvbnRleHQtRnJlZSBHcmFtbWFyIGFuZCBQdXNoZG93biBBdXRv
bWF0YSkuDQogIENvbW1lbnRzIG1vc3Qgd2VsY29tZS4NCg0KDQpPbGQgQ1dODQrilZDilZDilZDi
lZDilZDilZDilZANCg0KICBJZiB5b3UgaGFwcGVuIHRvIG1pc3MgYSBDV04sIHlvdSBjYW4gW3Nl
bmQgbWUgYSBtZXNzYWdlXSBhbmQgSSdsbCBtYWlsDQogIGl0IHRvIHlvdSwgb3IgZ28gdGFrZSBh
IGxvb2sgYXQgW3RoZSBhcmNoaXZlXSBvciB0aGUgW1JTUyBmZWVkIG9mIHRoZQ0KICBhcmNoaXZl
c10uDQoNCiAgSWYgeW91IGFsc28gd2lzaCB0byByZWNlaXZlIGl0IGV2ZXJ5IHdlZWsgYnkgbWFp
bCwgeW91IG1heSBzdWJzY3JpYmUNCiAgW29ubGluZV0uDQoNCiAgW0FsYW4gU2NobWl0dF0NCg0K
DQpbc2VuZCBtZSBhIG1lc3NhZ2VdIDxtYWlsdG86YWxhbi5zY2htaXR0QHBvbHl0ZWNobmlxdWUu
b3JnPg0KDQpbdGhlIGFyY2hpdmVdIDxodHRwczovL2FsYW4ucGV0aXRlcG9tbWUubmV0L2N3bi8+
DQoNCltSU1MgZmVlZCBvZiB0aGUgYXJjaGl2ZXNdIDxodHRwczovL2FsYW4ucGV0aXRlcG9tbWUu
bmV0L2N3bi9jd24ucnNzPg0KDQpbb25saW5lXSA8aHR0cDovL2xpc3RzLmlkeWxsLm9yZy9saXN0
aW5mby9jYW1sLW5ld3Mtd2Vla2x5Lz4NCg0KW0FsYW4gU2NobWl0dF0gPGh0dHBzOi8vYWxhbi5w
ZXRpdGVwb21tZS5uZXQvPg0KDQo=
--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2021-03-23 Tue 10:04 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org mode" />
<style type=3D"text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
<script type=3D"text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target =3D document.getElementById(id);
   if(null !=3D target) {
     elem.cacheClassElem =3D elem.className;
     elem.cacheClassTarget =3D target.className;
     target.className =3D "code-highlighted";
     elem.className   =3D "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target =3D document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className =3D elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className =3D elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2021.03.16.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2021.03.30.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of March 16 to 23, 2021.
</p>

<div id=3D"table-of-contents">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents">
<ul>
<li><a href=3D"#1">findlib-1.9.1</a></li>
<li><a href=3D"#2">Conformist 0.2.1</a></li>
<li><a href=3D"#3">Compiler Explorer now supports OCaml 4.12.0</a></li>
<li><a href=3D"#4">Annoucement of OFLAT, a web-based platform to support co=
urses on Formal Languages and Automata Theory</a></li>
<li><a href=3D"#org9a36a3e">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-org8c4337d" class=3D"outline-2">
<h2 id=3D"1">findlib-1.9.1</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://sympa.inria.fr/sympa/arc/caml-list/2021-03/msg0=
0014.html">https://sympa.inria.fr/sympa/arc/caml-list/2021-03/msg00014.html=
</a>
</p>
</div>

<div id=3D"outline-container-org11c8356" class=3D"outline-3">
<h3 id=3D"org11c8356">Gerd Stolpmann announced</h3>
<div class=3D"outline-text-3" id=3D"text-org11c8356">
<p>
a couple of installation problems slipped into findlib-1.9, mostly
missing files in the release tarball, but also a FreeBSD
incompatibility. For that reason, there is now findlib-1.9.1 fixing the
problems (so far known, and I hope we caught them all).
</p>

<p>
Same link as before:
</p>

<p>
<a href=3D"http://projects.camlcity.org/projects/findlib.html">http://proje=
cts.camlcity.org/projects/findlib.html</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-orga1aefe8" class=3D"outline-2">
<h2 id=3D"2">Conformist 0.2.1</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-conformist-0-2-1/7482/1=
">https://discuss.ocaml.org/t/ann-conformist-0-2-1/7482/1</a>
</p>
</div>

<div id=3D"outline-container-org6179119" class=3D"outline-3">
<h3 id=3D"org6179119">jerben announced</h3>
<div class=3D"outline-text-3" id=3D"text-org6179119">
<p>
I am happy to announce the release of conformist 0.2.1.
</p>

<p>
<a href=3D"https://github.com/oxidizing/conformist">Conformist</a> deals wi=
th schema definition and validation. It supports
decoding to bridge the gap between runtime types and static types without p=
px.
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">type</span> <span style=3D"color: #228b22;">occupation</span> =3D
  | <span style=3D"color: #000000; background-color: #ffffff;">Mathematicia=
n</span>
  | <span style=3D"color: #000000; background-color: #ffffff;">Engineer</sp=
an>

<span style=3D"color: #000000; font-weight: bold;">type</span> <span style=
=3D"color: #228b22;">user</span> =3D
  { occupation : occupation
  ; email : string
  ; birthday : int * int * int
  ; nr_of_siblings : int
  ; comment : string option
  ; wants_premium : bool
  }

<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #0000ff;">user</span> <span style=3D"color: #a0522d;">occupation=
</span> <span style=3D"color: #a0522d;">email</span> <span style=3D"color: =
#a0522d;">birthday</span> <span style=3D"color: #a0522d;">nr_of_siblings</s=
pan> <span style=3D"color: #a0522d;">comment</span> <span style=3D"color: #=
a0522d;">wants_premium</span> =3D
  { occupation; email; birthday; nr_of_siblings; comment; wants_premium }
<span style=3D"color: #ff4500;">;;</span>

<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #0000ff;">occupation_decoder</span> =3D <span style=3D"color: #a=
020f0;">function</span>
  | <span style=3D"color: #8b2252;">"mathematician"</span> -&gt; <span styl=
e=3D"color: #000000; background-color: #ffffff;">Ok</span> <span style=3D"c=
olor: #000000; background-color: #ffffff;">Mathematician</span>
  | <span style=3D"color: #8b2252;">"engineer"</span> -&gt; <span style=3D"=
color: #000000; background-color: #ffffff;">Ok</span> <span style=3D"color:=
 #000000; background-color: #ffffff;">Engineer</span>
  | _ -&gt; <span style=3D"color: #000000; background-color: #ffffff;">Erro=
r</span> <span style=3D"color: #8b2252;">"Unknown occupation provided"</spa=
n>
<span style=3D"color: #ff4500;">;;</span>

<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #0000ff;">occupation_encoder</span> =3D <span style=3D"color: #a=
020f0;">function</span>
  | <span style=3D"color: #000000; background-color: #ffffff;">Mathematicia=
n</span> -&gt; <span style=3D"color: #8b2252;">"mathematician"</span>
  | <span style=3D"color: #000000; background-color: #ffffff;">Engineer</sp=
an> -&gt; <span style=3D"color: #8b2252;">"engineer"</span>
<span style=3D"color: #ff4500;">;;</span>

<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #a0522d;">user_schema</span> =3D
  <span style=3D"color: #228b22;">Conformist.</span>(
    make
      <span style=3D"color: #228b22;">Field.</span>
        [ custom
            occupation_decoder
            occupation_encoder
            <span style=3D"color: #8b2252;">"occupation"</span>
            <span style=3D"color: #008b8b;">~meta</span>:()
        ; string <span style=3D"color: #8b2252;">"email"</span>
        ; date <span style=3D"color: #8b2252;">"birthday"</span>
        ; int <span style=3D"color: #008b8b;">~default</span>:0 <span style=
=3D"color: #8b2252;">"nr_of_siblings"</span>
        ; optional (string <span style=3D"color: #8b2252;">"comment"</span>)
        ; bool <span style=3D"color: #8b2252;">"wants_premium"</span>
        ]
      user)
<span style=3D"color: #ff4500;">;;</span>

  <span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #a0522d;">input</span> =3D
    [ <span style=3D"color: #8b2252;">"occupation"</span>, [ <span style=3D=
"color: #8b2252;">"engineer"</span> ]
    ; <span style=3D"color: #8b2252;">"email"</span>, [ <span style=3D"colo=
r: #8b2252;">"test@example.com"</span> ]
    ; <span style=3D"color: #8b2252;">"birthday"</span>, [ <span style=3D"c=
olor: #8b2252;">"2020-12-01"</span> ]
    ; <span style=3D"color: #8b2252;">"nr_of_siblings"</span>, [ <span styl=
e=3D"color: #8b2252;">"3"</span> ]
    ; <span style=3D"color: #8b2252;">"comment"</span>, [ <span style=3D"co=
lor: #8b2252;">"hello"</span> ]
    ; <span style=3D"color: #8b2252;">"wants_premium"</span>, [ <span style=
=3D"color: #8b2252;">"true"</span> ]
    ]

<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #a0522d;">user</span> =3D
  <span style=3D"color: #228b22;">Conformist.</span>decode <span style=3D"c=
olor: #228b22;">Schema.</span>user_schema input

<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #a0522d;">validation_errors</span> =3D
  <span style=3D"color: #228b22;">Conformist.</span>validate <span style=3D=
"color: #228b22;">Schema.</span>user_schema input
</pre>
</div>

<p>
The <code>user_schema</code> and the <code>user</code> create function are =
guaranteed to be in sync at compile time.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org05e7f8d" class=3D"outline-2">
<h2 id=3D"3">Compiler Explorer now supports OCaml 4.12.0</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-compiler-explorer-now-s=
upports-ocaml-4-12-0/7479/3">https://discuss.ocaml.org/t/ann-compiler-explo=
rer-now-supports-ocaml-4-12-0/7479/3</a>
</p>
</div>

<div id=3D"outline-container-org3ef6294" class=3D"outline-3">
<h3 id=3D"org3ef6294">Continuing this thread, Sora Morimoto announced</h3>
<div class=3D"outline-text-3" id=3D"text-org3ef6294">
<p>
Today we deployed 4.12.0 flambda. It must already be available!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-orga70db6d" class=3D"outline-2">
<h2 id=3D"4">Annoucement of OFLAT, a web-based platform to support courses =
on Formal Languages and Automata Theory</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://sympa.inria.fr/sympa/arc/caml-list/2021-03/msg0=
0026.html">https://sympa.inria.fr/sympa/arc/caml-list/2021-03/msg00026.html=
</a>
</p>
</div>

<div id=3D"outline-container-org163024c" class=3D"outline-3">
<h3 id=3D"org163024c">Antonio Ravara announced</h3>
<div class=3D"outline-text-3" id=3D"text-org163024c">
<p>
<a href=3D"http://ctp.di.fct.unl.pt/FACTOR/OFLAT/">http://ctp.di.fct.unl.pt=
/FACTOR/OFLAT/</a>
</p>

<p>
To support students=E2=80=99 autonomous work on topics related with Formal
Languages and Automata Theory (FLAT), interactive tools that allow them
to experiment with examples and solve exercises are very important -
several studies demonstrate this.
</p>

<p>
There are applications with this aim. While some are impressively
complete, but are mainly Desktop applications (like JFLAP), others that
can be used via a web browser are under-developed. Moreover, these
applications are often not fully interactive - illustrations or even
step-by-step execution is key to understand the algorithms - and, due to
the programming languages used, implement the concepts in a way quite
distant from the textbook Mathematical definitions. Code that implements
closely the definitions is also a relevant pedagogical tool.
</p>

<p>
With three concerns in mind - availability in mobile devices,
interactive run of the algorithms (or at least presenting clear
explanations), and code following closely the definitions - we developed
OFLAT, a web-based tool to represent and illustrate graphically
classical mechanisms and algorithms of Formal Languages and Automata
Theory. It includes not only exercises evaluated automatically and
providing feedback, but also allows students to create their own
exercises. An integration with a grading platform like Learn-OCaml is
underway.
</p>

<p>
The tool is implemented in OCaml and is organised in two parts: a
library - OCamlFLAT - which concentrates the logic of FLAT concepts, and
the interactive applicational part - OFLAT. To run on browsers, the
application uses the OCaml to Javascript translator Js_of_OCaml. To
implement the interactive graphics, it uses Cytoscape, a Javascript
library for graphs. All code is available in the Git of the project:
<a href=3D"https://gitlab.com/releaselab/leaf/OCamlFlat">https://gitlab.com=
/releaselab/leaf/OCamlFlat</a>, <a href=3D"https://gitlab.com/releaselab/le=
af/OFLAT">https://gitlab.com/releaselab/leaf/OFLAT</a>.
</p>

<p>
The development of new functionalities is ongoing (we're now working
more animations and on Context-Free Grammar and Pushdown Automata).
Comments most welcome.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org9a36a3e" class=3D"outline-2">
<h2 id=3D"org9a36a3e">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org9a36a3e">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or the <=
a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archive=
s</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--
