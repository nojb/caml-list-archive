Return-Path: <oliver@first.in-berlin.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by sympa.inria.fr (Postfix) with ESMTPS id 1B6EB7ED26
	for <caml-list@sympa.inria.fr>; Wed,  6 Jun 2012 20:18:46 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqgCABeez0/AbSoIe2dsb2JhbABFhU6uaCIBARYmBCOCGAEBBSNWEAsJBQoCAiYCAhQYMYgeBKVvklkUgQ+JdYUHMmADjVSHSJJd
X-IronPort-AV: E=Sophos;i="4.75,725,1330902000"; 
   d="scan'208";a="146809383"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 06 Jun 2012 20:18:45 +0200
X-Envelope-From: oliver@first.in-berlin.de
Received: from first (e178043142.adsl.alicedsl.de [85.178.43.142])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id q56IIhbe025483
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT);
	Wed, 6 Jun 2012 20:18:44 +0200
Received: by first (Postfix, from userid 1000)
	id 5234D154051D; Wed,  6 Jun 2012 20:18:43 +0200 (CEST)
Date: Wed, 6 Jun 2012 20:18:43 +0200
From: oliver <oliver@first.in-berlin.de>
To: Edgar Friendly <thelema314@gmail.com>
Cc: caml-list@inria.fr
Message-ID: <20120606181843.GB2128@siouxsie>
References: <1339005692.4950.2@samsung>
 <4FCF9E93.7070302@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <4FCF9E93.7070302@gmail.com>
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
Subject: Re: AW: [Caml-list] Distributed computing libraries

On Wed, Jun 06, 2012 at 02:16:51PM -0400, Edgar Friendly wrote:
> >So far I know, all the other libraries base on multi-processing to run
> >programs on multiple cores. Plasma is the only one with true
> >distribution capabiltiies beyond a single computer, but the price is
> >that you must use the map/reduce scheme, whereas functory or parmap
> >leave you more freedom.
> 
> Functory is able to run across a network, with clients listening for
> connections from the master to give them work to do.  It is
> restricted to a variant of map/reduce, so it doesn't give you that
> much freedom.


OCamlP3l allows computations transparently local or runnuning over many hosts.

Ciao,
   Oliver
