Return-Path: <fw@deneb.enyo.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id 45B717ED45
	for <caml-list@sympa.inria.fr>; Mon, 25 Jun 2012 19:32:02 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApMCALWf6E9XaqLJgWdsb2JhbABEtjAiAQEWJieCGAEBBAE6PwULCyElDwFHBogZCbhVkTUDmwSDUIk8
X-IronPort-AV: E=Sophos;i="4.77,473,1336341600"; 
   d="scan'208";a="164402963"
Received: from ka.mail.enyo.de ([87.106.162.201])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/AES256-SHA; 25 Jun 2012 19:32:01 +0200
Received: from [172.17.135.4] (helo=deneb.enyo.de)
	by ka.mail.enyo.de with esmtps (TLS1.0:RSA_AES_256_CBC_SHA1:32)
	id 1SjD8n-0007qi-Ns; Mon, 25 Jun 2012 19:31:57 +0200
Received: from fw by deneb.enyo.de with local (Exim 4.72)
	(envelope-from <fw@deneb.enyo.de>)
	id 1SjD8n-0003BH-Fl; Mon, 25 Jun 2012 19:31:57 +0200
From: Florian Weimer <fw@deneb.enyo.de>
To: Diego Olivier Fernandez Pons <dofp.ocaml@gmail.com>
Cc: Christophe TROESTLER <Christophe.Troestler@umons.ac.be>,  OCaml Mailing List <caml-list@inria.fr>
References: <CAHqiZ-KRTmTC4196dikqj8B5t4F84xEJTONaX4+Ns2UhjgeJtQ@mail.gmail.com>
	<20120624211840.124466j26yxz6rkg@webmail.in-berlin.de>
	<CAHqiZ-JOw4n1bZO_WiS5qpyHLHfK3epz0WuL2nnB36B61y=4cA@mail.gmail.com>
	<20120624.220220.2022399462583597382.Christophe.Troestler@umons.ac.be>
	<CAHqiZ-Lmhyn1tXihc-5hmjdy7Bgqo3nq_ifdBsoidYO-80SPfQ@mail.gmail.com>
Date: Mon, 25 Jun 2012 19:31:57 +0200
In-Reply-To: <CAHqiZ-Lmhyn1tXihc-5hmjdy7Bgqo3nq_ifdBsoidYO-80SPfQ@mail.gmail.com>
	(Diego Olivier Fernandez Pons's message of "Mon, 25 Jun 2012 00:19:10
	+0200")
Message-ID: <87hatzti0i.fsf@mid.deneb.enyo.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Subject: Re: [Caml-list] print_int is too slow

* Diego Olivier Fernandez Pons:

> During all the years I have been coding, I had never had to worry
> about flushing I/O (when / why / how) in any language (C/C++, Java, C#
> and OCaml).

For decent performance of the standard streams in C++, you have to
decouple them from the C stdio streams, using
std::io_base::sync_with_stdio(false). 8-)
