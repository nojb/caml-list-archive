Return-Path: <bobzhang1988@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by sympa.inria.fr (Postfix) with ESMTPS id 238A07ED26
	for <caml-list@sympa.inria.fr>; Mon, 18 Jun 2012 14:26:09 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmkCACMd30/RVdW2kGdsb2JhbABFFoZcrmEIIgEBAQEJCQ0HFAQjghgBAQEDARICLAEbGAUBAwELBgULDS4hAQERAQUBHAYTCAwOh1oBAwYFC5oYCQOMIYJwhC0KGScNV4hxAQUMikphhjsDlSSKeQaDIT6EGw
X-IronPort-AV: E=Sophos;i="4.75,791,1330902000"; 
   d="scan'208";a="148005075"
Received: from mail-yx0-f182.google.com ([209.85.213.182])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 18 Jun 2012 14:26:02 +0200
Received: by yenl8 with SMTP id l8so5388605yen.27
        for <caml-list@inria.fr>; Mon, 18 Jun 2012 05:26:01 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=zgPMd0Ot1vOsJqan2G9zJwNdFu5ArBe/HBcPTxEL03Q=;
        b=QcfaPSEYqaFWVEh2MoJeq0m4AVQh+B2BAwueo3DBRjIilrQc3HPuqdJzGYUte5qyCH
         SRm2rvvG/D8qzW3lst5AJEQFoUFW+YGmpmr4sqX68v/QFaHwrcypBm/Lz2CW3vpfhexm
         zDz0Y7HLNpgXA4HMtPuM7NJCEYl5Qm91LJrj0MrQp7L+pX6DURuqQ0zMwoOLFD3HwMdL
         nvsZ3kgVfveavsPl6LJmHwkTv+cw+OOFQ5I0mfhV+JahIDNcPPGOzgVSB5sPkZGAyIXa
         XpsSqbtNStr9HAE+Wv2bUwgK6f+/Jj8dBa74mKkNTGFxgNvlo2CddcSQHwStxBZs5WPw
         L2vQ==
MIME-Version: 1.0
Received: by 10.50.87.138 with SMTP id ay10mr201044igb.43.1340022361445; Mon,
 18 Jun 2012 05:26:01 -0700 (PDT)
Received: by 10.64.39.78 with HTTP; Mon, 18 Jun 2012 05:26:01 -0700 (PDT)
In-Reply-To: <CAOg1smAGoTBzh89mKjhj7_jjzcTWzDYsAatQTShxR_mzSaLXwA@mail.gmail.com>
References: <CANcqPu63EZx8=X3d3ipBzXS8HjuRHr371Dc7X22VRYwy2=NArQ@mail.gmail.com>
	<CAOg1smAGoTBzh89mKjhj7_jjzcTWzDYsAatQTShxR_mzSaLXwA@mail.gmail.com>
Date: Mon, 18 Jun 2012 08:26:01 -0400
Message-ID: <CANcqPu6Kkv35bWGJPZZ0BKpdP4iwRi1tzN3be1ZN_57fxcnGpA@mail.gmail.com>
From: bob zhang <bobzhang1988@gmail.com>
To: Wojciech Meyer <wojciech.meyer@googlemail.com>
Cc: Caml List <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=e89a8f3ba673d8563e04c2be44b9
Subject: Re: [Caml-list] [ANN] FAN 0.1 [Ask for feedback]


--e89a8f3ba673d8563e04c2be44b9
Content-Type: text/plain; charset=ISO-8859-1

On Mon, Jun 18, 2012 at 5:37 AM, Wojciech Meyer <
wojciech.meyer@googlemail.com> wrote:

> Hi Bob,
>
> Hi,
http://www.seas.upenn.edu/~hongboz/hongbo_zhang_files/fan.zip
It's planned to release after ocaml's 4.00 release since some ideas still
need to be polished
 but you can have a look to get a general idea.
One thing to add is that *Fan is not just a generic printer, it is a
framework that*
*you can write generic printer or whatever you want in tens of lines* :-)

> Your example generators indeed look very interesting! I would need to
> look into more details into that tonight, but you didn't provide a link
> for the library to download.
>
> Thanks,
> Wojciech
>
> On Mon, Jun 18, 2012 at 2:26 AM, bob zhang <bobzhang1988@gmail.com> wrote:
> > Hi, List
> >      Fan , a type-directed generic programming framework for OCaml
> > Using Fan, a programmer can easily create generic libraries
> > for type-directed
> > programs, including pretty printing, equality, serialization and
> > deserialization, data generation, generic traversals, folds, etc.
> >
> > Compared with deriving, Fan is mainly different in such aspects:
> > 1. It generate code without touching your source tree, module is
> > the basic unit. We generated code for all modules in ocaml's compiler
> > parsing/, typing/, and bootstrapped camlp4 source tree itself.
> > Check here
> http://www.seas.upenn.edu/~hongboz/hongbo_zhang_files/fan_doc/
> > All modules beginning with Fan_ocaml is generated code for ocaml compiler
> > Fan_camlp4ast_o is for camlp4ast itself.
> > 2. composable.  All extended syntax are in our mini dsl language "fan"
> > without polluting the original syntax
> > 3. Lightweight   Check the modules gen_plugins  we write generic
> printing,
> > equality, map, fold traversal, etc, 9 generic plugins in less than 200
> lines
> > of code.
> >
> > It's still at alpha stage, and I have some ideas that need to be
> polished, I
> > would be happy to hear any feedback. We hope that FAN can benefit ocaml
> > community as a camlp4 platform. Fan's code base is pretty small, all the
> Ast
> > Transformations are based on quasi-quotations. The only exception is
> TyDcl
> > which has no counter-part and Ast Lifting, since the current camlp4 does
> not
> > support  macro syntax in common lisp something like ``(,,).
> >
> > Many Thanks
> > --
> > -- Bob
>



-- 
-- Bob

--e89a8f3ba673d8563e04c2be44b9
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<br><br><div class=3D"gmail_quote">On Mon, Jun 18, 2012 at 5:37 AM, Wojciec=
h Meyer <span dir=3D"ltr">&lt;<a href=3D"mailto:wojciech.meyer@googlemail.c=
om" target=3D"_blank">wojciech.meyer@googlemail.com</a>&gt;</span> wrote:<b=
r><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:=
1px #ccc solid;padding-left:1ex">
Hi Bob,<br>
<br></blockquote><div>Hi,</div><div><a href=3D"http://www.seas.upenn.edu/~h=
ongboz/hongbo_zhang_files/fan.zip">http://www.seas.upenn.edu/~hongboz/hongb=
o_zhang_files/fan.zip</a></div><div>It&#39;s planned to release after ocaml=
&#39;s 4.00 release since some ideas still need to be polished</div>
<div>=A0but you can have a look to get a general idea.</div><div>One thing =
to add is that <b><i>Fan is not just a generic printer, it is a framework t=
hat</i></b></div><div><b><i>you can write generic printer or whatever you w=
ant in tens of lines</i></b> :-)</div>
<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex">
Your example generators indeed look very interesting! I would need to<br>
look into more details into that tonight, but you didn&#39;t provide a link=
<br>
for the library to download.<br>
<br>
Thanks,<br>
Wojciech<br>
<div class=3D"im HOEnZb"><br>
On Mon, Jun 18, 2012 at 2:26 AM, bob zhang &lt;<a href=3D"mailto:bobzhang19=
88@gmail.com">bobzhang1988@gmail.com</a>&gt; wrote:<br>
</div><div class=3D"HOEnZb"><div class=3D"h5">&gt; Hi, List<br>
&gt; =A0 =A0 =A0Fan , a type-directed generic programming framework for OCa=
ml<br>
&gt; Using Fan, a programmer can easily create generic libraries<br>
&gt; for type-directed<br>
&gt; programs, including pretty printing, equality, serialization and<br>
&gt; deserialization, data generation, generic traversals, folds, etc.<br>
&gt;<br>
&gt; Compared with deriving, Fan is mainly different in such aspects:<br>
&gt; 1. It generate code without touching your source tree, module is<br>
&gt; the basic unit. We generated code for all modules in ocaml&#39;s compi=
ler<br>
&gt; parsing/, typing/, and bootstrapped camlp4 source tree itself.<br>
&gt; Check here <a href=3D"http://www.seas.upenn.edu/~hongboz/hongbo_zhang_=
files/fan_doc/" target=3D"_blank">http://www.seas.upenn.edu/~hongboz/hongbo=
_zhang_files/fan_doc/</a><br>
&gt; All modules beginning with Fan_ocaml is generated code for ocaml compi=
ler<br>
&gt; Fan_camlp4ast_o is for camlp4ast itself.<br>
&gt; 2. composable. =A0All extended syntax are in our mini dsl language &qu=
ot;fan&quot;<br>
&gt; without polluting the original syntax<br>
&gt; 3. Lightweight =A0 Check the modules gen_plugins =A0we write generic p=
rinting,<br>
&gt; equality, map, fold traversal, etc, 9 generic plugins in less than 200=
 lines<br>
&gt; of code.<br>
&gt;<br>
&gt; It&#39;s still at alpha stage, and I have some ideas that need to be p=
olished, I<br>
&gt; would be happy to hear any feedback. We hope that FAN can benefit ocam=
l<br>
&gt; community as a camlp4 platform. Fan&#39;s code base is pretty small, a=
ll the Ast<br>
&gt; Transformations are based on quasi-quotations. The only exception is T=
yDcl<br>
&gt; which has no counter-part and Ast Lifting, since the current camlp4 do=
es not<br>
&gt; support =A0macro syntax in common lisp something like ``(,,).<br>
&gt;<br>
&gt; Many Thanks<br>
&gt; --<br>
&gt; -- Bob<br>
</div></div></blockquote></div><br><br clear=3D"all"><div><br></div>-- <br>=
-- Bob<br>

--e89a8f3ba673d8563e04c2be44b9--
