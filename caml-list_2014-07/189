Return-Path: <goswin-v-b@web.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id D420B7FA4D
	for <caml-list@sympa.inria.fr>; Thu, 31 Jul 2014 13:11:13 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  goswin-v-b@web.de) identity=pra; client-ip=212.227.17.11;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="goswin-v-b@web.de";
  x-sender="goswin-v-b@web.de"; x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  goswin-v-b@web.de designates 212.227.17.11 as permitted
  sender) identity=mailfrom; client-ip=212.227.17.11;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="goswin-v-b@web.de";
  x-sender="goswin-v-b@web.de"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mout.web.de) identity=helo;
  client-ip=212.227.17.11;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="goswin-v-b@web.de";
  x-sender="postmaster@mout.web.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ap4BANwj2lPU4xELnGdsb2JhbABZhDfSeQGBBxYQAQEBAQEGDQkJFCmEBAEFOk8LGAklDwUoNIgtAQMVtEQfKyKGeRePUxaDGYEbAQSbY4cHE5EFag
X-IPAS-Result: Ap4BANwj2lPU4xELnGdsb2JhbABZhDfSeQGBBxYQAQEBAQEGDQkJFCmEBAEFOk8LGAklDwUoNIgtAQMVtEQfKyKGeRePUxaDGYEbAQSbY4cHE5EFag
X-IronPort-AV: E=Sophos;i="5.01,771,1400018400"; 
   d="scan'208";a="73451501"
Received: from mout.web.de ([212.227.17.11])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 31 Jul 2014 13:11:01 +0200
Received: from frosties.localnet ([78.43.112.61]) by smtp.web.de (mrweb103)
 with ESMTPSA (Nemesis) id 0MKZy7-1XDdLA374B-001zkD for <caml-list@inria.fr>;
 Thu, 31 Jul 2014 13:10:59 +0200
Received: from mrvn by frosties.localnet with local (Exim 4.82)
	(envelope-from <goswin-v-b@web.de>)
	id 1XCoGB-0005wO-1W
	for caml-list@inria.fr; Thu, 31 Jul 2014 13:10:59 +0200
Date: Thu, 31 Jul 2014 13:10:58 +0200
From: Goswin von Brederlow <goswin-v-b@web.de>
To: caml-list@inria.fr
Message-ID: <20140731111058.GB22070@frosties>
References: <CAH+PdrAzgcsjjsMwMypzr+F53m9rWx5yFHP4650w3rmTUJw1mQ@mail.gmail.com>
 <CAHvkLrP3jJ0dp+rb4aUAQ4T5qNKYAi0W0KeLe3JNjLHFimZYfg@mail.gmail.com>
 <CAKziXDWdKWyR5LigJXVk=ahp9SO+JOrH0CdqR6_ndiKh9yuqXA@mail.gmail.com>
 <CAHvkLrMPXQU-vC3b7xTpNcHd0OHZJB=c4xGFqNCHsGfe8QkOjw@mail.gmail.com>
 <20140728112431.GC26816@frosties>
 <CAJ7XQb4Q8FSEOrNB0-anYmMaSKZqw-8zOrLc64eRN2zck5vSKg@mail.gmail.com>
 <CAPFanBFw9PUua4GmU+RwwGczmtykA9Qvk1Knv8xdb_aUPGpLKA@mail.gmail.com>
 <20140729124919.41694834@kiwi.local.tld>
 <20140729100122.GC13382@frosties>
 <20140729182901.1b8bcd0a@kiwi.local.tld>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20140729182901.1b8bcd0a@kiwi.local.tld>
User-Agent: Mutt/1.5.23 (2014-03-12)
X-Provags-ID:  V03:K0:LssqJeMM88OILkeOmRbwzT90lfcbl3xrXJzlttoXhjdsFymZ+b1
 FqIfc0xX3SttRDXED3uwoRlCh1nGo6j3qu6I0vTkTisz/Mbu1Q9LckwiP7UjsskW2JDJzy4
 COCabohmQoPhlAnOOCN0fwEk0BCjfJ+B1KVk2NYyqKDUaTsIpqQnnPXcjma4+dC9LFCe6NO
 4E20BSXwy0W+fHX7sf0PQ==
Subject: Re: [Caml-list] concurrent gc?

On Tue, Jul 29, 2014 at 06:29:01PM +0800, ygrek wrote:
> On Tue, 29 Jul 2014 12:01:22 +0200
> Goswin von Brederlow <goswin-v-b@web.de> wrote:
> 
> > The issue talks about arrays and xleroy mentioned that the magic that
> > is used to tag float arrays as such does not extend to e.g int arrays
> > and therefore, since it needs to be a runtime thing, special tagging
> > won't work there. Seems ther is only one big con.
> 
> The "pro" is the noticeable speedup, see the link in the issue.
> 
> I wonder whether modifying caml_compare to not distinguish 0 and "noscan" tag would be worthwhile..

If that is the only thing holding this back then please do.

What about marshaling? Or code that depends on Obj and looks at the
tag of things (which deserves to break :)?

MfG
	Goswin
