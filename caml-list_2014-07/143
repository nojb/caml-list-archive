Return-Path: <raould@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 549A67FA56
	for <caml-list@sympa.inria.fr>; Thu, 24 Jul 2014 19:37:41 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  raould@gmail.com) identity=pra; client-ip=209.85.219.54;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="raould@gmail.com";
  x-sender="raould@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  raould@gmail.com designates 209.85.219.54 as permitted
  sender) identity=mailfrom; client-ip=209.85.219.54;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="raould@gmail.com";
  x-sender="raould@gmail.com"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-oa0-f54.google.com) identity=helo;
  client-ip=209.85.219.54;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="raould@gmail.com";
  x-sender="postmaster@mail-oa0-f54.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqYCAJlD0VPRVds2m2dsb2JhbABYhDcEgnTPDQgWEAEBAQEBBgsLCRQphAUEExEdARseAwEREA8CJgIkAREBBQEiNYgLAQMJCJhjgxVqiymBcoMQilEKGScNZIY6EQEFDoEeiFKITIFOBYppkE2SUxgphRkdLw
X-IPAS-Result: AqYCAJlD0VPRVds2m2dsb2JhbABYhDcEgnTPDQgWEAEBAQEBBgsLCRQphAUEExEdARseAwEREA8CJgIkAREBBQEiNYgLAQMJCJhjgxVqiymBcoMQilEKGScNZIY6EQEFDoEeiFKITIFOBYppkE2SUxgphRkdLw
X-IronPort-AV: E=Sophos;i="5.01,725,1400018400"; 
   d="scan'208";a="86864346"
Received: from mail-oa0-f54.google.com ([209.85.219.54])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 24 Jul 2014 19:37:40 +0200
Received: by mail-oa0-f54.google.com with SMTP id n16so4145061oag.27
        for <caml-list@inria.fr>; Thu, 24 Jul 2014 10:37:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:from:date:message-id:subject:to:content-type;
        bh=D/QLjpmZqFNJEA5e28inB5oezzamvzLLegeNW7tmzZ4=;
        b=OAiPzGXfPUu0xF9HslAh2XWQ45lf8o3QJa/YWonQB3gCidWmlVhfwHdJfxs6SD1C3K
         vbUXO7V7OM4gTuGxb6V/sVzld36MBf32+cUDRPit9ByzY+/aKB5lwQHBSX5WzwJ//PKM
         hl5YDDJNb0+vJuLar1aqzDXEtrzUkhMTun8nbnWrSOKciBHHB0eHHUjR71eWqNLhOkMi
         UtAsO95DwXOv87K3GwtbUt+Kkal24Ie+zSzkeM1NYVZ/k9KTR/EWQiluMuRXhyojdaDL
         nPC/FzlCAh0zpkLBO16sf1DBakM+UJPP3bp0gRMh7ufZql1Y/5hioaW8NBgVlSw0rc1Y
         cAjw==
X-Received: by 10.60.46.167 with SMTP id w7mr15465935oem.50.1406223459452;
 Thu, 24 Jul 2014 10:37:39 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.182.151.101 with HTTP; Thu, 24 Jul 2014 10:37:19 -0700 (PDT)
From: Raoul Duke <raould@gmail.com>
Date: Thu, 24 Jul 2014 10:37:19 -0700
Message-ID: <CAJ7XQb6KZrjqj=4hdMEkWZd=KT47xmwu=E-6x7wDjam3Vz6zPQ@mail.gmail.com>
To: caml-list <caml-list@inria.fr>
Content-Type: text/plain; charset=UTF-8
Subject: [Caml-list] meta-gc (Re: concurrent gc?)

> I agree with Malcolm's experience, and my situation might be similar to
> yours: games -- a lot of allocations at high framerate. I'm guessing this
> from how evil you consider pauses to be. ;)

yes, interactive apps.

> allocators -- you still need to use dynamic allocations wisely. Here, I
> think the biggest problem is when you have a GC, you lose awareness of the
> allocations you're triggering.

yes, those are nice down to earth wise words that need to be said more
often in every class :-)

to kick the question up a meta-level: Does anybody have thoughts on
how to best orthogonalize actual memory allocation from where the
application says it wants it? I mean if I write a stupid loop that
makes a zillion particles in the middle of each frame render then yes
I'm an idiot, sure... but what things can be done to actually allow
such idiocy to squeak by?

Maybe that's a horrible thing to suggest as it just panders. But I
like to think of it more along the lines of trying to tease things
apart as much as possible, and then some more (to corrupt an infamous
meme).

[In some sense that is what GC purported to be when it was being sold
like snake oil :-) and for a long time "regular" programmers knew
better and would make fun of e.g. lisp programmers.]
