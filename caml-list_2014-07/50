Return-Path: <sympa_inria@inria.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 956017FA13
	for <caml-list@sympa.inria.fr>; Tue,  8 Jul 2014 20:15:41 +0200 (CEST)
X-IronPort-AV: E=Sophos;i="5.01,626,1400018400"; 
   d="scan'208";a="84202065"
Received: from sympa.inria.fr ([193.51.193.213])
  by mail2-relais-roc.national.inria.fr with ESMTP; 08 Jul 2014 20:15:41 +0200
Received: by sympa.inria.fr (Postfix, from userid 20132)
	id 83DEB7FA14; Tue,  8 Jul 2014 20:15:41 +0200 (CEST)
Date: Tue, 08 Jul 2014 20:15:39 +0200
To: caml-list@inria.fr
In-Reply-To: <1404501528.4384.4.camel@e130>
Message-ID: <sympa.1404842907.21063.651@inria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7BIT
From: mattiasw@gmail.com
X-Mailer: Sympa 6.1.17
X-Validation-by: mattiasw@gmail.com
Subject: Re: [Caml-list] Immutable strings

My two cents:

To me it seems very strange to introduce a new string type and not make it
UTF-8 from start.

ocaml will be that last language that doesn't have standardize unicode
support. Even old languages like Erlang has gone the UTF-8 way, and that
includes program code.

Bytes and strings have nothing in common, but str.[4] is still relevant for
UTF-8 strings. The algorithm is slighly more complicated.

I converted a big ocaml program to F# and the immutable strings was the
smallest problem, since detected by the compiler.

