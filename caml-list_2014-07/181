Return-Path: <garrigue@math.nagoya-u.ac.jp>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 1CB677FA4D
	for <caml-list@sympa.inria.fr>; Wed, 30 Jul 2014 16:24:33 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  garrigue@math.nagoya-u.ac.jp) identity=pra;
  client-ip=133.6.130.5;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="garrigue@math.nagoya-u.ac.jp";
  x-sender="garrigue@math.nagoya-u.ac.jp";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  garrigue@math.nagoya-u.ac.jp) identity=mailfrom;
  client-ip=133.6.130.5;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="garrigue@math.nagoya-u.ac.jp";
  x-sender="garrigue@math.nagoya-u.ac.jp";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mailhost.math.nagoya-u.ac.jp) identity=helo;
  client-ip=133.6.130.5;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="garrigue@math.nagoya-u.ac.jp";
  x-sender="postmaster@mailhost.math.nagoya-u.ac.jp";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmQDAJb/2FOFBoIFnGdsb2JhbABag2BXAYJ3yDoKh0sBgSQQAQEBAQEIFAk9hAQBBSMdAwE1AQEOCxgCAhgOAgJXBohUDqdXd4UIAowthjIQAQaBLIwQgV0zB4I4DzISJIEbiwKQZ4FSjF+Jel0B
X-IPAS-Result: AmQDAJb/2FOFBoIFnGdsb2JhbABag2BXAYJ3yDoKh0sBgSQQAQEBAQEIFAk9hAQBBSMdAwE1AQEOCxgCAhgOAgJXBohUDqdXd4UIAowthjIQAQaBLIwQgV0zB4I4DzISJIEbiwKQZ4FSjF+Jel0B
X-IronPort-AV: E=Sophos;i="5.01,764,1400018400"; 
   d="scan'208";a="87624371"
Received: from rabbit.math.nagoya-u.ac.jp (HELO mailhost.math.nagoya-u.ac.jp) ([133.6.130.5])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 30 Jul 2014 16:24:28 +0200
Received: from mailhost.math.nagoya-u.ac.jp (localhost [127.0.0.1])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTP id D933663A9;
	Wed, 30 Jul 2014 23:24:24 +0900 (JST)
Received: from mailhost.math.nagoya-u.ac.jp (localhost [127.0.0.1])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTP id 870084116;
	Wed, 30 Jul 2014 23:24:24 +0900 (JST)
DKIM-Signature: v=1; a=rsa-sha1; c=relaxed; d=math.nagoya-u.ac.jp; h=
	content-type:mime-version:subject:from:in-reply-to:date:cc
	:content-transfer-encoding:message-id:references:to; s=alpha;
	 bh=krziQOoU769vm3Kz4aGD2ZFW7ZE=; b=Y0dUbcz2bs9JT3v4yB1lQlmCWGqK
	RzSBCGOik8zg3iEH745OD3mRZ3qzDzjBUthe3YeuC0jDHR4htyeW4ce1dt93xXzq
	/9EYfh0pQg2olfPWu9yOPPPU/dDpihSLV+xQae322PV97YGzMLXmlnuZfMiWR0EB
	nSGut7mAWrWfZVU=
DomainKey-Signature: a=rsa-sha1; h=Received:Content-Type:Mime-Version:Subject:From:In-Reply-To:Date:Cc:Content-Transfer-Encoding:Message-Id:References:To:X-Mailer; b=A6S1JT34TNEMq/1orNGmNw8kNchYeh5705c2RDceiHdFROYsCrJpfTiqSxw/tp/gt7a+ukgAmWHrC7CB9lBLIzQTnJg2kbP6gxbu6B0MfkZJC83tbEhHPj3Y3S7IVnEB1EeEx+cCApq2Ua8Xmh6FJmmwpNzg+977/CjoFtv44BQ=; c=nofws; d=math.nagoya-u.ac.jp; q=dns; s=alpha
Received: from tet.garrigue.jp (58x158x128x157.ap58.ftth.ucom.ne.jp [58.158.128.157])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTPSA id 22D45251A;
	Wed, 30 Jul 2014 23:24:24 +0900 (JST)
Content-Type: text/plain; charset=utf-8
Mime-Version: 1.0 (Mac OS X Mail 7.3 \(1878.6\))
From: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <53D8EEF7.6060001@tu-berlin.de>
Date: Wed, 30 Jul 2014 23:24:23 +0900
Cc: OCaML List Mailing <caml-list@inria.fr>
Content-Transfer-Encoding: quoted-printable
Message-Id: <1E6C6D2A-E786-4EF5-85A0-0835A4F593F0@math.nagoya-u.ac.jp>
References: <53D8EEF7.6060001@tu-berlin.de>
To: =?utf-8?Q?Christoph_H=C3=B6ger?= <christoph.hoeger@tu-berlin.de>
X-Mailer: Apple Mail (2.1878.6)
Subject: Re: [Caml-list] Segmentation fault due to uncaught type error

On 2014/07/30 22:11, Christoph H=C3=B6ger wrote:
>=20
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA1
>=20
> Dear OCaml users/developers,
>=20
> I am developing a rather large codebase using OCaml and somewhat
> stressing the type system in the process. I already triggered a bug
> which I could reproduce with a small example and reported it.
>=20
> This one is different. In short: I have a test case that compiles just
> fine, even though my program contains a (stupid) type error. Resulting
> is a runtime crash of the generated OCaml code (while attempting to
> access a record field, a computed pointer points to noman's land).
>=20
> The thing is: this time, I don't see a way to reduce the code to a
> smaller size. It is probably doable, but it's also likely that the
> reduced code will not trigger the error. So the whole process will
> probably take a long time. Time, I (unfortunately) do not have.
>=20
> On the other hand, I would consider this kind of a bug a very severe
> problem in any statically typed language. So I really want to help out
> to track down and reproduce this bug. I just cannot do it alone.
>=20
> As a first step, if anyone wants to work on this issue, I would help
> out to compile the program in the first place. It has some
> dependencies which could be cut-off, and others that need to be
> installed. Hopefully, most deps could be removed, though.
>=20
> Anyone interested?
>=20
> Christoph


If there is really a bug in the compiler, this is indeed bad.
This happens once in a while, and we fix that as soon as possible.
A good idea would be to check with a recent version of the compiler,
for instance the current state of the 4.02 branch, which is now pretty stab=
le.

  svn co http://caml.inria.fr/svn/ocaml/version/4.02

Otherwise, if you know what the type error should be, you can try to explai=
n it with
a snippet of code. Sometimes what the type should be is not so clear :-)

And bug reports go to the bug tracking system.
  http://caml.inria.fr/mantis/
It=E2=80=99s better if you can cut it down to something understandable, but=
 if you can=E2=80=99t
we=E2=80=99ll still look into it.

Jacques Garrigue

