Return-Path: <agarwal1975@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id F00367F9BB
	for <caml-list@sympa.inria.fr>; Wed,  2 Jul 2014 17:20:50 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  agarwal1975@gmail.com) identity=pra; client-ip=209.85.192.47;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="agarwal1975@gmail.com";
  x-sender="agarwal1975@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  agarwal1975@gmail.com designates 209.85.192.47 as permitted
  sender) identity=mailfrom; client-ip=209.85.192.47;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="agarwal1975@gmail.com";
  x-sender="agarwal1975@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qg0-f47.google.com) identity=helo;
  client-ip=209.85.192.47;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="agarwal1975@gmail.com";
  x-sender="postmaster@mail-qg0-f47.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnkBAA8itFPRVcAvlGdsb2JhbABag19agm6oUwEGkT+JFQF/CBYPAQEBAQcLCwkSKoQDAQEBAwESEQQZARsdAQMBCwYDAgsGAwECAScDAgIhAQERAQUBCwkIBhMiiAsBAwkIjmyQFmqLJ4FygxCPTwoZJw1khSURAQUOhWKHCoIXEQcGgnGBTAEEmG6Bf4FIjC6EIxgphQ8h
X-IPAS-Result: AnkBAA8itFPRVcAvlGdsb2JhbABag19agm6oUwEGkT+JFQF/CBYPAQEBAQcLCwkSKoQDAQEBAwESEQQZARsdAQMBCwYDAgsGAwECAScDAgIhAQERAQUBCwkIBhMiiAsBAwkIjmyQFmqLJ4FygxCPTwoZJw1khSURAQUOhWKHCoIXEQcGgnGBTAEEmG6Bf4FIjC6EIxgphQ8h
X-IronPort-AV: E=Sophos;i="5.01,588,1400018400"; 
   d="scan'208";a="69907104"
Received: from mail-qg0-f47.google.com ([209.85.192.47])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 02 Jul 2014 17:20:49 +0200
Received: by mail-qg0-f47.google.com with SMTP id q108so4782832qgd.20
        for <multiple recipients>; Wed, 02 Jul 2014 08:20:48 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=KgJjeo6swWoDb+Qeyt9eD2hCP5waF6x43T9BQk9wmHY=;
        b=ZbEX1V6wpbZ/M6W5vHe7anc7nrobZhi7gSahLG3oyiZzAjcqBCmkZaYiYUzMYj0L1e
         1rg5RgI+mTtD5wMvDxrCEMLW+0S9LK+WiVEn68wtXoprNhk4h1z3zsja8d6KU4dUpiSV
         34o2NCHSFVtn7IYEMni10kZY2lFfSGHqH33T2gyhCWzRKOq0hft/LHA83YcSY1GD9bvR
         ZPnVp2DracZQydkheDMKlV+P/rSkWPshx3929E4M4KH99JfUjPjgSaMbXVmuMMhA6iZj
         Z9B3TLICCnp3sWc71MvYvwYJGd2EVKvhZgmajNFqLYXOtepw8x+qwtH+xCWn+bfyA+Vh
         +Dbg==
X-Received: by 10.140.48.161 with SMTP id o30mr81355745qga.68.1404314448446;
 Wed, 02 Jul 2014 08:20:48 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.229.133.78 with HTTP; Wed, 2 Jul 2014 08:20:28 -0700 (PDT)
In-Reply-To: <CAOOOohTJH0a2zuyuj62fSmPi+oc4azR8Cc8nvHPXTRe=+QrARQ@mail.gmail.com>
References: <CAOOOohTxesz1QpzFYO5RvjwpwRbuRJ_wKvYsYOqb23FsYKDVQg@mail.gmail.com>
 <CAOOOohTkg=oc+jRDe40FWoZhUqGZ7acSNdsSGrwBiUaEyUYojg@mail.gmail.com>
 <CAAWM5TyC4ti6TWLCJt961bOiMAx5610VQ9cyo632hJNJPE9aQg@mail.gmail.com>
 <CAOOOohRO3o0D8RW2jSAZ5gYrV-cDw4VpN-U3k-5JYv8dZm+-Vw@mail.gmail.com>
 <CAHvkLrMx8eRG8Zn3LXcTMoA4+SX60+ZQnKc9cakv1uo0_CaFwQ@mail.gmail.com>
 <CAOOOohSGzGuxghCE2sZH7aK8AZ+Ah1o26=rHBsom+AtR7F3Wow@mail.gmail.com>
 <53B3F496.2020908@inria.fr> <CAOOOohTJH0a2zuyuj62fSmPi+oc4azR8Cc8nvHPXTRe=+QrARQ@mail.gmail.com>
From: Ashish Agarwal <agarwal1975@gmail.com>
Date: Wed, 2 Jul 2014 11:20:28 -0400
Message-ID: <CAMu2m2KKyDcjGQU7Qfi+PUgSQc09=J4t1omn7PQRHiBHAxRiyg@mail.gmail.com>
To: Philippe Veber <philippe.veber@gmail.com>
Cc: Romain Bardou <romain.bardou@inria.fr>, 
	Fabrice Le Fessant <Fabrice.Le_fessant@inria.fr>, David Sheets <sheets@alum.mit.edu>, 
	caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a1135086eda4a1a04fd376f93
Subject: Re: [Caml-list] Fwd: Toplevel and syntax extension.

--001a1135086eda4a1a04fd376f93
Content-Type: text/plain; charset=UTF-8

Yet another option is to use ocamlscript. The following works:

$ cat script.ml
#! /usr/bin/env ocamlscript
Ocaml.ocamlflags := ["-thread"];
Ocaml.packs := ["sexplib.syntax"]
--
open Sexplib.Std
type t = int with sexp

$ ./script.ml
(* compiles without error *)




On Wed, Jul 2, 2014 at 10:48 AM, Philippe Veber <philippe.veber@gmail.com>
wrote:

> Thanks Romain, I'll rather use Fabrice's suggestion, which handles
> command-line argument more simply.
>
> Cheers,
>
>  Philippe.
>
>
> 2014-07-02 14:01 GMT+02:00 Romain Bardou <romain.bardou@inria.fr>:
>
> You could write a wrapper which start the ocaml process, sends a string
>> containing something like:
>>
>> module Sys =
>> struct
>>   include Sys
>>   let argv = ... (* fill this *)
>> end
>>
>> to the ocaml process (replace the ... by the arguments given to the
>> wrapper, using the array syntax, and don't forget that the first cell
>> must contain the executable path), and then pass the contents of your
>> script.ml.
>>
>> This does not work if your script uses other modules which themselves
>> use Sys.argv.
>>
>> Cheers,
>>
>> -- Romain Bardou
>>
>> On 02/07/2014 13:48, Philippe Veber wrote:
>> > Thanks Fabrice, this perfectly explains what I observe. Is this behavior
>> > considered the right one? Reading from a pipe is regretfully not an
>> > option for me, as my script has command line arguments. Hence when I
>> type:
>> >
>> > cat script.ml <http://script.ml> | ocaml --foo --bar 1
>> >
>> > the toplevel complains it knows nothing about the arguments foo and bar.
>> > A "--" argument would be useful but it seems not available. If it's so,
>> > I'll file a feature request on Mantis, since without it, there seems to
>> > be no way to give a script to the toplevel that both takes command line
>> > arguments and uses a syntax extension.
>> >
>> > Thanks again!
>> >
>> >
>> >
>> > 2014-07-02 10:08 GMT+02:00 Fabrice Le Fessant
>> > <Fabrice.Le_fessant@inria.fr <mailto:Fabrice.Le_fessant@inria.fr>>:
>> >
>> >     If I remember well, I think "ocaml" has a different behavior
>> >     depending on what it reads from:
>> >     * From a pipe, it parses every sentence and execute each one
>> >     immediatly.
>> >     * From a file, it tries to parse the whole file, and then executes
>> >     everything.
>> >
>> >     In the second case, it means it will only execute the load of the
>> >     syntax extension after parsing the whole file... which will fail,
>> >     since the syntax extension is needed for that.
>> >
>> >     --Fabrice
>> >     INRIA & OCamlPro
>> >
>> >
>> >
>> >     On Tue, Jul 1, 2014 at 7:06 PM, Philippe Veber
>> >     <philippe.veber@gmail.com <mailto:philippe.veber@gmail.com>> wrote:
>> >
>> >         Thanks David!
>> >
>> >         The first call fails with a syntax error on "with sexp":
>> >
>> >         [pbil:~ 18:58]$cat rien.ml <http://rien.ml>
>> >
>> >         let () =
>> >           try Topdirs.dir_directory (Sys.getenv "OCAML_TOPLEVEL_PATH")
>> >           with Not_found -> ()
>> >         ;;
>> >
>> >         #use "topfind";;
>> >         #camlp4o;;
>> >         #require " sexplib.syntax";;
>> >
>> >         open Sexplib.Std;;
>> >
>> >         type t = int with sexp;;
>> >
>> >         [pbil:~ 18:58]$ocaml rien.ml <http://rien.ml>
>> >         File "rien.ml <http://rien.ml>", line 12, characters 13-17:
>> >         Error: Syntax error
>> >
>> >         It seems like the sexp syntax extension is not loaded when the
>> >         script is evaluated. But it's not really clear to me what going
>> >         wrong...
>> >
>> >         Cheers!
>> >         ph.
>> >
>> >
>> >
>> >         2014-07-01 18:51 GMT+02:00 David Sheets <sheets@alum.mit.edu
>> >         <mailto:sheets@alum.mit.edu>>:
>> >
>> >             On Tue, Jul 1, 2014 at 5:38 PM, Philippe Veber
>> >             <philippe.veber@gmail.com <mailto:philippe.veber@gmail.com
>> >>
>> >             wrote:
>> >             > Reposting this question here, just in case.
>> >             >
>> >             > ---------- Forwarded message ----------
>> >             > From: Philippe Veber <philippe.veber@gmail.com
>> >             <mailto:philippe.veber@gmail.com>>
>> >             > Date: 2014-06-28 21:32 GMT+02:00
>> >             > Subject: Toplevel and syntax extension.
>> >             > To: ocaml_beginners@yahoogroups.com
>> >             <mailto:ocaml_beginners@yahoogroups.com>
>> >             >
>> >             >
>> >             > Dear camlers,
>> >             >
>> >             > Consider the following script:
>> >             >
>> >             > #use "topfind";;
>> >             > #camlp4o;;
>> >             > #require "sexplib.syntax";;
>> >             >
>> >             > open Sexplib.Std;;
>> >             >
>> >             > type t = int with sexp;;
>> >             >
>> >             > Saved as script.ml <http://script.ml>, the simple call:
>> >             >
>> >             > ocaml script.ml <http://script.ml>
>> >             >
>> >             > fails while the call:
>> >             >
>> >             > cat script.ml <http://script.ml> | ocaml
>> >             >
>> >             > succeeds. Any idea how I could fix the first call?
>> >
>> >             How does the first call fail? A difference between the two
>> >             is that, in
>> >             the second, the .ocamlinit file is used. If you are using
>> >             opam with
>> >             ocamlfind installed via it, this file will contain your
>> >             Topdirs setup.
>> >             You can try:
>> >
>> >             let () =
>> >               try Topdirs.dir_directory (Sys.getenv
>> "OCAML_TOPLEVEL_PATH")
>> >               with Not_found -> ()
>> >             ;;
>> >
>> >             at the top of your script (after hashbang but before
>> >             directives).
>> >
>> >             Hope this helps,
>> >
>> >             David
>> >
>> >
>> >
>> >
>> >
>> >     --
>> >     Fabrice LE FESSANT
>> >     Chercheur en Informatique
>> >     INRIA Paris Rocquencourt -- OCamlPro
>> >     Programming Languages and Distributed Systems
>> >
>> >
>>
>>
>

--001a1135086eda4a1a04fd376f93
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Yet another option is to use ocamlscript. The following wo=
rks:<br><br>$ cat <a href=3D"http://script.ml" target=3D"_blank">script.ml<=
/a><br><div>#! /usr/bin/env ocamlscript<br>Ocaml.ocamlflags :=3D [&quot;-th=
read&quot;];<br>

Ocaml.packs :=3D [&quot;sexplib.syntax&quot;]<br>
--<br>open Sexplib.Std<br>type t =3D int with sexp</div><div><br></div><div=
>$ ./<a href=3D"http://script.ml" target=3D"_blank">script.ml</a></div><div=
>(* compiles without error *)</div><div><br></div><div><br></div><div class=
=3D"gmail_extra">


<br><br><div class=3D"gmail_quote">On Wed, Jul 2, 2014 at 10:48 AM, Philipp=
e Veber <span dir=3D"ltr">&lt;<a href=3D"mailto:philippe.veber@gmail.com" t=
arget=3D"_blank">philippe.veber@gmail.com</a>&gt;</span> wrote:<br><blockqu=
ote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc s=
olid;padding-left:1ex">


<div dir=3D"ltr"><div><div>Thanks Romain, I&#39;ll rather use Fabrice&#39;s=
 suggestion, which handles command-line argument more simply.<br><br></div>=
Cheers,<br><br></div>=C2=A0Philippe.<br></div><div class=3D"gmail_extra"><b=
r><br>




<div class=3D"gmail_quote">2014-07-02 14:01 GMT+02:00 Romain Bardou <span d=
ir=3D"ltr">&lt;<a href=3D"mailto:romain.bardou@inria.fr" target=3D"_blank">=
romain.bardou@inria.fr</a>&gt;</span>:<div><div><br><blockquote class=3D"gm=
ail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-le=
ft:1ex">




You could write a wrapper which start the ocaml process, sends a string<br>
containing something like:<br>
<br>
module Sys =3D<br>
struct<br>
=C2=A0 include Sys<br>
=C2=A0 let argv =3D ... (* fill this *)<br>
end<br>
<br>
to the ocaml process (replace the ... by the arguments given to the<br>
wrapper, using the array syntax, and don&#39;t forget that the first cell<b=
r>
must contain the executable path), and then pass the contents of your<br>
<a href=3D"http://script.ml" target=3D"_blank">script.ml</a>.<br>
<br>
This does not work if your script uses other modules which themselves<br>
use Sys.argv.<br>
<br>
Cheers,<br>
<br>
-- Romain Bardou<br>
<div><br>
On 02/07/2014 13:48, Philippe Veber wrote:<br>
&gt; Thanks Fabrice, this perfectly explains what I observe. Is this behavi=
or<br>
&gt; considered the right one? Reading from a pipe is regretfully not an<br>
&gt; option for me, as my script has command line arguments. Hence when I t=
ype:<br>
&gt;<br>
</div>&gt; cat <a href=3D"http://script.ml" target=3D"_blank">script.ml</a>=
 &lt;<a href=3D"http://script.ml" target=3D"_blank">http://script.ml</a>&gt=
; | ocaml --foo --bar 1<br>
<div>&gt;<br>
&gt; the toplevel complains it knows nothing about the arguments foo and ba=
r.<br>
&gt; A &quot;--&quot; argument would be useful but it seems not available. =
If it&#39;s so,<br>
&gt; I&#39;ll file a feature request on Mantis, since without it, there see=
ms to<br>
&gt; be no way to give a script to the toplevel that both takes command lin=
e<br>
&gt; arguments and uses a syntax extension.<br>
&gt;<br>
&gt; Thanks again!<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; 2014-07-02 10:08 GMT+02:00 Fabrice Le Fessant<br>
</div>&gt; &lt;<a href=3D"mailto:Fabrice.Le_fessant@inria.fr" target=3D"_bl=
ank">Fabrice.Le_fessant@inria.fr</a> &lt;mailto:<a href=3D"mailto:Fabrice.L=
e_fessant@inria.fr" target=3D"_blank">Fabrice.Le_fessant@inria.fr</a>&gt;&g=
t;:<br>



<div>&gt;<br>
&gt; =C2=A0 =C2=A0 If I remember well, I think &quot;ocaml&quot; has a diff=
erent behavior<br>
&gt; =C2=A0 =C2=A0 depending on what it reads from:<br>
&gt; =C2=A0 =C2=A0 * From a pipe, it parses every sentence and execute each=
 one<br>
&gt; =C2=A0 =C2=A0 immediatly.<br>
&gt; =C2=A0 =C2=A0 * From a file, it tries to parse the whole file, and the=
n executes<br>
&gt; =C2=A0 =C2=A0 everything.<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 In the second case, it means it will only execute the lo=
ad of the<br>
&gt; =C2=A0 =C2=A0 syntax extension after parsing the whole file... which w=
ill fail,<br>
&gt; =C2=A0 =C2=A0 since the syntax extension is needed for that.<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 --Fabrice<br>
&gt; =C2=A0 =C2=A0 INRIA &amp; OCamlPro<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 On Tue, Jul 1, 2014 at 7:06 PM, Philippe Veber<br>
</div><div>&gt; =C2=A0 =C2=A0 &lt;<a href=3D"mailto:philippe.veber@gmail.co=
m" target=3D"_blank">philippe.veber@gmail.com</a> &lt;mailto:<a href=3D"mai=
lto:philippe.veber@gmail.com" target=3D"_blank">philippe.veber@gmail.com</a=
>&gt;&gt; wrote:<br>



&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 Thanks David!<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 The first call fails with a syntax error o=
n &quot;with sexp&quot;:<br>
&gt;<br>
</div>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 [pbil:~ 18:58]$cat <a href=3D"http:/=
/rien.ml" target=3D"_blank">rien.ml</a> &lt;<a href=3D"http://rien.ml" targ=
et=3D"_blank">http://rien.ml</a>&gt;<br>
<div>&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 let () =3D<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 try Topdirs.dir_directory (Sys.gete=
nv &quot;OCAML_TOPLEVEL_PATH&quot;)<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 with Not_found -&gt; ()<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 ;;<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 #use &quot;topfind&quot;;;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 #camlp4o;;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 #require &quot; sexplib.syntax&quot;;;<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 open Sexplib.Std;;<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 type t =3D int with sexp;;<br>
&gt;<br>
</div>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 [pbil:~ 18:58]$ocaml <a href=3D"http=
://rien.ml" target=3D"_blank">rien.ml</a> &lt;<a href=3D"http://rien.ml" ta=
rget=3D"_blank">http://rien.ml</a>&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 File &quot;<a href=3D"http://rien.ml" targ=
et=3D"_blank">rien.ml</a> &lt;<a href=3D"http://rien.ml" target=3D"_blank">=
http://rien.ml</a>&gt;&quot;, line 12, characters 13-17:<br>
<div>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 Error: Syntax error<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 It seems like the sexp syntax extension is=
 not loaded when the<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 script is evaluated. But it&#39;s not real=
ly clear to me what going<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 wrong...<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 Cheers!<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 ph.<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 2014-07-01 18:51 GMT+02:00 David Sheets &l=
t;<a href=3D"mailto:sheets@alum.mit.edu" target=3D"_blank">sheets@alum.mit.=
edu</a><br>
</div>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 &lt;mailto:<a href=3D"mailto:sheets@=
alum.mit.edu" target=3D"_blank">sheets@alum.mit.edu</a>&gt;&gt;:<br>
<div>&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 On Tue, Jul 1, 2014 at 5:38 =
PM, Philippe Veber<br>
</div>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &lt;<a href=3D"mailto:=
philippe.veber@gmail.com" target=3D"_blank">philippe.veber@gmail.com</a> &l=
t;mailto:<a href=3D"mailto:philippe.veber@gmail.com" target=3D"_blank">phil=
ippe.veber@gmail.com</a>&gt;&gt;<br>



<div>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 wrote:<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; Reposting this question=
 here, just in case.<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; ---------- Forwarded me=
ssage ----------<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; From: Philippe Veber &l=
t;<a href=3D"mailto:philippe.veber@gmail.com" target=3D"_blank">philippe.ve=
ber@gmail.com</a><br>
</div><div>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &lt;mailto:<a hre=
f=3D"mailto:philippe.veber@gmail.com" target=3D"_blank">philippe.veber@gmai=
l.com</a>&gt;&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; Date: 2014-06-28 21:32 =
GMT+02:00<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; Subject: Toplevel and s=
yntax extension.<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; To: <a href=3D"mailto:o=
caml_beginners@yahoogroups.com" target=3D"_blank">ocaml_beginners@yahoogrou=
ps.com</a><br>
</div><div>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &lt;mailto:<a hre=
f=3D"mailto:ocaml_beginners@yahoogroups.com" target=3D"_blank">ocaml_beginn=
ers@yahoogroups.com</a>&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; Dear camlers,<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; Consider the following =
script:<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; #use &quot;topfind&quot=
;;;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; #camlp4o;;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; #require &quot;sexplib.=
syntax&quot;;;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; open Sexplib.Std;;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; type t =3D int with sex=
p;;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
</div>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; Saved as <a href=
=3D"http://script.ml" target=3D"_blank">script.ml</a> &lt;<a href=3D"http:/=
/script.ml" target=3D"_blank">http://script.ml</a>&gt;, the simple call:<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; ocaml <a href=3D"http:/=
/script.ml" target=3D"_blank">script.ml</a> &lt;<a href=3D"http://script.ml=
" target=3D"_blank">http://script.ml</a>&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; fails while the call:<b=
r>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; cat <a href=3D"http://s=
cript.ml" target=3D"_blank">script.ml</a> &lt;<a href=3D"http://script.ml" =
target=3D"_blank">http://script.ml</a>&gt; | ocaml<br>
<div><div>&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 &gt; succeeds. Any idea how =
I could fix the first call?<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 How does the first call fail=
? A difference between the two<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 is that, in<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 the second, the .ocamlinit f=
ile is used. If you are using<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 opam with<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ocamlfind installed via it, =
this file will contain your<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Topdirs setup.<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 You can try:<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 let () =3D<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 try Topdirs.dir_direc=
tory (Sys.getenv &quot;OCAML_TOPLEVEL_PATH&quot;)<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 with Not_found -&gt; =
()<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 ;;<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 at the top of your script (a=
fter hashbang but before<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 directives).<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 Hope this helps,<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 David<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; =C2=A0 =C2=A0 --<br>
&gt; =C2=A0 =C2=A0 Fabrice LE FESSANT<br>
&gt; =C2=A0 =C2=A0 Chercheur en Informatique<br>
&gt; =C2=A0 =C2=A0 INRIA Paris Rocquencourt -- OCamlPro<br>
&gt; =C2=A0 =C2=A0 Programming Languages and Distributed Systems<br>
&gt;<br>
&gt;<br>
<br>
</div></div></blockquote></div></div></div><br></div>
</blockquote></div><br></div></div>

--001a1135086eda4a1a04fd376f93--
