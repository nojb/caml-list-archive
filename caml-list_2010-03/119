Return-Path: <hmf@inescporto.pt>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 9C1CCBBAF
	for <caml-list@yquem.inria.fr>; Fri, 12 Mar 2010 15:54:35 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AoQBAFvkmUvVhjEXkGdsb2JhbACOb4wRAQEBAQkJDAcTAx+7JYR7BA
X-IronPort-AV: E=Sophos;i="4.49,626,1262559600"; 
   d="scan'208";a="58637694"
Received: from ihsmtp01voda.lis.interhost.com (HELO ihsmtp01cons.lis.interhost.com) ([213.134.49.23])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 12 Mar 2010 15:54:35 +0100
Received: from [192.168.1.64] ([95.136.106.136]) by ihsmtp01cons.lis.interhost.com with Microsoft SMTPSVC(6.0.3790.3959);
	 Fri, 12 Mar 2010 14:54:34 +0000
Message-ID: <4B9A55A9.4070202@inescporto.pt>
Date: Fri, 12 Mar 2010 14:54:33 +0000
From: Hugo Ferreira <hmf@inescporto.pt>
User-Agent: Thunderbird 2.0.0.23 (X11/20090817)
MIME-Version: 1.0
To: Sylvain Le Gall <sylvain@le-gall.net>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Re: Shared memory parallel application: kernel threads
References: <4B9A2BCB.3040607@inescporto.pt> <slrnhpkjvk.6e8.sylvain@gallu.homelinux.org>
In-Reply-To: <slrnhpkjvk.6e8.sylvain@gallu.homelinux.org>
Content-Type: text/plain; charset=ISO-8859-15; format=flowed
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 12 Mar 2010 14:54:34.0511 (UTC) FILETIME=[EDD8E9F0:01CAC1F3]
X-Spam: no; 0.00; ocaml:01 ocaml:01 ocamlnet:01 ocamlmpi:01 read-only:01 beginner's:01 bug:01 threads:01 threads:01 beginners:01 wrote:01 wrote:01 unix:01 caml-list:01 caml-list:01 

Sylvain Le Gall wrote:
> On 12-03-2010, Hugo Ferreira <hmf@inescporto.pt> wrote:
>> Hello,
>>
>> I have opted to use "kernel-level threads" that allow use
>> of the (multi-core) processors but still allow "easy"
>> access to shared memory".
>>
>> I have done a cursory look at:
>> - Ocaml.Threads
>> - Ocaml.Unix (LinuxThreads)
>> - coThreads
>> - Ocamlnet2/3 (netshm, netcamlbox)
>> (An eThreads library exists in the forge but I did not examine this)
>>
> 
> I think you should also have a look at ocaml/mpi for communication:
> http://forge.ocamlcore.org/projects/ocamlmpi/
> and ancient for accessing read-only memory:
> http://merjis.com/developers/ancient
> 
> MPI can work on a single computer to take advantage of multi-core
> through multi-processus.
> 

Indeed. I did not list these because I was specifically looking for
a share memory solution amongst threads. Seeing as I am forced to use
processes ancient is worth considering.

Thanks,
Hugo F.

> Regards,
> Sylvain Le Gall
> 
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
> 

