Return-Path: <hmf@inescporto.pt>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 3FFD2BBAF
	for <caml-list@yquem.inria.fr>; Sat, 13 Mar 2010 10:12:59 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: At8BAGPmmkvVhjEXkGdsb2JhbACbBAEBAQEJCQwHEwMfuFCEewSKNA
X-IronPort-AV: E=Sophos;i="4.49,631,1262559600"; 
   d="scan'208";a="46566970"
Received: from ihsmtp01voda.lis.interhost.com (HELO ihsmtp01cons.lis.interhost.com) ([213.134.49.23])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 13 Mar 2010 10:12:58 +0100
Received: from [192.168.1.64] ([95.136.106.136]) by ihsmtp01cons.lis.interhost.com with Microsoft SMTPSVC(6.0.3790.3959);
	 Sat, 13 Mar 2010 09:12:58 +0000
Message-ID: <4B9B5719.7060700@inescporto.pt>
Date: Sat, 13 Mar 2010 09:12:57 +0000
From: Hugo Ferreira <hmf@inescporto.pt>
User-Agent: Thunderbird 2.0.0.23 (X11/20090817)
MIME-Version: 1.0
To: Philippe Wang <philippe.wang.lists@gmail.com>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Re: Shared memory parallel application: kernel 	threads
References: <4B9A2BCB.3040607@inescporto.pt>	<slrnhpkjvk.6e8.sylvain@gallu.homelinux.org>	<4B9A55A9.4070202@inescporto.pt> <4d1b2df21003121559k793df345n7bdac58cdf11cf57@mail.gmail.com>
In-Reply-To: <4d1b2df21003121559k793df345n7bdac58cdf11cf57@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 13 Mar 2010 09:12:58.0335 (UTC) FILETIME=[5F9666F0:01CAC28D]
X-Spam: no; 0.00; ocaml:01 runtime:01 cheers:01 threads:01 threads:01 wrote:01 caml-list:01 kernel:02 suggestion:03 library:03 parallel:05 parallel:05 implement:06 shared:06 prototype:07 

Philippe Wang wrote:
> Hi,
> 
> If your program doesn't need usage-proved stability, you may be
> interested in the "OCaml for Multicore" project which provides an
> alternative runtime library (prototype quality) which allows threads
> to compute in parallel.
> http://www.algo-prog.info/ocmc/
> 

Appreciate the suggestion. Too risky though. 8-(
I am having enough difficulty as it is to design and
implement this stuff.

Regards,
Hugo F.

> If you choose to give it a try, we would enjoy your feedbacks.
> 
> Cheers,
> 

