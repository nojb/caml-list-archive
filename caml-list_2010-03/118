Return-Path: <gclci-caml-list@m.gmane.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id E5BF7BBAF
	for <caml-list@yquem.inria.fr>; Fri, 12 Mar 2010 15:30:38 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkMBAPPemUtQW+UMmWdsb2JhbACaaxUBAQEBAQgLCgcTIrshhHsEhWQ
X-IronPort-AV: E=Sophos;i="4.49,626,1262559600"; 
   d="scan'208";a="46417726"
Received: from lo.gmane.org ([80.91.229.12])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 12 Mar 2010 15:30:38 +0100
Received: from list by lo.gmane.org with local (Exim 4.69)
	(envelope-from <gclci-caml-list@m.gmane.org>)
	id 1Nq5sf-0006S1-8b
	for caml-list@inria.fr; Fri, 12 Mar 2010 15:30:25 +0100
Received: from ks300734.kimsufi.com ([91.121.65.225])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Fri, 12 Mar 2010 15:30:25 +0100
Received: from sylvain by ks300734.kimsufi.com with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Fri, 12 Mar 2010 15:30:25 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: caml-list@inria.fr
From: Sylvain Le Gall <sylvain@le-gall.net>
Subject: Re: Shared memory parallel application: kernel threads
Date: Fri, 12 Mar 2010 14:30:12 +0000 (UTC)
Lines: 25
Message-ID: <slrnhpkjvk.6e8.sylvain@gallu.homelinux.org>
References: <4B9A2BCB.3040607@inescporto.pt>
X-Complaints-To: usenet@dough.gmane.org
X-Gmane-NNTP-Posting-Host: ks300734.kimsufi.com
User-Agent: slrn/pre1.0.0-11 (Linux)
X-Spam: no; 0.00; le-gall:01 ocaml:01 ocaml:01 ocamlnet:01 ocamlmpi:01 read-only:01 threads:01 threads:01 wrote:01 unix:01 linuxthreads:02 kernel:02 library:03 mpi:04 mpi:04 

On 12-03-2010, Hugo Ferreira <hmf@inescporto.pt> wrote:
> Hello,
>
> I have opted to use "kernel-level threads" that allow use
> of the (multi-core) processors but still allow "easy"
> access to shared memory".
>
> I have done a cursory look at:
> - Ocaml.Threads
> - Ocaml.Unix (LinuxThreads)
> - coThreads
> - Ocamlnet2/3 (netshm, netcamlbox)
> (An eThreads library exists in the forge but I did not examine this)
>

I think you should also have a look at ocaml/mpi for communication:
http://forge.ocamlcore.org/projects/ocamlmpi/
and ancient for accessing read-only memory:
http://merjis.com/developers/ancient

MPI can work on a single computer to take advantage of multi-core
through multi-processus.

Regards,
Sylvain Le Gall

