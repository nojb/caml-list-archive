Return-Path: <miguel.ambrona@imdea.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 855C9822B9
	for <caml-list@sympa.inria.fr>; Tue, 30 Apr 2019 15:11:08 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=miguel.ambrona@imdea.org; spf=Pass smtp.mailfrom=miguel.ambrona@imdea.org; spf=None smtp.helo=postmaster@estafeta21.imdea.org
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  miguel.ambrona@imdea.org) identity=pra;
  client-ip=193.145.15.46;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="miguel.ambrona@imdea.org";
  x-sender="miguel.ambrona@imdea.org";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  miguel.ambrona@imdea.org designates 193.145.15.46 as
  permitted sender) identity=mailfrom; client-ip=193.145.15.46;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="miguel.ambrona@imdea.org";
  x-sender="miguel.ambrona@imdea.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@estafeta21.imdea.org) identity=helo;
  client-ip=193.145.15.46;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="miguel.ambrona@imdea.org";
  x-sender="postmaster@estafeta21.imdea.org";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3A8TXQPBD/g+XdpLmFK3qJUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPv+osbcNUDSrc9gkEXOFd2Cra4d0qyI7+u+ASQp2tWoiDg6aptCVhsI24?=
 =?us-ascii?q?09vjcLJ4q7M3D9N+PgdCcgHc5PBxdP9nC/NlVJSo6lPwWB6nK94iQPFRrhKAF7?=
 =?us-ascii?q?Ovr6GpLIj8Swyuu+54Dfbx9HiTagfL9+NhS7oAreusQXnYdpN7o8xAbOrnZUYe?=
 =?us-ascii?q?pd2HlmJUiUnxby58ew+IBs/iFNsP8/9MBOTLv3cb0gQbNXEDopPWY15Nb2tRbY?=
 =?us-ascii?q?VguA+mEcUmQNnRVWBQXO8Qz3UY3wsiv+sep9xTWaMMjrRr06RTiu86FmQwLuhS?=
 =?us-ascii?q?waNTA27XvXh9RugqxbvRyvpBJxzIDbb46JO/RzZb/dcNEASGZdQspcWS5MD4Wh?=
 =?us-ascii?q?ZIUPFeoBOuNYopH6qVsPohu+GBejBOfywTJUg3/5xrc60+MnEQ7cwQctGNcOsH?=
 =?us-ascii?q?XbrNXoKqgSVfq5w7PNzTrYdfNW3jH955LTfxAgpPGDQKx/ftDLxUkoDQPFgUyd?=
 =?us-ascii?q?pIr4ND2WzuQAq3WX4u5uWO61lmIqpAF8riKyysoskIXEiYMYxkjZ+Sh9zos5P8?=
 =?us-ascii?q?C0RUF5bNK+DZdcqyOXO5F5T84iRWxjpTw0xaccuZGheSgH0JQnyADba/yAa4WH?=
 =?us-ascii?q?/AnjVPqLLjd2mn1lZKiwiwiv/US6y+38U9S730hQoSZfldnMrH8N2wTS6siBVP?=
 =?us-ascii?q?R94l+s1SuL2g3d8O1IPE85mKrBJ5I8wrM8jJUevEXbEi/zgkr2jauWdks++uiv?=
 =?us-ascii?q?7uTqerDmpp6TN49plA7+Nr4ilda6AesjKAgOWG6b9v6n2b3i+E32XatFgecsnq?=
 =?us-ascii?q?neqpDaKtwXprSlDA9NzoYj9xG/Ai+639sCmHkHKEtJeBaGj4jyJ1HDO+v4DPe6?=
 =?us-ascii?q?g1S0ijhn3fHGPrv7ApXMNHfPirnhfawuo3JbnQE6yNQa45NPFpkAJujyUwn/ro?=
 =?us-ascii?q?/2FBg8Zim1zPvqDJ1U04kEXmSGSvucMazPvFvO7+clOe6KbacUvTrwIr4i/fG4?=
 =?us-ascii?q?3ixxokMUYaT8hchfU3u/BPkzexzIM0qpuc8IFCIxhiR7SeXrjFOYVjsKPiSzWq?=
 =?us-ascii?q?4x73c8Eo30VN6fFLDou6SI2WKAJrMTfnpPUwneEHLkeozCXO0DOnrLf51R1wcc?=
 =?us-ascii?q?XL3kcLcPkBGjsAigkehqNfbd9CAEvMi6ktlw6+Da0xYo+m4sAg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0A2AgDGSMhchy4PkcFmHgEGBwaBZYNMA?=
 =?us-ascii?q?jAohBCIe4wICDmDSpUGgWcQizsHAQQ0EwEDAQEEAQECAQEBARMBAQEKCwkIKSM?=
 =?us-ascii?q?MgjoigxgdAQE4NAImAmwIAQGDHoIPAa0NcYEvgnkBAQWFcoE8CYELJ40hP4E4D?=
 =?us-ascii?q?IIqhH+BBYI9gliSd4cKjCJlBwKCCwJPBJFfBhuBfQGKCoknoQeBLzeBdzMaMIM?=
 =?us-ascii?q?vgg8aiGmFQT0BATGUNwEB?=
X-IPAS-Result: =?us-ascii?q?A0A2AgDGSMhchy4PkcFmHgEGBwaBZYNMAjAohBCIe4wICDm?=
 =?us-ascii?q?DSpUGgWcQizsHAQQ0EwEDAQEEAQECAQEBARMBAQEKCwkIKSMMgjoigxgdAQE4N?=
 =?us-ascii?q?AImAmwIAQGDHoIPAa0NcYEvgnkBAQWFcoE8CYELJ40hP4E4DIIqhH+BBYI9gli?=
 =?us-ascii?q?Sd4cKjCJlBwKCCwJPBJFfBhuBfQGKCoknoQeBLzeBdzMaMIMvgg8aiGmFQT0BA?=
 =?us-ascii?q?TGUNwEB?=
X-IronPort-AV: E=Sophos;i="5.60,413,1549926000"; 
   d="scan'208";a="304464681"
X-MGA-submission: =?us-ascii?q?MDHB40+hk4Ig11R2j+NRRy0WFvqC1ZeCTmOQpR?=
 =?us-ascii?q?lI8gsRy+bsEUL6Vn3VyYyYAPKqGbXVsqfS3AbIQ6yYJSs/CiCenWoKpy?=
 =?us-ascii?q?udJ2onPtIc7ttAsq/BFiM25GARIbFXKo75fldmbs+1LTozZws8uCgCTz?=
 =?us-ascii?q?xoqtVCu4QbpfhuoTyroAKpnA=3D=3D?=
Received: from maquina46.madrimasd.org (HELO estafeta21.imdea.org) ([193.145.15.46])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 30 Apr 2019 15:10:46 +0200
Received: from antispam1r1.madrimasd.org (antispam1r1.madrimasd.org [10.17.49.176])
	by estafeta21.imdea.org (ALVA Mail Server) with ESMTP id 9F0EA38D7A1
	for <caml-list@inria.fr>; Tue, 30 Apr 2019 15:10:45 +0200 (CEST)
X-Virus-Scanned: by ALVA antispam-antivirus system at imdea.org
Received: from estafeta21.imdea.org ([10.17.49.129])
	by antispam1r1.madrimasd.org (antispam1.imdea.org [10.17.49.176]) (amavisd-new, port 25021)
	with ESMTP id jpbvXM96PyY8 for <caml-list@inria.fr>;
	Tue, 30 Apr 2019 15:10:17 +0200 (CEST)
Received: from [10.10.17.66] (nat5.software.imdea.org [193.147.107.45])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	(Authenticated sender: miguel.ambrona)
	by estafeta21.imdea.org (ALVA Mail Server) with ESMTPSA id 01E2C38D77E
	for <caml-list@inria.fr>; Tue, 30 Apr 2019 15:10:16 +0200 (CEST)
DKIM-Filter: OpenDKIM Filter v2.10.3 estafeta21.imdea.org 01E2C38D77E
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=imdea.org; s=mail;
	t=1556629817; bh=mkSzOSVbb3xxc1ViyeZ7/UwEQlRmVNH8CEEaQe0wDwc=;
	h=To:From:Subject:Date:From;
	b=MafIia7apwGWg66bdNqGlZl/Kt4nlRAo7urSkxIv9A9550HNz2FCibnnpd+LJyjWZ
	 Pyu6Wuiy9cJIGRJc/n7GmMVrdPcLeOn1lJB0Q4MNxDYAvVPnoDLyWaFzDNo6ha8mZZ
	 lHLfSOsmBynW7Vk5LcKwLFSWYfzcLxhKYn/1Y1tE=
To: caml-list@inria.fr
From: Miguel Ambrona <miguel.ambrona@imdea.org>
Openpgp: preference=signencrypt
Autocrypt: addr=miguel.ambrona@imdea.org; prefer-encrypt=mutual; keydata=
 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
Message-ID: <f5de4440-983b-a51f-0093-c292b7b674fa@imdea.org>
Date: Tue, 30 Apr 2019 15:10:16 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101
 Thunderbird/60.6.1
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 7bit
Content-Language: en-US
X-Validation-by: miguel.ambrona@imdea.org
Subject: [Caml-list] Function that outputs a functor

Dear caml-hackers,

Is there a way of writing a function that returns a functor?

For example, the following function takes an integer and returns a module:

``let make (n : int) = (module struct blablabla end : MyModule)''

Can I do the same with a functor as output instead of a module? Of
course, the implementation may use the integer "n".

Thanks a lot!

Best,

Miguel



