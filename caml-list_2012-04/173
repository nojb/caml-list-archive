Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q3QN1w0j012078
	for <caml-list@sympa-roc.inria.fr>; Fri, 27 Apr 2012 01:01:58 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqkBAGfSmU/RVdIykGdsb2JhbABFgx2uTQgiAQEBAQkJDQcUBCOCCQEBAQMBEgIsATkDAQsBBQVGNAEFARwZIoddAwYFC5xuCo8WhUEnDYlNAQULjg6CQmMEiGONGoERhGOIbD2BWIJT
X-IronPort-AV: E=Sophos;i="4.75,487,1330902000"; 
   d="scan'208";a="141777610"
Received: from mail-pz0-f50.google.com ([209.85.210.50])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 27 Apr 2012 01:01:52 +0200
Received: by dakh32 with SMTP id h32so158265dak.9
        for <caml-list@inria.fr>; Thu, 26 Apr 2012 16:01:50 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:content-type:mime-version:subject:from:in-reply-to:date
         :content-transfer-encoding:message-id:references:to:x-mailer;
        bh=CyPyqkCLSvqE3Iw1E/ljYrbNAboylQIyBeC3jQxrej4=;
        b=HzFwfXMVTID1dkNSAETod9b3sVsNA4J1krPz/g0zHnqeFym4OoKyEX6gr+iQNxhZUT
         /JVqwmj/lj/D2wwXLcN2MUcuZbY9vnpIKcbaIBRMeECdLdly4dA860vJxLlWJBxfO6LP
         qJ2NoBA6vnfaEqXSheMNZUMP0OazVpj4w12SRT4Wdonq01U6BTVZo5Vo9IxBn5FAnoxG
         ROxv773SYMadiwOCUfj5JP/9dmepfYDurYCne9fZYC0G8IhFBV5HrO9smEnL3ijKaDmM
         FQ9Of7hi9ZwaH9+UliDT4P57/HH+ryozBr8fjNer7uopGJ+57LU4rn4v1wM9VtM7bkbj
         pSjA==
Received: by 10.68.223.227 with SMTP id qx3mr7799249pbc.1.1335481310723;
        Thu, 26 Apr 2012 16:01:50 -0700 (PDT)
Received: from [192.168.1.106] (50-76-32-210-ip-static.hfc.comcastbusiness.net. [50.76.32.210])
        by mx.google.com with ESMTPS id pn10sm2994487pbb.22.2012.04.26.16.01.48
        (version=TLSv1/SSLv3 cipher=OTHER);
        Thu, 26 Apr 2012 16:01:49 -0700 (PDT)
Sender: Haoyang Wang <lego395@gmail.com>
Content-Type: text/plain; charset=iso-8859-1
Mime-Version: 1.0 (Apple Message framework v1257)
From: Haoyang Wang <hywang@pobox.com>
In-Reply-To: <CAN2fQM6PmfgkBspx1Js0yq8r2hbtd15mhvDXQ6tUcmAL46q=rw@mail.gmail.com>
Date: Thu, 26 Apr 2012 16:01:46 -0700
Message-Id: <3C0F509D-8590-4D45-A586-83630088C7B5@pobox.com>
References: <CAN2fQM6PmfgkBspx1Js0yq8r2hbtd15mhvDXQ6tUcmAL46q=rw@mail.gmail.com>
To: caml-list@inria.fr
X-Mailer: Apple Mail (2.1257)
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id q3QN1w0j012078
Subject: Re: [Caml-list] using infix operators/functions in modules when not using "open"


On Apr 26, 2012, at 3:36 PM, ocamllist.robertwork@spamgourmet.com wrote:

> I'm a OCaml newbie.  I don't understand how to use infix functions that are in modules when I don't want to use "open".
> 
> I did discover http://xahlee.org/ocaml/functions.html which explains that an infix operator can be used as a prefix.  So, this format:
> 
>   ((Module.(op)) "foo" "bar")
> 
> does seem to work.  But, intuitively, it seems like:
> 
>  "foo" Module.(op) "bar"
> 
> would work -- it doesn't.
> 
> Is there a way to keep the infix notation?
> 
> Thanks.


Module.("foo" (op) "bar")
