Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA04528; Tue, 11 Sep 2001 20:40:06 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA04374 for <caml-list@pauillac.inria.fr>; Tue, 11 Sep 2001 20:40:04 +0200 (MET DST)
Received: from smtpout.mac.com (smtpout.mac.com [204.179.120.89])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f8BIe3L11111
	for <caml-list@inria.fr>; Tue, 11 Sep 2001 20:40:03 +0200 (MET DST)
Received: by smtpout.mac.com; Tue, 11 Sep 2001 11:38:11 -0700 (PDT)
Received: from asmtp01.mac.com ([10.13.10.65]) by
          smtp-relay01.mac.com (Netscape Messaging Server 4.15 relay01 Jun
          21 2001 23:53:48) with ESMTP id GJIH3M00.RQ7 for
          <caml-list@inria.fr>; Tue, 11 Sep 2001 11:38:10 -0700 
Received: from kallisti.apple.com ([17.206.25.144]) by
          asmtp01.mac.com (Netscape Messaging Server 4.15 asmtp01 Jun 21
          2001 23:53:48) with ESMTP id GJIH3L00.T77 for
          <caml-list@inria.fr>; Tue, 11 Sep 2001 11:38:09 -0700 
Date: Tue, 11 Sep 2001 11:38:08 -0700
Reply-To: jhw@wetware.com
Subject: [Caml-list] Re: Phantom types (very long)
Content-Type: text/plain; charset=US-ASCII; format=flowed
Mime-Version: 1.0 (Apple Message framework v466)
From: j h woodyatt <jhwoodyatt@mac.com>
To: The Caml Trade <caml-list@inria.fr>
Content-Transfer-Encoding: 7bit
In-Reply-To: <20010910154559.O6031-100000@shell5.ba.best.com>
Message-Id: <25775F60-A6E4-11D5-9E93-000502DB38F5@mac.com>
X-Mailer: Apple Mail (2.466)
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

So okay... I take it back.  Caml *does* have invariants.  (I'm 
learning.  Slowly.  But I'm learning.)

This "phantom types" design pattern is one I have never seen before.  It 
doesn't seem to be used in the standard library anywhere I can see.  It 
looks like it might be useful in presenting a safer network programming 
interface than the low-level wrappers around BSD sockets (which I've 
never liked).

Are there any other mind-blowingly elegant design patterns lurking in 
the corners of the Caml type inference engine that I should know about?


--
j h woodyatt <jhw@wetware.com>
"You're standing on sacred ground.  Many strange and wonderful
things have transpired right where you're standing."
                                               --unattributable

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

