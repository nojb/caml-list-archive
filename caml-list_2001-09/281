Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA08173; Wed, 26 Sep 2001 20:29:18 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA08171 for <caml-list@pauillac.inria.fr>; Wed, 26 Sep 2001 20:29:17 +0200 (MET DST)
Received: from shell5.ba.best.com (shell5.ba.best.com [206.184.139.136])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f8QITGn06293
	for <caml-list@inria.fr>; Wed, 26 Sep 2001 20:29:16 +0200 (MET DST)
Received: from localhost (bpr@localhost)
	by shell5.ba.best.com (8.9.3/8.9.2/best.sh) with ESMTP id LAA07675;
	Wed, 26 Sep 2001 11:29:13 -0700 (PDT)
Date: Wed, 26 Sep 2001 11:29:12 -0700 (PDT)
From: Brian Rogoff <bpr@best.com>
To: Mattias Waldau <mattias.waldau@abc.se>
cc: <caml-list@inria.fr>
Subject: RE: [Caml-list] Looking for Graph Operations-library
In-Reply-To: <AAEBJHFJOIPMMIILCEPBCEKKDCAA.mattias.waldau@abc.se>
Message-ID: <20010926111441.J20515-100000@shell5.ba.best.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 26 Sep 2001, Mattias Waldau wrote:
> I looked thru the documentation, but FGL doesn't seem to be any operations
> like closures and topological sorting in fgl, it mostly seems to be about
> traversing the structure. Have I missed something?

The interfaces don't have, say, topsort as a builtin function, but the
papers describe how to implement it using the provided functions.

> When I look at one of the papers, you get the impression that an imperative
> implementation is one to two magnitudes faster, is that right?
> (Speed is irrelevant right now for me.)

I don't think the papers measured against an imperative implementation,
but rather a functional array based on binary trees versus a functional
array based on version arrays. But I could be wrong and I don't have them
handy at the moment. Anyways, I'd like to do a version array version :-)
too in the future. It would be nice if there was a version array library
around; I've written some quick ones but I don't know how they compare
against some of the better ones. Lots of SML implementations around.

Beware of surmising too much based on some quick benchmarks.

-- Brian


-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

