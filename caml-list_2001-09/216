Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA27043; Tue, 18 Sep 2001 16:27:33 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA26782 for <caml-list@pauillac.inria.fr>; Tue, 18 Sep 2001 16:27:33 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f8IERUr15515;
	Tue, 18 Sep 2001 16:27:30 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA26903; Tue, 18 Sep 2001 16:27:30 +0200 (MET DST)
Date: Tue, 18 Sep 2001 16:27:30 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Markus Mottl <markus@mail4.ai.univie.ac.at>
Cc: OCAML <caml-list@inria.fr>
Subject: Re: [Caml-list] byte-code and -fno-defer-pop
Message-ID: <20010918162730.J23689@pauillac.inria.fr>
References: <20010917155545.A23056@chopin.ai.univie.ac.at>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <20010917155545.A23056@chopin.ai.univie.ac.at>; from markus@mail4.ai.univie.ac.at on Mon, Sep 17, 2001 at 03:55:45PM +0200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> C-files in the OCaml-distribution are usually compiled with -fno-defer-pop
> when they are supposed to be used with byte code, too. What is the
> rationale behind?

There used to be a bug in gcc whereas code using computed gotos (such
as the OCaml bytecode interpreter) would be incorrectly compiled
unless the -fno-defer-pop option is given.  I don't know if this has
been fixed in recent versions of gcc.

At any rate, you're correct that -fno-defer-pop is needed only for
compiling byterun/interp.c, and applying it to all bytecode-related C
files is a bit excessive.

> Is this only intended to limit stack growth a bit or
> are there other reasons? This opposite of this option is normally turned
> on when optimisation (-O) is used. Would you recommend this setting
> generally for C-code that should cooperate with OCaml-byte code?

No, it shouldn't be necessary.

- Xavier Leroy
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

