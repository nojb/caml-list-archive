Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA10436; Wed, 26 Sep 2001 22:42:42 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA10423 for caml-list@pauillac.inria.fr; Wed, 26 Sep 2001 22:42:41 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA22133 for <caml-list@pauillac.inria.fr>; Wed, 26 Sep 2001 00:40:58 +0200 (MET DST)
Received: from sarg.ryerson.ca (sarg.ryerson.ca [141.117.18.117])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f8PMevT13726
	for <caml-list@inria.fr>; Wed, 26 Sep 2001 00:40:57 +0200 (MET DST)
Received: from sarg.ryerson.ca (dmason@localhost)
	by sarg.ryerson.ca (8.11.2/8.11.2) with ESMTP id f8PMenf08237;
	Tue, 25 Sep 2001 18:40:49 -0400
Message-Id: <200109252240.f8PMenf08237@sarg.ryerson.ca>
To: caml-list@inria.fr
Cc: Chris Hecker <checker@d6.com>, Markus Mottl <markus@mail4.ai.univie.ac.at>,
        Jerome Vouillon <vouillon@saul.cis.upenn.edu>
Subject: Re: [Caml-list] calling native from bytecode
In-reply-to: Your message of "Tue, 25 Sep 2001 14:22:09 PDT."
             <4.3.2.7.2.20010925141543.02a904f0@arda.pair.com> 
User-Agent: EMH/1.10.0 SEMI/1.13.7 (Awazu) CLIME/1.13.6
 (=?ISO-2022-JP?B?GyRCQ2YlTj4xGyhC?=) MULE XEmacs/21.1 (patch 14) (Cuyahoga
 Valley) (alpha-redhat-linux)
MIME-Version: 1.0 (generated by SEMI 1.13.7 - "Awazu")
Content-Type: text/plain; charset=US-ASCII
Date: Tue, 25 Sep 2001 18:40:49 -0400
From: Dave Mason <dmason@sarg.ryerson.ca>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

>>>>> On Tue, 25 Sep 2001 14:22:09 -0700, Chris Hecker <checker@d6.com> said:

> I was going to reply to that same quote and reiterate my desire to
> link native and bytecode!  :)

I hate me-too mailings on lists, but... :-)

I honestly think this is one of the most important issues with ocaml
at the moment.  The native code compiler is good enough that we
frequently see examples of it beating C code (sometimes partly because
of having to jump the barrier between ocaml and C, but still...).  It
is a huge shame that we can't use the resulting code in the
interpreter.

I wonder how much of the runtime library would be speeded up (and made
more robust) if it were coded in ocaml instead of C.

Please, please, please!

Unfortunately, I don't have the time right now, or a grad student with
the aptitude, or I'd do it.  It would be *very* cool to have ocaml all
the way down to the metal!

../Dave
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

