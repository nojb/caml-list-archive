Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA05449; Fri, 7 Sep 2001 20:35:53 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA05030 for <caml-list@pauillac.inria.fr>; Fri, 7 Sep 2001 20:35:52 +0200 (MET DST)
Received: from web9207.mail.yahoo.com (web9207.mail.yahoo.com [216.136.129.40])
	by nez-perce.inria.fr (8.11.1/8.10.0) with SMTP id f87IZpv02681
	for <caml-list@inria.fr>; Fri, 7 Sep 2001 20:35:52 +0200 (MET DST)
Message-ID: <20010907183550.30294.qmail@web9207.mail.yahoo.com>
Received: from [63.195.80.23] by web9207.mail.yahoo.com via HTTP; Fri, 07 Sep 2001 11:35:50 PDT
Date: Fri, 7 Sep 2001 11:35:50 -0700 (PDT)
From: Charles Martin <joelisp@yahoo.com>
Subject: [Caml-list] opaque polymorphism
To: caml-list@inria.fr
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

A feature that would be nice would be to hide the polymorphism of a type in a
module signature:

foo.ml:
type ('a, 'b, 'c) t = { ... }

foo.mli:
type ('a, 'c) t

Thus, clients of Foo would be unaware of the polymorphism in 'b.  This would
require that type variables in signatures and structures be matched on their
names, obviously.

Can any of the type experts out there tell me if this is possible?


__________________________________________________
Do You Yahoo!?
Get email alerts & NEW webcam video instant messaging with Yahoo! Messenger
http://im.yahoo.com
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

