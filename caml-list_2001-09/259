Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA02118; Mon, 24 Sep 2001 13:14:44 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA02114 for <caml-list@pauillac.inria.fr>; Mon, 24 Sep 2001 13:14:44 +0200 (MET DST)
Received: from penguin.housemarque.fi (www.housemarque.fi [212.213.160.98])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f8OBEdX17522
	for <caml-list@inria.fr>; Mon, 24 Sep 2001 13:14:40 +0200 (MET DST)
Received: from [192.168.42.66] (helo=frodo)
	by penguin.housemarque.fi with smtp (Exim 3.00 #1)
	id 15lTdb-0003Xx-00; Mon, 24 Sep 2001 14:10:59 +0300
Message-ID: <001401c144ea$854df7c0$422aa8c0@housemarque.fi>
From: "Vesa Karvonen" <vesa.karvonen@housemarque.fi>
To: "Christian RINDERKNECHT" <rinderkn@hugo.int-evry.fr>, <caml-list@inria.fr>
References: <000b01c143aa$d5218690$422aa8c0@housemarque.fi> <20010924030555.A15441@hugo.int-evry.fr>
Subject: Re: [Caml-list] On ocamlyacc and ocamllex
Date: Mon, 24 Sep 2001 14:17:38 +0300
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.50.4807.1700
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4807.1700
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: "Christian RINDERKNECHT" <rinderkn@hugo.int-evry.fr>
[...]
> Sometimes ago, I wrote a software handling more than six lexers and
> parsers, and hence maintenance was complex. So I decided to enhance
> ocamllex with the following facilities through the command-line:
[lots of useful features]
> If you are interested, please send me an e-mail.

Hi,

Based on your description, I wasn't able to determine whether your lexing
module also support extending the lexer state (like in Lindig's proposal)?

    http://www.eecs.harvard.edu/~lindig/software/lexing.html

At any rate, I'm definitely interested. However, I'd like to see these
features included in the ocamllex that comes with the Ocaml distribution.

Is it too much to ask that these ocamllex enhancements (including the
enhancements by Christian Lindig) would be proposed for the Ocaml
distribution?

If necessary, I'm willing to share some of the necessary work in order to get
these enhancements into the Ocaml distribution.

I've already made a reentrant replacement for the Parsing module. I think that
parsers could also benefit from the ability to extend the parser state.

Best regards,
  Vesa Karvonen


-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

