Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA12026; Wed, 12 Sep 2001 10:30:24 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA11723 for <caml-list@pauillac.inria.fr>; Wed, 12 Sep 2001 10:30:22 +0200 (MET DST)
Received: from pochi.inria.fr (pochi.inria.fr [128.93.8.128])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f8C8ULT01072;
	Wed, 12 Sep 2001 10:30:22 +0200 (MET DST)
Received: (from mentre@localhost)
	by pochi.inria.fr (8.11.1/8.10.0) id f8C8ULJ02779;
	Wed, 12 Sep 2001 10:30:21 +0200
X-Authentication-Warning: pochi.inria.fr: mentre set sender to David.Mentre@inria.fr using -f
To: "emil artin" <emil.artin@web.de>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml for system programming?
References: <200109111633.f8BGXOx23823@mailgate5.cinetic.de>
From: David Mentre <David.Mentre@inria.fr>
Date: 12 Sep 2001 10:30:21 +0200
In-Reply-To: <200109111633.f8BGXOx23823@mailgate5.cinetic.de>
Message-ID: <qtlheu8yfoi.fsf@pochi.inria.fr>
Lines: 31
User-Agent: Gnus/5.0808 (Gnus v5.8.8) Emacs/20.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

"emil artin" <emil.artin@web.de> writes:

>  But I don't know if it is managable at all!!

OCaml is able to read and write bytes on a Unix file descriptor, it is
also able to handle bit operations and you have both Int32 and Int64
data types. So it should be doable. The only lacking C feature is C
struct. 

However, I'm not sure it will be easier to do those low level
manipulations in OCaml than in C.

> It would be interesting (at least for me) to know if one can do things
> like file system implementation in OCaml?

If you are thinking of doing an OCaml linux kernel module to implement a
filesystem, clearly you can't do it (mainly due to the GC that needs the
glibc malloc() and/or sbrk() and would have to work in the kernel
address space).

Now, if you are speaking of doing a pure userland filesystem tool, it
should be doable, as said above.

If you progress in this direction, I would be personnaly interested to
have your feedback on the point.

Best regards,
d.
-- 
 David.Mentre@inria.fr
 Opinions expressed here are only mine.
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

