Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA20035; Tue, 25 Sep 2001 21:34:31 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA20036 for <caml-list@pauillac.inria.fr>; Tue, 25 Sep 2001 21:34:31 +0200 (MET DST)
Received: from imo-m10.mx.aol.com (imo-m10.mx.aol.com [64.12.136.165])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f8PJYUD29640
	for <caml-list@inria.fr>; Tue, 25 Sep 2001 21:34:30 +0200 (MET DST)
Received: from CaptnJamesKirk@aol.com
	by imo-m10.mx.aol.com (mail_out_v31_r1.7.) id j.a0.1ad425fc (4323);
	Tue, 25 Sep 2001 15:34:19 -0400 (EDT)
From: CaptnJamesKirk@aol.com
Message-ID: <a0.1ad425fc.28e2363b@aol.com>
Date: Tue, 25 Sep 2001 15:34:19 EDT
Subject: Re: [Caml-list] Initial port of ocaml for mingw (long)
To: ayerkes@gmvnetwork.com
CC: caml-list@inria.fr
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Mailer: AOL 5.0 for Windows sub 40
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I could not get it to build completely, see the notes below. Due to the 
number of cygwin tools needed, this will probably have to be a binary 
distribution to use with mingw, not a source distribution to build with mingw.

In a message dated 9/24/2001 6:47:33 PM Central Daylight Time, 
ayerkes@gmvnetwork.com writes:
>  Assumptions:
>   (You *must* have the CAMLLIB env variable set to a dos path
>    containing your caml libraries.  You have to have libcamlrun.a
>    in this directory in order for things to work.  You may wish
>    to premake this directory and copy files as necessary)

Ok, I did this. I was able to build through libcamlrun.a (see below), and I 
copied it to the appropriate directory, but not much else worked.

>  
>  Building: 
>  
>  With the files ocaml-3.02.tar.gz, ocaml-mingw-diffs and
>  ocaml-boot-mingw.tgz in a directory, do the following:
>  (sorry for breaking the build process)
>  
>  gzip -d < ocaml-3.02.tar.gz | tar xvf -

Or just "tar zxvf ocaml-3.02.tar.gz".

gzip and tar are part of the cygwin distro. I created a separate bin 
directory, put it in my path, and copied several things from cygwin to it. 
These included cygwin1.dll (of course), make (for some reason the make that 
comes with mingw has problems), tar, gzip & gunzip, ar, awk & gawk, bash 
(renamed to sh), patch, and lots of text-utils and file-utils. The main 
cygwin bin directory was not in my path, so that only the mingw gcc, as 
(assembler), and libraries were used. I can make a complete list of the tools 
needed from cygwin, if I can get it all to work.

>  cd ocaml-3.02
>  patch -p 0 < ../ocaml-mingw-diffs
>  gzip -d < ../ocaml-boot-mingw.tgz | tar xvf -
>  make
>  : The build breaks here (access.c) ... builds ok next time

Umm, not for me. Actually the first break involved building libcamlrun.a, 
when the linker couldn't find libpdcurses.a (which isn't part of mingw). In 
fact, pdcurses isn't part of my cygwin distro either, but I copied the 
regular ncurses library file to the mingw lib directory and renamed it 
libpdcurses.a and that seemed to work. The next break was nowhere near 
access.c, and had to do with finding pervasives.cmi. I tried "make world" 
instead of just "make" and it built through pervasives.cmi but stopped at 
bytecode/emitcode.ml with the error "Unbound value opEQ".

I tried several different things, but could never get it beyond this point. 
ocamlrun.exe, libocamlrun.a and ocamlyacc.exe were built, but nothing else.

>  
>  Hopefully, this is a step in the right direction for a MinGW port.
>  In any case, it relives the user of ocaml toplevel environments
>  from having to have cygwin, in addition to allowing one to create
>  executables that are free from cygwin.
>  
>  To complete the cycle, someone who is a bit better with mingw than
>  I will have to change the compile line in bytelink.ml and asmlink.ml
>  to reflect mingw,

I don't think this part will be necessary, since the mingw compiler and 
assembler are gcc and as, just like cygwin, but I'm not completely sure.

/John
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

