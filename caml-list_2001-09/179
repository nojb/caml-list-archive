Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA01016; Fri, 14 Sep 2001 14:16:46 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA00699 for <caml-list@pauillac.inria.fr>; Fri, 14 Sep 2001 14:16:45 +0200 (MET DST)
Received: from math.unifi.it (hermes.math.unifi.it [150.217.33.222])
	by concorde.inria.fr (8.11.1/8.10.0) with SMTP id f8ECGif28741
	for <caml-list@inria.fr>; Fri, 14 Sep 2001 14:16:44 +0200 (MET DST)
Received: (qmail 3863 invoked from network); 14 Sep 2001 12:16:32 -0000
Received: from sisiphos.math.unifi.it (mail@150.217.33.46)
  by hermes.math.unifi.it with SMTP; 14 Sep 2001 12:16:32 -0000
Received: from maggesi by sisiphos.math.unifi.it with local (Exim 3.12 #1 (Debian))
	id 15hrtY-0002Re-00
	for <caml-list@inria.fr>; Fri, 14 Sep 2001 14:16:32 +0200
To: caml-list@inria.fr
Subject: [Caml-list] mutable lists
From: Marco Maggesi <maggesi@math.unifi.it>
Date: 14 Sep 2001 14:16:32 +0200
Message-ID: <87heu67ysf.fsf@sisiphos.math.unifi.it>
Lines: 26
User-Agent: Gnus/5.090001 (Oort Gnus v0.01) Emacs/20.7
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Hi,

I am learning OCaml.  I would like to ask some questions.

I noticed that OCaml do not have a library for mutable lists as, say,
Lisp or Scheme where most procedure that operate on lists have both
"functional" and "destructive" variants (like `append' and `append!').
Is there any special theoretical reason for that?

Anyway, I am writing one such library for mutable lists as excuse for
me to learn OCaml and play with it.  It is freely available from
  http://www.math.unifi.it/~maggesi/srfi/
It is inspired from the Olin Shiver code for the SRFI-1 "List library"
for scheme (http://srfi.schemers.org/srfi-1/srfi-1.html).  Comments
are really welcomed.

Are there already other libraries for mutable lists available in
OCaml?  So that I can learn by comparison.

One more question about phantom types that are discussed in a parallel
thread in these days.  Is it possible to use phantom types to prevent
destructive operation on some lists?

Thanks for your patient with beginners,
Marco
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

