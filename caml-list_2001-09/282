Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA08806; Wed, 26 Sep 2001 21:24:42 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA08792 for <caml-list@pauillac.inria.fr>; Wed, 26 Sep 2001 21:24:42 +0200 (MET DST)
Received: from chopin.ai.univie.ac.at (chopin.ai.univie.ac.at [131.130.174.170])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f8QJOef05952
	for <caml-list@inria.fr>; Wed, 26 Sep 2001 21:24:41 +0200 (MET DST)
Received: (from markus@localhost)
	by chopin.ai.univie.ac.at (8.9.3/8.9.3/Debian 8.9.3-21) id VAA28640;
	Wed, 26 Sep 2001 21:23:41 +0200
Date: Wed, 26 Sep 2001 21:23:41 +0200
From: Markus Mottl <markus@mail4.ai.univie.ac.at>
To: Mattias Waldau <mattias.waldau@abc.se>
Cc: Brian Rogoff <bpr@best.com>, caml-list@inria.fr
Subject: Re: [Caml-list] Looking for Graph Operations-library
Message-ID: <20010926212341.B25799@chopin.ai.univie.ac.at>
References: <20010926100035.L20515-100000@shell5.ba.best.com> <AAEBJHFJOIPMMIILCEPBCEKKDCAA.mattias.waldau@abc.se>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <AAEBJHFJOIPMMIILCEPBCEKKDCAA.mattias.waldau@abc.se>; from mattias.waldau@abc.se on Wed, Sep 26, 2001 at 20:04:27 +0200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 26 Sep 2001, Mattias Waldau wrote:
> When I look at one of the papers, you get the impression that an
> imperative implementation is one to two magnitudes faster, is that
> right?  (Speed is irrelevant right now for me.)

This depends on the operation and the size of your graph. Some operations
should be nearly as fast (e.g. in the POMAP-case, insertion of elements),
others might run slower by this considerable amount (e.g. traversing
nodes - requires traversal and lookups in both edge sets and the node
set). I don't have any direct comparison to an imperative version so
this is just an estimate. It would be really interesting to have an
efficient imperative graph library in OCaml, too.

Regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

