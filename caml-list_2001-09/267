Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA27905; Tue, 25 Sep 2001 11:15:24 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA27901 for <caml-list@pauillac.inria.fr>; Tue, 25 Sep 2001 11:15:23 +0200 (MET DST)
Received: from antholoma.wanadoo.fr (smtp-abo-4.wanadoo.fr [193.252.19.153])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f8P9FMr13981
	for <caml-list@inria.fr>; Tue, 25 Sep 2001 11:15:22 +0200 (MET DST)
Received: from debian (217.109.144.127) by antholoma.wanadoo.fr; 25 Sep 2001 11:15:21 +0200
Received: from moi by debian with local (Exim 3.32 #1 (Debian))
	id 15loJV-0000Hs-00
	for <caml-list@inria.fr>; Tue, 25 Sep 2001 11:15:37 +0200
To: caml-list@inria.fr
Subject: Re: [Caml-list] Haskell features in O'Caml
References: <4F8477CFC03A71499AD8DDA428F5E114037726@basecamp.mchp.siemens.de>
From: Remi VANICAT <vanicat@labri.u-bordeaux.fr>
Date: 25 Sep 2001 11:15:37 +0200
In-Reply-To: <4F8477CFC03A71499AD8DDA428F5E114037726@basecamp.mchp.siemens.de>
Message-ID: <87r8svr5qe.dlv@wanadoo.fr>
Lines: 27
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.0.105
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Christian.Schaller@cert.siemens.de writes:

> oops, yes you're right.  I was trying it that way:
> * create test.ml
> * compile it => test.cm[io] file
> * now create test.mli
> * compile test.ml again
> and no error message will be issued, since test.cmi is existing, though has
> totally different signature.  This problem does also occur whenever the
> interface is changing!  There seems to be no check if interface source is
> newer than the compiled one (I'm using OCaml 3.02 @ cygwin without tk;
> Win2k, English, SP2).

You should use make for check when source file are newer than compiled
one. 

> 
>   It gets also interesting, when you are using -i to see the signature of
> your definitions.  A correct test.mli will yield "val f : int -> int",
> however compiling the definition will yield "val f : 'a -> 'a".

it depend of what you want, int -> int is as correct as 'a -> 'a.

-- 
Rémi Vanicat
vanicat@labri.u-bordeaux.fr
http://dept-info.labri.u-bordeaux.fr/~vanicat
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

