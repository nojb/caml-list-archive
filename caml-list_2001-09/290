Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA25094; Thu, 27 Sep 2001 13:42:36 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA25205 for caml-list@pauillac.inria.fr; Thu, 27 Sep 2001 13:42:36 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA12665 for <caml-list@pauillac.inria.fr>; Thu, 27 Sep 2001 01:04:20 +0200 (MET DST)
Received: from tcsnpop1.tcsn.uswest.net (tcsnpop1.tcsn.uswest.net [207.108.112.1])
	by nez-perce.inria.fr (8.11.1/8.10.0) with SMTP id f8QN4Jf08069
	for <caml-list@inria.fr>; Thu, 27 Sep 2001 01:04:19 +0200 (MET DST)
Received: (qmail 10850 invoked by uid 50); 26 Sep 2001 23:01:29 -0000
Delivered-To: fixup-caml-list@inria.fr@fixme
Received: (qmail 87968 invoked by uid 0); 26 Sep 2001 22:53:42 -0000
Received: from adslppp185.tcsn.uswest.net (HELO dylan) (216.161.144.185)
  by tcsnpop1.tcsn.uswest.net with SMTP; 26 Sep 2001 22:53:42 -0000
Message-ID: <01a001c146de$559385e0$210148bf@dylan>
From: "David McClain" <barabh@qwest.net>
To: <caml-list@inria.fr>
Subject: [Caml-list] Error Reporting
Date: Wed, 26 Sep 2001 15:55:27 -0700
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2919.6600
X-MIMEOLE: Produced By Microsoft MimeOLE V5.00.2919.6600
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi,

I am looking for some ideas on handling program error reporting for a
compiler that is built largely on CPS. Since there are no stack frames to
crawl for traceback, I have a first cut based on keeping a finite length
queue of last visited closures. But this becomes problematic when there are
circularities in the code, i.e., recursion. Also, I think I have way too
much error tracking going on at each incremental execution step and so
runtime performance is cut back compared to what it could be.

This compiler is written in OCaml and so there really are stack frames in a
few places.

Any ideas?

- David McClain, Sr. Scientist, Raytheon Systems Co., Tucson, AZ
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

