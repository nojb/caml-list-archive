Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id HAA14022; Sat, 15 Sep 2001 07:10:38 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA13881 for <caml-list@pauillac.inria.fr>; Sat, 15 Sep 2001 07:10:36 +0200 (MET DST)
Received: from fledge.watson.org (fledge.watson.org [204.156.12.50])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f8F5AZr02121
	for <caml-list@inria.fr>; Sat, 15 Sep 2001 07:10:35 +0200 (MET DST)
Received: from localhost (patrick@localhost)
	by fledge.watson.org (8.11.6/8.11.5) with SMTP id f8F5AJ425966;
	Sat, 15 Sep 2001 01:10:19 -0400 (EDT)
	(envelope-from patrick@watson.org)
Date: Sat, 15 Sep 2001 01:10:18 -0400 (EDT)
From: Patrick M Doane <patrick@watson.org>
To: Christian Lindig <lindig@eecs.harvard.edu>
cc: caml-list@inria.fr
Subject: Re: [Caml-list] OCAMLRUNPARAM and backtraces
In-Reply-To: <20010915004442.A10054@lakeland.eecs.harvard.edu>
Message-ID: <Pine.BSF.3.96.1010915010654.25152B-100000@fledge.watson.org>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I should have mentioned that I'm only trying this on bytecode. Here's
a concrete example:

except.ml:

  let f () = failwith "test"
  let main () = f ()
  ;;
  main ()


% ocamlc except.ml
% ./a.out 
Fatal error: uncaught exception Failure("test")
% setenv OCAMLRUNPARAM "b=1"
% ./a.out
Fatal error: uncaught exception Failure("test")
% 


On Sat, 15 Sep 2001, Christian Lindig wrote:

> >   % setenv OCAMLRUNPARAM "b=1"
> > 
> > but I've never seen a backtrace print out for uncaught exceptions. I
> > assume that others can get this working since I've seen outputs from it on
> > the list, so I must be missing something obvious. 
> 
> The environment variable looks ok. Stack traces only work with the
> byte code interpreter. You also must not catch the exception using 
> Printexec.to_string. Otherwise I have no idea. 
> 
> -- Christian

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

