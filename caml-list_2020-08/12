Return-Path: <SRS0=bxsj=B4=polytechnique.org=alan.schmitt@bounces.m4x.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id B05CBE000F
	for <caml-list@sympa.inria.fr>; Tue, 18 Aug 2020 09:26:01 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=Pass smtp.pra=alan.schmitt@polytechnique.org; spf=Pass smtp.mailfrom=SRS0=bxsj=B4=polytechnique.org=alan.schmitt@bounces.m4x.org; spf=Pass smtp.helo=postmaster@mx1.polytechnique.org
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  alan.schmitt@polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=pra; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=bxsj=B4=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="alan.schmitt@polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  SRS0=bxsj=B4=polytechnique.org=alan.schmitt@bounces.m4x.org
  designates 129.104.30.34 as permitted sender)
  identity=mailfrom; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=bxsj=B4=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="SRS0=bxsj=B4=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  postmaster@mx1.polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=helo; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=bxsj=B4=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="postmaster@mx1.polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
IronPort-PHdr: =?us-ascii?q?9a23=3AzKID7Rewjel3ioYBHtwKV48IlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxc27YR2N2/xhgRfzUJnB7Loc0qyK6v6mADRdqs/Y6zgrS99lb1c9k8?=
 =?us-ascii?q?IYnggtUoauKHbQC7rUVRE8B9lIT1R//nu2YgB/Ecf6YEDO8DXptWZBUhrwOhBo?=
 =?us-ascii?q?KevrB4Xck9q41/yo+53Ufg5EmCexbal9IRmrrAjdrNQajZdiJ6o+1xfFv3VFcP?=
 =?us-ascii?q?lKyG11Il6egwzy7dqq8p559CRQtfMh98peXqj/Yq81U79WAik4Pm4s/MHkugXN?=
 =?us-ascii?q?QgWJ5nsHT2UZiQFIDBTf7BH7RZj+rC33vfdg1SaAPM32Sbc0WSm+76puVRTlhj?=
 =?us-ascii?q?sLOyI//WrKisB+j6RboAygpxxkwo7be4WVO+RjdaLTetMaX3dOXt1MXCBFDI6w?=
 =?us-ascii?q?c44DAuwcNuhasob9vUMDoxugCwexCu3hyTBHiWPt0KIgz+gsCxvL0BA8E98Mtn?=
 =?us-ascii?q?nfsdX7NL0VUeCw1KTF0THDYOlQ2Tzg9YbHbhAhofSNXbJsbcra1E4iGBnBjlqK?=
 =?us-ascii?q?r4zpJSiV2fgNs2ie7upgSf6vhnU/qwF2pjiuxtsshZfViYIVzFDE9Dx5wJsrKt?=
 =?us-ascii?q?GiT057e9GkHYJWuiqHOIR4XtksTHt0uCYm1LIGo5i7cTAXxJg7yRDSduKKf5SV?=
 =?us-ascii?q?7hzjW+ucICp1iG57db+imhu8/0itx+78WMWqzVtHqihIn9nQu3wQ1BHf99aKRu?=
 =?us-ascii?q?Zz8Eqv3zuEyg7d6uZBIU8ulKrbLYYswqYumZoPsETDAjH5mF3xjK+Tc0Ur5PKk?=
 =?us-ascii?q?6+L5bbX6vpOcMJN7hRv7MqQqgMC/Bv44MgcWU2iU+OS8yL3j/VDiT7lQkvI2la?=
 =?us-ascii?q?zZvIjbJcsGpq+5BwtV3pwk6xalADer1skTk3ofLF9dZR6LkYzkN0vTLPzkAvqz?=
 =?us-ascii?q?mVqhnCtxy/3IMbDtGojBI3benLv7Y7pw60FRxBAuwdxD/Z5YF7MMLO71V0Tsrt?=
 =?us-ascii?q?LXFAU5PBaxw+v/CNVyyIceWWWXD6+cP6LerEWE5vooI+mIZI4VpCjyJOQl5/7o?=
 =?us-ascii?q?jH85gEIdcrez0ZsQcnC4EexqI0SfYXXyntcMCXoGshQ6QeDwlVGOTTFea2y8Uq?=
 =?us-ascii?q?4g/D02Bo2rAZ/GRo+3gbyB2Cm7HodRZmBDEl2CDGvmeZiYV/oUcy2TLdRhkj4c?=
 =?us-ascii?q?WLW8RIIszQmutAj+y7tnMurb5DEXtZLl1Nh0/u3TiA89+SZzD8SH3GGAV3t7nm?=
 =?us-ascii?q?cSSD8wxqx/ulByyleG0ah5n/xYCcde6OhOUgcnM57T0/J1C8voVgLEcdqIR0yq?=
 =?us-ascii?q?QtK8ATE+Vt4x2cMBY15hG9W+iRDOxzalDKUQl7yPHZA09qPc32PtJ8tm0HbH1K?=
 =?us-ascii?q?whj0E8TcdVNG2mgLR/9wnJCILTnUWZjfXiSaNJlirS8i3LmW6RumlcTwg2V6jZ?=
 =?us-ascii?q?CzRXLEDJq56xrhfJULmGDbU8LhAHyMKTLq8Mbcfm2xEOT/7mPJHaYnmts2a2Hx?=
 =?us-ascii?q?eBgL2WKMLhfGAF9CHcE1Qf1QcJ93eaPAwwATfnrn+NIiZpEAfGZ0rqudJ1qHa6?=
 =?us-ascii?q?UlN8mwiOZksnzLG1/x8JmdSETPcCwr8PuCEgsih5WlGn0ISFWJK7uwN9cfAEMp?=
 =?us-ascii?q?sG61Bd2DeC71UgbKzlFLhrgxslSyoyv07q0E8sWIBQyI4yq3c70Ad5KaSZyU5M?=
 =?us-ascii?q?MTSC0sKpY+GFGizJ5BmqLpXu9BTGyt/Pq/UX7/Apt1jovAeoD1cvtXJ93IsMii?=
 =?us-ascii?q?rO1tDxFAMXFKnJfAMy/hl+qavdZ3BitYnTyHtnPLLyt2PSndUzC7l8xw=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0B7AgAdgjtffSIeaIFfHgEBCxIMgy1YQ?=
 =?us-ascii?q?AFeVTIsg3dAiQGLM4U/jVmFdwEDAQwYAQoJAQIEAQGETAKCPQIdBgEFMxMCEAE?=
 =?us-ascii?q?BBQEBAQIBAwMEARMBAQsUCIYMDII3DBmDHQEKFwplIwMUBwMCEQEXARQKFwESF?=
 =?us-ascii?q?AYBgwyCfAUKlAubeoEyhDsBhHaBQA0CE4EWhUNLgwEIg2AmD4FNP4NsB2yCRQw?=
 =?us-ascii?q?LAQEBAQGBNAYBAQ5IgmGCYASPbiYBkwSSbCoHgmWBCQQLhkuBAIZMhCmGaYMAg?=
 =?us-ascii?q?SOIOZNFIZIZgWyFegeCVoYAilWET4FAKoFnDAczGjCDLAlgDYgfhVcBgU0BCIJ?=
 =?us-ascii?q?DhFk7hUQ/MwIBATMCBgEJAQEDCXUBAQUTCwGNdIJFAQE?=
X-IPAS-Result: =?us-ascii?q?A0B7AgAdgjtffSIeaIFfHgEBCxIMgy1YQAFeVTIsg3dAiQG?=
 =?us-ascii?q?LM4U/jVmFdwEDAQwYAQoJAQIEAQGETAKCPQIdBgEFMxMCEAEBBQEBAQIBAwMEA?=
 =?us-ascii?q?RMBAQsUCIYMDII3DBmDHQEKFwplIwMUBwMCEQEXARQKFwESFAYBgwyCfAUKlAu?=
 =?us-ascii?q?beoEyhDsBhHaBQA0CE4EWhUNLgwEIg2AmD4FNP4NsB2yCRQwLAQEBAQGBNAYBA?=
 =?us-ascii?q?Q5IgmGCYASPbiYBkwSSbCoHgmWBCQQLhkuBAIZMhCmGaYMAgSOIOZNFIZIZgWy?=
 =?us-ascii?q?FegeCVoYAilWET4FAKoFnDAczGjCDLAlgDYgfhVcBgU0BCIJDhFk7hUQ/MwIBA?=
 =?us-ascii?q?TMCBgEJAQEDCXUBAQUTCwGNdIJFAQE?=
X-IronPort-AV: E=Sophos;i="5.76,326,1592863200"; 
   d="scan'208,217";a="356749250"
X-MGA-submission: =?us-ascii?q?MDHUwjKu5RXZcFCS6PGqg7G52huSZQoCbNK/tN?=
 =?us-ascii?q?ZoouGNCSlpGEas3r7/QAkZUA44uegvL33h2JjGUy4p+8i4s8n2cn0Kd5?=
 =?us-ascii?q?1sV/Sf8olq8wOZ2ZzRl680X2MHiBcWdNjuivjqxjho1TZaVaRjClSBju?=
 =?us-ascii?q?BlMXUUwUAaXhxqXteQRJHfKQ=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 18 Aug 2020 09:25:29 +0200
Received: from set (set.irisa.fr [131.254.10.170])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id 520E9564E82;
	Tue, 18 Aug 2020 09:25:27 +0200 (CEST)
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr,
 comp@lists.orbitalfox.eu
Date: Tue, 18 Aug 2020 09:25:27 +0200
Message-ID: <87eeo4mn4o.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Aug 18 09:25:27 2020 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.000273, queueID=9A816564E84
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Hello

Here is the latest OCaml Weekly News, for the week of August 11 to 18,
2020.

Table of Contents
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

Ppx: omp 2.0.0 and next steps
Old CWN


Ppx: omp 2.0.0 and next steps
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ppx-omp-2-0-0-and-next-steps/6231/1>


J=C3=A9r=C3=A9mie Dimino announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  quick summary:
  =E2=80=A2 ocaml-migrate-parsetree 2.0.0 release
  =E2=80=A2 you should add a upper bound in your dev repos
  =E2=80=A2 ppxlib compatible version coming soon
  =E2=80=A2 ppxlib is now the official ppx library supported by the OCaml
    platform

  Hi everyone,

  As [previously announced], we are [releasing the version 2.0.0 of
  ocaml-migrate-parsetree]. At the moment nothing is compatible with the
  new version and we will soon release a version of ppxlib that is
  compatible with it. If your project depends on
  ocaml-migrate-parsetree, you should add a upper bound to your
  development repository.

  If you plan to use ocaml-migrate-parsetree 2.0.0 directly, please note
  however that this is a transitory package. The technology implemented
  by ocaml-migrate-parsetree will live on and hopefully find a new home
  in the compiler repository proper. However, ocaml-migrate-parsetree as
  a standalone project will eventually stop being maintained.

  I am also taking the opportunity to announce that *ppxlib is the first
  ppx library officially supported by the OCaml platform*, and the one
  we recommend all ppx authors to use. It is the library that we plan to
  maintain for the long term.

  Other libraries such as `ppx_tools' or `ppx_tools_versioned' may
  continue to be maintained by open source contributors, however they
  will not be maintained by the OCaml platform and will not receive
  updates from the platform when new compilers are released. Only ppxlib
  will receive updates from the platform.

  If you would like to port your project to use ppxlib and are
  experiencing difficulties or have any question, please get in touch by
  replying to this post or opening a ticket on
  <https://github.com/ocaml-ppx/ppxlib>.

  The overall plan described in this post is the result of various
  discussions and/or collaborative effort between the following people:
  @avsm, @ceastlund, @Drup, @gasche, @jeremiedimino, @kit-ty-kate,
  @let-def, @NathanReb and @pitag.


[previously announced]
<https://discuss.ocaml.org/t/ocaml-migrate-parsetree-2-0-0/5991>

[releasing the version 2.0.0 of ocaml-migrate-parsetree]
<https://github.com/ocaml/opam-repository/pull/16999>

Next steps
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C

  As soon as the new version of ppxlib is released, we will work towards
  our next milestone. As a reminder, our current goal is to setup a ppx
  ecosystem that is continously compatible with the trunk of OCaml. To
  achieve that goal, we plan to add a stable API called "Astlib" on top
  of the compiler libraries. To keep things sustainable on the compiler
  side and increase flexibility, Astlib will be minimal and will be
  targeted at ppxlib only rather than be a general API aimed at ppx
  authors.

  The difficulty of this API is that it must expose a stable interface
  to the OCaml AST, which is composed of a large collection of data
  types. To make it work, we plan to use the technology developed in
  ocaml-migrate-parsetree; i.e. whole AST migration functions.

  While we eventually want Astlib to live in the compiler repository, we
  will initially develop it inside the ppxlib repository. Once it is
  ready, we will submit it for inclusion in the compiler. Although, we
  will keep a copy inside ppxlib for older versions of the compiler.

  We also plan to setup a smooth workflow for compiler developers to
  update Astlib when they change the development AST.

  Once this is all done, we will be in a situation where the ppx
  ecosystem is compatible with the trunk of OCaml at all time. And as a
  result, new releases of the compiler will no longer break ppx packages
  as long as they limit themselves to the ppxlib API.


Future
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  While this work will make the ecosystem compatible with the trunk of
  OCaml at all times, it will essentially move the backward
  compatibility issue from the compiler to ppxlib.[1] This will already
  give us a lot more flexibility as for instance a single version of
  ppxlib can be compatible with a wide range of OCaml versions. However,
  we recognise that it is not usual to ask a community to rely on an
  unstable API.

  We made this choice as a trade-off between sustainability and
  complexity. Indeed, we want to maintain Astlib and Ppxlib over the
  long term and the best way to make things sustainable is to use simple
  and clear designs. While we do have solutions in our sleeves that
  would provide a fully stable ppx API, these are much more complicated
  to maintain and work with.

  To mitigate this, we are setting up a Dune based workflow to upgrade
  all ppx rewriters at once. So once the system is rolling and if your
  ppx rewriters are up to date and using Dune, you should expect to
  receive pull requests as we update ppxlib. This last part will take
  some time to be fully rolling, so please bear with us :)

  In any case, about a year after this new world is fully setup, we will
  review the situation and decide whether it is sustainable or whether
  we need to go all the way and mint a fully stable ppx API.


Timeline
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 today: ocaml-migrate-parsetree 2.0.0 is being released

  =E2=80=A2 next week: a ppxlib compatible version is released

  =E2=80=A2 December 2020: astlib is ready inside the ppxlib repository

  =E2=80=A2 next OCaml release after that: astlib lives in the compiler

  =E2=80=A2 September 2021: we review the situation and decide what to do n=
ext

  [1]: At any given time the API of ppxlib refer to a single version of
  the OCaml AST. In order to allow OCaml users to enjoy both ppx
  rewriters and new language features, the version of the AST selected
  by ppxlib needs to be bumped after each release of the compiler, which
  is a breaking change that has the potential to break several ppx
  packages.  As a result, ppx packages will still need to be regularly
  updated in order to stay compatible with the latest version of ppxlib.


Old CWN
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  [online].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <http://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <http://alan.petitepomme.net/cwn/cwn.rss>

[online] <http://lists.idyll.org/listinfo/caml-news-weekly/>

[Alan Schmitt] <http://alan.petitepomme.net/>


--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2020-08-18 Tue 09:24 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org mode" />
<style type=3D"text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
<script type=3D"text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2020 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target =3D document.getElementById(id);
   if(null !=3D target) {
     elem.cacheClassElem =3D elem.className;
     elem.cacheClassTarget =3D target.className;
     target.className =3D "code-highlighted";
     elem.className   =3D "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target =3D document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className =3D elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className =3D elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"http://alan.petitepomme.net/cwn/2020.08.11.html">Previous Week</=
a> <a href=3D"http://alan.petitepomme.net/cwn/index.html">Up</a> <a href=3D=
"http://alan.petitepomme.net/cwn/2020.08.25.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of August 11 to 18, 2020.
</p>

<div id=3D"table-of-contents">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents">
<ul>
<li><a href=3D"#1">Ppx: omp 2.0.0 and next steps</a></li>
<li><a href=3D"#orgbe53787">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-org9da4e43" class=3D"outline-2">
<h2 id=3D"1">Ppx: omp 2.0.0 and next steps</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ppx-omp-2-0-0-and-next-step=
s/6231/1">https://discuss.ocaml.org/t/ppx-omp-2-0-0-and-next-steps/6231/1</=
a>
</p>
</div>

<div id=3D"outline-container-org0f6c36d" class=3D"outline-3">
<h3 id=3D"org0f6c36d">J=C3=A9r=C3=A9mie Dimino announced</h3>
<div class=3D"outline-text-3" id=3D"text-org0f6c36d">
<p>
quick summary:
</p>
<ul class=3D"org-ul">
<li>ocaml-migrate-parsetree 2.0.0 release</li>
<li>you should add a upper bound in your dev repos</li>
<li>ppxlib compatible version coming soon</li>
<li>ppxlib is now the official ppx library supported by the OCaml platform<=
/li>
</ul>

<p>
Hi everyone,
</p>

<p>
As <a href=3D"https://discuss.ocaml.org/t/ocaml-migrate-parsetree-2-0-0/599=
1">previously announced</a>, we are <a href=3D"https://github.com/ocaml/opa=
m-repository/pull/16999">releasing the version 2.0.0 of
ocaml-migrate-parsetree</a>. At the moment nothing is compatible with the n=
ew version and we will
soon release a version of ppxlib that is compatible with it. If your projec=
t depends on
ocaml-migrate-parsetree, you should add a upper bound to your development r=
epository.
</p>

<p>
If you plan to use ocaml-migrate-parsetree 2.0.0 directly, please note howe=
ver that this is a
transitory package. The technology implemented by ocaml-migrate-parsetree w=
ill live on and hopefully
find a new home in the compiler repository proper. However, ocaml-migrate-p=
arsetree as a standalone
project will eventually stop being maintained.
</p>

<p>
I am also taking the opportunity to announce that <b>ppxlib is the first pp=
x library officially
supported by the OCaml platform</b>, and the one we recommend all ppx autho=
rs to use. It is the library
that we plan to maintain for the long term.
</p>

<p>
Other libraries such as <code>ppx_tools</code> or <code>ppx_tools_versioned=
</code> may continue to be maintained by open
source contributors, however they will not be maintained by the OCaml platf=
orm and will not receive
updates from the platform when new compilers are released. Only ppxlib will=
 receive updates from the
platform.
</p>

<p>
If you would like to port your project to use ppxlib and are experiencing d=
ifficulties or have any
question, please get in touch by replying to this post or opening a ticket =
on
<a href=3D"https://github.com/ocaml-ppx/ppxlib">https://github.com/ocaml-pp=
x/ppxlib</a>.
</p>

<p>
The overall plan described in this post is the result of various discussion=
s and/or collaborative
effort between the following people: @avsm, @ceastlund, @Drup, @gasche, @je=
remiedimino, @kit-ty-kate,
@let-def, @NathanReb and @pitag.
</p>
</div>

<div id=3D"outline-container-org2e31bef" class=3D"outline-4">
<h4 id=3D"org2e31bef">Next steps</h4>
<div class=3D"outline-text-4" id=3D"text-org2e31bef">
<p>
As soon as the new version of ppxlib is released, we will work towards our =
next milestone. As a
reminder, our current goal is to setup a ppx ecosystem that is continously =
compatible with the trunk of
OCaml. To achieve that goal, we plan to add a stable API called "Astlib" on=
 top of the compiler
libraries. To keep things sustainable on the compiler side and increase fle=
xibility, Astlib will be
minimal and will be targeted at ppxlib only rather than be a general API ai=
med at ppx authors.
</p>

<p>
The difficulty of this API is that it must expose a stable interface to the=
 OCaml AST, which is
composed of a large collection of data types. To make it work, we plan to u=
se the technology developed
in ocaml-migrate-parsetree; i.e. whole AST migration functions.
</p>

<p>
While we eventually want Astlib to live in the compiler repository, we will=
 initially develop it inside
the ppxlib repository. Once it is ready, we will submit it for inclusion in=
 the compiler. Although, we
will keep a copy inside ppxlib for older versions of the compiler.
</p>

<p>
We also plan to setup a smooth workflow for compiler developers to update A=
stlib when they change the
development AST.
</p>

<p>
Once this is all done, we will be in a situation where the ppx ecosystem is=
 compatible with the trunk
of OCaml at all time. And as a result, new releases of the compiler will no=
 longer break ppx packages
as long as they limit themselves to the ppxlib API.
</p>
</div>
</div>

<div id=3D"outline-container-orge07f6af" class=3D"outline-4">
<h4 id=3D"orge07f6af">Future</h4>
<div class=3D"outline-text-4" id=3D"text-orge07f6af">
<p>
While this work will make the ecosystem compatible with the trunk of OCaml =
at all times, it will
essentially move the backward compatibility issue from the compiler to ppxl=
ib.[1] This will already
give us a lot more flexibility as for instance a single version of ppxlib c=
an be compatible with a wide
range of OCaml versions. However, we recognise that it is not usual to ask =
a community to rely on an
unstable API.
</p>

<p>
We made this choice as a trade-off between sustainability and complexity. I=
ndeed, we want to maintain
Astlib and Ppxlib over the long term and the best way to make things sustai=
nable is to use simple and
clear designs. While we do have solutions in our sleeves that would provide=
 a fully stable ppx API,
these are much more complicated to maintain and work with.
</p>

<p>
To mitigate this, we are setting up a Dune based workflow to upgrade all pp=
x rewriters at once. So once
the system is rolling and if your ppx rewriters are up to date and using Du=
ne, you should expect to
receive pull requests as we update ppxlib. This last part will take some ti=
me to be fully rolling, so
please bear with us :)
</p>

<p>
In any case, about a year after this new world is fully setup, we will revi=
ew the situation and decide
whether it is sustainable or whether we need to go all the way and mint a f=
ully stable ppx API.
</p>
</div>
</div>

<div id=3D"outline-container-org76527cf" class=3D"outline-4">
<h4 id=3D"org76527cf">Timeline</h4>
<div class=3D"outline-text-4" id=3D"text-org76527cf">
<ul class=3D"org-ul">
<li>today: ocaml-migrate-parsetree 2.0.0 is being released</li>

<li>next week: a ppxlib compatible version is released</li>

<li>December 2020: astlib is ready inside the ppxlib repository</li>

<li>next OCaml release after that: astlib lives in the compiler</li>

<li>September 2021: we review the situation and decide what to do next</li>
</ul>

<p>
[1]: At any given time the API of ppxlib refer to a single version of the O=
Caml AST. In order to allow
OCaml users to enjoy both ppx rewriters and new language features, the vers=
ion of the AST selected by
ppxlib needs to be bumped after each release of the compiler, which is a br=
eaking change that has the
potential to break several ppx packages.  As a result, ppx packages will st=
ill need to be regularly
updated in order to stay compatible with the latest version of ppxlib.
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-orgbe53787" class=3D"outline-2">
<h2 id=3D"orgbe53787">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-orgbe53787">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"http://alan.petitepomme.net/cwn/">the archive</a> or the <a=
 href=3D"http://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archives<=
/a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname">
<p>
<a href=3D"http://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

