Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA21571 for caml-redistribution; Thu, 4 Feb 1999 08:54:38 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA09289 for <caml-list@pauillac.inria.fr>; Wed, 3 Feb 1999 19:40:22 +0100 (MET)
Received: from shell5.ba.best.com (shell5.ba.best.com [206.184.139.136])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id TAA03655
	for <caml-list@inria.fr>; Wed, 3 Feb 1999 19:40:20 +0100 (MET)
Received: from localhost (bpr@localhost)
	by shell5.ba.best.com (8.9.2/8.9.2/best.sh) with ESMTP id KAA25028
	for <caml-list@inria.fr>; Wed, 3 Feb 1999 10:40:20 -0800 (PST)
Date: Wed, 3 Feb 1999 10:40:19 -0800 (PST)
From: Brian Rogoff <bpr@best.com>
To: caml-list@inria.fr
Subject: Re: Wishlist!
In-Reply-To: <000901be4d99$1c2e1630$210148bf@dylan>
Message-ID: <Pine.BSF.4.05.9902031016420.29633-100000@shell5.ba.best.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: weis

On Sun, 31 Jan 1999, David McClain wrote:

> Gee, OCAML is such a pleasure to use, and invariably, when I have a bug, 
> it turns out to be in my external C routines. It sure would be nice if
> OCAML is someday extended to support a wider variety of datatypes (e.g.,
> bytes, shorts, longs, floats, etc.) so that I can just skip this wasteful
> practice of coding in C. We could then enjoy using OCAML for all the
> systems level programming chores that plague us on a daily basis!

Since library discussions are the topic of the day here, let me suggest 
taking a peek at the SML 97 Basis library for ideas. Something comparable 
for Caml would be great, and would probably be pretty stable since it
doesn't use the more researchy parts of Caml, i.e. the object system.
I think the Basis library emerged in order to make SML more useable for 
systems programming, so it is likely to have features you desire. Basing 
a Caml Basis Library on SMLs also allows Caml and SML programmers to port
code a little more easily between the two languages.

There are also some other useful abstractions that can be stolen from Modula3. 

-- Brian



