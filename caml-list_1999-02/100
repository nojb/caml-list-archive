Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA05986 for caml-redistribution; Mon, 22 Feb 1999 18:58:52 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA00977 for <caml-list@pauillac.inria.fr>; Mon, 22 Feb 1999 18:25:34 +0100 (MET)
Received: from mail2.microsoft.com (mail2.microsoft.com [131.107.3.124])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id SAA13363
	for <caml-list@inria.fr>; Mon, 22 Feb 1999 18:25:32 +0100 (MET)
Received: by mail2.microsoft.com with Internet Mail Service (5.5.2524.0)
	id <FCC3MTND>; Mon, 22 Feb 1999 09:25:31 -0800
Message-ID: <39ADCF833E74D111A2D700805F1951EF0F00B9E4@RED-MSG-06>
From: Don Syme <dsyme@microsoft.com>
To: caml-list@inria.fr
Subject: RE: Warnings in ocaml
Date: Mon, 22 Feb 1999 09:25:27 -0800
X-Mailer: Internet Mail Service (5.5.2524.0)
Sender: weis


> Also it will be useful to produce warning when polymorphic comparison
> occurs.

Here's another problem: I wrote about 20,000 lines where I used the built in
equality for
a particular type (that represented terms in a theorem prover).  Now I want
to implement
my own equality function on the type, and never user built-in equality.  I
can see 
Ocaml has generally made the right choice in not having
equality types like SML, but in this situation some sort of annotation +
warning would
be incredibly useful, since as it stands the Ocaml type system doesn't help
me find all those horrible
uses of built-in equality that I coded into my program, when you really feel
like it should...

Don

------------------------------------------------------------------------
At the lab:                                     At home:
Microsoft Research Cambridge                    11 John St
St George House                                 CB1 1DT
Cambridge, CB2 3NH, UK
Ph: +44 (0) 1223 744797                         Ph: +44 (0) 1223 722244
http://research.microsoft.com/users/dsyme
email: dsyme@microsoft.com
------------------------------------------------------------------------



