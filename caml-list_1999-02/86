Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA26159 for caml-redistribution; Mon, 22 Feb 1999 13:29:46 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA24197 for <caml-list@pauillac.inria.fr>; Mon, 22 Feb 1999 07:54:23 +0100 (MET)
Received: from hadar.cse.Buffalo.EDU (hadar.cse.Buffalo.EDU [128.205.32.1])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id HAA29891
	for <caml-list@inria.fr>; Mon, 22 Feb 1999 07:54:21 +0100 (MET)
Received: (from whitley@localhost)
	by hadar.cse.Buffalo.EDU (8.8.8/8.8.5) id BAA26219;
	Mon, 22 Feb 1999 01:54:20 -0500 (EST)
From: John Whitley <whitley@cse.buffalo.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Date: Mon, 22 Feb 1999 01:54:20 -0500 (EST)
To: caml-list@inria.fr
Subject: Olabldebug on classes?
X-Mailer: VM 6.43 under 20.4 "Emerald" XEmacs  Lucid
Message-ID: <14032.63536.754773.125969@hadar.cse.Buffalo.EDU>
Sender: weis


Hello all,

Perhaps I am simply being a bit slow today, but I cannot seem to get
olabldebug to print/display class instance variables, mutable or
otherwise.

Consider the code example below.  When the debugger is stopped at
method bal, the commands "print bar" and "print baz" only produce the
"Unbound identifier" error message.  I can print parameters to invoked 
methods, but that's about it.

So how does one apply the debugger to classes?

Thanks much,
John

--cut here--------------------------------------
(* test main file *)

class foo n =
object
  val bar = n
  val mutable baz = 1
  method bal = baz <- baz*bar
end

let test = new foo 2

let _ =
  for i = 1 to 20 do
    test#bal
  done

--cut here--------------------------------------



