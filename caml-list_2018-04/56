Return-Path: <gabriel.scherer@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 8AF8D8240C
	for <caml-list@sympa.inria.fr>; Mon, 16 Apr 2018 23:08:07 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=gabriel.scherer@gmail.com; spf=Pass smtp.mailfrom=gabriel.scherer@gmail.com; spf=None smtp.helo=postmaster@mail-qk0-f173.google.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  gabriel.scherer@gmail.com) identity=pra;
  client-ip=209.85.220.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  gabriel.scherer@gmail.com designates 209.85.220.173 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.220.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qk0-f173.google.com) identity=helo;
  client-ip=209.85.220.173;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="postmaster@mail-qk0-f173.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AkPiR4hVYfMbP5U1XDdBoKMbzxHHV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbBaOt8tkgFKBZ4jH8fUM07OQ7/i7HzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjWwba98IRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KpwVhTmlD?=
 =?us-ascii?q?kIOCI48GHPi8x/kqRboA66pxdix4LYeZyZOOZicq/Ye94RWGhPUdtLVyFZAIy8?=
 =?us-ascii?q?YYsBAeQCM+hFsYfyu1QAoACiBQm1Hu7j1iNEimP00KA8zu8vERvG3AslH98WsX?=
 =?us-ascii?q?rbts76NL0TUe+ryKnD0CjNYO9W2Tjj8ojHbAohquyLULJ/a8Xe0lMvFwLbgVWU?=
 =?us-ascii?q?s4DlJC+a1uQTvGiB8eVgT/mii2Eiqw5rozivwt0ghZXOhoIQ013J8zhyzogyJd?=
 =?us-ascii?q?29UkF7YNikHYNRtyGcLYt2Q9ktT3tmuCYgzLANpJ21fDASxZg52xLSb+aLfouI?=
 =?us-ascii?q?7x75SuqdPyt0iGh4dL+9iRu/91WrxPfmWcmuyllKqzJIktnSuXAJ0Bze8s2HRe?=
 =?us-ascii?q?F8/kelwDqPzgPT5v1dLUA6iKbWKZAszqQ/lpoUtkTDESv2l1vsgKCKcUUk//Ck?=
 =?us-ascii?q?6+XhYrr4up+RL5F4hh36P6g0mcGyAf40PhYQU2SH4+iwyb/u8EPhTLVPlPI2k6?=
 =?us-ascii?q?3ZsJ7AJcQco660GwBV3Zw45BalDjepztAYkWMcLF1ZeBKIkZLpNE/UIP3jAve/?=
 =?us-ascii?q?hk6jkDZvx/zcIrLhBZDNImDZkLj9ZbZ991JcyA0rwN9D/Z1UD7UBLOv3Wk/wr9?=
 =?us-ascii?q?zYEgQ0Mxe0wubiENVyzJkSWWOJAq+DMaPdq0WE5uw1I7rEWIhAkTDyJvwir9Xp?=
 =?us-ascii?q?l2Qwg1hVKaCv0pYTb1i5FfN8OEyDZjzqj8tXQkkQuQ9rY+XgklyPVXZobHa/Ra?=
 =?us-ascii?q?8mrmU0AYi8DIrHAJumgLGb0T2TEZhfZ2QAAVeJRyS7P76YUusBPXrBavRqlSYJ?=
 =?us-ascii?q?AP34E9d4hEOe8TTiwr8iFdL6vygRtJbtzt9wvrSBmhQ79DgyBMOYgTjUEzNE21?=
 =?us-ascii?q?gQTjpz55hR5FRnww7ag6d9iv1cU9dU4qERC1poBdvn1+V/TuvKdEfBc9OOEgj0?=
 =?us-ascii?q?R9ynBXQoTYp0zYZROAByHNKtih2F1C2vUecY?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AyBADbD9Vaf63cVdFdHgEGDINmPXooC?=
 =?us-ascii?q?oMeP4NtkSmBdAKBDYdKjRkLI4RgAoI9BxkHAQQ0FAECAQEBAQEBAQEBEwEBCQs?=
 =?us-ascii?q?LCCYlDII1JAGCSQECAwwXHQEbHQEDDAYDAgsNAgImAgIiAREBBQEcBhMIhGwBA?=
 =?us-ascii?q?xUPijKPfzyLBYF/BQEXgm8Fg0wKGSYNVFeCHQIGEneGfYFUP4QagwYLBIFegwC?=
 =?us-ascii?q?CVAKMY4sBCIFhg3iIYoFuil2JLIZkDwMegQQzgXMzGiNQMYISCYILg2iBPokXP?=
 =?us-ascii?q?DABji8BAQ?=
X-IPAS-Result: =?us-ascii?q?A0AyBADbD9Vaf63cVdFdHgEGDINmPXooCoMeP4NtkSmBdAK?=
 =?us-ascii?q?BDYdKjRkLI4RgAoI9BxkHAQQ0FAECAQEBAQEBAQEBEwEBCQsLCCYlDII1JAGCS?=
 =?us-ascii?q?QECAwwXHQEbHQEDDAYDAgsNAgImAgIiAREBBQEcBhMIhGwBAxUPijKPfzyLBYF?=
 =?us-ascii?q?/BQEXgm8Fg0wKGSYNVFeCHQIGEneGfYFUP4QagwYLBIFegwCCVAKMY4sBCIFhg?=
 =?us-ascii?q?3iIYoFuil2JLIZkDwMegQQzgXMzGiNQMYISCYILg2iBPokXPDABji8BAQ?=
X-IronPort-AV: E=Sophos;i="5.48,460,1517871600"; 
   d="scan'208";a="262249430"
Received: from mail-qk0-f173.google.com ([209.85.220.173])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 16 Apr 2018 23:08:06 +0200
Received: by mail-qk0-f173.google.com with SMTP id d74so4047378qkg.4
        for <caml-list@inria.fr>; Mon, 16 Apr 2018 14:08:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-transfer-encoding;
        bh=/is+yJIFjeQcKtF/Gch5WYQ5lTC7zN860Ro/Xz105gA=;
        b=GU4zNXPJVjkYZ7umr2x/TlaDdWoOMxfRDSx/Gd8jPW+QlfUijn/H23hIXK25n51WZH
         Yl/7SurLf4hk+WjixvFXnysW0oWCxuo7S+T4ewUwIUQEmw+SNMLHz6RHA2VHby1r7I3f
         FbFE0+egOr42e4V+WwrrixB47OYRlTxTKnHcMAKD73ck7EldA56esV3eCN3eaAeSjFpF
         3QOkGhP4dlbXEPWWkKV4/9r/DHi5++oDMWGTln1evUrs7Tb8efuPUfb3nD00qZOQ/eeu
         9uztwNG4F2AlwOGkr27ntM+aVACmyVHSYyrcONCpCk3igkJSbQOTtblet+/cRlDQ8YLI
         fvJA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc:content-transfer-encoding;
        bh=/is+yJIFjeQcKtF/Gch5WYQ5lTC7zN860Ro/Xz105gA=;
        b=BZzrHVkZOSQ60MhH0cb2/5QtoiInrwkaGuXK/++u0vIUaODa3TpZ/nMvKW0uSII9BG
         NqcCeNVT5gybxwt/yQkBfw4jHU3xBc9z56uHHm1vgDm7ObNedQ5XYijI1JXfu6PjUNPV
         U5FEWoEcwInNutJiZIG/umox7+6FdrP1VtAk/eIk6zFgzErRhjWxxl7B0sW81dryIQdp
         yxVZq5sGL0lGT9zztCPWqUxgMtG4wVn2JTnw8LhJhSqDCoCljLFXSg2hm9E7UzwmDtXJ
         V/7qfaFFOU5vlUs6U+gsRN0XKYw5qCoUyCFcZM0FuqXnHPnAHqDRJgswpQnDfICrColg
         EWPg==
X-Gm-Message-State: ALQs6tBTDmc2FiE+FkXf4AFTStWvBX2cg/XCtRgUhWvWXqW6oMxbPPV3
	4DAcK8HKcMpSl+srOvVkFXQBIkQwOvMLodFKW5Xvxg==
X-Google-Smtp-Source: AIpwx4/oWECIUADyHupMuERwIm0Jy+f6tSCIWiVlKXCdJG+EW2b6Hx67Ifh+LQVn6W8WLyCtPrwVAegXW7xS69jpTsM=
X-Received: by 10.55.180.197 with SMTP id d188mr5896072qkf.36.1523912885138;
 Mon, 16 Apr 2018 14:08:05 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.12.132.3 with HTTP; Mon, 16 Apr 2018 14:07:24 -0700 (PDT)
In-Reply-To: <A3ACD6F4-5EA8-49C4-9BB7-7C4445F3EB2D@icorsaro.net>
References: <A3ACD6F4-5EA8-49C4-9BB7-7C4445F3EB2D@icorsaro.net>
From: Gabriel Scherer <gabriel.scherer@gmail.com>
Date: Tue, 17 Apr 2018 00:07:24 +0300
Message-ID: <CAPFanBGWvirh+VVBdayEejn34u6W_fQAazrQbzHYY8dWP86WmA@mail.gmail.com>
To: Angelo Corsaro <angelo@icorsaro.net>
Cc: caml users <caml-list@inria.fr>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable
Subject: Re: [Caml-list] Recursive record initialisation

The fact that the declaration is legal does not imply that you can
build useful values at this type. (It may be that trying to reject it
would naturally lead to reject other types that *are* more
interesting, for example.)

In this case you can build a value using value recursion, but it is
not very interesting:

# let rec a =3D { b }
       and b =3D { a };;
val a : atype =3D {b =3D {a =3D <cycle>}}
val b : btype =3D {a =3D {b =3D <cycle>}}

( Recursive value definitions:
http://caml.inria.fr/pub/docs/manual-ocaml/extn.html#s%3Aletrecvalues
)

Recursive value definitions are somewhat arcane and rarely used, but
still occasionally useful. One downside is that they prevent a purely
inductive interpretation of datatypes: if a recursive function is
structurally decreasing on one of its argument, there still exists
valid OCaml inputs on which it may not terminate. For example,
consider List.length on (let rec x =3D 1 :: 2 :: x).

On Mon, Apr 16, 2018 at 11:57 PM, Angelo Corsaro <angelo@icorsaro.net> wrot=
e:
> Hello,
>
> I have a question concerning the initialisation of mutually recursive rec=
ord
> types. As a trivial example consider the following type declaration:
>
> type atype =3D { b : btype; }
> and btype =3D { a : atype; }
>
> This is a legal type declaration (it type-checks w/o a blink), but I can=
=E2=80=99t
> see how such a type would be initialised? As both =E2=80=9Ca" and =E2=80=
=9Cb=E2=80=9D are values
> there is an apparent bootstrapping issue. But as this is a legal type
> declaration I guess there is a way around, wondering what the right way i=
s.
>
> Thanks very much in advance for any clarification.
>
> =E2=80=94Angelo
>
>
>
>
> =E2=80=94
> =E2=80=9CSimplicity is the ultimate sophistication." ~ Leonardo da Vinci
>
