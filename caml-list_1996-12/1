Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA26274 for caml-redistribution; Thu, 5 Dec 1996 14:23:45 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA20877 for <caml-list@pauillac.inria.fr>; Thu, 5 Dec 1996 11:19:44 +0100 (MET)
Received: from shiva.jussieu.fr (shiva.jussieu.fr [134.157.0.129]) by nez-perce.inria.fr (8.7.6/8.7.1) with ESMTP id LAA01887; Thu, 5 Dec 1996 11:19:42 +0100 (MET)
Received: from boole.logique.jussieu.fr (boole.logique.jussieu.fr [134.157.19.17])
          by shiva.jussieu.fr (8.8.3/jtpda-5.2) with ESMTP id LAA13354
          ; Thu, 5 Dec 1996 11:19:42 +0100 (MET)
Received: from boris by boole.logique.jussieu.fr
   (8.7.6/jtpda-4.0) with SMTP; Thu, 5 Dec 1996 11:20:17 +0100 (MET)
Message-ID: <32A6A1A2.5735C804@logique.jussieu.fr>
Date: Thu, 05 Dec 1996 11:19:14 +0100
From: Christophe Raffalli <raffalli@logique.jussieu.fr>
X-Mailer: Mozilla 3.0 (X11; I; Linux 2.0.15 i586)
MIME-Version: 1.0
To: Renaud Marlet <marlet@irisa.fr>, camllist@inria.fr, caml-list@inria.fr
Subject: Re: debugging/tracing: any?
References: <583nll$hs4@cantaloupe.srv.cs.cmu.edu>
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable
Sender: weis

Renaud Marlet wrote:
> =

> Does any of the SML programming environment have working
> debugging/tracing facilities?  And if not, when are such
> functionalities planned to be available?
> =

> What about O'Caml?
> =

> Thanks.
> =

> Renaud

Rigolot de repondre au copain.

OCaml a des "profileur" comptant le nombre d'acces a chaque partie du
code (tres utilies pour detecte les parties jamais utilise lors des test
qui sont donc succeptible de contenir des bugs). Il est tres facile
d'obtenir une trace ou un profileur pour le temps en utilisant le
preprocesseur C avec des trucs du genre:

#ifdef PROFILE
  let f =3D profile_3_arguments f
#endif

ou profile_3_arguments fait ce que tu veux

Pour le debugger, Caml_Light en a un tres bon (avec backtracking: tu
laise l'erreur se produire et tu reviens en arriere, c'est genial !)

Si tu n'utilises pas le systeme de module et les truc oo, le code ocaml
se compile en caml-light en grande partie (si tu ajoutes les ;;
maintenant obtionel). (Quelques malheureux changement dans certains
module. Donc c'est faisable. A par ca j'espere que quelqu'un porte ce
debugger a ocaml ...

 =


-- =

Christophe Raffalli
D=E9partement d'informatique
Universit=E9 de Paris XII
URL: http://www.logique.jussieu.fr/www.raffalli




