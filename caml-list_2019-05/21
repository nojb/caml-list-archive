Return-Path: <Thierry.Martinez@inria.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 179FE7ED69
	for <caml-list@sympa.inria.fr>; Tue, 14 May 2019 10:27:31 +0200 (CEST)
X-IronPort-AV: E=Sophos;i="5.60,468,1549926000"; 
   d="scan'208";a="305923104"
Received: from org51-h01-176-134-229-12.dsl.sta.abo.bbox.fr (HELO pl347-pro) ([176.134.229.12])
  by mail3-relais-sop.national.inria.fr with ESMTP/TLS/AES256-GCM-SHA384; 14 May 2019 10:27:30 +0200
User-agent: mu4e 1.1.0; emacs 26.1
From: Thierry Martinez <Thierry.Martinez@inria.fr>
To: Ocaml Mailing List <caml-list@inria.fr>
Date: Tue, 14 May 2019 10:27:31 +0200
Message-ID: <ow48sv91lvw.fsf@inria.fr>
MIME-Version: 1.0
Content-Type: text/plain
Subject: [Caml-list] [ANN] override v0.1.0

Dear OCaml developers,

I am happy to announce the first release of override (v0.1.0)!

Override is a PPX extension for overriding modules defined in other
compiled interface files.

The library is available through opam: opam install override

The project is hosted on Inria Gitlab:
https://gitlab.inria.fr/tmartine/override

See README.md for usage and examples.

This library generalizes ppx_import by allowing a whole module to be
imported with all its types, possibly with annotations.  In
particular, importing a whole module can be convenient to apply
ppx_deriving to a large family of mutually inductive data types.
Types can be systematically annotated, substituted, renamed, or
removed.  The library can be seen as a mechanization of Gabriel
Scherer's post on Gagallium blog:
http://gallium.inria.fr/blog/overriding-submodules/

Happy hacking.
-- 
Thierry.
