Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA14126 for caml-red; Sun, 20 Aug 2000 18:58:44 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA28471 for <caml-list@pauillac.inria.fr>; Fri, 18 Aug 2000 18:50:22 +0200 (MET DST)
Received: from miss.wu-wien.ac.at (miss.wu-wien.ac.at [137.208.107.17])
	by nez-perce.inria.fr (8.10.0/8.10.0) with ESMTP id e7IGoLT21741
	for <caml-list@inria.fr>; Fri, 18 Aug 2000 18:50:21 +0200 (MET DST)
Received: (from mottl@localhost)
	by miss.wu-wien.ac.at (8.9.0/8.9.0) id SAA07630;
	Fri, 18 Aug 2000 18:48:01 +0200 (MET DST)
Date: Fri, 18 Aug 2000 18:48:01 +0200
From: Markus Mottl <mottl@miss.wu-wien.ac.at>
To: Brian Rogoff <bpr@best.com>
Cc: OCAML <caml-list@inria.fr>
Subject: Re: alternative module systems
Message-ID: <20000818184801.A7009@miss.wu-wien.ac.at>
References: <20000814171709.A28856@miss.wu-wien.ac.at> <Pine.BSF.4.21.0008180845520.5793-100000@shell5.ba.best.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2i
In-Reply-To: <Pine.BSF.4.21.0008180845520.5793-100000@shell5.ba.best.com>; from bpr@best.com on Fri, Aug 18, 2000 at 09:36:39 -0700
Sender: weis@pauillac.inria.fr

> Yes it is. I wonder what else those features will enable. In particular,
> the use of first class structures to configure a system at run
> time looks really useful to me. This is one of those things I'd normally
> be disposed towards doing with classes. I find it disturbing though, since
> my mental model of modules is that they are "second class". 

It also took me a while to wind my brain around this concept. Given that
modules have some nice properties that do not hold for classes (objects),
being able to create them at runtime and even pass them around as values
looks quite promising. To my knowledge, the described approach is said to
be formally very clean.

> It's a superset of the OCaml module system too, at least that part that is 
> comparable with SML (obviously SML doesn't have classes and such). 

Indeed, it looks as if one could switch "below the hud" without breaking
code, doesn't it?

Best regards,
Markus Mottl

-- 
Markus Mottl, mottl@miss.wu-wien.ac.at, http://miss.wu-wien.ac.at/~mottl


