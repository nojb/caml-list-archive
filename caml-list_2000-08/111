Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA19145 for caml-red; Sat, 26 Aug 2000 10:16:45 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA03814 for <caml-list@pauillac.inria.fr>; Fri, 25 Aug 2000 11:52:26 +0200 (MET DST)
Received: from uni-sb.de (uni-sb.de [134.96.252.33])
	by nez-perce.inria.fr (8.10.0/8.10.0) with ESMTP id e7P9qK527470
	for <caml-list@inria.fr>; Fri, 25 Aug 2000 11:52:21 +0200 (MET DST)
Received: from cs.uni-sb.de (cs.uni-sb.de [134.96.252.31])
	by uni-sb.de (8.11.0/2000072000) with ESMTP id LAA23590;
	Fri, 25 Aug 2000 11:52:09 +0200 (CEST)
Received: from grizzly.ps.uni-sb.de (grizzly.ps.uni-sb.de [134.96.186.68])
	by cs.uni-sb.de (8.11.0/2000072000) with ESMTP id LAA23504;
	Fri, 25 Aug 2000 11:52:41 +0200 (CEST)
Received: from ps.uni-sb.de (grieg.ps.uni-sb.de [134.96.186.139])
	by grizzly.ps.uni-sb.de (8.9.3/8.9.1) with ESMTP id LAA20513;
	Fri, 25 Aug 2000 11:52:11 +0200
Message-ID: <39A641CB.FB5091D9@ps.uni-sb.de>
Date: Fri, 25 Aug 2000 11:52:11 +0200
From: Andreas Rossberg <rossberg@ps.uni-sb.de>
Organization: =?iso-8859-1?Q?Universit=E4t?= des Saarlandes
X-Mailer: Mozilla 4.74 [en] (X11; U; Linux 2.2.16-3 i686)
X-Accept-Language: de, en
MIME-Version: 1.0
To: John Max Skaller <skaller@maxtal.com.au>
CC: caml-list@inria.fr
Subject: Re: Language Design
References: <000d01c00bb8$fb3e3560$210148bf@dylan> <39A36758.E474CC1E@maxtal.com.au> <20000824111226.28393@pauillac.inria.fr> <39A58286.81AEAF47@maxtal.com.au>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis@pauillac.inria.fr

John Max Skaller wrote:
> 
> Francois Pottier wrote:
> >
> > Have you thought about employing some kind of monadic type system?
> 
>         Yes, but I don't know enough to do it at the moment.
> [Also, it turns out monads are not general enough to write
> web services in, which puts me off a bit]

The following tutorial gives quite a comprehensive explanation of how to
integrate I/O, stateful computation, and stuff into a purely functional
language using Monads. And coincidentally it uses a web server as a
running example ;-)

	http://research.microsoft.com/Users/simonpj/#marktoberdorf

-- 
Andreas Rossberg, rossberg@ps.uni-sb.de

:: be declarative. be functional. just be. ::


