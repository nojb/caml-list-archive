Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA15202 for caml-red; Mon, 14 Aug 2000 19:25:07 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA13521 for <caml-list@pauillac.inria.fr>; Mon, 14 Aug 2000 17:17:01 +0200 (MET DST)
Received: from miss.wu-wien.ac.at (miss.wu-wien.ac.at [137.208.107.17])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e7EFH0b15658
	for <caml-list@inria.fr>; Mon, 14 Aug 2000 17:17:00 +0200 (MET DST)
Received: (from mottl@localhost)
	by miss.wu-wien.ac.at (8.9.0/8.9.0) id RAA29786
	for caml-list@inria.fr; Mon, 14 Aug 2000 17:17:09 +0200 (MET DST)
Date: Mon, 14 Aug 2000 17:17:09 +0200
From: Markus Mottl <mottl@miss.wu-wien.ac.at>
To: OCAML <caml-list@inria.fr>
Subject: alternative module systems
Message-ID: <20000814171709.A28856@miss.wu-wien.ac.at>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2i
Sender: weis@pauillac.inria.fr

Hello,

having just looked at a few examples of the new module system as
implemented by Claudio Russo in Moscow ML, I wonder whether people at INRIA
have already considered it?

It supports higher order functors, mutually recursive modules, even first
class modules. The module examples in the Moscow ML distribution also
demonstrate the new capabilites using the bootstrapping methods explained
in Okasaki's book on "Purely Functional Datastructures". This is really
neat stuff!

I have no idea whether there are any caveats to this solution, but it looks
pretty general. Any comments whether something similar could be implemented
in OCaml? As it seems, the solution is a true superset of the previous
module system used in SML.

Best regards,
Markus Mottl

-- 
Markus Mottl, mottl@miss.wu-wien.ac.at, http://miss.wu-wien.ac.at/~mottl


