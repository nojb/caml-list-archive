Received: (from weis@localhost) by pauillac.inria.fr (8.6.10/8.6.6) id MAA14532 for caml-redistribution; Mon, 11 Mar 1996 12:15:54 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.6.10/8.6.6) with ESMTP id QAA03969 for <caml-list@pauillac.inria.fr>; Sat, 9 Mar 1996 16:04:12 +0100
Received: from storm.certix.fr (storm.certix.fr [194.51.232.32]) by concorde.inria.fr (8.7.1/8.7.1) with SMTP id QAA27187 for <caml-list@pauillac.inria.fr>; Sat, 9 Mar 1996 16:04:11 +0100 (MET)
Received: from nancy0-220.sct.fr (nancy0-220.sct.fr [194.206.157.220]) by storm.certix.fr (8.6.12/8.6.12) with SMTP id RAA19039 for <caml-list@pauillac.inria.fr>; Sat, 9 Mar 1996 17:02:16 +0100
Date: Sat, 9 Mar 1996 17:02:16 +0100
Message-Id: <199603091602.RAA19039@storm.certix.fr>
X-Sender: tarizzo@worldnet.fr
X-Mailer: Windows Eudora Light Version 1.5.2
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
To: caml-list@pauillac.inria.fr
From: Tarizzo Martial <tarizzo@worldnet.fr>
Subject: Recursion, exception and continuations
Sender: weis
Status: O


Hello,

Here are some questions about CAML :

[1] Is tail recursion always handled correctly by CAML, i.e. in a constant
stack space ? 

[2] Why is it not possible to define an exception locally, inside a
function. The Michel Mauny's tutorial seems to encourage the use of
exception as a control structure (a kind of common lisp catch/throw), but
it' annoying to be obliged to declare them at toplevel, which can then be
rapidly polluted by exception declarations (and naming can become difficult).

[3] I appreciate the type system of CAML, but is a such system compatible
with access to continuations, as it is possible to do in Scheme ?

Thanks for answers.
*********************************
 Tarizzo Martial
 Prof. Sc Physiques
 Classes preparatoires
 Lycee J MOULIN
 57600 FORBACH

 Email: tarizzo@world-net.sct.fr
        74014.3307@compuserve.com
 Compuserve : 74014,3307
*********************************





