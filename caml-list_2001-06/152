Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA00755; Mon, 11 Jun 2001 02:20:43 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA00716 for <caml-list@pauillac.inria.fr>; Mon, 11 Jun 2001 02:20:42 +0200 (MET DST)
Received: from ip208.usw4.rb1.pdx.nwlink.com (ip208.usw4.rb1.pdx.nwlink.com [209.20.133.208])
	by concorde.inria.fr (8.11.1/8.10.0) with SMTP id f5B0KeL04852
	for <caml-list@inria.fr>; Mon, 11 Jun 2001 02:20:40 +0200 (MET DST)
Received: (qmail 19600 invoked by uid 500); 11 Jun 2001 00:20:36 -0000
Date: Sun, 10 Jun 2001 17:20:36 -0700
From: leary@nwlink.com
To: Jonathan Coupe <jonathan@meanwhile.freeserve.co.uk>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] ocaml complexity
Message-ID: <20010610172036.A19470@jean>
References: <20010607015821.B11344@jean> <002c01c0ef7f$e154f3e0$5d26883e@baby> <20010608024102.A13672@jean> <003601c0f016$7ac12940$a00bfea9@baby> <20010608154623.A15375@jean> <001c01c0f134$0cc4ee80$c9d8893e@baby>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <001c01c0f134$0cc4ee80$c9d8893e@baby>; from jonathan@meanwhile.freeserve.co.uk on Sat, Jun 09, 2001 at 11:32:20PM +0100
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sat, Jun 09, 2001 at 11:32:20PM +0100, Jonathan Coupe wrote:
> No. What I said was that you won't convice sceptical colleagues that you're
> right in choosing ocaml until you ship.

Didn't you see the winky smiley and the "But seriously..."?

But I disagree anyway; there's no way to know exactly when people will be
convinced of something.  For example, a milestone or two on a large project
might be enough; and shipping two products might not be.

> You certainly won't
> convince anyone that ocaml was the right choice by saying that you're
> developing faster "from day one" as you claimed. People make claims that all
> the time. They're usually wrong. In fact, making claims like will reduce
> crdibility - unless you've got unusually tight metrics to back you're claim
> up. From your comments, I'm pretty sure you've never been a lead on a
> commercial project.

Actually, what I *asked* was, "How much time and money do development teams
spend creating and tracking down memory management errors in C and C++
starting on day one?".  'Not much' was your answer.  I didn't argue with
that.  But since you bring it up again... Having to address memory
management is a cost in time and/or money associated with development in C
and C++ -- you must address the issue *somehow*.  Not having to deal with
memory management is an immediate and ongoing benefit, *however small*,
from using OCaml rather than C or C++.

And before you say it, yes, this is probably going to be outweighed by the
availability of off the shelf components and libraries, and the fact that
it's easier and maybe cheaper to find replacement programmers for a popular
language, among a number of other factors which would likely tend to make
development faster in those languages.

> Hmm. No one I've ever met uses GnuSmalltalk. My understanding from people
> who have tried is that its only marginall usable. The standard open source
> smalltalk is Squeak. Ruby, a Smalltalk cousin, is probably alos worth
> looking at  - and is spreading like wildfire. You can find more Smalltalk
> stuff at www.stic.org

Mea culpa, I just searched on Google for "smalltalk free" and went to the
first link, 'cause I got warm fuzzies when I saw "GNU".  I still don't like
all OOP, all the time, tho'.

Didn't know that about Ruby; interesting.  I read it's all the rage in
Japan.  Go figure.


-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

