Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA28139; Mon, 4 Jun 2001 12:12:57 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA28322 for <caml-list@pauillac.inria.fr>; Mon, 4 Jun 2001 12:12:56 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f54ACrX08705
	for <caml-list@inria.fr>; Mon, 4 Jun 2001 12:12:54 +0200 (MET DST)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3/3.7W) with ESMTP id TAA22977;
	Mon, 4 Jun 2001 19:12:43 +0900 (JST)
To: monnier+lists.caml/news/@rum.cs.yale.edu
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml Speed for Block Convolutions
In-Reply-To: <5lk82vhhc1.fsf@rum.cs.yale.edu>
References: <003001c0eaca$01e48220$210148bf@dylan>
	<20010601225159.84658.qmail@web11901.mail.yahoo.com>
	<5lk82vhhc1.fsf@rum.cs.yale.edu>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20010604191244V.garrigue@kurims.kyoto-u.ac.jp>
Date: Mon, 04 Jun 2001 19:12:44 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 26
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: "Stefan Monnier" <monnier+lists.caml/news/@rum.cs.yale.edu>
> >>>>> "Tom" == Tom  <tom7ca@yahoo.com> writes:
> > I think widespread adoption of 64bit machines will
> > make a huge difference for polymorphic and dynamic
> > languages, however.  32 bits is kind of tight for
> 
> But boxing will force everything to 64bit, thus the "double memory use"
> will be slightly more noticeable with those languages than with C.

I'm not sure this would matter that much.
Even in C, people are going to play safe, and oversize everything...
Just considering code size, alpha was already about twice as big as
other architectures. But it might be better to compare Sparc/32 vs
Sparc/64.

Anyway, if the real problem is about data size (and not code size),
you can still use Bigarray for your raw data, and have the same sizes
as in C. With the extra advantage that your 32-bit integers have all
their bits when converted to 63, and for 64-bit integers you generally
do not care about the topmost one. So I would expect Tom's statement
to be right: 64-bit is really a plus for functional programming in
general, and ocaml in particular.

Cheers,

Jacques Garrigue
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

