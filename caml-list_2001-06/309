Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA15990; Mon, 18 Jun 2001 11:43:06 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA16037 for <caml-list@pauillac.inria.fr>; Mon, 18 Jun 2001 11:43:05 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f5I9h3n00828;
	Mon, 18 Jun 2001 11:43:03 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA16098; Mon, 18 Jun 2001 11:43:03 +0200 (MET DST)
Date: Mon, 18 Jun 2001 11:43:03 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: David McClain <dmcclain1@mindspring.com>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Threading and C code
Message-ID: <20010618114303.B15736@pauillac.inria.fr>
References: <00b201c0f500$f59483d0$210148bf@dylan>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <00b201c0f500$f59483d0$210148bf@dylan>; from dmcclain1@mindspring.com on Thu, Jun 14, 2001 at 11:36:41AM -0700
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> After searching through the sources for the threads lib I find that two
> entry points are used to negotiate this possibility --
> enter_blocking_section() and leave_blocking_section().  These appear to be
> needed around any code that could possibly block.

This is correct.

> These aren't mentioned in any of the normal header files in /ocaml/lib/caml
> but I think they ought to be. Is this protocol subject to change? or can it
> be made a standard protocol for C external functions?

This protocol hasn't changed in many years, so I agree it should be
documented.

- Xavier Leroy
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

