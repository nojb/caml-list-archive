Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA17304; Tue, 5 Jun 2001 18:59:13 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA17441 for caml-list@pauillac.inria.fr; Tue, 5 Jun 2001 18:59:12 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA15415 for <caml-list@pauillac.inria.fr>; Tue, 5 Jun 2001 17:03:01 +0200 (MET DST)
Received: from tequila.cs.yale.edu (tequila.cs.yale.edu [128.36.229.152])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f55F2vn04799
	for <caml-list@inria.fr>; Tue, 5 Jun 2001 17:03:01 +0200 (MET DST)
Received: from tequila.cs.yale.edu (localhost [127.0.0.1])
	by tequila.cs.yale.edu (8.11.0/8.9.3) with SMTP id f55F2n222171
	for <caml-list@inria.fr>; Tue, 5 Jun 2001 11:02:49 -0400
To: caml-list@inria.fr
From: "Stefan Monnier" <monnier+lists.caml/news/@rum.cs.yale.edu>
Newsgroups: lists.caml
Subject: Re: [Caml-list] OCaml Speed for Block Convolutions
References: <20010604221414.49620.qmail@web11906.mail.yahoo.com> <Pine.BSF.4.21.0106041911310.5390-100000@shell5.ba.best.com>
Date: 05 Jun 2001 11:02:44 -0400
Message-ID: <5lelszynor.fsf@rum.cs.yale.edu>
Lines: 12
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.0.104
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Path: rum.cs.yale.edu
NNTP-Posting-Host: rum.cs.yale.edu
X-Trace: 5 Jun 2001 11:02:44 -0400, rum.cs.yale.edu
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

>>>>> "Brian" == Brian Rogoff <bpr@best.com> writes:
> regardless. Coming back to the subject of this thread, in an ideal world, 
> there wouldn't be a need to distinguish between Bigarray and Array, you'd 
> just use polymorphic arrays and the compiler would be smart enough to 
> always get unboxed and tag free element representations. Supposedly Stalin 

That's also what SML/NJ tries to do.  But short of doing whole program
analysis and/or profiling feedback, it's difficult to generate as good
code as in the Bigarray case.


	Stefan
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

