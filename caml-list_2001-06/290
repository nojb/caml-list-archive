Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA21947; Fri, 15 Jun 2001 20:42:21 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA21861 for <caml-list@pauillac.inria.fr>; Fri, 15 Jun 2001 20:42:20 +0200 (MET DST)
Received: from miss.wu-wien.ac.at (miss.wu-wien.ac.at [137.208.107.17])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f5FIgJX07345;
	Fri, 15 Jun 2001 20:42:19 +0200 (MET DST)
Received: (from mottl@localhost)
	by miss.wu-wien.ac.at (8.9.0/8.9.0) id UAA11307;
	Fri, 15 Jun 2001 20:42:19 +0200 (MET DST)
Date: Fri, 15 Jun 2001 20:42:18 +0200
From: Markus Mottl <mottl@miss.wu-wien.ac.at>
To: Xavier Leroy <Xavier.Leroy@inria.fr>
Cc: OCAML <caml-list@inria.fr>
Subject: Re: [Caml-list] native threads not parallel?
Message-ID: <20010615204218.C25835@miss.wu-wien.ac.at>
References: <20010615184931.A25835@miss.wu-wien.ac.at> <20010615191046.A20258@pauillac.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <20010615191046.A20258@pauillac.inria.fr>; from Xavier.Leroy@inria.fr on Fri, Jun 15, 2001 at 19:10:46 +0200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 15 Jun 2001, Xavier Leroy wrote:
> The default thread library under Solaris is odd in the sense that, by
> default, it doesn't take advantage of more than one processor.  (More
> specifically, it creates only one "ligthweight process", i.e. kernel
> thread, unless more are required for I/O purposes.)

Very odd, indeed...

> Try to put the
> following incantation somewhere in your code:
[snip]
> If that doesn't help, you might still want to look at how many LWPs
> (not user threads) are active in your program, using whatever tools
> Solaris provides for this purpose.  

Thanks for the code, but it unfortunately doesn't change anything (at
least not visibly to me).

The "ps"-command shows me that there are really four LWPs with different
LWP-ids running under the same PID. Or better: only one seems to
be actually executing code, the others do not consume LTIME. The
"mpstat"-tool tells me that user code consumes both CPUs at 100%, but
this means nothing, because the tool counts itself as already consuming
the capacity of one processor...

Maybe it's a configuration problem of the machine, I don't know, I am
not the administrator.

In any case, it doesn't seem to depend on my code. If anybody ever tries
my Lacaml-library on a machine with multiple processors, I'd like to
hear whether it works fine when executed in parallel.

Regards,
Markus Mottl

-- 
Markus Mottl, mottl@miss.wu-wien.ac.at, http://miss.wu-wien.ac.at/~mottl
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

