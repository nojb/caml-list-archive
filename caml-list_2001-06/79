Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA23516; Thu, 7 Jun 2001 09:35:42 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA23449 for <caml-list@pauillac.inria.fr>; Thu, 7 Jun 2001 09:35:41 +0200 (MET DST)
Received: from mailgw1.fhg.de (mailgw1.fhg.de [153.96.1.2])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f577Zdf12793
	for <caml-list@inria.fr>; Thu, 7 Jun 2001 09:35:39 +0200 (MET DST)
Received: from ilt.fhg.de (ilt.ilt.fhg.de [153.96.180.2])
	by mailgw1.fhg.de (8.11.1/8.11.1) with ESMTP id f577Za528122
	for <caml-list@inria.fr>; Thu, 7 Jun 2001 09:35:37 +0200 (MET DST)
Received: from eent230 (iltpc099.ilt.fhg.de [192.102.148.99])
	by ilt.fhg.de (8.9.3/8.9.3) with SMTP id JAA24981
	for <caml-list@inria.fr>; Thu, 7 Jun 2001 09:35:35 +0200 (MET DST)
Message-Id: <200106070735.JAA24981@ilt.fhg.de>
From: wester@ilt.fhg.de
To: caml-list@inria.fr
Date: Thu, 7 Jun 2001 09:35:37 +0200
MIME-Version: 1.0
Content-type: text/plain; charset=US-ASCII
Content-transfer-encoding: 7BIT
Subject: Re: [Caml-list] ocaml complexity
In-reply-to: <20010606095041.A93623@caddr.com>
X-mailer: Pegasus Mail for Win32 (v3.01d)
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


> I've been studying Ocaml on and off for about three years now and although
> I'm still very impressed with its power I still don't really feel like I
> understand it very well.  I've also learned lisp, scheme, and python in
> the last few years and, although Ocaml seems to me to be a more powerful
> language in many respects, I feel that these other languages were much
> easier to learn.  This is partly due to my inexperience with functional
> languages, I'm sure, but I don't think that alone accounts for it.  
> 
Lisp and Scheme are functional languages too. Concerning Common Lisp 
I think it's a much bigger language and also a very powerful one (may be
in some other respects than OCaml).   
>
> It feels to me to be more of an issue of the number of language features
> and abstraction techniques each language offers.  The other languages seem
> to "fit in my brain" better.  I have to admit that I find the conjunction
> of modules, classes, variants, polymorphic variants, labels, references,
> streams etc. a bit bewildering.  I find myself at a bit of a loss when
> starting a new program because I have so many avenues of decomposition
> open to me.  I think I've finally grasped the essentials well enough to
> write real programs in Ocaml, but I can't say it's been easy.
> 
I don't know of course how difficult it had been for me to learn OCaml
as a first language but my personal experience with OCaml is, that
it is not very hard to learn. I think C++ is more complex and seems 
not to be so clearly structured as OCaml is. I'm much more experienced 
in C++ programming but I enjoy doing things in OCaml. One of the 
main advantage for me is the toplevel of OCaml. You can easily try
out things and so learn much faster as oposed to compile/link/run 
in C++.

> I'm often tempted to push Ocaml as a solution for projects at work, but I
> hesitate to advocate it too strongly because I honestly think Ocaml is
> beyond the abilities of most of my colleagues.  I suspect only the
> brightest of the programmers I've worked with will come to grips with both
> functional programming and the large array of features Ocaml offers fast
> enough to justify the time taken to retrain.
> 
> Of all the functional languages, Ocaml seems to me the most pragmatic and
> most useful for everyday programming, but I wonder if it's within the
> grasp of the everyday user.  I know a lot of fairly amateur C++
> programmers who get by with a small subset of the language, 

Those who are content with getting by with a small subset of a language 
probably don't like programming and so will not be willing to learn a new
language. 

>but it seems
> more difficult to limit oneself to a small subset of Ocaml.
> 
Why?

> Have others had similar experiences?  I suspect most of the readers of
> this list are better-than-average programmers.  How difficult have you
> found it to be to teach Ocaml to your colleagues?  Any suggestions on a
> simple pedagogy for bringing more junior people abreast of subjects as
> esoteric as polymorphic recursive types?
> 

> -- 
> miles
> -------------------


-------------------------------------
Rolf Wester
wester@ilt.fhg.de
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

