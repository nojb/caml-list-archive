Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA23417; Thu, 7 Jun 2001 09:38:26 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA23622 for <caml-list@pauillac.inria.fr>; Thu, 7 Jun 2001 09:38:25 +0200 (MET DST)
Received: from smtp3.xs4all.nl (smtp3.xs4all.nl [194.109.127.132])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f577cO917435
	for <caml-list@inria.fr>; Thu, 7 Jun 2001 09:38:24 +0200 (MET DST)
Received: from beertje.william.bogus (williamc.xs4all.nl [213.84.56.92])
	by smtp3.xs4all.nl (8.9.3/8.9.3) with ESMTP id JAA18093;
	Thu, 7 Jun 2001 09:38:08 +0200 (CEST)
Received: (from williamc@localhost)
	by beertje.william.bogus (8.11.2/8.11.2/SuSE Linux 8.11.1-0.5) id f577gBP23995;
	Thu, 7 Jun 2001 09:42:11 +0200
X-Authentication-Warning: beertje.william.bogus: williamc set sender to williamc@paneris.org using -f
From: William Chesters <williamc@paneris.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15135.12371.282422.243658@beertje.william.bogus>
Date: Thu, 7 Jun 2001 09:42:11 +0200 (CEST)
To: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml Speed for Block Convolutions
In-Reply-To: <4.3.2.7.2.20010606152725.02a22310@shell16.ba.best.com>
References: <20010605003423.A20283@miss.wu-wien.ac.at>
	<002f01c0ecf9$d028a3b0$210148bf@dylan>
	<15131.59080.327155.47983@beertje.william.bogus>
	<002a01c0ed33$0b3d5de0$210148bf@dylan>
	<4.3.2.7.2.20010606152725.02a22310@shell16.ba.best.com>
X-Mailer: VM 6.75 under 21.1 (patch 14) "Cuyahoga Valley" XEmacs Lucid
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Chris Hecker writes:
 > 
 > >My feeling has always been that the overhead of initialising a float
 > >array, per element, is considerably less than the cost of one floating
 > >point operation; so if you ever intend to actually use the array for
 > >anything, the inefficiency is negligible.
 > 
 > This is not true on modern processors, if I understand what you're saying.  Touching memory that's not in the cache is orders of magnitude slower than flops.  Even the best case, with the memory in the cache, touching memory is the same speed or slower than doing a flop on most CPUs.

Er, yes, you are right of course and "I didn't mean to say that" ;)
but rather: whatever you subsequently do to the float array, be it
arithmetic or churning it through the cache, is likely to be
more expensive per element than initialisation.

Sorry,
William

[head befuddled by day spent trying to trick C++ compiler into coding up
float array ops right, or that's my excuse!]
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

