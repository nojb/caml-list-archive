Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id HAA25137; Sun, 10 Jun 2001 07:49:04 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA25229 for <caml-list@pauillac.inria.fr>; Sun, 10 Jun 2001 07:49:03 +0200 (MET DST)
Received: from hall.mail.mindspring.net (hall.mail.mindspring.net [207.69.200.60])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f5A5n2j20853
	for <caml-list@inria.fr>; Sun, 10 Jun 2001 07:49:02 +0200 (MET DST)
Received: from dylan (1Cust39.tnt4.tucson.az.da.uu.net [63.11.145.39])
	by hall.mail.mindspring.net (8.9.3/8.8.5) with SMTP id BAA21975
	for <caml-list@inria.fr>; Sun, 10 Jun 2001 01:48:59 -0400 (EDT)
Message-ID: <001801c0f171$5d5f50a0$210148bf@dylan>
From: "David McClain" <dmcclain1@mindspring.com>
To: <caml-list@inria.fr>
References: <Pine.BSF.3.96.1010609224559.6403A-100000@fledge.watson.org>
Subject: Re: [Caml-list] Evaluation Order
Date: Sat, 9 Jun 2001 22:51:14 -0700
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2919.6600
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6600
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> It sounds like a lot of what you're describing comes with Haskell's
> monadic IO system.  If you have an expression
>
>   e1 +  e2
>
> where e1 and e2 could be side effecting expressions, the type system
> forces you to write:
>
> do v1 <- e1
>    v2 <- e2
>    return v1 + v2
>

Hmm... Monads have been mentioned several times now. I need to go back and
refresh my understanding of these. I seem to recall that Marcus Motl did
something in OCaml related to monadic programming idioms. I am aware, now
that you mention it, that Haskell does have these temporal ordering
constraints available. It would be very nice to have these in a language
like OCaml with its easy integration of foreign functions.

- DM


-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

