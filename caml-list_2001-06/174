Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA14703; Mon, 11 Jun 2001 17:29:50 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA14731 for <caml-list@pauillac.inria.fr>; Mon, 11 Jun 2001 17:29:49 +0200 (MET DST)
Received: from www.invert.com (invert.com [209.164.21.15])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f5BFTmv18858
	for <caml-list@inria.fr>; Mon, 11 Jun 2001 17:29:48 +0200 (MET DST)
Received: (from miles@localhost)
	by www.invert.com (8.10.1/8.10.1AA) id f5BFTlx59365
	for caml-list@inria.fr; Mon, 11 Jun 2001 08:29:47 -0700 (PDT)
	(envelope-from miles)
Date: Mon, 11 Jun 2001 08:29:47 -0700
From: Miles Egan <miles@caddr.com>
To: caml-list@inria.fr
Subject: [Caml-list] the importance of strictness
Message-ID: <20010611082947.B59230@caddr.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

While perusing the results of the last several ICFP contests, I've been struck
by the fact that teams using Haskell often manage to write correct programs,
they are almost always slower than the Ocaml entries.  My impression is that the
Ocaml advantage is at least partially due to a more efficient compiler.  Is this
because more effort has been devoted to optimizing the Ocaml compiler or is it
because a strict language is simpler to implement and leaves more room for
optimization?

-- 
miles
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

