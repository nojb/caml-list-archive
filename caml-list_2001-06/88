Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA02423; Thu, 7 Jun 2001 20:24:29 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA02334 for <caml-list@pauillac.inria.fr>; Thu, 7 Jun 2001 20:24:28 +0200 (MET DST)
Received: from cmailg4.svr.pol.co.uk (cmailg4.svr.pol.co.uk [195.92.195.174])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f57IOSf03786
	for <caml-list@inria.fr>; Thu, 7 Jun 2001 20:24:28 +0200 (MET DST)
Received: from modem-338.red-naped-sapsucker.dialup.pol.co.uk ([62.137.209.82] helo=baby)
	by cmailg4.svr.pol.co.uk with smtp (Exim 3.13 #0)
	id 1584P5-00024S-00; Thu, 07 Jun 2001 19:21:08 +0100
Message-ID: <002c01c0ef7f$e154f3e0$5d26883e@baby>
From: "Jonathan Coupe" <jonathan@meanwhile.freeserve.co.uk>
To: <leary@nwlink.com>, <caml-list@inria.fr>
References: <20010607015821.B11344@jean>
Subject: Re: [Caml-list] ocaml complexity
Date: Thu, 7 Jun 2001 19:29:27 +0100
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.50.4133.2400
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> I'd wager that 90% of the reason Perl is so huge is due to _Learning
Perl_.
> Neophytes can start writing interactive programs on page 7.  I went from
> near zero programming ability to writing an IDL parser/EDI data tranlator
> in about a month or so using that and Programming Perl -- for which the
OCaml
> manual is a semi-reasonable, if terse and dry, match.  Is there hope for
> the coming O'Reilly translation, or does it too think that I/O (i.e. doing
> something useful and interesting) is something best left for the later
> chapters (or the reference section)?  It's hard for me to believe that
> OCaml can be both so good, and so unpopular (read: badly documented (read:
> no friendly tutorials)).  From whence _Learning OCaml_?

Books are important. Perl's are superb at getting a new user started. A
Learning OCaml would be a good thing. But Perl's spread is also dues to at
least four other factors:

1. Perl was perceived by the adopters who gave it critical mass as being
fundamentally like the languages they already knew (bash, C, Awk) It was a
low risk, low effort, low fear choice.

2. Perl is aimed most of all at small projects. The risk of trying new tools
in this space is low - throwing away a 200 lines of code is annoying, but
not job threatening. And benefits are quickly perceiveable. Ocaml's best use
is probably larger projects beyond the scope of scripting languages.
Throwing a way an even quarter completed project is likely to mean the loss
of several thousand lines of coding effort, and you're unlikely to have
proveable benefits until the end of the first project, which is more likely
to be months, not days or hours, after starting work.

3. Perl's regexp gave it a decisive edge in several rapidly expanding
niches.

4. Its easy to perceive Perl's strengths from an initial examination, and
perhaps harder to pick up on its weaknesses.


Jonathan Coupe

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

