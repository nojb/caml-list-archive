Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA16765; Wed, 6 Jun 2001 22:09:25 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA16464 for <caml-list@pauillac.inria.fr>; Wed, 6 Jun 2001 22:09:24 +0200 (MET DST)
Received: from smtp8.xs4all.nl (smtp8.xs4all.nl [194.109.127.134])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f56K9Nn04720
	for <caml-list@inria.fr>; Wed, 6 Jun 2001 22:09:23 +0200 (MET DST)
Received: from beertje.william.bogus (williamc.xs4all.nl [213.84.56.92])
	by smtp8.xs4all.nl (8.9.3/8.9.3) with ESMTP id WAA07849;
	Wed, 6 Jun 2001 22:09:22 +0200 (CEST)
Received: (from williamc@localhost)
	by beertje.william.bogus (8.11.2/8.11.2/SuSE Linux 8.11.1-0.5) id f56KDKg21810;
	Wed, 6 Jun 2001 22:13:20 +0200
X-Authentication-Warning: beertje.william.bogus: williamc set sender to williamc@paneris.org using -f
From: William Chesters <williamc@paneris.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15134.36575.982859.678763@beertje.william.bogus>
Date: Wed, 6 Jun 2001 22:13:19 +0200 (CEST)
To: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml Speed for Block Convolutions
In-Reply-To: <20010605003423.A20283@miss.wu-wien.ac.at>
References: <002f01c0ecf9$d028a3b0$210148bf@dylan>
	<15131.59080.327155.47983@beertje.william.bogus>
	<002a01c0ed33$0b3d5de0$210148bf@dylan>
	<20010605003423.A20283@miss.wu-wien.ac.at>
X-Mailer: VM 6.75 under 21.1 (patch 14) "Cuyahoga Valley" XEmacs Lucid
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Markus Mottl writes:
 > On Mon, 04 Jun 2001, David McClain wrote:
 > > let dst = Array.unsafe_create nel in
 > 
 > Are there any intentions to add "unsafe_create" for float arrays to the
 > standard library? It would be nice to have a function that allocates such
 > arrays without initializing them - they are not scanned by the GC, anyway.

My feeling has always been that the overhead of initialising a float
array, per element, is considerably less than the cost of one floating
point operation; so if you ever intend to actually use the array for
anything, the inefficiency is negligible.

On the other hand if we have unsafe_set than unsafe_create is hardly a
huge additional bloat, more a kind of natural counterpart.

-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

