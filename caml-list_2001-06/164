Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA08194; Mon, 11 Jun 2001 13:20:16 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA08179 for caml-list@pauillac.inria.fr; Mon, 11 Jun 2001 13:20:15 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA28034 for <caml-list@pauillac.inria.fr>; Sun, 10 Jun 2001 15:48:01 +0200 (MET DST)
Received: from localhost.localdomain (jimbo109.zip.com.au [202.7.67.109])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f5ADlvj23362
	for <caml-list@inria.fr>; Sun, 10 Jun 2001 15:47:58 +0200 (MET DST)
Received: from ozemail.com.au (IDENT:root@localhost [127.0.0.1])
	by localhost.localdomain (8.9.3/8.8.7) with ESMTP id XAA29259;
	Sun, 10 Jun 2001 23:47:35 +1000
Message-ID: <3B237A77.E345823F@ozemail.com.au>
Date: Sun, 10 Jun 2001 23:47:35 +1000
From: John Max Skaller <skaller@ozemail.com.au>
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12-20 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: Brian Rogoff <bpr@best.com>
CC: David McClain <dmcclain1@mindspring.com>, caml-list@inria.fr
Subject: Re: [Caml-list] Evaluation Order
References: <Pine.BSF.4.21.0106091229550.7577-100000@shell5.ba.best.com>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Brian Rogoff wrote:

[Evaluation order]

> The original arguments about optimizations
> and parallelism don't seem to have borne fruit, so it would be good to fix
> this.

The question is whether we really want to encourage such
an obvious flouting of referential transparency as being
able to depend on the order of evaluation of the arguments
of the infix integer addition operator.

Perhaps binding record fields left to right makes sense,
but making evaluation order explicit by

	let a = f() in
	let b = g() in
	a + b

seems to be good style to me (you only need to know that
Ocaml is an eager language). You could also run into problems
if you used some syntactic sugar such as by using ocamlp4:
the visible ordering mightn't be the final one unless the p4
macros took special care to ensure this.


-- 
John (Max) Skaller, mailto:skaller@maxtal.com.au
10/1 Toxteth Rd Glebe NSW 2037 Australia voice: 61-2-9660-0850
checkout Vyper http://Vyper.sourceforge.net
download Interscript http://Interscript.sourceforge.net
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

