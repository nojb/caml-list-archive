Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA14980; Fri, 8 Jun 2001 12:05:54 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA15010 for <caml-list@pauillac.inria.fr>; Fri, 8 Jun 2001 12:05:53 +0200 (MET DST)
Received: from tor.abc.se (ns.abc.se [195.17.72.11])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f58A5qL15133
	for <caml-list@inria.fr>; Fri, 8 Jun 2001 12:05:52 +0200 (MET DST)
Received: from gateway (dialup-73 [195.17.73.73])
	by tor.abc.se (8.9.3+Sun/8.9.3) with SMTP id MAA13599;
	Fri, 8 Jun 2001 12:05:47 +0200 (MET DST)
From: "Mattias Waldau" <mattias.waldau@abc.se>
To: <caml-list@inria.fr>
Cc: <leary@nwlink.com>, "Jonathan Coupe" <jonathan@meanwhile.freeserve.co.uk>
Subject: Why is Ocaml better than Java (WAS: [Caml-list] ocaml complexity)
Date: Fri, 8 Jun 2001 12:05:43 +0200
Message-ID: <AAEBJHFJOIPMMIILCEPBCEBCCMAA.mattias.waldau@abc.se>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4522.1200
Importance: Normal
In-Reply-To: <20010608024102.A13672@jean>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> How much time and money do development teams spend creating and tracking
> down memory management errors in C and C++ starting on day one?  At least
> some of the benefits are immediate and ongoing.

Why this obsession comparing Ocaml with C/C++? C/C++ isn't used out there
except for Linux-development, low-level programming and embedded
development.

No one writes applications using C/C++, they use Java, Visual Basic. Some
open source developers use Python, PHP and similar. Some use Fortran and
Delphi.

Talking about memory management with a programmer using anything else than
C/C++ is a waste of time.

The real questions is how to convince a Java-programmer to start using
Ocaml.

The arguments I can list is:
- speed
- polymorphism, no casting needed (will be solved in next generation of
Java, so this
argument will disappear)
- closures (however can always be programmed using local class with
()-method)
- better typechecking makes higher order functions simple to use (however, I
  think that a local class in Java will be as good)
- compact programs (Java programs are very long)
- easy integration with C (easy in VB, I haven't tried it in Java)

Plz help me with more arguments
/mattias

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

