Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA10136; Tue, 5 Jun 2001 13:46:50 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA10560 for <caml-list@pauillac.inria.fr>; Tue, 5 Jun 2001 13:46:49 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f55Bkir24937;
	Tue, 5 Jun 2001 13:46:44 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA09646; Tue, 5 Jun 2001 13:46:44 +0200 (MET DST)
Date: Tue, 5 Jun 2001 13:46:44 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: STARYNKEVITCH Basile <Basile.Starynkevitch@cea.fr>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Ocaml and C--
Message-ID: <20010605134644.B9156@pauillac.inria.fr>
References: <15123.34597.907480.784076@gargle.gargle.HOWL>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <15123.34597.907480.784076@gargle.gargle.HOWL>; from Basile.Starynkevitch@cea.fr on Tue, May 29, 2001 at 01:25:25PM +0200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> Supposing that QC-- will deliver it promises (but Norman Ramsey, Simon
> Peyton Jones and Christian Lindig are impressively serious and clever
> guys), will Ocaml switch to target C-- or will Ocaml continue to
> natively target the usual architectures (x86, Alpha, Sparc, ia64,
> x86-64...)?

The x86-64 generator is in the works, but not there yet -- mostly
because the hardware is not there yet either :-)

To answer your question, switching to C-- will be an option when C--
has code generators for all the platforms of interest for OCaml, and
is sufficiently better than the hand-written OCaml code generators
(e.g. in performance or portability).  OCaml is already at a stage
where it has decent code generators for many platforms, so the effort
of switching to a new framework must be compensated by other
advantages.

The situation is very different for new compilers, or existing
compilers that do not (yet) have good native-code generators; in this
case, C-- is a lot more interesting.

> What is the relation between C-- and Ocaml (apart a mutual respect of
> the leading developers in each team)?

I think I'm the one who coined the name "C--" to refer to a low-level,
weakly-typed intermediate code with operations corresponding roughly
to machine instructions, and minimal support for exact garbage
collection and exceptions.  See my POPL 1992 paper describing the
experimental Gallium compiler.  Such an intermediate code is still in
use in the ocamlopt compiler.

I had many interesting discussions with Simon PJ and Norman Ramsey
when they started to design their intermediate language.  Simon liked
the name "C--" and kindly asked permission to re-use the name.

However, C-- is more general than the intermediate code used by
ocamlopt, since it is designed to accommodate the needs of many source
languages, and present a clean, abstract interface to the GC and
run-time system.  The ocamlopt intermediate code is somewhat
specialized for the needs of Caml and for the particular GC we use.

At any rate, I think C-- is an excellent design and I wish the C--
team the best of luck in implementing and popularizing it.

- Xavier Leroy
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

