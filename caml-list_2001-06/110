Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA19976; Fri, 8 Jun 2001 15:21:23 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA20085 for <caml-list@pauillac.inria.fr>; Fri, 8 Jun 2001 15:21:22 +0200 (MET DST)
Received: from dpt-info.u-strasbg.fr (dpt-info.u-strasbg.fr [130.79.6.1])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f58DLLn08322
	for <caml-list@inria.fr>; Fri, 8 Jun 2001 15:21:21 +0200 (MET DST)
Received: from lambda.u-strasbg.fr (mail@lambda.u-strasbg.fr [130.79.90.63])
	by dpt-info.u-strasbg.fr (8.9.3/8.9.3) with ESMTP id PAA07282;
	Fri, 8 Jun 2001 15:20:42 +0200
Received: from luther by lambda.u-strasbg.fr with local (Exim 3.22 #1 (Debian))
	id 158MFU-0003DB-00; Fri, 08 Jun 2001 15:24:24 +0200
Date: Fri, 8 Jun 2001 15:24:24 +0200
To: Dave Berry <Dave@kal.com>
Cc: Sven LUTHER <luther@dpt-info.u-strasbg.fr>, reig@dcs.gla.ac.uk,
        caml-list@inria.fr
Subject: Re: [Caml-list] CDK license
Message-ID: <20010608152424.C12090@lambda.u-strasbg.fr>
References: <8E31D6933A2FE64F8AE3CC1381EEDCE704C231@NT.kal.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <8E31D6933A2FE64F8AE3CC1381EEDCE704C231@NT.kal.com>
User-Agent: Mutt/1.3.18i
From: Sven LUTHER <luther@dpt-info.u-strasbg.fr>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, Jun 06, 2001 at 11:24:57AM +0100, Dave Berry wrote:
> > -----Original Message-----
> > From: Sven LUTHER [mailto:luther@dpt-info.u-strasbg.fr]
> > > I would encourage people to use an X/BSD-like license for code
> whereever
> > > possible. It saves you all this hassle with determining what is and
> is
> > > not allowed, and which code may be linked or distributed with which
> > > other code.
> > 
> > Yes, including taking all your code, doing some modification 
> > to it, and giving nothing back.
> 
> Yes.  If someone wishes to do that, they can.  Most people will choose
> to make changes available, because it benefits them if the open source
> library grows.  And if they don't, at least they are still using OCaml
> libraries, and increasing the usage of OCaml.  To me, this far outweighs
> any disadvantage.

But, for example, they were changes to mlgtk, some widget bindings and such,
which never did make it back to the main tree. This is not good.

And you don't notice it more, because most if not all ocaml developper are
goodwilled and give the changes they make back to the community. But this may
change in the future, i think.

Now, i understand there is a difference in this between for example the ocaml
consortium or the ocaml team, which may be willing to give the kind of rigth
that comes with the BSD licence, since anyway, their interrest is to promote
the ocaml useage, and they have at least some manpower to put fulltime into
this. But for more smallish project an GPLed approach would be better i think.

Again this is up to every author, who may be wanting to do what he wants with
his code, even release it under dual or mutliple licence (like the Qt library
which is released under both the GPL and the QPL licence).

> > If someone wants to take my code, and not contribute back any 
> > changes they do, then by all means, they can pay me for a commercial 
> > licenced version.
> 
> This is unlikely to happen, although it depends on the terms you offer.
> For one thing, the extra expense in negotiating the contract will put
> many people off.  If you require a run-time, per-installation, license,

Sure, but if they don't want to go that route, they simply release any change
to the library they make and keep private their own program. This is only
fear, don't you think ? If they want more they should go the expensive way.

Anyway, this is how _I_ feel, and since i am not really writting much code
right now, this is not really that important.

Also there are many ways to negotiating this with indivuidual authors that
don't have the expense of full contracts between big companies.

> the extra cost may prevent someone from using the code.  This actually
> happened with MLWorks -- the license of SML/TK required a run-time cost
> that we simply couldn't afford.

Too bad for them.

> For the CDK, the situation is even more complex.  There are many
> authors, of many separate packages.  Negotiation and license
> arrangements could be hideously complex.  This could encourage people to
> develop their own counterparts, which would be a Bad Thing.

Yes i understand that, but anyway, most part of it come under the BSd or LGPL
licence, none of these hinder any commercial useage of it, apart from the
static linking clause anyway, so where is the problem with it. Unless they
misunderstand it, that is, or have some ideological or prejudiced oposition to
it that is, which i am aware may be a problem, but i think any people going
the ocaml route is bright enough to be able to look past that to the real
meaning and problems of these licences, is it not ?

Do you really think someone may want more right to the CDK than that ? Sure it
would be simpler if the CDK would be one only licence, but you cannot force
people to change their licence, they may be willing to do it though.

> If your main aim is to protect your code from unwanted use, then go
> ahead and use the GPL or LGPL.  If your main aim is to get your code
> used as widely as possible, use a less restrictive license.  Surely the
> aim of the CDK is to promote wide use, rather than to restrict it?

No, you confound the GPL and the LGPL, there is nothing more restrictive in
using the LGPL for your code than the BSD, nothing at least that would benefit
the ocaml community right now. If Some company wants to be able to take the
code, make some modifications to it, and don't release it, how will this be a
benefit for the ocaml community ?

And remember, the LGPL (and the GPl, by the way) only force you to release
source to your modifications, if you _distribute_ it, and even then, you are
only forced to give it to the person you distribute it to.

So for most closed source developpment, which mostly will be only internal or
to a limited set of clients, this is no major problem, don't you think.

Disclaimer :

Anything i wrote above is only my personal opinion, and is not intended to be
taken as more than a friendly conversation on this topic, in particular, i
don't want that anyone should feel forced or obligated by anything i mayt say
here. I guess you are all old enough to form your own opinion anyway.

Friendly,

Sven Luther
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

