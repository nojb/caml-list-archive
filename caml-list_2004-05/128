Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA03000; Thu, 6 May 2004 22:23:59 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA03328 for <caml-list@pauillac.inria.fr>; Thu, 6 May 2004 22:23:58 +0200 (MET DST)
From: Alain.Frisch@ens.fr
Received: from nef.ens.fr (nef.ens.fr [129.199.96.32])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i46KNuSH007157
	for <caml-list@inria.fr>; Thu, 6 May 2004 22:23:57 +0200
Received: from clipper.ens.fr (clipper-gw.ens.fr [129.199.1.22])
          by nef.ens.fr (8.12.10/1.01.28121999) with ESMTP id i46KNoKx072510
          ; Thu, 6 May 2004 22:23:50 +0200 (CEST)
Received: from localhost (frisch@localhost) by clipper.ens.fr (8.12.3/jb-1.1)
	id i46KNmVa020073 ; Thu, 6 May 2004 22:23:48 +0200 (MET DST)
X-Authentication-Warning: clipper.ens.fr: frisch owned process doing -bs
Date: Thu, 6 May 2004 22:23:47 +0200 (MET DST)
X-X-Sender: frisch@clipper.ens.fr
Reply-To: Alain.Frisch@ens.fr
To: Jon Harrop <jdh30@cam.ac.uk>
cc: caml-list@inria.fr
Subject: Re: [Caml-list] Functors
In-Reply-To: <200405061216.53738.jdh30@cam.ac.uk>
Message-ID: <Pine.SOL.4.44.0405062221010.23492-100000@clipper.ens.fr>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: by amavisd-milter (http://amavis.org/)
X-Miltered: at concorde with ID 409A9EDC.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; alain:01 frisch:01 caml-list:01 functors:01 signoles:01 functorized:01 ocamldefun:01 rephrase:01 alain:01 compiler:01 compiler:01 wrote:03 standalone:05 generally:05 static:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 6 May 2004, Jon Harrop wrote:

> As someone else said, using a "defunctorizer" apparently makes it impossible
> to perform some static analysis.

I don't know who said that, but Julien Signoles said the opposite:

> Morever, static analysis tools do not generally correctly work on
> functorized programs: so a source-to-source defunctorizer as ocamldefun
> can be used by these tools while a defunctorizer directly included in
> the compiler cannot.

To rephrase it: since some static analysis are difficult to perform on
fonctors, it is good to have a standalone defunctorizer (not burried
into the compiler) to be used as a first pass of the analysis.

-- Alain

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

