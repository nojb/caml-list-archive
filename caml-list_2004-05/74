Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA14594; Mon, 3 May 2004 16:43:03 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA14676 for <caml-list@pauillac.inria.fr>; Mon, 3 May 2004 16:43:02 +0200 (MET DST)
Received: from cgpsrv2.cis.mcmaster.ca (univmail.CIS.McMaster.CA [130.113.64.46])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i43Eh0SH026374
	for <caml-list@inria.fr>; Mon, 3 May 2004 16:43:01 +0200
Received: from [130.113.68.27] (account carette@univmail.cis.mcmaster.ca HELO pccarettej)
  by cgpsrv2.cis.mcmaster.ca (CommuniGate Pro SMTP 4.1.8)
  with ESMTP id 36622494; Mon, 03 May 2004 10:42:57 -0400
Reply-To: <carette@mcmaster.ca>
From: "Jacques Carette" <carette@mcmaster.ca>
To: <skaller@users.sourceforge.net>, "'Jon Harrop'" <jdh30@cam.ac.uk>
Cc: "'caml-list'" <caml-list@inria.fr>
Subject: RE: [Caml-list] Functors
Date: Mon, 3 May 2004 10:43:12 -0400
Organization: McMaster University
Message-ID: <001601c4311c$f5a58fd0$1b447182@cas.mcmaster.ca>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: quoted-printable
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.6626
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409
In-Reply-To: <1083543649.20722.415.camel@pelican.wigram>
X-Miltered: at concorde with ID 40965A74.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; jacques:01 caml-list:01 functors:01 tradeoff:01 out-dated:01 tradeoff:01 jacques:01 ocaml:01 executables:01 modules:02 modules:02 executable:03 compiling:03 compilation:04 compilation:04 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> Separate compilation is a tradeoff between
> fast building and fast executables.

At the speed of today's computers, choosing 'modules' as the grainyness
level to do seperate compilation seems out-dated.  Creating a way to =
collect
modules together (call them packages for lack of a better term) and =
having
seperate compilation at the level of packages instead of modules would
probably be a better tradeoff point these days.

I know of people who have their 'build' scripts concatenate all their =
Ocaml
source files into one large file before compiling anything; the =
resulting
compilation time is still very short, but the corresponding executable =
is
significantly faster!

Jacques

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

