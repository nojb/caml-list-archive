Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA28464; Fri, 21 May 2004 00:45:16 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA28555 for <caml-list@pauillac.inria.fr>; Fri, 21 May 2004 00:45:15 +0200 (MET DST)
Received: from [IPv6:::1] (yquem.inria.fr [128.93.8.37])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i4KMjCEV003312
	for <caml-list@inria.fr>; Fri, 21 May 2004 00:45:14 +0200
Mime-Version: 1.0 (Apple Message framework v613)
In-Reply-To: <200405202142.56044.jdh30@cam.ac.uk>
References: <20040520115602.56566.qmail@web41905.mail.yahoo.com> <200405202142.56044.jdh30@cam.ac.uk>
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <5908F540-AAAF-11D8-9E52-00039310CAE8@inria.fr>
Content-Transfer-Encoding: 7bit
From: Damien Doligez <damien.doligez@inria.fr>
Subject: Re: [Caml-list] A problem with nan.
Date: Fri, 21 May 2004 00:45:09 +0200
To: caml-list@inria.fr
X-Mailer: Apple Mail (2.613)
X-Miltered: at nez-perce with ID 40AD34F8.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; damien:01 damien:01 caml-list:01 recursively:01 floats:01 reflexive:01 floats:01 mandated:99 bool:01 bool:01 equality:01 equality:01 behaviour:01 doligez:01 doligez:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


On May 20, 2004, at 22:42, Jon Harrop wrote:

> # 2.=nan;;
> - : bool = false
> # [2.]=[nan];;
> - : bool = true
>
> when "=" compares structures recursively so you'd expect it to give 
> the same answer in both cases?

We have contradictory requirements here:
1. We want "=" on floats to be IEEE754 equality.
2. We want "=" on structures to be compatible with "=" on their 
elements.
3. We want "=" on structures to be based on "compare".
4. We want "compare" to be a total ordering.

Since IEEE754 equality is not a reflexive relation, there is no way
to get all four properties.

In the current version of O'Caml, we have 1, 3, and 4.  In the next
version we will have 1, 2, and 4: "compare" and "=" will have slightly
different behaviour, but "=" will be compatible with itself.  This
will make "compare" a valid comparison function for List.sort, for
all types of data (currently it doesn't work for floats).

But "compare nan nan" will return 0, while "nan = nan" will
return false (as mandated by IEEE754).

-- Damien

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

