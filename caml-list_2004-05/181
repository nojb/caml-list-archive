Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA05863; Sun, 9 May 2004 02:25:33 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA04955 for <caml-list@pauillac.inria.fr>; Sun, 9 May 2004 02:25:32 +0200 (MET DST)
Received: from xizor.is.scarlet.be (xizor.is.scarlet.be [193.74.71.21])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i490PUEV015861
	for <caml-list@inria.fr>; Sun, 9 May 2004 02:25:31 +0200
Received: from (u195-95-86-109.dialup.planetinternet.be [195.95.86.109]) 
	by xizor.is.scarlet.be  with ESMTP id i490PNq27014; 
	Sun, 9 May 2004 02:25:23 +0200
Received: from poincare
	([127.0.0.1] helo=localhost ident=trch)
	by poincare with esmtp (Exim 3.36 #1 (Debian))
	id 1BMc8Q-000222-00; Sun, 09 May 2004 02:25:38 +0200
Date: Sun, 09 May 2004 02:25:35 +0200 (CEST)
Message-Id: <20040509.022535.116906186.Christophe.Troestler@umh.ac.be>
To: yoriyuki@mbg.ocn.ne.jp
Cc: briand@aracnet.com, caml-list@inria.fr
Subject: Re: [Caml-list] interesting array efficiency observations
From: Christophe TROESTLER <Christophe.Troestler@umh.ac.be>
In-Reply-To: <20040509.062138.71082875.yoriyuki@mbg.ocn.ne.jp>
References: <16541.9013.181806.9426@soggy.deldotd.com>
	<20040509.062138.71082875.yoriyuki@mbg.ocn.ne.jp>
Organization: Universite de Mons-Hainaut
X-URL: http://www.umh.ac.be/math/an/
X-Spook: Glock White Water SRI electronic surveillance crypto anarchy
 Comirex Rubin ASPIC sniper bluebird 
X-Mailer-URL: http://www.mew.org/
X-Operating-System: GNU/Linux (http://www.linux.org/)
X-Blessing: Om Ah Hum Vajra Guru Pema Siddhi Hum
X-Mailer: Mew version 4.0.61 on Emacs 21.3.1 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 409D7A7A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 observations:01 troestler:01 troestler:01 yamagata:01 yoriyuki:01 yoriyuki:01 slower:01 inlined:01 ocamlopt:01 chris:01 bigarray:01 bigarray:01 christophe:01 christophe:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sun, 09 May 2004, Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp> wrote:
> 
> From: briand@aracnet.com
>
> > I was investigating the use of 1-D bigarray's vs Array and noticed
> >  that the 1-D bigarray using c_layout seems to be slower than Array.
> 
> Yes, it is expected, since a.{j} expands a call of a C function, while
> a.(j) expands inlined assembly codes.

Is it?  Ocamlopt does inline the call when the bigarray type is fully
known, doesn't it.

ChriS

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

