Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA14264; Tue, 25 May 2004 00:01:42 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA14390 for <caml-list@pauillac.inria.fr>; Tue, 25 May 2004 00:01:41 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i4OM1cEV006770
	for <caml-list@inria.fr>; Tue, 25 May 2004 00:01:39 +0200
Received: from [192.168.1.200] (ppp114-11.lns1.syd3.internode.on.net [150.101.114.11])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i4OM1ZZq057947
	for <caml-list@inria.fr>; Tue, 25 May 2004 07:31:36 +0930 (CST)
Subject: Re: [Caml-list] unix.chop_extension
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: caml-list <caml-list@inria.fr>
In-Reply-To: <1085429093.6065.336.camel@pelican.wigram>
References: <1085429093.6065.336.camel@pelican.wigram>
Content-Type: text/plain
Message-Id: <1085436093.6065.399.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 25 May 2004 08:01:34 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 40B270C2.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 chop:01 sourceforge:01 2004:99 chop:01 basename:01 basename:01 9660:01 glebe:01 nsw:01 snail:02 assert:02 unix:02 checkout:02 implicit:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, 2004-05-25 at 06:04, skaller wrote:
> # Filename.chop_extension "x.y/z";;
> - : string = "x"
> 
> Oh come on. This is correct according to the specs,
> but no one would believe this function is chopping
> off the extension here :)
> 
> Also 
> 
> let y = (concat (directory x) (basename x)) in
> assert x = y
> 
> is not guarranteed, only that x,y are 'equivalent'.
> What does that mean? In particular can I assume:
> 
> is_implicit x = is_implicit y
> is_relative x = is_relative y

Oh dear .. this information is lost: 

# Filename.concat (Filename.dirname  "x") (Filename.basename "x");;
- : string = "./x"

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

