Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA16763; Sat, 1 May 2004 23:11:52 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA16462 for <caml-list@pauillac.inria.fr>; Sat, 1 May 2004 23:11:51 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i41LBmEV027993
	for <caml-list@inria.fr>; Sat, 1 May 2004 23:11:50 +0200
Received: from [192.168.1.200] (ppp116-155.lns1.syd2.internode.on.net [150.101.116.155])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i41LBhk2069583
	for <caml-list@inria.fr>; Sun, 2 May 2004 06:41:44 +0930 (CST)
Subject: [Caml-list] Private types
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: caml-list <caml-list@inria.fr>
In-Reply-To: <1083444008.20722.135.camel@pelican.wigram>
References: <Pine.SOL.4.44.0405012146130.21993-100000@clipper.ens.fr>
	 <1083444008.20722.135.camel@pelican.wigram>
Content-Type: text/plain
Message-Id: <1083445902.20722.149.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 02 May 2004 07:11:43 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 40941294.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; sourceforge:01 ahh:01 val:01 val:01 struct:01 endline:01 pelican:01 mnt:99 flx:01 9660:01 glebe:01 ocaml:01 sig:01 int:01 nsw:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Ahh, well this works:

module type M_t = sig
type 'a t = private { x: 'a list }
val uniq_cons: 'a t -> 'a -> 'a t
val empty: unit -> 'a t
end
 
module M : M_t = struct
type 'a t = { x : 'a list }
let uniq_cons lst a = if List.mem a lst.x then lst else { x = a::lst.x }
let empty () = { x = [] }
end
 
let x = M.empty ()
let x = M.uniq_cons x 1
let x = M.uniq_cons x 1
let x = M.uniq_cons x 2
 
let print { M.x=x } = print_endline (
  "[" ^
  String.concat "," (List.map string_of_int x) ^
  "]"
)
;;                                                                            print x
;;

[skaller@pelican] /mnt/user2/work/flx>ocaml xx.ml
[2,1]

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

