Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA28189; Wed, 5 May 2004 00:59:40 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA19186 for <caml-list@pauillac.inria.fr>; Wed, 5 May 2004 00:59:39 +0200 (MET DST)
Received: from smtp.mbg.ocn.ne.jp (mbg.ocn.ne.jp [210.190.142.181])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i44MxbSH032388
	for <caml-list@inria.fr>; Wed, 5 May 2004 00:59:38 +0200
Received: from localhost (p21153-adsau14honb7-acca.tokyo.ocn.ne.jp [220.111.71.153])
	by smtp.mbg.ocn.ne.jp (Postfix) with ESMTP
	id 2DB8562BB; Wed,  5 May 2004 07:59:36 +0900 (JST)
Date: Wed, 05 May 2004 07:59:19 +0900 (JST)
Message-Id: <20040505.075919.41627374.yoriyuki@mbg.ocn.ne.jp>
To: ben@socialtools.net
Cc: vsilyaev@mindspring.com, caml-list@inria.fr
Subject: Re: [Caml-list] Re: Common IO structure
From: Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp>
In-Reply-To: <40980BA2.1010102@socialtools.net>
References: <20040503061212.GA64216@server.vns.oc.ca.us>
	<40980BA2.1010102@socialtools.net>
X-Mailer: Mew version 3.3 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 40982059.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 yamagata:01 yoriyuki:01 yoriyuki:01 caml-list:01 2004:99 incompatible:01 facto:01 ocamlnet:01 python:01 yamagata:01 ocaml:01 widespread:03 wrote:03 library:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Benjamin Geer <ben@socialtools.net>
Subject: Re: [Caml-list] Re: Common IO structure
Date: Tue, 04 May 2004 22:31:14 +0100

> Vladimir N. Silyaev wrote:
> > If you felt interested, please look into the attached file io.ml.
> 
> This looks like a good start to me; what do others think?

Our problem is having too many incompatible IO system, not the lack of
IO.  So, what we need is the standard, not the code.

Of course, if some IO library is widespread, then it will become de
facto standard.  I advise you to look existing IO systems for smooth
integration/migration.  In particular, the IO system of ocamlnet
deserves a close look, because it is well thought and widly used.

BTW, I think this is one of the problems of OCaml community.  We do
not know each other's work well, while too much being bombarded by
hypes from Java/Perl/Python/C#...

--
Yamagata Yoriyuki


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

