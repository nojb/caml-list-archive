Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA30935; Mon, 3 May 2004 20:54:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA30770 for <caml-list@pauillac.inria.fr>; Mon, 3 May 2004 20:54:33 +0200 (MET DST)
Received: from cgpsrv2.cis.mcmaster.ca (univmail.CIS.McMaster.CA [130.113.64.46])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i43IsVSH002790
	for <caml-list@inria.fr>; Mon, 3 May 2004 20:54:32 +0200
Received: from [130.113.68.27] (account carette@univmail.cis.mcmaster.ca HELO pccarettej)
  by cgpsrv2.cis.mcmaster.ca (CommuniGate Pro SMTP 4.1.8)
  with ESMTP id 36688471; Mon, 03 May 2004 14:54:29 -0400
Reply-To: <carette@mcmaster.ca>
From: "Jacques Carette" <carette@mcmaster.ca>
To: <Alain.Frisch@ens.fr>
Cc: "'caml-list'" <caml-list@inria.fr>
Subject: RE: [Caml-list] Functors
Date: Mon, 3 May 2004 14:53:55 -0400
Organization: McMaster University
Message-ID: <005001c4313f$fcb30d70$1b447182@cas.mcmaster.ca>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.6626
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1409
In-Reply-To: <Pine.SOL.4.44.0405031807060.27704-100000@clipper.ens.fr>
X-Miltered: at concorde with ID 40969567.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; jacques:01 caml-list:01 functors:01 ocamlopt:01 constants:01 inlining:01 jacques:01 unit:03 unit:03 inline:03 explanation:04 propagate:04 compilation:04 compilation:04 functions:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> Do you have an explanation for this fact ?  Given that ocamlopt can inline
> function and propagate constants across compilation unit boundaries, what
> kind of extra optimizations do you get with a single compilation unit ?

It appears to be inlining of functions across compilation unit boundaries
that makes the difference.

Note that this is second-hand, if people really want to know details, it
would take me a couple of days to get them from the right people.

Jacques

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

