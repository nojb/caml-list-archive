Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA10661; Tue, 25 May 2004 10:55:42 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA11230 for <caml-list@pauillac.inria.fr>; Tue, 25 May 2004 10:55:41 +0200 (MET DST)
Received: from shiva.jussieu.fr (shiva.jussieu.fr [134.157.0.129])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i4P8teEV012820
	for <caml-list@inria.fr>; Tue, 25 May 2004 10:55:40 +0200
Received: from localhost (akasha.ijm.jussieu.fr [134.157.173.57])
          by shiva.jussieu.fr (8.12.11/jtpda-5.4) with ESMTP id i4P8tX89081457
          ; Tue, 25 May 2004 10:55:33 +0200 (CEST)
X-Ids: 167
Date: Tue, 25 May 2004 10:55:31 +0200 (CEST)
Message-Id: <20040525.105531.13989532.andrieu@ijm.jussieu.fr>
To: skaller@users.sourceforge.net
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] lstat on windows native
From: Olivier Andrieu <andrieu@ijm.jussieu.fr>
In-Reply-To: <1085470849.6065.457.camel@pelican.wigram>
References: <1085470849.6065.457.camel@pelican.wigram>
X-Mailer: Mew version 4.0.64 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 40B30A0C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at shiva.jussieu.fr with ID 40B30A05.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Antivirus: scanned by sophie at shiva.jussieu.fr
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 andrieu:01 andrieu:01 2004:99 implemented:01 3.07:01 32,:01 runtime:01 foo:01 implemented:01 olivier:02 olivier:02 compile:02 compile:02 exception:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

 skaller [25 May 2004]:
 > Currently, I need to use lstat (as pointed out in previous
 > email) but it isn't implemented on Windows native port
 > according to 3.07 documentation.
 > 
 > If I understand correctly this means my program won't
 > compile/link on Win32, which isn't very nice.

No, using unimplemented features of the Unix module will never prevent
your program to compile nor link. The module signature is the same on
all platforms. However, it will probably raise an exception at runtime
(like Invalid_argument "foo not implemented").

Concerning lstat, it is a bit different, lstat is defined as:

 let lstat = stat

 > if Sys.os_type = "Win32" then stat else lstat

that's fine too, of course.

-- 
   Olivier

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

