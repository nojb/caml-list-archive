Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA23841; Sun, 2 May 2004 02:42:52 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA24444 for <caml-list@pauillac.inria.fr>; Sun, 2 May 2004 02:42:51 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from wetware.com (wetware.wetware.com [199.108.16.1])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i420goEV018356
	for <caml-list@inria.fr>; Sun, 2 May 2004 02:42:50 +0200
Received: from [208.177.152.17] (helo=[10.0.1.5])
	by wetware.com with esmtp (Exim 4.20)
	id 1BK54C-0001Hk-QF
	for caml-list@inria.fr; Sat, 01 May 2004 17:42:49 -0700
Mime-Version: 1.0 (Apple Message framework v613)
Content-Transfer-Encoding: quoted-printable
Message-Id: <A15D36FA-9BD1-11D8-BF10-000A958FF2FE@wetware.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
To: The Caml Trade <caml-list@inria.fr>
From: james woodyatt <jhw@wetware.com>
Subject: [Caml-list] release: cf-0.2 (pagoda core foundation)
Date: Sat, 1 May 2004 17:42:46 -0700
X-Mailer: Apple Mail (2.613)
X-Miltered: at nez-perce with ID 4094440A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; woodyatt:01 jhw:01 wetware:01 cf-:99 everyone--:01 filliatre:01 red-black:01 exhibit:01 intersect:01 red-black:01 api:01 api:01 wetware:01 jhw:01 cf-:99 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

everyone--

I know it's been less than a month, but Jean-Christophe Filli=E2tre=20
brought to my attention that the implementation of red-black binary=20
trees in Cf exhibit underwhelming performance characteristics (with=20
specifically very bad performance for [Cf_set.subset] and=20
[Cf_set.intersect]).  And since the red-black binary trees are used in=20=

several other modules, I decided to tune up their performance.

I couldn't resist tuning the API a bit as well, so if you're a user of=20=

this library and my changing the API is a bummer for you, then let me=20
say this: You Should Have Told Me You Were Using The Library.  (Since I=20=

don't know of anyone else using this library yet, I continue to
feel free to change the API without notice to suit my tastes=20
exclusively.)

As before, the new distribution is available at either of the following=20=

URL's:

	<http://www.wetware.com/jhw/src/pagoda/cf-0.2.tar.bz2>
	<http://www.wetware.com/jhw/src/pagoda/cf-0.2.tar.gz>

And the online documentation (generated by ocamldoc) can be found here:

	<http://www.wetware.com/jhw/src/pagoda/doc/>

There is still no programmer's guide.  If people start using this=20
library, then maybe I'll write one.


=3D=3D=3D=3D=3D Pagoda Core Foundation (cf) library =3D=3D=3D=3D=3D

This directory contains the Pagoda Core Foundation library, which is a
collection of miscellaneous extensions to the Objective Caml standard
library.

Highlighted features include:

- Functional streams and stream processors (extended).
- Functional bootstrapped skew-binomial heap.
- Functional red-black binary tree (associative array).
- Functional sets based on red-black binary tree.
- Functional real-time catenable deque.
- Functional LL(x) parsing using state-exception monad.
- Functional lazy deterministic finite automaton (DFA).
- Functional lexical analyzer (using lazy DFA and monadic parser).
- Functional substring list manipulation (message buffer chains).
- Gregorian calendar date manipulation.
- Standard time manipulation.
- System time in Temps Atomique Internationale (TAI).
- Unicode transcoding.
- Extended socket interface (supports IPv6 and UDP w/multicast).
- Universal resource identifier (URI) manipulation.
- I/O event multiplexing (with Unix.select).

Note: see the ISSUES file for a list of open problems in this release.

=3D=3D=3D=3D=3D Required Components =3D=3D=3D=3D=3D

This library requires the following external components:

- Objective Caml (v3.07+2 or newer)
- Findlib (tested with v0.8.1 and v1.0.4)

Principle development was on Mac OS X 10.3.  The final version of this
library also compiled successfully without warnings and self-tests on
Suse Linux 9.0 on x86-32.  Other platforms with POSIX-like environments
should require only a minimal porting effort.

One major open issue: the extended socket interface is broken under=20
WIN32.
(The author invites help porting the library to other environments.)

=3D=3D=3D=3D=3D Version 0.2 =3D=3D=3D=3D=3D

Highlights of the changes:

+ Major overhaul of [Cf_rbtree] to address serious performance issues=20
(should
   improve performance of [Cf_dfa], [Cf_lexer], [Cf_poll] and=20
[Cf_gadget]).
+ Defined [Cf_set.T] and [Cf_map.T] module types for use in abstracting=20=

the
   underlying algorithm behind sets and maps.
+ Added [Cf_seq.constrain] (and [Cf_seq.constrain2] for consistency).
+ Defined [Cf_heap.T] and [Cf_pqueue.T] module types for use in=20
abstracting
   the use of skew-binomial heaps as either a heap or a priority queue.
   Reimplemented the interface to [Cf_sbheap] so it is consistent with=20=

the
   new [Cf_rbtree] interface.


--=20
j h woodyatt <jhw@wetware.com>
that's my village calling... no doubt, they want their idiot back.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

