Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA29156; Mon, 3 May 2004 02:21:00 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA28903 for <caml-list@pauillac.inria.fr>; Mon, 3 May 2004 02:20:59 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i430KuEV021979
	for <caml-list@inria.fr>; Mon, 3 May 2004 02:20:57 +0200
Received: from [192.168.1.200] (ppp116-155.lns1.syd2.internode.on.net [150.101.116.155])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i430Kok2076687;
	Mon, 3 May 2004 09:50:51 +0930 (CST)
Subject: Re: [Caml-list] Functors
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Jon Harrop <jdh30@cam.ac.uk>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <200405021559.44159.jdh30@cam.ac.uk>
References: <Pine.LNX.4.44.0405021727120.1794-100000@localhost>
	 <200405021434.22102.jdh30@cam.ac.uk>
	 <1083507162.20722.351.camel@pelican.wigram>
	 <200405021559.44159.jdh30@cam.ac.uk>
Content-Type: text/plain
Message-Id: <1083543649.20722.415.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 03 May 2004 10:20:50 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 40959068.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 functors:01 sourceforge:01 2004:99 2004:99 instantiate:01 functor:01 compile-time:01 link-time:01 tradeoff:01 unboxed:01 floats:01 9660:01 glebe:01 arrays:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 2004-05-03 at 02:49, Jon Harrop wrote:
> On Sunday 02 May 2004 15:12, skaller wrote:
> > ...
> > When you instantiate a Set.Make .. you only have
> > the interface. Hard to inline without actually having
> > the body of the functor..
> 
> Sure, so you can't do it if you're creating a DLL for the OS to handle. But if 
> you're making an executable, as I suspect most of us are, then you can do it 
> (perhaps at compile-time, definitely by link-time).

Separate compilation is a tradeoff between
fast building and fast executables.

Ocaml is famous for amortising costs in a sensible
way. In the few cases the costs were critical,
they've been fixed: eg arrays of unboxed floats.

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

