Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA02025; Wed, 5 May 2004 18:02:37 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA31675 for <caml-list@pauillac.inria.fr>; Wed, 5 May 2004 18:02:36 +0200 (MET DST)
Received: from mail.davidb.org (adsl-64-172-240-129.dsl.sndg02.pacbell.net [64.172.240.129])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i45G2ZSH008103
	for <caml-list@inria.fr>; Wed, 5 May 2004 18:02:36 +0200
Received: from davidb by mail.davidb.org with local (Exim 3.36 #1 (Debian))
	id 1BLOqt-0006rf-00; Wed, 05 May 2004 09:02:31 -0700
Date: Wed, 5 May 2004 09:02:31 -0700
From: David Brown <caml-list@davidb.org>
To: Claudio Trento <trento@di.unipi.it>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Question about warning message.
Message-ID: <20040505160230.GA26320@davidb.org>
References: <Pine.LNX.4.44.0405051658360.1700-100000@nutella.di.unipi.it>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.44.0405051658360.1700-100000@nutella.di.unipi.it>
User-Agent: Mutt/1.5.4i
X-Miltered: at concorde with ID 4099101B.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 caml-list:01 2004:99 trento:99 camlparam:01 gcc:01 compiler:01 dummy:01 dummy:01 caml:01 caml:01 05,:01 int:01 0200,:01 constructs:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, May 05, 2004 at 05:16:06PM +0200, Claudio Trento wrote:
> Hi,
> my g++ compiler show me this warning:
>   
>     << warning: unused variable `int caml__dummy_n' >>

It is part of the construct the headers use to implement the
CAMLparam... macros.  Strictly it isn't necessary in C++, since you can
have declarations in the middle of a block, but then there would be
different constructs for C and C++.

BTW, what about having a
  (void) caml__dummy_##x;

at the end of the CAMLxparam... macros?  This does shut up the warning,
at least on gcc.

Dave

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

