Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA30943; Tue, 17 Sep 2002 16:38:03 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA32503 for <caml-list@pauillac.inria.fr>; Tue, 17 Sep 2002 16:38:02 +0200 (MET DST)
Received: from athlon.baretta.com (host227-68.pool80116.interbusiness.it [80.116.68.227])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g8HEc1916055
	for <caml-list@inria.fr>; Tue, 17 Sep 2002 16:38:01 +0200 (MET DST)
Received: from baretta.com (localhost.localdomain [127.0.0.1])
	by athlon.baretta.com (Postfix) with ESMTP
	id CCF112724C; Tue, 17 Sep 2002 16:47:09 +0200 (CEST)
Message-ID: <3D87406D.9010406@baretta.com>
Date: Tue, 17 Sep 2002 16:47:09 +0200
From: Alessandro Baretta <alex@baretta.com>
Organization: Baretta srl -- www.baretta.com
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.1) Gecko/20020826
X-Accept-Language: it, en
MIME-Version: 1.0
To: Gerd Stolpmann <info@gerd-stolpmann.de>, Ocaml <caml-list@inria.fr>
Subject: [Caml-list] Meta module in findlib and the need for namespaces
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

There seems to be an incompatibility between dynlink.cma and 
findlib. The following text shows a sample toplevel session 
where you can see how linking to "dynlink.cma" is rendered 
impossible by the presence of the findlib module.

         Objective Caml version 3.06

# #use "topfind";;
Findlib has been successfully loaded. Additional directives:
   #require "package";;      to load a package
   #list;;                   to list the available packages
   #camlp4o;;                to load camlp4 (standard syntax)
   #camlp4r;;                to load camlp4 (revised syntax)
   Topfind.reset();;         to force that packages will be 
reloaded

- : unit = ()
# #require "afo";;
Loading /usr/lib/ocaml/site-lib/pcre/pcre.cma
Loading /usr/lib/ocaml/unix.cma
Loading /usr/lib/ocaml/site-lib/netstring/netstring.cma
Loading /usr/lib/ocaml/site-lib/netstring/netmappings_iso.cmo
Loading /usr/lib/ocaml/site-lib/netstring/netmappings_other.cmo
Loading /usr/lib/ocaml/site-lib/netstring/netstring_top.cmo
Loading /usr/lib/ocaml/site-lib/pxp-engine/pxp_engine.cma
Loading /usr/lib/ocaml/site-lib/pxp-engine/pxp_top.cmo
Loading 
/usr/lib/ocaml/site-lib/pxp-lex-iso88591/pxp_lex_iso88591.cma
Loading 
/usr/lib/ocaml/site-lib/pxp-lex-iso88591/pxp_lex_link_iso88591.cmo
Loading /usr/lib/ocaml/site-lib/pxp-lex-utf8/pxp_lex_utf8.cma
Loading 
/usr/lib/ocaml/site-lib/pxp-lex-utf8/pxp_lex_link_utf8.cmo
*Loading /usr/lib/ocaml/dynlink.cma*
Files /usr/lib/ocaml/dynlink.cma
and /usr/lib/ocaml/site-lib/findlib/findlib.cma
make inconsistent assumptions over interface Meta

This seems to imply that a Meta module is already defined in 
  dynlink.cma, and that such module is different from that 
referenced by findlib. I have no evidence to prove this 
point though, for I have not found in the Ocaml sources 
where a Meta module is defined.

***

This incompatibility between findlib and dynlink is the 
first example I have encountered of a nameclash bug in Ocaml 
software. Of course, Gerd could easily solve the problem by 
renaming his Meta to Findlib_meta, or something like that, 
but it would be a lot easier to have a namespace construct 
to allow Gerd to distinguish *his* Meta from the one in the 
standard library.

Cheers to everyone,
Alex

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

