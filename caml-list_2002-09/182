Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id EAA04236; Thu, 12 Sep 2002 04:15:31 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA04523 for <caml-list@pauillac.inria.fr>; Thu, 12 Sep 2002 04:15:29 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from avocet.mail.pas.earthlink.net (avocet.mail.pas.earthlink.net [207.217.120.50])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g8C2FS122931
	for <caml-list@inria.fr>; Thu, 12 Sep 2002 04:15:28 +0200 (MET DST)
Received: from user-0ccegbj.cable.mindspring.com ([24.199.65.115] helo=cs.cornell.edu)
	by avocet.mail.pas.earthlink.net with esmtp (Exim 3.33 #1)
	id 17pJVr-0003iG-00
	for caml-list@inria.fr; Wed, 11 Sep 2002 19:15:23 -0700
Message-ID: <3D7FF8BA.6080508@cs.cornell.edu>
Date: Wed, 11 Sep 2002 22:15:22 -0400
From: "Yaron M. Minsky" <yminsky@CS.Cornell.EDU>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.1) Gecko/20020826
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: [Caml-list] Debugging mixed ocaml/C code
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Does anyone have any suggestions for debugging mixed ocaml/C code?  I 
have some code that uses a wrapper for the Berkeley DB.  When using some 
features of that wrapper (namely transaction support), I find that my 
app segfaults.  Unfortunately, it doesn't do the nice thing and segfault 
inside of the wrapper in a way that makes the bug findable with printfs. 
  Instead, it segfaults in a predictable place in the ocaml code 
instead.  (Surprisingly, it segfaults in the same place if I compile to 
native code or bytecode.)

My question is, does anyone have any suggestions as to how one might go 
about tracking down such a bug?  Are any of the standard debuggers (gdb, 
ocamldebug) useful for mixed ocaml/C code?

Thanks,
Yaron

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

