Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA27088; Fri, 20 Sep 2002 20:58:39 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA27294 for <caml-list@pauillac.inria.fr>; Fri, 20 Sep 2002 20:58:38 +0200 (MET DST)
Received: from crufty.research.bell-labs.com (crufty.research.bell-labs.com [204.178.16.49])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g8KIwaD19068;
	Fri, 20 Sep 2002 20:58:37 +0200 (MET DST)
Received: from scummy.research.bell-labs.com (H-135-104-2-10.research.bell-labs.com [135.104.2.10])
	by crufty.research.bell-labs.com (8.12.5/8.12.5) with ESMTP id g8KIwWLI038484;
	Fri, 20 Sep 2002 14:58:33 -0400 (EDT)
Received: from mcs.research.bell-labs.com (mcs.research.bell-labs.com [135.104.32.15])
	by scummy.research.bell-labs.com (8.11.6/8.11.6) with ESMTP id g8KIwPk87874;
	Fri, 20 Sep 2002 14:58:26 -0400 (EDT)
Received: from SAHUGUETLT ([135.104.20.65])
	by mcs.research.bell-labs.com (8.9.3/8.8.8) with SMTP id OAA2417114;
	Fri, 20 Sep 2002 14:58:24 -0400 (EDT)
Message-ID: <02bf01c260d7$b355b950$141919ac@bl.belllabs.com>
From: "Arnaud SAHUGUET" <sahuguet@lucent.com>
To: "MONIN Jean-Francois FTRD/DTL/LAN" <jeanfrancois.monin@rd.francetelecom.com>
Cc: "Xavier Leroy" <xavier.leroy@inria.fr>,
        "Yurii A. Rashkovskii" <yrashk@openeas.org>,
        "Ohad Rodeh" <ORODEH@il.ibm.com>, <caml-list@inria.fr>
References: <15755.18764.944202.516163@localhost.localdomain>
Subject: Re: [Caml-list] OcamlSpread 0.0.1 released
Date: Fri, 20 Sep 2002 14:57:55 -0400
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_000_02BA_01C260B6.19C59A10"
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2600.0000
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

This is a multi-part message in MIME format.

------=_NextPart_000_02BA_01C260B6.19C59A10
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

Re: [Caml-list] OcamlSpread 0.0.1 releasedImplementing crypto packages =
is a real pain.
I wrote an implementation of DES in Java in 1996. Absolutely not =
interesting for me.

For this kind of stuff, I think writing an oCaml wrapper on top of C =
library is better.


>
More seriously, perhaps, a well-known source of flaws is complexity.=20
Expressing algorithms in Ocaml is often (much) less complex than=20
in C...=20

-- That's probably true for public key cryptography. For symmetric key =
crypto and hash function, the algorithms are not elegant.

In companies, there is always the dilemma: make vs buy.
I think the oCaml community should think about "re-implement vs wrap". I =
don't think the real value of oCaml programming sits at the level of the =
OS or the low-level libraries.

Arnaud

------=_NextPart_000_02BA_01C260B6.19C59A10
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD><TITLE>Re: [Caml-list] OcamlSpread 0.0.1 released</TITLE>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.2716.2200" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff>
<DIV><FONT face=3DArial size=3D2>Implementing crypto packages is a real=20
pain.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>I wrote an implementation of DES in =
Java in 1996.=20
Absolutely not interesting for me.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>For this kind of stuff, I think writing =
an oCaml=20
wrapper on top of C library is better.</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>&gt;</FONT></DIV>
<DIV><FONT size=3D2>More seriously, perhaps, a well-known source of =
flaws is=20
complexity.</FONT> <BR><FONT size=3D2>Expressing algorithms in Ocaml is =
often=20
(much) less complex than </FONT><BR><FONT size=3D2>in C...</FONT> </DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT size=3D2>-- That's probably true for public key cryptography. =
For=20
symmetric key crypto and hash function, the algorithms are not=20
elegant.</FONT></DIV>
<DIV><FONT size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>In companies, there is always the =
dilemma: make vs=20
buy.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>I think the oCaml community should =
think about=20
"re-implement vs wrap". I don't think the real value of oCaml =
programming sits=20
at the level of the OS or the low-level libraries.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>Arnaud</FONT></DIV></BODY></HTML>

------=_NextPart_000_02BA_01C260B6.19C59A10--

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

