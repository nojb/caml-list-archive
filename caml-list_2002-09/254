Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA03884; Wed, 18 Sep 2002 20:05:25 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA03807 for caml-list@pauillac.inria.fr; Wed, 18 Sep 2002 20:05:24 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA28174; Tue, 17 Sep 2002 14:16:02 +0200 (MET DST)
Date: Tue, 17 Sep 2002 14:16:02 +0200
From: Xavier Leroy <xleroy@pauillac.inria.fr>
To: Arnaud SAHUGUET <sahuguet@lucent.com>
Cc: caml-list@pauillac.inria.fr, sahuguet@research.bell-labs.com
Subject: Re: [Caml-list] building web services using oCaml
Message-ID: <20020917141602.A27670@pauillac.inria.fr>
References: <016301c25e06$b67e7230$0b1919ac@bl.belllabs.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <016301c25e06$b67e7230$0b1919ac@bl.belllabs.com>; from sahuguet@lucent.com on Tue, Sep 17, 2002 at 12:56:43AM -0400
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> I was looking at:
> - ocamlNet
> - cgi
> and they support some aspects but not all that is needed like SSL,
> cookies, etc.

I seem to remember that OcamlNet supports cookies.  But I don't know
of any SSL library for Caml.  I have contemplated writing a Caml
binding for OpenSSL, preferably using CamlIDL to generate the C stubs,
but haven't quite found the time to do it yet :-)  Also, the OpenSSL
documentation is a bit sketchy; does anyone know of better
documentation than what is on www.openssl.org?

> Are there other libraries that would do that for me?

Let me mention Bedouin (http://bedouin.sourceforge.net/), an ambitious
project for programming CGI-like applications in OCaml.  Perhaps too
ambitious, since it appears to be still at the planning stage...

> As a more general question, shouldn't we (meaning of "we" to be
> defined :-) implement these stacks in oCaml?  Is there any value in
> doing it (except for the experience and fun of doing it)?  Is there
> any advantage in having the stack (and whatever is underneath)
> available as oCaml constructs?

There are cases where it just makes more sense to interface to an
existing C library.  I think SSL falls in this category, because the
SSL protocol is quite complex, and the OpenSSL implementation seems
of good quality.  On the other hand, the subset of HTTP that you need
to write CGI-like applications is simple enough that implementing it
directly in OCaml (like OcamlNet does) is easier than trying to
interface to, say, libwww.

> I would like to raise the same question for XML libraries [...]

I pass :-)

Cheers,

- Xavier Leroy
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

