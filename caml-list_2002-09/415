Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA04705; Mon, 30 Sep 2002 09:28:31 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA04824 for <caml-list@pauillac.inria.fr>; Mon, 30 Sep 2002 09:28:30 +0200 (MET DST)
Received: from mail2.tpgi.com.au (mail.tpgi.com.au [203.12.160.58])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g8U7SQD12280
	for <caml-list@inria.fr>; Mon, 30 Sep 2002 09:28:29 +0200 (MET DST)
Received: from ozemail.com.au (syd-ts14-2600-192.tpgi.com.au [203.213.82.192])
	(authenticated (0 bits))
	by mail2.tpgi.com.au (8.11.6/8.11.6) with ESMTP id g8U7SMF05825
	for <caml-list@inria.fr>; Mon, 30 Sep 2002 17:28:22 +1000
Message-ID: <3D97FD0C.4020205@ozemail.com.au>
Date: Mon, 30 Sep 2002 17:28:12 +1000
From: John Max Skaller <skaller@ozemail.com.au>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.2.1) Gecko/20010901
X-Accept-Language: en-us
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: [Caml-list] choosing modules at runtime
References: <8D1414482878D4119AEE00508B6C9074089664C9@seacex02.eib.electrabel.be> <20020924114123.GC7700@fichte.ai.univie.ac.at>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Markus Mottl wrote:

> On Tue, 24 Sep 2002, Sebastien.deMentendeHorne@electrabel.com wrote:

> Actually, I'd say that most problems of "programming in the large" can
> be and are best solved statically. But in some cases, one needs more
> dynamic means of parameterization. 


It is a nice specification that clearly admits its own weakness.

It is possible to have a purely static solution to almost
any problem. The simple demonstration is that you can write
an interpreter -- add one more level of indirection.

Of course, that interpreter itself is for some programming
language with static type checking or not ..

It is clear the correct language to interpret here would be
the same as the orginal source language..

Which implies dynamic loading is a mandatory feature
for solving general problems.

The particular weakness here is the notion that
a particular problem has a static solution .. the difficulty
being most modern programs need to solve a class of problems,
not a single one.

For example, in a telco environment a high level
service handling program has to implement *arbitrary*
business rules. One solution is C++ with dynamic loading.

Sure, you can write an interpreter..but the cost in 

performance terms could be nasty .. and the cost in

terms of maintenance could be a nightmare .. better to
use a tried and proven language translator.


-- 
John Max Skaller, mailto:skaller@ozemail.com.au
snail:10/1 Toxteth Rd, Glebe, NSW 2037, Australia.
voice:61-2-9660-0850


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

