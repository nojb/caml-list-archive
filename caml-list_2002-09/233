Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA32260; Tue, 17 Sep 2002 16:34:08 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA32030; Tue, 17 Sep 2002 16:34:07 +0200 (MET DST)
Received: from dirty.research.bell-labs.com (dirty.research.bell-labs.com [204.178.16.6])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g8HEY6915942;
	Tue, 17 Sep 2002 16:34:07 +0200 (MET DST)
Received: from grubby.research.bell-labs.com (H-135-104-2-9.research.bell-labs.com [135.104.2.9])
	by dirty.research.bell-labs.com (8.12.5/8.12.5) with ESMTP id g8HEY5hN012573;
	Tue, 17 Sep 2002 10:34:06 -0400 (EDT)
Received: from mcs.research.bell-labs.com (mcs.research.bell-labs.com [135.104.32.15])
	by grubby.research.bell-labs.com (8.11.6/8.11.6) with ESMTP id g8HEXxo27407;
	Tue, 17 Sep 2002 10:33:59 -0400 (EDT)
Received: from SAHUGUETLT ([135.104.20.71])
	by mcs.research.bell-labs.com (8.9.3/8.8.8) with SMTP id KAA2312196;
	Tue, 17 Sep 2002 10:33:59 -0400 (EDT)
Message-ID: <01e001c25e57$428e8f80$0b1919ac@bl.belllabs.com>
From: "Arnaud SAHUGUET" <sahuguet@lucent.com>
To: "Xavier Leroy" <xavier.leroy@inria.fr>
Cc: <caml-list@pauillac.inria.fr>
References: <016301c25e06$b67e7230$0b1919ac@bl.belllabs.com> <20020917141602.A27670@pauillac.inria.fr>
Subject: Re: [Caml-list] building web services using oCaml
Date: Tue, 17 Sep 2002 10:33:27 -0400
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2600.0000
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> There are cases where it just makes more sense to interface to an
> existing C library.  I think SSL falls in this category, because the
> SSL protocol is quite complex, and the OpenSSL implementation seems
> of good quality.  On the other hand, the subset of HTTP that you need
> to write CGI-like applications is simple enough that implementing it
> directly in OCaml (like OcamlNet does) is easier than trying to
> interface to, say, libwww.

I agree that this is fine for a subset of HTTP. But what if we need the
whole thing.
I think the problem is not so much implementing something in oCaml, it is
implementing something that satisfies a given spec (e.g. SSL, HTTP, etc.)
and maintaining it. The maintainance is really the hard part.
>From my point of view, relying on a reference implementation (e.g. libwww
maintained by W3C) is a good way to go.

Furthermore, for cryptographic library, it is always risky to provide yet
another implementation because it is more prone to mistakes which can lead
to serious security leaks.

Arnaud

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

