Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA26475; Wed, 12 Nov 2003 17:15:01 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA27702 for <caml-list@pauillac.inria.fr>; Wed, 12 Nov 2003 17:14:59 +0100 (MET)
Received: from cmailg5.svr.pol.co.uk (cmailg5.svr.pol.co.uk [195.92.195.175])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hACGEw125182
	for <caml-list@inria.fr>; Wed, 12 Nov 2003 17:14:58 +0100 (MET)
Received: from modem-1042.arcanine.dialup.pol.co.uk ([217.135.25.18])
	by cmailg5.svr.pol.co.uk with esmtp (Exim 4.14)
	id 1AJxdx-0006mq-Qq
	for caml-list@inria.fr; Wed, 12 Nov 2003 16:14:58 +0000
Date: Wed, 12 Nov 2003 16:14:54 +0000 (GMT)
From: John J Lee <jjl@pobox.com>
X-X-Sender: john@alice
To: caml-list@inria.fr
Subject: [Caml-list] Executable size?
Message-ID: <Pine.LNX.4.58.0311121605570.1430@alice>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; haskell:01 runtime:01 non-obvious:01 python:01 runtime:01 implementors:01 executables:01 o'caml:02 executable:03 executable:03 library:03 library:03 reasonably:04 compiled:05 lee:94 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

How does O'Caml compare with languages like Haskell (ghc), C and C++ for
executable size?  Does compiled code depend on a runtime library (and how
big is that, if so)?

Are there any easily-identifiable, non-obvious, factors that affect
executable size (I'm talking about end-use factors, rather those resulting
from the design decisions taken by the language designers and
implementors)?

I currently use Python by preference, but I'm interested in a language
(other than C/C++!) that doesn't depend on a big runtime library and
generates "reasonably" small executables -- modems are here to stay for a
while yet.

Thanks for any help


John

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

