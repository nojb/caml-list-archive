Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id EAA15293; Fri, 7 Nov 2003 04:53:40 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA15334 for <caml-list@pauillac.inria.fr>; Fri, 7 Nov 2003 04:53:39 +0100 (MET)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hA73rb105795
	for <caml-list@inria.fr>; Fri, 7 Nov 2003 04:53:37 +0100 (MET)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3p2-20030924/3.7W) with ESMTP id MAA22650;
	Fri, 7 Nov 2003 12:53:04 +0900 (JST)
To: erayo@cs.bilkent.edu.tr, exa@kablonet.com.tr
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] A grave bug in logical shift right op?
In-Reply-To: <200311070535.00172.exa@kablonet.com.tr>
References: <200311070535.00172.exa@kablonet.com.tr>
X-Mailer: Mew version 1.94.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20031107125304T.garrigue@kurims.kyoto-u.ac.jp>
Date: Fri, 07 Nov 2003 12:53:04 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 36
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 grave:01 bug:01 jacques:01 eray:01 ozkural:01 ledit:01 3.07:01 printf:01 printf:01 cipher:01 litteral:01 fffffff:01 floats:01 jacques:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Eray Ozkural <exa@kablonet.com.tr>

> I'm using the debian package in testing....
> 
> orion:fealn-attack$ ledit ocaml
>         Objective Caml version 3.07+2
> 
> # Printf.printf "%X" 0xffffffff;;
> 7FFFFFFF- : unit = ()
> # Printf.printf "%lx" (Int32.of_int 0xffffffff);;
> ffffffff- : unit = ()
> # -1 lsr 24;;
> - : int = 127
> # Int32.shift_right_logical (Int32.of_int (-1)) 24;;
> - : int32 = 255l
> 
> What's going on here? Something's eating the most significant bit in
> both hexadecimal output routine and the logical shift right
> operator. Somebody please help me! My cipher isn't working!!!

Sure, the int type has only 31 bits. In good math,
(2 ^ 31 - 1) quo 2 ^ 24 is 127, as far as I know.

Note that the problem with your first example has already been
discussed. A litteral bigger than the biggest possible integer should
probably trigger an error/exception.
A bit more curions is your second example: since
0xffffffff = 0x7fffffff = -1, converting it to int32 gives -1l (the
32-bit value for -1), which happens to be 0xffffffffl.

If you want to do 32-bit computations, you must use only 32-bit
integers. This shouldn't be too inefficient as long as you use loops
rather than function calls (the same recommandations as for floats
apply, I believe).

Jacques Garrigue

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

