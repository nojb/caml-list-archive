Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id HAA10721; Fri, 21 Nov 2003 07:50:00 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA10359 for <caml-list@pauillac.inria.fr>; Fri, 21 Nov 2003 07:49:59 +0100 (MET)
Received: from smarthost2.mail.easynet.fr (smarthost2bis.mail.easynet.fr [212.180.1.37])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hAL6nw128879
	for <caml-list@inria.fr>; Fri, 21 Nov 2003 07:49:58 +0100 (MET)
Received: from [212.180.39.62] (helo=gros)
	by smarthost2.mail.easynet.fr with esmtp (Exim 3.35 #1 (Debian))
	id 1AN572-0006kW-00; Fri, 21 Nov 2003 07:49:53 +0100
Received: from [192.168.0.11] (helo=ptit.gallu.homelinux.org)
	by gros with esmtp (Exim 3.36 #1 (Debian))
	id 1AN572-0007Oo-00; Fri, 21 Nov 2003 07:49:52 +0100
Received: from gildor by ptit.gallu.homelinux.org with local (masqmail
 0.2.20) id 1AN570-0Dw-00; Fri, 21 Nov 2003 07:49:50 +0100
Date: Fri, 21 Nov 2003 07:49:50 +0100
To: Nicolas Cannasse <warplayer@free.fr>
Cc: David Brown <caml-list@davidb.org>,
        Martin Jambon <martin_jambon@emailuser.net>, caml-list@inria.fr
Subject: Re: [Caml-list] Building large and portable projects
Message-ID: <20031121064950.GA836@gallu.homelinux.org>
References: <Pine.LNX.4.58.0311201830340.3787@localhost> <20031120195614.GB441@gallu.homelinux.org> <000f01c3afd1$30033c90$0274a8c0@PWARP> <20031121052549.GA8599@davidb.org> <008301c3aff3$1030e760$0274a8c0@PWARP>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <008301c3aff3$1030e760$0274a8c0@PWARP>
User-Agent: Mutt/1.5.4i
From: <sylvain.le-gall@polytechnique.org>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 le-gall:01 0900,:01 cannasse:01 ocamake:01 motion-twin:01 ocamake:01 dependencies:01 ocamldep:01 dependencies:01 ocamldep:01 api:01 mli:01 cannasse:01 gall:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, Nov 21, 2003 at 02:48:17PM +0900, Nicolas Cannasse wrote:
> > > What is the difference with OCamake ?
> > > http://tech.motion-twin.com/ocamake/
> >
> > There are a lot of things that OCamake can't do.  What would be very
> > nice would be a tool that makes it easy to build simple Ocaml programs,
> > but also lets me, reasonably easily, manage directory trees, C bindings,
> > C libraries, programs build with special, strange programs, etc...
> >
> > There are several packages in the scons approach that seem like good
> > ideas, but they all make very heavy use of the scripting languages they
> > are written in.
> >
> > I still haven't found anything nicer than gnatmake, the builder for Gnu
> > Ada.  A common compilation line:
> >
> >   gnatmake mainmodule
> >
> > Builds mainmodule.adb, as well as everything it depends on.  You can set
> > a path to search for parts.  This would work for ocaml, if a program had
> > a single module that brought in everything necessary via dependencies.
> 
> I agree such a thing would be very useful.
> 
> The first problem I see is that right now ocamldep is only giving you the
> dependencies between files that are listed in the ocamldep command. That
> means that you already need to know all the files before generating the
> dependencies between them.
> 
> The other problem is that to much of the "special programs build" are
> relying on OS tools that are sometimes not stricly compatible. The solution
> to this is to rewrite all the tools in pure ocaml ( or with a small portable
> C binding ) to give the "makefile" writter an API of portable commands. It
> looks like this is the goal of Sylvain, and that would be really something
> nice.
> 
> About OCamake : yes right know it only supports compilation of
> ml/mli/mll/mly files in a standard way, but it is now mature and is actually
> handling a lot of cases such as projects with multiple files paths and a
> best effort dependency resolver (although based on ocamldep output). Adding
> the auto building of C stubs could be done but this kind of tool need a lot
> of time in order to fix correctly all the small issues.
> 
> Nicolas Cannasse

Hello,

Well, i will maybe stole your code ;->

My aims is to make something more Makefile like ( ie you will have the
ability to add rules ). Off course, my first goal is to compile ml file.
So there will be less features than Makefile.

On the other hand the aim will be to have a self contained tools ( ie
when you write a makefile you use rm, cp, touch... here the aims will be
to have it in ocaml ). So you could build on every platform which
support ocaml.

Your makefile will be written in ocaml !

Regard
Sylvain LE GALL
> 

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

