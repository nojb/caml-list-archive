Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA31998; Tue, 18 Nov 2003 00:03:21 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA32332 for <caml-list@pauillac.inria.fr>; Tue, 18 Nov 2003 00:03:20 +0100 (MET)
Received: from cmailm3.svr.pol.co.uk (cmailm3.svr.pol.co.uk [195.92.193.19])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hAHN3J102095
	for <caml-list@inria.fr>; Tue, 18 Nov 2003 00:03:19 +0100 (MET)
Received: from modem-204.bellsprout.dialup.pol.co.uk ([217.135.37.204])
	by cmailm3.svr.pol.co.uk with esmtp (Exim 4.14)
	id 1ALsOs-000361-A9
	for caml-list@inria.fr; Mon, 17 Nov 2003 23:03:18 +0000
Date: Mon, 17 Nov 2003 23:02:48 +0000 (GMT)
From: John J Lee <jjl@pobox.com>
X-X-Sender: john@alice
To: Caml Mailing List <caml-list@inria.fr>
Subject: Re: [Caml-list] GC and file descriptors
In-Reply-To: <Pine.LNX.4.44.0311171422420.5009-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.58.0311172249120.1582@alice>
References: <Pine.LNX.4.44.0311171422420.5009-100000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 python:01 python:01 amazes:01 scaling:01 caveat:01 objective-c:01 smalltalk:01 ocaml:01 descriptors:01 groups:01 nov:01 mainstream:01 fewer:02 ruby:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 17 Nov 2003, Brian Hurt wrote:
[...]
> The O'Reilly book will be a great benefit.  Let me know when it comes out,

It's coming out in print?  Great!


> I want a copy.  But I don't know how close to mainstream it is.  Perl,
> Python, and Ruby are scripting languages, still mainly used for short,
> single-person, throw-away projects.

The fact that they're often *used* in that way doesn't preclude their use
as applications languages -- far from it: they shine in that department
(though I put Perl in a different category, not for any fundamental
reason, but simply because it's so outrageously, unjustifiedly
complicated).  Perhaps O'Caml has even *more* to offer there, but
dismissing Ruby & Python as "scripting" languages seems silly to me.
People who write good unit tests (and even, which amazes me, people who
don't) report very significant productivity improvements for applications
of 10k or more when compared with Java and C++.  They certainly don't even
begin to have scaling problems at that point that aren't also present in
Java and C++ (especially when you consider that lines of code are fewer in
these languages than in poor-static-typing languages like Java).


> And they aren't that far from "conventional" languages (think Perl and
> Shell, Python/Ruby and Java).

True in some ways.  That certainly doesn't mean there isn't a very
significant difference in productivity between the two groups, though
("traditional"  and Python / Ruby -- with the caveat that I've never used
Ruby, so can't comment on it).


> Ocaml is more of an applications language- it's benefits start to really
> shine when you're looking at tens of thousands (or more) lines of code.
> C++ succeed (and Objective-C and Smalltalk didn't) because you could write
> C in it.  Java succeeded because IBM, Sun, Oracle, and a number of other
> huge companies got behind it.
[...]


John

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

