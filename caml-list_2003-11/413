Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id GAA09671; Fri, 21 Nov 2003 06:48:25 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id GAA08740 for <caml-list@pauillac.inria.fr>; Fri, 21 Nov 2003 06:48:24 +0100 (MET)
Received: from smtp.siren.ocn.ne.jp (siren.ocn.ne.jp [211.129.13.170])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hAL5mM123190
	for <caml-list@inria.fr>; Fri, 21 Nov 2003 06:48:23 +0100 (MET)
Received: from PWARP (p3002-ipad03kyoto.kyoto.ocn.ne.jp [61.214.53.2])
	by smtp.siren.ocn.ne.jp (Postfix) with SMTP
	id CDFC2111C; Fri, 21 Nov 2003 14:48:20 +0900 (JST)
Message-ID: <008301c3aff3$1030e760$0274a8c0@PWARP>
From: "Nicolas Cannasse" <warplayer@free.fr>
To: "David Brown" <caml-list@davidb.org>
Cc: "Martin Jambon" <martin_jambon@emailuser.net>,
        <sylvain.le-gall@polytechnique.org>, <caml-list@inria.fr>
References: <Pine.LNX.4.58.0311201830340.3787@localhost> <20031120195614.GB441@gallu.homelinux.org> <000f01c3afd1$30033c90$0274a8c0@PWARP> <20031121052549.GA8599@davidb.org>
Subject: Re: [Caml-list] Building large and portable projects
Date: Fri, 21 Nov 2003 14:48:17 +0900
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1158
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1165
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; cannasse:01 warplayer:01 caml-list:01 ocamake:01 motion-twin:01 ocamake:01 dependencies:01 ocamldep:01 dependencies:01 ocamldep:01 api:01 mli:01 cannasse:01 bindings:01 ocaml:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> > What is the difference with OCamake ?
> > http://tech.motion-twin.com/ocamake/
>
> There are a lot of things that OCamake can't do.  What would be very
> nice would be a tool that makes it easy to build simple Ocaml programs,
> but also lets me, reasonably easily, manage directory trees, C bindings,
> C libraries, programs build with special, strange programs, etc...
>
> There are several packages in the scons approach that seem like good
> ideas, but they all make very heavy use of the scripting languages they
> are written in.
>
> I still haven't found anything nicer than gnatmake, the builder for Gnu
> Ada.  A common compilation line:
>
>   gnatmake mainmodule
>
> Builds mainmodule.adb, as well as everything it depends on.  You can set
> a path to search for parts.  This would work for ocaml, if a program had
> a single module that brought in everything necessary via dependencies.

I agree such a thing would be very useful.

The first problem I see is that right now ocamldep is only giving you the
dependencies between files that are listed in the ocamldep command. That
means that you already need to know all the files before generating the
dependencies between them.

The other problem is that to much of the "special programs build" are
relying on OS tools that are sometimes not stricly compatible. The solution
to this is to rewrite all the tools in pure ocaml ( or with a small portable
C binding ) to give the "makefile" writter an API of portable commands. It
looks like this is the goal of Sylvain, and that would be really something
nice.

About OCamake : yes right know it only supports compilation of
ml/mli/mll/mly files in a standard way, but it is now mature and is actually
handling a lot of cases such as projects with multiple files paths and a
best effort dependency resolver (although based on ocamldep output). Adding
the auto building of C stubs could be done but this kind of tool need a lot
of time in order to fix correctly all the small issues.

Nicolas Cannasse


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

