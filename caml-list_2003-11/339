Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA13376; Wed, 19 Nov 2003 15:35:55 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA17546 for <caml-list@pauillac.inria.fr>; Wed, 19 Nov 2003 15:35:54 +0100 (MET)
Received: from mail2.tpgi.com.au (mail.tpgi.com.au [203.12.160.58])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hAJEZq117959
	for <caml-list@inria.fr>; Wed, 19 Nov 2003 15:35:52 +0100 (MET)
Received: from 203-213-84-84-syd-ts16-2600.tpgi.com.au (203-213-84-84-syd-ts16-2600.tpgi.com.au [203.213.84.84])
	by mail2.tpgi.com.au (8.12.10/8.12.10) with ESMTP id hAJEZgpi029412;
	Thu, 20 Nov 2003 01:35:43 +1100
Subject: Re: [Caml-list] GC and file descriptors
From: skaller <skaller@ozemail.com.au>
Reply-To: skaller@ozemail.com.au
To: Martin Berger <martinb@dcs.qmul.ac.uk>
Cc: Caml Mailing List <caml-list@inria.fr>
In-Reply-To: <3FBACC11.20504@dcs.qmul.ac.uk>
References: <Pine.LNX.4.44.0311181314010.5009-100000@localhost.localdomain>
	 <3FBACC11.20504@dcs.qmul.ac.uk>
Content-Type: text/plain
Message-Id: <1069248913.23700.84.camel@pelican>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 20 Nov 2003 00:35:13 +1100
Content-Transfer-Encoding: 7bit
X-Kaspersky-Antivirus: Passed
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 ozemail:01 ocaml:01 ocaml:01 garbage:01 descriptors:01 trivial:01 mottl:02 complex:03 wrote:03 wrote:03 algorithm:03 benchmarks:03 slightly:03 data:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 2003-11-19 at 12:49, Martin Berger wrote:
> Brian Hurt wrote:
> 
> > For any large, complex, data structure & algorithm heavy application, 
> > Ocaml is the best language I know of. 
> 
> what i've always wondered about is the following: all the benchmarks
> i have seen make ocaml look very good, but they are all using trivial
> programs. has anyone hands-on experience with using ocaml for processing
> *large* data-sets? by large i mean at least 1 GB? i am slightly worried
> about garbage collection performance in this case.

The person to ask about this is probably Markus Mottl,
his project deals with large commercial data sets.


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

