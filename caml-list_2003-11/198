Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA21762; Thu, 13 Nov 2003 02:30:16 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA20915 for <caml-list@pauillac.inria.fr>; Thu, 13 Nov 2003 02:30:15 +0100 (MET)
Received: from brazilnut.cc.columbia.edu (brazilnut.cc.columbia.edu [128.59.59.203])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hAD1TR121832
	for <caml-list@inria.fr>; Thu, 13 Nov 2003 02:29:28 +0100 (MET)
Received: from tw304h3.cpmc.columbia.edu (tw304h3.cpmc.columbia.edu [156.111.84.180])
	(user=ot14 mech=LOGIN bits=0)
	by brazilnut.cc.columbia.edu (8.12.10/8.12.10) with ESMTP id hAD1TLgF015792
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NOT);
	Wed, 12 Nov 2003 20:29:24 -0500 (EST)
From: Oleg Trott <oleg_trott@columbia.edu>
To: Karl Zilles <zilles@1969.ws>, John J Lee <jjl@pobox.com>
Subject: [Caml-list] F-sharp (was: Executable size?)
Date: Wed, 12 Nov 2003 20:29:02 -0500
User-Agent: KMail/1.5.4
Cc: caml-list@inria.fr, dsyme@microsoft.com
References: <Pine.LNX.4.44.0311121406060.5009-100000@localhost.localdomain> <Pine.LNX.4.58.0311122317440.3046@alice> <3FB2CFAF.2020803@1969.ws>
In-Reply-To: <3FB2CFAF.2020803@1969.ws>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="windows-1251"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200311122029.02172.oleg_trott@columbia.edu>
X-No-Spam-Score: Local
X-Scanned-By: MIMEDefang 2.35
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; oleg:01 oleg:01 stunt:01 python:01 fledged:01 selm:01 18.1:99 ifi:01 ocamlc:01 ocamlopt:01 compiler:01 implements:01 caml:01 caml:01 bytecode:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wednesday 12 November 2003 07:26 pm, Karl Zilles wrote:
> John J Lee wrote:
> > Well, I guess they already have, in the sense that O'Caml has a .NET
> > implementation -- right?  Always assuming that implementation is more
> > than the publicity stunt that the Python one was, of course...
>
> You're referring to F#.  It appears to be more of a research project
> than a full fledged implementation:
>
> http://groups.google.com/groups?selm=fa.qe3mh18.1p1m8jk%40ifi.uio.no

Cc: Don Syme

I'm curious why F# (as I understood it), implements Caml from scratch instead 
of just changing the bytecode compiler in Caml a bit to suite its needs.

By the way, are there benchmarks comparing code produced by ocamlc, ocamlopt 
and F# (together with SML.NET and SML/NJ for that matter) on a variety of 
algorithm and numerics-intensive tasks?

IIRC, when .NET/C# just came out, there were claims that it was almost as fast 
as C.
-- 
Oleg Trott <oleg_trott@columbia.edu>

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

