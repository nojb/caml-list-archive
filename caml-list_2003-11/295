Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA01134; Tue, 18 Nov 2003 17:20:41 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA00446 for <caml-list@pauillac.inria.fr>; Tue, 18 Nov 2003 17:20:40 +0100 (MET)
Received: from mail1.tpgi.com.au (mail.tpgi.com.au [203.12.160.57])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hAIGKc119597
	for <caml-list@inria.fr>; Tue, 18 Nov 2003 17:20:38 +0100 (MET)
Received: from syd-ts22-2600-136.tpgi.com.au (syd-ts22-2600-136.tpgi.com.au [203.26.30.136])
	by mail1.tpgi.com.au (8.11.6/8.11.6) with ESMTP id hAIGKG307394;
	Wed, 19 Nov 2003 03:20:17 +1100
Subject: Re: [Caml-list] GC and file descriptors
From: skaller <skaller@ozemail.com.au>
Reply-To: skaller@ozemail.com.au
To: Ville-Pertti Keinonen <will@exomi.com>
Cc: Brian Hurt <bhurt@spnz.org>, Caml Mailing List <caml-list@inria.fr>
In-Reply-To: <20031118120517.GA881@exomi.com>
References: <1069092899.17437.58.camel@pelican>
	 <Pine.LNX.4.44.0311171422420.5009-100000@localhost.localdomain>
	 <20031118120517.GA881@exomi.com>
Content-Type: text/plain
Message-Id: <1069168782.18363.90.camel@pelican>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 19 Nov 2003 02:19:42 +1100
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 ozemail:01 0600,:01 python:01 python:01 closures:01 stackless:01 passing:01 ocaml:01 ocaml:01 05,:01 descriptors:01 nov:01 procedural:02 continuation:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, 2003-11-18 at 23:05, Ville-Pertti Keinonen wrote:
> On Mon, Nov 17, 2003 at 03:20:36PM -0600, Brian Hurt wrote:


> Python and Ruby are hardly scripting languages, even though they are
> often used as such.  I think they could be decent general purpose
> programming languages except for a few unfortunate design decisions
> (such as scoping rules).

You haven't seen Python 2.2? Its a genuine functional
programming language now, with full lexical scoping,
closures, and even some advanced concepts like
iterators which cannot be programmed in Ocaml.

Stackless Python provides the full continuation
passing (and Felix provides procedural continuations)
so they're both ahead of Ocaml as functional languages
on that score :-)


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

