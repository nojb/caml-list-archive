Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA22490; Thu, 20 Nov 2003 19:46:34 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA22920 for <caml-list@pauillac.inria.fr>; Thu, 20 Nov 2003 19:46:33 +0100 (MET)
Received: from out2.smtp.messagingengine.com (out2.smtp.messagingengine.com [66.111.4.26])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hAKIkW128158
	for <caml-list@inria.fr>; Thu, 20 Nov 2003 19:46:32 +0100 (MET)
X-Sasl-enc: YxDGURjX5+I3y8t9AYMuNw 1069353972
Received: from [192.168.0.107] (f07a-3-8.d1.club-internet.fr [212.194.146.8])
	by mail.messagingengine.com (Postfix) with ESMTP id 532E6437BBB
	for <caml-list@inria.fr>; Thu, 20 Nov 2003 13:46:11 -0500 (EST)
Date: Thu, 20 Nov 2003 19:47:25 +0100 (CET)
From: Martin Jambon <martin_jambon@emailuser.net>
X-X-Sender: martin@localhost
To: caml-list@inria.fr
Subject: [Caml-list] Building large and portable projects
Message-ID: <Pine.LNX.4.58.0311201830340.3787@localhost>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; loadable:01 filenames:01 ocaml:01 ocaml:01 syntax:02 tree:02 modules:02 jambon:02 jambon:02 executable:03 configurable:03 enhancements:04 functions:05 humans:05 paths:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi,

Is there a convenient way to develop OCaml code, and be sure that 
this code will be configurable, compilable, installable and 
executable without changes, on any environment where OCaml is available?

I imagine a higher level "make", with most of its nicer properties, plus 
many enhancements.
The following points seem important to me:

- target dependency system
- ease of use, nice syntax (for average humans with a simple text editor)
- loadable modules
- built-in programming language
- built-in fileutils (cp, mv, cd, rm, ...) and functions (filters, ...)
- universal paths for filenames inside the project tree
- natural highlighting of environment-dependent elements
- possibility of harmonious integration in a graphical development 
  environment

and also a very flexible license that allows its free redistribution and 
modification under any form.

Until right now I didn't find anything like this. And I was really scared 
when I discovered Apache Ant.

Any suggestions?


Martin

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

