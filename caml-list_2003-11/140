Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA06524; Tue, 11 Nov 2003 15:20:12 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA05056 for <caml-list@pauillac.inria.fr>; Tue, 11 Nov 2003 15:20:11 +0100 (MET)
Received: from sccrmhc12.comcast.net (sccrmhc12.comcast.net [204.127.202.56])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hABEKA106264
	for <caml-list@inria.fr>; Tue, 11 Nov 2003 15:20:11 +0100 (MET)
Received: from stratocaster.home (c-24-3-150-197.client.comcast.net[24.3.150.197])
          by comcast.net (sccrmhc12) with ESMTP
          id <20031111142010012007enkfe>; Tue, 11 Nov 2003 14:20:10 +0000
Received: from ecc by stratocaster.home with local (Exim 3.36 #1 (Debian))
	id 1AJZNN-0005dS-00
	for <caml-list@inria.fr>; Tue, 11 Nov 2003 09:20:13 -0500
Date: Tue, 11 Nov 2003 09:20:13 -0500
To: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] access to the internet
Message-ID: <20031111142013.GA21520@localhost>
Mail-Followup-To: caml-list <caml-list@inria.fr>
References: <25885621.1068486985089.JavaMail.www@wwinf0203> <20031111092126.GA4903@iliana> <20031111093954.GA10795@redhat.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20031111093954.GA10795@redhat.com>
User-Agent: Mutt/1.5.4i
From: "Eric C. Cooper" <ecc@cmu.edu>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sven:01 luther:01 sourceforge:01 knobs:99 libcurl:01 val:01 val:01 ocaml:01 ocaml:01 caml:01 nov:01 nov:01 exception:02 contact:96 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, Nov 11, 2003 at 09:39:54AM +0000, Richard Jones wrote:
> On Tue, Nov 11, 2003 at 10:21:26AM +0100, Sven Luther wrote:
> > I agree that a full url-reading module would be a good addition to the
> > ocaml library though, java has it for example.
> 
> Actually there are two (at least) ways of doing this:
> 
> http://sourceforge.net/projects/ocurl/
> 
> which is an OCaml wrapper around the Curl library.
> 
> Or, you could use some Perl-fu with:
> 
> http://www.merjis.com/developers/perl4caml/

I use a very simple Curl wrapper.  Rather than exposing all the
knobs that libcurl has, it just exports simple get and post
functions:
    exception Error of string
    val get : string -> string
    val post : url:string -> data:string -> string
    val form : string -> (string * string) list -> string

Contact me if you want a copy.

-- 
Eric C. Cooper          e c c @ c m u . e d u

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

