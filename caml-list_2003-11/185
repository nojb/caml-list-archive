Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA14938; Wed, 12 Nov 2003 23:53:10 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA14801 for <caml-list@pauillac.inria.fr>; Wed, 12 Nov 2003 23:53:09 +0100 (MET)
Received: from aomori.annexia.org (annexia.force9.co.uk [212.56.101.183])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hACMr8104109
	for <caml-list@inria.fr>; Wed, 12 Nov 2003 23:53:08 +0100 (MET)
Received: from rich by aomori.annexia.org with local (Exim 3.36 #1 (Debian))
	id 1AK3rI-00019e-00
	for <caml-list@inria.fr>; Wed, 12 Nov 2003 22:53:08 +0000
Date: Wed, 12 Nov 2003 22:53:08 +0000
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Executable size?
Message-ID: <20031112225308.GA4399@redhat.com>
References: <Pine.LNX.4.58.0311121605570.1430@alice> <20031112173335.GA32347@redhat.com> <Pine.LNX.4.58.0311121753190.2472@alice>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.58.0311121753190.2472@alice>
User-Agent: Mutt/1.5.4i
From: Richard Jones <rich@annexia.org>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 runtime:01 runtime:01 natively:01 installer:01 installer:01 dynamically:01 ffi:01 ocam'ole:01 freshmeat:01 libc:01 ltd:98 compiler:01 compiler:01 ocaml:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, Nov 12, 2003 at 06:21:11PM +0000, John J Lee wrote:
> How big is the runtime?  Does the compiler only link in the parts of the
> runtime that you use, or do you just non-negotiably get the whole thing
> every time you link?

It's really not so huge. You'll have to tell us a bit more about your
situation.

As a general guide, I was recently involved in writing a large
simulation program. We distributed two natively compiled OCaml
programs in a Windows installer, plus many auxiliary files, and the
size of the installer came to between 6 and 8 MB. This was not such an
issue for our users. [The installer was written using NSIS and used
bzip2 compression].

> Probably this is a naive question, but: Is it impractical to have a
> functional language that uses the C runtime?

OCaml links (dynamically) with the C runtime as well. ie. libc on Unix.

> Does anyone have recommendations for languages (not necessarily
> functional) with a compiler that generates small executables (including
> runtime code) for multiple platforms (at least Unix and Windows), with a
> decent FFI (foreign function interface), and preferably MS COM support?

Yes, OCaml! If you want COM support, look at OCam'OLE.

> Am I really stuck with C++??

Well, one would hope not. Supply us with more details about exactly
what the limitations are that you're facing, and we'll be able to
provide some more meaningful information.

Rich.

-- 
Richard Jones. http://www.annexia.org/ http://freshmeat.net/users/rwmj
Merjis Ltd. http://www.merjis.com/ - improving website return on investment
"I wish more software used text based configuration files!"
 -- A Windows NT user, quoted on Slashdot.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

