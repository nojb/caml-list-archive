Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id GAA09454; Fri, 21 Nov 2003 06:26:06 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id GAA08851 for <caml-list@pauillac.inria.fr>; Fri, 21 Nov 2003 06:26:04 +0100 (MET)
Received: from mail.davidb.org (adsl-64-172-240-129.dsl.sndg02.pacbell.net [64.172.240.129])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hAL5Q3122463
	for <caml-list@inria.fr>; Fri, 21 Nov 2003 06:26:03 +0100 (MET)
Received: from davidb by mail.davidb.org with local (Exim 3.36 #1 (Debian))
	id 1AN3nh-0002FQ-00; Thu, 20 Nov 2003 21:25:49 -0800
Date: Thu, 20 Nov 2003 21:25:49 -0800
From: David Brown <caml-list@davidb.org>
To: Nicolas Cannasse <warplayer@free.fr>
Cc: Martin Jambon <martin_jambon@emailuser.net>,
        sylvain.le-gall@polytechnique.org, caml-list@inria.fr
Subject: Re: [Caml-list] Building large and portable projects
Message-ID: <20031121052549.GA8599@davidb.org>
References: <Pine.LNX.4.58.0311201830340.3787@localhost> <20031120195614.GB441@gallu.homelinux.org> <000f01c3afd1$30033c90$0274a8c0@PWARP>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <000f01c3afd1$30033c90$0274a8c0@PWARP>
User-Agent: Mutt/1.5.4i
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 caml-list:01 0900,:01 cannasse:01 ocamake:01 motion-twin:01 ocamake:01 dependencies:01 bindings:01 ocaml:01 ocaml:01 nicolas:01 nov:01 module:03 dave:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, Nov 21, 2003 at 10:45:47AM +0900, Nicolas Cannasse wrote:

> What is the difference with OCamake ?
> http://tech.motion-twin.com/ocamake/

There are a lot of things that OCamake can't do.  What would be very
nice would be a tool that makes it easy to build simple Ocaml programs,
but also lets me, reasonably easily, manage directory trees, C bindings,
C libraries, programs build with special, strange programs, etc...

There are several packages in the scons approach that seem like good
ideas, but they all make very heavy use of the scripting languages they
are written in.

I still haven't found anything nicer than gnatmake, the builder for Gnu
Ada.  A common compilation line:

  gnatmake mainmodule

Builds mainmodule.adb, as well as everything it depends on.  You can set
a path to search for parts.  This would work for ocaml, if a program had
a single module that brought in everything necessary via dependencies.

Dave

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

