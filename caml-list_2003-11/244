Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA15870; Sat, 15 Nov 2003 16:01:31 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA15134 for <caml-list@pauillac.inria.fr>; Sat, 15 Nov 2003 16:01:29 +0100 (MET)
Received: from cmailg4.svr.pol.co.uk (cmailg4.svr.pol.co.uk [195.92.195.174])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hAFF1T101368
	for <caml-list@inria.fr>; Sat, 15 Nov 2003 16:01:29 +0100 (MET)
Received: from modem-681.alakazam.dialup.pol.co.uk ([217.135.13.169])
	by cmailg4.svr.pol.co.uk with esmtp (Exim 4.14)
	id 1AL1vU-0005rF-Eb
	for caml-list@inria.fr; Sat, 15 Nov 2003 15:01:29 +0000
Date: Sat, 15 Nov 2003 15:01:26 +0000 (GMT)
From: John J Lee <jjl@pobox.com>
X-X-Sender: john@alice
To: caml-list@inria.fr
Subject: Re: [Caml-list] Executable size?
In-Reply-To: <1068903416.25869.96.camel@pelican>
Message-ID: <Pine.LNX.4.58.0311151457531.5150@alice>
References: <Pine.LNX.4.44.0311121406060.5009-100000@localhost.localdomain>
  <Pine.LNX.4.58.0311122020240.2865@alice> <3FB2B050.8050901@atcorp.com> 
 <Pine.LNX.4.58.0311122317440.3046@alice>  <3FB3A6A6.8010108@atcorp.com>
 <1068903416.25869.96.camel@pelican>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 runtime:01 runtime:01 libgcc:01 libgcc:01 libc:01 ocaml:01 nov:01 exception:02 linking:02 linking:02 o'caml:02 executable:03 wrote:03 library:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sat, 16 Nov 2003, skaller wrote:
[...]
> A very large number of people do in fact build C all the
> time without any runtime library at all: embedded systems
> typically don't use any runtime.

When you say "runtime", do you mean stuff like libc.so, or libgcc.a, or
both?

When, if ever, can you avoid linking with libgcc.a (or its equivalent)?
What do you lose by not linking with it?

I don't ask for any practical reason, just to try and sort out how O'Caml,
C and C++ differ here.


> You can also do this for C++, even g++ can do it I think
> by turning off support for features that require run
> time support such as exception handling.
>
> Ocaml on the other hand cannot function at all without the gc.


John

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

