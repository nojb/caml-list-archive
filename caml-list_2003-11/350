Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA26238; Wed, 19 Nov 2003 18:18:13 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA25379 for <caml-list@pauillac.inria.fr>; Wed, 19 Nov 2003 18:18:12 +0100 (MET)
Received: from inria.fr (macaque.inria.fr [128.93.8.158])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hAJHIB109629
	for <caml-list@inria.fr>; Wed, 19 Nov 2003 18:18:11 +0100 (MET)
Date: Wed, 19 Nov 2003 18:18:47 +0100
Subject: Re: [Caml-list] GC and file descriptors
Content-Type: text/plain; charset=US-ASCII; format=flowed
Mime-Version: 1.0 (Apple Message framework v552)
From: Damien Doligez <damien.doligez@inria.fr>
To: Caml Mailing List <caml-list@inria.fr>
Content-Transfer-Encoding: 7bit
In-Reply-To: <20031119165408.GA16427@redhat.com>
Message-Id: <6F407D14-1AB4-11D8-8941-00039310CAE8@inria.fr>
X-Mailer: Apple Mail (2.552)
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 damien:01 damien:01 mli:01 incompatible:01 api:01 descriptors:01 doligez:01 doligez:01 constructs:02 wrote:03 interface:03 interface:03 library:03 library:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wednesday, November 19, 2003, at 05:54 PM, Richard Jones wrote:

> Yes, all well and good, but I *do not* want have to go and change all
> .mli files to support checked exceptions,

Big change in the language -> big changes in the programs.
Fair enough.

>  and then go and change them
> all again when I decide to put a SQL database behind some persistence
> library deep in the code.

Why would you need to do that ?  Your new implementation of the
persistence library should use a few try...with constructs instead
of changing the interface of the functions in an incompatible way.

> This is the problem with checked exceptions in Java: the set of
> exceptions that can be thrown is an implementation detail which is
> exposed unnecessarily through the API.

IMO it is part of the interface, just like the return type of the
functions.

-- Damien

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

