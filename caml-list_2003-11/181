Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA09950; Wed, 12 Nov 2003 21:52:56 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA10050 for <caml-list@pauillac.inria.fr>; Wed, 12 Nov 2003 21:52:55 +0100 (MET)
Received: from herd.plethora.net (herd.plethora.net [205.166.146.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hACKqs112217
	for <caml-list@inria.fr>; Wed, 12 Nov 2003 21:52:54 +0100 (MET)
Received: from bhurt.plethora.net (bhurt.plethora.net [205.166.146.49])
	by herd.plethora.net (8.11.6/8.10.1) with ESMTP id hACKqmC08380;
	Wed, 12 Nov 2003 14:52:48 -0600 (CST)
Date: Wed, 12 Nov 2003 15:51:54 -0600 (CST)
From: Brian Hurt <bhurt@spnz.org>
X-X-Sender: bhurt@localhost.localdomain
To: John J Lee <jjl@pobox.com>
cc: caml-list@inria.fr
Subject: Re: [Caml-list] Executable size?
In-Reply-To: <Pine.LNX.4.58.0311122020240.2865@alice>
Message-ID: <Pine.LNX.4.44.0311121547090.5009-100000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 non-trivial:01 debugging:01 ocaml's:01 bathroom:99 ocaml:01 ocaml:01 garbage:01 3.5:98 nov:01 overhead:03 overhead:03 executable:03 wrote:03 library:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 12 Nov 2003, John J Lee wrote:

> > In addition to a more complicated and complete standard library and
> > bultins, Ocaml also has garbage collection, which is non-trivial to
> > implement.  I wouldn't be surprised if half or more of that 100K of
> > overhead is just the GC.
> 
> Ah, of course!
>

Actually, about a third of it seems to be debugging information, which 
goes away with strip.
 
> > I was using it in the most literal sense- using code more than once, in
> > more than one way.  In general, it's much better to have only one copy of
> > a function, used in two places, than two copies of the function.  The
> [...]
> 
> Got you.  The template explosion problem in C++, eg.
>

I've been trying hard not to badmouth C++ here :-).  
 
> 
> > I was thinking of special cases where the difference of a 100K or 1M or so
> > is the difference between working and not working.  If you are, for
> > example, trying to fit your program on a 512K ROM, Ocaml's overhead might
> > be a problem.
> 
> Or if people are willing to download 100k but not 1M.
>

It would be an exceeding large program- or a delibertly perverse one- 
which managed to use *all* the libraries Ocaml provides.

And speaking as someone who still gets onto the internet via a 56K baud 
modem, download a megabyte isn't that bad.  I routinely get 5K/second on 
downloads, so a megabyte is ~3.5 minutes.  It's a bathroom break, sure, 
but not unreasonable.
 
-- 
"Usenet is like a herd of performing elephants with diarrhea -- massive,
difficult to redirect, awe-inspiring, entertaining, and a source of
mind-boggling amounts of excrement when you least expect it."
                                - Gene Spafford 
Brian

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

