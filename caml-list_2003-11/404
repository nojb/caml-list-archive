Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA12604; Thu, 20 Nov 2003 18:10:06 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA17861 for <caml-list@pauillac.inria.fr>; Thu, 20 Nov 2003 18:10:04 +0100 (MET)
Received: from megs23.100mwh.com ([205.214.86.13])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hAKHA3129768;
	Thu, 20 Nov 2003 18:10:03 +0100 (MET)
Received: from [205.214.86.158] (helo=uaapc442)
	by megs23.100mwh.com with asmtp (Exim 4.24)
	id 1AMsJZ-0008JT-RQ; Thu, 20 Nov 2003 10:09:59 -0700
Cc: caml-list@inria.fr
To: Xavier Leroy <xavier.leroy@inria.fr>
Subject: Re: [Caml-list] exceptions
References: <A1364BC6814D92479D4EED572D6F6FD81C4D88@uranus.certw2k.net> <20031120173802.C14255@pauillac.inria.fr>
Message-ID: <opryx4m4wuafbmjd@uaapc442>
From: Artem Prisyznuk <tema@sit.kiev.ua>
Content-Type: text/plain; format=flowed; charset=koi8-r
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Date: Thu, 20 Nov 2003 19:10:06 +0200
In-Reply-To: <20031120173802.C14255@pauillac.inria.fr>
User-Agent: Opera7.22/Win32 M2 build 3221
X-MailScanner-Information: Please contact the ISP for more information
X-MailScanner: Found to be clean
X-AntiAbuse: This header was added to track abuse, please include it with any abuse report
X-AntiAbuse: Primary Hostname - megs23.100mwh.com
X-AntiAbuse: Original Domain - inria.fr
X-AntiAbuse: Originator/Caller UID/GID - [47 12] / [47 12]
X-AntiAbuse: Sender Address Domain - sit.kiev.ua
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 artem:01 backtrace:01 backtrace:01 artem:01 bytecode:01 nov:01 stack:02 wrote:03 let:04 let:04 execute:04 exceptions:04 raise:05 0100,:08 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 20 Nov 2003 17:38:02 +0100, Xavier Leroy <xavier.leroy@inria.fr> 
wrote:

> - Execute your program.  Voila, nice stack backtrace with line numbers.

Is it possible acces to nice backtrace info from bytecode program?

For example:

let bad_fun () =
   raise Not_found;;

let main () =
   try
	bad_fun ()
   with exc -> print_backtrace_log exc



-- 
Artem Prysyznuk
tema@sit.kiev.ua

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

