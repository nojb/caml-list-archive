Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA28002; Wed, 12 Nov 2003 02:12:24 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA27986 for <caml-list@pauillac.inria.fr>; Wed, 12 Nov 2003 02:12:22 +0100 (MET)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hAC1CL106972
	for <caml-list@inria.fr>; Wed, 12 Nov 2003 02:12:21 +0100 (MET)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3p2-20030924/3.7W) with ESMTP id KAA13344;
	Wed, 12 Nov 2003 10:12:11 +0900 (JST)
To: Damien.Pous@ens-lyon.fr
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] type issues with modules
In-Reply-To: <20031111182530.71a9a9c7.Damien.Pous@ens-lyon.fr>
References: <3FB0749C.80103@cs.uoregon.edu>
	<20031111172147M.garrigue@kurims.kyoto-u.ac.jp>
	<20031111182530.71a9a9c7.Damien.Pous@ens-lyon.fr>
X-Mailer: Mew version 1.94.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20031112101211B.garrigue@kurims.kyoto-u.ac.jp>
Date: Wed, 12 Nov 2003 10:12:11 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 25
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 jacques:01 damien:01 damien:01 ens-lyon:01 mli:01 struct:01 ocamlc:01 -pack:01 mli:01 struct:01 jacques:01 cmo:01 sig:01 sig:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Damien <Damien.Pous@ens-lyon.fr>

> But I think that giving a name to the signature of Mod1 (Sig_mod1) could
> be useful :
> 
> <<
> 	module type MOD1 : sig <mod1.mli> end
> 	module Mod1 : MOD1 = struct <mod1.ml> end
> >>
> 
> Especially when hand-packing some modules : 
> "ocamlc -pack" checks the packed cmo against an optional interface file,
> but the latter is rather boring to write, since one has to copy&paste
> the content of each packed interface.

I have already suggested in the past

  module type Mod1 = sig <mod1.mli> end
  module Mod1 : Mod1 = struct <mod1.ml> end

since modules and module types have independent name spaces.
But it was not accepted.
Maybe if more people insist, it will be added some day...

      Jacques

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

