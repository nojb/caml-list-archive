Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA07421; Wed, 12 Nov 2003 21:10:42 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA07250 for <caml-list@pauillac.inria.fr>; Wed, 12 Nov 2003 21:10:41 +0100 (MET)
Received: from bourg.inria.fr (bourg.inria.fr [128.93.11.100])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hACKAe109251
	for <caml-list@inria.fr>; Wed, 12 Nov 2003 21:10:40 +0100 (MET)
Received: from starynke by bourg.inria.fr with local (Exim 4.24)
	id 1AK1K3-0001Aw-VO; Wed, 12 Nov 2003 21:10:39 +0100
Date: Wed, 12 Nov 2003 21:10:38 +0100
To: Brian Hurt <bhurt@spnz.org>, caml-list@inria.fr
Subject: Re: [Caml-list] Executable size?
Message-ID: <20031112201038.GA4478@bourg.inria.fr>
References: <Pine.LNX.4.58.0311121837540.2472@alice> <Pine.LNX.4.44.0311121406060.5009-100000@localhost.localdomain>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.44.0311121406060.5009-100000@localhost.localdomain>
User-Agent: Mutt/1.5.4i
From: Basile Starynkevitch <basile.starynkevitch@inria.fr>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 basile:01 basile:01 0600,:01 c's:01 runtime:01 ocaml's:01 printf:01 c's:01 printf:01 picky:01 implemented:01 stdlib:01 typecore:01 runtime:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, Nov 12, 2003 at 02:40:56PM -0600, Brian Hurt wrote: [....]

> Actually, I think Ocaml uses C's runtime libraries and builds on top of
> them.  For example, if I understand things correctly, Ocaml's printf is a
> wrapper which calls C's printf. 

Sorry to be picky, but this particular claim is wrong:

Ocaml printf routine is implemented in ocaml/stdlib/printf.ml

and does not call C printf related stuff (except perhaps for
float_to_string conversions).

The format4 type is wired inside the compiler, notably inside
ocaml/typing/typecore.ml function type_format.

Actually, I tend to believe that on the contrary

1. Ocaml runtime (mostly the GC) uses the C library

2. Ocaml standard library (and others, notably the Unix module) don't
use that much the C library except thru trivial wrappers (which
essentially deals with Ocaml data representation and its conversion to
native C data types). Most of the standard library is coded in Ocaml,
not in C.

Regards.

-- 
Basile STARYNKEVITCH -- basile dot starynkevitch at inria dot fr
Project cristal.inria.fr - 
http://cristal.inria.fr/~starynke --- all opinions are only mine 

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

