Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA14975; Sat, 15 Nov 2003 15:37:54 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA14765 for <caml-list@pauillac.inria.fr>; Sat, 15 Nov 2003 15:37:53 +0100 (MET)
Received: from mail2.tpgi.com.au (mail.tpgi.com.au [203.12.160.58])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hAFEbp117668
	for <caml-list@inria.fr>; Sat, 15 Nov 2003 15:37:51 +0100 (MET)
Received: from 203-219-16-195-syd-ts21-2600.tpgi.com.au (203-219-16-195-syd-ts21-2600.tpgi.com.au [203.219.16.195])
	by mail2.tpgi.com.au (8.12.10/8.12.10) with ESMTP id hAFEbhvG031350;
	Sun, 16 Nov 2003 01:37:44 +1100
Subject: Re: [Caml-list] Executable size?
From: skaller <skaller@ozemail.com.au>
Reply-To: skaller@ozemail.com.au
To: Eric Dahlman <edahlman@atcorp.com>
Cc: John J Lee <jjl@pobox.com>, caml-list@inria.fr
In-Reply-To: <3FB3A6A6.8010108@atcorp.com>
References: <Pine.LNX.4.44.0311121406060.5009-100000@localhost.localdomain>
	 <Pine.LNX.4.58.0311122020240.2865@alice> <3FB2B050.8050901@atcorp.com>
	 <Pine.LNX.4.58.0311122317440.3046@alice>  <3FB3A6A6.8010108@atcorp.com>
Content-Type: text/plain
Message-Id: <1068903416.25869.96.camel@pelican>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 16 Nov 2003 00:36:56 +1100
Content-Transfer-Encoding: 7bit
X-Kaspersky-Antivirus: Passed
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 ozemail:01 runtime:01 runtime:01 ocaml:01 exception:02 o'caml:02 executable:03 wrote:03 wrote:03 library:03 embedded:05 lee:94 definition:06 eric:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 2003-11-14 at 02:43, Eric Dahlman wrote:
> John J Lee wrote:

> My point was that if you are making these sorts of comparisons you 
> cannot just *ignore* the runtime in the C/C++ case and more importantly 
> that C and O'Caml are not fundamentally different in this regard.  By 
> definition it is impossible to write a program in C or C++ which does 
> not use the respective runtime, it cannot be ignored.

That is not true for C, unless you are pedantic and refer to ISO C,
and even then, ISO C has a concept of 'hosted' and 'non-hosted'
systems, with the requirements for non-hosted systems
being considerably less.

A very large number of people do in fact build C all the
time without any runtime library at all: embedded systems
typically don't use any runtime.

You can also do this for C++, even g++ can do it I think
by turning off support for features that require run
time support such as exception handling.

Ocaml on the other hand cannot function at all without the gc.


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

