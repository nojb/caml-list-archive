Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA13276; Wed, 12 Nov 2003 23:18:18 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA13668 for <caml-list@pauillac.inria.fr>; Wed, 12 Nov 2003 23:18:17 +0100 (MET)
Received: from moby.atcorp.com (moby.atcorp.com [204.72.172.2])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hACMIG118899
	for <caml-list@inria.fr>; Wed, 12 Nov 2003 23:18:16 +0100 (MET)
Received: from atcorp.com (seahorse.atcorp.com [204.72.172.13])
	by moby.atcorp.com (8.11.6/8.11.2) with ESMTP id hACMFeZ01344;
	Wed, 12 Nov 2003 16:15:40 -0600
Message-ID: <3FB2B050.8050901@atcorp.com>
Date: Wed, 12 Nov 2003 16:12:32 -0600
From: Eric Dahlman <edahlman@atcorp.com>
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.5) Gecko/20031013 Thunderbird/0.3
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: John J Lee <jjl@pobox.com>
CC: caml-list@inria.fr
Subject: Re: [Caml-list] Executable size?
References: <Pine.LNX.4.44.0311121406060.5009-100000@localhost.localdomain> <Pine.LNX.4.58.0311122020240.2865@alice>
In-Reply-To: <Pine.LNX.4.58.0311122020240.2865@alice>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 currying:01 o'caml's:01 runtime:01 statically:01 -static:01 libc:01 libc:01 ocaml:01 nov:01 bytes:02 bytes:02 o'caml:02 executable:03 wrote:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

John J Lee wrote:
> On Wed, 12 Nov 2003, Brian Hurt wrote:
>>Currying, exceptions, etc. also have small size penalties. 
> OK.  I'm now enlightened on that point -- clearly, O'Caml's runtime is an
> absolute requirement for an O'Caml program (unlike C/C++).

C and C++ are not special in this regard, they just happen to be shipped 
with the operating system.  On my box hello world links against  libc.so 
and ld.so which are 1,531,964 and 103,044 bytes respectively.

One way to even things up is require the C version to link to all of its 
libraries statically.  Compiling with 'gcc -static test.c' I get an 
a.out file which is 423,441 bytes long.  So the static linker was able 
to throw better than 2/3 of libc but it still isn't to light.

Really what you need to do is lobby Microsoft and Apple to include ocaml 
as part of the base system install and then things might even out ;-)

-Eric

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

