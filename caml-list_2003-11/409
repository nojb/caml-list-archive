Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA25320; Thu, 20 Nov 2003 20:56:20 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA25271 for <caml-list@pauillac.inria.fr>; Thu, 20 Nov 2003 20:56:18 +0100 (MET)
Received: from smarthost1.mail.easynet.fr (smarthost1.mail.easynet.fr [212.180.1.68])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hAKJuI114275
	for <caml-list@inria.fr>; Thu, 20 Nov 2003 20:56:18 +0100 (MET)
Received: from [212.180.39.62] (helo=gros)
	by smarthost1.mail.easynet.fr with esmtp (Exim 3.35 #1 (Debian))
	id 1AMuuX-0005e5-00; Thu, 20 Nov 2003 20:56:17 +0100
Received: from [192.168.0.11] (helo=ptit.gallu.homelinux.org)
	by gros with esmtp (Exim 3.36 #1 (Debian))
	id 1AMuuX-0003jk-00; Thu, 20 Nov 2003 20:56:17 +0100
Received: from gildor by ptit.gallu.homelinux.org with local (masqmail
 0.2.20) id 1AMuuU-07N-00; Thu, 20 Nov 2003 20:56:14 +0100
Date: Thu, 20 Nov 2003 20:56:14 +0100
To: Martin Jambon <martin_jambon@emailuser.net>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Building large and portable projects
Message-ID: <20031120195614.GB441@gallu.homelinux.org>
References: <Pine.LNX.4.58.0311201830340.3787@localhost>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.58.0311201830340.3787@localhost>
User-Agent: Mutt/1.5.4i
From: <sylvain.le-gall@polytechnique.org>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 le-gall:01 loadable:01 filenames:01 abstraction:01 developped:01 funct:01 funct:01 ocamldep:01 gall:01 ocaml:01 ocaml:01 lib:01 lib:01 nov:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello,

On Thu, Nov 20, 2003 at 07:47:25PM +0100, Martin Jambon wrote:
> Hi,
> 
> Is there a convenient way to develop OCaml code, and be sure that 
> this code will be configurable, compilable, installable and 
> executable without changes, on any environment where OCaml is available?
> 

The only way is to use only pure ocaml code ( not C binding ). With this
you are pretty sure not to have any problem. (Exclude for example Unix,
Dbm modules ).

> I imagine a higher level "make", with most of its nicer properties, plus 
> many enhancements.
> The following points seem important to me:
> 
> - target dependency system
> - ease of use, nice syntax (for average humans with a simple text editor)
> - loadable modules
> - built-in programming language
> - built-in fileutils (cp, mv, cd, rm, ...) and functions (filters, ...)
... Try ocaml-fileutils ...
> - universal paths for filenames inside the project tree
... Try ocaml-fileutils ...
> - natural highlighting of environment-dependent elements
> - possibility of harmonious integration in a graphical development 
>   environment
> 
> and also a very flexible license that allows its free redistribution and 
> modification under any form.
> 
> Until right now I didn't find anything like this. And I was really scared 
> when I discovered Apache Ant.
> 

Well let me give you some hints :
Ocaml fileutils is a lib of mine ( not yet published, but if you want to
test it, i can give you the tar ball ).

In fact, my aim is to construct approximativelly what you are looking for 
but for now, i have not yet the time to go over the whole things. 

Ocaml-fileutils is the base path abstraction for files and fileutils.
Ocaml-preprocessor is a replacement for *.in -> * ( already developped,
very simple, it is something were you bind variable and function and
you pass it on files where there is for example @funct "abcd"@ and it
replace it with the result of the binding of funct "abcd"... ). It is
also not yet published, but it seems stable to me.

I want to develop the makefile in ML. Each module will register
variable, target, dependency and a big program will run to compute all
this and compile file, lib, exec...

For now, it is only at an early stage ( i have some lexer/parser to
autosort ocamldep generated file and try to figure how to compile only
one thing ).

If you are intersted, just drop me an email, to have more information,
or if you want to test ocaml-fileutils or ocaml-preprocessor.

Kind regard
Sylvain LE GALL

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

