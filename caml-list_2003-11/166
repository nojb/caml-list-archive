Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA01308; Wed, 12 Nov 2003 19:21:43 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA01282 for <caml-list@pauillac.inria.fr>; Wed, 12 Nov 2003 19:21:42 +0100 (MET)
Received: from cmailg5.svr.pol.co.uk (cmailg5.svr.pol.co.uk [195.92.195.175])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hACILd101758
	for <caml-list@inria.fr>; Wed, 12 Nov 2003 19:21:41 +0100 (MET)
Received: from modem-525.beedrill.dialup.pol.co.uk ([217.135.34.13])
	by cmailg5.svr.pol.co.uk with esmtp (Exim 4.14)
	id 1AJzcP-0002B4-KK
	for caml-list@inria.fr; Wed, 12 Nov 2003 18:21:30 +0000
Date: Wed, 12 Nov 2003 18:21:11 +0000 (GMT)
From: John J Lee <jjl@pobox.com>
X-X-Sender: john@alice
To: caml-list@inria.fr
Subject: Re: [Caml-list] Executable size?
In-Reply-To: <20031112173335.GA32347@redhat.com>
Message-ID: <Pine.LNX.4.58.0311121753190.2472@alice>
References: <Pine.LNX.4.58.0311121605570.1430@alice> <20031112173335.GA32347@redhat.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 haskell:01 runtime:01 criticism:01 runtime:01 statically:01 ffi:01 compiler:01 compiler:01 ocaml:01 ocaml:01 executables:01 executables:01 nov:01 nov:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 12 Nov 2003, Richard Jones wrote:

> On Wed, Nov 12, 2003 at 04:14:54PM +0000, John J Lee wrote:
> > How does O'Caml compare with languages like Haskell (ghc), C and C++ for
> > executable size?  Does compiled code depend on a runtime library (and how
> > big is that, if so)?
>
> This is not a criticism of OCaml, but the executables do tend to be
> quite large. This seems mainly down to the fact that OCaml links the
> runtime library in statically.
[...]

How big is the runtime?  Does the compiler only link in the parts of the
runtime that you use, or do you just non-negotiably get the whole thing
every time you link?

Probably this is a naive question, but: Is it impractical to have a
functional language that uses the C runtime?

Does anyone have recommendations for languages (not necessarily
functional) with a compiler that generates small executables (including
runtime code) for multiple platforms (at least Unix and Windows), with a
decent FFI (foreign function interface), and preferably MS COM support?

Am I really stuck with C++??


John

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

