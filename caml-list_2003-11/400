Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA16100; Thu, 20 Nov 2003 17:38:16 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA15843 for <caml-list@pauillac.inria.fr>; Thu, 20 Nov 2003 17:38:15 +0100 (MET)
Received: from pecan.cc.columbia.edu (pecan.cc.columbia.edu [128.59.59.178])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hAKGcE125992
	for <caml-list@inria.fr>; Thu, 20 Nov 2003 17:38:14 +0100 (MET)
Received: from tw304h3.cpmc.columbia.edu (tw304h3.cpmc.columbia.edu [156.111.84.180])
	(user=ot14 mech=LOGIN bits=0)
	by pecan.cc.columbia.edu (8.12.10/8.12.10) with ESMTP id hAKGc6XU029213
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NOT);
	Thu, 20 Nov 2003 11:38:08 -0500 (EST)
From: Oleg Trott <oleg_trott@columbia.edu>
To: Christian Lindig <lindig@cs.uni-sb.de>
Subject: Re: [Caml-list] Caml as C-- (was: Compiling a native code OCaml library into an .so?)
Date: Thu, 20 Nov 2003 11:37:45 -0500
User-Agent: KMail/1.5.4
Cc: Caml Mailing List <caml-list@inria.fr>
References: <3FBC0177.1050307@cs.caltech.edu> <200311200613.09139.oleg_trott@columbia.edu> <20031120114651.GE31390@st>
In-Reply-To: <20031120114651.GE31390@st>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="koi8-r"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200311201137.45637.oleg_trott@columbia.edu>
X-No-Spam-Score: Local
X-Scanned-By: MIMEDefang 2.35
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; oleg:01 oleg:01 caml-list:01 lindig:01 workings:01 ocamlopt:01 slides:01 uni-sb:01 lindig:01 slides:01 compiler:01 ocaml:01 caml:01 caml:01 ocaml-:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thursday 20 November 2003 06:46 am, Christian Lindig wrote:
> On Thu, Nov 20, 2003 at 06:13:09AM -0500, Oleg Trott wrote:
> > Things like this make me wonder how people outside of INRIA understand
> > the inner workings of Caml compiler (enough to modify it). Just  guessing
> > by looking at the rather sparcely commented source? Or is there anything
> > else?
>
> I once looked at the data structures in the ocamlopt back end. I'm not
> sure my slides are useful without the talk, but here they are:
>
>     http://www.st.cs.uni-sb.de/~lindig/talks/ocaml-02/slides.ps.gz

Yes! That's the kind of thing I'm looking for, but in a 160-page book form :-)

-- 
Oleg Trott <oleg_trott@columbia.edu>

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

