Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA01535; Fri, 22 Mar 2002 11:17:42 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA18158 for <caml-list@pauillac.inria.fr>; Fri, 22 Mar 2002 11:17:41 +0100 (MET)
Received: from mrwall.kal.com (mrwall.kal.com [194.193.14.236])
	by nez-perce.inria.fr (8.11.1/8.11.1) with SMTP id g2MAHev06973;
	Fri, 22 Mar 2002 11:17:40 +0100 (MET)
Received: from mrwall.kal.com [194.193.14.236]
	(HELO localhost)
	by mrwall.kal.com (AltaVista Mail V2.0J/2.0J BL25J listener)
	id 0000_003e_3c9b_05d8_937c;
	Fri, 22 Mar 2002 10:22:16 +0000
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Subject: RE: [Caml-list] The DLL-hell of O'Caml
content-class: urn:content-classes:message
x-mimeole: Produced By Microsoft Exchange V6.0.4417.0
Date: Fri, 22 Mar 2002 10:14:54 -0000
Message-ID: <8E31D6933A2FE64F8AE3CC1381EEDCE72A0A3E@NT.kal.com>
Thread-Topic: [Caml-list] The DLL-hell of O'Caml
Thread-Index: AcHRBQwd6ZPJUUufSQWuAORTa414GQAhRsfQ
From: "Dave Berry" <Dave@kal.com>
To: "Xavier Leroy" <xavier.leroy@inria.fr>,
        "Christopher Quinn" <cq@htec.demon.co.uk>, <caml-list@inria.fr>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I don't have figures for this, unfortunately.  I believe the TIL folks
use this technique to keep the size of their type information
manageable; possibly they have some measurements.

I can offer two anecdotal examples.  Way back when the Edinburgh CS
department did all its teaching on one multi-user machine with about 8M
RAM, the Edinburgh ML implementation was quite unusable because the
top-level rapidly grew too large.  Hash-consing made it manageable, with
no appreciable loss of performance.

I believe Harlequin's implementation of Dylan also introduced
hash-consing to reduce the size of the program databases (among other
tricks).  This increased performance by reducing thrashing.

It's always hard to predict how much effect a given technique will have
in a given situation.  In practice someone would have to implement it
and measure the effect.



-----Original Message-----
From: Xavier Leroy [mailto:xavier.leroy@inria.fr]
Sent: 21 March 2002 18:13
To: Christopher Quinn
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] The DLL-hell of O'Caml


> Any idea how much improvement would come from hash-consing,=20
> as Dave Berry suggested? And only that part of a module's=20
> signature which pertained to actual usage would need=20
> inclusion, no? And only of those modules externally provided=20
> upon which one's project depends, ie. the standard library,=20
> not the internal project modules?

No idea.  It's certainly possible to reduce the size of the signature
information that has to be retained; how much and at what cost, I
don't know.

- Xavier Leroy
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives:
http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ:
http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

