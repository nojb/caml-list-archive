Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA00967; Mon, 18 Mar 2002 13:53:43 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA01469 for <caml-list@pauillac.inria.fr>; Mon, 18 Mar 2002 13:53:42 +0100 (MET)
Received: from mailhost.utu.fi (mailhost.utu.fi [130.232.1.5])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g2ICrfH14721
	for <caml-list@inria.fr>; Mon, 18 Mar 2002 13:53:41 +0100 (MET)
Received: from utu.fi (glubimox.yok.utu.fi [130.232.134.107])
	by mailhost.utu.fi (Postfix) with ESMTP
	id 801154BE9; Mon, 18 Mar 2002 14:53:40 +0200 (EET)
Message-ID: <3C95E312.28961EEF@utu.fi>
Date: Mon, 18 Mar 2002 14:52:34 +0200
From: Sami =?iso-8859-1?Q?M=E4kel=E4?= <sajuma@utu.fi>
Organization: -
X-Mailer: Mozilla 4.77 [en] (X11; U; Linux 2.2.19 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: "Yaron M. Minsky" <yminsky@cs.cornell.edu>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Functorizing large collections of modules
References: <1016424584.26193.42.camel@dragonfly.localdomain> 
		<87vgbu2qsd.dlv@wanadoo.fr> <1016453982.27588.53.camel@dragonfly.localdomain>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

"Yaron M. Minsky" wrote:
> > > Conceptually what I want is a single structure like this:
> > >
> > > module Library(ZZp:ZZpSig) =
> > > struct
> > >
> > >   module Foo =
> > >   struct ... end
> > >
> > >   module Bar =
> > >   struct ... end
> > >
> > >   ...
> > >
> > > end

what i have used is:

foo.ml:

module Library (ZZp:ZZpSig) =
struct
  module Foo = struct ... end
end

bar.ml:

module Library (ZZp:ZZpSig) =
struct
  include Foo.Library (ZZp)
  module Bar = struct ... end
end

quux.ml:

module Library (ZZp:ZZpSig) =
struct
  include Bar.Library (ZZp)
  module Quux = struct ... end
end

etc.

there are still few problems, but perhaps this is good enough


> > >
> > > That way, all the interior modules (Foo, Bar) get to reference the same
> > > ZZp, without having to functorize the individual modules.  So, what I'd
> > > like is to be able to do this without sticking the modules Foo and Bar
> > > into the same single large unmanageable file.
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

