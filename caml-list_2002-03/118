Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA00705; Mon, 18 Mar 2002 14:10:54 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA01699 for <caml-list@pauillac.inria.fr>; Mon, 18 Mar 2002 14:10:53 +0100 (MET)
Received: from dpt-info.u-strasbg.fr (dpt-info.u-strasbg.fr [130.79.44.193])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g2IDArH15528
	for <caml-list@inria.fr>; Mon, 18 Mar 2002 14:10:53 +0100 (MET)
Received: (from luther@localhost)
	by dpt-info.u-strasbg.fr (8.9.3/8.9.3) id OAA28920;
	Mon, 18 Mar 2002 14:11:23 +0100
Date: Mon, 18 Mar 2002 14:11:23 +0100
From: Sven <luther@dpt-info.u-strasbg.fr>
To: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
Cc: tim@fungible.com, caml-list@inria.fr
Subject: Re: [Caml-list] Big executables from ocamlopt; dynamic libraries again
Message-ID: <20020318141123.A28677@dpt-info.u-strasbg.fr>
References: <9601-Sat16Mar2002094255-0800-tim@fungible.com> <20020318101225C.garrigue@kurims.kyoto-u.ac.jp>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0.1i
In-Reply-To: <20020318101225C.garrigue@kurims.kyoto-u.ac.jp>; from garrigue@kurims.kyoto-u.ac.jp on Mon, Mar 18, 2002 at 10:12:25AM +0900
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, Mar 18, 2002 at 10:12:25AM +0900, Jacques Garrigue wrote:
> You're right, but there is a bit more about dynamic linking.
> A major problem with using dynamic linking with ocaml (in particular
> with native code), is that your program come cut into small pieces,
> and you must be sure that they are all compatible. Somebody posted
> recently about problems when upgrading ocaml, and part of it is caused
> by incompatibilities in the binary format between versions. Just
> imagine the reaction of your user when, after having loaded various
> packages required for your program, he only gets an error message or a
> segmentation fault when trying to run it.

You just would need a propper versionning scheme for ocaml libraries, which
follow strict rules. This way, if you do incompatibles changes to a library
(the signature changes) you bump the version number, and everyone will know
about it. This would be a big gain even if we are not linking statically.

One could even imagine a scheme were there is support for compatible
signatures changes or such (adding functions and so on), i guess the module
type system is able to offer this easily.

Friendly,

Sven Luther
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

