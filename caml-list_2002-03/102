Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA26284; Fri, 15 Mar 2002 16:22:15 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA26500 for <caml-list@pauillac.inria.fr>; Fri, 15 Mar 2002 16:22:14 +0100 (MET)
Received: from mouette.ens-lyon.fr (mouette.ens-lyon.fr [140.77.167.4])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g2FFMEv27292
	for <caml-list@inria.fr>; Fri, 15 Mar 2002 16:22:14 +0100 (MET)
Received: from prometheus (unknown [140.77.128.183])
	by mouette.ens-lyon.fr (Postfix) with ESMTP id 6F3241475C5
	for <caml-list@inria.fr>; Fri, 15 Mar 2002 16:22:10 +0100 (CET)
From: "Boris Yakobowski" <Boris.Yakobowski@ens-lyon.fr>
To: <caml-list@inria.fr>
Subject: RE : [Caml-list] Ocamldot for functions and types
Date: Fri, 15 Mar 2002 16:22:33 +0100
Message-ID: <000c01c1cc35$3b1ffe50$b7804d8c@residence.enslyon.fr>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="US-ASCII"
Content-Transfer-Encoding: quoted-printable
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook, Build 10.0.2627
In-Reply-To: <000d01c1cc0e$75fd0850$0200a8c0@gateway>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> From : owner-caml-list@pauillac.inria.fr
[mailto:owner-caml-list@pauillac.inria.fr] De la part de Mattias Waldau
>
> Ocamldot can create a picture showing how ocaml files
> depend on each other.
>
> Is there a similar tool that shows how functions and
> types within a bigger program with many modules
> depend on each other?
>
> Or is there another internal representation
> where I can get that information? For example,=20
> the infered internal types would also
> be interesting.

I'm having more or less the same kind of needs. I'm currently modifying
a big project, which I did not write in the first place, and in which
many functions are never used.  Unfortunately, all the modules are
linked since some of the functions of each module are used.

What would be perfect is a command-line option which tells me which
function of a module has never been used. I realize this might not be
easy because (for example) of functors. Another solutions would be to
print (during link phase) which functions are effectively called. That
way it would become possible to find out which are never used.

Since Caml is a project a bit too large to be understood in two or three
weeks, could someone give me some clues about which files I should look
into for that kind of modifications (I just want to put some
print_string at key points, I do not intend to make deep changes).


Boris Yakobowski

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

