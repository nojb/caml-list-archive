Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA17104; Sat, 23 Mar 2002 23:49:06 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA17345 for <caml-list@pauillac.inria.fr>; Sat, 23 Mar 2002 23:49:05 +0100 (MET)
Received: from mel-rto3.wanadoo.fr (smtp-out-3.wanadoo.fr [193.252.19.233])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g2NMn5510986
	for <caml-list@inria.fr>; Sat, 23 Mar 2002 23:49:05 +0100 (MET)
Received: from mel-rta4.wanadoo.fr (193.252.19.58) by mel-rto3.wanadoo.fr; 23 Mar 2002 23:49:05 +0100
Received: from oops (193.252.189.115) by mel-rta4.wanadoo.fr; 23 Mar 2002 23:48:44 +0100
Received: from david by oops with local (Exim 3.34 #1 (Debian))
	id 16ouJX-0002Gi-00; Sat, 23 Mar 2002 23:48:43 +0100
To: Andrew Birkett <adb@tardis.ed.ac.uk>
Cc: <caml-list@inria.fr>
Subject: Re: [Caml-list] Profiling
References: <Pine.GS4.4.33.0203141543480.7033-100000@davros.tardis.ed.ac.uk>
From: David MENTRE <david.mentre@wanadoo.fr>
Organization: none
Date: 23 Mar 2002 23:48:43 +0100
In-Reply-To: <Pine.GS4.4.33.0203141543480.7033-100000@davros.tardis.ed.ac.uk>
Message-ID: <87lmci99ys.fsf@wanadoo.fr>
Lines: 28
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.1
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Andrew Birkett <adb@tardis.ed.ac.uk> writes:

> Ah! Let me try that one again ...
> 
> Is it possible to get a profile of execution time of a bytecode program.
> Ocamlprof gives execution counts for bytecode programs, and you can gprof
> native-compiled programs for execution times.  Why can't you profile
> execution times with bytecode programs?

You can (even if I doubt of its usefulness) :

 1. build an ocaml with "-pg" option to cc 
    ('./configure -prefix "gcc -pg" && make world && make install')

 2. make your byte code ocaml program with the ocamlc made in step 1

 3. run your program, it should produce a "gmon.out" file

 4. run gprof on ocamlrun, with the "gmon.out" file in the same
    directory as ocamlrun

 5. admire the wonderful produced statistics :-)


Best regards,
david
-- 
 david.mentre@wanadoo.fr
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

