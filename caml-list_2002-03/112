Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA30044; Mon, 18 Mar 2002 11:12:20 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA29121 for <caml-list@pauillac.inria.fr>; Mon, 18 Mar 2002 11:12:19 +0100 (MET)
Received: from nef.ens.fr (nef.ens.fr [129.199.96.32])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g2IACJj14588
	for <caml-list@inria.fr>; Mon, 18 Mar 2002 11:12:19 +0100 (MET)
Received: from clipper.ens.fr (clipper-gw.ens.fr [129.199.1.22])
          by nef.ens.fr (8.10.1/1.01.28121999) with ESMTP id g2IACIp11754
          for <caml-list@inria.fr>; Mon, 18 Mar 2002 11:12:18 +0100 (CET)
Received: from (george@localhost) by clipper.ens.fr (8.9.2/jb-1.1)
Date: Mon, 18 Mar 2002 11:12:18 +0100
From: Nicolas George <nicolas.george@ens.fr>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Big executables from ocamlopt; dynamic libraries again
Message-ID: <20020318111218.A9401@clipper.ens.fr>
References: <9601-Sat16Mar2002094255-0800-tim@fungible.com> <20020318101225C.garrigue@kurims.kyoto-u.ac.jp> <1191-Sun17Mar2002193326-0800-tim@fungible.com>
Mime-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-md5;
	protocol="application/pgp-signature"; boundary="x+6KMIRAuhnl3hBn"
Content-Disposition: inline
User-Agent: Mutt/1.2.5.1i
In-Reply-To: <1191-Sun17Mar2002193326-0800-tim@fungible.com>; from tim@fungible.com on Mon, Mar 18, 2002 at 03:39:28AM +0000
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


--x+6KMIRAuhnl3hBn
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

L'octidi 28 vent=F4se, an CCX, Tim Freeman a =E9crit=A0:
> I see the same sort of thing happening in /usr/lib/ocaml/stdlib.a, so
> lablgtk is not alone there.  If you make an object, you load oo.o from
> stdlib.a, which defines an unrelated function that uses random
> numbers, so static linking then grabs random.o. =20

Something I dislike in OCaml since a lot of time is the mixing of
modules of compilation units. Why should a module be in only one file? A
solution to that could be an additionnal feature to the compiler:

ocamlc -m -o module.cmi module1.cmi module2.cmi module3.cmi

Then the module.cmi interface would hold all the values and types of
module[123].cmi, along with a special information (like the external
information): "to find the foobar value, you must look in the module2
module".

So huge modules could be split into smaller compilation --and linking--
units.

--x+6KMIRAuhnl3hBn
Content-Type: application/pgp-signature
Content-Disposition: inline

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.0.5 (SunOS)
Comment: Pour information voir http://www.gnupg.org

iD8DBQE8lb2BsGPZlzblTJMRAjs7AKC3YIB/kFguiQ4fvPTIPgxVwhIEwACeLSjI
dFbIQbCa1kPVB+hQBXfvF/A=
=LrVA
-----END PGP SIGNATURE-----

--x+6KMIRAuhnl3hBn--
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

