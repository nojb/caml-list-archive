Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA01499; Fri, 22 Mar 2002 11:13:30 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA00816 for <caml-list@pauillac.inria.fr>; Fri, 22 Mar 2002 11:13:29 +0100 (MET)
Received: from mel-rto1.wanadoo.fr (smtp-out-1.wanadoo.fr [193.252.19.188])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g2MADKv06830
	for <caml-list@inria.fr>; Fri, 22 Mar 2002 11:13:26 +0100 (MET)
Received: from mel-rta8.wanadoo.fr (193.252.19.79) by mel-rto1.wanadoo.fr; 22 Mar 2002 11:13:13 +0100
Received: from warp (80.14.171.50) by mel-rta8.wanadoo.fr; 22 Mar 2002 11:13:09 +0100
Message-ID: <003201c1d18a$0082aae0$be00a8c0@warp>
From: "Warp" <warplayer@free.fr>
To: "OCaml" <caml-list@inria.fr>
References: <20020320213925.A25391@pauillac.inria.fr> <003001c1d0e2$9129b320$0b01a8c0@mit.edu> <20020321191028.A18937@pauillac.inria.fr>
Subject: Re: [Caml-list] The DLL-hell of O'Caml
Date: Fri, 22 Mar 2002 11:11:58 +0100
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2919.6700
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2919.6700
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> Xavier Leroy wrote :
>
> Again, I don't have anything against binary distributions, as long as
> there's an underlying source distribution and recompilation manager
> that lets me bring things up to date if a binary incompatibility
> arises.  RPMs get close to this but lack a "rebuild and install what
> needs to be recompiled" command.  Maybe Debian's packages or BSD ports
> are better in this respect.

Are you expecting all the OCaml developpers to distribute full source code
with each of the binary distribution they're making ? That's perhaps
realistic from a Linux/FSF point of view, but not from a Windows one.... To
enable the widespread of such a good language, the dev community needs solid
and useful libraries to build up a complete dev environment - including DB
access, Network , mathematics, drawing, etc... This work has already start
but some won't release their sources because they're in businness or because
sources are not "clean" enough and releasing them in a proper way would cost
a lot of time (and money)... or many many many reasons which have made lots
of commonly C/C++ used libraries been closed source.

I have worked a lot with Dynlink, and currently the main lack is to enable
"dynamic-link at load-time". That is, adding a keyword ( you're writing for
example "external" instead of "open" ) and then ocamlrun will load the CMA
at startup, check the interface, and do the linking.

If you combine such a feature with the ability to check only the equality
between the sub-interface of the module your program is using , then you're
not breaking type-safe at all, and you allow binary-only-distribution.

With a little bit of versionning, that'll be perfect :)

Nicolas Cannasse
the only window ocaml user (?) :-)

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

