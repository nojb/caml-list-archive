Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA11394; Thu, 2 May 2002 17:40:49 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA11387 for <caml-list@pauillac.inria.fr>; Thu, 2 May 2002 17:40:48 +0200 (MET DST)
Received: from sunny.pacific.net.au (sunny.pacific.net.au [203.25.148.40])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g42FekX11056
	for <caml-list@inria.fr>; Thu, 2 May 2002 17:40:47 +0200 (MET DST)
Received: from wisma.pacific.net.au (wisma.pacific.net.au [210.23.129.72])
          by sunny.pacific.net.au with ESMTP
          id g42FeWXt016614; Fri, 3 May 2002 01:40:33 +1000 (EST)
Received: from ozemail.com.au (ppp29.dyn71.pacific.net.au [202.7.71.29])
        by wisma.pacific.net.au with ESMTP
        id BAA22121; Fri, 3 May 2002 01:40:24 +1000 (EST)
Message-ID: <3CD15DE8.7070408@ozemail.com.au>
Date: Fri, 03 May 2002 01:40:24 +1000
From: John Max Skaller <skaller@ozemail.com.au>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.2.1) Gecko/20010901
X-Accept-Language: en-us
MIME-Version: 1.0
To: Markus Mottl <markus@oefai.at>
CC: John Prevost <visigoth@cs.cmu.edu>,
        OCaml Mailing list <caml-list@inria.fr>
Subject: Re: [Caml-list] Breaking out of iterative loops
References: <20020430202706.GA6791@vincent> <200204302331.32905.johan.baltie@wanadoo.fr> <3CD08EE3.9010202@ozemail.com.au> <863cxbmgww.fsf@laurelin.dementia.org> <20020502083335.GB16030@fichte.ai.univie.ac.at>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Markus Mottl wrote:

>On Wed, 01 May 2002, John Prevost wrote:
>
>>The drawback to allowing:
>>
>>let rec ones = 1 :: ones
>>
>>and such expressions is that when looking at the definition of, for
>>example, 'a list and length, one would expect it to be guaranteed that
>>length terminates.  Since you can't prevent recursive use of
>>constructors, well, you can no longer guarantee that.
>>
>
>I second this. Does anybody here really benefit from such cyclic
>structures?
>
Well .. don't they make a good representation of recursive types?

-- 
John Max Skaller, mailto:skaller@ozemail.com.au
snail:10/1 Toxteth Rd, Glebe, NSW 2037, Australia.
voice:61-2-9660-0850




-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

