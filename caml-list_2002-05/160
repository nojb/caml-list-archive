Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA16225; Mon, 13 May 2002 21:31:18 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA01133 for caml-list@pauillac.inria.fr; Mon, 13 May 2002 21:31:17 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA18700 for <caml-list@pauillac.inria.fr>; Mon, 13 May 2002 16:33:23 +0200 (MET DST)
Received: from kruuna.Helsinki.FI (kruuna.helsinki.fi [128.214.205.14])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g4DEXNr03265
	for <caml-list@inria.fr>; Mon, 13 May 2002 16:33:23 +0200 (MET DST)
Received: (from lealanko@localhost)
	by kruuna.Helsinki.FI (8.11.6/8.10.1) id g4DEXMC05420;
	Mon, 13 May 2002 17:33:22 +0300 (EEST)
Date: Mon, 13 May 2002 17:33:21 +0300
From: Lauri Alanko <la@iki.fi>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Turning off type-checking
Message-ID: <20020513173320.A4630@kruuna.Helsinki.FI>
References: <20020513133102.GB9777@kiefer.ai.univie.ac.at>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <20020513133102.GB9777@kiefer.ai.univie.ac.at>; from markus@oefai.at on Mon, May 13, 2002 at 03:31:02PM +0200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> It would be really nice if there were some command-line flag for the
> OCaml-compilers which turns off every check that is not required under the
> assumption that the given OCaml-code is (type) correct as is guaranteed in
> my case. Would this be easily possible? What else could I do to reduce the
> amount of work the OCaml-compiler has to do? Insert Obj.magic everywhere?

How about enabling -rectypes, defining

type t = t -> t

, casting everything to t with Obj.magic and then operating with this
pseudo-typeless language, and finally casting the values back to their real
types? Then at least you can do function application without casting all the
time.


Lauri Alanko
la@iki.fi
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

