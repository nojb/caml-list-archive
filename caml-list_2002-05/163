Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA02253; Mon, 13 May 2002 23:46:21 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA02248 for <caml-list@pauillac.inria.fr>; Mon, 13 May 2002 23:46:20 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from gogol.zorgol (Mix-Montsouris-109-4-70.abo.wanadoo.fr [80.9.126.70])
	by nez-perce.inria.fr (8.11.1/8.11.1) with SMTP id g4DLkFr12359
	for <caml-list@inria.fr>; Mon, 13 May 2002 23:46:15 +0200 (MET DST)
Received: (qmail 13928 invoked by uid 1001); 13 May 2002 21:47:09 -0000
Date: Mon, 13 May 2002 23:47:09 +0200
From: Berke Durak <berke@altern.org>
To: Markus Mottl <markus@oefai.at>, caml-list@inria.fr
Subject: Re: [Caml-list] Turning off type-checking
Message-ID: <20020513234709.A3920@gogol.zorgol>
References: <20020513133102.GB9777@kiefer.ai.univie.ac.at>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <20020513133102.GB9777@kiefer.ai.univie.ac.at>; from markus@oefai.at on Mon, May 13, 2002 at 03:31:02PM +0200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, May 13, 2002 at 03:31:02PM +0200, Markus Mottl wrote:
> Hello,

Hi
 
>...
>
> Needless to say that I get into trouble when I actually want to interpret
> or compile these models to evaluate them on new data. Type checking just
> takes an awful amount of time, in fact much longer than the learning
> algorithm needs for model generation...

I'm conservatively assuming that your code uses just classical types
(guessing that type-checking objects etc. can be more costly).

Could the type experts on this list confirm or deny that :
	- For ``classical'' types, type-checking amounts to term unification.
	- Term unification can be done in worst-case linear-time.
	- Ocaml's unification algorithm is worst-case suboptimal.
	- This explains the ``awful amount of time'' needed for type checking.

If these are true, a fifth question arises :
	- Is it worth to make Ocaml's type checking worst-case optimal ? How will
this affect real average-case performance ?
-- 
Berke Durak
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

