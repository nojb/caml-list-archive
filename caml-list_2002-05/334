Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA23415; Mon, 27 May 2002 15:34:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA23419 for caml-list@pauillac.inria.fr; Mon, 27 May 2002 15:34:34 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA18419 for <caml-list@pauillac.inria.fr>; Mon, 27 May 2002 11:39:10 +0200 (MET DST)
Received: from julie.univ-savoie.fr (univax.univ-savoie.fr [193.48.120.32])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g4R9dAf14046
	for <caml-list@inria.fr>; Mon, 27 May 2002 11:39:10 +0200 (MET DST)
Received: from post.bourget.univ-savoie.fr (post.bourget.univ-savoie.fr [193.48.120.73])
          by julie.univ-savoie.fr (8.9.3/jtpda-5.3.3) with ESMTP id LAA39014
          ; Mon, 27 May 2002 11:39:08 +0200 (CEST)
Received: from d85.lama.univ-savoie.fr (d85.lama.univ-savoie.fr [193.48.123.85])
          by post.bourget.univ-savoie.fr (8.12.1/jtpda-5.4) with ESMTP id g4R9d4xZ007579
          ; Mon, 27 May 2002 11:39:04 +0200
Subject: Re: [Caml-list] Garbage collector and memory fragmentation
From: Christophe Raffalli <raffalli@univ-savoie.fr>
Cc: francois bereux <francois.bereux@fr.thalesgroup.com>, caml-list@inria.fr
In-Reply-To: <20020527101912.C15615@pauillac.inria.fr>
References: <3CEDEA7C.D2C9B8D6@fr.thalesgroup.com> 
	<20020527101912.C15615@pauillac.inria.fr>
Content-Type: text/plain; charset=ISO-8859-15
Content-Transfer-Encoding: quoted-printable
X-Mailer: Ximian Evolution 1.0.5-1mdk 
Date: 27 May 2002 11:39:18 +0200
Message-Id: <1022492358.4015.12.camel@d85.lama.univ-savoie.fr>
Mime-Version: 1.0
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Le lun 27/05/2002 =E0 10:19, Xavier Leroy a =E9crit :
> > <This question is not specific to OCaml, but rather to garbage
> > collection.>
> >=20

> > My question is : does a garbage collector (for instance the one in
> > OCaml) deal with this kind of issues ( defragmentation of the memory )
> > in a situation similar to mine : many small lists of elements ?


Another point: the standard allocation (malloc) works in general with
pages: a page will really be freed if nothing in the page is used and
very often (always ?) malloc is bad at reusing pieces of a page that
have been deallocated.

Laguage with GC always deals with that issue (never perfectly, except
for stop&copy or other copacting GC) ! Otherwise, they will fail exactly
on the situation you describe which are very common in functionnal
programs.

--=20
Christophe Raffalli
Universit=E9 de Savoie
Batiment Le Chablais, bureau 21
73376 Le Bourget-du-Lac Cedex

t=E9l: (33) 4 79 75 81 03
fax: (33) 4 79 75 87 42
mail: Christophe.Raffalli@univ-savoie.fr
www: http://www.lama.univ-savoie.fr/~RAFFALLI
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

