Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA10035; Fri, 17 May 2002 15:45:26 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA09858 for <caml-list@pauillac.inria.fr>; Fri, 17 May 2002 15:45:25 +0200 (MET DST)
Received: from d12lmsgate-3.de.ibm.com (d12lmsgate-3.de.ibm.com [195.212.91.201])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g4HDjOr08421
	for <caml-list@inria.fr>; Fri, 17 May 2002 15:45:24 +0200 (MET DST)
Received: from d12relay01.de.ibm.com (d12relay01.de.ibm.com [9.165.215.22])
	by d12lmsgate-3.de.ibm.com (8.12.3/8.12.3) with ESMTP id g4HDjMM8062140
	for <caml-list@inria.fr>; Fri, 17 May 2002 15:45:23 +0200
Received: from d10hubm1.telaviv.ibm.com (d10ml001.telaviv.ibm.com [9.148.216.55])
	by d12relay01.de.ibm.com (8.11.1m3/8.11.2) with ESMTP id g4HDjMs24802
	for <caml-list@inria.fr>; Fri, 17 May 2002 15:45:22 +0200
Subject: [Caml-list] Camlp4
To: caml-list@inria.fr
X-Mailer: Lotus Notes Release 5.0.7  March 21, 2001
Message-ID: <OFB30BE5CB.2BBF2805-ONC2256BBC.00481D05@telaviv.ibm.com>
From: "Ohad Rodeh" <ORODEH@il.ibm.com>
Date: Fri, 17 May 2002 16:19:32 +0300
X-MIMETrack: Serialize by Router on D10ML001/10/M/IBM(Release 5.0.9a |January 7, 2002) at
 17/05/2002 16:45:22
MIME-Version: 1.0
Content-type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


List,
   I'm writing to check whether Camlp4 remains or not in the Caml
distribution.

I have a 60000 line system written in Caml, and I was seriously considering
using
Camlp4 for conditional compilation of debugging versions of some of my
modules.

      Ohad.

PS
    While I don't develop Caml, I personally think that:
o Caml needs a preprocessor, at least for conditional compilation
o The preprocessor needs to be in the primary distribution (not as an
add-on)
o Since there is a lot of code written in the old syntax, changing the
syntax is out
   of the question.
o The above point means that a preprocessor is needed to experiment with
new
    syntax without breaking the old syntax.

-----------------------------------------------------------------------------------

Ohad Rodeh
tel: +972-9-9527641
IBM Haifa, storage research


                                                                                                                         
                      Christopher Quinn                                                                                  
                      <cq@htec.demon.co.uk>         To:                                                                  
                      Sent by:                      cc:       caml-list@inria.fr                                         
                      owner-caml-list@pauill        Subject:  [Caml-list] Re: Camlp4/OCaml                               
                      ac.inria.fr                                                                                        
                                                                                                                         
                                                                                                                         
                      17/05/2002 02:22                                                                                   
                      Please respond to                                                                                  
                      Christopher Quinn                                                                                  
                                                                                                                         
                                                                                                                         



How can camlp4 be unimportant or a waste of time!

Here are some things I find useful about it:

o conditional compilation

o ability to add command line options to switch between one's own 'safe'
modules and their 'unsafe' versions which can only be done in the case
of Arrays and Strings with the standard compiler.

o one can always modify one's own copy of the parser,
but that's a bother when something in the original changes, and besides,
camlp4's extension mechanism allows a compact and manageable format.

o no matter how one redefines the syntax, just running the source
through camlp4 can reconstruct it in the vanilla form. So no one ever
needs to suffer another's idea of perfection!

o camlp4 seems to me to be one way to avoid the endless creation of
mini-languages for specific tasks that end up trying to do stuff beyond
their limited design. Better to start with the expressivity of the likes
of caml, maybe cutting down, and augment with p4 extensions. I'm
planning to embed some sql style DDL for my project.

o I can write code without_the_god_damn_awful_underscore character
stressing my hands and use-an-alternative-even
(though-I-am-no-fan-of-lisp)!


I felt these reasons were compelling enough to justify  switching to
camlp4 as my default parser.

The above doubtless has no bearing on the technical arguments for not
having camlp4 in the distribution.
I just want to say I think camlp4 is important and indispensible.

- chris

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives:
http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ:
http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners




-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

