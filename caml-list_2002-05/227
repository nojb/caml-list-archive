Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA18140; Thu, 16 May 2002 19:04:21 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA18156 for <caml-list@pauillac.inria.fr>; Thu, 16 May 2002 19:04:20 +0200 (MET DST)
Received: from hotmail.com (f247.law10.hotmail.com [64.4.15.247])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g4GH4J113467
	for <caml-list@inria.fr>; Thu, 16 May 2002 19:04:20 +0200 (MET DST)
Received: from mail pickup service by hotmail.com with Microsoft SMTPSVC;
	 Thu, 16 May 2002 10:04:18 -0700
Received: from 213.243.180.250 by lw10fd.law10.hotmail.msn.com with HTTP;
	Thu, 16 May 2002 17:04:18 GMT
X-Originating-IP: [213.243.180.250]
From: "Vesa Karvonen" <vesa_karvonen@hotmail.com>
To: caml-list@inria.fr
Subject: [Caml-list] Overlapping features of variant types and tuples in Ocaml
Date: Thu, 16 May 2002 20:04:18 +0300
Mime-Version: 1.0
Content-Type: text/plain; format=flowed
Message-ID: <F2470BwSNsiXxfzhBwS00017f62@hotmail.com>
X-OriginalArrivalTime: 16 May 2002 17:04:18.0960 (UTC) FILETIME=[B78DD100:01C1FCFB]
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Consider the following code:

  type variant =
    | Tuple of (int * int)
    | Non_tuple of int * int

  let contents variant =
    match variant with
      | Tuple x ->
          x
      | Non_tuple x ->
          x

As you can tell, the above code does not compile with Ocaml 3.04:

  The constructor Non_tuple expects 2 argument(s),
  but is here applied to 1 argument(s)

Is there a good reason for this behaviour or would it be purely
beneficial to remove the special handling of type lists in variants?


_________________________________________________________________
Send and receive Hotmail on your mobile device: http://mobile.msn.com

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

