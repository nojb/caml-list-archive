Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA13042; Fri, 17 May 2002 17:31:23 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA13105 for <caml-list@pauillac.inria.fr>; Fri, 17 May 2002 17:31:22 +0200 (MET DST)
Received: from kiefer.ai.univie.ac.at (kiefer.ai.univie.ac.at [131.130.174.157])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g4HFVKf00385;
	Fri, 17 May 2002 17:31:21 +0200 (MET DST)
Received: (from markus@localhost)
	by kiefer.ai.univie.ac.at (8.9.3/8.9.3/Debian 8.9.3-21) id RAA28023;
	Fri, 17 May 2002 17:31:20 +0200
Date: Fri, 17 May 2002 17:31:20 +0200
From: Markus Mottl <markus@oefai.at>
To: Pierre Weis <pierre.weis@inria.fr>
Cc: Alessandro Baretta <alex@baretta.com>, caml-list@inria.fr
Subject: Re: [Caml-list] Camlp4/OCaml [was: Generating C stubs]
Message-ID: <20020517153120.GB27012@kiefer.ai.univie.ac.at>
Mail-Followup-To: Pierre Weis <pierre.weis@inria.fr>,
	Alessandro Baretta <alex@baretta.com>, caml-list@inria.fr
References: <3CE44F7A.6040509@baretta.com> <200205171432.QAA11555@pauillac.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200205171432.QAA11555@pauillac.inria.fr>
User-Agent: Mutt/1.3.26i
Organization: Austrian Research Institute for Artificial Intelligence
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 17 May 2002, Pierre Weis wrote:
> Section IV: When to use parentheses within an expression

I know that I should write OCaml-programs rather than participate in
yet another heating debate on syntax, but I just cannot resist...

> If you learn the rules, if you follow those guidelines, and still
> experience problems, please let me know, since I used those simple
> principles for years with thousands of students (I really mean several
> thousands students not several students) and they had no problems once
> they had understood and learned those rules.

It is not an argument in favour of certain syntactic rules that "people
have no problems once they have understood and learned those rules". I
agree that those rules for OCaml are not overly many and can indeed be
understood after some time. But why shouldn't we make this process even
easier by eliminating a few of them or making them simpler to comprehend
and apply?

There are cases where the current syntax can byte you by leading to
programs that compile nicely but exhibit unintended behaviour. This
certainly occurs very, very rarely and can be avoided when the programmer
happens to be in a somewhat sane state of mind. The problem is that
(at least what concerns me ;) the latter is not always the case. Syntax
designers, too, are probably well-advised to follow the principle:
"Never trust human programmers!".

> On the other hand, I agree with you that if you don't know the rules
> for parens in Caml, you certainly should have problems to write your
> programs. This is the same problems as the one of young people at
> school that use to claim that mathematics _HAVE_ (*) syntactic
> problems because they never know where to put parens in

We all have to learn conventions and standards. This does not mean that
all of them are equally clean and concise. To me OCaml is syntactically
much more beautiful than most mainstream languages. Why not let the
latter even further behind in the dust?

This all is not a plea for the Revised Syntax. IMHO, there are some things
it fixes, others that could be fixed differently and cases where we would
still need a fix. I am sure that Daniel would be prepared to discuss
this and eventually "revise the Revised Syntax". But it seems obvious
that syntactic issues are considered a non-topic by the project leaders.

My guess is that it is really pragmatic issues (costs of change; more
urgent issues) that prevent this discussion. If it is so, then why not
be honest about it?  I could live with the argument that you consider
such a step too costly, but have some sense of indirection when syntactic
problems are just discussed away.

Best regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

