Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id BAA31372; Wed, 15 May 2002 01:17:33 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA31368 for <caml-list@pauillac.inria.fr>; Wed, 15 May 2002 01:17:32 +0200 (MET DST)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g4ENHV919393
	for <caml-list@inria.fr>; Wed, 15 May 2002 01:17:31 +0200 (MET DST)
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.9.3/8.9.3/Debian 8.9.3-21) id BAA22199;
	Wed, 15 May 2002 01:17:19 +0200
Date: Wed, 15 May 2002 01:17:19 +0200
From: Markus Mottl <markus@oefai.at>
To: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Turning off type-checking
Message-ID: <20020514231719.GA21332@fichte.ai.univie.ac.at>
Mail-Followup-To: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>,
	caml-list@inria.fr
References: <20020513133102.GB9777@kiefer.ai.univie.ac.at> <20020514233326Q.garrigue@kurims.kyoto-u.ac.jp>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20020514233326Q.garrigue@kurims.kyoto-u.ac.jp>
User-Agent: Mutt/1.3.26i
Organization: Austrian Research Institute for Artificial Intelligence
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, 14 May 2002, Jacques Garrigue wrote:
> One thing you might want to try is to write your own interpreter for
> your subset of ocaml. According to the code snippets you posted, it is
> restricted enough, so that should be easy. Then you can experiment
> without compiling, and compile later if you really need to.

Being so lazy, I thought that I could skip writing an interpreter,
because I needed a pretty-printer anyway. And OCaml-code is just fine
for this purpose...

> Note that with some tricks your interpreter can share data
> representation with ocaml, so that your functions could be called
> directly from ocaml (with a bit of magic, of course).

This is an interesting suggestion, thanks!

> As long as your type are not really huge (like in Alain's example), and
> you are not using subtyping, I don't think that there is much room for
> improvement in the compiler.  This said, we find a complexity bug once
> in a while. One of them was quite serious: type checking was done twice
> for arguments in applications. Usually you won't notice it, but if you
> have an application inside an argument inside an argument... this was
> exponential! Unfortunately I don't remember whether this was corrected
> before or after 3.04.

I don't think that I really hit the exponential wall anywhere so it's
probably just that type-checking takes much longer than I had expected.
Well, I can live with it...

Regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

