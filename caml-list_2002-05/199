Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA00285; Wed, 15 May 2002 03:18:24 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA00288 for <caml-list@pauillac.inria.fr>; Wed, 15 May 2002 03:18:23 +0200 (MET DST)
Received: from favie.faith.gr.jp (favie.faith.gr.jp [61.127.175.250])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g4F1ILn10236
	for <caml-list@inria.fr>; Wed, 15 May 2002 03:18:21 +0200 (MET DST)
Received: from localhost (dhcp7.faith.gr.jp [192.168.1.17])
	by favie.faith.gr.jp (8.9.3/8.9.3) with ESMTP id KAA05262
	for <caml-list@inria.fr>; Wed, 15 May 2002 10:18:19 +0900
To: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml packaging problems
In-Reply-To: <20020515005240.A629@ice.gerd-stolpmann.de>
References: <20020430200405.A16880@dpt-info.u-strasbg.fr>
	<20020514105452.B11894@pauillac.inria.fr>
	<20020515005240.A629@ice.gerd-stolpmann.de>
X-Mailer: Mew version 1.94.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20020515101817V.garrigue@kurims.kyoto-u.ac.jp>
Date: Wed, 15 May 2002 10:18:17 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 29
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

While I was trying to answer on the limitations of the Unix approach,
Gerd Stolpmann posted a much better and well-argument description of
the problem.

To complement this, I would add a suggestion to make the current
scheme work more smoothly.  It takes its inspiration from java's
classpath, which seems to work pretty well:
Couldn't we replace the single directory in OCAMLLIB by a path.
Alternatively, there could be an OCAMLPATH, taking precedence on
OCAMLLIB.
This path would replace the current stdlib for everything:
* it would be a default path for searching caml libraries and dlls
* ld.conf's under each of its elements would be read in its order
* +dirname on the command line would expand to elt/dirname for each
  of its elements
* findlib might honour it too

This would in particular solve the current problem with users who do
not have write access on the main library tree, and allow more
flexibility. This is of course orthogonal to the dependency handling
done by findlib.

For library designers, they would just have to honour this
variable by installing by default under the first element of this
path, adding the directory to elt/ld.conf if they also install dlls.

In my opinion simple (one variable), standard (think Java), and clean.

Jacques
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

