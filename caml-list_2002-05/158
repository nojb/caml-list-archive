Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA21282; Mon, 13 May 2002 18:05:19 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA20628 for <caml-list@pauillac.inria.fr>; Mon, 13 May 2002 18:05:17 +0200 (MET DST)
Received: from sunny.pacific.net.au (sunny.pacific.net.au [203.25.148.40])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g4DG5Br05879
	for <caml-list@inria.fr>; Mon, 13 May 2002 18:05:16 +0200 (MET DST)
Received: from wisma.pacific.net.au (wisma.pacific.net.au [210.23.129.72])
          by sunny.pacific.net.au with ESMTP
          id g4DG54Xt020780; Tue, 14 May 2002 02:05:04 +1000 (EST)
Received: from ozemail.com.au (ppp71.dyn145.pacific.net.au [210.23.145.71])
        by wisma.pacific.net.au with ESMTP
        id CAA14237; Tue, 14 May 2002 02:05:01 +1000 (EST)
Message-ID: <3CDFE42C.2030305@ozemail.com.au>
Date: Tue, 14 May 2002 02:05:00 +1000
From: John Max Skaller <skaller@ozemail.com.au>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.2.1) Gecko/20010901
X-Accept-Language: en-us
MIME-Version: 1.0
To: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
CC: caml-list@inria.fr
Subject: Re: [Caml-list] Bug in typing polymorphic variants found
References: <200205101502.RAA0000022181@beaune.inria.fr>	<3CDBF8AD.5070000@ozemail.com.au> <20020513154639Z.garrigue@kurims.kyoto-u.ac.jp>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Jacques Garrigue wrote:

>I didn't try with 3.01, only with 3.04+10, and I get a segmentation
>fault on the first example.
>Since you use ocamlopt, I couldn't get any debugging information, so I
>tried again with ocamlc -g, and the error I get is a stack overflow.
>I expect there is a bug somewhere in your program...
>
All 30 or so regression tests and tutorial examples work correctly
with Ocaml 3.01.

When I add debuging print statements,
the bug doesn't always happen!

It crashes long before the first debugging print
if it crashes, and not at all if it executes even one of them.
There is no way I can try to find an infinite recursion
that doesn't happen when I add print statements.

I'm a very experienced programmer.  My code has some
exceptionally nasty recursions in it. I wouldn't be surprised
if some of them could go infinite .. but I'd expect Ocaml 3.01
to segfault then too. It doesn't. It generates exactly the expected
output, which compiles under g++ correctly, and executes correctly.

My code is pure ocaml, except for Big_num module.

-- 
John Max Skaller, mailto:skaller@ozemail.com.au
snail:10/1 Toxteth Rd, Glebe, NSW 2037, Australia.
voice:61-2-9660-0850




-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

