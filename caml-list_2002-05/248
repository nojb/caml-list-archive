Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA05216; Fri, 17 May 2002 12:40:49 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA05214 for caml-list@pauillac.inria.fr; Fri, 17 May 2002 12:40:48 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA02320 for <caml-list@pauillac.inria.fr>; Fri, 17 May 2002 10:18:30 +0200 (MET DST)
Received: from enseeiht.enseeiht.fr ([147.127.18.144])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g4H8ITr01289;
	Fri, 17 May 2002 10:18:29 +0200 (MET DST)
Received: from pegase.enseeiht.fr by enseeiht.enseeiht.fr; Fri, 17 May 2002 10:18:23 +0200 (MET DST)
X-Url: http://www.enseeiht.fr
Subject: Re: [Caml-list] Overlapping features of variant types and tuples in
	Ocaml
From: Marc Pantel <Marc.Pantel@enseeiht.fr>
To: Daniel de Rauglaudre <daniel.de_rauglaudre@inria.fr>
Cc: caml-list@inria.fr
In-Reply-To: <20020516211727.C2924@verdot.inria.fr>
References: <F2470BwSNsiXxfzhBwS00017f62@hotmail.com> 
	<20020516211727.C2924@verdot.inria.fr>
Content-Type: text/plain
Content-Transfer-Encoding: 7bit
X-Mailer: Ximian Evolution 1.0.5 
Date: 17 May 2002 10:17:15 +0200
Message-Id: <1021623436.1268.29.camel@pegase>
Mime-Version: 1.0
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi,

My purpose is not to start another flame war... I only want to give a 
point of view shared by many at work. And support the interesting work
done with CaMLP4.


> This is resolved by fixing the syntax of OCaml. But improving the
> syntax is supposed to be a loss of time by a lot of people.

Improving the syntax is certainly not a loss of time when the syntax is
EXTREMELY ambiguous... We are using CaML as the initial language in our
programming courses at our computer science engineering school ENSEEIHT
and students lose a lot of time introducing parenthesis en order to lift
the ambiguities in many constructs. 


As far as I know, the main use of CaML in France is teaching. Therefore,
improving its syntax is EXTREMELY important.

Also, if we want CaML to be used in Quality-certified industrial
context, we would be much more convincing with a less ambiguous syntax.

However, if the sole purpose of CaML is to develop research software,
I've been using it for years and I do not fall any more in the
ambiguities, therefore let's keep it this way.

If we want to develop its use in other contexts, let's improve its
syntax a bit in order to throw away ambiguities...


I also happen to teach compiler courses (therefore grammar design)...
One of the point we stress is non-ambiguous grammar. We've got a small
experience in purpose specific language design and we are now convinced
that LL(k) constraints ensures easy to read and to write programs...
Even, if the grammars are more complicated. We think that a language
should have a LL(k) grammar event if we use LR(k) tools that allows
left-recursive grammars.


No flame, please. However, all critics are welcomed.

Sorry for the poor english...

Let's not lose too much energy fighting over each others work...
Everything is interesting if it eases the use of CaML in other contexts.

Marc Pantel,
Associate-Professor in Computer Science,
ENSEEIHT, TOULOUSE, FRANCE
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

