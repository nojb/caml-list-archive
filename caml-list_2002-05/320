Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA18185; Fri, 24 May 2002 09:25:05 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA18409 for <caml-list@pauillac.inria.fr>; Fri, 24 May 2002 09:25:01 +0200 (MET DST)
Received: from gwsmtp.thomson-csf.com (gwsmtp.thomson-csf.com [195.101.39.226])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g4O7P0f02760
	for <caml-list@inria.fr>; Fri, 24 May 2002 09:25:00 +0200 (MET DST)
Received: from thomplex.thomson-csf.com (200.3.2.2) by gwsmtp.thomson-csf.com (NPlex 5.1.053)
        id 3CE9DBC400076D59 for caml-list@inria.fr; Fri, 24 May 2002 09:28:27 +0200
Received: from thomplex.thomson-csf.com (200.3.2.2) by thomplex.thomson-csf.com (NPlex 5.1.036)
        id 3CEA4A16000651E6 for caml-list@inria.fr; Fri, 24 May 2002 09:25:42 +0200
Received: from mes1.rm.tasfr.thales (61.14.31.2) by dexplex.detexis.thomson-csf.com (NPlex 5.1.053)
        id 3CDD13FD0002D22D for caml-list@inria.fr; Fri, 24 May 2002 09:24:55 +0200
Received: from mes1.rm.tasfr.thales (61.14.31.2) by mes1.rm.tasfr.thales (NPlex 5.1.053)
        id 3CC6209900023EE1 for caml-list@inria.fr; Fri, 24 May 2002 09:23:41 +0200
Received: from 61.25.85.156 by mes1.rm.tasfr.thales (InterScan E-Mail VirusWall NT); Fri, 24 May 2002 09:23:40 +0200
Message-ID: <3CEDEA7C.D2C9B8D6@fr.thalesgroup.com>
Date: Fri, 24 May 2002 09:23:40 +0200
From: francois bereux <francois.bereux@fr.thalesgroup.com>
X-Mailer: Mozilla 4.75 [fr]C-CCK-MCD   (WinNT; U)
X-Accept-Language: fr-FR
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: [Caml-list] Garbage collector and memory fragmentation
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

<This question is not specific to OCaml, but rather to garbage
collection.>

I have a program (in Fortran90) that uses many (> 100.000) small lists
of integers ( about 100 elements per list ). Each list is built
incrementally =3D> I allocate many small blocks. It appears that this
leads to memory fragmentation. For instance, even though I deallocate
all the lists, the memory used by the program does not seem to really
decrease.
My question is : does a garbage collector (for instance the one in
OCaml) deal with this kind of issues ( defragmentation of the memory )
in a situation similar to mine : many small lists of elements ?

I apologize if this question is too much off-topic from the list.

--
****************************************************
*   Fran=E7ois B=C9REUX
*
*   Departement Antennes & Radomes
*   THALES Systemes Aeroportes
*   Centre Ren=E9 Mouchotte
*   La Clef de Saint-Pierre
*   1, Boulevard Jean Moulin
*   F-78852 =C9lancourt Cedex
*   FRANCE
*
*   t=E9l : +33-1-34.59.73.12
*   fax : +33-1-34.59.70.54
*   m=E9l : francois.bereux@fr.thalesgroup.com
****************************************************


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

