Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA11810; Mon, 6 May 2002 09:31:15 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA11767 for <caml-list@pauillac.inria.fr>; Mon, 6 May 2002 09:31:14 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g467Rer06089;
	Mon, 6 May 2002 09:27:41 +0200 (MET DST)
Received: (from fpottier@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA11680; Mon, 6 May 2002 09:27:40 +0200 (MET DST)
Date: Mon, 6 May 2002 09:27:40 +0200
From: Francois Pottier <francois.pottier@inria.fr>
To: Andreas Rossberg <rossberg@ps.uni-sb.de>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Re: Encoding "abstract" signatures
Message-ID: <20020506092740.B11517@pauillac.inria.fr>
Reply-To: Francois.Pottier@inria.fr
References: <B1E4D3274D57D411BE8400D0B783FF32A8D72F@exchange1.cswv.com> <3CCD55BD.6DB352F5@ps.uni-sb.de> <20020429172853.A6314@pauillac.inria.fr> <3CCD794B.142F65D@ps.uni-sb.de> <20020430090732.A16788@pauillac.inria.fr> <000701c1f032$a69072c0$e8abfea9@melbourne> <20020430171846.A28745@pauillac.inria.fr> <000801c1f112$d4c266e0$e8abfea9@melbourne> <20020502094713.D27687@pauillac.inria.fr> <3CD107B5.E300E47E@ps.uni-sb.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Mailer: Mutt 1.0i
In-Reply-To: <3CD107B5.E300E47E@ps.uni-sb.de>; from rossberg@ps.uni-sb.de on Thu, May 02, 2002 at 11:32:37AM +0200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Andreas,

> So you cannot simply `reuse' T's quantifier.

You're right -- it seems difficult to obtain a compositional encoding of
O'Caml's module system. We would need, in the target system, one universal
quantification over a type of record kind to be somehow equivalent to a series
of universal quantifications over types of base kind. I guess that's what you
were saying from the very start, but it took me a while to see the problem.
It would be interesting to devise a type system that has this property. Didier
Rémy noticed the need for such a feature back in 1994 when writing `Dynamic
typing in polymorphic languages' (see section 4.2 of the SRC tech report). I
don't think he has a polished solution, though.

-- 
François Pottier
Francois.Pottier@inria.fr
http://pauillac.inria.fr/~fpottier/
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

