Return-Path: <nicolas.braudsantoni@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id B56047EE25
	for <caml-list@sympa.inria.fr>; Tue, 19 Nov 2013 23:16:02 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  nicolas.braudsantoni@gmail.com) identity=pra;
  client-ip=74.125.83.53;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="nicolas.braudsantoni@gmail.com";
  x-sender="nicolas.braudsantoni@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  nicolas.braudsantoni@gmail.com designates 74.125.83.53 as
  permitted sender) identity=mailfrom; client-ip=74.125.83.53;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="nicolas.braudsantoni@gmail.com";
  x-sender="nicolas.braudsantoni@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ee0-f53.google.com) identity=helo;
  client-ip=74.125.83.53;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="nicolas.braudsantoni@gmail.com";
  x-sender="postmaster@mail-ee0-f53.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkQDAHjii1JKfVM1lGdsb2JhbABZgz+DSb1rFg4BAQEBBwsLCRIqgiUBAQUjHQE5AwwBBQMCGAkhAgIPAiMBBQEcEwYCAQGHawMPBAGSWY9ajASDXIRKJw2IWhEBAQQMkj2BRwOQMIExgk+BeogniWJBgWSCcA
X-IPAS-Result: AkQDAHjii1JKfVM1lGdsb2JhbABZgz+DSb1rFg4BAQEBBwsLCRIqgiUBAQUjHQE5AwwBBQMCGAkhAgIPAiMBBQEcEwYCAQGHawMPBAGSWY9ajASDXIRKJw2IWhEBAQQMkj2BRwOQMIExgk+BeogniWJBgWSCcA
X-IronPort-AV: E=Sophos;i="4.93,732,1378850400"; 
   d="asc'?scan'208";a="36574195"
Received: from mail-ee0-f53.google.com ([74.125.83.53])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 19 Nov 2013 23:16:02 +0100
Received: by mail-ee0-f53.google.com with SMTP id b57so3577917eek.12
        for <caml-list@inria.fr>; Tue, 19 Nov 2013 14:16:01 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=sender:message-id:date:from:user-agent:mime-version:to:subject
         :references:in-reply-to:content-type;
        bh=OjGD3ELdqc+6tQ+UDqcVb+0S6jn6gGyOPzwlZOyk6qk=;
        b=Aqg6ub1Vhx6dydcmDj2pudszADFIrQUwvY+nGYnMZ5An9wq2hYMlIyuhS0kVY7iYNe
         s5YqtQsOrk5tS6Ub6xV96iUedLqBR+jx99reSSs3tvoxnkusKIf4MXD1nm9HJunAvvj3
         cHKiqy7Q7y0BkLeJsPdvZLAMkksFxhM5SKYBU3MuX8nLVJqXxQ5T543nX+VI0cVQ9BqM
         pbFE928pzdYT1S24ytTTQ8WJaxiEb9w1bB/zF8rXwIsVF0lFEFf2N7r4C2hmD57yLw8R
         e+ubw7Qo673DOtyDM1PPhJc9rH1qbfEACgO0jRzK/0YGsneCJuh2jgJ2bHWVQndIvbOy
         o0KQ==
X-Received: by 10.15.100.198 with SMTP id bn46mr31605877eeb.11.1384899361339;
        Tue, 19 Nov 2013 14:16:01 -0800 (PST)
Received: from [193.170.224.192] (m-192.vc-graz.ac.at. [193.170.224.192])
        by mx.google.com with ESMTPSA id g47sm53057281eeo.19.2013.11.19.14.15.59
        for <caml-list@inria.fr>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Tue, 19 Nov 2013 14:16:00 -0800 (PST)
Sender: Nicolas Braud-Santoni <nicolas.braudsantoni@gmail.com>
Message-ID: <528BE31E.70308@braud-santoni.eu>
Date: Tue, 19 Nov 2013 23:15:58 +0100
From: Nicolas Braud-Santoni <nicolas@braud-santoni.eu>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:24.0) Gecko/20100101 Thunderbird/24.0
MIME-Version: 1.0
To: caml-list@inria.fr
References: <20131118204426.GA14731@annexia.org> <1384819720.4083.57.camel@zotac> <CAC3Lx=ZrsHau9NicrwTjz-Lt7R5ysdrh4S3KVMOc1vZAAhJpvA@mail.gmail.com>
In-Reply-To: <CAC3Lx=ZrsHau9NicrwTjz-Lt7R5ysdrh4S3KVMOc1vZAAhJpvA@mail.gmail.com>
X-Enigmail-Version: 1.6
Content-Type: multipart/signed; micalg=pgp-sha1;
 protocol="application/pgp-signature";
 boundary="jsCIv6QNAAEOlkDxhSoUcrbdpDgOev1ti"
X-Validation-by: nicolas@braud-santoni.eu
Subject: Re: [Caml-list] Hardening [Perl's] hash function further

This is an OpenPGP/MIME signed message (RFC 4880 and 3156)
--jsCIv6QNAAEOlkDxhSoUcrbdpDgOev1ti
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

On 19/11/2013 08:53, David MENTRE wrote:
> Hello,
>
> 2013/11/19 Gerd Stolpmann <info@gerd-stolpmann.de>:
>> This article is more or less discussing cryptoattacks on an insecure
>> hash function, and the new versions of the functions are only "better"
>> but in no way safe (which you only get with crypto hashes or
>> dictionaries that don't allow collisions).
> Which in turn raises the question: Who has the responsibility to
> implement such hashes that can be exposed to the Internet: OCaml
> standard library or dedicated frameworks like OCamlNet or Ocsigen? In
> other words, shouldn't we keep simple hashes in the OCaml standard
> library (for people making regular programs) and let people making web
> applications chose the proper crypto hash in a specialized library?
>
> Best regards,
> david

Hello,

I believe that, before discussing changes to Hashtbl, we need to
know the =E2=80=9C=C2=80=C2=9Cparameters=E2=80=9D of our performance/securi=
ty tradeoff:
1. We need actual performance data to know what is currently costly (in
seeded_hash).
A big part of the code in byterun/hash.c is actually concerned with
traversal of the data-structure being hashed;
is there any information about how much time is actually spent hashing
the data, versus traversal & memory access times ?

2. What security guarantees do we want Hashtbl.seeded_hash to provide?
On the security side, as Gabriel Scherer mentionned, =E2=80=9C=C2=80=C2=9Cr=
andomized
hashing=E2=80=9D failed because little was known about the security of the =
hash
functions that were used (such as CityHash or MurmurHash).
a. There are several classical notions that may apply:
- Universal Hash Function: *theoretically* suitable for use in hash
tables, even when data is chosen by an adversary (as long as the random
parameter is kept secret);
- Universal One-Way Hash Function (pronounced =C3=A2=C2=80=C2=9Cwoof=C3=A2=
=C2=80=C2=9D): stronger
guarantees wrt. the hardness of collision (as long as the random
parameter is kept secret).

However, this still can be said to be insecure, as Hashtbl leaks
information about the random parameter:
for instance, Hashtbl.iter (currently) iterates the table in the order
of the hashes of the keys (mod 2^s);
naively displaying a table of data by iterating over the hash table
leaks some information about this parameter.

Moreover, there is no (as far as I know) UH function that is both fast,
gives good uniformity in practice (nevermind secure).

b. recent research has yielded some cryptographic hash functions, like
SipHash[1], which are:
- believed to be strong[2];
- have speed comparable with =C3=A2=C2=80=C2=9Ccommon=C3=A2=C2=80=C2=9D non=
-crypto hash functions,
notably on short inputs (but we need to evaluate the speed of seeded_hash);
- have good statistical properties.

Regarding the suggestion of libraries implementing hashes suitable for
use with untrusted data[3], I see 3 problems:
1. It is difficult for a library author to guess whether his library
will be used in a context where a =C3=A2=C2=80=C2=9Cmore secure=C3=A2=C2=80=
=C2=9D Hashtbl
implementation is required (and functorizing everything is problematic);
that's part of why having a =C3=A2=C2=80=C2=9Creasonable secure=C3=A2=C2=80=
=C2=9D default seems
important (to me, at least).
2. Implementing a polymorphic hash function is rather non-trivial.
3. Most users do not use secure primitives, especially if the default
option doesn't document its security trade-off.

Regards,
Nicolas

[1] https://131002.net/siphash/
[2] =E2=80=9C=C2=9Cstrong=E2=80=9D means here that it is claimed to be a PR=
F (e.g. not
effectively distinguishable from a random oracle)
[3] It isn't necessarily =E2=80=9C=C2=9Cover the Internet=E2=80=9D, and the=
 hashes themselves
need not be exposed for the security to matter.


--jsCIv6QNAAEOlkDxhSoUcrbdpDgOev1ti
Content-Type: application/pgp-signature; name="signature.asc"
Content-Description: OpenPGP digital signature
Content-Disposition: attachment; filename="signature.asc"

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)

iQIcBAEBAgAGBQJSi+MeAAoJEPv4tP2UoeSe18sQAIoPNadxjHf+dhIL/YsUV6Xy
Tq7/2xgz5dHWK0fV3CkGrLHSINMxspFXvN+hwIc++k0/75zdblp5sKCcvltgawoc
+y/+BgtINLx23kKaFKzfXB6xGWYetDgTMdwqU4WRr0C4vtPrbl3hwIyICkhpA8bO
kY/UwWwCYJZbwmi5gP7pnTmIwgkSzlZCaFHskaLwip3dCe61Dd6IThVNnD+CebHA
mxPBUc9N+pwQSyEk4cqpdaepEhQs1GqK2ZsXMHFN602lilrRlvl9J2RHvhupOczr
ORpFPH6uK7K3bWWmfqOvuHktxjVyl+NKzWjU/izQXYGfHQ8tqECOMLaQ9HAXJULf
GibraKv2PGD+BkySPwBu2HhoZ2E9ECv1IPcGbXtDm2sqOS72f28HtNH3cA8WbnGh
7ZNUQCbSoLq/Gwz/RdysOF7ANQMCVfUAZQT63DDMF53ijCnlBOiZZPGwm4sZHZ0I
Xr1VoMWGTmWL6oZkwFB2AdqdP2RLjP9cUTdtHnBVeybAGlJz9YpdeQILIGW888WE
KRRf53xK14YuPCCK7zT6WLbw0ldT/MRRUYvmVeryU8WDBaALgqLpkWZoQXGrwE/Y
oULt5mYavov/FAEcWFroEw7ywwPc/yazTLdsiPOu5a5BnFFa9vlGIniJDcv/oaWP
HXyRNLcfdAtN68CrVPLh
=Iz9S
-----END PGP SIGNATURE-----

--jsCIv6QNAAEOlkDxhSoUcrbdpDgOev1ti--
