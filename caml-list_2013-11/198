Return-Path: <adrien@notk.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 68E607EE6C
	for <caml-list@sympa.inria.fr>; Tue, 26 Nov 2013 10:24:28 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  adrien@notk.org) identity=pra; client-ip=91.121.71.147;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="adrien@notk.org"; x-sender="adrien@notk.org";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  adrien@notk.org designates 91.121.71.147 as permitted sender)
  identity=mailfrom; client-ip=91.121.71.147;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="adrien@notk.org"; x-sender="adrien@notk.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@nautica.notk.org) identity=helo;
  client-ip=91.121.71.147;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="adrien@notk.org";
  x-sender="postmaster@nautica.notk.org";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgMFAJRnlFJbeUeT/2dsb2JhbABZgweEBLYWgnwKgSkWdIIlAQEFI1YQCxgCAgUTDgICDwUYMYgYrgWREheBKY1NB4JrNYETA5gTAZIRgyk7
X-IPAS-Result: AgMFAJRnlFJbeUeT/2dsb2JhbABZgweEBLYWgnwKgSkWdIIlAQEFI1YQCxgCAgUTDgICDwUYMYgYrgWREheBKY1NB4JrNYETA5gTAZIRgyk7
X-IronPort-AV: E=Sophos;i="4.93,773,1378850400"; 
   d="scan'208";a="37961791"
Received: from nautica.notk.org ([91.121.71.147])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/ADH-AES256-SHA; 26 Nov 2013 10:24:27 +0100
Received: by nautica.notk.org (Postfix, from userid 1003)
	id AB910C009; Tue, 26 Nov 2013 10:24:26 +0100 (CET)
Date: Tue, 26 Nov 2013 10:24:26 +0100
From: Adrien Nader <adrien@notk.org>
To: Florian Hars <florian@hars.de>
Cc: caml-list@inria.fr
Message-ID: <20131126092426.GB904@notk.org>
References: <CCC7876BE807C74EABED4C8FC00ADFC5F5728A@exmb-01-tyo.ad.mathworks.com>
 <20131120205611.GA15056@notk.org>
 <20131125130111.GC3610@frosties>
 <20131125135527.GA23794@notk.org>
 <5294457A.4020709@hars.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <5294457A.4020709@hars.de>
User-Agent: Mutt/1.5.20 (2009-06-14)
Subject: Re: [Caml-list] Ocaml crash in windows due to running out of memory

On Tue, Nov 26, 2013, Florian Hars wrote:
> Am 25.11.2013 14:55, schrieb Adrien Nader:
> >As far as I know, it doesn't do overcommit. Also, I doubt that would
> >change anything: if you exhaust your address space, you cannot receive a
> >pointer to some place since it would collide with some of your already
> >assigned space.
> 
> That is a non-sequitur, in modern operating systems every process
> gets its own space of 2^64 adresses, no matter how much physical RAM
> + swap is available. And the common way to get overcommitment (at
> least on unixoids, windows may be different) in't malloc anyway,
> it's fork, where both processes end up with the same address space
> layout, but (logically) corresponding to differen physical memory
> (modulo COW pages).

I probably didn't make that clear: I'm only talking about 32 bit
processes. These are still very common on Windows.

Btw, you don't have fork() on Windows. Memory sharing is not done in the
same way at all.

-- 
Adrien Nader
