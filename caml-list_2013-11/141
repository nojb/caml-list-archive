Return-Path: <raphlalou@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id A766D7EE25
	for <caml-list@sympa.inria.fr>; Tue, 19 Nov 2013 12:11:22 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  raphlalou@gmail.com) identity=pra; client-ip=209.85.128.50;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="raphlalou@gmail.com";
  x-sender="raphlalou@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  raphlalou@gmail.com designates 209.85.128.50 as permitted
  sender) identity=mailfrom; client-ip=209.85.128.50;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="raphlalou@gmail.com";
  x-sender="raphlalou@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qe0-f50.google.com) identity=helo;
  client-ip=209.85.128.50;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="raphlalou@gmail.com";
  x-sender="postmaster@mail-qe0-f50.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlEDANlGi1LRVYAylGdsb2JhbABZgz9HDII1QbxJgRYIFg4BAQEBBwsLCRIqgiUBAQQBIwQZARsdAQMMBgULDQICJgICIQEBEQEFARwGE4duAQMJBg2kDYwEU4MJhDMKGScNZIhVEQEFDIEdizoagloHgmuBRwOWJ4FrgS+LJoNMGCmEUzw
X-IPAS-Result: AlEDANlGi1LRVYAylGdsb2JhbABZgz9HDII1QbxJgRYIFg4BAQEBBwsLCRIqgiUBAQQBIwQZARsdAQMMBgULDQICJgICIQEBEQEFARwGE4duAQMJBg2kDYwEU4MJhDMKGScNZIhVEQEFDIEdizoagloHgmuBRwOWJ4FrgS+LJoNMGCmEUzw
X-IronPort-AV: E=Sophos;i="4.93,729,1378850400"; 
   d="scan'208";a="36433108"
Received: from mail-qe0-f50.google.com ([209.85.128.50])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 19 Nov 2013 12:11:22 +0100
Received: by mail-qe0-f50.google.com with SMTP id 1so4956285qee.37
        for <caml-list@inria.fr>; Tue, 19 Nov 2013 03:11:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:content-transfer-encoding;
        bh=7b/n9XLL2eVBKDdampiKSEf4GHP8Yh7QAu0oB4OdP0k=;
        b=rhH8gTqwhZsgtyW3TiGAfo2M+KRDV1qBGWNr9sWiZS/+FBkx6IBBBpun+PWYzDvzx6
         ZuQbq7/EVeMYdj50WSwNhuNpgdpdB+ltNxzNNxihPMd8Jt0JunWlcF0ZowIIxBpurOAv
         Dx0aHY/ZvYRcu0TadNyAxKFp5t9DJqKMkg/T57aXiTxYj45F+zVvNSzclNFnm4j2Al3E
         a72wnSo5zWT30oiPoMJX3xB58s3/SWyNlUrC49bwIdVLmdAn/KgcfLKHqKqX9C3op5a2
         Ut/jmb4jx7CMUwMlYeH+044ezxbIXt/nTbmHOBjGC3LHm9xOqyg66gYfW7LnwDca13aJ
         AXTg==
MIME-Version: 1.0
X-Received: by 10.224.98.200 with SMTP id r8mr41962414qan.26.1384859480781;
 Tue, 19 Nov 2013 03:11:20 -0800 (PST)
Received: by 10.96.82.200 with HTTP; Tue, 19 Nov 2013 03:11:20 -0800 (PST)
In-Reply-To: <528B463A.5080303@gmail.com>
References: <8738mthu88.fsf@golf.niidar.ru>
	<528B463A.5080303@gmail.com>
Date: Tue, 19 Nov 2013 11:11:20 +0000
Message-ID: <CAAmHUAkzcSk6p5w6oL=V4USZ8KNfF+z01tjKLiTzbjX41b2evQ@mail.gmail.com>
From: =?UTF-8?Q?Rapha=C3=ABl_Proust?= <raphlalou@gmail.com>
To: Jacques-Pascal Deplaix <jp.deplaix@gmail.com>
Cc: OCaml Mailing List <caml-list@inria.fr>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable
Subject: Re: [Caml-list] lwt exceptions and infinite loops

On Tue, Nov 19, 2013 at 11:06 AM, Jacques-Pascal Deplaix
<jp.deplaix@gmail.com> wrote:
> Where did you find the operator (>>) ? Your function loop doesn't
> terminate because (>>) evaluates both arguments.

Lwt's syntax extensions provides (>>) as sugar for `>>=3D fun () ->`.

http://ocsigen.org/lwt/api/Pa_lwt


>
> On 11/19/2013 05:48 AM, Ivan Gotovchits wrote:
>> consider the following simple example:
>>
>>   open Lwt
>>   let rec loop () =3D Lwt_unix.sleep 1. >> loop ()
>>   let bad () =3D Lwt_unix.sleep 1. >> fail Not_found
>>   let () =3D Lwt_main.run (join [loop (); bad ()])
>>
>>
>> This program never terminates with an exception as I expect.
>>
>> Can someone clarify to me what really happens underneath the hood?
>>
>> Thanks in advance!
>>



--=20
______________
Rapha=C3=ABl Proust
