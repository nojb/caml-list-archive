Return-Path: <kuba@mareimbrium.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 9C8F8BBAF
	for <caml-list@yquem.inria.fr>; Tue, 14 Oct 2008 01:21:51 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgACAH5080hDWxLCbmdsb2JhbACBcpFqPqk/gWw
X-IronPort-AV: E=Sophos;i="4.33,405,1220220000"; 
   d="scan'208";a="18679085"
Received: from ip67-91-18-194.z18-91-67.customer.algx.net (HELO server1.bertec.net) ([67.91.18.194])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 14 Oct 2008 01:21:51 +0200
Received: from kuba.bertec.net (kuba.bertec.net [192.168.2.16])
	by server1.bertec.net (Postfix) with ESMTP id 03744105761
	for <caml-list@yquem.inria.fr>; Mon, 13 Oct 2008 19:21:50 -0400 (EDT)
From: Kuba Ober <kuba@mareimbrium.org>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Teaching ocaml programming
Date: Mon, 13 Oct 2008 19:21:47 -0400
User-Agent: KMail/1.9.10
References: <48DCC7B8.4070700@fmf.uni-lj.si> <200810111219.56723.kuba@mareimbrium.org> <48F1182C.7060100@andrej.com>
In-Reply-To: <48F1182C.7060100@andrej.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200810131921.48697.kuba@mareimbrium.org>
X-Spam: no; 0.00; ocaml:01 andrej:01 bytecode:01 ocaml:01 cygwin:01 mingw:01 cygwin:01 cheers:01 up-front:98 wrote:01 compiles:01 caml-list:01 cleanly:01 compiling:02 native:03 

On Saturday 11 October 2008, Andrej Bauer wrote:
> If you can get Camelia to work properly with Qt4 you will do us all a
> big favor! Thanks.
>
> For teaching purposes the bytecode version of Ocaml should suffice.

I'm ~50% through rather mechanical refactoring/porting of the code.
This means that once I'm done with that and it compiles, 
there should be about twice that much work left in actually getting
it working again (or so I hope). I have no up-front expectations
as to how well QProcess will play with non-Cygwin builds, and also
with Cygwin builds too. I plan to support native (VS/mingw) and Cygwin
OCaml builds.

I'm compiling it "cleanly" -- this means no Qt3 support.

Cheers, Kuba

