Return-Path: <martin.jambon@ens-lyon.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.4 required=5.0 tests=AWL,DNS_FROM_SECURITYSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 943D7BB84
	for <caml-list@yquem.inria.fr>; Sun, 26 Oct 2008 20:49:02 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjoAAMdmBElCbwQbi2dsb2JhbACTegEBAQoLCgcPBqsTg08
X-IronPort-AV: E=Sophos;i="4.33,489,1220220000"; 
   d="scan'208";a="18532441"
Received: from out3.smtp.messagingengine.com ([66.111.4.27])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 26 Oct 2008 20:49:02 +0100
Received: from compute1.internal (compute1.internal [10.202.2.41])
	by out1.messagingengine.com (Postfix) with ESMTP id A2870183851;
	Sun, 26 Oct 2008 15:49:00 -0400 (EDT)
Received: from heartbeat2.messagingengine.com ([10.202.2.161])
  by compute1.internal (MEProxy); Sun, 26 Oct 2008 15:49:00 -0400
X-Sasl-enc: +wY6IL5JzRzFXktM0XgsQ4B88Y20XZr6gbXdy+l/K0tz 1225050540
Received: from [192.168.1.10] (ALyon-157-1-83-127.w90-37.abo.wanadoo.fr [90.37.194.127])
	by mail.messagingengine.com (Postfix) with ESMTPSA id 0B13830D50;
	Sun, 26 Oct 2008 15:48:59 -0400 (EDT)
Message-ID: <4904C7EC.7000508@ens-lyon.org>
Date: Sun, 26 Oct 2008 20:41:32 +0100
From: Martin Jambon <martin.jambon@ens-lyon.org>
User-Agent: Thunderbird 2.0.0.17 (X11/20081008)
MIME-Version: 1.0
To: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@erratique.ch>
Cc: caml-list caml-list <caml-list@yquem.inria.fr>
Subject: Re: Indentation (was Re: [Caml-list] What does Jane Street use/want
 for an IDE? What	about	you?)
References: <200810200919.41561.ober.14@osu.edu>	<9d3ec8300810211231j40dbbef2ifdd6c2f6b84a2048@mail.gmail.com>	<20081021202649.GA11380@philou.ch>	<200810220842.17128.ober.14@osu.edu>	<49002C0E.5050107@inescporto.pt>	<49003554.9050109@lri.fr>	<9722eaea0810230313u25b2c874xc94574786e513162@mail.gmail.com>	<4900596C.80406@inescporto.pt>	<20081023141335.GA521@snarc.org>	<49008D7D.4060908@lri.fr>	<490096B8.3020602@ramenlabs.com>	<4902F183.5060504@doomeer.com>	<4903145E.5050904@ens-lyon.org>	<483673C5-ED3C-4877-AC85-D89E1CA6A1D2@erratique.ch>	<4903A6F0.5000303@ens-lyon.org> <093FC693-92FB-4C62-82DF-4FAD8F5E4D65@erratique.ch>
In-Reply-To: <093FC693-92FB-4C62-82DF-4FAD8F5E4D65@erratique.ch>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
X-Spam: no; 0.00; ens-lyon:01 bunzli:01 afaik:01 closures:01 wrote:01 clearer:01 naming:01 naming:01 caml-list:01 functions:01 imperative:01 jambon:01 jambon:01 closure:01 let:03 

Daniel Bünzli wrote:
> 
> Le 26 oct. 08 à 01:08, Martin Jambon a écrit :
> 
>> In performance-critical code or maybe imperative code in general, it
>> feels good to control when closures are created. In such cases, avoiding
>> local functions helps.
> 
> Just to be clear, naming your anonymous function locally (which is what
> is recommended) or not naming it doesn't make any performance difference
> AFAIK.

What I mean is that:


let f x y = x + y

let g x l =
  List.map (f x) l


is clearer than:


let g x l =
  let f y = x + y in
  List.map f l


in the sense that it is obvious that a closure is created in the first
case, while it is less visible in the second case.



Martin

-- 
http://mjambon.com/

