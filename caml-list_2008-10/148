Return-Path: <kuba@mareimbrium.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 5AD4EBBAF
	for <caml-list@yquem.inria.fr>; Tue, 14 Oct 2008 23:35:46 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AsoBAJyt9EhDWxLCbmdsb2JhbACBcpFtPqwJgWs
X-IronPort-AV: E=Sophos;i="4.33,410,1220220000"; 
   d="scan'208";a="18736197"
Received: from ip67-91-18-194.z18-91-67.customer.algx.net (HELO server1.bertec.net) ([67.91.18.194])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 14 Oct 2008 23:35:45 +0200
Received: from kuba.bertec.net (kuba.bertec.net [192.168.2.16])
	by server1.bertec.net (Postfix) with ESMTP id C3071105761
	for <caml-list@yquem.inria.fr>; Tue, 14 Oct 2008 17:35:44 -0400 (EDT)
From: Kuba Ober <kuba@mareimbrium.org>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Road to native windows OCaml...
Date: Tue, 14 Oct 2008 17:35:42 -0400
User-Agent: KMail/1.9.10
References: <200810131935.53365.kuba@mareimbrium.org> <48F4318D.7070607@elliottoti.com>
In-Reply-To: <48F4318D.7070607@elliottoti.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200810141735.43977.kuba@mareimbrium.org>
X-Spam: no; 0.00; ocaml:01 ocaml:01 mingw:01 toolchain:01 cygwin:01 masm:01 stubs:01 mingw:01 toolchain:01 stubs:01 yup:01 cheers:01 wrote:01 unix:01 caml-list:01 

On Tuesday 14 October 2008, Elliott Oti wrote:
> Ocaml works fine on windows with the mingw and msys toolchain. Cygwin is
> not needed. What you are doing with (1) and (2) would be duplicating msys.

Well, maybe (1) is not needed, then, but (2) surely wouldn't hurt as OCaml
tries to use masm. Maybe it should simply try to use nasm if present,
as it should accept same input, just different command line options.

> With regards to (4), you need at the very least to be able to parse
> header files correctly, & provide link stubs. This would again be
> duplicating parts of the mingw toolchain.

Should we not have something like most Lisps' foreign function interfaces,
where we actually specify everything natively (in Ocaml)?

> (3) would be nice, though. And fleshing out the non-functional win32
> stubs in the Unix library (fork etc).

Yup.

Cheers, Kuba

