Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA11779; Thu, 7 Aug 2003 02:13:02 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA01060 for <caml-list@pauillac.inria.fr>; Thu, 7 Aug 2003 02:13:01 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h770CxT25529
	for <caml-list@inria.fr>; Thu, 7 Aug 2003 02:13:00 +0200 (MET DST)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3p2/3.7W) with ESMTP id JAA10641;
	Thu, 7 Aug 2003 09:12:53 +0900 (JST)
To: brogoff@speakeasy.net
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] static class member....
In-Reply-To: <Pine.LNX.4.44.0308060901130.15452-100000@grace.speakeasy.net>
References: <20030806151051.GB29704@redhat.com>
	<Pine.LNX.4.44.0308060901130.15452-100000@grace.speakeasy.net>
X-Mailer: Mew version 1.94.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20030807091253T.garrigue@kurims.kyoto-u.ac.jp>
Date: Thu, 07 Aug 2003 09:12:53 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 13
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; jacques:01 caml-list:01 brogoff:01 speakeasy:01 garrigue:01 module:03 typing:03 classes:03 let:04 implement:05 static:06 kurims:06 indeed:06 unfortunate:06 usual:07 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: brogoff@speakeasy.net

> A non-orthogonality of the let within a class is that let module isn't 
> permitted. Is there any reason it isn't? 

This is indeed unfortunate, and I've wished for its presence several
times.
I don't think there is a theoretical reason.
However the typing of classes being done in several passes, this would
be much more difficult to implement correctly than the let module
inside usual expressions.

Jacques Garrigue

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

