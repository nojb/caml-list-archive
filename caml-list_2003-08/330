Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA06190; Thu, 28 Aug 2003 18:09:22 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA13316 for <caml-list@pauillac.inria.fr>; Thu, 28 Aug 2003 18:09:21 +0200 (MET DST)
Received: from aomori.annexia.org (annexia.force9.co.uk [212.56.101.183])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h7SG9Kf15378
	for <caml-list@inria.fr>; Thu, 28 Aug 2003 18:09:20 +0200 (MET DST)
Received: from rich by aomori.annexia.org with local (Exim 3.36 #1 (Debian))
	id 19sPKp-0002Nv-00
	for <caml-list@inria.fr>; Thu, 28 Aug 2003 17:09:19 +0100
Date: Thu, 28 Aug 2003 17:09:19 +0100
To: caml-list@inria.fr
Subject: [Caml-list] I need a C preprocessor
Message-ID: <20030828160919.GA8257@redhat.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.4i
From: Richard Jones <rich@annexia.org>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; compile-time:01 submenu:99 accel:01 submenu:99 accel:01 freshmeat:01 ltd:98 ifdef:01 ifdef:01 debug:01 debug:01 ocaml:01 dump:01 dump:01 simpler:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Here is some code I've just written. CjsConfig.debug_menu is a
compile-time constant.

  let debug_menu =
    if CjsConfig.debug_menu then
      Some (factory#add_submenu "Debug")
    else
      None in

  (* ... *)

  let single_step_ev_item, single_step_res_item, step_to_item,
      dump_hiertext_item =
    match debug_menu with
      None -> None, None, None, None
    | Some debug_menu ->
	let factory = new GMenu.factory debug_menu ~accel_group in
	let single_step_ev_item =
	  factory#add_item "Single Step (1 Event)"
	    ~key:GdkKeysyms._T in
	let single_step_res_item =
	  factory#add_item "Single Step (1 Result Period)"
	    ~key:GdkKeysyms._Z in
	let step_to_item = factory#add_item "Step To ..." in
	factory#add_separator ();
	let dump_hiertext_item =
	  factory#add_item "Dump HierText To Console"
	    ~key:GdkKeysyms._H in
	(Some single_step_ev_item, Some single_step_res_item,
	 Some step_to_item, Some dump_hiertext_item)
  in

Now in C I'd use the preprocessor:

#ifdef DEBUG_MENU
  factory#add_submenu "Debug"
#endif

#ifdef DEBUG_MENU
  let factory = new GMenu.factory debug_menu ~accel_group in
  let single_step_ev_item = factory#add_item "Single Step (1 Event)"
  (* etc. *)
#endif

which results in briefer, faster and simpler to understand code.

My question is what is the proper style for this sort of thing in
OCaml?

Rich.

-- 
Richard Jones. http://www.annexia.org/ http://freshmeat.net/users/rwmj
Merjis Ltd. http://www.merjis.com/ - all your business data are belong to you.
NET::FTPSERVER is a full-featured, secure, configurable, database-backed
FTP server written in Perl: http://www.annexia.org/freeware/netftpserver/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

