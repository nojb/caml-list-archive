Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA03672; Thu, 7 Aug 2003 23:49:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA05203 for <caml-list@pauillac.inria.fr>; Thu, 7 Aug 2003 23:49:33 +0200 (MET DST)
Received: from tisch.mail.mindspring.net (tisch.mail.mindspring.net [207.69.200.157])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h77LnWT06664
	for <caml-list@pauillac.inria.fr>; Thu, 7 Aug 2003 23:49:32 +0200 (MET DST)
Received: from user-0ccekej.cable.mindspring.com ([24.199.81.211] helo=minsky-primus.homeip.net)
	by tisch.mail.mindspring.net with smtp (Exim 3.33 #1)
	id 19ksdW-0000FH-00
	for caml-list@pauillac.inria.fr; Thu, 07 Aug 2003 17:49:30 -0400
Received: from 141.155.88.179
        (SquirrelMail authenticated user yminsky)
        by minsky-primus.homeip.net with HTTP;
        Thu, 7 Aug 2003 17:49:30 -0400 (EDT)
Message-ID: <38641.141.155.88.179.1060292970.squirrel@minsky-primus.homeip.net>
Date: Thu, 7 Aug 2003 17:49:30 -0400 (EDT)
Subject: Re: [Caml-list] Multi-keyed lookup table?
From: "Yaron Minsky" <yminsky@cs.cornell.edu>
To: <caml-list@pauillac.inria.fr>
In-Reply-To: <Pine.LNX.4.33.0308071457590.2616-100000@eagle.ancor.com>
References: <20030807194135.GB21983@swordfish>
        <Pine.LNX.4.33.0308071457590.2616-100000@eagle.ancor.com>
X-Priority: 3
Importance: Normal
X-Mailer: SquirrelMail (version 1.2.11)
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; yaron:01 minsky:01 yminsky:01 cornell:01 caml-list:01 simplistic:01 hashtable:01 hash:01 efficiency:05 implement:05 type:07 index:91 function:09 think:11 creating:13 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

This might be too simplistic, but how about creating a union type the
includes all of the different things you might want to index on, and then
use that as the key to a hashtable.  The efficiency of that would hinge on
the efficiency of the hash function, I would think.   I would expect it to
be simple to implement and pretty quick.

Yaron


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

