Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA21323; Tue, 12 Aug 2003 09:09:15 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA00463 for <caml-list@pauillac.inria.fr>; Tue, 12 Aug 2003 09:09:14 +0200 (MET DST)
Received: from sccrmhc13.comcast.net (sccrmhc13.comcast.net [204.127.202.64])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h7C79CT10547
	for <caml-list@inria.fr>; Tue, 12 Aug 2003 09:09:13 +0200 (MET DST)
Received: from blah-4x95yhjcsb.infosite.com (12-213-80-182.client.attbi.com[12.213.80.182](untrusted sender))
          by comcast.net (sccrmhc13) with SMTP
          id <20030812070911016002hft7e>; Tue, 12 Aug 2003 07:09:11 +0000
Message-Id: <5.2.1.1.0.20030811224954.01a65b48@infosite.com>
X-Sender: jason@infosite.com (Unverified)
X-Mailer: QUALCOMM Windows Eudora Version 5.2.1
Date: Tue, 12 Aug 2003 00:11:44 -0700
To: sven.luther@wanadoo.fr
From: Jason Gibson <jason@infosite.com>
Subject: Re: [Caml-list] Re: Tcl/Tk and RH 9
Cc: caml-list@inria.fr
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; gibson:99 infosite:99 caml-list:01 model:01 macosx:01 plateform:01 sven:01 luther:01 toolkits:01 gui:01 scripted:01 linked:01 bindings:01 ocaml:01 supported:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

 >What about looking at Cairo (Ex Xr/Xc) and either bind to that, or
 >reimplement their protocol in ocaml. Cairo is early enough in its design
 >that it can still be influenced enough if someone looks at it, and
 >points them problems related to doing ocaml bindings.
 >
...
 >Basically it is a vector rendering framework, linked to SVG graphics,
 >and which should enable to have a vector rendering model (on top of the
 >X RENDER extension i think), but which can target various graphic
 >systems, including X, local image buffers and Postscript and PDF as
 >planned output support. I don't know about windows support, but MacOSX
 >support should not be all that difficult to add, and since they also
 >have an OpenGL rendering path, it should run on every OpenGL supported
 >plateform.
...
 >Friendly,
 >Sven Luther


I'm glad to see that I wasn't the only one who thought that xr\cairo\svg 
would make a
good base for windowing toolkits.  I was thinking that having the low level 
functionality
vector based would allow you to do lots of interesting things.  For 
example, you could
do what xml has done, ie allow people to separate out the different classes 
of data easily.
Like how html has presentation\data all bunched together, our vector gui 
could have the
layout\data\communications\etc all separated out, allowing for better 
functionality on
each level. One of the layers of xml-style data could be a communication 
path, allowing your
program to be less dependant on the gui model (like an event loop).  It 
would also let you
expose your gui program to other programs, available for use in a scripted 
environment.

One could build a gui application like one draws a picture.  Each shape 
could be made
separate, so doing things like floating toolbars would be trivial.  You 
just move that particular
shape, and all its children to a new location.  You could group 
programs  together easier by
joining shapes and doing transformations on them.  Maybe you could build 
gui components
as little programs that you connect together, like how you use pipes to 
link a chain of programs.

JG

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

