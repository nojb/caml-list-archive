Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA26499; Sun, 24 Aug 2003 22:07:43 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA25923 for <caml-list@pauillac.inria.fr>; Sun, 24 Aug 2003 22:07:42 +0200 (MET DST)
Received: from rz.zidlicky.org (bamb-d9b97572.pool.mediaWays.net [217.185.117.114])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h7OK7cf05093;
	Sun, 24 Aug 2003 22:07:40 +0200 (MET DST)
Received: by rz.zidlicky.org (Postfix, from userid 511)
	id 9F7996FA16; Sun, 24 Aug 2003 22:05:39 +0200 (CEST)
Date: Sun, 24 Aug 2003 22:05:39 +0200
From: Richard Zidlicky <rz@linux-m68k.org>
To: Xavier Leroy <xavier.leroy@inria.fr>
Cc: sven.luther@wanadoo.fr, caml-list@inria.fr
Subject: Re: [Caml-list] Native compiler support for m68k?
Message-ID: <20030824200539.GA1118@linux-m68k.org>
References: <20030820104917.GB6782@linux-m68k.org> <20030820143238.A15392@pauillac.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <20030820143238.A15392@pauillac.inria.fr>
User-Agent: Mutt/1.4i
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 gcc:01 compiler:01 compiler:01 ocaml:01 caml:01 ocaml-:01 ocaml-:01 distrib:01 0200,:01 tar:01 native:02 native:02 pointer:03 wrote:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, Aug 20, 2003 at 02:32:38PM +0200, Xavier Leroy wrote:
> > I recently got interested into OCaml and thought about
> > resurrecting the native m68k compiler for m68k, is the old
> > bitrotten code available somewhere?
> 
> Yes, you can find it in release 2.04 (the last stable release before
> m68k support was deprecated):
> http://caml.inria.fr/distrib/ocaml-2.04/ocaml-2.04.tar.gz

ok, I got 2.0.4 working for m68k-linux, not very hard.
Speed is quite impressive, fib is faster than gcc code ?!

One thing that I need to verify is the interaction of the native
compiler and the strange m68k-linux ABI which is different from
SUN or BSD. The unusual part of m68k-linux ABI is that functions
returning pointer return their value in register a0, while integer
types are retuned in d0.

How does the code generated by the native compiler interact
with c-ABI functions?

Richard

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

