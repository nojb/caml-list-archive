Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA20247; Thu, 21 Aug 2003 15:27:49 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA11523 for <caml-list@pauillac.inria.fr>; Thu, 21 Aug 2003 15:27:47 +0200 (MET DST)
Received: from cgpsrv1.cis.mcmaster.ca (cgpsrv1.cis.McMaster.CA [130.113.64.21])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h7LDRkf10538
	for <caml-list@inria.fr>; Thu, 21 Aug 2003 15:27:46 +0200 (MET DST)
Received: from [65.48.130.10] (account <carette@univmail.cis.mcmaster.ca>)
  by cgpsrv1.cis.mcmaster.ca (CommuniGate Pro WebUser 4.0.6)
  with HTTP id 51153452; Thu, 21 Aug 2003 09:27:45 -0400
From: "Jacques Carette" <carette@mcmaster.ca>
Subject: Re: [Caml-list] does class polymorphism need to be so
 complicated?
To: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
Cc: caml-list@inria.fr
X-Mailer: CommuniGate Pro Web Mailer v.4.0.6
Date: Thu, 21 Aug 2003 09:27:45 -0400
Message-ID: <web-51153452@cgpsrv1.cis.mcmaster.ca>
In-Reply-To: <20030821083400B.garrigue@kurims.kyoto-u.ac.jp>
MIME-Version: 1.0
Content-Type: text/plain; charset="ISO-8859-1"; format="flowed"
Content-Transfer-Encoding: 8bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; jacques:01 caml-list:01 naively:01 biblio:99 coercions:01 garrigue:01 pottier:01 thread:02 explicit:03 classes:03 wrote:03 fpottier:03 object:03 types:03 complicated:04 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp> wrote:
> From: "Jacques Carette" <carette@mcmaster.ca>
> > Indeed - but that rather begs the question of why are classes and rows
> > different, as they (naively perhaps) seem so ripe for 'unification'.
> > 
> I'm not sure of what you mean by rows.
> At least, in the above examples, rows were used as a name for object
> types.

By 'rows' I meant the type of that name referred to in say
François Pottier, "A Constraint-Based Presentation and Generalization of Rows"
(available from http://pauillac.inria.fr/~fpottier/biblio/pottier.html).

The sub-typing of classes and of rows seem to me to be highly related.  Treating classes as rows would seem to me to 
allow the kind of polymorphism that is being asked for in this thread (ie with no need for explicit coercions).

Jacques C.  

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

