Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA13326; Thu, 7 Aug 2003 15:04:22 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA20752 for <caml-list@pauillac.inria.fr>; Thu, 7 Aug 2003 15:04:20 +0200 (MET DST)
Received: from aomori.annexia.org (annexia.force9.co.uk [212.56.101.183])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h77D4KT16727
	for <caml-list@inria.fr>; Thu, 7 Aug 2003 15:04:20 +0200 (MET DST)
Received: from rich by aomori.annexia.org with local (Exim 3.36 #1 (Debian))
	id 19kkRH-0001JY-00
	for <caml-list@inria.fr>; Thu, 07 Aug 2003 14:04:19 +0100
Date: Thu, 7 Aug 2003 14:04:19 +0100
To: caml-list@inria.fr
Subject: [Caml-list] Print dependencies of a module, and other useful functions
Message-ID: <20030807130419.GA5044@redhat.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.4i
From: Richard Jones <rich@annexia.org>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; dependencies:01 equivalents:01 dynlink:01 debugger:01 char:01 1961:99 model:01 711:99 freshmeat:01 team's:01 ltd:98 ocaml:01 bytecode:01 lib:01 binary:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Are there any equivalents to the following functions / programs for
OCaml?

'gcc -MM' / 'gcc -MMD'
	Print dependencies of a module. Useful for me for building
	robust Makefiles.

'nm' / 'nm -D'
	List symbols exported by an OCaml bytecode "binary". Would
	help me solve my ongoing Dynlink problems.

'objdump'
	List other useful information from an OCaml bytecode "binary".

Also in the debugger, how can I get OCaml to display the parameters
being passed to a function in the stack trace. At the moment I just
see things like:

#0  Pc : 453960  ZAssocs char 2550
#1  Pc : 452492  ZAssocs char 5608
#2  Pc : 14044  List char 1961
#3  Pc : 476772  Model char 24895
#4  Pc : 476772  Model char 24895
#5  Pc : 476772  Model char 24895
#6  Pc : 476800  Model char 24880
#7  Pc : 513364  Simulator char 4635
#8  Pc : 565728  Main char 14244
#9  Pc : 446708  Lib char 711
#10  Pc : 565972  Main char 14494

which is not very useful. It would be nice to show args too.

Rich.

-- 
Richard Jones. http://www.annexia.org/ http://freshmeat.net/users/rwmj
Merjis Ltd. http://www.merjis.com/ - all your business data are belong to you.
'There is a joke about American engineers and French engineers. The
American team brings a prototype to the French team. The French team's
response is: "Well, it works fine in practice; but how will it hold up
in theory?"'

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

