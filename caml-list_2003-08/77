Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA18585; Fri, 8 Aug 2003 16:38:20 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA21968 for <caml-list@pauillac.inria.fr>; Fri, 8 Aug 2003 16:38:19 +0200 (MET DST)
Received: from imo-d02.mx.aol.com (imo-d02.mx.aol.com [205.188.157.34])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h78EcIf28997
	for <caml-list@inria.fr>; Fri, 8 Aug 2003 16:38:18 +0200 (MET DST)
Received: from artboreb@netscape.net
	by imo-d02.mx.aol.com (mail_out_v36_r1.1.) id 9.1d.9f186b8 (22683);
	Fri, 8 Aug 2003 10:38:07 -0400 (EDT)
Received: from  netscape.net (mow-m16.webmail.aol.com [64.12.180.132]) by air-in04.mx.aol.com (v95.12) with ESMTP id MAILININ44-589b3f33b5ce311; Fri, 08 Aug 2003 10:38:07 -0400
Date: Fri, 08 Aug 2003 10:38:06 -0400
From: artboreb@netscape.net (Arturo Borquez)
To: skaller@ozemail.com.au (John Max Skaller)
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] static class member....
MIME-Version: 1.0
Message-ID: <63FF6FC9.5B44987F.00958B05@netscape.net>
X-Mailer: Atlas Mailer 2.0
X-AOL-IP: 200.54.132.56
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 ozemail:01 woodyatt:01 stupid:01 abstracted:01 abstraction:01 ocamldoc:01 sensibly:01 non-trivial:01 encapsulate:01 abstractions:01 toxteth:01 glebe:01 2037,:01 9660:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

wyse words
regards
Arturo Borquez

John Max Skaller <skaller@ozemail.com.au> wrote:

>james woodyatt wrote:
>
>
>> I would strongly second this advice.  When I came to Ocaml from C++, I 
>> did not heed this advice-- and I wasted a lot of time learning why that 
>> was a mistake.
>
>Actaully, my advice to C++ programmers is the same :-)
>Don't use classes. Plain old data structures are generally
>better -- precisely because they *don't* provide encapsulation.
>
>This saves a whole lot of time writing methods, when you could
>just manipulate the data structure directly. Just kill off
>stupid Visitor patterns and things and write the code you need
>without encumbering yourself with attempts to abstract things
>that usually aren't abstract in the first place.
>
>In most business code, even the kinds which are in principle
>abstractable are often best not abstracted simply because
>there aren't enough instances of the abstraction to bother,
>and the client is sure to change the rules and break your
>polymorphism anyhow :-)
>
>An example where abstraction is useful: the back end
>of a code generator (such as Ocaml itself, or Ocamldoc),
>can sensibly be abstracted. However getting the abstraction
>just right is a non-trivial exercise and it's often better
>to do case by case encoding until the actual abstraction
>emerges in the code itself (and then you can encapsulate it).
>
>To put this another way -- don't use abstractions unless you
>have a strong theory that tells you what they actually are,
>and even then, be circumspect ...
>
>-- 
>John Max Skaller, mailto:skaller@ozemail.com.au
>snail:10/1 Toxteth Rd, Glebe, NSW 2037, Australia.
>voice:61-2-9660-0850
>
>
>-------------------
>To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
>Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
>Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>


-- 
Arturo Borquez


__________________________________________________________________
McAfee VirusScan Online from the Netscape Network.
Comprehensive protection for your entire computer. Get your free trial today!
http://channels.netscape.com/ns/computing/mcafee/index.jsp?promo=393397

Get AOL Instant Messenger 5.1 free of charge.  Download Now!
http://aim.aol.com/aimnew/Aim/register.adp?promo=380455

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

