Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA11325; Wed, 27 Aug 2003 12:01:28 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA11776 for <caml-list@pauillac.inria.fr>; Wed, 27 Aug 2003 12:01:27 +0200 (MET DST)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h7RA1QT04159
	for <caml-list@inria.fr>; Wed, 27 Aug 2003 12:01:26 +0200 (MET DST)
Received: from fichte.ai.univie.ac.at (markus@localhost [127.0.0.1])
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-6.4) with ESMTP id h7RA1QqF015242;
	Wed, 27 Aug 2003 12:01:26 +0200
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-6.4) id h7RA1QQ4015241;
	Wed, 27 Aug 2003 12:01:26 +0200
Date: Wed, 27 Aug 2003 12:01:25 +0200
From: Markus Mottl <markus@oefai.at>
To: Jeff Henrikson <jehenrik@yahoo.com>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] OCamlMakefile mly/mll interdependency
Message-ID: <20030827100125.GA14764@fichte.ai.univie.ac.at>
Mail-Followup-To: Jeff Henrikson <jehenrik@yahoo.com>, caml-list@inria.fr
References: <E1442CE0-D75D-11D7-A290-00039375801A@yahoo.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <E1442CE0-D75D-11D7-A290-00039375801A@yahoo.com>
User-Agent: Mutt/1.4.1i
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 henrikson:01 frontc:01 recursion:01 tokens:01 surprising:01 referenced:02 parser:02 parser:02 mottl:02 mottl:02 compile:02 modules:02 module:03 module:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 25 Aug 2003, Jeff Henrikson wrote:
> To help me with the aforementioned release, anybody want to help me 
> figure out why my OCamlMakefile isn't doing well on compling frontc?  
> No ordering of the source files seems to work:

This is not really surprising: module Clexer references module Cparser
and vice versa! You cannot have recursion between modules.

Since the lexer always depends on the parser, because the latter declares
tokens that the lexer returns, the parser must always be compiled before
the lexer.

Therefore, you'll have to factor out all code from the lexer that is
referenced by the parser and put it into a separate module, which you
have to compile before the parser (and by transitivity before the lexer).

Regards,
Markus Mottl

-- 
Markus Mottl          http://www.oefai.at/~markus          markus@oefai.at

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

