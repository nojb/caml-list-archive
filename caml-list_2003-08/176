Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA09070; Fri, 15 Aug 2003 12:33:20 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA03376 for <caml-list@pauillac.inria.fr>; Fri, 15 Aug 2003 12:33:19 +0200 (MET DST)
Received: from mail1.tpgi.com.au (mail.tpgi.com.au [203.12.160.57])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h7FAXHf23595
	for <caml-list@inria.fr>; Fri, 15 Aug 2003 12:33:17 +0200 (MET DST)
Received: from 203-219-16-100-syd-ts21-2600.tpgi.com.au (203-219-16-100-syd-ts21-2600.tpgi.com.au [203.219.16.100])
	by mail1.tpgi.com.au (8.11.6/8.11.6) with ESMTP id h7FAWs732116;
	Fri, 15 Aug 2003 20:32:58 +1000
Subject: Re: [Caml-list] Obj.magic, Obj.t etc.
From: skaller <skaller@ozemail.com.au>
Reply-To: skaller@ozemail.com.au
To: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>
Cc: caml-list@inria.fr
In-Reply-To: <200308141245.13230.qrczak@knm.org.pl>
References: <Pine.GSO.4.53.0308131145290.29437@cascade.cs.ubc.ca>
	 <002401c3623d$22c3f2e0$0201a8c0@foorama>
	 <20030814173444D.garrigue@kurims.kyoto-u.ac.jp>
	 <200308141245.13230.qrczak@knm.org.pl>
Content-Type: text/plain; charset=UTF-8
Message-Id: <1060943577.22302.46.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 15 Aug 2003 20:32:58 +1000
Content-Transfer-Encoding: 8bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; ozemail:01 caml-list:01 marcin:01 'qrczak':01 kowalczyk:01 jacques:01 neutralize:01 arrays:01 garrigue:01 polymorphic:01 uniform:02 inner:02 float:02 module:03 wrote:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 2003-08-14 at 20:45, Marcin 'Qrczak' Kowalczyk wrote:
> Dnia czw 14. sierpnia 2003 10:34, Jacques Garrigue napisaÅ‚:
> 
> > As a result, the representation of float arrays would not be uniform,
> > requiring a check before access, which would probably neutralize any
> > performance advantage of having a special representation.
> 
> But now the check is required before polymorphic access. It happens in inner 
> loops in almost all functions from the Array module.

Then you lift the check out of the loop:
one check, two loops specialised for each case.


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

