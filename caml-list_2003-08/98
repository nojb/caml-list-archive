Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA00744; Sun, 10 Aug 2003 03:11:12 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA23285 for <caml-list@pauillac.inria.fr>; Sun, 10 Aug 2003 03:11:11 +0200 (MET DST)
Received: from mail3.tpgi.com.au (mail.tpgi.com.au [203.12.160.59])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h7A1B9f15706
	for <caml-list@inria.fr>; Sun, 10 Aug 2003 03:11:09 +0200 (MET DST)
Received: from 203-213-81-178-syd-ts13-2600.tpgi.com.au (203-213-81-178-syd-ts13-2600.tpgi.com.au [203.213.81.178])
	by mail3.tpgi.com.au (8.11.6/8.11.6) with ESMTP id h7A1B6h03183
	for <caml-list@inria.fr>; Sun, 10 Aug 2003 11:11:06 +1000
Subject: Re: [Caml-list] GODI news
From: skaller <skaller@ozemail.com.au>
Reply-To: skaller@ozemail.com.au
To: caml-list@inria.fr
In-Reply-To: <20030809211647.GA31982@iliana>
References: <1060377600.1229.53.camel@ice.gerd-stolpmann.de>
	 <20030808213705.GB21525@swordfish>
	 <1060419878.988.36.camel@ice.gerd-stolpmann.de>
	 <20030809170549.GH21525@swordfish> <fzka66z3.fsf@mail.ru>
	 <3F354101.40700@quasar.ipa.nw.ru>  <20030809211647.GA31982@iliana>
Content-Type: text/plain
Message-Id: <1060477875.29669.30.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 10 Aug 2003 11:11:15 +1000
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; ozemail:01 caml-list:01 sven:01 luther:01 dlls:01 thingy:01 gui:01 widgets:01 compiler:01 ocaml:01 bytecode:01 executables:01 unix:02 objects:02 interpreter:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sun, 2003-08-10 at 07:16, Sven Luther wrote:

> What would be nice is to be able to use ocaml in this cross compiling
> environment, so you could use all the nice unix development tools, and
> then produce windows executables for the people who need it, preferably
> in a nice tarball including the needed dlls, or even a windows-installer-magic
> thingy.

Well, you almost can: there is a bytecode compiler,
and the bytecode objects produced are largely
platform independent, and the bytecode interpreter
is pretty fast. I guess this works best for products
that don't need OS dependent resources much (like GUI
widgets or processes).

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

