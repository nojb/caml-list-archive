Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q1H1twdx014519
	for <caml-list@sympa-roc.inria.fr>; Fri, 17 Feb 2012 02:55:58 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AiIBAKWyPU/RVdU2kGdsb2JhbABDsGgIIgEBAQEJCQ0HFAQjggsCLAEbEgwDEhBdAREBBQEiNaVSgl0Ki3GCcYR4P4ELAgULi2MzCQYCCAIGBAICCgEKAwMDAodZBIhOjGmOKT2EIA
X-IronPort-AV: E=Sophos;i="4.73,433,1325458800"; 
   d="scan'208";a="131743211"
Received: from mail-yw0-f54.google.com ([209.85.213.54])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 17 Feb 2012 02:55:52 +0100
Received: by yhfs35 with SMTP id s35so2304949yhf.27
        for <caml-list@inria.fr>; Thu, 16 Feb 2012 17:55:51 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:date:message-id:subject:from:to:content-type
         :content-transfer-encoding;
        bh=Vb51txi0SjtOfT3xaAPeE3IwIf9FCnoigc6uyOgYT/4=;
        b=XzGiYqWouBKTq/WAIJNlN3TziafS/3jkReIpY/D4MFKr27FfD7uY+ri7lK8DCQcrl2
         rR9mJg68ZEt4O+W1rOcucydUg7M6wvc4zyD9CUEYOFkG8Ew8w/igwo/oYgPsDnAFSxC0
         vmt+WG8vOS/6SeAhWI5ivdZ8mo5rAAlGjgXmc=
MIME-Version: 1.0
Received: by 10.236.161.71 with SMTP id v47mr7020931yhk.34.1329443751575; Thu,
 16 Feb 2012 17:55:51 -0800 (PST)
Received: by 10.146.244.14 with HTTP; Thu, 16 Feb 2012 17:55:51 -0800 (PST)
Date: Thu, 16 Feb 2012 20:55:51 -0500
Message-ID: <CANcqPu6wm+RypDmOAoeyYS9d+kxHRiBP0b9qRU7PMGP4j5DUPQ@mail.gmail.com>
From: bob zhang <bobzhang1988@gmail.com>
To: Caml List <caml-list@inria.fr>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id q1H1twdx014519
Subject: [Caml-list] Sexplib bug report

Hi, I did not find sexplib mailing list, so I posted it here.
sexplib is not compatible with camlp4of

For example
camlp4of Pa_type_conv.cma pa_sexp_conv.cma -str "type ('a,'b) delta =
('b * 'a) "
broken
camlp4o Pa_type_conv.cma pa_sexp_conv.cma -str "type ('a,'b) delta =
('b * 'a) "
good
camlp4of Pa_type_conv.cma pa_sexp_conv.cma -str "type ('a,'b) delta =
('b * 'a) with sexp "
good
camlp4o Pa_type_conv.cma pa_sexp_conv.cma -str "type ('a,'b) delta =
('b * 'a) with sexp "
good

Is it possible to separate the syntax extension from the code
generation part? syntax extension is always  fragile, code generation
API is still pretty useful. In my opinion, the main meat lies in code
generation part.

<:sexp< type t = bla bla >> maybe more robust, but it requires
camlp4of as the basic preprocessor instead of camlp4o

-- 
Best, bob

