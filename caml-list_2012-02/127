Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q1FHMQEo019278
	for <caml-list@sympa-roc.inria.fr>; Wed, 15 Feb 2012 18:22:26 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AoYBAKLoO0/RVde2kGdsb2JhbABDhRGaOIhGAYhKCCIBAQEBBwsNBxQEI4FyAQEBAwESAg8EGQEbEgsBAwELBgMCBAcaHQICIgERAQUBChIGEwgKEIddCZxgCosmS4JxhQU/iHMCBQuLTQIYCQEKAQIDCAgJAwIwCQGDKQoDGjUFAgkHAQMFA4IYgRYEgl2FcIxpjik9hCA
X-IronPort-AV: E=Sophos;i="4.73,424,1325458800"; 
   d="scan'208";a="144405671"
Received: from mail-ey0-f182.google.com ([209.85.215.182])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 15 Feb 2012 18:22:20 +0100
Received: by eaan10 with SMTP id n10so519744eaa.27
        for <caml-list@inria.fr>; Wed, 15 Feb 2012 09:22:20 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=Fcix+7ljJAf3+ru5GQN7evAnH9jHsLvArDD9EaOMZSs=;
        b=PzyjSKrvnLl3aPh35GZPbRZwJ7CjmWOI4RDxaQnyCqx/U9KuS2V1q70Hi+i0NlJwz4
         SE24kUx5ep749kkfDw48+3iOjRohhU4JGMh9YJULQ5f8j+qe5+DibFVrdJk/oP1cdXz5
         484qH28BECh7uKYGiWSaR75b0qocmf1poTaFY=
MIME-Version: 1.0
Received: by 10.213.4.9 with SMTP id 9mr1408707ebp.86.1329326540177; Wed, 15
 Feb 2012 09:22:20 -0800 (PST)
Received: by 10.213.4.5 with HTTP; Wed, 15 Feb 2012 09:22:19 -0800 (PST)
In-Reply-To: <87mx8kruk1.fsf@frosties.localnet>
References: <4F346DB9.2070303@riken.jp>
	<20120210182914.GA17498@annexia.org>
	<87wr7tb77z.fsf@frosties.localnet>
	<4F36AA45.1070502@colba.net>
	<4F38D455.1040204@irisa.fr>
	<4F3B0A46.3070105@riken.jp>
	<87mx8kruk1.fsf@frosties.localnet>
Date: Wed, 15 Feb 2012 12:22:19 -0500
Message-ID: <CAL-jcAnOxmW0OE7j+5g0y17URnMAYz8MKszZH3MXVcGo_5FpVA@mail.gmail.com>
From: Edgar Friendly <thelema314@gmail.com>
To: Goswin von Brederlow <goswin-v-b@web.de>
Cc: Francois Berenger <berenger@riken.jp>, caml-list@inria.fr,
        biocaml@googlegroups.com
Content-Type: multipart/alternative; boundary=000e0cd3401237c33a04b903f478
Subject: Re: [Caml-list] Fwd: interval trees


--000e0cd3401237c33a04b903f478
Content-Type: text/plain; charset=UTF-8

I struggled with this too, but if you read the wikipedia page
http://en.wikipedia.org/wiki/Interval_tree, he's implemented a centered
interval tree.  Yes, there's a lot of complications needed to insert and
remove, but what he's done works for static interval trees.

His lookup function is `int -> interval list`, not `int -> bool`, so he
must keep all the intervals that overlap the center point so he can return
them.  It's useful to have them sorted by left endpoint as well as right
endpoint.  I might have used arrays for them instead of lists so that
binary search is doable, but if they're small, it doesn't matter much.

E.

On Wed, Feb 15, 2012 at 10:21 AM, Goswin von Brederlow <goswin-v-b@web.de>wrote:

> Francois Berenger <berenger@riken.jp> writes:
>
> > Hello,
> >
> > I did a naive implementation of interval trees for float intervals.
> >
> > It is available here:
> > https://github.com/HappyCrow/interval-tree
> >
> > I wonder if it is possible to construct the trees in a tail recursive
> > fashion. Maybe I knew how to do this when I was still at university.
> >
> > Regards,
> > Francois.
>
> | Node of
>   (* x_mid left_list right_list left_tree right_tree *)
>      float * interval list * interval list * interval_tree * interval_tree
>
> Why interval list? You only need a single interval in leafes and none in
> other nodes (although it can help to store min and max in each node).
>
> You are also missing insert and remove operations, which is the actually
> hard part in this. Inserting an interval might require merging the
> rightmost interval left of the root and the leftmost interval right of
> the root. So you would have 2 removals and one insertion of a combined
> interval, which complicates balancing the whole thing efficiently.
>
> That is the part I'm struggling with.
>
> MfG
>         Goswin
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/wws/info/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>

--000e0cd3401237c33a04b903f478
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

I struggled with this too, but if you read the wikipedia page <a href=3D"ht=
tp://en.wikipedia.org/wiki/Interval_tree">http://en.wikipedia.org/wiki/Inte=
rval_tree</a>, he&#39;s implemented a centered interval tree.=C2=A0 Yes, th=
ere&#39;s a lot of complications needed to insert and remove, but what he&#=
39;s done works for static interval trees.<br>
<br>His lookup function is `int -&gt; interval list`, not `int -&gt; bool`,=
 so he must keep all the intervals that overlap the center point so he can =
return them.=C2=A0 It&#39;s useful to have them sorted by left endpoint as =
well as right endpoint.=C2=A0 I might have used arrays for them instead of =
lists so that binary search is doable, but if they&#39;re small, it doesn&#=
39;t matter much.<br>
<br>E.<br><br><div class=3D"gmail_quote">On Wed, Feb 15, 2012 at 10:21 AM, =
Goswin von Brederlow <span dir=3D"ltr">&lt;<a href=3D"mailto:goswin-v-b@web=
.de">goswin-v-b@web.de</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_=
quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1=
ex">
<div class=3D"im">Francois Berenger &lt;<a href=3D"mailto:berenger@riken.jp=
">berenger@riken.jp</a>&gt; writes:<br>
<br>
&gt; Hello,<br>
&gt;<br>
&gt; I did a naive implementation of interval trees for float intervals.<br>
&gt;<br>
&gt; It is available here:<br>
&gt; <a href=3D"https://github.com/HappyCrow/interval-tree" target=3D"_blan=
k">https://github.com/HappyCrow/interval-tree</a><br>
&gt;<br>
&gt; I wonder if it is possible to construct the trees in a tail recursive<=
br>
&gt; fashion. Maybe I knew how to do this when I was still at university.<b=
r>
&gt;<br>
&gt; Regards,<br>
&gt; Francois.<br>
<br>
</div>| Node of<br>
 =C2=A0 (* x_mid left_list right_list left_tree right_tree *)<br>
 =C2=A0 =C2=A0 =C2=A0float * interval list * interval list * interval_tree =
* interval_tree<br>
<br>
Why interval list? You only need a single interval in leafes and none in<br>
other nodes (although it can help to store min and max in each node).<br>
<br>
You are also missing insert and remove operations, which is the actually<br>
hard part in this. Inserting an interval might require merging the<br>
rightmost interval left of the root and the leftmost interval right of<br>
the root. So you would have 2 removals and one insertion of a combined<br>
interval, which complicates balancing the whole thing efficiently.<br>
<br>
That is the part I&#39;m struggling with.<br>
<br>
MfG<br>
<span class=3D"HOEnZb"><font color=3D"#888888"> =C2=A0 =C2=A0 =C2=A0 =C2=A0=
Goswin<br>
</font></span><div class=3D"HOEnZb"><div class=3D"h5"><br>
--<br>
Caml-list mailing list. =C2=A0Subscription management and archives:<br>
<a href=3D"https://sympa-roc.inria.fr/wws/info/caml-list" target=3D"_blank"=
>https://sympa-roc.inria.fr/wws/info/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
<br>
</div></div></blockquote></div><br>

--000e0cd3401237c33a04b903f478--
