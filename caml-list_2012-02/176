Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id q1MKtdM3014843
	for <caml-list@sympa-roc.inria.fr>; Wed, 22 Feb 2012 21:55:39 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AtwDAMZVRU9KN1ZKnGdsb2JhbABEhSitRwEBAQEBBg0JHSeBdAEFI1YQCxoCGA4CAj0KEAYbh3wGpiOSF4EviygBAgQBGwcDAQIFAgUJBAIBDAIDEg8GCAKFGAsBAjIngiczYwSbAo0k
X-IronPort-AV: E=Sophos;i="4.73,466,1325458800"; 
   d="scan'208";a="145503952"
Received: from mail6.webfaction.com (HELO smtp.webfaction.com) ([74.55.86.74])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 22 Feb 2012 21:55:33 +0100
Received: from heyho.local (71-234.197-178.cust.bluewin.ch [178.197.234.71])
	by smtp.webfaction.com (Postfix) with ESMTP id 23660207B56F;
	Wed, 22 Feb 2012 14:55:30 -0600 (CST)
Date: Wed, 22 Feb 2012 21:55:27 +0100
From: =?utf-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: Tiphaine Turpin <Tiphaine.Turpin@inria.fr>
Cc: caml-list@inria.fr
Message-ID: <72EAA5944D204F96B346004A6E45A1B0@erratique.ch>
In-Reply-To: <4F452F9F.4050203@inria.fr>
References: <4F452F9F.4050203@inria.fr>
X-Mailer: sparrow 1.5 (build 1043.1)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Subject: Re: [Caml-list] [ANN] TypeRex release 1.0.0 candidate 1

Hello,  

I gave it a (superficial) try. Here are a few comments. 
> * Improved syntax coloring

I find both your color scheme and tuareg's one to be particularly unreadable (too many colors and use of bold). Don't take it personally, these things are about taste. Anyway, would it be possible to include, in the distribution a theme matching the mode of OCaml's distribution ? 



> * Auto-completion of identifiers (experimental)



Disregarding the menu showing the possible completions, is it significantly different from 'dabbrev-expand ? Is it module-aware, couldn't for example complete the symbols from List.* ? Is it type-aware ? Also on my machine it seems to slowdown typing significantly. 

Finally, one thing I don't like is the way you ask me to change my build system to use your tools. I don't want to directly mention your tools. Mainly because I want to distribute the software and don't want to impose a dependency on your tools to my users/contributors and don't want to complexify my build system. 

Here is a suggestion. I think most people using emacs invoke their build system via a shell script (if they use ocamlbuild, here is an example [1]) or a Makefile. If these scripts/Makefiles are "correctly" written you can override their tools by setting (more or less) standard environment variables like (OCAMLC, OCAMLOPT, OCAMLBUILD). Now when I C-cc, I don't mind writing something like :

ocp-env ./build 

instead of :

./build 

Basically ocp-env just acts like env(1) and set various variables in the environment before invoking the script/Makefile. E.g.

OCAMLBUILD="ocamlbuild -ocamlc ocp-ocamlc.opt -ocamlopt ocp-ocamlopt.opt"
OCAMLC=ocp-ocamlc.opt
CAMLC=ocp-ocamlc.opt
OCAMLOPT=ocp-ocamlopt.opt
CAMLOPT=ocp-ocamlopt.opt

This could be just a shell-script around env(1), by the way. Now instead of instructing your users to change their Makefile/scripts just tell them to wrap their invocation with ocp-env. 

Another suggestion is to include the wrapper ocp-ocamlbuild defined as suggested above in OCAMLBUILD. Then, instead of instructing your users to change their myocamlbuild.ml that they may not even have (if they are just using a _tags file), just tell them to invoke ocp-ocamlbuild. Even simpler. 

Other than that the whole thing seems quite nice. I may see myself eventually using this. 

Thanks for the tools. 

Best,

Daniel

[1] http://erratique.ch/repos/cmdliner/tree/build?id=v0.9.0


