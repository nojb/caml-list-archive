Return-Path: <olaf@aepfle.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 50F607FDC7
	for <caml-list@sympa.inria.fr>; Fri, 27 May 2016 10:14:32 +0200 (CEST)
IronPort-PHdr: 9a23:e3ZA2x16uh6c6qeUsmDT+DRfVm0co7zxezQtwd8ZsegfK/ad9pjvdHbS+e9qxAeQG96LurQY1aGP6PiocFdDyKjCmUhKSIZLWR4BhJdetC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TWM5DIfUi/yKRBybrysXNWC3oLriavroMWbSj4LrQT+SIs6FA+xowTVu5teqqpZAYF19CH0pGBVcf9d32JiKAHbtR/94sCt4MwrqHwI6LoJvvRNWqTifqk+UacQTHF/azh0t4XXskzoTRGO/WcbSmUb2iZSBAXe8BX3RN+lmSvgt/Fh3zGaMIvKV7c5Qiim4r1DVRrvjjxBPjV/+myB2eJqi6cOhxaoqVRfzpTVZo7dYP16d631dN4CS25MGMpcAX8SSrigZpcCWrJSdd1TqJPw8h5X9UOz
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=olaf@aepfle.de; spf=None smtp.mailfrom=olaf@aepfle.de; spf=None smtp.helo=postmaster@mx2.suse.de
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  olaf@aepfle.de) identity=pra; client-ip=195.135.220.15;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="olaf@aepfle.de"; x-sender="olaf@aepfle.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  olaf@aepfle.de) identity=mailfrom; client-ip=195.135.220.15;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="olaf@aepfle.de"; x-sender="olaf@aepfle.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mx2.suse.de) identity=helo;
  client-ip=195.135.220.15;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="olaf@aepfle.de";
  x-sender="postmaster@mx2.suse.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0B8AABcAUhXiA/ch8NcDoQBfbdegg8BDYF4IoVvAoE3OBQBAQEBAQEBAREBAQEKCQ0HIS+CLoIWAQEDASNWBQsLCw8CBSECAg8FSYg6DAqyPZFIAQEBAQEFAQEBAQEigQGJcodAK4IuBZg3hgCIFgpmgVGHBoVfj0weAQGCWYEbPWyKCAEBAQ
X-IPAS-Result: A0B8AABcAUhXiA/ch8NcDoQBfbdegg8BDYF4IoVvAoE3OBQBAQEBAQEBAREBAQEKCQ0HIS+CLoIWAQEDASNWBQsLCw8CBSECAg8FSYg6DAqyPZFIAQEBAQEFAQEBAQEigQGJcodAK4IuBZg3hgCIFgpmgVGHBoVfj0weAQGCWYEbPWyKCAEBAQ
X-IronPort-AV: E=Sophos;i="5.26,373,1459807200"; 
   d="scan'208";a="219967837"
Received: from mx2.suse.de ([195.135.220.15])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-CAMELLIA256-SHA; 27 May 2016 10:14:31 +0200
X-Virus-Scanned: by amavisd-new at test-mx.suse.de
Received: from relay2.suse.de (charybdis-ext.suse.de [195.135.220.254])
	by mx2.suse.de (Postfix) with ESMTP id 19419AABC;
	Fri, 27 May 2016 08:14:30 +0000 (UTC)
Date: Fri, 27 May 2016 10:14:29 +0200
From: Olaf Hering <olaf@aepfle.de>
To: Christophe Troestler <Christophe.Troestler@umons.ac.be>
Cc: caml-list@inria.fr
Message-ID: <20160527081429.GA18793@gmail.com>
References: <20160526201110.GA14443@aepfle.de>
 <87twhkk035.fsf@poincare3.umons.ac.be>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <87twhkk035.fsf@poincare3.umons.ac.be>
User-Agent: Mutt/1.6.1 (6648)
Subject: Re: [Caml-list] OASIS help: link stublib to system lib and another
 caml lib

On Thu, May 26, Christophe Troestler wrote:

> "-lfuse" is needed because it is the library you bind to but
> "-L/usr/lib64/ocaml -lcamlidl" should be handled by "camlidl" (specifically
> by `ocamlfind query camlidl`/com.cma).

Are you saying that something should automatically generate and pass the
-L option to the compiler with the provided _oasis file? For me nothing
like that happens if I add just '-lfuse -lcamlidl' to CcOpt:
execve("/usr/bin/gcc", ["gcc", "-shared", "-o", "lib/dllFuse_stubs.so",
"lib/Fuse_util.o", "lib/Unix_util_stubs.o", "lib/Fuse_bindings_stubs.o",
"-lfuse", "-lcamlidl"]

For the time being my workaround is to use '-L/usr/lib64/ocaml
-L/usr/lib/ocaml' which appearently fixes 32 and 64bit builds.

To me it looks like "OCamlbuild additional flags:" needs to be set.
Is there a way to pass this via 'ocaml setup.ml -configure'?

> Otherwise, if you have a way of detecting the right path, you can add some
> code in setup.ml that define a variable (that will end up in setup.data) and
> get its value back in myocamlbuild.ml to add some flags. See the following
> example that detects the path to give to clang so that it links the gfortran
> library:
> https://github.com/Chris00/ocaml-odepack/blob/master/setup.ml#L68

I think thats a very bad advice. Are you suggesting to ignore the 'DO
NOT EDIT' of each generated setup.ml? Being able to regenerate the files
required for building from scratch is essential.

Olaf
