Return-Path: <gmalecha@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id E595A7EE79
	for <caml-list@sympa.inria.fr>; Mon, 16 May 2016 20:53:26 +0200 (CEST)
IronPort-PHdr: 9a23:LxyoWBI+vbDU2UxO49mcpTZWNBhigK39O0sv0rFitYgVKP3xwZ3uMQTl6Ol3ixeRBMOAu6MC0bSd6vq8EUU7or+/81k6OKRWUBEEjchE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i760zceF13FOBZvIaytQ8iJ35Xxjb75osePKyxzxxODIppKZC2sqgvQssREyaBDEY0WjiXzn31TZu5NznlpL1/A1zz158O34YIxu38I46Fp34d6XK77Z6U1S6BDRHRjajhtpZ6jiR6WfAyT735UeGwMlB1ZS1zU6w3zW534qC39p8Jy3SCbOYv9SrViHXyN4r1nACT0jyMfMjc/9imDi8p+i4pUrQit4gdjxIrMZYiTMrxyc/WOU8kdQD9uRMteUDZQSqa1a4YED+NJaeldpo3wrFsHhRS7DAioQujoz2kb1TfNwaQm3rF5Qkn91ws6EodL6SyMoQ==
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=gmalecha@gmail.com; spf=Pass smtp.mailfrom=gmalecha@gmail.com; spf=None smtp.helo=postmaster@mail-oi0-f42.google.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  gmalecha@gmail.com) identity=pra; client-ip=209.85.218.42;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gmalecha@gmail.com";
  x-sender="gmalecha@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  gmalecha@gmail.com designates 209.85.218.42 as permitted
  sender) identity=mailfrom; client-ip=209.85.218.42;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gmalecha@gmail.com";
  x-sender="gmalecha@gmail.com"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-oi0-f42.google.com) identity=helo;
  client-ip=209.85.218.42;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="gmalecha@gmail.com";
  x-sender="postmaster@mail-oi0-f42.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0BNAgAzFjpXjyraVdFchAx+shWCYYUFgXYkhW0CgS45EwEBAQEBAQEBEQEBAQEHCwsJIS9BEgGBWYIVAQEBAwESEQQZARQHDw4BAwELBgMCBAcNKgICIQEBEQEFARwGARIJGYdyAQMPCA6Re49CgTE+MYs7gWqCWAWHVwoZJw1Sg1UBAQEBAQEBAQEBAQEBAQEBAQEBAQEUAgYQhR14hE2CQ4IIIYJTglkFh36PeDGFfoYnA4F2gjeMYodchicwgQ4PEwOCNh6BVTwyAYUyglMBAQE
X-IPAS-Result: A0BNAgAzFjpXjyraVdFchAx+shWCYYUFgXYkhW0CgS45EwEBAQEBAQEBEQEBAQEHCwsJIS9BEgGBWYIVAQEBAwESEQQZARQHDw4BAwELBgMCBAcNKgICIQEBEQEFARwGARIJGYdyAQMPCA6Re49CgTE+MYs7gWqCWAWHVwoZJw1Sg1UBAQEBAQEBAQEBAQEBAQEBAQEBAQEUAgYQhR14hE2CQ4IIIYJTglkFh36PeDGFfoYnA4F2gjeMYodchicwgQ4PEwOCNh6BVTwyAYUyglMBAQE
X-IronPort-AV: E=Sophos;i="5.26,627,1459807200"; 
   d="scan'208,217";a="177956725"
Received: from mail-oi0-f42.google.com ([209.85.218.42])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 16 May 2016 20:53:25 +0200
Received: by mail-oi0-f42.google.com with SMTP id x19so282301972oix.2
        for <caml-list@inria.fr>; Mon, 16 May 2016 11:53:25 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=OxQL9xV/gZF/Xi4D4kLzU5iHK8fcmHICLeTJ9SHjkpg=;
        b=NyZvsbtYwopJyoBQiNeqEC79a1nqNidpcvHHUPybMWQwYq9sfQeKP8U3AeIyK4pH2p
         bsP2dsmV6ClUKY9ncDxGA41ADDl7vX492S8BAbKzfHm3VBaliOnGh0Maw6VHH8E8H2Dn
         x0XXuNSGH5HYkdpP2NFMXrmLg4t+T8oK1YBJ/k2Q99qmEVPGiqDlYJIL75RZqPy4+5Jj
         3xHvTlqyEnNtY9LqhlfxNWzN4mKS8KqRbdmorqt4qAJX0fmSGA7OmxDEWJgyN3ua/ikX
         3aUhkJpUZzYvuyIhmOc6ZjEgzD5jHM80Zkesfol+kEGaDM+VQ/7OB0yrl24lQKrCKEEE
         VGFA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=OxQL9xV/gZF/Xi4D4kLzU5iHK8fcmHICLeTJ9SHjkpg=;
        b=PIwLaSXV1dsBK+uflHI8naln0Oz6LJ3YZDFxj2D+wTX+CxeW+QbXSmXIQnGGbVuNjF
         zqOvRPPkQKBFk+EAKkoWsHQzsn0S9WuZyDqzXcKwFs901SrOL1k5jNXrce+FYYaACGq/
         Ton6vKVppn0tPivCUDHwTxwVw1cTrbnAcp+AR+gZDjmryY0tActa/ZNXT8YgHFFVwkr8
         RqA+XCHla3/lmAj1IqchqnqePbGDSKSIHHgMuBRlb9AooC1S8mxIlav9OUu+X9PJIIDK
         gCg7akfnKKmzpJz1HnFvV6nGGj7KgxUXdRiygv/+YBsCyoaFSuJ98rQVEn2jebW9iSfS
         x6IA==
X-Gm-Message-State: AOPr4FVbGHpPJg46Q50masZuqsgsW2FDPKFKun/QMW4Y7Au2x7i7bA5W4OUF78fhlUX9y1cWlbJ7XQmudoU1/w==
X-Received: by 10.157.9.227 with SMTP id 32mr5239199otz.132.1463424804367;
 Mon, 16 May 2016 11:53:24 -0700 (PDT)
MIME-Version: 1.0
References: <1463412482-sup-8520@hennequin-xps> <CAPFanBEXbZJLTvj06Wug1WKRCb9D4HG6h8YL6oqdjHwXEtFEmw@mail.gmail.com>
 <1463417600-sup-2106@hennequin-xps> <1463419945.3467.32.camel@e130.lan.sumadev.de>
 <CAN6ygOmuzabSShsyO0WEUy8qtRj-UWs_1XTa6n-48KwX6JZF_w@mail.gmail.com>
In-Reply-To: <CAN6ygOmuzabSShsyO0WEUy8qtRj-UWs_1XTa6n-48KwX6JZF_w@mail.gmail.com>
From: Gregory Malecha <gmalecha@gmail.com>
Date: Mon, 16 May 2016 18:53:14 +0000
Message-ID: <CAGraiHJub80jTb-SPpKeT+iR5b93g5Q8vQ=qoi5benS_Uj7uyQ@mail.gmail.com>
To: Yotam Barnoy <yotambarnoy@gmail.com>, Gerd Stolpmann <info@gerd-stolpmann.de>
Cc: Guillaume Hennequin <g.hennequin@eng.cam.ac.uk>, caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a113d1bfa9eb3c60532fa235c
Subject: Re: [Caml-list] issue with polymorphism

--001a113d1bfa9eb3c60532fa235c
Content-Type: text/plain; charset=UTF-8

There may other reasons as well, e.g. performance and compilability, but
the main reason that I know is that inferring these types is difficult
(undecideable in general). For a point of comparison, GHC supports types
like this, but only when they are explicitly written.

On Mon, May 16, 2016, 11:50 AM Yotam Barnoy <yotambarnoy@gmail.com> wrote:

> Paging the type experts -- is there a concrete reason why we disallow
> writing this type directly?
>
> On Mon, May 16, 2016 at 1:32 PM, Gerd Stolpmann <info@gerd-stolpmann.de>
> wrote:
>
>> Am Montag, den 16.05.2016, 17:55 +0100 schrieb Guillaume Hennequin:
>> > Thanks all for your prompt answers;
>> >
>> > > See the FAQ entry, "How to write a function with polymorphic
>> arguments?"
>> > >
>> https://ocaml.org/learn/faq.html#Howtowriteafunctionwithpolymorphicarguments
>> >
>> > this page explains how to do it with records or objects, but ends with a
>> > mysterious "FIXME: a direct way now exists". Does anyone know what this
>> might
>> > refer to?
>>
>> What you would need is
>>
>> let print_both : ('a . 'a -> 'a) -> unit = ...
>>
>> i.e. the scope of the quantifier is restricted to the first argument.
>> This doesn't exist to my knowledge. Maybe it was part of some dev
>> version?
>>
>> Gerd
>> --
>> ------------------------------------------------------------
>> Gerd Stolpmann, Darmstadt, Germany    gerd@gerd-stolpmann.de
>> My OCaml site:          http://www.camlcity.org
>> Contact details:        http://www.camlcity.org/contact.html
>> Company homepage:       http://www.gerd-stolpmann.de
>> ------------------------------------------------------------
>>
>>
> --

- gregory malecha
  gmalecha.github.io

--001a113d1bfa9eb3c60532fa235c
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<p dir=3D"ltr">There may other reasons as well, e.g. performance and compil=
ability, but the main reason that I know is that inferring these types is d=
ifficult (undecideable in general). For a point of comparison, GHC supports=
 types like this, but only when they are explicitly written.</p>
<br><div class=3D"gmail_quote"><div dir=3D"ltr">On Mon, May 16, 2016, 11:50=
 AM Yotam Barnoy &lt;<a href=3D"mailto:yotambarnoy@gmail.com">yotambarnoy@g=
mail.com</a>&gt; wrote:<br></div><blockquote class=3D"gmail_quote" style=3D=
"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=3D=
"ltr">Paging the type experts -- is there a concrete reason why we disallow=
 writing this type directly?</div><div class=3D"gmail_extra"><br><div class=
=3D"gmail_quote">On Mon, May 16, 2016 at 1:32 PM, Gerd Stolpmann <span dir=
=3D"ltr">&lt;<a href=3D"mailto:info@gerd-stolpmann.de" target=3D"_blank">in=
fo@gerd-stolpmann.de</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_qu=
ote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex=
">Am Montag, den 16.05.2016, 17:55 +0100 schrieb Guillaume Hennequin:<br>
&gt; Thanks all for your prompt answers;<br>
&gt;<br>
&gt; &gt; See the FAQ entry, &quot;How to write a function with polymorphic=
 arguments?&quot;<br>
&gt; &gt;=C2=A0 =C2=A0<a href=3D"https://ocaml.org/learn/faq.html#Howtowrit=
eafunctionwithpolymorphicarguments" rel=3D"noreferrer" target=3D"_blank">ht=
tps://ocaml.org/learn/faq.html#Howtowriteafunctionwithpolymorphicarguments<=
/a><br>
&gt;<br>
&gt; this page explains how to do it with records or objects, but ends with=
 a<br>
&gt; mysterious &quot;FIXME: a direct way now exists&quot;. Does anyone kno=
w what this might<br>
&gt; refer to?<br>
<br>
What you would need is<br>
<br>
let print_both : (&#39;a . &#39;a -&gt; &#39;a) -&gt; unit =3D ...<br>
<br>
i.e. the scope of the quantifier is restricted to the first argument.<br>
This doesn&#39;t exist to my knowledge. Maybe it was part of some dev<br>
version?<br>
<span><font color=3D"#888888"><br>
Gerd<br>
--<br>
------------------------------------------------------------<br>
Gerd Stolpmann, Darmstadt, Germany=C2=A0 =C2=A0 <a href=3D"mailto:gerd@gerd=
-stolpmann.de" target=3D"_blank">gerd@gerd-stolpmann.de</a><br>
My OCaml site:=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 <a href=3D"http://www.caml=
city.org" rel=3D"noreferrer" target=3D"_blank">http://www.camlcity.org</a><=
br>
Contact details:=C2=A0 =C2=A0 =C2=A0 =C2=A0 <a href=3D"http://www.camlcity.=
org/contact.html" rel=3D"noreferrer" target=3D"_blank">http://www.camlcity.=
org/contact.html</a><br>
Company homepage:=C2=A0 =C2=A0 =C2=A0 =C2=A0<a href=3D"http://www.gerd-stol=
pmann.de" rel=3D"noreferrer" target=3D"_blank">http://www.gerd-stolpmann.de=
</a><br>
------------------------------------------------------------<br>
<br>
</font></span></blockquote></div><br></div>
</blockquote></div><div dir=3D"ltr">-- <br></div><p dir=3D"ltr">- gregory m=
alecha<br>
=C2=A0 <a href=3D"http://gmalecha.github.io">gmalecha.github.io</a></p>

--001a113d1bfa9eb3c60532fa235c--
