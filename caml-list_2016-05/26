Return-Path: <michael.soegtrop@intel.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 724CA7EE79
	for <caml-list@sympa.inria.fr>; Fri,  6 May 2016 11:04:51 +0200 (CEST)
IronPort-PHdr: 9a23:+J0h9BOg7whcXIO46YMl6mtUPXoX/o7sNwtQ0KIMzox0KPv4rarrMEGX3/hxlliBBdydsKIVzbKI+PiwEUU7or+/81k6OKRWUBEEjchE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i760zceF13FOBZvIaytQ8iJ35Xxj775o82bSj4LrQT+SIs6FA+xowTVu5teqqpZAYF19CH0pGBVcf9d32JiKAHbtR/94sCt4MwrqHwI6Lpyv/JHBO/xdqE8CLhZFygOMmYv5cStuwOJBV+E734YF2EXiQZgAg7f7Ri8UI2n4QXgse8okhKdMMLqV7csHXyH7qxrQRLswm9TMj8y8Gjajopri69UvAimvzR+xZLZZMeeM/8oLfCVRs8TWWcUBpUZbCdGGI7pN4Y=
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=michael.soegtrop@intel.com; spf=Pass smtp.mailfrom=michael.soegtrop@intel.com; spf=None smtp.helo=postmaster@mga11.intel.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  michael.soegtrop@intel.com) identity=pra;
  client-ip=192.55.52.93;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="michael.soegtrop@intel.com";
  x-sender="michael.soegtrop@intel.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  michael.soegtrop@intel.com designates 192.55.52.93 as
  permitted sender) identity=mailfrom; client-ip=192.55.52.93;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="michael.soegtrop@intel.com";
  x-sender="michael.soegtrop@intel.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mga11.intel.com) identity=helo;
  client-ip=192.55.52.93;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="michael.soegtrop@intel.com";
  x-sender="postmaster@mga11.intel.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0AnAAAnXSxXkF00N8BdgmyBH30Gpi+SQwENgXYXAQKFdgKBNjgUAQEBAQEBAQERAQEBAQcNCQkhJAuCLYIbLRxCASpWFwEOAQQbDAeIDgGdS6BnKoYhg0iFCjqCRgtAGIIuBZgaBQGBLZwDjzYeAQGCWIFVbIZ4NgF+AQEB
X-IPAS-Result: A0AnAAAnXSxXkF00N8BdgmyBH30Gpi+SQwENgXYXAQKFdgKBNjgUAQEBAQEBAQERAQEBAQcNCQkhJAuCLYIbLRxCASpWFwEOAQQbDAeIDgGdS6BnKoYhg0iFCjqCRgtAGIIuBZgaBQGBLZwDjzYeAQGCWIFVbIZ4NgF+AQEB
X-IronPort-AV: E=Sophos;i="5.24,586,1454972400"; 
   d="scan'208,217";a="176864065"
Received: from mga11.intel.com ([192.55.52.93])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 06 May 2016 11:04:49 +0200
Received: from orsmga002.jf.intel.com ([10.7.209.21])
  by fmsmga102.fm.intel.com with ESMTP; 06 May 2016 02:04:48 -0700
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="5.24,586,1455004800"; 
   d="scan'208,217";a="969967421"
Received: from irsmsx104.ger.corp.intel.com ([163.33.3.159])
  by orsmga002.jf.intel.com with ESMTP; 06 May 2016 02:04:48 -0700
Received: from irsmsx155.ger.corp.intel.com (163.33.192.3) by
 IRSMSX104.ger.corp.intel.com (163.33.3.159) with Microsoft SMTP Server (TLS)
 id 14.3.248.2; Fri, 6 May 2016 10:04:46 +0100
Received: from irsmsx102.ger.corp.intel.com ([169.254.2.35]) by
 irsmsx155.ger.corp.intel.com ([169.254.14.73]) with mapi id 14.03.0248.002;
 Fri, 6 May 2016 10:04:46 +0100
From: "Soegtrop, Michael" <michael.soegtrop@intel.com>
To: "caml-list@inria.fr" <caml-list@inria.fr>
Thread-Topic: Question on opam mingw32/64 cross for Windows
Thread-Index: AdGndlXTneTdjtLKQEGo1axUUN/3PQ==
Date: Fri, 6 May 2016 09:04:46 +0000
Message-ID: <0F7D3B1B3C4B894D824F5B822E3E5A172CEEEA71@IRSMSX102.ger.corp.intel.com>
Accept-Language: de-DE, en-US
Content-Language: en-US
X-MS-Has-Attach: 
X-MS-TNEF-Correlator: 
x-originating-ip: [163.33.239.180]
Content-Type: multipart/alternative;
	boundary="_000_0F7D3B1B3C4B894D824F5B822E3E5A172CEEEA71IRSMSX102gercor_"
MIME-Version: 1.0
Subject: [Caml-list] Question on opam mingw32/64 cross for Windows

--_000_0F7D3B1B3C4B894D824F5B822E3E5A172CEEEA71IRSMSX102gercor_
Content-Type: text/plain; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable

Dear OCaml Users,

I am working on a cygwin based cross opam for MinGW. There is one issue wit=
h this: on windows it is tricky to build 64 bit binaries with a 32 bit tool=
chain and vice versa. The reason is that the 32 bit and 64 bit system DLLs =
have the same names and which one you get depends on if the exe accessing i=
t is a 32 bit or 64 bit app. So a 32 bit linker will see the 32 bit DLLs an=
d a 64 bit linker will see the 64 bit DLLs due to some black magic in the W=
indows file system (at least as far as I know). So a 64 bit linker cannot e=
asily link 32 bit apps.

I know two ways around this:


1.)    Use a 32 bit cygwin to build 32 bit MinGW apps and a 64 bit cygwin t=
o build 64 bit MinGW apps

2.)    Use a 32 bit and a 64 bit copy program to copy the required system D=
LLs into different folders and tell the linker to get them from there

I wonder if someone has a better solution for this. If not, I would like to=
 know which method the community prefers.

Method 1.) is not so nice for automated creation of multi-platform setups.

Method 2.) might require some adjustments in build files. Also it is tricky=
 to create the two copy programs from sources without method 1.). And final=
ly the system DLLs might change and it is not obvious when to redo the copy=
ing.

Best regards,

Michael

Intel Deutschland GmbH
Registered Address: Am Campeon 10-12, 85579 Neubiberg, Germany
Tel: +49 89 99 8853-0, www.intel.de
Managing Directors: Christin Eisenschmid, Christian Lamprechter
Chairperson of the Supervisory Board: Nicole Lau
Registered Office: Munich
Commercial Register: Amtsgericht Muenchen HRB 186928

--_000_0F7D3B1B3C4B894D824F5B822E3E5A172CEEEA71IRSMSX102gercor_
Content-Type: text/html; charset="us-ascii"
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable

<html xmlns:v=3D"urn:schemas-microsoft-com:vml" xmlns:o=3D"urn:schemas-micr=
osoft-com:office:office" xmlns:w=3D"urn:schemas-microsoft-com:office:word" =
xmlns:m=3D"http://schemas.microsoft.com/office/2004/12/omml" xmlns=3D"http:=
//www.w3.org/TR/REC-html40">
<head>
<meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3Dus-ascii">
<meta name=3D"Generator" content=3D"Microsoft Word 14 (filtered medium)">
<style><!--
/* Font Definitions */
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
/* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{mso-style-priority:99;
	color:purple;
	text-decoration:underline;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-priority:34;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
span.EmailStyle17
	{mso-style-type:personal-compose;
	font-family:"Calibri","sans-serif";
	color:windowtext;}
.MsoChpDefault
	{mso-style-type:export-only;
	font-family:"Calibri","sans-serif";}
@page WordSection1
	{size:8.5in 11.0in;
	margin:70.85pt 70.85pt 56.7pt 70.85pt;}
div.WordSection1
	{page:WordSection1;}
/* List Definitions */
@list l0
	{mso-list-id:2082554525;
	mso-list-type:hybrid;
	mso-list-template-ids:-266302316 1215477116 67698713 67698715 67698703 676=
98713 67698715 67698703 67698713 67698715;}
@list l0:level1
	{mso-level-text:"%1\.\)";
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level2
	{mso-level-number-format:alpha-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level3
	{mso-level-number-format:roman-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:right;
	text-indent:-9.0pt;}
@list l0:level4
	{mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level5
	{mso-level-number-format:alpha-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level6
	{mso-level-number-format:roman-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:right;
	text-indent:-9.0pt;}
@list l0:level7
	{mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level8
	{mso-level-number-format:alpha-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:left;
	text-indent:-.25in;}
@list l0:level9
	{mso-level-number-format:roman-lower;
	mso-level-tab-stop:none;
	mso-level-number-position:right;
	text-indent:-9.0pt;}
ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
--></style><!--[if gte mso 9]><xml>
<o:shapedefaults v:ext=3D"edit" spidmax=3D"1026" />
</xml><![endif]--><!--[if gte mso 9]><xml>
<o:shapelayout v:ext=3D"edit">
<o:idmap v:ext=3D"edit" data=3D"1" />
</o:shapelayout></xml><![endif]-->
</head>
<body lang=3D"EN-US" link=3D"blue" vlink=3D"purple">
<div class=3D"WordSection1">
<p class=3D"MsoNormal">Dear OCaml Users,<o:p></o:p></p>
<p class=3D"MsoNormal"><o:p>&nbsp;</o:p></p>
<p class=3D"MsoNormal">I am working on a cygwin based cross opam for MinGW.=
 There is one issue with this: on windows it is tricky to build 64 bit bina=
ries with a 32 bit toolchain and vice versa. The reason is that the 32 bit =
and 64 bit system DLLs have the same
 names and which one you get depends on if the exe accessing it is a 32 bit=
 or 64 bit app. So a 32 bit linker will see the 32 bit DLLs and a 64 bit li=
nker will see the 64 bit DLLs due to some black magic in the Windows file s=
ystem (at least as far as I know).
 So a 64 bit linker cannot easily link 32 bit apps.<o:p></o:p></p>
<p class=3D"MsoNormal"><o:p>&nbsp;</o:p></p>
<p class=3D"MsoNormal">I know two ways around this: <o:p></o:p></p>
<p class=3D"MsoNormal"><o:p>&nbsp;</o:p></p>
<p class=3D"MsoListParagraph" style=3D"text-indent:-.25in;mso-list:l0 level=
1 lfo1"><![if !supportLists]><span style=3D"mso-list:Ignore">1.)<span style=
=3D"font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Use a 32 bit cygwin to build 32 bit MinGW apps and =
a 64 bit cygwin to build 64 bit MinGW apps<o:p></o:p></p>
<p class=3D"MsoListParagraph" style=3D"text-indent:-.25in;mso-list:l0 level=
1 lfo1"><![if !supportLists]><span style=3D"mso-list:Ignore">2.)<span style=
=3D"font:7.0pt &quot;Times New Roman&quot;">&nbsp;&nbsp;&nbsp;
</span></span><![endif]>Use a 32 bit and a 64 bit copy program to copy the =
required system DLLs into different folders and tell the linker to get them=
 from there<o:p></o:p></p>
<p class=3D"MsoNormal"><o:p>&nbsp;</o:p></p>
<p class=3D"MsoNormal">I wonder if someone has a better solution for this. =
If not, I would like to know which method the community prefers.
<o:p></o:p></p>
<p class=3D"MsoNormal"><o:p>&nbsp;</o:p></p>
<p class=3D"MsoNormal">Method 1.) is not so nice for automated creation of =
multi-platform setups.<o:p></o:p></p>
<p class=3D"MsoNormal"><o:p>&nbsp;</o:p></p>
<p class=3D"MsoNormal">Method 2.) might require some adjustments in build f=
iles. Also it is tricky to create the two copy programs from sources withou=
t method 1.). And finally the system DLLs might change and it is not obviou=
s when to redo the copying.<o:p></o:p></p>
<p class=3D"MsoNormal"><o:p>&nbsp;</o:p></p>
<p class=3D"MsoNormal">Best regards,<o:p></o:p></p>
<p class=3D"MsoNormal"><o:p>&nbsp;</o:p></p>
<p class=3D"MsoNormal">Michael<o:p></o:p></p>
<p class=3D"MsoNormal"><o:p>&nbsp;</o:p></p>
</div>
<p><font style=3D"font-size: 9px;">Intel Deutschland GmbH<br>
Registered Address: Am Campeon 10-12, 85579 Neubiberg, Germany<br>
Tel: +49 89 99 8853-0, www.intel.de<br>
Managing Directors: Christin Eisenschmid, Christian Lamprechter<br>
Chairperson of the Supervisory Board: Nicole Lau<br>
Registered Office: Munich<br>
Commercial Register: Amtsgericht Muenchen HRB 186928</font><br>
</p>
</body>
</html>

--_000_0F7D3B1B3C4B894D824F5B822E3E5A172CEEEA71IRSMSX102gercor_--

