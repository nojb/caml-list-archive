Return-Path: <drupyog+caml@zoho.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 1EBF37F6D8
	for <caml-list@sympa.inria.fr>; Mon, 19 Jan 2015 22:53:13 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  drupyog+caml@zoho.com) identity=pra; client-ip=74.201.84.156;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="drupyog+caml@zoho.com";
  x-sender="drupyog+caml@zoho.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  drupyog+caml@zoho.com designates 74.201.84.156 as permitted
  sender) identity=mailfrom; client-ip=74.201.84.156;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="drupyog+caml@zoho.com";
  x-sender="drupyog+caml@zoho.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@sender1.zohomail.com) identity=helo;
  client-ip=74.201.84.156;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="drupyog+caml@zoho.com";
  x-sender="postmaster@sender1.zohomail.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhIBAJh7vVRKyVScnGdsb2JhbABchDDMOAKBJkMBAQEBAREBAQEBAQYNCQkULoQNAQQBOAsBNwMLCyElDwJGBgEMCAEBiBMBAwEEBAgEuQaFWAKKOiIoJYQEAQEIAhkHkACEKY9QiCWCFoQZg2uIEIQRboJDAQEB
X-IPAS-Result: AhIBAJh7vVRKyVScnGdsb2JhbABchDDMOAKBJkMBAQEBAREBAQEBAQYNCQkULoQNAQQBOAsBNwMLCyElDwJGBgEMCAEBiBMBAwEEBAgEuQaFWAKKOiIoJYQEAQEIAhkHkACEKY9QiCWCFoQZg2uIEIQRboJDAQEB
X-IronPort-AV: E=Sophos;i="5.09,429,1418079600"; 
   d="scan'208";a="96960361"
Received: from sender1.zohomail.com ([74.201.84.156])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-MD5; 19 Jan 2015 22:53:11 +0100
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; 
  s=zapps768; d=zoho.com; 
  h=message-id:date:from:user-agent:mime-version:to:subject:references:in-reply-to:content-type; 
  b=J5uxRRK1jpwSy93Ud0JVL5v3rifjg3+jgNAUWF1XPywaYTGXfCuj7MWIWEM3stmvncaHYsJRZ/Bf
    OsM+1TrzTsUTiO3wtujLZdNDZAE75X4zkUaau3aSFVnrV69hSWrf  
Received: from [192.168.1.49] (ivr94-8-88-162-25-213.fbx.proxad.net [88.162.25.213]) by mx.zohomail.com
	with SMTPS id 1421704381859322.5216896441581; Mon, 19 Jan 2015 13:53:01 -0800 (PST)
Message-ID: <54BD7CBB.50409@zoho.com>
Date: Mon, 19 Jan 2015 22:52:59 +0100
From: Drup <drupyog+caml@zoho.com>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:31.0) Gecko/20100101 Thunderbird/31.4.0
MIME-Version: 1.0
To: Alain Frisch <alain@frisch.fr>, Jun Furuse <jun.furuse@gmail.com>, 
 oleg@okmij.org, caml-list <caml-list@inria.fr>
References: <CAAoLEWswALkLSFj-_sMM8h3+2rNn2Y_8PH70BXugvgmUUceL1g@mail.gmail.com>	<20150114084056.140F6C38A1@www1.g3.pair.com> <CAAoLEWvdRt=nVRKD7d2fVvxeLujurV4+jMaEkm6VWg+oQHrdoQ@mail.gmail.com> <54BCC6D6.6020702@frisch.fr>
In-Reply-To: <54BCC6D6.6020702@frisch.fr>
Content-Type: text/plain; charset=windows-1252; format=flowed
Content-Transfer-Encoding: 7bit
X-ZohoMailClient: External
X-Zoho-Virus-Status: 2
Subject: Re: [Caml-list] [ANN] ppx_monadic.1.0.2, ppx for monadic do,
 pattern


> I can appreciate that authors of tools that requires special syntactic 
> support would love to have their new forms look completely native to 
> users, but the counter-argument can be made that keeping an explicit 
> syntax (through the '%' character) for features that are not part of 
> the official language is a good property. (Camlp4/campl5 are still 
> available for people who want to play with the concrete syntax.)

I personally like the explicitness of the syntax a lot. The only issue 
in OCaml currently is that, given the need for retro compatibility, it 
goes sometimes against the terseness. For example the impossibility to 
do " x@foo" instead of "x[@foo]". That's unavoidable, though.

This is, by the way, a point I dislike a lot with ppx_monadic. It abuses 
the native syntax in completely alien ways and without annotations.

I like ppx_monad's syntax quite better due to the fact that it's always 
explicitly a ppx (thanks to %monad) and do not overload the "do_" 
identifier.

