Return-Path: <SRS0=r8nt=XR=polytechnique.org=alan.schmitt@bounces.m4x.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 6E54BE034D
	for <caml-list@sympa.inria.fr>; Tue, 12 Jul 2022 09:59:30 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=Pass smtp.pra=alan.schmitt@polytechnique.org; spf=Pass smtp.mailfrom=SRS0=r8nt=XR=polytechnique.org=alan.schmitt@bounces.m4x.org; spf=Pass smtp.helo=postmaster@mx1.polytechnique.org
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  alan.schmitt@polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=pra; client-ip=129.104.30.34;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="SRS0=r8nt=XR=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="alan.schmitt@polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  SRS0=r8nt=XR=polytechnique.org=alan.schmitt@bounces.m4x.org
  designates 129.104.30.34 as permitted sender)
  identity=mailfrom; client-ip=129.104.30.34;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="SRS0=r8nt=XR=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="SRS0=r8nt=XR=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  postmaster@mx1.polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=helo; client-ip=129.104.30.34;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="SRS0=r8nt=XR=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="postmaster@mx1.polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1";
  x-record-text="v=spf1 a -all"
IronPort-SDR: nbDwD+qG/O9uY/rwhlvmv1t5n5VnpgzdZv/w6CA6E3ChzSM2PjBJbDEvvZBSTJSDBd5OkyzEo0
 6tMMMcHUV2K8rLXUhh02JVB+A7Bv3wq6liZikjHy4rAQv46/yGFyziRFXzQKK0DvZwzs0Xinvp
 cN9VuOnjsklkMCqMABQwixrHrM9zfzkvnbTvrnyIegizMUY1J24MwI4C63Mxpi20Bq8b2dtCNc
 ZN6MSzpkz7jUBvTRuAkOqF843EA2T6OVg+dKQrPdTJHPdWcEog/0e1k2tatHCOuqbRaF1GW7w8
 BaHtB4DbOpriRhhfhHCAjGkY
X-IPAS-Result: =?us-ascii?q?A0AYAQCnKM1imCIeaIFaEwEBgkOBIYEDGQFnVhYYBwhFh?=
 =?us-ascii?q?E6JAIgNgRaIQoZ/jCEUgREDTxABAwENLAEOBAECBAEBhQSFDwIeBgEFMQcOA?=
 =?us-ascii?q?QIEAQEBAQMCAwEBAQEBAQMBAQUBAQECAQECBAQBEwEBAQEBAQEBCQsJBwYMB?=
 =?us-ascii?q?RAOBTxkZASBSwSBdAs0DYI1DAwDA4N3ARgJChMBAS8JGCMDFAEGAwIRARcBH?=
 =?us-ascii?q?hcBEhkBgmMBgxgDBQuSE5saeoExgQGCCAEBBoE/AQMCAQIJAgIDGCUBg3SBX?=
 =?us-ascii?q?AkkgRmGIGBMAYMRCYQTAicQgVVEgRWCKUoHboJACxcBAQEBAYEoARECAQYCA?=
 =?us-ascii?q?kODKYJlkleIOgc4A0cvEoEfbAEIBgYHCgUwBgIMGBQEAhMSTQYWAhIMCgYTD?=
 =?us-ascii?q?kEQFwwPAxIDDwEHAgkQCBIlCAMCAwgDAgMmAgMWCQ4DHQgKGBIQEgIEERoLC?=
 =?us-ascii?q?AMWPwkCBA4DQAgOAxEEAw8YCRIIEAQGAzIMJQsDBQ8NAQYDBgIFBQEDIAMUA?=
 =?us-ascii?q?wUkBwMhDyYNDQQiHQMDBSUDAgIbBwICAwIGFQYCAhhUOQgECAQrJA8FAgcvB?=
 =?us-ascii?q?QQvAh4EBQYRCAIWAgYEBQIEBBYCEAgCCCcXBxMzGQEFWRAJIRYGJxAFBhUDI?=
 =?us-ascii?q?UcmBUUPKDQ2PCwfGwqBFSwJIhYDBAQDAgYaAwMiAhApBjEDFQYpFRQaEwkqg?=
 =?us-ascii?q?QMJAgMZBiKYOoQjCQQiDj5NFAMBERkcDgEBIAI2KgMHBAEKBToOFSITAQoLA?=
 =?us-ascii?q?pIbNScCjW+KaIJhkV19NAeDUYE+BgyIMIEijQOIJIVFjD2WYyGWViCJLIETC?=
 =?us-ascii?q?YJKlFoEBAuFKYFOGgR3I3AzGjBDgmgJRQEDAg0BAgIDAQIBAgkBAQKOJINrg?=
 =?us-ascii?q?mSBdTuFTD80AgEBNwIGAQoBAQMJhWMBAQUTCwGGNYFtWgEB?=
IronPort-PHdr: A9a23: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
IronPort-Data: A9a23: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
IronPort-HdrOrdr: A9a23:dtKghql5y2Wk32AdJ8AjHy1xQ8HpDfP9imdD5ihNYBxZY6Wkvu
 i0lvUayhP4zB4NMUtQw+xoS5PwNE80lKQFkLX5Uo3SIDUO0lHFEGhd1/qt/9SNIVyHygcZ79
 YcT0CRYOeAVmSTo67BkU2F+vwbsZy6GDjCv5aH859VJTsaMp2JBW9Ce0Gm+zRNNU977PkCZe
 ShD6h81kWdkC8sH4XLRkXtNtKrz7ag+/yHEH12ZW9DmW3+60LQ1Fe5KWnj4v55aUID/V4Myx
 mHr+WT3NTojxjP8G6v64al1eUhpDKO8Ko5OCSz4PJlZgkE8jzYFPUTZ1Tuhl0IidDq01osmM
 TBuFMYIsp+r0nJdmWeqQf212DboX0Twk6n8lOeiWbuuojBWTw3T/BZjYZieB3D5yMbzZlB+Z
 MO5G6fv4daFlf4gSrwo+LQXxVRi0KorRMZ4KcuZ3c0a/pQVFaPl+1vm399IdMyDQb944AjHK
 1FCsXZ7PFaGGnqG0zxjy1d0firVXQ3ElO4TlMZusqTugIm60xR/g8ewogWhX0A9I0wIqM0pd
 j5Dg==
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-AV: E=Sophos;i="5.92,265,1650924000"; 
   d="scan'208,217";a="45240500"
X-MGA-submission: =?us-ascii?q?MDEoE0KweqqaG2q6Gpevq4sik8cAwftqkhOcx1?=
 =?us-ascii?q?zXL3I8qKH48CiEnjwFyF1Ofdl3fYTzXzf2BoNzCBMnHV6iyHIccMESGm?=
 =?us-ascii?q?wbbdPw8n9427jVpkLE7HqjxhER/auyAlnbwtiSYlXju6/1CONKuExK3B?=
 =?us-ascii?q?71mTWGI81pcSkpj5drqos9EQ=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 12 Jul 2022 09:59:29 +0200
Received: from set (set.irisa.fr [131.254.10.170])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id D94375647D6;
	Tue, 12 Jul 2022 09:59:28 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=polytechnique.org;
	s=svoboda; t=1657612768;
	bh=Hpo8eCtgTd2jFJpGYdhTRQID9DkL0bLWlLR721wHY3Y=;
	h=From:To:Subject:Date:Message-ID;
	b=o+YZ9EWwwB3kkdhxj6rF0XmDCXDxowbGskAgkZi6t+DoVbkyjqEnFP1e7Ohpfn/us
	 jIZ8NeB/dxQ34W09qQ8r3xDqzYPam+w6Qos+dip167Mgb/gS1u8GUUBO1TrqN6z2y5
	 iD4suvTuKuCqHArgDyUGSMfkia4CStv2nFqgGn8U=
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr
Date: Tue, 12 Jul 2022 09:59:28 +0200
Message-ID: <87h73mn4m7.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Jul 12 09:59:29 2022 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.448229, queueID=262EE5647DA
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Hello

Here is the latest OCaml Weekly News, for the week of July 05 to 12,
2022.

Table of Contents
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

Dune how to define custom build task
Timedesc 0.8.0 - modern date time handling
containers 3.9
OBazl 2.0.0-alpha-1 (Building OCaml SW with Bazel)
QCheck 0.19
Opam-cross-windows now supports OCaml 4.14.0!
Other OCaml News
Old CWN


Dune how to define custom build task
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/dune-how-to-define-custom-build-task/10092/1>


cnmade explained
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  dune has very powerful extensions, but the documentation doesn't tell
  you directly. Today I'll share a specific example of how we can make
  dune do many things with a dune configuration.

  For example

  =E2=80=A2 Publish compiled documents to our documentation server
  =E2=80=A2 Sending email notifications to email groups
  =E2=80=A2 Sending SMS notifications to administrators
  =E2=80=A2 Build a document and open a browser to preview the document page

  Let's start with an example, we create a dune file in the root
  directory of our project, which you may not have originally, you have
  to create a new one, we enter the following

  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 ; now we tell you how to define a custom rule
  =E2=94=82 ; rule start with (rule )
  =E2=94=82 (rule
  =E2=94=82 ; (alias is point  the command name , so you can run this rule =
by call  dune build @docopen
  =E2=94=82  (alias docopen)
  =E2=94=82  ; following line is very important, it tell dune do not cache =
this build command, so it will running every call
  =E2=94=82 without any cache
  =E2=94=82  (deps (universe))
  =E2=94=82  ; action  (system  to told system run command by `sh` in your =
Linux/MacOS, windows user may running cmd.exe
  =E2=94=82  ; cd ../.. is change the base directory of the running command=
 ,or the default directory will be _build/default
  =E2=94=82  (action (system "cd ../.. && pwd &&  dune build @doc && open _=
build/default/_doc/_html/index.html" ))
  =E2=94=82 )
  =E2=94=82 ; end of one piece of rule
  =E2=94=82=20
  =E2=94=82 ; and we define more and more rule as we want
  =E2=94=82 (rule
  =E2=94=82   (alias whoami)
  =E2=94=82   (deps (universe))
  =E2=94=82   (action (system "uname -a;whoami"))
  =E2=94=82 )
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  In this example, we define two rules, the rules are the tasks that
  dune can recognize, in dune, it is called rules

  Because it is a custom build command, we use alias to take a unique
  and non-repeating alias.

  The first build command is to build the document and open the browser
  preview.

  Our alias is docopen

  Then deps we add universe to tell dune that you don't want to cache
  and give me a new build every time. If you don't add this line, dune
  will only give you one build, and then because of the cache, you won't
  be able to execute it later.

  action following by system here, action is the command to start,
  system means to use the system shell (windows is cmd, linux macos is
  sh) to give you the execution of the code you specify.

  You can see the first we are first change the directory to the project
  root directory [because the default directory is _build/default], and
  then we perform the build document generation, and then open open the
  generated html page.

  The first build command is this, if you want to perform the first
  build task, you can type

  `dune build @docopen'

  Then our second build command, relatively simple, with reference to
  the first, we can add a lot of build commands we want to add inside
  this dune configuration file.

  We just need to specify different alias aliases for them, no
  duplication.

  The official documentation also specifies some other available
  commands, I won't go into them one by one. Since I prefer to use shell
  scripts, I really only need the system to execute my shell scripts for
  me.


Timedesc 0.8.0 - modern date time handling
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90

  Archive:
  <https://discuss.ocaml.org/t/ann-timedesc-0-8-0-modern-date-time-handling=
/10138/1>


Darren announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I'm pleased to announce the release of Timedesc 0.8.0.

  Timedesc is a very comprehensive date time handling library with good
  support of time zone.

  [Homepage]


[Homepage] <https://github.com/daypack-dev/timere>

Features
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 Timestamp and date time handling with platform independent time=
 zone
    support
    =E2=80=A2 Subset of the IANA time zone database is built into this libr=
ary
  =E2=80=A2 Supports Gregorian calendar date, ISO week date, and ISO ordinal
    date
  =E2=80=A2 Supports nanosecond precision
  =E2=80=A2 ISO8601 parsing and RFC3339 printing


Main changes since 0.6.0
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 Significantly reduced size of time zone database by using a cus=
tom
    compression scheme
    =E2=80=A2 Many thanks to @glennsl for the proposed scheme at issue [#46]
    =E2=80=A2 This yields reduction of roughly 82% for same date period. The
      exact range of years included has been tuned slightly as well and
      I've lost track of the exact size after compilation.
  =E2=80=A2 Significantly reduced the number of dependencies, and moved JS,=
 JSON
    code into separate packages
    =E2=80=A2 Removed dependencies: `fmt', `containers', `oseq'
      =E2=80=A2 Introduced `sexplib' dependency for sexp handling consequen=
tly
        as previously containers `CCSexp' was used
    =E2=80=A2 Moved JSON code into `timedesc-json' package along with Yojson
      dependency
    =E2=80=A2 Moved `tzlocal' and `tzdb' stuff into their own separate pack=
ages
      (`timedesc-tzlocal' and `timedesc-tzdb' respectively)
    =E2=80=A2 Moved JS tzlocal backend into `timedesc-tzlocal-js' (along wi=
th JS
      specific dependencies)


[#46] <https://github.com/daypack-dev/timere/issues/46>


Quality of life changes
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 Updated string conversion functions based on pretty printers wh=
ich
    raise `Date_time_cannot_deduce_offset_from_utc' to raise the
    exception instead of returning `None'
    =E2=80=A2 This simplifies the handling as return type is now simply just
      `string'
    =E2=80=A2 And for serious stuff users are expected to use only unambigu=
ous
      date times anyway, which would not trigger this exception
  =E2=80=A2 Added ISO8601 printing facilities to `Timestamp' module for
    consistency
    =E2=80=A2 They are just aliases to the RFC3339 printers


containers 3.9
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ann-containers-3-9/10140/1>


Simon Cruanes announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I'm happy to announce that containers 3.9 has just been
  released. Containers is a lightweight, modular extension of the stdlib
  that tries to remains compatible with it.

  Containers is starting to sprout some serialization primitives: it now
  has codecs for Bencode and CBOR. This release also contains a revamp
  of the testlib system (bye qtest) and the use of ocamlformat, for
  potential contributors who enjoy that. Containers should also be
  compatible with OCaml 5.0.


OBazl 2.0.0-alpha-1 (Building OCaml SW with Bazel)
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/obazl-2-0-0-alpha-1-building-ocaml-sw-with-b=
azel/10142/1>


Gregg Reynolds announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I've tagged alpha versions of OBazl [rules_ocaml] and [tools_opam].
  The best way to start exploring is via [demos_obazl], which contains
  over 100 mostly simple demo/test programs, many of which are
  commented.  Three simple commands get you configured and then `bazel
  test test' runs all the tests.

  Tested on MacOS 12.4 and Ubuntu 20.

  Documentation is still in progress but there is useful info at [The
  OBazl Book].

  Lot's of things to say about this version but I'll stick to one point
  of interest.  The four basic OCaml compilers are modeled by Bazel's
  platforms and toolchains mechanisms.  Two of the compilers are
  actually cross-compilers (e.g.  `ocamlc.opt' runs on the system arch
  but targets the OCaml vm), so to pick a compiler you tell OBazl which
  buildhost and targethost platforms you want.  I've predefined
  configurations in [.bazelrc]; for example:

  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 build:bcnc --host_platform=3D@opam//tc/host/build:bc
  =E2=94=82 build:bcnc --platforms=3D@opam//tc/host/target:nc
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  which means to select the `ocamlopt.byte' (cross-)compiler, pass
  `--config=3Dbcnc'.

  Kinda cool IMHO. Maybe overkill for the basic compilers, but the
  mechanism is essential to support remote builds, custom compiler
  implementations and genuine cross-compilers.

  Feedback welcome.


[rules_ocaml] <https://github.com/obazl/rules_ocaml>

[tools_opam] <https://github.com/obazl/tools_opam>

[demos_obazl]
<https://github.com/obazl/demos_obazl/blob/main/rules_ocaml/README.adoc>

[The OBazl Book] <https://obazl.github.io/docs_obazl/>

[.bazelrc]
<https://github.com/obazl/demos_obazl/blob/main/rules_ocaml/.bazelrc>


QCheck 0.19
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ann-qcheck-0-19/10149/1>


Jan Midtgaard announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I'm happy to share the release of QCheck 0.19 - a library for
  property-based testing in OCaml in the style of Haskell's QuickCheck.

  =E2=80=A2 GitHub repo: <https://github.com/c-cube/qcheck>
  =E2=80=A2 Documentation: <https://c-cube.github.io/qcheck/0.19/>

  The 0.19 release brings a range of new features and improvements
  detailed below and combines the effort of several individual
  contributors.

  It is now available on opam.

  Release notes:

  =E2=80=A2 new features and feature extensions
    =E2=80=A2 add optional `debug_shrink' parameters in alcotest interface =
and
      expose default `debug_shrinking_choices' in test runners
    =E2=80=A2 add missing `?handler' parameter to `Test.check_cell_exn'
    =E2=80=A2 add an option `retries' parameter to `Test.make' et al. for
      checking a property repeatedly while shrinking.  This can be
      useful when testing non-deterministic code.
    =E2=80=A2 add `tup2' to `tup9' for generators
    =E2=80=A2 add `Test.make_neg' for negative property-based tests, that a=
re
      expected not to satisfy the tested property.
    =E2=80=A2 add environment variable `QCHECK_LONG_FACTOR' similar to
      `QCHECK_COUNT'
    =E2=80=A2 rename `Gen.opt' to `Gen.option' but keep the old binding for
      compatibility.
    =E2=80=A2 shrinker changes
      =E2=80=A2 recursive `list' shrinker with better complexity
      =E2=80=A2 `string' shrinker reuses improved `list' shrinker and adds
        `char' shrinking
      =E2=80=A2 function shrinker now shrinks default entry first and benef=
its
        from `list' shrinker improvements
      =E2=80=A2 replacing the linear-time `char' shrinker with a faster one
        reusing the bisecting `int' shrinker algorithm
      =E2=80=A2 add `Shrink.char_numeral' and `Shrink.char_printable'
      =E2=80=A2 add shrinking for `char arbitrary~s ~char', `printable_char=
',
        and `numeral_char'

  =E2=80=A2 bug fixes
    =E2=80=A2 fix function generation affecting reproducability
    =E2=80=A2 fix distribution of `QCheck2.printable' which would omit cert=
ain
      characters
    =E2=80=A2 use `Float.equal' for comparing `float~s in the ~Observable'
      module underlying function generators.

  =E2=80=A2 documentation updates:
    =E2=80=A2 clarify upper bound inclusion in `Gen.int_bound' and
      `Gen.int_range'
    =E2=80=A2 clarify `printable_char' and `Gen.printable' distributions
    =E2=80=A2 add missing `string_gen_of_size' and `small_printable_string'
      documentation
    =E2=80=A2 document `QCheck_alcotest.to_alcotest'
    =E2=80=A2 fix documented size distribution for `arbitrary' generators
      `string_gen', `string', `printable_string', `numeral_string',
      `list', and `array'
    =E2=80=A2 fix exception documentation for `check_result', `check_cell_e=
xn',
      and `check_exn'
    =E2=80=A2 fix documentation for the distribution of `Gen.printable' and
      `printable_char'
    =E2=80=A2 fix documentation for the shrinking behaviour of
      `QCheck2.printable'

  =E2=80=A2 internal and test suite changes
    =E2=80=A2 add additional expect and unit tests and refactor expect test
      suite
    =E2=80=A2 add a shrinker performance benchmark
    =E2=80=A2 remove `--no-buffer' option on `dune runtest' to avoid garbli=
ng
      the test output
    =E2=80=A2 make test suite run on 32-bit architectures


Opam-cross-windows now supports OCaml 4.14.0!
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/opam-cross-windows-now-supports-ocaml-4-14-0=
/10159/1>


Romain Beauxis announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Bit of a late announcement but the `opam-cross-windows' project now
  supports the OCaml compiler version `4.14.0':
  <https://github.com/ocaml-cross/opam-cross-windows>

  The `opam-cross-windows' project is part of an initiative started by
  @whitequark to provide cross-compilation support to existing `opam'
  packages. This allows users to compile binaries for windows but also
  android and ios on a linux or macos host.

  Support for packages is a on best-effort basis and is always looking
  for more contributors. Adding a package can be a little tricky at
  times but, if your package uses `dune', the cross-compilation support
  there is pretty wonderful and makes it pretty easy to add
  cross-compiled packages.


Other OCaml News
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

>From the ocaml.org blog
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Here are links from many OCaml blogs aggregated at [the ocaml.org
  blog].

  =E2=80=A2 [The Magic of Merlin]
  =E2=80=A2 [Thales Cyber@Station F Selection]
  =E2=80=A2 [Team Tarides Visits a 17th Century Chateau]
  =E2=80=A2 [Functional Conf 2022]
  =E2=80=A2 [OCaml 5 Alpha Release]
  =E2=80=A2 [Adding Merkle Proofs to Tezos]
  =E2=80=A2 [OCaml Matrix: A Virtual World]
  =E2=80=A2 [Tarides Sponsors 12th Annual Journ=C3=A9es Franciliennes]
  =E2=80=A2 [OCaml.org Reboot: User-Centric Design & Content]
  =E2=80=A2 [Lightning Fast with Irmin: Tezos Storage is 6x faster with 100=
0 TPS
    surpassed]
  =E2=80=A2 [Tarides Partners with 50inTech!]
  =E2=80=A2 [What's New in MirageOS 4!]


[the ocaml.org blog] <https://ocaml.org/blog/>

[The Magic of Merlin]
<https://tarides.com/blog/2022-07-05-the-magic-of-merlin>

[Thales Cyber@Station F Selection]
<https://tarides.com/blog/2022-06-28-thales-cyber-station-f-selection>

[Team Tarides Visits a 17th Century Chateau]
<https://tarides.com/blog/2022-06-23-team-tarides-visits-a-17th-century-cha=
teau>

[Functional Conf 2022]
<https://tarides.com/blog/2022-06-21-functional-conf-2022>

[OCaml 5 Alpha Release]
<https://tarides.com/blog/2022-06-15-ocaml-5-alpha-release>

[Adding Merkle Proofs to Tezos]
<https://tarides.com/blog/2022-06-13-adding-merkle-proofs-to-tezos>

[OCaml Matrix: A Virtual World]
<https://tarides.com/blog/2022-06-09-ocaml-matrix-a-virtual-world>

[Tarides Sponsors 12th Annual Journ=C3=A9es Franciliennes]
<https://tarides.com/blog/2022-06-02-tarides-sponsors-12th-annual-journ-e-f=
rancilienne>

[OCaml.org Reboot: User-Centric Design & Content]
<https://tarides.com/blog/2022-05-02-ocaml-org-reboot-user-centric-design-c=
ontent>

[Lightning Fast with Irmin: Tezos Storage is 6x faster with 1000 TPS
surpassed]
<https://tarides.com/blog/2022-04-26-lightning-fast-with-irmin-tezos-storag=
e-is-6x-faster-with-1000-tps-surpassed>

[Tarides Partners with 50inTech!]
<https://tarides.com/blog/2022-04-19-tarides-partners-with-50intech>

[What's New in MirageOS 4!]
<https://tarides.com/blog/2022-04-14-what-s-new-in-mirageos-4>


Old CWN
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  [online].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <https://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <https://alan.petitepomme.net/cwn/cwn.rss>

[online] <http://lists.idyll.org/listinfo/caml-news-weekly/>

[Alan Schmitt] <https://alan.petitepomme.net/>


--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2022-07-12 Tue 09:58 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org Mode" />
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
</head>
<body>
<div id=3D"content" class=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2022.07.05.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2022.07.19.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of July 05 to 12, 2022.
</p>

<div id=3D"table-of-contents" role=3D"doc-toc">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents" role=3D"doc-toc">
<ul>
<li><a href=3D"#1">Dune how to define custom build task</a></li>
<li><a href=3D"#2">Timedesc 0.8.0 - modern date time handling</a></li>
<li><a href=3D"#3">containers 3.9</a></li>
<li><a href=3D"#4">OBazl 2.0.0-alpha-1 (Building OCaml SW with Bazel)</a></=
li>
<li><a href=3D"#5">QCheck 0.19</a></li>
<li><a href=3D"#6">Opam-cross-windows now supports OCaml 4.14.0!</a></li>
<li><a href=3D"#7">Other OCaml News</a></li>
<li><a href=3D"#org06d03c1">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-1" class=3D"outline-2">
<h2 id=3D"1">Dune how to define custom build task</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/dune-how-to-define-custom-b=
uild-task/10092/1">https://discuss.ocaml.org/t/dune-how-to-define-custom-bu=
ild-task/10092/1</a>
</p>
</div>

<div id=3D"outline-container-org9687d4a" class=3D"outline-3">
<h3 id=3D"org9687d4a">cnmade explained</h3>
<div class=3D"outline-text-3" id=3D"text-org9687d4a">
<p>
dune has very powerful extensions, but the documentation doesn't tell you d=
irectly. Today I'll share a specific
example of how we can make dune do many things with a dune configuration.
</p>

<p>
For example
</p>

<ul class=3D"org-ul">
<li>Publish compiled documents to our documentation server</li>
<li>Sending email notifications to email groups</li>
<li>Sending SMS notifications to administrators</li>
<li>Build a document and open a browser to preview the document page</li>
</ul>

<p>
Let's start with an example, we create a dune file in the root directory of=
 our project, which you may not have
originally, you have to create a new one, we enter the following
</p>

<pre class=3D"example" id=3D"orgbd6ffb8">
; now we tell you how to define a custom rule
; rule start with (rule )
(rule
; (alias is point  the command name , so you can run this rule by call  dun=
e build @docopen
 (alias docopen)
 ; following line is very important, it tell dune do not cache this build c=
ommand, so it will running every call
without any cache
 (deps (universe))
 ; action  (system  to told system run command by `sh` in your Linux/MacOS,=
 windows user may running cmd.exe
 ; cd ../.. is change the base directory of the running command ,or the def=
ault directory will be _build/default
 (action (system "cd ../.. &amp;&amp; pwd &amp;&amp;  dune build @doc &amp;=
&amp; open _build/default/_doc/_html/index.html" ))
)
; end of one piece of rule

; and we define more and more rule as we want
(rule
  (alias whoami)
  (deps (universe))
  (action (system "uname -a;whoami"))
)
</pre>

<p>
In this example, we define two rules, the rules are the tasks that dune can=
 recognize, in dune, it is called rules
</p>

<p>
Because it is a custom build command, we use alias to take a unique and non=
-repeating alias.
</p>

<p>
The first build command is to build the document and open the browser previ=
ew.
</p>

<p>
Our alias is docopen
</p>

<p>
Then deps we add universe to tell dune that you don't want to cache and giv=
e me a new build every time. If you don't
add this line, dune will only give you one build, and then because of the c=
ache, you won't be able to execute it
later.
</p>

<p>
action  following by  system here, action is the command to start, system m=
eans to use the system shell (windows is
cmd, linux macos is sh) to give you the execution of the code you specify.
</p>

<p>
You can see the first we are first change the directory to the project root=
 directory [because the default directory
is _build/default], and then we perform the build document generation, and =
then open open the generated html page.
</p>

<p>
The first build command is this, if you want to perform the first build tas=
k, you can type
</p>

<p>
<code>dune build @docopen</code>
</p>

<p>
Then our second build command, relatively simple, with reference to the fir=
st, we can add a lot of build commands we
want to add inside this dune configuration file.
</p>

<p>
We just need to specify different alias aliases for them, no duplication.
</p>

<p>
The official documentation also specifies some other available commands,   =
I won't go into them one by one. Since I
prefer to use shell scripts, I really only need the system to execute my sh=
ell scripts for me.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-2" class=3D"outline-2">
<h2 id=3D"2">Timedesc 0.8.0 - modern date time handling</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-timedesc-0-8-0-modern-d=
ate-time-handling/10138/1">https://discuss.ocaml.org/t/ann-timedesc-0-8-0-m=
odern-date-time-handling/10138/1</a>
</p>
</div>

<div id=3D"outline-container-orgbe572a8" class=3D"outline-3">
<h3 id=3D"orgbe572a8">Darren announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgbe572a8">
<p>
I'm pleased to announce the release of Timedesc 0.8.0.
</p>

<p>
Timedesc is a very comprehensive date time handling library with good suppo=
rt of time zone.
</p>

<p>
<a href=3D"https://github.com/daypack-dev/timere">Homepage</a>
</p>
</div>

<div id=3D"outline-container-orga3b2568" class=3D"outline-4">
<h4 id=3D"orga3b2568">Features</h4>
<div class=3D"outline-text-4" id=3D"text-orga3b2568">
<ul class=3D"org-ul">
<li>Timestamp and date time handling with platform independent time zone su=
pport
<ul class=3D"org-ul">
<li>Subset of the IANA time zone database is built into this library</li>
</ul></li>
<li>Supports Gregorian calendar date, ISO week date, and ISO ordinal date</=
li>
<li>Supports nanosecond precision</li>
<li>ISO8601 parsing and RFC3339 printing</li>
</ul>
</div>
</div>

<div id=3D"outline-container-orga71d07b" class=3D"outline-4">
<h4 id=3D"orga71d07b">Main changes since 0.6.0</h4>
<div class=3D"outline-text-4" id=3D"text-orga71d07b">
<ul class=3D"org-ul">
<li>Significantly reduced size of time zone database by using a custom comp=
ression scheme
<ul class=3D"org-ul">
<li>Many thanks to @glennsl for the proposed scheme at issue <a href=3D"htt=
ps://github.com/daypack-dev/timere/issues/46">#46</a></li>
<li>This yields reduction of roughly 82% for same date period. The exact ra=
nge of years included has been tuned slightly as well and I've lost track o=
f the exact size after compilation.</li>
</ul></li>
<li>Significantly reduced the number of dependencies, and moved JS, JSON co=
de into separate packages
<ul class=3D"org-ul">
<li>Removed dependencies: <code>fmt</code>, <code>containers</code>, <code>=
oseq</code>
<ul class=3D"org-ul">
<li>Introduced <code>sexplib</code> dependency for sexp handling consequent=
ly as previously containers <code>CCSexp</code> was used</li>
</ul></li>
<li>Moved JSON code into <code>timedesc-json</code> package along with Yojs=
on dependency</li>
<li>Moved <code>tzlocal</code> and <code>tzdb</code> stuff into their own s=
eparate packages (<code>timedesc-tzlocal</code> and <code>timedesc-tzdb</co=
de> respectively)</li>
<li>Moved JS tzlocal backend into <code>timedesc-tzlocal-js</code> (along w=
ith JS specific dependencies)</li>
</ul></li>
</ul>
</div>
</div>

<div id=3D"outline-container-org503a14d" class=3D"outline-4">
<h4 id=3D"org503a14d">Quality of life changes</h4>
<div class=3D"outline-text-4" id=3D"text-org503a14d">
<ul class=3D"org-ul">
<li>Updated string conversion functions based on pretty printers which rais=
e <code>Date_time_cannot_deduce_offset_from_utc</code> to raise the excepti=
on instead of returning <code>None</code>
<ul class=3D"org-ul">
<li>This simplifies the handling as return type is now simply just <code>st=
ring</code></li>
<li>And for serious stuff users are expected to use only unambiguous date t=
imes anyway, which would not trigger this exception</li>
</ul></li>
<li>Added ISO8601 printing facilities to <code>Timestamp</code> module for =
consistency
<ul class=3D"org-ul">
<li>They are just aliases to the RFC3339 printers</li>
</ul></li>
</ul>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-3" class=3D"outline-2">
<h2 id=3D"3">containers 3.9</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-containers-3-9/10140/1"=
>https://discuss.ocaml.org/t/ann-containers-3-9/10140/1</a>
</p>
</div>

<div id=3D"outline-container-org6711bdf" class=3D"outline-3">
<h3 id=3D"org6711bdf">Simon Cruanes announced</h3>
<div class=3D"outline-text-3" id=3D"text-org6711bdf">
<p>
I'm happy to announce that containers 3.9 has just been released. Container=
s is a lightweight, modular extension of
the stdlib that tries to remains compatible with it.
</p>

<p>
Containers is starting to sprout some serialization primitives: it now has =
codecs for Bencode and CBOR. This release
also contains a revamp of the testlib system (bye qtest) and the use of oca=
mlformat, for potential contributors who
enjoy that. Containers should also be compatible with OCaml 5.0.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-4" class=3D"outline-2">
<h2 id=3D"4">OBazl 2.0.0-alpha-1 (Building OCaml SW with Bazel)</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/obazl-2-0-0-alpha-1-buildin=
g-ocaml-sw-with-bazel/10142/1">https://discuss.ocaml.org/t/obazl-2-0-0-alph=
a-1-building-ocaml-sw-with-bazel/10142/1</a>
</p>
</div>

<div id=3D"outline-container-orgc5eb501" class=3D"outline-3">
<h3 id=3D"orgc5eb501">Gregg Reynolds announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgc5eb501">
<p>
I've tagged alpha versions of OBazl <a href=3D"https://github.com/obazl/rul=
es_ocaml">rules_ocaml</a> and
<a href=3D"https://github.com/obazl/tools_opam">tools_opam</a>.  The best w=
ay to start exploring is via
<a href=3D"https://github.com/obazl/demos_obazl/blob/main/rules_ocaml/READM=
E.adoc">demos_obazl</a>, which contains over 100 mostly
simple demo/test programs, many of which are commented.  Three simple comma=
nds get you configured and then <code>bazel
test test</code> runs all the tests.
</p>

<p>
Tested on MacOS 12.4 and Ubuntu 20.
</p>

<p>
Documentation is still in progress but there is useful info at <a href=3D"h=
ttps://obazl.github.io/docs_obazl/">The OBazl Book</a>.
</p>

<p>
Lot's of things to say about this version but I'll stick to one point of in=
terest.  The four basic OCaml compilers
are modeled by Bazel's platforms and toolchains mechanisms.  Two of the com=
pilers are actually cross-compilers (e.g.
<code>ocamlc.opt</code> runs on the system arch but targets the OCaml vm), =
so to pick a compiler you tell OBazl which buildhost
and targethost platforms you want.  I've predefined configurations in
<a href=3D"https://github.com/obazl/demos_obazl/blob/main/rules_ocaml/.baze=
lrc">.bazelrc</a>; for example:
</p>

<pre class=3D"example" id=3D"orga3e8745">
build:bcnc --host_platform=3D@opam//tc/host/build:bc
build:bcnc --platforms=3D@opam//tc/host/target:nc
</pre>
<p>
which means to select the <code>ocamlopt.byte</code> (cross-)compiler, pass=
 <code>--config=3Dbcnc</code>.
</p>

<p>
Kinda cool IMHO. Maybe overkill for the basic compilers, but the mechanism =
is essential to support remote builds,
custom compiler implementations and genuine cross-compilers.
</p>

<p>
Feedback welcome.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-5" class=3D"outline-2">
<h2 id=3D"5">QCheck 0.19</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-qcheck-0-19/10149/1">ht=
tps://discuss.ocaml.org/t/ann-qcheck-0-19/10149/1</a>
</p>
</div>

<div id=3D"outline-container-org227b6a2" class=3D"outline-3">
<h3 id=3D"org227b6a2">Jan Midtgaard announced</h3>
<div class=3D"outline-text-3" id=3D"text-org227b6a2">
<p>
I'm happy to share the release of QCheck 0.19 - a library for property-base=
d testing in OCaml in the style of
Haskell's QuickCheck.
</p>

<ul class=3D"org-ul">
<li>GitHub repo: <a href=3D"https://github.com/c-cube/qcheck">https://githu=
b.com/c-cube/qcheck</a></li>
<li>Documentation: <a href=3D"https://c-cube.github.io/qcheck/0.19/">https:=
//c-cube.github.io/qcheck/0.19/</a></li>
</ul>

<p>
The 0.19 release brings a range of new features and improvements detailed b=
elow and combines the effort of several
individual contributors.
</p>

<p>
It is now available on opam.
</p>

<p>
Release notes:
</p>

<ul class=3D"org-ul">
<li>new features and feature extensions
<ul class=3D"org-ul">
<li>add optional <code>debug_shrink</code> parameters in alcotest interface=
 and expose default <code>debug_shrinking_choices</code> in test runners</l=
i>
<li>add missing <code>?handler</code> parameter to <code>Test.check_cell_ex=
n</code></li>
<li>add an option <code>retries</code> parameter to <code>Test.make</code> =
et al. for checking a property repeatedly while shrinking.
This can be useful when testing non-deterministic code.</li>
<li>add <code>tup2</code> to <code>tup9</code> for generators</li>
<li>add <code>Test.make_neg</code> for negative property-based tests, that =
are expected not to satisfy the tested property.</li>
<li>add environment variable <code>QCHECK_LONG_FACTOR</code> similar to <co=
de>QCHECK_COUNT</code></li>
<li>rename <code>Gen.opt</code> to <code>Gen.option</code> but keep the old=
 binding for compatibility.</li>
<li>shrinker changes
<ul class=3D"org-ul">
<li>recursive <code>list</code> shrinker with better complexity</li>
<li><code>string</code> shrinker reuses improved <code>list</code> shrinker=
 and adds <code>char</code> shrinking</li>
<li>function shrinker now shrinks default entry first and benefits from <co=
de>list</code> shrinker improvements</li>
<li>replacing the linear-time <code>char</code> shrinker with a faster one =
reusing the bisecting <code>int</code> shrinker algorithm</li>
<li>add <code>Shrink.char_numeral</code> and <code>Shrink.char_printable</c=
ode></li>
<li>add shrinking for <code>char arbitrary~s ~char</code>, <code>printable_=
char</code>, and <code>numeral_char</code></li>
</ul></li>
</ul></li>

<li>bug fixes
<ul class=3D"org-ul">
<li>fix function generation affecting reproducability</li>
<li>fix distribution of <code>QCheck2.printable</code> which would omit cer=
tain characters</li>
<li>use <code>Float.equal</code> for comparing <code>float~s in the ~Observ=
able</code> module underlying function generators.</li>
</ul></li>

<li>documentation updates:
<ul class=3D"org-ul">
<li>clarify upper bound inclusion in <code>Gen.int_bound</code> and <code>G=
en.int_range</code></li>
<li>clarify <code>printable_char</code> and <code>Gen.printable</code> dist=
ributions</li>
<li>add missing <code>string_gen_of_size</code> and <code>small_printable_s=
tring</code> documentation</li>
<li>document <code>QCheck_alcotest.to_alcotest</code></li>
<li>fix documented size distribution for <code>arbitrary</code> generators =
<code>string_gen</code>, <code>string</code>, <code>printable_string</code>=
, <code>numeral_string</code>, <code>list</code>, and <code>array</code></l=
i>
<li>fix exception documentation for <code>check_result</code>, <code>check_=
cell_exn</code>, and <code>check_exn</code></li>
<li>fix documentation for the distribution of <code>Gen.printable</code> an=
d <code>printable_char</code></li>
<li>fix documentation for the shrinking behaviour of <code>QCheck2.printabl=
e</code></li>
</ul></li>

<li>internal and test suite changes
<ul class=3D"org-ul">
<li>add additional expect and unit tests and refactor expect test suite</li>
<li>add a shrinker performance benchmark</li>
<li>remove <code>--no-buffer</code> option on <code>dune runtest</code> to =
avoid garbling the test output</li>
<li>make test suite run on 32-bit architectures</li>
</ul></li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-6" class=3D"outline-2">
<h2 id=3D"6">Opam-cross-windows now supports OCaml 4.14.0!</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/opam-cross-windows-now-supp=
orts-ocaml-4-14-0/10159/1">https://discuss.ocaml.org/t/opam-cross-windows-n=
ow-supports-ocaml-4-14-0/10159/1</a>
</p>
</div>

<div id=3D"outline-container-orgdff04ec" class=3D"outline-3">
<h3 id=3D"orgdff04ec">Romain Beauxis announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgdff04ec">
<p>
Bit of a late announcement but the <code>opam-cross-windows</code> project =
now supports the OCaml compiler version <code>4.14.0</code>:
<a href=3D"https://github.com/ocaml-cross/opam-cross-windows">https://githu=
b.com/ocaml-cross/opam-cross-windows</a>
</p>

<p>
The <code>opam-cross-windows</code> project is part of an initiative starte=
d by @whitequark to provide cross-compilation support
to existing <code>opam</code> packages. This allows users to compile binari=
es for windows but also android and ios on a linux or
macos host.
</p>

<p>
Support for packages is a on best-effort basis and is always looking for mo=
re contributors. Adding a package can be a
little tricky at times but, if your package uses <code>dune</code>, the cro=
ss-compilation support there is pretty wonderful and
makes it pretty easy to add cross-compiled packages.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-7" class=3D"outline-2">
<h2 id=3D"7">Other OCaml News</h2>
<div class=3D"outline-text-2" id=3D"text-7">
</div>
<div id=3D"outline-container-orgf824f14" class=3D"outline-3">
<h3 id=3D"orgf824f14">From the ocaml.org blog</h3>
<div class=3D"outline-text-3" id=3D"text-orgf824f14">
<p>
Here are links from many OCaml blogs aggregated at <a href=3D"https://ocaml=
.org/blog/">the ocaml.org blog</a>.
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://tarides.com/blog/2022-07-05-the-magic-of-merlin">The=
 Magic of Merlin</a></li>
<li><a href=3D"https://tarides.com/blog/2022-06-28-thales-cyber-station-f-s=
election">Thales Cyber@Station F Selection</a></li>
<li><a href=3D"https://tarides.com/blog/2022-06-23-team-tarides-visits-a-17=
th-century-chateau">Team Tarides Visits a 17th Century Chateau</a></li>
<li><a href=3D"https://tarides.com/blog/2022-06-21-functional-conf-2022">Fu=
nctional Conf 2022</a></li>
<li><a href=3D"https://tarides.com/blog/2022-06-15-ocaml-5-alpha-release">O=
Caml 5 Alpha Release</a></li>
<li><a href=3D"https://tarides.com/blog/2022-06-13-adding-merkle-proofs-to-=
tezos">Adding Merkle Proofs to Tezos</a></li>
<li><a href=3D"https://tarides.com/blog/2022-06-09-ocaml-matrix-a-virtual-w=
orld">OCaml Matrix: A Virtual World</a></li>
<li><a href=3D"https://tarides.com/blog/2022-06-02-tarides-sponsors-12th-an=
nual-journ-e-francilienne">Tarides Sponsors 12th Annual Journ=C3=A9es Franc=
iliennes</a></li>
<li><a href=3D"https://tarides.com/blog/2022-05-02-ocaml-org-reboot-user-ce=
ntric-design-content">OCaml.org Reboot: User-Centric Design &amp; Content</=
a></li>
<li><a href=3D"https://tarides.com/blog/2022-04-26-lightning-fast-with-irmi=
n-tezos-storage-is-6x-faster-with-1000-tps-surpassed">Lightning Fast with I=
rmin: Tezos Storage is 6x faster with 1000 TPS surpassed</a></li>
<li><a href=3D"https://tarides.com/blog/2022-04-19-tarides-partners-with-50=
intech">Tarides Partners with 50inTech!</a></li>
<li><a href=3D"https://tarides.com/blog/2022-04-14-what-s-new-in-mirageos-4=
">What's New in MirageOS 4!</a></li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-org06d03c1" class=3D"outline-2">
<h2 id=3D"org06d03c1">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org06d03c1">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or the <=
a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archive=
s</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname" id=3D"org71324a0">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

