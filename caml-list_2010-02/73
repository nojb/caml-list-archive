Return-Path: <john.r.harrison@intel.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 282DDBC54
	for <caml-list@yquem.inria.fr>; Mon,  8 Feb 2010 19:15:21 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApcAADfjb0vANzRdkWdsb2JhbACbQQEBAQEJCwoHEwW8T4RUBA
X-IronPort-AV: E=Sophos;i="4.49,431,1262559600"; 
   d="ml'?scan'208";a="51999237"
Received: from mga11.intel.com ([192.55.52.93])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 08 Feb 2010 19:15:20 +0100
Received: from fmsmga001.fm.intel.com ([10.253.24.23])
  by fmsmga102.fm.intel.com with ESMTP; 08 Feb 2010 10:13:50 -0800
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="4.49,431,1262592000"; 
   d="ml'?scan'208";a="771112691"
Received: from azsmsx601.amr.corp.intel.com ([10.2.121.193])
  by fmsmga001.fm.intel.com with ESMTP; 08 Feb 2010 10:15:13 -0800
Received: from azsmsx501.amr.corp.intel.com ([10.2.167.99]) by
 azsmsx601.amr.corp.intel.com ([10.2.121.193]) with mapi; Mon, 8 Feb 2010
 11:15:18 -0700
From: "Harrison, John R" <john.r.harrison@intel.com>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: "caml-list@yquem.inria.fr" <caml-list@yquem.inria.fr>
Date: Mon, 8 Feb 2010 11:15:17 -0700
Subject: RE: [Caml-list] Power serious
Thread-Topic: [Caml-list] Power serious
Thread-Index: AcqoYxPmFUaxfWjCTW64XXX22TS4kgAhtP0g
Message-ID: <6E2431EDEB6AE64F827F8A1B0D0DA1A6FDC65D67@azsmsx501.amr.corp.intel.com>
References: <201002080320.03808.jon@ffconsultancy.com>
In-Reply-To: <201002080320.03808.jon@ffconsultancy.com>
Accept-Language: en-US
Content-Language: en-US
X-MS-Has-Attach: yes
X-MS-TNEF-Correlator:
acceptlanguage: en-US
Content-Type: multipart/mixed;
	boundary="_002_6E2431EDEB6AE64F827F8A1B0D0DA1A6FDC65D67azsmsx501amrcor_"
MIME-Version: 1.0
X-Spam: no; 0.00; haskell:01 haskell:01 ocaml:01 hacked:01 ocaml:01 redefines:01 atan:01 const:01 const:01 val:01 atan:01 val:01 computations:01 expansions:01 memoization:01 
X-Attachments: type="application/octet-stream" name="powser.ml" name="powser.ml" 

--_002_6E2431EDEB6AE64F827F8A1B0D0DA1A6FDC65D67azsmsx501amrcor_
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: quoted-printable

Hi Jon,

| I stumbled upon the following article that describes a remarkably simple
| implementation of arithmetic over power series in Haskell:
|
|   http://www.cs.dartmouth.edu/~doug/powser.html
|
| This is the only compelling example of Haskell I have ever seen and I'd l=
ike
| to see this rewritten in other languages for comparison. Has anyone tried=
 to
| translate this into OCaml?

I once hacked up an OCaml implementation of the algorithms in a similar
paper by Doug McIlroy, "Squinting at Power Series". See the attached
code, which redefines the usual arithmetic operators like "+" over power
series (note that ** is composition, not exponentiation). For example:

  # let atan =3D integrate(const 1 / (const 1 + x * x));;
  val atan : int -> Num.num =3D <fun>
  # let tan =3D revert atan;;
  val tan : int -> Num.num =3D <fun>
  # List.map (fun i -> string_of_num(tan i)) [0;1;2;3;4;5;6;7;8];;
  - : string list =3D ["0"; "1"; "0"; "1/3"; "0"; "2/15"; "0"; "17/315"; "0=
"]

I wanted this for some real power series computations on Bessel function
asymptotic expansions (http://www.cl.cam.ac.uk/~jrh13/papers/bessel.html).
To do anything serious, I found, not surprisingly, that I needed to stick
memoization in various places. Even the trivial example above takes an
appreciable time without it. Still, it doesn't uglify the code much to
add a simple cacheing function all over the place.

John.


--_002_6E2431EDEB6AE64F827F8A1B0D0DA1A6FDC65D67azsmsx501amrcor_
Content-Type: application/octet-stream; name="powser.ml"
Content-Description: powser.ml
Content-Disposition: attachment; filename="powser.ml"; size=2088;
	creation-date="Mon, 08 Feb 2010 10:57:06 GMT";
	modification-date="Mon, 08 Feb 2010 10:57:36 GMT"
Content-Transfer-Encoding: base64

KCogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PSAqKQooKiBQb3dlciBzZXJpZXMgZXhwYW5zaW9ucywgZm9sbG93
aW5nIE1jSWxyb3kncyAiU3F1aW50aW5nIGF0IFBvd2VyIFNlcmllcyIuICopCigqID09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0gKikKCm9wZW4gTnVtOzsKCmxldCBudW1fMCA9IG51bV9vZl9pbnQgMAphbmQgbnVt
XzEgPSBudW1fb2ZfaW50IDE7OwoKKCogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqKQooKiBBdXhpbGlhcnkg
ZnVuY3Rpb25zLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICopCigqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKikKCmxldCBzdW0gKG0sbikgZiA9CiAgbGV0
IHJlYyBzdW1mIGkgYWNjID0KICAgIGlmIG4gPCBpIHRoZW4gYWNjIGVsc2Ugc3VtZiAoaSArIDEp
IChmKGkpICsvIGFjYykgaW4KICBzdW1mIG0gbnVtXzA7OwoKbGV0IHJlc3QgYSBuID0gYShuICsg
MSk7OwoKKCogLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqKQooKiBCYXNpYyBwb3dlciBzZXJpZXMuICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICopCigqIC0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0gKikKCmxldCB4IG4gPSBpZiBuID0gMSB0aGVuIG51bV8xIGVsc2UgbnVt
XzA7OwoKbGV0IGNvbnN0YW50IGsgPSBmdW4gbiAtPiBpZiBuID0gMCB0aGVuIGsgZWxzZSBudW1f
MDs7CgpsZXQgY29uc3QgbiA9IGNvbnN0YW50KG51bV9vZl9pbnQgbik7OwoKbGV0IHh4IGEgbiA9
IGlmIG4gPSAwIHRoZW4gbnVtXzAgZWxzZSBhIChuIC0gMSk7OwoKKCogLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LSAqKQooKiBDb25zdHJ1Y3RvcnMgZm9yIHBvd2VyIHNlcmllcy4gICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICAgICAgICopCigqIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKikKCmxldCBk
aWZmZXJlbnRpYXRlIGYgbiA9IG51bV9vZl9pbnQobiArIDEpICovIGYobiArIDEpOzsKCmxldCBp
bnRlZ3JhdGUgZiBuID0gaWYgbiA9IDAgdGhlbiBudW1fMCBlbHNlIGYobiAtIDEpIC8vIG51bV9v
Zl9pbnQgbjs7CgpsZXQgcmVjICggKiApIGEgYiBuID0gYSgwKSAqLyBiKG4pICsvIHh4KHJlc3Qg
YSAqIGIpIG47OwoKbGV0ICgrKSBhIGIgbiA9IGEobikgKy8gYihuKTs7CgpsZXQgKC0pIGEgYiBu
ID0gYShuKSAtLyBiKG4pOzsKCmxldCByZWMgaW52ZXJ0IGEgbiA9CiAgKGNvbnN0YW50KG51bV8x
IC8vIGEgMCkgKiAoY29uc3QgMSAtIHh4KHJlc3QgYSAqIGludmVydCBhKSkpIG47OwoKbGV0IHJl
YyAoLykgYSBiID0KICBpZiBhKDApID0vIG51bV8wICYgYigwKSA9LyBudW1fMCB0aGVuIHJlc3Qg
YSAvIHJlc3QgYiBlbHNlIGEgKiBpbnZlcnQoYik7OwoKbGV0ICggKiogKSBhIGIgbiA9CiAgbGV0
IHJlYyBjb21wZm4gaSA9CiAgICBpZiBpID0gbiB0aGVuIGNvbnN0YW50IChhIGkpIGVsc2UgKGNv
bnN0YW50KGEgaSkpICsgKGIgKiByZXN0IGNvbXBmbiBpKSBpbgogIGNvbXBmbiAwIG47OwoKbGV0
IHJldmVydCBmID0KICBsZXQgZjEnID0gY29uc3RhbnQobnVtXzEgLy8gZigxKSkgYW5kIGYnJyA9
IHJlc3QocmVzdCBmKSBpbgogIGxldCByZWMgcCBuID0gKGYxJyAqIChjb25zdCAxIC0geHgocCAq
IHAgKiAoZicnICoqIHh4IHApKSkpIG4gaW4KICB4eCBwOzsK

--_002_6E2431EDEB6AE64F827F8A1B0D0DA1A6FDC65D67azsmsx501amrcor_--

