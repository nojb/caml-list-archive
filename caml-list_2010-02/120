Return-Path: <gclci-caml-list@m.gmane.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 82643BC37
	for <caml-list@yquem.inria.fr>; Wed, 10 Feb 2010 23:02:11 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApADAB+8cktQW+UMgWdsb2JhbACaZhUBARYkI75chFUEim8
X-IronPort-AV: E=Sophos;i="4.49,446,1262559600"; 
   d="scan'208";a="44542055"
Received: from lo.gmane.org ([80.91.229.12])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 10 Feb 2010 23:02:10 +0100
Received: from list by lo.gmane.org with local (Exim 4.69)
	(envelope-from <gclci-caml-list@m.gmane.org>)
	id 1NfKdL-0003Tl-ET
	for caml-list@inria.fr; Wed, 10 Feb 2010 23:02:07 +0100
Received: from 75-119-228-112.dsl.teksavvy.com ([75.119.228.112])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Wed, 10 Feb 2010 23:02:07 +0100
Received: from monnier by 75-119-228-112.dsl.teksavvy.com with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Wed, 10 Feb 2010 23:02:07 +0100
X-Injected-Via-Gmane: http://gmane.org/
To: caml-list@inria.fr
From: Stefan Monnier <monnier@iro.umontreal.ca>
Subject: Re: The need to specify 'rec' in a recursive function defintion
Date: Wed, 10 Feb 2010 17:01:47 -0500
Lines: 7
Message-ID: <jwvfx58wy1c.fsf-monnier+gmane.comp.lang.caml.inria@gnu.org>
References: <1e7471d51002091250of7a686fq537a03c9401c868f@mail.gmail.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Complaints-To: usenet@ger.gmane.org
X-Gmane-NNTP-Posting-Host: 75-119-228-112.dsl.teksavvy.com
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/23.1.91 (gnu/linux)
Cancel-Lock: sha1:FI23eSyyE7HBDruhqJJl88p1eVk=
Sender: news <news@ger.gmane.org>
X-Spam: no; 0.00; recursive:01 defintion:01 recursive:01 haskell:01 specify:06 indeed:07 function:08 function:08 umontreal:13 itself:14 does:14 would:18 calls:19 detecting:24 what:24 

> Wouldn't one of way of detecting a recursive function would be to see
> if the indeed the function calls itself?

That's what Haskell does, yes.


        Stefan

