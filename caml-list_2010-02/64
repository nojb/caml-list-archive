Return-Path: <dbm@refined-audiometrics.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 49C56BC37
	for <caml-list@yquem.inria.fr>; Mon,  8 Feb 2010 12:46:38 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApkBANmHb0vRVllFkGdsb2JhbACPIIwgAQEBAQkJDAcTA7s7hFQE
X-IronPort-AV: E=Sophos;i="4.49,429,1262559600"; 
   d="scan'208";a="44065184"
Received: from elasmtp-mealy.atl.sa.earthlink.net ([209.86.89.69])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 08 Feb 2010 12:46:19 +0100
Received: from [69.254.201.214] (helo=[10.0.1.2])
	by elasmtp-mealy.atl.sa.earthlink.net with esmtpsa (TLSv1:AES128-SHA:128)
	(Exim 4.67)
	(envelope-from <dbm@refined-audiometrics.com>)
	id 1NeS4H-0005Ii-Sy; Mon, 08 Feb 2010 06:46:17 -0500
Subject: Re: [Caml-list] Power serious
Mime-Version: 1.0 (Apple Message framework v1077)
Content-Type: text/plain; charset=us-ascii
From: David McClain <dbm@refined-audiometrics.com>
In-Reply-To: <201002080320.03808.jon@ffconsultancy.com>
Date: Mon, 8 Feb 2010 04:46:03 -0700
Cc: caml-list@yquem.inria.fr
Content-Transfer-Encoding: quoted-printable
Message-Id: <D53EB144-DC50-4B88-82C7-0856C5CEA546@refined-audiometrics.com>
References: <201002080320.03808.jon@ffconsultancy.com>
To: Jon Harrop <jon@ffconsultancy.com>
X-Mailer: Apple Mail (2.1077)
X-ELNK-Trace: 7a0ab3eafc8cf994b22988ad1c62733440683398e744b8a4e18fd8d3ca47e802b07f7dcc416d302c667c3043c0873f7e350badd9bab72f9c350badd9bab72f9c
X-Originating-IP: 69.254.201.214
X-Spam: no; 0.00; sicp:01 acceleration:01 haskell:01 haskell:01 ocaml:01 beginner's:01 ocaml:01 bug:01 frog:98 beginners:01 wrote:01 caml-list:01 caml-list:01 arithmetic:01 bin:01 

I believe that you'll find this stuff in SICP too... I know I have =
plenty of Lisp and Scheme examples of this sort of thing... e.g., =
computing tan from the ratio of the sin and cos series, done in lazy =
streams along with series convergence acceleration, a la John Houston's =
paper...

- DM

On Feb 7, 2010, at 20:20 PM, Jon Harrop wrote:

>=20
> I stumbled upon the following article that describes a remarkably =
simple=20
> implementation of arithmetic over power series in Haskell:
>=20
>  http://www.cs.dartmouth.edu/~doug/powser.html
>=20
> This is the only compelling example of Haskell I have ever seen and =
I'd like=20
> to see this rewritten in other languages for comparison. Has anyone =
tried to=20
> translate this into OCaml?
>=20
> --=20
> Dr Jon Harrop, Flying Frog Consultancy Ltd.
> http://www.ffconsultancy.com/?e
>=20
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>=20

Dr. David McClain
dbm@refined-audiometrics.com



