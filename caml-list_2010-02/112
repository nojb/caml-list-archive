Return-Path: <darioteixeira@yahoo.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 779C1BC37
	for <caml-list@yquem.inria.fr>; Wed, 10 Feb 2010 14:43:14 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ar4BADpGcktDww+RkWdsb2JhbACDCot2ggh5iHIBAQEBCQsKBxMDIKsVLoFKhRaIcgEEBAGBKoJLWwQ
X-IronPort-AV: E=Sophos;i="4.49,443,1262559600"; 
   d="scan'208";a="56681208"
Received: from web111503.mail.gq1.yahoo.com ([67.195.15.145])
  by mail4-smtp-sop.national.inria.fr with SMTP; 10 Feb 2010 14:43:12 +0100
Received: (qmail 89284 invoked by uid 60001); 10 Feb 2010 13:43:10 -0000
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yahoo.com; s=s1024; t=1265809390; bh=nk54ehszcyrrMx8fBwHC6/jqEv3GKX61YbsXkFVMkDY=; h=Message-ID:X-YMail-OSG:Received:X-Mailer:Date:From:Subject:To:Cc:In-Reply-To:MIME-Version:Content-Type:Content-Transfer-Encoding; b=MzC4tQ7hO94TCw3bzEapsWR5CFxNMPo459N7C/y/Ovx+7B44Z3U+Vy2DZ7m0I8p9D8fO/PhnlPg791D4XS4pD0oHW+osYVAJYMvHb33aeDCTSNFbWdU3+3uLrJAbwMdUfO4IQBDTWrGfbr28Ax1ilBoant5I4AE7MMXSC8Lxkus=
DomainKey-Signature:a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.com;
  h=Message-ID:X-YMail-OSG:Received:X-Mailer:Date:From:Subject:To:Cc:In-Reply-To:MIME-Version:Content-Type:Content-Transfer-Encoding;
  b=hW9eaGuqmIeZP7fLjX5w0eppu3yOhnL7PN+21pg2IjWvan6Dwqwo1STIPIE9oX2uY47lBtY6X+RZacJeyiGt+Nf/5iETkQ3Q0MZ2kiY0CTuPntHBB7wEySxI6Vkvf/lKzXrW/UpRpzvh88V9ZDACpjagiZoxo2ekBN8h46gPlRM=;
Message-ID: <654922.88817.qm@web111503.mail.gq1.yahoo.com>
X-YMail-OSG: WJGYewIVM1lmJ6mWqhirCpk8v.O.sM_oA_N4YggdftSX08lEExOrGVVb7PWYoPF8yak2ZCW7gBsYRspyl4bs2Ka9U4UBc1aKDbFW9Ge9qZ9u6wudyMEhXJf3kMPz0I9nqceEJDB1YAmqGbgUDox5UaPsjfr.taY_pSDzXbLseuM3yMzqiaHZ0ZwJ9Wf4bMjflMmfnlO91eIh7TZsoC.dkDFoqsjHwuWOU3x2iCGcypathoL7MJSCjA2Y8vfjq2RV1XhrPzitEvSAm5mJgmgpyGZuh9oXC9KACo15xaUKQMVUViO0_C3ztTLOFM98G1Jt1QfgbnABVXUgvUoV6fFSKCGbCFeTsVmzcITdvNAfiV78IoA2NPVQsOoqO3nlqy6c69P0nYxs2BitUc7qG6DblWuLu.S1l8rllZGr30trKA--
Received: from [213.205.71.51] by web111503.mail.gq1.yahoo.com via HTTP; Wed, 10 Feb 2010 05:43:10 PST
X-Mailer: YahooMailClassic/9.1.10 YahooMailWebService/0.8.100.260964
Date: Wed, 10 Feb 2010 05:43:10 -0800 (PST)
From: Dario Teixeira <darioteixeira@yahoo.com>
Subject: Re: [Caml-list] Re: Being aware of memory overuse
To: Sylvain Le Gall <sylvain@le-gall.net>,
	Goswin von Brederlow <goswin-v-b@web.de>
Cc: caml-list@inria.fr
In-Reply-To: <876365o4wy.fsf@frosties.localdomain>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
X-Spam: no; 0.00; invocation:01 ocaml:01 caml-list:01 kernel:02 kernel:02 correctly:04 proposals:05 discussion:06 linux:07 cases:08 theory:09 memory:09 memory:09 feature:09 recall:10 

Hi,=0A=0A> I always wanted to have kernel spport for this. Some way for apl=
ication=0A> to tell the kernel about freeable memory and for the kernel to =
request=0A> some memory to be freeed instead of swapping it out.=0A=0AIf I =
recall correctly, there was an Lwn.net article reporting a lkml=0A(the Linu=
x kernel mailing list) discussion on that subject.  One of=0Athe proposals =
was for the kernel to send processes a signal (SIGFREE?)=0Arequesting they =
free up memory (by running a major GC, for example)=0Awhenever memory was r=
unning low.  In theory this could in some cases=0Aavoid the invocation of t=
he draconian OOM killer.=0A=0AQuestion: just how effective such a feature w=
ould be in the Ocaml case?=0A=0ABest regards,=0ADario Teixeira=0A=0A=0A=0A =
     

