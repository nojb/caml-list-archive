Return-Path: <guillaume.yziquel@citycable.ch>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id E43F3BC37
	for <caml-list@yquem.inria.fr>; Mon,  8 Feb 2010 12:45:44 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqQBAEeIb0tV2gB4nGdsb2JhbACDMpgOAQEBAQEICwgJE6xajmiBL4JKWwSJXA
X-IronPort-AV: E=Sophos;i="4.49,429,1262559600"; 
   d="scan'208";a="56274999"
Received: from emailfrontal1.citycable.ch ([85.218.0.120])
  by mail4-smtp-sop.national.inria.fr with SMTP; 08 Feb 2010 12:45:44 +0100
Received: from [192.168.0.12] (unknown [85.218.92.99])
	(Authenticated sender: guillaume.yziquel@citycable.ch)
	by emailfrontal1.citycable.ch (Postfix) with ESMTPA id D4B1412C2C1;
	Mon,  8 Feb 2010 12:45:42 +0100 (CET)
Message-ID: <4B6FF97F.7010202@citycable.ch>
Date: Mon, 08 Feb 2010 12:46:07 +0100
From: Guillaume Yziquel <guillaume.yziquel@citycable.ch>
Reply-To: guillaume.yziquel@citycable.ch
User-Agent: Mozilla-Thunderbird 2.0.0.22 (X11/20090707)
MIME-Version: 1.0
To: OCaml List <caml-list@inria.fr>
Subject: camlp4 unbound value
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; guillaume:01 guillaume:01 camlp:01 camlp:01 algebra:01 toplevel:01 ocaml:01 topfind:01 findlib:01 syntax:01 syntax:01 topfind:01 usr:01 lib:01 ocaml:01 

Hi. This is for camlp4 gurus:

I've been using a modified version of Mauricio Fernandez' relational 
algebra camlp4 extension for postgresql. (I'm trying to adapt it to 
another database system, so I've functorised a bit of the original code).

You can find the modified code and a Debian package at:

http://yziquel.homelinux.org/debian/pool/main/o/ocaml-relational/
http://yziquel.homelinux.org/gitweb?p=ocaml-relational.git;a=summary

My question is the following: Relational.Conv_Postgresql.encode_int is 
properly defined, and available from the toplevel, and yet considered 
unbound in the camlp4-generated code.

How can this be?


> yziquel@seldon:~$ ocaml
>         Objective Caml version 3.11.1
> 
> # #use "topfind";;
> - : unit = ()
> Findlib has been successfully loaded. Additional directives:
>   #require "package";;      to load a package
>   #list;;                   to list the available packages
>   #camlp4o;;                to load camlp4 (standard syntax)
>   #camlp4r;;                to load camlp4 (revised syntax)
>   #predicates "p,q,...";;   to set these predicates
>   Topfind.reset();;         to force that packages will be reloaded
>   #thread;;                 to enable threads
> 
> - : unit = ()
> # #thread;;
> /usr/lib/ocaml/threads: added to search path
> /usr/lib/ocaml/unix.cma: loaded
> /usr/lib/ocaml/threads/threads.cma: loaded
> # #camlp4o;;
> /usr/lib/ocaml/dynlink.cma: loaded
> /usr/lib/ocaml/camlp4: added to search path
> /usr/lib/ocaml/camlp4/camlp4o.cma: loaded
> 	Camlp4 Parsing version 3.11.1
> 
> # #require "relational.postgresql";;
> /usr/lib/ocaml/pcre: added to search path
> /usr/lib/ocaml/pcre/pcre.cma: loaded
> /usr/lib/ocaml/netsys: added to search path
> /usr/lib/ocaml/netsys/netsys.cma: loaded
> /usr/lib/ocaml/netstring: added to search path
> /usr/lib/ocaml/netstring/netstring.cma: loaded
> /usr/lib/ocaml/netstring/netstring_mt.cmo: loaded
> /usr/lib/ocaml/netstring/netstring_top.cmo: loaded
> /usr/lib/ocaml/netstring/netaccel.cma: loaded
> /usr/lib/ocaml/netstring/netaccel_link.cmo: loaded
> /usr/lib/ocaml/relational: added to search path
> /usr/lib/ocaml/relational/relational.cma: loaded
> /usr/lib/ocaml/postgresql: added to search path
> /usr/lib/ocaml/postgresql/postgresql.cma: loaded
> /usr/lib/ocaml/relational/pa_relational.cmo: loaded
> /usr/lib/ocaml/relational/pa_relational_postgresql.cmo: loaded
> # TABLE user users COLUMN id SERIAL AUTO PRIMARY KEY END;;
> Error: Unbound value Relational.Conv_Postgresql.encode_int
> # module X = Relational.Conv_Postgresql;;
> module X :
>   sig
>     val encode_string : string -> string
>     val decode_string : string -> string
>     val decode_bool : string -> bool
>     val encode_bool : bool -> string
>     val encode_int : int -> string
>     val decode_int : string -> int
>     val encode_float : float -> string
>     val decode_float : string -> float
>     val encode_nullable : ('a -> string) -> 'a option -> string
>     val decode_timestamp : string -> float
>     val decode_timestampz : string -> float
>     val encode_timestamp : float -> string
>     val encode_timestampz : float -> string
>     val decode_time : string -> float
>     val decode_timez : string -> float
>     val encode_time : float -> string
>     val encode_timez : float -> string
>     val decode_date : string -> Relational.Types.date
>     val encode_date : Relational.Types.date -> string
>   end
> # Relational.Conv_Postgresql.encode_int;;
> - : int -> string = <fun>
> # 

-- 
      Guillaume Yziquel
http://yziquel.homelinux.org/

