Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id p2Q7d3Q1023410
	for <caml-list@sympa-roc.inria.fr>; Sat, 26 Mar 2011 08:39:03 +0100
X-IronPort-AV: E=Sophos;i="4.63,247,1299452400"; 
   d="scan'208";a="95016420"
Received: from zmbs1.inria.fr ([128.93.142.14])
  by mail2-relais-roc.national.inria.fr with ESMTP; 26 Mar 2011 08:38:57 +0100
Date: Sat, 26 Mar 2011 08:38:57 +0100 (CET)
From: Emilie Balland <emilie.balland@inria.fr>
To: caml-list@inria.fr
Message-ID: <1425602098.72444.1301125137056.JavaMail.root@zmbs1.inria.fr>
In-Reply-To: <1479782227.72433.1301125055382.JavaMail.root@zmbs1.inria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
X-Originating-IP: [77.57.211.86]
X-Mailer: Zimbra 6.0.10_GA_2692 (ZimbraWebClient - SAF3 (Linux)/6.0.10_GA_2692)
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id p2Q7d3Q1023410
Subject: [Caml-list] Call for Papers: Conference on Domain-Specific Languages (DSL 2011)

============================ Call for Papers ============================


DSL 2011: Conference on Domain-Specific Languages 
(IFIP sponsorship pending approval) 


6-8 September 2011, Bordeaux, France 


http://dsl2011.bordeaux.inria.fr/ 


CALL FOR PAPERS 


Domain-specific languages have long been a popular way to shorten 
the distance from ideas to products in software engineering. On one 
hand, the interface of a DSL lets domain experts express high-level 
concepts succinctly in familiar notation, such as grammars for text or 
scripts for animation, and often provides guarantees and tools that take 
advantage of the specifics of the domain to help write and maintain 
these particular programs. On the other hand, the implementation of a 
DSL can automate many tasks traditionally performed by a few experts 
to turn a specification into an executable, thus making this expertise 
available widely. Overall, a DSL thus mediates a collaboration between 
its users and implementers that results in software that is more usable, 
more portable, more reliable, and more understandable. 


These benefits of DSLs have been delivered in domains old and new, such 
as signal processing, data mining, and Web scripting. Widely known 
examples of DSLs include Matlab, Verilog, SQL, LINQ, HTML, OpenGL, 
Macromedia Director, Mathematica, Maple, AutoLisp/AutoCAD, XSLT, RPM, 
Make, lex/yacc, LaTeX, PostScript, and Excel. Despite these successes, 
the adoption of DSLs have been stunted by the lack of general tools and 
principles for developing, compiling, and verifying domain-specific 
programs. General support for building and using DSLs is thus urgently 
needed. Languages that straddle the line between the domain-specific 
and the general-purpose, such as Perl, Tcl/Tk, and JavaScript, suggest 
that such support be based on modern notions of language design and 
software engineering. The goal of this conference, following the last 
one in 2009, is to explore how present and future DSLs can fruitfully 
draw from and potentially enrich these notions. 


We seek research papers on the theory and practice of DSLs, including 
but not limited to the following topics. 


* Foundations, including semantics, formal methods, type theory, and 
complexity theory 
* Language design, including concrete syntax, semantics, and types 
* Software engineering, including domain analysis, software design, 
and round-trip engineering 
* Modularity and composability of DSLs 
* Software processes, including metrics for software and language 
evaluation 
* Implementation, including parsing, compiling, program generation, 
program analysis, transformation, optimization, and parallelization 
* Reverse engineering, re-engineering, design discovery, automated 
refactoring 
* Hardware/software codesign 
* Programming environments and tools, including visual languages, 
debuggers, testing, and verification 
* Teaching DSLs and the use of DSLs in teaching 
* Case studies in any domain, especially the general lessons they 
provide for DSL design and implementation 


The conference will include a visit to the city of Bordeaux, a tour 
and tasting at the wine museum and cellar, and a banquet at La Belle 
Époque. 


INSTRUCTIONS FOR AUTHORS 


Papers will be judged on the depth of their insight and the extent 
to which they translate specific experience into general lessons 
for software engineers and DSL designers and implementers. Where 
appropriate, papers should refer to actual languages, tools, and 
techniques, provide pointers to full definitions, proofs, and 
implementations, and include empirical results. 


Proceedings will be published in Electronic Proceedings in Theoretical 
Computer Science (http://info.eptcs.org/). Submissions and final 
manuscripts should be at most 25 pages in EPTCS format. 


IMPORTANT DATES 


* 2011-04-18: Abstracts due 
* 2011-04-25: Submissions due 
* 2011-06-10: Authors notified of decisions 
* 2011-07-11: Final manuscripts due 
* 2011-09-05: Distilled tutorials 
* 2011-09-06/2011-09-08: Main conference 


PROGRAM COMMITTEE 


* Emilie Balland (INRIA) 
* Olaf Chitil (University of Kent) 
* Zoé Drey (IRIT) 
* Nate Foster (Cornell University) 
* Mayer Goldberg (Ben-Gurion University) 
* Shan Shan Huang (LogicBlox) 
* Sam Kamin (University of Illinois at Urbana-Champaign) 
* Jerzy Karczmarczuk (University of Caen) 
* Jan Midtgaard (Aarhus University) 
* Keiko Nakata (Tallinn University of Technology) 
* Klaus Ostermann (University of Marburg) 
* Jeremy Siek (University of Colorado at Boulder) 
* Tony Sloane (Macquarie University) 
* Josef Svenningsson (Chalmers University of Technology) 
* Paul Tarau (University of North Texas) 
* Dana N. Xu (INRIA) 


ORGANIZERS 


Local chair: Emilie Balland (INRIA) 
Program chairs: Olivier Danvy (Aarhus University), 
Chung-chieh Shan (Rutgers University) 


------------------------------------------------------------------------

