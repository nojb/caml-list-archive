Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pA2AYOgJ005058
	for <caml-list@sympa-roc.inria.fr>; Wed, 2 Nov 2011 11:34:24 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnICADccsU7RVdQ2kGdsb2JhbAApGpl/NYdEAYYxgRYIIgEBAQEJCQ0HFAQhgXIBAQEDARICBg0ZARQHEgsBAwELBgULDQ0ICwcHIQEBEQEFAQoBEQYKCRIJB4dgCCOXYgqLVIJghSk9iHACBQqDOYIxgxwEgliRPIo7gn49g3A
X-IronPort-AV: E=Sophos;i="4.69,443,1315173600"; 
   d="scan'208";a="127571837"
Received: from mail-vw0-f54.google.com ([209.85.212.54])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 02 Nov 2011 11:34:18 +0100
Received: by vws11 with SMTP id 11so2392291vws.27
        for <caml-list@inria.fr>; Wed, 02 Nov 2011 03:34:17 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=BkfBORqNcbUfV87YsHTS+FigRdSu6E0XesAAHvzl314=;
        b=pA0U0pujW2Q+CuUHZac7Aw0oE5yQ4JJLslpBfXzZbHkoTgF9zmudw+v5uGzeMwV4ez
         EAQRVbjsX8pYRmxCGH+dWlDfd3zCZThc+qPWM3Xv2lQTaU3OS+dZuWPUBE+DJ8yFTFM+
         DYeuJgvCK8//uK+TOM3APkGF9re2hTRLx5PMc=
Received: by 10.52.69.52 with SMTP id b20mr3878303vdu.85.1320230057195; Wed,
 02 Nov 2011 03:34:17 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.52.113.195 with HTTP; Wed, 2 Nov 2011 03:33:56 -0700 (PDT)
In-Reply-To: <slrnjb25lb.9th.sylvain@gallu.homelinux.org>
References: <CAOOOohRDB9HFwLqCrXt89-p6mQZgQcs4PqJW42KyiWy79q07fQ@mail.gmail.com>
 <CALScVY=Re8jdNQ3PbiCYVyACx5aNn4D6mvpGszd6Q+YnTh+hEA@mail.gmail.com>
 <CAOOOohQcEXYXCQm3FQUPEkAGWu_A+gw4MHwRn5KX8LO16rEE8g@mail.gmail.com>
 <CAOOOohTBCyYOoz_xUTDkr1NJOXsGBfQ=nTwRGibsHjS3Wj=apw@mail.gmail.com> <slrnjb25lb.9th.sylvain@gallu.homelinux.org>
From: Philippe Veber <philippe.veber@gmail.com>
Date: Wed, 2 Nov 2011 11:33:56 +0100
Message-ID: <CAOOOohQxtYkd=pdEr9G0o3Cq2ijfM-Wt5a6HkUHbXEHqE6baiQ@mail.gmail.com>
To: Sylvain Le Gall <sylvain@le-gall.net>
Cc: caml-list@inria.fr
Content-Type: multipart/alternative; boundary=20cf307f370294b7a204b0be03d8
X-Validation-by: philippe.veber@gmail.com
Subject: Re: [Caml-list] Re: oasis, inter-dependent libraries and syntax extension


--20cf307f370294b7a204b0be03d8
Content-Type: text/plain; charset=ISO-8859-1

Done:
https://forge.ocamlcore.org/tracker/index.php?func=detail&aid=1050&group_id=54&atid=291
I find oasis particularly useful, tell me if there is something else I can
do on this.
ph.


2011/11/2 Sylvain Le Gall <sylvain@le-gall.net>

> Hello,
>
> You are indeed right, syntax extensions remain a second class citizen.
> I'll need to fix that situation.
>
> Please report this problem to the bug tracker, along with your solution
> (which seems fine). I'll try to implement it in 0.3.
>
> Cheers
> Sylvain Le Gall
>
> On 01-11-2011, Philippe Veber <philippe.veber@gmail.com> wrote:
> >
> > --20cf307abebda8d83d04b0a9e43e
> > Content-Type: text/plain; charset=ISO-8859-1
> > Content-Transfer-Encoding: quoted-printable
> >
> > I found a workaround in lwt, which is to add some code in
> myocamlbuild.ml,
> > outside the generated part, to define appropriate tags that can then be
> > used in _tags (more generally, lwt has several interesting tricks about
> > oasis). For the record, here is how you can use a syntax extension
> > internally, inside a package:
> >
> > open Ocamlbuild_plugin
> >
> > let () =3D
> >   dispatch
> >     (fun hook ->
> >        dispatch_default hook;
> >        match hook with
> >          | Before_options ->
> >              Options.make_links :=3D false
> >
> >          | After_rules ->
> >              (* Internal syntax extension *)
> >              List.iter
> >                (fun base ->
> >                   let tag =3D "pa_" ^ base and file =3D "src/syntax/pa_"
> ^ =
> > base
> > ^ ".cmo" in
> >                   flag ["ocaml"; "compile"; tag] & S[A"-ppopt"; A file];
> >                   flag ["ocaml"; "ocamldep"; tag] & S[A"-ppopt"; A file];
> >                   flag ["ocaml"; "doc"; tag] & S[A"-ppopt"; A file];
> >                   dep ["ocaml"; "ocamldep"; tag] [file])
> >                ["syntax_ext1";"syntax_ext2"]; (* add your syntax
> extensions
> > here *)
> >          | _ ->
> >              ())
> >
> >
> >
> > 2011/10/31 Philippe Veber <philippe.veber@gmail.com>
> >
> >> S=E9bastien's suggestion is indeed a good start but alas for me not
> enoug=
> > h.
> >> The build still fails at ocamldep time, because the library B (with the
> >> syntax extension) seems not to be taken into account. If I replace my
> >> syntax extension with some findlib package (say tyxml), the compilation
> >> works fine. So the question remains, how can I specify that a
> >> library/executable in a package depends on a syntax extension that is
> >> defined as a library of the same package?
> >>
> >> Thanks to oasisdb, I've browsed a couple of packages that could be in
> the
> >> same situation, like a test executable for a syntax extension, but found
> >> none. Maybe I'm not dealing correctly with the situation ?
> >>
> >> ph.
> >>
> >>
> >> 2011/10/31 Sebastien Mondet <sebastien.mondet@gmail.com>
> >>
> >>>
> >>> Hi
> >>>
> >>>
> >>> I ran into the same problem last week.
> >>> I added a line to the _tags file after the OASIS-generated stuff:
> >>>
> >>>    ...
> >>>     # OASIS_STOP
> >>>
> >>>    <src/*/*.ml>: syntax_camlp4o
> >>>
> >>>
> >>> (found in the slide 18:
> >>> http://oasis.forge.ocamlcore.org/documentation.html )
> >>>
> >>>
> >>> Sebastien
> >>>
> >>>
> >>>
> >>>
> >>>
> >>>
> >>> On Mon, Oct 31, 2011 at 12:23, Philippe Veber <
> philippe.veber@gmail.com>=
> > wrote:
> >>>
> >>>> Hi,
> >>>> I have an oasis project defining three inter-dependent libraries A, B
> >>>> and C. B is a syntax extension, and depends on A. C depends on both A
> a=
> > nd
> >>>> B. I have written an _oasis file for this, which works fine if I
> don't =
> > use
> >>>> the extension in C, but fails if I do, during ocamldep (ocamldep
> lacks =
> > the
> >>>> appropriate options to understand the new syntax). Has anybody run
> into
> >>>> this problem ?
> >>>>
> >>>> ph.
> >>>>
> >>>>
> >>>
> >>
> >
> > --=20
> > Caml-list mailing list.  Subscription management and archives:
> > https://sympa-roc.inria.fr/wws/info/caml-list
> > Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> > Bug reports: http://caml.inria.fr/bin/caml-bugs
> >
> >
> > --20cf307abebda8d83d04b0a9e43e
> > Content-Type: text/html; charset=ISO-8859-1
> > Content-Transfer-Encoding: quoted-printable
> >
> > I found a workaround in lwt, which is to add some code in <a
> href=3D"http:/=
> > /myocamlbuild.ml">myocamlbuild.ml</a>, outside the generated part, to
> defin=
> > e appropriate tags that can then be used in _tags (more generally, lwt
> has =
> > several interesting tricks about oasis). For the record, here is how you
> ca=
> > n use a syntax extension internally, inside a package:<br>
> >
> ><br><span style=3D"font-family: courier new,monospace;">open
> Ocamlbuild_plu=
> > gin</span><br style=3D"font-family: courier new,monospace;"><br
> style=3D"fo=
> > nt-family: courier new,monospace;"><span style=3D"font-family: courier
> new,=
> > monospace;">let () =3D</span><br style=3D"font-family: courier
> new,monospac=
> > e;">
> >
> ><span style=3D"font-family: courier new,monospace;">=A0
> dispatch</span><br =
> > style=3D"font-family: courier new,monospace;"><span
> style=3D"font-family: c=
> > ourier new,monospace;">=A0=A0=A0 (fun hook -&gt;</span><br
> style=3D"font-fa=
> > mily: courier new,monospace;">
> >
> ><span style=3D"font-family: courier new,monospace;">=A0=A0=A0=A0=A0=A0
> disp=
> > atch_default hook;</span><br style=3D"font-family: courier
> new,monospace;">=
> ><span style=3D"font-family: courier new,monospace;">=A0=A0=A0=A0=A0=A0
> matc=
> > h hook with</span><br style=3D"font-family: courier new,monospace;">
> >
> ><span style=3D"font-family: courier new,monospace;">=A0=A0=A0=A0=A0=A0=A0=
> >=A0 | Before_options -&gt;</span><br style=3D"font-family: courier
> new,mono=
> > space;"><span style=3D"font-family: courier
> new,monospace;">=A0=A0=A0=A0=A0=
> >=A0=A0=A0=A0=A0=A0=A0 Options.make_links :=3D false</span><br
> style=3D"font=
> > -family: courier new,monospace;">
> >
> ><br style=3D"font-family: courier new,monospace;"><span
> style=3D"font-famil=
> > y: courier new,monospace;">=A0=A0=A0=A0=A0=A0=A0=A0 | After_rules
> -&gt;</sp=
> > an><br style=3D"font-family: courier new,monospace;"><span
> style=3D"font-fa=
> > mily: courier new,monospace;">=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0 (*
> Inter=
> > nal syntax extension *)</span><br style=3D"font-family: courier
> new,monospa=
> > ce;">
> >
> ><span style=3D"font-family: courier new,monospace;">=A0=A0=A0=A0=A0=A0=A0=
> >=A0=A0=A0=A0=A0 List.iter</span><br style=3D"font-family: courier
> new,monos=
> > pace;"><span style=3D"font-family: courier
> new,monospace;">=A0=A0=A0=A0=A0=
> >=A0=A0=A0=A0=A0=A0=A0=A0=A0 (fun base -&gt;</span><br
> style=3D"font-family:=
> >  courier new,monospace;">
> >
> ><span style=3D"font-family: courier new,monospace;">=A0=A0=A0=A0=A0=A0=A0=
> >=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0 let tag =3D &quot;pa_&quot; ^ base and
> file =
> >=3D &quot;src/syntax/pa_&quot; ^ base ^ &quot;.cmo&quot; in</span><br
> style=
> >=3D"font-family: courier new,monospace;">
> >
> ><span style=3D"font-family: courier new,monospace;">=A0=A0=A0=A0=A0=A0=A0=
> >=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0 flag [&quot;ocaml&quot;;
> &quot;compile&quot;=
> > ; tag] &amp; S[A&quot;-ppopt&quot;; A file];</span><br
> style=3D"font-family=
> >: courier new,monospace;"><span style=3D"font-family: courier
> new,monospace=
> > ;">=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0 flag
> [&quot;ocaml&qu=
> > ot;; &quot;ocamldep&quot;; tag] &amp; S[A&quot;-ppopt&quot;; A
> file];</span=
> >><br style=3D"font-family: courier new,monospace;">
> >
> ><span style=3D"font-family: courier new,monospace;">=A0=A0=A0=A0=A0=A0=A0=
> >=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0 flag [&quot;ocaml&quot;; &quot;doc&quot;;
> ta=
> > g] &amp; S[A&quot;-ppopt&quot;; A file];</span><br style=3D"font-family:
> co=
> > urier new,monospace;"><span style=3D"font-family: courier
> new,monospace;">=
> >=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0=A0 dep
> [&quot;ocaml&quot;;=
> >  &quot;ocamldep&quot;; tag] [file])</span><br style=3D"font-family:
> courier=
> >  new,monospace;">
> >
> ><span style=3D"font-family: courier new,monospace;">=A0=A0=A0=A0=A0=A0=A0=
> >=A0=A0=A0=A0=A0=A0=A0
> [&quot;syntax_ext1&quot;;&quot;syntax_ext2&quot;];</s=
> > pan> <span style=3D"font-family: courier new,monospace;">(* add your
> syntax=
> >  extensions here *)</span><br style=3D"font-family: courier
> new,monospace;">
> >
> ><span style=3D"font-family: courier new,monospace;">=A0=A0=A0=A0=A0=A0=A0=
> >=A0 | _ -&gt;</span><br style=3D"font-family: courier
> new,monospace;"><span=
> >  style=3D"font-family: courier
> new,monospace;">=A0=A0=A0=A0=A0=A0=A0=A0=A0=
> >=A0=A0=A0 ())</span><br style=3D"font-family: courier new,monospace;">
> >
> ><br><br><br><div class=3D"gmail_quote">2011/10/31 Philippe Veber <span
> dir=
> >=3D"ltr">&lt;<a href=3D"mailto:philippe.veber@gmail.com
> ">philippe.veber@gma=
> > il.com</a>&gt;</span><br><blockquote class=3D"gmail_quote"
> style=3D"margin:=
> > 0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;">
> >
> > S=E9bastien&#39;s suggestion is indeed a good start but alas for me not
> eno=
> > ugh. The build still fails at ocamldep time, because the library B (with
> th=
> > e syntax extension) seems not to be taken into account. If I replace my
> syn=
> > tax extension with some findlib package (say tyxml), the compilation
> works =
> > fine. So the question remains, how can I specify that a
> library/executable =
> > in a package depends on a syntax extension that is defined as a library
> of =
> > the same package?<br>
> >
> >
> ><br>Thanks to oasisdb, I&#39;ve browsed a couple of packages that could
> be =
> > in the same situation, like a test executable for a syntax extension,
> but f=
> > ound none. Maybe I&#39;m not dealing correctly with the situation ?<br>
> >
> >
> ><br>ph.<div><div></div><div class=3D"h5"><br><br><div
> class=3D"gmail_quote"=
> >>2011/10/31 Sebastien Mondet <span dir=3D"ltr">&lt;<a href=3D"mailto:
> sebast=
> > ien.mondet@gmail.com" target=3D"_blank">sebastien.mondet@gmail.com
> </a>&gt;<=
> > /span><br>
> >
> ><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0
> .8ex;border-left:1p=
> > x #ccc solid;padding-left:1ex">
> ><div><br></div><div>Hi</div><div><br></div><div><br></div><div>I ran into
> t=
> > he same problem last week.</div><div>I added a line to the _tags file
> after=
> >  the OASIS-generated stuff:</div><div><div><br></div><div>=A0
> =A0...</div>
> >
> ><div>
> >
> >
> >=A0 =A0# OASIS_STOP</div><div><br></div><div>=A0 =A0&lt;src/*/*.ml&gt;:
> syn=
> > tax_camlp4o</div></div><div><br></div><div><br></div><div>(found in the
> sli=
> > de 18:</div><div><a href=3D"
> http://oasis.forge.ocamlcore.org/documentation.=
> > html" target=3D"_blank">
> http://oasis.forge.ocamlcore.org/documentation.html=
> ></a>=A0)</div>
> >
> >
> >
> >
> ><div><br></div><font
> color=3D"#888888"><div><br></div><div>Sebastien</div><=
> >
> /font><div><div></div><div><div><br></div><div><br></div><div><br></div><di=
> > v><br></div><br><br><div class=3D"gmail_quote">On Mon, Oct 31, 2011 at
> 12:2=
> > 3, Philippe Veber <span dir=3D"ltr">&lt;<a href=3D"mailto:
> philippe.veber@gm=
> > ail.com" target=3D"_blank">philippe.veber@gmail.com</a>&gt;</span>
> wrote:<b=
> > r>
> >
> >
> >
> >
> ><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0
> .8ex;border-left:1p=
> > x #ccc solid;padding-left:1ex">Hi,<br>I have an oasis project defining
> thre=
> > e inter-dependent libraries A, B and C. B is a syntax extension, and
> depend=
> > s on A. C depends on both A and B. I have written an _oasis file for
> this, =
> > which works fine if I don&#39;t use the extension in C, but fails if I
> do, =
> > during ocamldep (ocamldep lacks the appropriate options to understand
> the n=
> > ew syntax). Has anybody run into this problem ?<br>
> >
> >
> >
> >
> >
> >
> ><br>ph.<br><br>
> ></blockquote></div><br>
> ></div></div></blockquote></div><br>
> ></div></div></blockquote></div><br>
> >
> > --20cf307abebda8d83d04b0a9e43e--
> >
>
> Cheers,
> Sylvain Le Gall
> --
> My company: http://www.ocamlcore.com
> Linkedin:   http://fr.linkedin.com/in/sylvainlegall
> Start an OCaml project here: http://forge.ocamlcore.org
> OCaml blogs:                 http://planet.ocamlcore.org
>
>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa-roc.inria.fr/wws/info/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>

--20cf307f370294b7a204b0be03d8
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Done: <a href=3D"https://forge.ocamlcore.org/tracker/index.php?func=3Ddetai=
l&amp;aid=3D1050&amp;group_id=3D54&amp;atid=3D291">https://forge.ocamlcore.=
org/tracker/index.php?func=3Ddetail&amp;aid=3D1050&amp;group_id=3D54&amp;at=
id=3D291</a><br>

I find oasis particularly useful, tell me if there is something else I can =
do on this.<br>ph.<br><br><br><div class=3D"gmail_quote">2011/11/2 Sylvain =
Le Gall <span dir=3D"ltr">&lt;<a href=3D"mailto:sylvain@le-gall.net">sylvai=
n@le-gall.net</a>&gt;</span><br>

<blockquote class=3D"gmail_quote" style=3D"margin: 0pt 0pt 0pt 0.8ex; borde=
r-left: 1px solid rgb(204, 204, 204); padding-left: 1ex;">Hello,<br>
<br>
You are indeed right, syntax extensions remain a second class citizen.<br>
I&#39;ll need to fix that situation.<br>
<br>
Please report this problem to the bug tracker, along with your solution<br>
(which seems fine). I&#39;ll try to implement it in 0.3.<br>
<br>
Cheers<br>
Sylvain Le Gall<br>
<br>
On 01-11-2011, Philippe Veber &lt;<a href=3D"mailto:philippe.veber@gmail.co=
m">philippe.veber@gmail.com</a>&gt; wrote:<br>
&gt;<br>
&gt; --20cf307abebda8d83d04b0a9e43e<br>
&gt; Content-Type: text/plain; charset=3DISO-8859-1<br>
&gt; Content-Transfer-Encoding: quoted-printable<br>
<div class=3D"im">&gt;<br>
&gt; I found a workaround in lwt, which is to add some code in <a href=3D"h=
ttp://myocamlbuild.ml" target=3D"_blank">myocamlbuild.ml</a>,<br>
&gt; outside the generated part, to define appropriate tags that can then b=
e<br>
&gt; used in _tags (more generally, lwt has several interesting tricks abou=
t<br>
&gt; oasis). For the record, here is how you can use a syntax extension<br>
&gt; internally, inside a package:<br>
&gt;<br>
&gt; open Ocamlbuild_plugin<br>
&gt;<br>
</div>&gt; let () =3D3D<br>
<div class=3D"im">&gt; =A0 dispatch<br>
&gt; =A0 =A0 (fun hook -&gt;<br>
&gt; =A0 =A0 =A0 =A0dispatch_default hook;<br>
&gt; =A0 =A0 =A0 =A0match hook with<br>
&gt; =A0 =A0 =A0 =A0 =A0| Before_options -&gt;<br>
</div>&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0Options.make_links :=3D3D false<br>
<div class=3D"im">&gt;<br>
&gt; =A0 =A0 =A0 =A0 =A0| After_rules -&gt;<br>
&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0(* Internal syntax extension *)<br>
&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0List.iter<br>
&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0(fun base -&gt;<br>
</div>&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 let tag =3D3D &quot;pa_&quot=
; ^ base and file =3D3D &quot;src/syntax/pa_&quot; ^ =3D<br>
<div class=3D"im">&gt; base<br>
&gt; ^ &quot;.cmo&quot; in<br>
&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 flag [&quot;ocaml&quot;; &quot;com=
pile&quot;; tag] &amp; S[A&quot;-ppopt&quot;; A file];<br>
&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 flag [&quot;ocaml&quot;; &quot;oca=
mldep&quot;; tag] &amp; S[A&quot;-ppopt&quot;; A file];<br>
&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 flag [&quot;ocaml&quot;; &quot;doc=
&quot;; tag] &amp; S[A&quot;-ppopt&quot;; A file];<br>
&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 dep [&quot;ocaml&quot;; &quot;ocam=
ldep&quot;; tag] [file])<br>
&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0[&quot;syntax_ext1&quot;;&quot;syntax_e=
xt2&quot;]; (* add your syntax extensions<br>
&gt; here *)<br>
&gt; =A0 =A0 =A0 =A0 =A0| _ -&gt;<br>
&gt; =A0 =A0 =A0 =A0 =A0 =A0 =A0())<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt; 2011/10/31 Philippe Veber &lt;<a href=3D"mailto:philippe.veber@gmail.c=
om">philippe.veber@gmail.com</a>&gt;<br>
&gt;<br>
</div>&gt;&gt; S=3DE9bastien&#39;s suggestion is indeed a good start but al=
as for me not enoug=3D<br>
&gt; h.<br>
<div class=3D"im">&gt;&gt; The build still fails at ocamldep time, because =
the library B (with the<br>
&gt;&gt; syntax extension) seems not to be taken into account. If I replace=
 my<br>
&gt;&gt; syntax extension with some findlib package (say tyxml), the compil=
ation<br>
&gt;&gt; works fine. So the question remains, how can I specify that a<br>
&gt;&gt; library/executable in a package depends on a syntax extension that=
 is<br>
&gt;&gt; defined as a library of the same package?<br>
&gt;&gt;<br>
&gt;&gt; Thanks to oasisdb, I&#39;ve browsed a couple of packages that coul=
d be in the<br>
&gt;&gt; same situation, like a test executable for a syntax extension, but=
 found<br>
&gt;&gt; none. Maybe I&#39;m not dealing correctly with the situation ?<br>
&gt;&gt;<br>
&gt;&gt; ph.<br>
&gt;&gt;<br>
&gt;&gt;<br>
&gt;&gt; 2011/10/31 Sebastien Mondet &lt;<a href=3D"mailto:sebastien.mondet=
@gmail.com">sebastien.mondet@gmail.com</a>&gt;<br>
&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; Hi<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; I ran into the same problem last week.<br>
&gt;&gt;&gt; I added a line to the _tags file after the OASIS-generated stu=
ff:<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; =A0 =A0...<br>
&gt;&gt;&gt; =A0 =A0 # OASIS_STOP<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; =A0 =A0&lt;src/*/*.ml&gt;: syntax_camlp4o<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; (found in the slide 18:<br>
&gt;&gt;&gt; <a href=3D"http://oasis.forge.ocamlcore.org/documentation.html=
" target=3D"_blank">http://oasis.forge.ocamlcore.org/documentation.html</a>=
 )<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt; Sebastien<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
</div>&gt;&gt;&gt; On Mon, Oct 31, 2011 at 12:23, Philippe Veber &lt;<a hre=
f=3D"mailto:philippe.veber@gmail.com">philippe.veber@gmail.com</a>&gt;=3D<b=
r>
<div class=3D"im">&gt; wrote:<br>
&gt;&gt;&gt;<br>
&gt;&gt;&gt;&gt; Hi,<br>
&gt;&gt;&gt;&gt; I have an oasis project defining three inter-dependent lib=
raries A, B<br>
</div>&gt;&gt;&gt;&gt; and C. B is a syntax extension, and depends on A. C =
depends on both A a=3D<br>
&gt; nd<br>
&gt;&gt;&gt;&gt; B. I have written an _oasis file for this, which works fin=
e if I don&#39;t =3D<br>
&gt; use<br>
&gt;&gt;&gt;&gt; the extension in C, but fails if I do, during ocamldep (oc=
amldep lacks =3D<br>
<div class=3D"im">&gt; the<br>
&gt;&gt;&gt;&gt; appropriate options to understand the new syntax). Has any=
body run into<br>
&gt;&gt;&gt;&gt; this problem ?<br>
&gt;&gt;&gt;&gt;<br>
&gt;&gt;&gt;&gt; ph.<br>
&gt;&gt;&gt;&gt;<br>
&gt;&gt;&gt;&gt;<br>
&gt;&gt;&gt;<br>
&gt;&gt;<br>
&gt;<br>
</div>&gt; --=3D20<br>
&gt; Caml-list mailing list. =A0Subscription management and archives:<br>
&gt; <a href=3D"https://sympa-roc.inria.fr/wws/info/caml-list" target=3D"_b=
lank">https://sympa-roc.inria.fr/wws/info/caml-list</a><br>
&gt; Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_be=
ginners" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a=
><br>
&gt; Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"=
_blank">http://caml.inria.fr/bin/caml-bugs</a><br>
&gt;<br>
&gt;<br>
&gt; --20cf307abebda8d83d04b0a9e43e<br>
&gt; Content-Type: text/html; charset=3DISO-8859-1<br>
&gt; Content-Transfer-Encoding: quoted-printable<br>
&gt;<br>
&gt; I found a workaround in lwt, which is to add some code in &lt;a href=
=3D3D&quot;http:/=3D<br>
&gt; /<a href=3D"http://myocamlbuild.ml" target=3D"_blank">myocamlbuild.ml<=
/a>&quot;&gt;<a href=3D"http://myocamlbuild.ml" target=3D"_blank">myocamlbu=
ild.ml</a>&lt;/a&gt;, outside the generated part, to defin=3D<br>
&gt; e appropriate tags that can then be used in _tags (more generally, lwt=
 has =3D<br>
&gt; several interesting tricks about oasis). For the record, here is how y=
ou ca=3D<br>
&gt; n use a syntax extension internally, inside a package:&lt;br&gt;<br>
&gt;<br>
&gt;&lt;br&gt;&lt;span style=3D3D&quot;font-family: courier new,monospace;&=
quot;&gt;open Ocamlbuild_plu=3D<br>
&gt; gin&lt;/span&gt;&lt;br style=3D3D&quot;font-family: courier new,monosp=
ace;&quot;&gt;&lt;br style=3D3D&quot;fo=3D<br>
&gt; nt-family: courier new,monospace;&quot;&gt;&lt;span style=3D3D&quot;fo=
nt-family: courier new,=3D<br>
&gt; monospace;&quot;&gt;let () =3D3D&lt;/span&gt;&lt;br style=3D3D&quot;fo=
nt-family: courier new,monospac=3D<br>
&gt; e;&quot;&gt;<br>
&gt;<br>
&gt;&lt;span style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;=
=3DA0 dispatch&lt;/span&gt;&lt;br =3D<br>
&gt; style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;&lt;span =
style=3D3D&quot;font-family: c=3D<br>
&gt; ourier new,monospace;&quot;&gt;=3DA0=3DA0=3DA0 (fun hook -&amp;gt;&lt;=
/span&gt;&lt;br style=3D3D&quot;font-fa=3D<br>
&gt; mily: courier new,monospace;&quot;&gt;<br>
&gt;<br>
&gt;&lt;span style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;=
=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0 disp=3D<br>
&gt; atch_default hook;&lt;/span&gt;&lt;br style=3D3D&quot;font-family: cou=
rier new,monospace;&quot;&gt;=3D<br>
&gt;&lt;span style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;=
=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0 matc=3D<br>
&gt; h hook with&lt;/span&gt;&lt;br style=3D3D&quot;font-family: courier ne=
w,monospace;&quot;&gt;<br>
&gt;<br>
&gt;&lt;span style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;=
=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3D<br>
&gt;=3DA0 | Before_options -&amp;gt;&lt;/span&gt;&lt;br style=3D3D&quot;fon=
t-family: courier new,mono=3D<br>
&gt; space;&quot;&gt;&lt;span style=3D3D&quot;font-family: courier new,mono=
space;&quot;&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3D<br>
&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0 Options.make_links :=3D3D false&lt;=
/span&gt;&lt;br style=3D3D&quot;font=3D<br>
&gt; -family: courier new,monospace;&quot;&gt;<br>
&gt;<br>
&gt;&lt;br style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;&lt=
;span style=3D3D&quot;font-famil=3D<br>
&gt; y: courier new,monospace;&quot;&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=
=3DA0 | After_rules -&amp;gt;&lt;/sp=3D<br>
&gt; an&gt;&lt;br style=3D3D&quot;font-family: courier new,monospace;&quot;=
&gt;&lt;span style=3D3D&quot;font-fa=3D<br>
&gt; mily: courier new,monospace;&quot;&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=
=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0 (* Inter=3D<br>
&gt; nal syntax extension *)&lt;/span&gt;&lt;br style=3D3D&quot;font-family=
: courier new,monospa=3D<br>
&gt; ce;&quot;&gt;<br>
&gt;<br>
&gt;&lt;span style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;=
=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3D<br>
&gt;=3DA0=3DA0=3DA0=3DA0=3DA0 List.iter&lt;/span&gt;&lt;br style=3D3D&quot;=
font-family: courier new,monos=3D<br>
&gt; pace;&quot;&gt;&lt;span style=3D3D&quot;font-family: courier new,monos=
pace;&quot;&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3D<br>
&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0 (fun base -&amp;gt;&lt;/s=
pan&gt;&lt;br style=3D3D&quot;font-family:=3D<br>
&gt; =A0courier new,monospace;&quot;&gt;<br>
&gt;<br>
&gt;&lt;span style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;=
=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3D<br>
&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0 let tag =3D3D &amp;q=
uot;pa_&amp;quot; ^ base and file =3D<br>
&gt;=3D3D &amp;quot;src/syntax/pa_&amp;quot; ^ base ^ &amp;quot;.cmo&amp;qu=
ot; in&lt;/span&gt;&lt;br style=3D<br>
&gt;=3D3D&quot;font-family: courier new,monospace;&quot;&gt;<br>
&gt;<br>
&gt;&lt;span style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;=
=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3D<br>
&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0 flag [&amp;quot;ocam=
l&amp;quot;; &amp;quot;compile&amp;quot;=3D<br>
&gt; ; tag] &amp;amp; S[A&amp;quot;-ppopt&amp;quot;; A file];&lt;/span&gt;&=
lt;br style=3D3D&quot;font-family=3D<br>
&gt;: courier new,monospace;&quot;&gt;&lt;span style=3D3D&quot;font-family:=
 courier new,monospace=3D<br>
&gt; ;&quot;&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA=
0=3DA0=3DA0=3DA0=3DA0=3DA0 flag [&amp;quot;ocaml&amp;qu=3D<br>
&gt; ot;; &amp;quot;ocamldep&amp;quot;; tag] &amp;amp; S[A&amp;quot;-ppopt&=
amp;quot;; A file];&lt;/span=3D<br>
&gt;&gt;&lt;br style=3D3D&quot;font-family: courier new,monospace;&quot;&gt=
;<br>
&gt;<br>
&gt;&lt;span style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;=
=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3D<br>
&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0 flag [&amp;quot;ocam=
l&amp;quot;; &amp;quot;doc&amp;quot;; ta=3D<br>
&gt; g] &amp;amp; S[A&amp;quot;-ppopt&amp;quot;; A file];&lt;/span&gt;&lt;b=
r style=3D3D&quot;font-family: co=3D<br>
&gt; urier new,monospace;&quot;&gt;&lt;span style=3D3D&quot;font-family: co=
urier new,monospace;&quot;&gt;=3D<br>
&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=
=3DA0=3DA0=3DA0 dep [&amp;quot;ocaml&amp;quot;;=3D<br>
&gt; =A0&amp;quot;ocamldep&amp;quot;; tag] [file])&lt;/span&gt;&lt;br style=
=3D3D&quot;font-family: courier=3D<br>
&gt; =A0new,monospace;&quot;&gt;<br>
&gt;<br>
&gt;&lt;span style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;=
=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3D<br>
&gt;=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0 [&amp;quot;syntax_ext1&amp;quot;;&a=
mp;quot;syntax_ext2&amp;quot;];&lt;/s=3D<br>
&gt; pan&gt; &lt;span style=3D3D&quot;font-family: courier new,monospace;&q=
uot;&gt;(* add your syntax=3D<br>
&gt; =A0extensions here *)&lt;/span&gt;&lt;br style=3D3D&quot;font-family: =
courier new,monospace;&quot;&gt;<br>
&gt;<br>
&gt;&lt;span style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;=
=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3D<br>
&gt;=3DA0 | _ -&amp;gt;&lt;/span&gt;&lt;br style=3D3D&quot;font-family: cou=
rier new,monospace;&quot;&gt;&lt;span=3D<br>
&gt; =A0style=3D3D&quot;font-family: courier new,monospace;&quot;&gt;=3DA0=
=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3DA0=3D<br>
&gt;=3DA0=3DA0=3DA0 ())&lt;/span&gt;&lt;br style=3D3D&quot;font-family: cou=
rier new,monospace;&quot;&gt;<br>
&gt;<br>
&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D3D&quot;gmail_quote&quot;=
&gt;2011/10/31 Philippe Veber &lt;span dir=3D<br>
&gt;=3D3D&quot;ltr&quot;&gt;&amp;lt;&lt;a href=3D3D&quot;mailto:<a href=3D"=
mailto:philippe.veber@gmail.com">philippe.veber@gmail.com</a>&quot;&gt;phil=
ippe.veber@gma=3D<br>
&gt; <a href=3D"http://il.com" target=3D"_blank">il.com</a>&lt;/a&gt;&amp;g=
t;&lt;/span&gt;&lt;br&gt;&lt;blockquote class=3D3D&quot;gmail_quote&quot; s=
tyle=3D3D&quot;margin:=3D<br>
&gt; 0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;&quot;&gt;<br>
&gt;<br>
&gt; S=3DE9bastien&amp;#39;s suggestion is indeed a good start but alas for=
 me not eno=3D<br>
&gt; ugh. The build still fails at ocamldep time, because the library B (wi=
th th=3D<br>
&gt; e syntax extension) seems not to be taken into account. If I replace m=
y syn=3D<br>
&gt; tax extension with some findlib package (say tyxml), the compilation w=
orks =3D<br>
&gt; fine. So the question remains, how can I specify that a library/execut=
able =3D<br>
&gt; in a package depends on a syntax extension that is defined as a librar=
y of =3D<br>
&gt; the same package?&lt;br&gt;<br>
&gt;<br>
&gt;<br>
&gt;&lt;br&gt;Thanks to oasisdb, I&amp;#39;ve browsed a couple of packages =
that could be =3D<br>
&gt; in the same situation, like a test executable for a syntax extension, =
but f=3D<br>
&gt; ound none. Maybe I&amp;#39;m not dealing correctly with the situation =
?&lt;br&gt;<br>
&gt;<br>
&gt;<br>
&gt;&lt;br&gt;ph.&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div class=3D3D&quot;=
h5&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D3D&quot;gmail_quote&quot;=
=3D<br>
&gt;&gt;2011/10/31 Sebastien Mondet &lt;span dir=3D3D&quot;ltr&quot;&gt;&am=
p;lt;&lt;a href=3D3D&quot;mailto:<a href=3D"mailto:sebast">sebast</a>=3D<br>
&gt; <a href=3D"mailto:ien.mondet@gmail.com">ien.mondet@gmail.com</a>&quot;=
 target=3D3D&quot;_blank&quot;&gt;<a href=3D"mailto:sebastien.mondet@gmail.=
com">sebastien.mondet@gmail.com</a>&lt;/a&gt;&amp;gt;&lt;=3D<br>
&gt; /span&gt;&lt;br&gt;<br>
&gt;<br>
&gt;&lt;blockquote class=3D3D&quot;gmail_quote&quot; style=3D3D&quot;margin=
:0 0 0 .8ex;border-left:1p=3D<br>
&gt; x #ccc solid;padding-left:1ex&quot;&gt;<br>
&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Hi&lt;/div&gt;&lt;div&gt;&l=
t;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;I ran into =
t=3D<br>
&gt; he same problem last week.&lt;/div&gt;&lt;div&gt;I added a line to the=
 _tags file after=3D<br>
&gt; =A0the OASIS-generated stuff:&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br&=
gt;&lt;/div&gt;&lt;div&gt;=3DA0 =3DA0...&lt;/div&gt;<br>
&gt;<br>
&gt;&lt;div&gt;<br>
&gt;<br>
&gt;<br>
&gt;=3DA0 =3DA0# OASIS_STOP&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt=
;div&gt;=3DA0 =3DA0&amp;lt;src/*/*.ml&amp;gt;: syn=3D<br>
&gt; tax_camlp4o&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&l=
t;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;(found in the sli=3D<br>
&gt; de 18:&lt;/div&gt;&lt;div&gt;&lt;a href=3D3D&quot;<a href=3D"http://oa=
sis.forge.ocamlcore.org/documentation.=3D" target=3D"_blank">http://oasis.f=
orge.ocamlcore.org/documentation.=3D</a><br>
&gt; html&quot; target=3D3D&quot;_blank&quot;&gt;<a href=3D"http://oasis.fo=
rge.ocamlcore.org/documentation.html=3D" target=3D"_blank">http://oasis.for=
ge.ocamlcore.org/documentation.html=3D</a><br>
&gt;&lt;/a&gt;=3DA0)&lt;/div&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;font color=3D3D&quot;#888888&quot;=
&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Sebastien&lt;/div&gt;&lt;=
=3D<br>
&gt; /font&gt;&lt;div&gt;&lt;div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;b=
r&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;=
/div&gt;&lt;di=3D<br>
&gt; v&gt;&lt;br&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;div class=3D3D&quot=
;gmail_quote&quot;&gt;On Mon, Oct 31, 2011 at 12:2=3D<br>
&gt; 3, Philippe Veber &lt;span dir=3D3D&quot;ltr&quot;&gt;&amp;lt;&lt;a hr=
ef=3D3D&quot;mailto:<a href=3D"mailto:philippe.veber@gm">philippe.veber@gm<=
/a>=3D<br>
&gt; <a href=3D"http://ail.com" target=3D"_blank">ail.com</a>&quot; target=
=3D3D&quot;_blank&quot;&gt;<a href=3D"mailto:philippe.veber@gmail.com">phil=
ippe.veber@gmail.com</a>&lt;/a&gt;&amp;gt;&lt;/span&gt; wrote:&lt;b=3D<br>
&gt; r&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;&lt;blockquote class=3D3D&quot;gmail_quote&quot; style=3D3D&quot;margin=
:0 0 0 .8ex;border-left:1p=3D<br>
&gt; x #ccc solid;padding-left:1ex&quot;&gt;Hi,&lt;br&gt;I have an oasis pr=
oject defining thre=3D<br>
&gt; e inter-dependent libraries A, B and C. B is a syntax extension, and d=
epend=3D<br>
&gt; s on A. C depends on both A and B. I have written an _oasis file for t=
his, =3D<br>
&gt; which works fine if I don&amp;#39;t use the extension in C, but fails =
if I do, =3D<br>
&gt; during ocamldep (ocamldep lacks the appropriate options to understand =
the n=3D<br>
&gt; ew syntax). Has anybody run into this problem ?&lt;br&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;&lt;br&gt;ph.&lt;br&gt;&lt;br&gt;<br>
&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>
&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>
&gt;&lt;/div&gt;&lt;/div&gt;&lt;/blockquote&gt;&lt;/div&gt;&lt;br&gt;<br>
&gt;<br>
&gt; --20cf307abebda8d83d04b0a9e43e--<br>
&gt;<br>
<br>
Cheers,<br>
Sylvain Le Gall<br>
<span class=3D"HOEnZb"><font color=3D"#888888">--<br>
My company: <a href=3D"http://www.ocamlcore.com" target=3D"_blank">http://w=
ww.ocamlcore.com</a><br>
Linkedin: =A0 <a href=3D"http://fr.linkedin.com/in/sylvainlegall" target=3D=
"_blank">http://fr.linkedin.com/in/sylvainlegall</a><br>
Start an OCaml project here: <a href=3D"http://forge.ocamlcore.org" target=
=3D"_blank">http://forge.ocamlcore.org</a><br>
OCaml blogs: =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 <a href=3D"http://planet.ocaml=
core.org" target=3D"_blank">http://planet.ocamlcore.org</a><br>
<br>
<br>
<br>
--<br>
Caml-list mailing list. =A0Subscription management and archives:<br>
<a href=3D"https://sympa-roc.inria.fr/wws/info/caml-list" target=3D"_blank"=
>https://sympa-roc.inria.fr/wws/info/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
<br>
</font></span></blockquote></div><br>

--20cf307f370294b7a204b0be03d8--
