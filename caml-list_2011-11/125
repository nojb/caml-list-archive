Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id pAO6PSSm007377
	for <caml-list@sympa-roc.inria.fr>; Thu, 24 Nov 2011 07:25:28 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ArABANHhzU7RVaC2kGdsb2JhbABEFqdvgmkIIgEBAQEJCQ0HFAQhggsCLAE5Aw0FECMBORIBBQEOAS4ah2uVDYJcCo5JhHmJLgIFCoc/AQODFQSUSo1YPYFLgj8
X-IronPort-AV: E=Sophos;i="4.69,563,1315173600"; 
   d="scan'208";a="132378724"
Received: from mail-gy0-f182.google.com ([209.85.160.182])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-MD5; 24 Nov 2011 07:25:23 +0100
Received: by ghbg20 with SMTP id g20so2152697ghb.27
        for <caml-list@inria.fr>; Wed, 23 Nov 2011 22:25:22 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=mime-version:sender:date:x-google-sender-auth:message-id:subject
         :from:to:content-type:content-transfer-encoding;
        bh=Fh/o/oXbb0u0O8gJoNRX1mBeIdnNVNx1LNRRvzkl2tM=;
        b=E03E+UuoqCtSr4O2Hv6+opWdgybviVkB9TwhY72jM+TtjYatKSw0pI/h1oUZFKm1nE
         0fxLlIaHHJrWwvYR4K7RIN8+Cke9OSbu9ZEgeCtE2qdT5V/MWYalJ7Bodq4DEEsKkgCb
         Trn8YEaAG4D9C+RwFzh65HJ4r4uXtuZm5d9nE=
MIME-Version: 1.0
Received: by 10.236.136.167 with SMTP id w27mr39140552yhi.65.1322115921027;
 Wed, 23 Nov 2011 22:25:21 -0800 (PST)
Sender: stecksoft@gmail.com
Received: by 10.100.253.20 with HTTP; Wed, 23 Nov 2011 22:25:20 -0800 (PST)
Date: Thu, 24 Nov 2011 17:25:20 +1100
X-Google-Sender-Auth: GQhAa2KkxPgyj7hPuxAT5JLfJxA
Message-ID: <CAMSKV5dobggNWAdCCu_DsN99MBkgE7kVP2PuwKKxCydVAgdKPQ@mail.gmail.com>
From: "Paul A. Steckler" <steck@stecksoft.com>
To: caml-list@inria.fr
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
X-MIME-Autoconverted: from quoted-printable to 8bit by walapai.inria.fr id pAO6PSSm007377
Subject: [Caml-list] Issues with OCaml on Windows, MinGW build

For a long while, we've been building software for Windows using the
OCaml MinGW cross-compiler
on Fedora. That tack allows building the software pretty much the same
as it's built for native Linux.
But the OCaml MinGW packages for Linux haven't been updated in some
time, and that project
appears moribund. We're already on to 3.12 in Linux, and the
cross-compiler is stuck at 3.11 (and a
beta version at that).

So I thought I'd try building the software directly on Windows using
the MinGW build. I downloaded
the self-installer from
http://gallium.inria.fr/~protzenk/caml-installer.html (am I the only
one that thinks that
blinking text in Web pages is passé?). I also downloaded MinGW/MSYS
using the installer at
http://sourceforge.net/projects/mingw/files/Installer/mingw-get-inst/mingw-get-inst-20111118/.

Here are some issues I encountered when using this environment:

 - Many of the OCaml executables in the distribution, as well as
flexlib, invoke gcc with the flag
'-mno-cygwin', but the MinGW gcc I installed does not, in fact, accept
that flag. In emacs, I
replaced the offending argument with spaces in the binaries to allow
compilation to proceed (!).

 - You can't login to the MinGW shell to allow remote builds via ssh.
I can get most of the
required functionality by setting environment variables and calling
the MinGW's sh.exe
explicitly, but it would be useful to have instructions on how this should go.

 - When trying to build some standard OCaml packages, like cryptokit
and oUnit, the 'configure'
and 'make' steps fail badly. One reason is that 'configure' invokes an
OCaml program which calls
Sys.command, and on my computer, some of the arguments are filenames
with spaces in them.

I managed to build a few packages, but it was difficult enough that
I'm discouraged from proceeding
further.

Has anyone had success building standard packages using the MinGW distribution?

-- Paul

