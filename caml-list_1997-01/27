Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA11764 for caml-redistribution; Wed, 29 Jan 1997 18:59:28 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA10073 for <caml-list@pauillac.inria.fr>; Wed, 29 Jan 1997 17:34:46 +0100 (MET)
Received: from shiva.jussieu.fr (shiva.jussieu.fr [134.157.0.129]) by nez-perce.inria.fr (8.7.6/8.7.3) with ESMTP id RAA26684 for <caml-list@inria.fr>; Wed, 29 Jan 1997 17:34:44 +0100 (MET)
Received: from ibm3.cicrp.jussieu.fr (ibm3.cicrp.jussieu.fr [134.157.15.3])
          by shiva.jussieu.fr (8.8.5/jtpda-5.2) with SMTP id RAA17539
          ; Wed, 29 Jan 1997 17:34:33 +0100 (MET)
Received: from maya.cicrp.jussieu.fr by ibm3.cicrp.jussieu.fr (AIX 4.1/UCB 5.64/jn930126)
   at Wed, 29 Jan 1997 17:33:11 +0100
Received: from ippc39.cicrp.jussieu.fr (root@ippc39 [134.157.61.39])
          by maya.cicrp.jussieu.fr (8.6.12/jtpda-5.1) with ESMTP id RAA07315
          ; Wed, 29 Jan 1997 17:33:18 +0100
Received: from ippc39 (p6inf533@localhost [127.0.0.1])
          by ippc39.cicrp.jussieu.fr (8.6.12/jtpda-5.1) with SMTP id RAA07611
          ; Wed, 29 Jan 1997 17:33:20 +0100
Message-Id: <32EF7BCE.280C996C@maya.cicrp.jussieu.fr>
Date: Wed, 29 Jan 1997 17:33:18 +0100
From: Valentin Bonnard <p6inf533@maya.cicrp.jussieu.fr>
Reply-To: Valentin Bonnard <bonnardv@pratique.fr>
Organization: None
X-Mailer: Mozilla 3.01Gold (X11; I; Linux 2.0.21 i486)
Mime-Version: 1.0
To: caml-list@inria.fr
Subject: Limitations du filtrage
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis

J'ai essaye' ce programme avec caml-light:

let x = 4;;
let f = fun x -> true
          | _ -> false;;

Je voulais faire une fonction qui teste si son 
argument vaut 4.

A ma grande surprise cela n'a pas fonctioner puisque 
caml-light interprete cela comme:

let f = fun _ -> true
          | _ -> false;;

Cela implique qu'il n'est pas possible de de'finir
de vraies constantes symboliques dans le langage.

De meme

let f = fun 2+2 -> true
          | _   -> false;;

n'est pas accepte'.

On ne peut pas introduire de variable valant 2+2;
comment faire si on ne sait pas calculer a la main
2+2 pour faire un filtrage ? (sans utiliser le
when).

De plus:

let rec compare_list = fun
      (x::_) (x::_)  -> x
    | (_::l) (_::l') -> compare_list l l'
    | _ _ -> raise No_Common_Elt
;;

Produit le message:
The variable x is bound several times in this pattern.

Bien sur on peut utiliser un when mais le filtrage est
sense' etre une solution elegante et je ne considere pas
le fait d'introduire deux noms de variables pour tester
si elle sont egale comme particulierement elegant.
(J'ai fais du Prolog avant de faire du Caml.)

Il n'est pas non plus possible d'utiliser la meme
variable dans un filtrage avec |

   | 1,x::_ | _,[x] -> une_action_complique'e x

n'est pas accepte'.

Il faut repeter

  | 1,x::_ -> une_action_complique'e x
  | 1,x::_ -> une_action_complique'e x

Qui est lourd est long si une_action_complique'e 
est long.

Y a t_il une raison profonde a ces limitations ?

Est-ce que les restrictions minuscules/majuscules
en O'Caml pourraient resoudre le probleme ?

-- 

+-----------------------------------------------+
+ Valentin Bonnard                              +
+ mailto:bonnardv@pratique.fr                   +
+ mailto:p6inf533@ufr-info-p6.cicrp.jussieu.fr  +
+ mailto:p6inf533@maya.cicrp.jussieu.fr         +
+-----------------------------------------------+




