Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA14252 for caml-redistribution; Tue, 21 Jan 1997 11:35:02 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA14146 for <caml-list@pauillac.inria.fr>; Tue, 21 Jan 1997 11:31:18 +0100 (MET)
Received: from lri.lri.fr (root@lri.lri.fr [129.175.15.1]) by nez-perce.inria.fr (8.7.6/8.7.3) with ESMTP id LAA04150 for <caml-list@inria.fr>; Tue, 21 Jan 1997 11:31:16 +0100 (MET)
Received: from sun12.lri.fr (sun12.lri.fr [129.175.12.14])
          by lri.lri.fr (8.8.4/jtpda-5.2) with ESMTP id LAA11442
          ; Tue, 21 Jan 1997 11:31:15 +0100 (MET)
Received: from sun12 by sun12.lri.fr
	(8.8.4/local) with SMTP id LAA02461
	; Tue, 21 Jan 1997 11:31:13 +0100 (MET)
Message-ID: <32E49AF0.4898@lri.fr>
Date: Tue, 21 Jan 1997 11:31:12 +0100
From: Emmanuel Engel <Emmanuel.Engel@lri.fr>
X-Mailer: Mozilla 3.01Gold (X11; I; SunOS 5.5 sun4u)
MIME-Version: 1.0
To: Quercia <querciam@l-carnot1.ac-dijon.fr>
CC: caml-list@inria.fr
Subject: Re: ergonomie du compilateur
References: <32E3E49B.2467CA18@l-carnot1.ac-dijon.fr>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis

Quercia wrote:

> Bonne idee ! En attendant, dans ce genre de situation, je place en
> commentaire (ou je rajoute un failwith "") tous les cas sauf un pour
> examiner le type de chaque cas.
> Primaire mais efficace ...
> 


Cela me semble bien complique. Je suppose que vous avez une idee
du type attendu. Il suffit alors d'indiquer au compilateur le type
attendu et, il va vous montrer ou il infere le mauvais type. Le seul
repproche que l'on puisse faire a cette technique est que la syntaxe
du langage oblige parfois a faire quelques amenagements.

Exemple:

sun12:~/tmp> ocaml
        Objective Caml version 1.03

# let rec f x =       
    if x = 0 then f true else f (x-1);;  
                                 ^^^^        
This expression has type int but is here used with type bool
# let rec (f:int->int) x =
    if x =0 then f true else f (x-1);;
Syntax error
#  let rec (f:int->int) = fun x->
      if x =0 then f true else f (x-1);;
                     ^^^^
This expression has type bool but is here used with type int
# 



-- 

- Emmanuel Engel



