Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA07250; Wed, 2 Oct 2002 15:52:59 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA07736 for caml-list@pauillac.inria.fr; Wed, 2 Oct 2002 15:52:58 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA07115 for <caml-list@pauillac.inria.fr>; Wed, 2 Oct 2002 15:29:20 +0200 (MET DST)
Received: from sarg.ryerson.ca (sarg.ryerson.ca [141.117.18.117])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g92DTBD25813
	for <caml-list@inria.fr>; Wed, 2 Oct 2002 15:29:15 +0200 (MET DST)
Received: from sarg.ryerson.ca (dmason@localhost)
	by sarg.ryerson.ca (8.11.2/8.11.2) with ESMTP id g92DSwh23908;
	Wed, 2 Oct 2002 09:28:59 -0400
Message-Id: <200210021328.g92DSwh23908@sarg.ryerson.ca>
To: Alessandro Baretta <alex@baretta.com>
cc: Ocaml <caml-list@inria.fr>
Subject: Re: [Caml-list] choosing modules at runtime 
In-reply-to: Your message of "Wed, 02 Oct 2002 15:04:48 +0200."
             <3D9AEEF0.4000706@baretta.com> 
User-Agent: EMH/1.10.0 SEMI/1.13.7 (Awazu) CLIME/1.13.6
 (=?ISO-2022-JP?B?GyRCQ2YlTj4xGyhC?=) MULE XEmacs/21.1 (patch 14) (Cuyahoga
 Valley) (alpha-redhat-linux)
MIME-Version: 1.0 (generated by SEMI 1.13.7 - "Awazu")
Content-Type: text/plain; charset=US-ASCII
Date: Wed, 02 Oct 2002 09:28:58 -0400
From: Dave Mason <dmason@sarg.ryerson.ca>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

>>>>> On Wed, 02 Oct 2002 15:04:48 +0200, Alessandro Baretta <alex@baretta.com> said:

> One example: I'd love to write a generic client application capable
> of connecting with a database server for the data and to a remote
> repository of compiled modules implementing the logic of different
> application tasks the customer wishes the system to
> automate. Dynlink already partially solves the problem by allowing
> dynamic linking of cmo's over NFS, but dynamic linking over other
> network transport protocols would be a real pain, requiring explicit
> downloading and temporary storage.

We will very shortly be releasing just such a thing, called InetApp.
It only runs bytecode, but it runs transparently on Windows, Mac, and
Linux.  Hopefully the release will be in the next few weeks.

> And finally, a mixed byte-native runtime is not supported.

This is definitely something I'd like to see.  As I understand it,
there are 2 problems: bytecode vs. native function dispatch, and GC.
Trying to resolve this is on my list of things to do, but it's a long
list, so I'd love to hear that someone else has done it first!

../Dave
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

