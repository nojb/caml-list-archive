Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA10556; Mon, 21 Oct 2002 14:11:45 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA10807 for <caml-list@pauillac.inria.fr>; Mon, 21 Oct 2002 14:11:44 +0200 (MET DST)
Received: from shiva.jussieu.fr (shiva.jussieu.fr [134.157.0.129])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g9LCBhD04361
	for <Caml-list@inria.fr>; Mon, 21 Oct 2002 14:11:43 +0200 (MET DST)
Received: from ibm3.cicrp.jussieu.fr (ibm3.cicrp.jussieu.fr [134.157.15.3])
          by shiva.jussieu.fr (8.12.5/jtpda-5.4) with ESMTP id g9LCArjR036925
          ; Mon, 21 Oct 2002 14:11:07 +0200 (CEST)
Received: from ibm1.cicrp.jussieu.fr (ibm1.cicrp.jussieu.fr [134.157.15.1])
          by ibm3.cicrp.jussieu.fr (8.8.8/jtpda/mob-V8) with ESMTP id OAA43456
          ; Mon, 21 Oct 2002 14:09:21 +0200
Received: from localhost (fernande@localhost)
          by ibm1.cicrp.jussieu.fr (8.8.8/jtpda/mob-v8) with ESMTP id OAA2138220
          ; Mon, 21 Oct 2002 14:09:20 +0200
Date: Mon, 21 Oct 2002 14:09:20 +0200 (DST)
From: Diego Olivier Fernandez Pons <Diego-Olivier.FERNANDEZ-PONS@cicrp.jussieu.fr>
To: "Kontra, Gergely" <kgergely@mlabdial.hit.bme.hu>
cc: Caml-list@inria.fr
Subject: Re: [Caml-list] types & design advices (musical program)
In-Reply-To: <Pine.LNX.4.21.0210210935280.26877-100000@mlabdial.hit.bme.hu>
Message-ID: <Pine.A41.4.44.0210211336150.434394-100000@ibm1.cicrp.jussieu.fr>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Antivirus: scanned by sophie at shiva.jussieu.fr
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 21 Oct 2002, Kontra, Gergely wrote:

> [...]
>
> >If you mean harmonisation, it is a well known problem and has been
> >studied in constraint programming world (since it is a declarative
> >problem).
> [...]
>
> That being the case, Prolog is the right language to implement this
> problem, isn't it? (Well, it doesn't have static type checking...)
>

Pure Prolog won't be of much help, so by Prolog we mean CLP (Prolog
IV, CHIP, etc.)

Prolog has several problems that haven't been yet correctly solved :
- no static type-checking, no type inference
- awfully slow (even compiled Prologs)
- unredable programs if their natural form is not declarative
- no modules (I saw recently a post by Fages in the prolog-list
proposing to develop a Caml-like module system, but for the moment it
hasn't been done), no first-class functions
- very few librairies

In the Lambda Prolog FAQ you can read that Lambda Prolog has :
- polymorphic typing
- modular programming
- abstract data types
- higher order programming

www.cse.psu.edu/~dale/lProlog/faq/faq.html

(There terms do not have always exactly the same meaning that in ML
world)

But Lambda Prolog is not yet a mature language and you still have
serious problems when you need to write non declarative code.

For the moment, the best systems seem to be CLP libraries over an
already existing language, like :
- ILOG Solver (C++)
- Screamer (Lisp)
- FaCiLe (Caml)

The FaCiLe description points out that :

"As FaCiLe is an OCaml library and not "yet another language", the
user benefits from type inference and string typing discipline, high
level of abstraction, modules and objects system, as well as native
code compilation efficiency, garbage collection and replay debugger,
all features of OCaml (among other) that allow to prototype and
experiment quickly : modeling, data processing and interface are
implemented with the same powerful and efficient language"


        Diego Olivier

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

