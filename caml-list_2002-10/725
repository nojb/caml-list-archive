Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA16164; Tue, 29 Oct 2002 22:43:04 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA16237 for <caml-list@pauillac.inria.fr>; Tue, 29 Oct 2002 22:43:04 +0100 (MET)
Received: from grace.speakeasy.org (grace.speakeasy.org [216.254.0.2])
	by nez-perce.inria.fr (8.11.1/8.11.1) with SMTP id g9TLh1D17218
	for <caml-list@inria.fr>; Tue, 29 Oct 2002 22:43:02 +0100 (MET)
Received: (qmail 15300 invoked by uid 36130); 29 Oct 2002 21:42:58 -0000
Received: from localhost (sendmail-bs@127.0.0.1)
  by localhost with SMTP; 29 Oct 2002 21:42:58 -0000
Date: Tue, 29 Oct 2002 13:42:58 -0800 (PST)
From: brogoff@speakeasy.net
To: "caml-list@inria.fr" <caml-list@inria.fr>
Subject: Re: [Caml-list] CamlP4 Revised syntax comment
In-Reply-To: <57FACEC6-EB6A-11D6-A87E-0003938819CE@inria.fr>
Message-ID: <Pine.LNX.4.44.0210291300540.15182-100000@grace.speakeasy.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I agree with Gerard's comments about using the list as a ballot box 
for Revised changes, as well as his other comments. I dismissed backward 
compatibility issues as a negative in my proposal about "=", and that was 
probably too strong. It would have been better if I'd said that this 
constraint is weaker than in classic OCaml. No doubt the constraints about 
syntax changes in classic OCaml are weaker than in an ANSI or ISO standard, 
or even a standard like SML. 

There does need to be a way for Revised users to discuss aspects of the syntax 
in order that the designer (Daniel) gets some feedback. It would be more 
fruitful if contributors could provide reasons for why they favor a particular 
syntactic choice, and if they can list the negatives. One thing that always 
impressed me about some of the Ada designers was that they were quite adept 
at arguing convincingly against their own pet proposals.

I particularly like Daniel's efforts at providing justification for his 
decisions in the tutorial. One thing that's still missing is a "theory of 
what makes a good syntax for a programming language". I think it's obvious 
that such a theory would have to account for the fact that a good shell 
syntax isn't a good syntax for a more general purpose language (there 
are many more categories than just these two!) and that such a theory would 
be largely heuristic, with incompatible rules, like the principles of good 
chess play, but still useful.

-- Brian



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

