Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA03596; Mon, 28 Oct 2002 18:14:39 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA08912 for <caml-list@pauillac.inria.fr>; Mon, 28 Oct 2002 18:14:38 +0100 (MET)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from hod.void.org (pD95489A5.dip.t-dialin.net [217.84.137.165])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g9SHEb515389
	for <caml-list@inria.fr>; Mon, 28 Oct 2002 18:14:37 +0100 (MET)
Received: (from mamous@localhost)
	by hod.void.org (8.9.3/8.9.3) id RAA00978;
	Mon, 28 Oct 2002 17:14:37 GMT
X-Authentication-Warning: hod.void.org: mamous set sender to leypold@informatik.uni-tuebingen.de using -f
From: "M E Leypold @ labnet" <leypold@informatik.uni-tuebingen.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15805.28797.298215.472767@hod.void.org>
Date: Mon, 28 Oct 2002 18:14:37 +0100
To: "Yaron M. Minsky" <yminsky@CS.Cornell.EDU>
Cc: Caml List <caml-list@inria.fr>
Subject: Re: [Caml-list] Strange slowness of input_line on mingw
In-Reply-To: <1035821576.16358.38.camel@dragonfly.localdomain>
References: <32026.209.9.234.140.1035468351.squirrel@dragonfly.localdomain>
	<20021028162614.A2882@pauillac.inria.fr>
	<1035821576.16358.38.camel@dragonfly.localdomain>
X-Mailer: VM 7.00 under Emacs 20.4.1
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk



Yaron M. Minsky writes:

 > So, any other ideas, or suggestion as to how to narrow down the problem?

Rather generic: Some kind of system call tracing (is that possible
with mingw?), to find out, wether the things happening between
userland and kernel are roughly equivalent in both cases. I mean: Same
number of reads, reading chunks around the same size and so on. If
not, then I'd look for a problem/difference in the C-Runtime against
which the OCaml intepreter (or the executable of your programm) are
linked.
 
If things really happen in a different way deeper in userland, the GC
statistics might be different. Try printing that (I personally do not
believe it, but strange things happen now and then). 

Another Idea: Is your file large? If yes, the OCaml program might use
more memory (nothing is freed until th GC hit's the first time). And
another rather wild hypothesis is, that the kernel might be somehow
unwilling to grant that amount of memory and takes its time. But that
would mean that the OCaml program's process is blocked during a kernel
call for some time. Can you take pure user cpu time in windows? If
yes: try that.

All this is rather generic. I'm no expert on how the OCaml system
works internally or interfaces with the host system. Taking this
profiles would be just an attempt to find more differences between
'wc' and the OCaml implementation to have some data for more educated
guesses.

Regards -- Markus
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

