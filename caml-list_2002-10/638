Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id BAA07554; Wed, 23 Oct 2002 01:38:39 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA07540 for <caml-list@pauillac.inria.fr>; Wed, 23 Oct 2002 01:38:36 +0200 (MET DST)
Received: from relay.pair.com (relay1.pair.com [209.68.1.20])
	by nez-perce.inria.fr (8.11.1/8.11.1) with SMTP id g9MNcUD20423
	for <caml-list@inria.fr>; Wed, 23 Oct 2002 01:38:32 +0200 (MET DST)
Received: (qmail 10403 invoked from network); 22 Oct 2002 23:38:28 -0000
Received: from node-d8e9cca2-sfo-onnet.worldcom.com (HELO checkerlap.d6.com) (216.233.204.162)
  by relay1.pair.com with SMTP; 22 Oct 2002 23:38:28 -0000
X-pair-Authenticated: 216.233.204.162
Message-Id: <4.3.2.7.2.20021022163353.0306a5d0@mail.d6.com>
X-Sender: checker@mail.d6.com
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Tue, 22 Oct 2002 16:38:48 -0700
To: Sven Luther <luther@dpt-info.u-strasbg.fr>,
        Xavier Leroy <xavier.leroy@inria.fr>
From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] Error during partial linking
Cc: Yang Shouxun <yangsx@fltrp.com>, caml-list@inria.fr
In-Reply-To: <20021022193136.GB4687@iliana>
References: <20021022190056.A28301@pauillac.inria.fr>
 <20021022104215.A9456@pauillac.inria.fr>
 <200210221333.36858.yangsx@fltrp.com>
 <20021022104215.A9456@pauillac.inria.fr>
 <200210221737.56370.yangsx@fltrp.com>
 <4.3.2.7.2.20021022090136.035ec2f8@mail.d6.com>
 <20021022190056.A28301@pauillac.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


> > names is really essential to the way the OCaml compilers work.  I know
> > it's sometimes an annoyance (all cool names are already taken by the
> > standard lib :-), but you're really going to run into trouble with
> > name conflicts.
>That is what -pack is for, isn't it ?

Sort of, but Xavier's point is that during compiling of the submodules of 
the packed final product, you'll have a list.* in your project, and that's 
bad because it will screw up with the standard library one.  However, this 
will not happen if the standard library is packed, because then there's no 
list.* sitting around to confuse the compiler.

This is the real reason to pack the library, because no only does it 
pollute the namespace (rude), but it also simply doesn't allow you to have 
modules named the same even if you don't use the standard ones if I 
understand Xavier's warning correctly (which is more than rude).

Chris

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

