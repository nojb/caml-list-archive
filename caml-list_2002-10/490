Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA00996; Fri, 18 Oct 2002 12:25:26 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA01129 for <caml-list@pauillac.inria.fr>; Fri, 18 Oct 2002 12:25:25 +0200 (MET DST)
Received: from mel-rto4.wanadoo.fr (smtp-out-4.wanadoo.fr [193.252.19.23])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g9IAPOD05461
	for <caml-list@inria.fr>; Fri, 18 Oct 2002 12:25:24 +0200 (MET DST)
Received: from mel-rta9.wanadoo.fr (193.252.19.69) by mel-rto4.wanadoo.fr (6.5.007)
        id 3DA24D32006C9159 for caml-list@inria.fr; Fri, 18 Oct 2002 12:25:24 +0200
Received: from debian (80.8.83.115) by mel-rta9.wanadoo.fr (6.5.007)
        id 3DA24B29006F8D8C for caml-list@inria.fr; Fri, 18 Oct 2002 12:25:24 +0200
Received: from moi by debian with local (Exim 3.36 #1 (Debian))
	id 182UJv-0001V1-00
	for <caml-list@inria.fr>; Fri, 18 Oct 2002 12:25:31 +0200
To: caml-list@inria.fr
Subject: Re: [Caml-list] Is Caml a fraud ( especially on Windows )?
References: <3daf2a4f.865261093@smtp.interaccess.com>
Mail-Copy-To: never
From: Remi VANICAT <vanicat@labri.u-bordeaux.fr>
Date: Fri, 18 Oct 2002 12:25:31 +0200
In-Reply-To: <3daf2a4f.865261093@smtp.interaccess.com> (olczyk@interaccess.com's
 message of "Fri, 18 Oct 2002 09:35:34 +0000 (GMT)")
Message-ID: <87zntchwmc.dlv@wanadoo.fr>
Lines: 96
User-Agent: Gnus/5.090007 (Oort Gnus v0.07) Emacs/21.2 (i386-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-15
Content-Transfer-Encoding: 8bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

olczyk@interaccess.com (Thaddeus L. Olczyk) writes:

> When I chose to learn OCaml as my "language of the year" it seemed
> like a good choice.
>

[...]

> The second incident involves ocamlc and cameleon. Trying to get
> cameleon to compile ( more on that later ), I discovered that ocamlc
> called cl.exe ( MS C/C++ compiler ). The reason is obvious. ocamlc
> translates ocaml to c and then passes it to the compiler. 

absolutely not. Ocamlc transform program into a bytecode language, and
then use c mainly for foreign interface (that is interface with
library written in C (or other language), and as the system library
are written in C, you may need it...).

By the way, ocaml have two compiler, ocamlc which generate bytecode,
and ocamlopt which generate native optimized code. If you want to go
to a speed near to C, you need ocamlopt...

> This creates
> two things I have difficulties with:
>
> 1) There is from the main caml page a link to a page where the person
>    claims to have benchmarked C vs caml and caml wins. I had
>    several problems with that page, ( The main one, he uses goto's to 
>    optimise his code. The problem is that the optimiser in a C  
>    compiler has a much harder time with goto's present [ they are 
>    nonlocal branches ]. So I have to trust he does a better job at 
>    optimisation than the compiler would do. Yeah sure. )  but 
>    learning that caml generates C code as an intermediate language 
>    makes his statement false. If caml generates C that creates an 
>    executable, then caml code can never run faster than C.

well, As i already say, you are completely wrong one the assumption
that ocaml generate intermediate C code. Then on the www.ocaml.org,
you could see that ocaml (in fact ocamlopt) is second on speed on Doug
Bagley's computer language shootout (between C and C++). I haven't
found the link saying that ocaml is quicker than C.

> 2) After a bit of thought I realised something. If the compiler 
>     generates C code which gets compiled, then odds are that the
>     debugger is a wrapper of gdb. Big problems on Windows. This
>     may indicate that there is no debugger for Windows. Sure enough
>     ocamldebug is not present. There is the source for ocamldebug in
>     cameleon, but who knows if it compiles.

well ocamldebug is part of ocaml, and have nothing to do with gdb, as
it is use to debug bytecode and not native code.

by the way, you may find in the documentation that :
Windows:
  The debugger is available under the Cygwin port of Objective Caml,
  but not under the native Win32 port.

So, it seem logical you don't have it, as you seem to use the native
Win32 port.


>
> The third incident was trying to get cameleon to compile on Windows.
> At the time I tried this, several other people were asking about
> cameleon problems, so one of the creators did something incredibly
> stupid. He created a seperate mailing list for cameleon problems.
> It was incredibly stupid because the two major problems I had were:
> 1) A camlp4 problem, and 2) the path of cl.exe. These were two
> problems where the problem was with caml in general, and it would
> help to have the input of the people on the mailing list. I suspect
> many cameleon problems are like that.

if you had look better to the camleon doc, you would have seen that it
said to work with the cygwin port of ocaml. Cl.exe is not use by the
cygwin port of ocaml (cygwin use gcc), so You have a problem
here... (may be you could make it work with the native ocaml port, but
it is not advertised).

[...]

> So now I have to wonder what other lies there are about caml.

well, lies, lies... You haven't read the documentation, you have made
false assumption, so please, continue to try to learn ocaml 

[...]


> And how can I trust caml people to tell me the truth, when they've
> lied to now?

by reading what is written, and not what you believe is written.
-- 
Rémi Vanicat
vanicat@labri.u-bordeaux.fr
http://dept-info.labri.u-bordeaux.fr/~vanicat
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

