Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA18500; Sun, 13 Oct 2002 11:31:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA18651 for <caml-list@pauillac.inria.fr>; Sun, 13 Oct 2002 11:31:33 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g9D9VV519125;
	Sun, 13 Oct 2002 11:31:31 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA18517; Sun, 13 Oct 2002 11:31:30 +0200 (MET DST)
Date: Sun, 13 Oct 2002 11:31:30 +0200
From: Xavier Leroy <xavier.leroy@inria.fr>
To: Sven LUTHER <luther@dpt-info.u-strasbg.fr>
Cc: John Carr <jfc@MIT.EDU>, Alessandro Baretta <alex@baretta.com>,
        Ocaml <caml-list@inria.fr>
Subject: Re: [Caml-list] Runtime overflow and what to do
Message-ID: <20021013113130.L13771@pauillac.inria.fr>
References: <3DA6A4ED.5050700@baretta.com> <200210121613.MAA27433@psi-phi.mit.edu> <20021012165831.GA4700@iliana>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <20021012165831.GA4700@iliana>; from luther@dpt-info.u-strasbg.fr on Sat, Oct 12, 2002 at 06:58:31PM +0200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> BTW, i compile the sparc debian package on a sparc64 box which
> advertizes as a sparc box. Will i get access to the 64 bit integers in
> this case or not ?

The short answer is: it depends on the C compiler.  Caml integers
correspond to the C "long int" type, with one bit reserved for GC
purposes.  So, if the C compiler maps "long int" to 64-bit integers,
you get 63-bit Caml ints; if it chooses 32-bit integers for "long int",
you get 31-bit Caml ints.  Often, this can be controlled via flags to
the C compiler.

The above is for the bytecode interpreter.  For the native-code
compiler, the current Sparc code emitter mandates 32-bit integers.

- Xavier Leroy
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

