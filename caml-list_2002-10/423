Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA11523; Tue, 15 Oct 2002 23:03:14 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA11612 for <caml-list@pauillac.inria.fr>; Tue, 15 Oct 2002 23:03:13 +0200 (MET DST)
Received: from relay.pair.com (relay1.pair.com [209.68.1.20])
	by concorde.inria.fr (8.11.1/8.11.1) with SMTP id g9FL3C527397
	for <caml-list@inria.fr>; Tue, 15 Oct 2002 23:03:13 +0200 (MET DST)
Received: (qmail 47312 invoked from network); 15 Oct 2002 21:03:11 -0000
Received: from node-d8e9cca2-sfo-onnet.worldcom.com (HELO checkerlap.d6.com) (216.233.204.162)
  by relay1.pair.com with SMTP; 15 Oct 2002 21:03:11 -0000
X-pair-Authenticated: 216.233.204.162
Message-Id: <4.3.2.7.2.20021015135925.033299e8@mail.d6.com>
X-Sender: checker@mail.d6.com
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Tue, 15 Oct 2002 14:03:32 -0700
To: caml-list@inria.fr
From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] monomorphic restriction or typing/scanf bug?
In-Reply-To: <200210151219.OAA28770@pauillac.inria.fr>
References: <200210150329.g9F3TAX26896@plinky.bolt-action.com>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


jacques:
>The standard workaround is to use nameless ones.

Excellent, that's a fine workaround for my case!

pierre:
>Thanks for the interesting example, that could help us to revised the
>semantics of type constraints in Caml, still having in mind that
>global and local definition should always behave the same.

No problem.  That's the part that confused me about it, since I figured any 
type restriction problem (a la the FAQ) would manifest itself both globally 
and locally (except, now that I think about it the "can't generalize ref" 
only happens globally).

Now, if only we could have local exceptions to make those "C break-like 
exception patterns" easier!

Thanks guys,
Chris


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

