Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA26054; Sun, 13 Oct 2002 16:34:39 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA26468 for <caml-list@pauillac.inria.fr>; Sun, 13 Oct 2002 16:34:32 +0200 (MET DST)
Received: from cs.rice.edu (cs.rice.edu [128.42.1.30])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g9DEYV526144
	for <caml-list@inria.fr>; Sun, 13 Oct 2002 16:34:32 +0200 (MET DST)
Received: from localhost (localhost [127.0.0.1])
	by cs.rice.edu (Postfix) with ESMTP id 556AF4AA2E
	for <caml-list@inria.fr>; Sun, 13 Oct 2002 09:34:31 -0500 (CDT)
Received: from frosty.cs.rice.edu (frosty.cs.rice.edu [128.42.1.20])
	by cs.rice.edu (Postfix) with ESMTP id B8FE74A9F3
	for <caml-list@inria.fr>; Sun, 13 Oct 2002 09:34:30 -0500 (CDT)
Received: from localhost (taha@localhost)
	by frosty.cs.rice.edu (8.9.3+Sun/8.9.0) with ESMTP id JAA18672
	for <caml-list@inria.fr>; Sun, 13 Oct 2002 09:34:25 -0500 (CDT)
X-Authentication-Warning: frosty.cs.rice.edu: taha owned process doing -bs
Date: Sun, 13 Oct 2002 09:34:25 -0500 (CDT)
From: Walid Taha <taha@cs.rice.edu>
To: <caml-list@inria.fr>
Subject: [Caml-list] Runtime (native) compilation
Message-ID: <Pine.GSO.4.33.0210130934050.18587-100000@frosty.cs.rice.edu>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: by AMaViS snapshot-20020300
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Hello,

We've been working on a while on building MetaOCaml, which provides three
basic constructs for contructing programs at runtime and compiling them.
This seems to be working well in the context of the bytecode compiler.
For the native code compiler, though, things seems to be more tricky.  In
particular, the native code compiler produces assembly code.  This has to
be assembled, linked, and loaded to memory.  Does any one know of a fast
way to do the last three steps (other than calling the assembler, linker,
and loader).  Also, has anyone dealt with the issue of coordinating the
runtime for the original running image and the newly produced runnable
image (in particular, has anyone dealt with the garbage collection
issues?)

Walid.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

