Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA25450; Sun, 13 Oct 2002 15:25:25 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA25596 for <caml-list@pauillac.inria.fr>; Sun, 13 Oct 2002 15:25:24 +0200 (MET DST)
Received: from fort-point-station.mit.edu (FORT-POINT-STATION.MIT.EDU [18.7.7.76])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g9DDPN524748
	for <caml-list@inria.fr>; Sun, 13 Oct 2002 15:25:23 +0200 (MET DST)
Received: from grand-central-station.mit.edu (GRAND-CENTRAL-STATION.MIT.EDU [18.7.21.82])
	by fort-point-station.mit.edu (8.9.2/8.9.2) with ESMTP id JAA13944;
	Sun, 13 Oct 2002 09:25:22 -0400 (EDT)
Received: from melbourne-city-street.mit.edu (MELBOURNE-CITY-STREET.MIT.EDU [18.7.21.86])
	by grand-central-station.mit.edu (8.9.2/8.9.2) with ESMTP id JAA08965;
	Sun, 13 Oct 2002 09:25:21 -0400 (EDT)
Received: from nerd-xing.mit.edu (NERD-XING.MIT.EDU [18.7.16.74])
	by melbourne-city-street.mit.edu (8.9.2/8.9.2) with ESMTP id JAA00645;
	Sun, 13 Oct 2002 09:25:21 -0400 (EDT)
Received: (from jfc@localhost) by nerd-xing.mit.edu (8.9.3)
	id JAA07471; Sun, 13 Oct 2002 09:25:21 -0400 (EDT)
Message-Id: <200210131325.JAA07471@nerd-xing.mit.edu>
To: Sven LUTHER <luther@dpt-info.u-strasbg.fr>
cc: Ocaml <caml-list@inria.fr>
Subject: Re: [Caml-list] Runtime overflow and what to do
In-Reply-To: Your message of "Sun, 13 Oct 2002 11:52:16 +0200."
             <20021013095216.GA1949@iliana> 
Date: Sun, 13 Oct 2002 09:25:21 -0400
From: John Carr <jfc@MIT.EDU>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


>Would it be much work to build a 64-bit integers target ?

Try http://www.mit.edu/~jfc/ocaml-sparc64.tar.gz
This tar file contains diffs and new code generation
files for 64 bit SPARC.  You will need to apply the
.diff files with patch and move the other files into
the appropriate directories (replacing the existing
files without the "64" suffix), and probably do some
editing of config/Makefile.  I have not tested this
on Linux.  Contact me if you need help.

If there is a lot of interest I can try to package this
in a more immediately useful form.  I stopped work on
the 64 bit code generator before finishing the packaging.

A note of caution: 64 bits is not necessarily better than 32.
Unlike C, OCaml does not allow you to declare a 32 bit object
in 64 bit mode, so memory use will approximately double.
Performance executing out of cache will improve slightly,
or significantly when using floating point, but the increased
cache miss rate may make the program slower overall.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

