Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA10649; Fri, 18 Oct 2002 22:56:09 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA11057 for <caml-list@pauillac.inria.fr>; Fri, 18 Oct 2002 22:56:08 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g9IKu4522844;
	Fri, 18 Oct 2002 22:56:04 +0200 (MET DST)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA10744; Fri, 18 Oct 2002 22:56:04 +0200 (MET DST)
From: Pierre Weis <pierre.weis@inria.fr>
Message-Id: <200210182056.WAA10744@pauillac.inria.fr>
Subject: Re: [Caml-list] Is Caml a fraud ( especially on Windows )?
In-Reply-To: <3db4511e.940732328@smtp.interaccess.com> from "Thaddeus L. Olczyk" at "Oct 18, 102 07:02:44 pm"
To: olczyk@interaccess.com
Date: Fri, 18 Oct 2002 22:56:04 +0200 (MET DST)
Cc: caml-list@inria.fr, pragprog@yahoogroups.com,
        ocaml_beginners@yahoogroups.com
X-Mailer: ELM [version 2.4ME+ PL28 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

[...]
> And yet most people who make jokes like these are just hiding their
> arrogance behind humor.

OK. I am not most people then.

[...]
> Which is exactly the problem. Are you seriously saying that by
> learning Caml, you have learned everything there is to learn
> about programming?

Are you serious at pretending I sais so ?

 Maybe just the important stuff. ( It's clearly
> obvious that you don't know what the idea behind "language of the
> year" is. ) So are Monads and Arrows and ( what does Clean use for
> output? ) are not worth learning? Goo's object model is insignificant?
> BTW what kind of MOP does Caml use? What support does
> it have for AOP?

Monads can be useful but are in no ways superior to Caml's more
traditional constructs (I consider monads as a clever encoding of
language constructs denotational semantics). If you want, you can also
define monads in Caml, but ...

Arrows have the same drawbacks as Backus's FPs: the absence of
variables (variables in the Caml sense of immutable bindings, not in
the C or Ada sense of left values).

Caml is not CLOS; yes Goo is an immature language (not clearly better
than scheme); you gave me the word: AOP seems to me ``insignifiant''.

By the way, what do you know of Caml's object system, modules, fonctors,
lazy features, etc ? What do you know of caml theoretical fundations
and solid implementations choices ?

> >Furthermore, there is no lie in this message, it just told you the
> >truth: the phrase
> >
> >   "Many people that learnt it seriously, just don't want to
> >    give it up and go back to real programming with *p++ or null
> >    pointers ..."
> >
> Or writing "advice"? This response alone shows the kind of tunnel
> vision I mentioned.

This is not a response: I was just stating a fact! How a fact could be
a tunnel vision ?

> BTW the people who I've met who hate *p++ and null pointers are
> people who do use VB and *think* they are programmers. They then
> go on to C++ and create huge messes by missusing *p++ and null
> pointers. They then blame thed language instead of admitting their own
> incompetence.

You are very right: a lot of people ``blame the language instead of
admitting their own incompetence.''

[...]
> Maybe, maybe not. But when I see the emporer naked, I know he's naked.

I'm not sure you really saw the emperor!

[...]
> Those who know do. Those who don't teach.

There may be people that know, do, and teach. That's our way at INRIA,
believe me.

> There is a big difference between "knowing" a language
> snd having written code in it. Especially real world applications.

How many compilers have you ever written ?

[...]
> Perhaps like Joaquin Cuenca Abela you are not familiar with the power
> of debuggers in other languages.

Perhaps you don't know me and never spent days with me debugging lisp,
Pascal, C, or assembly code for various processors ...

If you ever come to write some Caml code and become familiar with the
language, you will certainly discover how powerful is the compiler
(and the toplevel interactive system) as a debugger. In fact, the
language itself helps you to debug your programs, since the constructs
imply automatic sanity checks that find bugs when they statically fail.

> As for language features, well that's the point of learning a
> language. For now  I have to go by what others say. And from what you
> say I feel that I have to take the "power of OCaml" with a grain of
> salt.

Feel free to feel as you like.

The power of Caml is not a feeling or a dream.

Give it a try, and you will see!

Pierre Weis

INRIA, Projet Cristal, Pierre.Weis@inria.fr, http://pauillac.inria.fr/~weis/


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

