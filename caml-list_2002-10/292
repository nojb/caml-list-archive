Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA16244; Fri, 11 Oct 2002 22:17:43 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA15950 for <caml-list@pauillac.inria.fr>; Fri, 11 Oct 2002 22:17:43 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g9BKHf509425;
	Fri, 11 Oct 2002 22:17:41 +0200 (MET DST)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA16134; Fri, 11 Oct 2002 22:17:40 +0200 (MET DST)
From: Pierre Weis <pierre.weis@inria.fr>
Message-Id: <200210112017.WAA16134@pauillac.inria.fr>
Subject: Re: [Caml-list] Num library
In-Reply-To: <3DA69959.1E2480BB@tni-valiosys.com> from Sebastien Furic at "Oct 11, 102 11:26:49 am"
To: sebastien.furic@tni-valiosys.com (Sebastien Furic)
Date: Fri, 11 Oct 2002 22:17:40 +0200 (MET DST)
Cc: pierre.weis@inria.fr, frisch@clipper.ens.fr, caml-list@inria.fr
X-Mailer: ELM [version 2.4ME+ PL28 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

[...]
>  My intention was not to begin a flame war.

Nor is it mine. I'm sorry to react like this, but this kind of
(seamingly not well argumented) affirmation can hurt people that
worked for years on this kind of topics.

> Dolphin's numerical algorithms are written in assembly language, like
> all time-critical parts of the interpreter.

Is Dolphin's interpreter available on a wide variety of architectures?

> Unfortunately, Dolphin's team just announced "new faster algorithms"
> (and didn't give information about the algorithms they use).
>  Of course, I tried to tune my O'Caml code but I couldn't beat Dolphin's
> implementation (despite the use of Nat etc.).

I would be glad to see your code then. Especially the nat implementation.

> Dolphin's bignums are natively supported by the language and there
> is no way to hack them. This is however very convenient for
> occasional users like me because I don't have many time to "hack"
> numerical packages. Please note that I'm perfectly happy with
> O'Caml though.

Yes, native support for bignums is a win (as I mentioned earlier, it is
very convenient to input numbers)

Best regards,

Pierre Weis

INRIA, Projet Cristal, Pierre.Weis@inria.fr, http://pauillac.inria.fr/~weis/


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

