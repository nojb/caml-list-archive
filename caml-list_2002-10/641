Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA14724; Wed, 23 Oct 2002 08:47:52 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA14179 for <caml-list@pauillac.inria.fr>; Wed, 23 Oct 2002 08:47:52 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from athlon.baretta.com ([62.211.4.120])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g9N6lo517797
	for <caml-list@inria.fr>; Wed, 23 Oct 2002 08:47:51 +0200 (MET DST)
Received: from baretta.com (localhost.localdomain [127.0.0.1])
	by athlon.baretta.com (Postfix) with ESMTP
	id 4F1AE27250; Wed, 23 Oct 2002 08:58:47 +0200 (CEST)
Message-ID: <3DB648A7.403@baretta.com>
Date: Wed, 23 Oct 2002 08:58:47 +0200
From: Alessandro Baretta <alex@baretta.com>
Organization: Baretta srl -- www.baretta.com
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.1) Gecko/20020826
X-Accept-Language: it, en
MIME-Version: 1.0
To: Chris Hecker <checker@d6.com>, Ocaml <caml-list@inria.fr>
Subject: Re: [Caml-list] ocamldebug and windows
References: <r8ejkhao.fsf@mail.ru> <hefgkr7v.fsf@mail.ru> <20021021152135.E12164@pauillac.inria.fr> <r8ejkhao.fsf@mail.ru> <4.3.2.7.2.20021022083244.035ebfb8@mail.d6.com>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk



Chris Hecker wrote:
> 
> Is all of this really worth it when compared to having a cross-platform 
> "normal" debugger, especially if that debugger architecture could work 
> on native code as well?  In other words, it seems like we're giving up a 
> lot for this time-traveling feature.  I've played with it a bit, and it 
> seems fine, but the fact that it's central to the debugger architecture 
> makes some other things harder (like porting it :).

I think time travel is one of the bigger bonuses of working 
with O'Caml. I understand the need for a simple debugger 
that works in all situations, but time travel is something 
O'Caml cannot give up.

  I was also surprised that the debugger couldn't eval and 
link in
> arbitrary ocaml code, especially since a) the debugger works only on 
> bytecode, and b) caml already has a toplevel.

This surprises me, too. Often, I'd like to run functions 
manually when at a checkpoint, for the sake of printing 
complex data structures. I would be content to be able to 
invoke functions predefined in the executable being debugged.

Alex

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

