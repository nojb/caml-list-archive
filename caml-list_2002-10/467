Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA13017; Thu, 17 Oct 2002 22:22:37 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA12698 for <caml-list@pauillac.inria.fr>; Thu, 17 Oct 2002 22:22:37 +0200 (MET DST)
Received: from relay.pair.com (relay1.pair.com [209.68.1.20])
	by concorde.inria.fr (8.11.1/8.11.1) with SMTP id g9HKMa521142
	for <Caml-list@inria.fr>; Thu, 17 Oct 2002 22:22:36 +0200 (MET DST)
Received: (qmail 10257 invoked from network); 17 Oct 2002 20:22:34 -0000
Received: from node-d8e9cca2-sfo-onnet.worldcom.com (HELO checkerlap.d6.com) (216.233.204.162)
  by relay1.pair.com with SMTP; 17 Oct 2002 20:22:34 -0000
X-pair-Authenticated: 216.233.204.162
Message-Id: <4.3.2.7.2.20021017130323.02dbb068@mail.d6.com>
X-Sender: checker@mail.d6.com
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Thu, 17 Oct 2002 13:22:22 -0700
To: Ocaml Mailing List <Caml-list@inria.fr>
From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] Re: Camlp4 optimizations (was: productivity 
  improvement)
In-Reply-To: <Pine.LNX.4.33.0210171352380.1981-100000@eagle.ancor.com>
References: <4.3.2.7.2.20021017112600.0318b410@mail.d6.com>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


>how important is operator overloading?

I'm amazed that people who are interested in high level languages are 
asking these questions (not to attack you personally, just the overall 
attitude)!

I replied to most of this issue in my previous post, but come on people, 
the job of a language is to make the programmer's life easier.  Software 
quality is horrible, for the most part, and we don't even get this horrible 
software on time.  Why?  Hint:  it's not because correct programs are 
running too slow and developers are spending that time optimizing.  It's 
because complex software is hard to write correctly.  The language should 
help with this.  Ocaml helps in a lot of ways with this problem, but when 
writing numerical code it doesn't help very much, or as much as it 
could.  That is what I'm complaining about.

If I could write matlab-style syntax in ocaml, hundreds of lines of code in 
my game would just disappear.  That would be wonderful!  It would mean it 
was easier and faster to write, to debug, and that when I realize I didn't 
actually want to do a certain operation, I could change it quickly.  When I 
finally figure out what I want to do and how I want to do it, I'll optimize it.

And besides, the entire idea behind a garbage collector is that it's fast 
at handling tons of small allocations!  I use tons of matrix -> matrix -> 
matrix operations (like add, mult, etc. in and attempt to make more 
readable code) and the performance is perfectly acceptable for 
development.  I will optimize things later, but LATER, and only if I need to.

Frustrated,
Chris


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

