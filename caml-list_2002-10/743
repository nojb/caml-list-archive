Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA07051; Thu, 31 Oct 2002 17:59:08 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA06625 for <caml-list@pauillac.inria.fr>; Thu, 31 Oct 2002 17:59:07 +0100 (MET)
Received: from domestos.yandex.ru (domestos.yandex.ru [213.180.193.14])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g9VGx6513461
	for <caml-list@inria.fr>; Thu, 31 Oct 2002 17:59:06 +0100 (MET)
Received: from line13.oris.ru ([194.84.65.172]:20996 "EHLO ekpc" ident:
	"NO-IDENT-SERVICE[2]" whoson: "-unregistered-" smtp-auth: "ekot"
	TLS-CIPHER: <none> TLS-PEER: <none>) by mail.yandex.ru with ESMTP
	id <S986733AbSJaQ6w>; Thu, 31 Oct 2002 19:58:52 +0300
Date: 	Thu, 31 Oct 2002 21:58:02 +0500
From: Eugene Kotlyarov <ekot@narod.ru>
X-Mailer: The Bat! (v1.61) Personal
Reply-To: Eugene Kotlyarov <ekot@narod.ru>
Organization: protek36
X-Priority: 3 (Normal)
Message-ID: <13651974775.20021031215802@narod.ru>
To: caml-list@inria.fr
Subject: [Caml-list] Timeout function
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello.

  I am trying to compile ftp client from cdk under Windows and there is a
  problem in the following function:

(*d [timeout time fun arg] applies [fun] to [arg], and returns the
   result. [raise Timeout] if there is no result after [time] seconds.
*)

  What is the best way of implementing such function under Windows?
  
(* functions to deal with timouts *)
exception Timeout

let notimer ={ Unix.it_interval=0.0 ; Unix.it_value = 0.0 }

let handler = Sys.Signal_handle
    (fun _ ->
      Sys.set_signal Sys.sigalrm Sys.Signal_default ;
      ignore (Unix.setitimer Unix.ITIMER_REAL notimer);
      raise Timeout)

let timeout time f x =
  Sys.set_signal Sys.sigalrm handler;
  let timer = { Unix.it_interval= 0. ; Unix.it_value = time } in
  ignore (Unix.setitimer Unix.ITIMER_REAL timer);
  let res =
    try
      (f x)
    with
    | e ->
        ignore (Unix.setitimer Unix.ITIMER_REAL notimer);
        raise e
  in
  ignore (Unix.setitimer Unix.ITIMER_REAL notimer);
  res

  

-- 
Best regards,
 Eugene                          mailto:ekot@narod.ru

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

