Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA10958; Wed, 9 Oct 2002 22:56:39 +0200 (MET DST)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA10984 for caml-list@pauillac.inria.fr; Wed, 9 Oct 2002 22:56:38 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA32395 for <caml-list@pauillac.inria.fr>; Wed, 9 Oct 2002 16:36:50 +0200 (MET DST)
Received: from porsta.cs.Helsinki.FI (porsta.cs.helsinki.fi [128.214.48.124])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g99EanD29701
	for <caml-list@inria.fr>; Wed, 9 Oct 2002 16:36:50 +0200 (MET DST)
Received: from alkokrunni.cs.Helsinki.FI (sslwrap@localhost [127.0.0.1])
	by porsta.cs.Helsinki.FI (8.11.6/8.11.6) with ESMTP id g99Eako14123
	for <caml-list@inria.fr>; Wed, 9 Oct 2002 17:36:49 +0300
Received: from localhost (lealanko@localhost)
	by alkokrunni.cs.Helsinki.FI (8.11.6/8.11.2) with SMTP id g99Eahr21956
	for <caml-list@inria.fr>; Wed, 9 Oct 2002 17:36:44 +0300
X-Authentication-Warning: alkokrunni.cs.Helsinki.FI: lealanko owned process doing -bs
Received: from la by la.iki.fi with local (Exim 3.35 #1 (Debian))
	id 17z0JG-0000Fx-00
	for <caml-list@inria.fr>; Tue, 08 Oct 2002 22:46:26 +0300
Date: Tue, 8 Oct 2002 22:46:25 +0300
From: Lauri Alanko <la@iki.fi>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Oo.id
Message-ID: <20021008194625.GA887@la.iki.fi>
References: <44C91AD4-D732-11D6-AD63-000393BA7EBA@wetware.com> <20021004165824H.garrigue@kurims.kyoto-u.ac.jp>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20021004165824H.garrigue@kurims.kyoto-u.ac.jp>
User-Agent: Mutt/1.4i
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, Oct 04, 2002 at 04:58:24PM +0900, Jacques Garrigue wrote:
> Using the address would be ok for equality, but not for compare, as
> the GC may move things around: the result of compare might change.

Why does there need to be an ordering for objects in the first place?
This seems about as sensible as ordering closures (ie. not very).

Alternatively, if the stability of addresses is important, couldn't
objects be allocated in a special heap where GC would be non-copying?


Lauri Alanko
la@iki.fi
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

