Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA11884; Sun, 20 Oct 2002 14:52:05 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA11690 for <caml-list@pauillac.inria.fr>; Sun, 20 Oct 2002 14:52:04 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from FUSMTA03-LRS (mta03.btfusion.com [62.172.195.12])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g9KCps500918
	for <caml-list@inria.fr>; Sun, 20 Oct 2002 14:51:58 +0200 (MET DST)
Received: from [217.39.212.1] (helo=7p8420j)
	by FUSMTA03-LRS with smtp (Exim 4.05)
	id 183FYA-0006gq-00; Sun, 20 Oct 2002 13:51:22 +0100
Message-Id: <4.1.20021019205725.01442878@pop3.btclick.com>
Message-Id: <4.1.20021019205725.01442878@pop3.btclick.com>
X-Sender: daveb@pophost.tardis.ed.ac.uk
X-Mailer: QUALCOMM Windows Eudora Pro Version 4.1 
Date: Sun, 20 Oct 2002 13:46:47 +0100
To: Eray Ozkural <erayo@cs.bilkent.edu.tr>, Dave Berry <daveb@tardis.ed.ac.uk>,
        Markus Mottl <markus@oefai.at>, Oleg <oleg_inconnu@myrealbox.com>
From: Dave Berry <daveb@tardis.ed.ac.uk>
Subject: Re: [Caml-list] Re: productivity improvement
Cc: OCaml <caml-list@inria.fr>
In-Reply-To: <200210180548.10452.erayo@cs.bilkent.edu.tr>
References: <4.1.20021017221827.0091c6f0@pop3.btclick.com>
 <4.1.20020714213245.00a37f00@pop3.btclick.com>
 <4.1.20021017221827.0091c6f0@pop3.btclick.com>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Eray, I think you misunderstand where I'm coming from.  I would love to see
more people using ML instead of C++.  I was part of a team that produced
one of the commercial SML compilers. All three commercial SML compilers
have failed, partly because it's very difficult to persuade people to
switch.  People aren't stupid, and they won't switch to a new language
without some compelling evidence that it gives an advantage.  I believe
that a 2:1 or 3:1 gain in a meaningful measure -- the best measure being
overall cost -- would be sufficient to persuade a reasonable number of
people to switch.  But, we need concrete evidence.  This is hard to obtain,
because few people have the time to write a project twice, using different
languages.  What's more, when studies of this sort have been done,
comparing more conventional languages, the results have shown that the
choice of language makes little difference to the overall cost of the
project.  So there's a widespread suspicion of claims that language X or Y
increases productivity by significant amounts.

In this context, figures plucked from the air are, at best, not helpful; I
think they're actually counter-productive.  To an extent, the bigger the
claims, the more counter-productive they are, because they're easier to
challenge.  I would rather have one verifiable claim of a 3:1 productivity
improvement -- which is a pretty big win -- than a hundred unverifiable
claims of 10:1, 20:1 or even 40:1 gains.  (Given earlier postings on this
thread, it's worth reiterating that the type of program is also vital --
e.g. figures for a one-week project may not scale to a ten-year project).

This thread gave one very useful example: the rewrite of Ensemble.  IIRC,
this gave a 7:1 gain in LoC over the original C version.  Even if one
allows for the benefit of writing the program a second time, and for the
fact that LoC doesn't necessarily correlate directly to development time,
this is still an impressive figure.

Way back when this thread started, I quoted another example: Andrew Appel's
Tiger compiler.  This has three versions, one in C, one in Java, and one in
SML.  The SML is shorter, but not to such a great extent.  (I need to
recheck the actual figures).

Dave.



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

