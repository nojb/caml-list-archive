Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA00021; Tue, 18 Mar 2003 21:29:45 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA32574 for <caml-list@pauillac.inria.fr>; Tue, 18 Mar 2003 21:29:43 +0100 (MET)
Received: from relay.pair.com (relay.pair.com [209.68.1.20])
	by concorde.inria.fr (8.11.1/8.11.1) with SMTP id h2IKTgf03761
	for <caml-list@inria.fr>; Tue, 18 Mar 2003 21:29:43 +0100 (MET)
Received: (qmail 27239 invoked from network); 18 Mar 2003 20:29:41 -0000
Received: from arda.pair.com (HELO compaqreview.d6.com) (209.68.1.133)
  by relay.pair.com with SMTP; 18 Mar 2003 20:29:41 -0000
X-pair-Authenticated: 209.68.1.133
Message-Id: <4.3.2.7.2.20030318122106.0425ce80@localhost>
X-Sender: checker@localhost
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Tue, 18 Mar 2003 12:25:26 -0800
To: oliver@first.in-berlin.de (Oliver Bandel), caml-list@inria.fr
From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] MPEG-Lib for OCaml?
In-Reply-To: <20030318092639.GA598@first.in-berlin.de>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
X-Spam: no; 0.00; hecker:01 checker:01 caml-list:01 libs:01 crappy:01 chris:01 bool:01 bigarray:01 ocaml:01 int:01 external:03 unit:03 string:03 interface:03 library:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


>I only have found very general papers on mpeg-video
>processing, but no file-format-specification.
>a) Are there any libs for OCaml, reading in video-data?
>b) ( The off-topic-part of this mail ;-) )
>    Are there any papers with a detailed description
>    of the file format?

I have a really crappy hookup to the Berkeley MPEG library that you're 
welcome to use.  It doesn't support sound, or fast-forward, or 
anything.  But, it'll give you a bitmap of every frame, so if you just need 
that then it works okay.  The, uh, "interface" is below (Image.t is just a 
bigarray wrapper you're welcome to have as well).

Chris

(*
  * mpeg.ml - a really cheesy interface to the really crappy berkeley mpeg 
library
  * 2003/2/10 checker
  * @todo this code is not shippable, the mpeg library is totally flakey 
and unstable
  *
  *)


type t

external create : string -> t = "mpeg_create"
external get_size : t -> int * int = "mpeg_get_size"
external get_next_frame : t -> Image.t -> bool = "mpeg_get_next_frame"
external is_destroyed : t -> bool = "mpeg_is_destroyed"
external destroy : t -> unit = "mpeg_destroy"



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

