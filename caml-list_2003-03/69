Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA18346; Mon, 10 Mar 2003 17:08:06 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA18773 for <caml-list@pauillac.inria.fr>; Mon, 10 Mar 2003 17:08:05 +0100 (MET)
Received: from hirsch.in-berlin.de (hirsch.in-berlin.de [192.109.42.6])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h2AG84X07027
	for <caml-list@inria.fr>; Mon, 10 Mar 2003 17:08:04 +0100 (MET)
Received: from hirsch.in-berlin.de (localhost [127.0.0.1])
	by hirsch.in-berlin.de (8.12.8/8.12.8/Debian-2) with ESMTP id h2AG835w023326
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NOT)
	for <caml-list@inria.fr>; Mon, 10 Mar 2003 17:08:04 +0100
Received: from first.UUCP (uucp@localhost)
	by hirsch.in-berlin.de (8.12.8/8.12.8/Debian-2) with UUCP id h2AG835Q023324
	for inria.fr!caml-list; Mon, 10 Mar 2003 17:08:03 +0100
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: inria.fr!caml-list
Received: by first.in-berlin.de
	via sendmail from stdin
	id <m18sPod-00057qC@first.in-berlin.de> (Debian Smail3.2.0.114)
	Mon, 10 Mar 2003 17:07:51 +0100 (CET) 
From: oliver@first.in-berlin.de (Oliver Bandel)
Date: Mon, 10 Mar 2003 17:07:51 +0100
To: caml-list@inria.fr
Subject: [Caml-list] Hashtbl or Map?
Message-ID: <20030310160750.GA654@first.in-berlin.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
User-Agent: Mutt/1.3.28i
X-Spam: no; 0.00; oliver:01 in-berlin:01 bandel:01 hashtbl:01 side-effect:01 functors:01 modules:02 interface:03 differences:04 seems:05 functional:06 uses:06 correctly:08 approach:08 tia:10 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello,

where is the difference between the modules
Hashtbl and Map?

Do I understand it correctly, that both are used for the
same purpose, but Mao is side-effect free, wheras Hashtbl
uses in-place-modufication and is not a functional approach
(and therefore may cause problems sometimes)?

And the interface seems to be different.
(I have not explored functors in detail, so can you
please show me the major differences in this approach?!)


Are there other differences?
Which?

  
TIA,
  Oliver

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

