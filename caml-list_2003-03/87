Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA30743; Tue, 11 Mar 2003 22:39:49 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA30881 for <caml-list@pauillac.inria.fr>; Tue, 11 Mar 2003 22:39:47 +0100 (MET)
Received: from epexch01.qlogic.org ([63.170.40.3])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h2BLdkf17675
	for <caml-list@inria.fr>; Tue, 11 Mar 2003 22:39:46 +0100 (MET)
Received: from epmailtmp.qlogic.org ([10.20.33.254]) by epexch01.qlogic.org with Microsoft SMTPSVC(5.0.2195.5329);
	 Tue, 11 Mar 2003 15:41:17 -0600
Received: from [10.20.33.146] ([10.20.33.146]) by epmailtmp.qlogic.org with Microsoft SMTPSVC(5.0.2195.4905);
	 Tue, 11 Mar 2003 15:41:17 -0600
Date: Tue, 11 Mar 2003 15:50:13 -0600 (CST)
From: Brian Hurt <brian.hurt@qlogic.com>
X-X-Sender:  <brianh@eagle.ancor.com>
Reply-To: Brian Hurt <brian.hurt@qlogic.com>
To: Ocaml Mailing List <caml-list@inria.fr>
Subject: [Caml-list] Checked exceptions and type inference
Message-ID: <Pine.LNX.4.33.0303111538120.2164-100000@eagle.ancor.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-OriginalArrivalTime: 11 Mar 2003 21:41:17.0773 (UTC) FILETIME=[F2A6AFD0:01C2E816]
X-Spam: no; 0.00; qlogic:01 inference:01 ltu:99 unexpected:01 ocaml:01 surprising:01 exceptions:04 seems:05 derived:05 uses:06 quite:06 brian:06 type:07 java:07 implementing:07 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Reading LtU I came across this article:
http://www.octopull.demon.co.uk/java/ExceptionalJava.html

Java treats checked exceptions as part of the type signature of the 
function.  As such, it seems to me that as such, type inference would work 
to propogate most of this information in a more convient way.

Checked exceptions actually have their uses, for "errors" which are not 
very exceptional.  Out of memory is highly unexpected.  End of file isn't 
quite as surprising.  Not_found is another that shouldn't be that 
surprising- although that leads to a different religous war.

Is there any research on using checked exceptions in an ML derived 
language?  Any plans/opinions on implementing checked exceptions in Ocaml?

Brian


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

