Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id BAA04442; Tue, 18 Mar 2003 01:37:36 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA02387 for <caml-list@pauillac.inria.fr>; Tue, 18 Mar 2003 01:37:35 +0100 (MET)
Received: from geranium.noc.ucla.edu (geranium.noc.ucla.edu [169.232.48.11])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h2I0bSf04510
	for <caml-list@inria.fr>; Tue, 18 Mar 2003 01:37:32 +0100 (MET)
Received: from orchid.noc.ucla.edu (orchid.noc.ucla.edu [169.232.48.12])
	by geranium.noc.ucla.edu (8.12.8/8.12.8) with ESMTP id h2HM2Zh5009521;
	Mon, 17 Mar 2003 14:02:35 -0800
Received: from humnet.ucla.edu (vp191026.reshsg.uci.edu [128.195.191.26])
	(authenticated bits=0)
	by orchid.noc.ucla.edu (8.12.8/8.12.8) with ESMTP id h2HM262T012045;
	Mon, 17 Mar 2003 14:02:22 -0800
Message-ID: <3E7645B1.2040306@humnet.ucla.edu>
Date: Mon, 17 Mar 2003 14:01:21 -0800
From: "Daniel M. Albro" <albro@humnet.ucla.edu>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.3) Gecko/20030316 Debian/1.3-1
X-Accept-Language: en
MIME-Version: 1.0
To: Oliver Bandel <oliver@first.in-berlin.de>
CC: caml-list@inria.fr
Subject: Re: [Caml-list] Loop times
References: <1047592439.1866.10.camel@giynz> <15989.46038.984076.710373@lachesis.inria.fr> <3E761B0F.8050303@humnet.ucla.edu> <20030317214841.GA467@first.in-berlin.de>
In-Reply-To: <20030317214841.GA467@first.in-berlin.de>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Scanned-By: MIMEDefang 2.25 / SpamAssassin 2.43 / mail.ucla.edu
X-Probable-Spam: no
X-Spam-Hits: -2.8
X-Spam: no; 0.00; ucla:99 caml-list:01 oliver:01 bandel:01 exception:02 ciao:02 wrote:03 recursive:03 tail:03 variable:03 versa:03 imperative:04 0800,:04 meant:05 functional:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


	Sorry, I just meant that the version that puts the
exception into a variable outside of the loop is a win over
the one that creates the exception inside the loop.  The
fastest loop routine overall was the tail recursive loop,
i.e. the functional/recursive.  However, this latest
imperative version has timing that's very close -- the
imperative version that pre-builds the exception takes
just over 28 seconds, and the tail-recursive version
takes just under 27 seconds.

					- Dan


Oliver Bandel wrote:
> On Mon, Mar 17, 2003 at 10:59:27AM -0800, Daniel M. Albro wrote:
> [...]
> 
>>so it is definitely a win.
> 
> 
> What is a win?
> 
> So much different versions, spread over several mails...
> 
> Is functional/recursive a win over imperative?
> Or vice versa? Or what?
> 
> Ciao,
>    Oliver
> 


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

