Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA02345; Thu, 13 Mar 2003 00:18:07 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA02825 for <caml-list@pauillac.inria.fr>; Thu, 13 Mar 2003 00:18:06 +0100 (MET)
Received: from smtp.hispeed.ch (isp247n.hispeed.ch [62.2.95.247])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h2CNI5X10328
	for <caml-list@inria.fr>; Thu, 13 Mar 2003 00:18:05 +0100 (MET)
Received: from epfl.ch (dialin-client-62-2-141-201.hispeed.ch [62.2.141.201])
	by smtp.hispeed.ch (8.12.6/8.12.6/tornado-1.0) with ESMTP id h2CNHwp9002094;
	Thu, 13 Mar 2003 00:17:59 +0100
Date: Thu, 13 Mar 2003 00:18:48 +0100
Subject: Re: [Caml-list] OCaml popularity
Content-Type: text/plain; charset=US-ASCII; format=flowed
Mime-Version: 1.0 (Apple Message framework v551)
Cc: caml-list@inria.fr
To: "Richard W.M. Jones" <rich@annexia.org>
From: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@epfl.ch>
In-Reply-To: <20030312171242.GA11435@redhat.com>
Message-Id: <FAC1BF25-54E0-11D7-BBD1-000393DBC266@epfl.ch>
Content-Transfer-Encoding: 7bit
X-Mailer: Apple Mail (2.551)
X-Spam: no; 0.00; caml-list:01 disadvantage:01 pointers:01 newbies:01 pcre:01 objective-c:01 dummy:01 ocaml:01 toplevel:01 lib:01 promotion:97 thread:02 complex:03 interpreter:03 interface:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


> Someone else actually said it well on this list a while back. There
> is no "Programming Perl"-equivalent for OCaml.

Books have both the advantage and disadvantage to end in a (more or 
less) well structured exposition of whole topic.

Very often what is needed is a way to figure out how you can do this or 
that in the language along with relevant pointers in the documentation 
graph. This is why I think that a bunch of well edited online tutorials 
would do a better job; assuming that the reader has a minimal knowledge 
of the language, something like the first two chapter of the ocaml 
reference manual with a little more details.

Besides, tutorials can show good programming style, features of the 
language, how to set up things (e.g. make a new toplevel), give 
background for newbies (e.g. Pcre is a good alternative to Str), etc. I 
guess the top level would make that kind of tutorials very enjoyable, 
both to write and read.

 From simple things --- not too long --- to more complex ones with a 
very well defined and pleasing goal.

 > Using the socket interface. Show how to build your dummy little 
server.
 > Using regular expressions (pcre) and i/o. Show how to install the lib 
and implement a grep.
 > Accessing a database.
 > Using the thread library.
...

And well,
 > Show how to write a lambda calculus interpreter.

Just little things to help you start playing.

Daniel

P.S. See for example the tutorials available on www.oreilly.com (e.g. 
the ones on cocoa / objective-c programming). Of course it's about book 
promotion there, but some tutorial are not bad.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

