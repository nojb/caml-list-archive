Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA12453; Tue, 25 Mar 2003 16:46:40 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA12653 for <caml-list@pauillac.inria.fr>; Tue, 25 Mar 2003 16:46:39 +0100 (MET)
Received: from grisu.bik-gmbh.de (grisu.bik-gmbh.de [217.110.154.194])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h2PFkcf19491
	for <caml-list@inria.fr>; Tue, 25 Mar 2003 16:46:38 +0100 (MET)
Received: from bik-gmbh.de (prony.bik-gmbh.de [194.233.237.133])
	by grisu.bik-gmbh.de (8.12.6/8.12.6) with ESMTP id h2PFkbDo056293;
	Tue, 25 Mar 2003 16:46:37 +0100 (CET)
	(envelope-from hars@bik-gmbh.de)
Message-ID: <3E8079D8.5000507@bik-gmbh.de>
Date: Tue, 25 Mar 2003 16:46:32 +0100
From: Florian Hars <hars@bik-gmbh.de>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; de-AT; rv:1.3) Gecko/20030312
X-Accept-Language: en-us, de-de, en
MIME-Version: 1.0
To: Sebastien Briais <sebastien.briais@epfl.ch>
CC: caml-list@inria.fr
Subject: Re: [Caml-list] About polymorphic methods and recursive classes
References: <3E7C4784.6000901@epfl.ch> <20030324094415.6679de19.Damien.Pous@ens-lyon.fr> <3E7F457A.80006@epfl.ch> <20030325101545S.garrigue@kurims.kyoto-u.ac.jp> <3E80547E.2010201@epfl.ch>
In-Reply-To: <3E80547E.2010201@epfl.ch>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam-Status: No, hits=-8.0 required=5.0
	tests=IN_REP_TO,QUOTED_EMAIL_TEXT,REFERENCES,SPAM_PHRASE_00_01,
	      SUBJECT_IS_LIST,USER_AGENT,USER_AGENT_MOZILLA_UA,
	      X_ACCEPT_LANG
	version=2.41
X-Spam: no; 0.00; florian:01 hars:01 bik-gmbh:01 caml-list:01 generic:01 inference:01 unsound:01 polymorphic:01 classes:03 wrote:03 recursive:03 types:03 sebastien:03 upenn:06 definition:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Sebastien Briais wrote:
> But what is the reason of this limitation ? I do not see the reasons 
> since for example, in Generic Java, such a definition is correct

I don't know if it is directly related to your problem, but Generic Java 
is a bad reference point, because it's type inference is know to be unsound:

http://www.cis.upenn.edu/~bcpierce/types/archives/current/msg00849.html

Yours, Florian

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

