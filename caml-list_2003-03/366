Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA06407; Wed, 26 Mar 2003 12:19:35 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA07192 for <caml-list@pauillac.inria.fr>; Wed, 26 Mar 2003 12:19:33 +0100 (MET)
Received: from athlon.baretta.com ([213.255.109.130])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h2QBJXf06881
	for <caml-list@inria.fr>; Wed, 26 Mar 2003 12:19:33 +0100 (MET)
Received: from baretta.com (localhost.localdomain [127.0.0.1])
	by athlon.baretta.com (Postfix) with ESMTP
	id 0C5F1273BB; Wed, 26 Mar 2003 12:24:57 +0100 (CET)
Message-ID: <3E818E08.2000505@baretta.com>
Date: Wed, 26 Mar 2003 12:24:56 +0100
From: Alessandro Baretta <alex@baretta.com>
Organization: Baretta srl -- www.baretta.com
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.1) Gecko/20020826
X-Accept-Language: it, en
MIME-Version: 1.0
To: Sven Luther <luther@dpt-info.u-strasbg.fr>, Ocaml <caml-list@inria.fr>
Subject: Re: [Caml-list] camlimages vs. labltk
References: <AD142AED-5EF8-11D7-B9A4-000393942C76@ece.ucsb.edu> <3E81640C.40009@baretta.com> <20030326083345.GA2985@iliana> <3E816C13.7040507@baretta.com> <20030326105006.GA3891@iliana>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; alessandro:01 baretta:01 caml-list:01 camlimages:01 labltk:01 sven:01 luther:01 wisely:99 namespaces:01 -pack:01 altough:01 mangling:01 clashes:01 orthogonal:01 ocamlc:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk



Sven Luther wrote:
> On Wed, Mar 26, 2003 at 10:00:03AM +0100, Alessandro Baretta wrote:
> 
>>
>>Sven Luther wrote:

>>Sven, someone on this list wisely pointed out that you buy 
>>nothing by telling someone else "You don't need that 
>>feature". We do need namespaces. It might not be paramount: 

> As for side-effects, i didn't really think about that, but i guess that
> you could easily implement the modules so that the side effect do happen
> when you call a module initialization function or something such. I
> don't think it really is good practice to use toplevel global side
> effect for library code anyway.

We now have a new language feature: it's called
You Don't Need It (TM), patent pending ;)

>>So -pack is good, but 
>>namespaces are still a necessary feature to Ocaml as to any 
>>industrial level programming language.
> 
> 
> No, the namespace feature is already there, altough not much used in
> reality, the problems are elsewhere.

Modules are a very powerful theoretical instrument with a 
profound algebraic meaning, rooted in category theory. This 
is all very good, and I appreciate it. But namespaces are 
something _ELSE_. And they too are a good thing to have. Why 
don't we just stop this "You don't need it thing" about any 
language feature we don't already have. Ocaml is a cool 
language. It's my primary language for developing business 
applications. I earn a living with it. I know what I need 
and what I don't need. Namespaces are a useful tool, aside 
from the algebraically based module system: they simply 
provied a means for mangling module names so as to avoid 
name clashes.

There are many different ways of implementing a namespace 
system. We need to think of an implementation orthogonal to 
the module system, so as to add functionality without 
introducing conflicts with the module system. I would 
appreciate a lot more a -namespace option to ocamlmklib than 
a -pack option to ocamlc. This feature would have to go with 
such additional language constructs such as an "in" operator 
for namespace resolution. Such language constructs have 
already been implemented as camlp4 syntax extensions and are 
already available out there.

> Friendly,
> 
> Sven Luther
> 

Cheers,
Alex

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

