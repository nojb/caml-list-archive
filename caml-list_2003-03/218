Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA23280; Sat, 15 Mar 2003 03:28:22 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA22935 for <caml-list@pauillac.inria.fr>; Sat, 15 Mar 2003 03:28:20 +0100 (MET)
Received: from viola.sinor.ru (viola.sinor.ru [217.70.106.9])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h2F2SJf15519
	for <caml-list@pauillac.inria.fr>; Sat, 15 Mar 2003 03:28:19 +0100 (MET)
Received: from sibnet.ru (tlg5-ppp12.sibnet.ru [217.70.116.12])
	by viola.sinor.ru (8.12.8/8.12.3) with ESMTP id h2F2SFDC000895
	for <caml-list@pauillac.inria.fr>; Sat, 15 Mar 2003 08:28:16 +0600
Received: by sibnet.ru id m18u1OR-001EpZC; Sat, 15 Mar 2003 08:27:27 +0600 (NOVT)
Date: Sat, 15 Mar 2003 08:27:27 +0600
From: Max Kirillov <max630@mail.ru>
To: caml-list@pauillac.inria.fr
Subject: [Caml-list] Re: Haskell-like syntax
Message-ID: <20030315082727.E5826@max.home>
Mail-Followup-To: caml-list@pauillac.inria.fr
References: <005d01c2e76f$92d0f8b0$2713f9ca@WARP> <20030314003336.D748@max.home> <20030315013056.C5826@max.home> <200303141301.59458.seth@cql.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <200303141301.59458.seth@cql.com>; from seth@cql.com on Fri, Mar 14, 2003 at 01:01:59PM -0700
X-Sender: Max <max@ppp.sibnet.ru>
X-Spam: no; 0.00; kirillov:01 haskell-like:01 millenium:01 cmo:01 ocaml:01 0700,:01 syntax:02 modules:02 module:03 wrote:03 recursive:03 compiling:03 intuitive:04 seems:05 alternatives:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, Mar 14, 2003 at 01:01:59PM -0700, Seth Kurtzberg wrote:
> I find this syntax (with WHERE) much more intuitive than the alternatives.  I 
> strongly support the effort to integrate this into OCaml.  While it seems 
> like a small thing in practice it makes it much easier to see what is 
> actually going on, which is of course very desirable.

No. No! NO!!! I would rather see globally valid declarations, not only
forward. This concening not only the module body, but inter-module
connections as well. Just imagine -- it the third millenium, compiling the
"best language", we need carefully order the .cmo files. Doing this also
would push the "mutually recursive modules" problem.

-- 
Max

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

