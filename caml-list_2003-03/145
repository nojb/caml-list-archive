Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA19703; Thu, 13 Mar 2003 10:48:59 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA19831 for <caml-list@pauillac.inria.fr>; Thu, 13 Mar 2003 10:48:58 +0100 (MET)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h2D9muf01611
	for <caml-list@inria.fr>; Thu, 13 Mar 2003 10:48:57 +0100 (MET)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3/3.7W) with ESMTP id SAA28950;
	Thu, 13 Mar 2003 18:48:49 +0900 (JST)
To: mikhail@kittown.com
Cc: caml-list@inria.fr
Subject: RE: [Caml-list] poll - need for a good introductory OCaml book
In-Reply-To: <001301c2e943$ff12fbb0$a917a8c0@merann.ru>
References: <20030313073503.GD372@phaeton.entropie.net>
	<001301c2e943$ff12fbb0$a917a8c0@merann.ru>
X-Mailer: Mew version 1.94.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20030313184848G.garrigue@kurims.kyoto-u.ac.jp>
Date: Thu, 13 Mar 2003 18:48:48 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 26
X-Spam: no; 0.00; jacques:01 caml-list:01 introductory:99 bug:01 0.0:01 val:01 3.06:01 stupid:01 bool:01 ocaml:01 ocaml-:01 surprising:01 int:01 garrigue:01 float:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: "MikhailFedotov" <mikhail@kittown.com>
> > Mind explaining what's wrong with ``Developing Applications
> > in Ocaml'' ?
> 
> The introductory part of reference manual reads easier. And there
> is a bug too in the book (at least one, I don't know if there are more):
> 
> # let test_nul_integer = function `Number n -> n=0
>   and test_nul_real = function `Number r -> r=0.0 ;;
>   val test_nul_integer : [< `Number of int] -> bool = <fun>
>   val test_nul_real : [< `Number of float] -> bool = <fun>
> # let test_nul x = (test_nul_integer x) || (test_nul_real x) ;;
> 
> (the next line is wrong - ocaml 3.06 won't allow this):
> 
>    val test_nul : [< `Number of float & int] -> bool = <fun>
> 
> Reference manual explains where is the bug...

The appendix of the book is explicitly about ocaml-2.99.
Lots of things changed since, so this is not surprising that new
features do not work exactly as explained in the book.
For this example, this is a rather recent change, to catch stupid
errors, the above being useless anyway.

        Jacques Garrigue

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

