Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA27626; Sun, 16 Mar 2003 19:34:23 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA27783 for <caml-list@pauillac.inria.fr>; Sun, 16 Mar 2003 19:34:22 +0100 (MET)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h2GIYLX26469
	for <caml-list@pauillac.inria.fr>; Sun, 16 Mar 2003 19:34:21 +0100 (MET)
Received: from fichte.ai.univie.ac.at (markus@localhost.ai.univie.ac.at [127.0.0.1])
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-5) with ESMTP id h2GIYIV7008052;
	Sun, 16 Mar 2003 19:34:18 +0100
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-5) id h2GIYIQo008051;
	Sun, 16 Mar 2003 19:34:18 +0100
Date: Sun, 16 Mar 2003 19:34:18 +0100
From: Markus Mottl <markus@oefai.at>
To: brogoff@speakeasy.net
Cc: "caml-list@pauillac.inria.fr" <caml-list@pauillac.inria.fr>
Subject: Re: Module recursion (Was Re: [Caml-list] Re: Haskell-like syntax)
Message-ID: <20030316183418.GC4354@fichte.ai.univie.ac.at>
Mail-Followup-To: brogoff@speakeasy.net,
	"caml-list@pauillac.inria.fr" <caml-list@pauillac.inria.fr>
References: <20030316111014.GA4354@fichte.ai.univie.ac.at> <Pine.LNX.4.44.0303160949460.11736-100000@grace.speakeasy.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.44.0303160949460.11736-100000@grace.speakeasy.net>
User-Agent: Mutt/1.4i
Organization: Austrian Research Institute for Artificial Intelligence
X-Spam: no; 0.00; recursion:01 caml-list:01 haskell-like:01 brogoff:01 russo's:01 implemented:01 unsound:01 thesis:01 generative:01 applicative:01 functors:01 functor:01 eta-expand:01 ocaml-team:01 ocaml:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sun, 16 Mar 2003, brogoff@speakeasy.net wrote:
> > In any case, this seems like a suitable moment for once again suggesting
> > that Claudio Russo's module system as implemented in Moscow ML be
> > integrated into OCaml :-)
> 
> Not quite yet! Google this 
> 
>     dreyer "moscow ml" unsound

Ok, I take back "as implemented in Moscow ML" ;-)

Thanks for the hint!

The unsoundness, however, does not arise from Claudio's thesis, but from
the interaction of generative and applicative functors as implemented in
Moscow ML. In short, if I have understood things correctly, it is possible
to "infect" generative functors with applicativeness by using generative
functor signatures (which only exist in Moscow ML, not SML!) within the
argument signature of applicative functors to essentially eta-expand
passed generative functors.

In any case, there are solutions to this problem. Wouldn't this be a
fine research topic for our OCaml-team? ;-)

Regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

