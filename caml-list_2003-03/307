Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA25675; Fri, 21 Mar 2003 17:15:25 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA25433 for <caml-list@pauillac.inria.fr>; Fri, 21 Mar 2003 17:15:24 +0100 (MET)
Received: from inria.fr (macaque.inria.fr [128.93.8.158])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h2LGFCf02427;
	Fri, 21 Mar 2003 17:15:12 +0100 (MET)
Date: Fri, 21 Mar 2003 17:15:16 +0100
Subject: Re: [Caml-list] GC and preventing data relocation
Content-Type: text/plain; charset=US-ASCII; format=flowed
Mime-Version: 1.0 (Apple Message framework v551)
Cc: OCAML <caml-list@inria.fr>
To: Markus Mottl <markus@oefai.at>
From: Damien Doligez <damien.doligez@inria.fr>
In-Reply-To: <20030320151647.GA15121@fichte.ai.univie.ac.at>
Message-Id: <4DE5D5EC-5BB8-11D7-856E-0003930FCE12@inria.fr>
Content-Transfer-Encoding: 7bit
X-Mailer: Apple Mail (2.551)
X-Spam: no; 0.00; damien:01 caml-list:01 c-library:01 compactor:01 callback:01 buffer:01 million:98 doligez:01 raises:01 mottl:02 exception:02 overhead:03 string:03 heap:03 wrote:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thursday, March 20, 2003, at 04:16 PM, Markus Mottl wrote:

> Since there is no way for me to tell the C-library to continue with a
> new location of the string, I'd like to know whether there is any way
> to prevent the GC from moving specific data?

In the current implementation (and in the foreseeable future), if your
string is in the major heap, then only the compactor can move it.
You could try to disable the automatic compaction (by setting
max_overhead to 1 million) during the callback, restoring the
original setting when you get out of the callback.  You'll have
to tell your users that they must not call Gc.compact nor change
max_overhead during the execution of the callback function.

You will also have to correctly manage the case where the callback
function raises an exception...

If the string is in the minor heap, you know it's a short string
and you can (for example) copy it into a buffer pre-allocated in
the C heap.

-- Damien

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

