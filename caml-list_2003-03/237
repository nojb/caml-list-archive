Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA03052; Mon, 17 Mar 2003 02:47:34 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA03159 for <caml-list@pauillac.inria.fr>; Mon, 17 Mar 2003 02:47:33 +0100 (MET)
Received: from psyche.kaba.or.jp (psyche.kaba.or.jp [202.249.19.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h2H1lVX06868
	for <caml-list@pauillac.inria.fr>; Mon, 17 Mar 2003 02:47:31 +0100 (MET)
Received: from mail.kaba.or.jp (cascade.kaba.or.jp [202.249.19.34])
	by psyche.kaba.or.jp (Postfix) with ESMTP
	id EFCD2229E5; Mon, 17 Mar 2003 10:47:27 +0900 (JST)
Received: from WARP (dhcp04.kaba.or.jp [202.249.19.39])
	by mail.kaba.or.jp (Postfix) with SMTP
	id 9312449A6B; Mon, 17 Mar 2003 10:47:27 +0900 (JST)
Message-ID: <010901c2ec27$0c58c8a0$2713f9ca@WARP>
From: "Nicolas Cannasse" <warplayer@free.fr>
To: "Markus Mottl" <markus@oefai.at>, <caml-list@pauillac.inria.fr>
References: <005d01c2e76f$92d0f8b0$2713f9ca@WARP> <20030314003336.D748@max.home> <20030315013056.C5826@max.home> <200303141301.59458.seth@cql.com> <20030315082727.E5826@max.home> <20030315105846.GA28233@fichte.ai.univie.ac.at>
Subject: Re: [Caml-list] Re: Haskell-like syntax
Date: Mon, 17 Mar 2003 10:46:36 +0900
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1106
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1106
X-Spam: no; 0.00; cannasse:01 warplayer:01 caml-list:01 haskell-like:01 millenium:01 mli-files:01 initialized:01 cmo:01 nicolas:01 syntax:02 signatures:02 imply:02 tree:02 linking:02 modules:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> > Just imagine -- it the third millenium, compiling the "best language",
> > we need carefully order the .cmo files. Doing this also would push the
> > "mutually recursive modules" problem.
>
> Things are not this easy: the order is actually required for linking,
> not for compiling (as long as you provide explicit signatures in
> .mli-files).  The order during linking determines in which order side
> effects will be caused when values are initialized, which only the user
> can know. Furthermore, the "mutually recursive modules"-problem is more
> of a typing problem than one of compilation.

Yes, of course, module initialization order should be specified by the CMO
order the user gived at linking phase, but that actually does not imply that
the CMO have to be passed to the linker in the compilation tree order. Well,
right now, that's it... but there does not seems to be a theorical wall
since any C linker is accepting files in any order ( I'm not talking here
about compilation, just linking of course ! )

Nicolas Cannasse

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

