Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA20022; Tue, 18 Mar 2003 14:32:02 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA20969 for <caml-list@pauillac.inria.fr>; Tue, 18 Mar 2003 14:32:01 +0100 (MET)
Received: from athlon.baretta.com ([213.255.109.130])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h2IDW0f10374
	for <caml-list@inria.fr>; Tue, 18 Mar 2003 14:32:00 +0100 (MET)
Received: from baretta.com (localhost.localdomain [127.0.0.1])
	by athlon.baretta.com (Postfix) with ESMTP id 37096273A8
	for <caml-list@inria.fr>; Tue, 18 Mar 2003 14:37:09 +0100 (CET)
Message-ID: <3E772105.2000307@baretta.com>
Date: Tue, 18 Mar 2003 14:37:09 +0100
From: Alessandro Baretta <alex@baretta.com>
Organization: Baretta srl -- www.baretta.com
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.1) Gecko/20020826
X-Accept-Language: it, en
MIME-Version: 1.0
To: Ocaml <caml-list@inria.fr>
Subject: [Caml-list] Question on Mutexes
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; alessandro:01 baretta:01 mutexes:01 bug:01 threads:01 alex:01 toplevel:01 thread:02 locks:03 let:04 execute:04 exceptions:04 mutex:06 feature:07 thrown:09 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

If thread t1 locks mutex m, can thread t2 unlock it?

I ask because I get no sign of exceptions being thrown when 
I execute the following code in the toplevel:

let m = Mutex.create ()
let () = Mutex.lock m
let f m' = Mutex.unlock m'
let t = Thread.create f m
let () = Mutex.lock m

Also, the final call to Mutex.lock does not block the 
execution of the program by any significant time, which 
means that mutex m is unlocked by thread t before being 
locked once again by the original thread.

Is this a bug or a feature? Are threads supposed to be able 
to unlock mutexes held by _other_ threads?

Alex

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

