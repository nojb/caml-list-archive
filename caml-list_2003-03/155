Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA31229; Thu, 13 Mar 2003 16:13:49 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA31220 for <caml-list@pauillac.inria.fr>; Thu, 13 Mar 2003 16:13:47 +0100 (MET)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from lindig.dyndns.org (pD9E340F4.dip.t-dialin.net [217.227.64.244])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h2DFDkX13613
	for <caml-list@inria.fr>; Thu, 13 Mar 2003 16:13:47 +0100 (MET)
Received: by lindig.dyndns.org (Postfix, from userid 1002)
	id A3EA449FB; Thu, 13 Mar 2003 16:13:42 +0100 (CET)
Received: by lindig.dyndns.org (Postfix, from userid 1002)
	id 7DBB449FE; Thu, 13 Mar 2003 12:53:42 +0100 (CET)
Date: Thu, 13 Mar 2003 12:53:42 +0100
From: Christian Lindig <lindig@eecs.harvard.edu>
To: Ocaml Beginners <ocaml_beginners@yahoogroups.com>
Cc: The Trade <caml-list@inria.fr>
Subject: Re: [Caml-list] monads for dummies
Message-ID: <20030313115342.GB899@eecs.harvard.edu>
Mail-Followup-To: Christian Lindig <lindig@eecs.harvard.edu>,
	Ocaml Beginners <ocaml_beginners@yahoogroups.com>,
	The Trade <caml-list@inria.fr>
References: <3E6DDAFC.19000.44771B6@localhost> <3273E2D8-54E7-11D7-97B5-000393BA7EBA@wetware.com>
Mime-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha1;
	protocol="application/pgp-signature"; boundary="+pHx0qQiF2pBVqBT"
Content-Disposition: inline
In-Reply-To: <3273E2D8-54E7-11D7-97B5-000393BA7EBA@wetware.com>
User-Agent: Mutt/1.4i
X-No-Archive: yes
X-URL: http://www.eecs.harvard.edu/~lindig/
X-Spam: no; 0.00; lindig:01 caml-list:01 monads:01 woodyatt:01 monad:01 closures:01 monadic:01 haskell:01 combinator:01 ocaml:01 continuation:02 wrote:03 eecs:03 library:03 data:03 
X-Attachments: type="application/pgp-signature" 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


--+pHx0qQiF2pBVqBT
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

On Wed, Mar 12, 2003 at 04:03:19PM -0800, james woodyatt wrote:
> If what I've written isn't very helpful to you, then please tell me so=20
> I know not to try to explain this stuff to people.  On the other hand,=20
> if it *is* helpful, that would be nice to know too.

I have some experience with the state monad but your article has sparked
my interest for the continuation monad that you explained. I would have
liked at least one example that uses some data, not just functions.

Since you seem to have quite some experience with monads, is performance
a problem? I would expect that the strict evaluation of OCaml leads to
an enormous numbers of closures in a monadic programming style,
something that might not happen in Haskell. For the same reason the
combinator style that is so poular in Haskell seems not very popular in
OCaml. The standard library not even defines a function composition
operator.

-- Christian

--+pHx0qQiF2pBVqBT
Content-Type: application/pgp-signature
Content-Disposition: inline

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.0 (GNU/Linux)

iD8DBQE+cHFGlBiMgzy5BH0RAm8cAKCqiBjblFe5W8dgIFydiAO+Yt8GQACgnhCS
HsmBtfq7PcCu2HAXO7+jJZ8=
=a3cn
-----END PGP SIGNATURE-----

--+pHx0qQiF2pBVqBT--

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

