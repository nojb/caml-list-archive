Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA20388; Sun, 16 Mar 2003 12:10:18 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA20478 for <caml-list@pauillac.inria.fr>; Sun, 16 Mar 2003 12:10:17 +0100 (MET)
Received: from fichte.ai.univie.ac.at (fichte.ai.univie.ac.at [131.130.174.156])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h2GBAGf23563
	for <caml-list@pauillac.inria.fr>; Sun, 16 Mar 2003 12:10:16 +0100 (MET)
Received: from fichte.ai.univie.ac.at (markus@localhost.ai.univie.ac.at [127.0.0.1])
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-5) with ESMTP id h2GBAFV7004862;
	Sun, 16 Mar 2003 12:10:15 +0100
Received: (from markus@localhost)
	by fichte.ai.univie.ac.at (8.12.3/8.12.3/Debian-5) id h2GBAFwc004861;
	Sun, 16 Mar 2003 12:10:15 +0100
Date: Sun, 16 Mar 2003 12:10:15 +0100
From: Markus Mottl <markus@oefai.at>
To: brogoff@speakeasy.net
Cc: "caml-list@pauillac.inria.fr" <caml-list@pauillac.inria.fr>
Subject: Re: Module recursion (Was Re: [Caml-list] Re: Haskell-like syntax)
Message-ID: <20030316111014.GA4354@fichte.ai.univie.ac.at>
Mail-Followup-To: brogoff@speakeasy.net,
	"caml-list@pauillac.inria.fr" <caml-list@pauillac.inria.fr>
References: <20030315105846.GA28233@fichte.ai.univie.ac.at> <Pine.LNX.4.44.0303152112560.27230-100000@grace.speakeasy.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.44.0303152112560.27230-100000@grace.speakeasy.net>
User-Agent: Mutt/1.4i
Organization: Austrian Research Institute for Artificial Intelligence
X-Spam: no; 0.00; recursion:01 caml-list:01 haskell-like:01 brogoff:01 impure:01 russo's:01 implemented:01 type-:01 extensional:01 furuse's:01 thesis:01 ocaml:01 speakeasy:01 syntax:02 mottl:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sat, 15 Mar 2003, brogoff@speakeasy.net wrote:
> That's not to say I wouldn't like or use a general recursive module feature, 
> but the full problem seems awfully hard in a (strict, impure) language like ML 
> and I doubt that I'll see it in OCaml before I retire. 

Actually, I more often regret the lack of first class modules in OCaml
rather than module recursion.

In any case, this seems like a suitable moment for once again suggesting
that Claudio Russo's module system as implemented in Moscow ML be
integrated into OCaml :-)

It would be interesting to learn about future directions concerning the
type- and the module system. Are there any plans of implementing the
suggestion above? And how about extensional polymorphism - it seems that
Jun Furuse's thesis was already finished last December?

Regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

