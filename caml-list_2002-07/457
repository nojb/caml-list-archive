Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA22361; Mon, 22 Jul 2002 21:08:59 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA22352 for <caml-list@pauillac.inria.fr>; Mon, 22 Jul 2002 21:08:58 +0200 (MET DST)
Received: from slave-dog.naughtydog.com (naughtydog200.brandx.net [209.55.75.200])
	by concorde.inria.fr (8.11.1/8.11.1) with SMTP id g6MJ8u121966
	for <caml-list@inria.fr>; Mon, 22 Jul 2002 21:08:57 +0200 (MET DST)
Received: from SMTP agent by mail gateway 
 Mon, 22 Jul 2002 12:23:06 -0800
Received: from happydog (happy-dog.naughtydog.com [10.0.0.99])
	by slave-dog.naughtydog.com (SGI-8.9.3/8.9.3) with SMTP id MAA17678;
	Mon, 22 Jul 2002 12:23:00 -0700 (PDT)
From: "Pal-Kristian Engstad" <engstad@naughtydog.com>
To: <achrist@easystreet.com>
Cc: "Caml-List@Inria.Fr" <caml-list@inria.fr>
Subject: RE: [Caml-list] Caml productivity.
Date: Mon, 22 Jul 2002 12:23:00 -0700
Message-ID: <NDBBLMPLBKBLINFBOEKLCEBFDLAA.engstad@naughtydog.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2910.0)
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
In-Reply-To: <3D3C51D3.969C678B@easystreet.com>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Yes, it is pretty hard - but the upside is that given a given architecture
that you know well, you can sometimes optimize routines up to a factor of
400 of an already optimized (data and code optimization) routine. In fact,
that I can do this is specifically why my company hires me... As a matter of
fact, the ocaml programs I've written are all tools to aid me in the process
of optimizing for the current architecture. I wouldn't ever dream of ocaml
being able to do something similar, but it does strike me that it is
possible to be able to put some low-level stuff into ocaml itself. Or
perhaps I am mistaken?

PKE.


-----Original Message-----
From: owner-caml-list@pauillac.inria.fr
[mailto:owner-caml-list@pauillac.inria.fr]On Behalf Of
achrist@easystreet.com
Sent: Monday, July 22, 2002 11:41 AM
Cc: Caml-List@Inria.Fr
Subject: Re: [Caml-list] Caml productivity.

Pal-Kristian Engstad wrote:
>
> ... I want to have the capability to make
> the code even better. To do that, one needs to be able to make use of
> the hardware, i.e. get down to the bare bones of your platform.
> ...

Isn't this fairly impossible for an applications programmer programming
the popular modern computers?  Don't these machines implement their
features through low-level virtual machines?  Re-order and rewrite
instructions?  Speculatively branch?  Execute sequential instructions
in parallel? Have hierarchical memory caches that they manage
themselves,
impervious to the desires of the programmer?  Etc, etc, etc?


Al
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives:
http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ:
http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

