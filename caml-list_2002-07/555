Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA18137; Sun, 28 Jul 2002 15:40:44 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA18086 for <caml-list@pauillac.inria.fr>; Sun, 28 Jul 2002 15:40:41 +0200 (MET DST)
Received: from cmailg1.svr.pol.co.uk (cmailg1.svr.pol.co.uk [195.92.195.171])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g6SDecX21550
	for <caml-list@inria.fr>; Sun, 28 Jul 2002 15:40:41 +0200 (MET DST)
Received: from modem-74.carnivore.dialup.pol.co.uk ([62.136.81.202] helo=mimbi)
	by cmailg1.svr.pol.co.uk with smtp (Exim 3.35 #1)
	id 17YoHl-0001rA-00; Sun, 28 Jul 2002 14:40:38 +0100
Message-ID: <005401c2363d$50206340$890bfea9@mimbi>
From: "Jonathan Coupe" <jonathan@meanwhile.freeserve.co.uk>
To: <caml-list@inria.fr>
Cc: "Chris Hecker" <checker@d6.com>
References: <NDBBLMPLBKBLINFBOEKLMEBCDLAA.engstad@naughtydog.com><NDBBLMPLBKBLINFBOEKLMEBCDLAA.engstad@naughtydog.com> <4.3.2.7.2.20020724200626.028a9d90@mail.d6.com>
Subject: Re: Games (Re: [Caml-list] Caml productivity.)
Date: Sun, 28 Jul 2002 14:45:50 +0100
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.00.2615.200
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2615.200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk



> If you're talking about professional quality games using caml as the main
> language (as opposed to as a scripting language), it's not really an
option
> on this generation of consoles.  Memory in a commercial console game is
> tightly managed, and caml doesn't give much control over memory management
> at all.

Even on a PC, I would have thought that the GC might need some re-writing? I
haven't seen any suggestion in the docs that it's compatible with realtime
requirements, ie preventing long periods of garbage collection. That said,
people ship games with bigger bugs.

The main thing I've taken from OCaml is using a mixed object/functional
style with C++ in games. This works well enough so that we'll probably spend
some money later this year using OpenC++ (an advanced preprocessor developed
at Xerox) to add closures on top of the C++ compilers we use.

Finally, although it is a fine language I don't think that OCaml supports
the right feature mix for game programming. The combination of a more
sophisticated ObjectiveC language (reflection for modules on top of a C
style base language, but with Smalltalk debugger and workspace, and C's
syntactical faults removed), an object library like Unrealscript's and
reasonable support for FP would seem optimum. I'd insist that it be easier
to parse than C++, even at the cost of removing a lot of syntactical sugar -
that way I might actually get a compiler that matches the language spec,
which still hasn't happened with C++.


- Jonathan Coupe

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

