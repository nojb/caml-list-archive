Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA00195; Tue, 30 Jul 2002 18:50:19 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA00103 for <caml-list@pauillac.inria.fr>; Tue, 30 Jul 2002 18:50:18 +0200 (MET DST)
Received: from dynabooK (tcn005203.tcn-catv.ne.jp [210.238.31.203])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g6UGoG909499
	for <caml-list@inria.fr>; Tue, 30 Jul 2002 18:50:17 +0200 (MET DST)
Received: from dynabook
	([127.0.0.1] helo=localhost ident=sumii)
	by dynabooK with esmtp (Exim 3.12 #1 (Debian))
	id 17ZOzO-00008L-00
	for <caml-list@inria.fr>; Tue, 30 Jul 2002 13:52:06 +0900
To: caml-list@inria.fr
From: eijiro_sumii@anet.ne.jp
Subject: Re: Games (Re: [Caml-list] Caml productivity.)
In-Reply-To: <001901c237a7$9e685920$890bfea9@mimbi>
References: <00c701c236b1$22110fd0$a56fc7c8@behemoth>
	<20020729192313A.sumii@tuba.is.s.u-tokyo.ac.jp>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20020730135205T.sumii@yl.is.s.u-tokyo.ac.jp>
Date: Tue, 30 Jul 2002 13:52:05 +0900
X-Dispatcher: imput version 991025(IM133)
Lines: 34
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

[Excuse me for citing a personal message without prior permission.
Also, excuse me for repeating all the same points as in my previous
messages...]

> I think you'll find that the emphasis on symbolic programming in ICFP was
> typical of ICFP rather than the supposed application domain.

I very much expected this response.:-) Indeed ICFP must have put
_more_ emphasis, I suppose, but it is of course just one example.
Also in some other CG programs involving Bezier curves, hidden
line/surface removal, radiosity, polygons, meta balls, etc. etc. that
I wrote, most non-trivial parts were symbolic ones.  The numeric parts
were "mathematics" rather than "programming" - once I solved some
equations, the rest of the work was routine: it was just writing down

  let x = (-. b +. sqrt(b *. b -. 4. *. a *. c)) /. (2. *. a)

or things like that.

Chatting with game/CG professionals around me _strengthened_ this
impression: the symbolic parts seem even more non-trivial in realistic
applications.  For instance, just imagine implementing various kinds
of graphics editors or scripting languages for animation description!

Unfortunately, all of these are mere personal experience and
impression: just I believe that CG programs in the real world are more
symbolic than classroom exercises or laboratory experiments, for the
reasons that I wrote above and in my previous messages.  If somebody
doesn't believe this, I have no more means (and time) to convince
him/her - this is just "FYI".

--
Eijiro Sumii (http://www.yl.is.s.u-tokyo.ac.jp/~sumii/)
Research Associate, Department of Computer Science, University of Tokyo
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

