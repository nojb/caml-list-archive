Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA32031; Thu, 25 Jul 2002 17:11:04 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA32000 for <caml-list@pauillac.inria.fr>; Thu, 25 Jul 2002 17:11:03 +0200 (MET DST)
Received: from favie.faith.gr.jp (favie.faith.gr.jp [61.127.175.250])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g6PFB0T28304
	for <caml-list@inria.fr>; Thu, 25 Jul 2002 17:11:01 +0200 (MET DST)
Received: from localhost (dhcp7.faith.gr.jp [192.168.1.17])
	by favie.faith.gr.jp (8.9.3/8.9.3) with ESMTP id AAA27515;
	Fri, 26 Jul 2002 00:10:53 +0900
To: Stuart.Croy@gs.com
Cc: caml-list@inria.fr
Subject: RE: [Caml-list] windows + gtk
In-Reply-To: <791BBEB24959D4118D400008C7090CA70AC83B0C@gstk04e.et.gs.com>
References: <791BBEB24959D4118D400008C7090CA70AC83B0C@gstk04e.et.gs.com>
X-Mailer: Mew version 1.94.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20020726001049M.garrigue@kurims.kyoto-u.ac.jp>
Date: Fri, 26 Jul 2002 00:10:49 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 22
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: "Croy, Stuart" <Stuart.Croy@gs.com>

> Is this binary GTK distribution going to include working threads under
> Windows? If so, is that with cygwin or MSVC?
> Yes, impatient, I know, but I'm about ready to get the debugger out on the
> current version... Looking forward to 3.05. Keep up the good work, guys.

Good question. I hadn't really checked, and expected msvc threads
to somehow work. However, it seems that while you can write threaded
applications using lablgtk, you cannot call gtk functions from other
threads (this deadlocks). My intuition is that the windows version of
gtk enables internal mutexes by default, which is not the case for the
unix version. But I didn't check, and I'm not sure I will be able to
solve that before the next version of lablgtk.
You can still do as ocamlbrowser: use threads, but keep everything UI
related in the main thread (i.e., use GtkThread.main as main loop, but
not GtkThread.start). A bit painful, but it works.

For cygwin, I believe ocaml itself doesn't support threads on that
platform. Am I wrong ?

          Jacques Garrigue
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

