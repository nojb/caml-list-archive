Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id GAA17825; Tue, 9 Jul 2002 06:42:57 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id GAA17976 for <caml-list@pauillac.inria.fr>; Tue, 9 Jul 2002 06:42:56 +0200 (MET DST)
Received: from hickory.cc.columbia.edu (hickory.cc.columbia.edu [128.59.59.202])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g694gtr20701
	for <caml-list@inria.fr>; Tue, 9 Jul 2002 06:42:55 +0200 (MET DST)
Received: from there (tw304h3.cpmc.columbia.edu [156.111.84.180])
	by hickory.cc.columbia.edu (8.9.3/8.9.3) with SMTP id AAA05638;
	Tue, 9 Jul 2002 00:42:52 -0400 (EDT)
Message-Id: <200207090442.AAA05638@hickory.cc.columbia.edu>
Content-Type: text/plain;
  charset="iso-8859-1"
From: Oleg <oleg_inconnu@myrealbox.com>
To: "John G Malecki" <johnm@artisan.com>, "caml-list" <caml-list@inria.fr>
Subject: [Caml-list] Universal Serializer (was: productivity improvement)
Date: Tue, 9 Jul 2002 00:43:45 -0400
X-Mailer: KMail [version 1.3.2]
References: <200207081952.PAA28813@hickory.cc.columbia.edu> <15657.61603.221054.289184@spike.artisan.com>
In-Reply-To: <15657.61603.221054.289184@spike.artisan.com>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Monday 08 July 2002 04:05 pm, John Malecki wrote in personal email:

> This is no an ocaml specific productivity improvement but the ability
> to marshal a data structure without having to write any data structure
> specific code is very productive.  

Speaking of complex data  structures with no code: Oftentimes, I need to 
create data structures, then write code that saves the structure to a file 
and code that reincarnates it. 

AFAICT if a data structure is created using combinations of unions, lists, 
arrays, etc. of built-in types or objects that, e.g. already have "write" and 
"read" methods defined,  then in theory, a hypothetical compiler ought to be 
able to generate such serialization functions automatically (IIRC Lisp and 
Scheme do this because of the simplicity of their type systems, but I may be 
wrong here).

Does O'Caml allow any type of short-cuts to avoid coding serialization 
manually?

Thanks
Oleg
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

