Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA12618; Mon, 22 Jul 2002 12:47:05 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA12591 for <caml-list@pauillac.inria.fr>; Mon, 22 Jul 2002 12:47:04 +0200 (MET DST)
Received: from mel-rto2.wanadoo.fr (smtp-out-2.wanadoo.fr [193.252.19.254])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g6MAl3T09984
	for <caml-list@inria.fr>; Mon, 22 Jul 2002 12:47:03 +0200 (MET DST)
Received: from mel-rta9.wanadoo.fr (193.252.19.69) by mel-rto2.wanadoo.fr (6.5.007)
        id 3D1838B600E5942A; Mon, 22 Jul 2002 12:47:03 +0200
Received: from warp (217.128.142.232) by mel-rta9.wanadoo.fr (6.5.007)
        id 3D2A791A00662D85; Mon, 22 Jul 2002 12:47:03 +0200
Message-ID: <00d201c2316d$09d27920$0700a8c0@warp>
From: "Nicolas Cannasse" <warplayer@free.fr>
To: "Pal-Kristian Engstad" <mrengstad@yahoo.com>, <caml-list@inria.fr>
References: <20020715212251.19685.qmail@web13302.mail.yahoo.com>
Subject: Re: [Caml-list] Caml productivity.
Date: Mon, 22 Jul 2002 12:46:30 +0200
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.50.4522.1200
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4522.1200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> Some proponents of this mailing list seem to be
> convinced that Ocaml is so much more productive than
> C++. I find this to be a terrible mistake. From an
> industry where performance is crucial (games
> programming), I find quite a few aspects of Ocaml hard
> to unify with productivity.

You're mistaking "productivity" and "performances". Theses are two concept
which are not compatible... You can either target performance, by working
alot on the optimization of your code, on you can target productivity
without caring about performance...
OCaml is perhaps one of the best language around to acheive both goals at
the same time with a reasonable ratio. You gain a lot of productivity ( 1:3
compared to C/C++ , in the domain of high-level game scripting ) for a few
loss of performances.

You have to design your game engine to fit OCaml good/weak points. I choose
to write a 3D Engine entirely in C/C++ - based on DirectX8 - with a small
high-level interface with OCaml, which encapsulate Matrix and Quaternions
into shadow types to enable C optimized operations on them. Then the rest of
the game ( which is : manipulation of complexes data structures ) is
entirely written in OCaml, to enable the maximum productivity and SAFETY !
No more patches needed :)

Nicolas Cannasse
www.motion-twin.com

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

