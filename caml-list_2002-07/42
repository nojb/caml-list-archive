Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA16941; Wed, 3 Jul 2002 22:28:21 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA17390 for <caml-list@pauillac.inria.fr>; Wed, 3 Jul 2002 22:28:20 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from athlon.baretta.com (r-mi214-6a72.tin.it [62.211.4.72])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g63KSJH14905
	for <caml-list@inria.fr>; Wed, 3 Jul 2002 22:28:19 +0200 (MET DST)
Received: from baretta.com (localhost.localdomain [127.0.0.1])
	by athlon.baretta.com (Postfix) with ESMTP
	id D2DFB2724D; Wed,  3 Jul 2002 22:34:38 +0200 (CEST)
Message-ID: <3D235FDE.6080203@baretta.com>
Date: Wed, 03 Jul 2002 22:34:38 +0200
From: Alessandro Baretta <alex@baretta.com>
Organization: Baretta srl -- www.baretta.com
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.0) Gecko/20020529
X-Accept-Language: it, en
MIME-Version: 1.0
To: Oleg <oleg_inconnu@myrealbox.com>, Ocaml <caml-list@inria.fr>
Subject: Re: [Caml-list] Re: generic programming
References: <200207030246.WAA28665@dewberry.cc.columbia.edu> <4.3.2.7.2.20020703102610.0248b280@mail.d6.com> <200207032004.QAA07689@dewberry.cc.columbia.edu>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Oleg wrote:
> On Wednesday 03 July 2002 01:29 pm, Chris Hecker wrote:
> 
> 
>>Perhaps he's reading and can explain some of the problems.
>>
>>Caml polymorphism&functors and C++ templates seem to have different
>>properties, and I wonder what you can and can't write in each.
> 
> 
> I'm also concerned about compilation times. When writing C++ code, having to 
> keep template definitions in header files in their entirety is frequently my 
> reason not to write templated code.

Templates are "nasty" citizens of the C++ world. I've had 
*so* many problems tracking down bugs in code using STL 
templates. Basically, the "write once, compile many" 
strategy of C++ yields situations where the semantics of the 
algorithms coded in a template depends upon the type 
parameter you pass to the template itself. Abominable.

Stick to Caml: "Write Once, Compile Once, Link Many".

Alex



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

