Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA25929; Sun, 14 Jul 2002 12:24:02 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA25934 for <caml-list@pauillac.inria.fr>; Sun, 14 Jul 2002 12:24:01 +0200 (MET DST)
Received: from nexus.stwing.upenn.edu (NEXUS.STWING.UPENN.EDU [165.123.132.61])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g6EANxj26762
	for <caml-list@inria.fr>; Sun, 14 Jul 2002 12:24:00 +0200 (MET DST)
Received: from force.stwing.upenn.edu (daemon@force.stwing.upenn.edu [165.123.132.65])
	by nexus.stwing.upenn.edu (8.11.6/8.11.6) with ESMTP id g6EANwT11840
	(using TLSv1/SSLv3 with cipher EDH-RSA-DES-CBC3-SHA (168 bits) verified NO)
	for <caml-list@inria.fr>; Sun, 14 Jul 2002 06:23:59 -0400 (EDT)
Received: (from wlovas@localhost)
	by force.stwing.upenn.edu (8.11.6/8.11.6) id g6EANwP29871
	for caml-list@inria.fr; Sun, 14 Jul 2002 06:23:58 -0400 (EDT)
Date: Sun, 14 Jul 2002 06:23:57 -0400
From: William Lovas <wlovas@stwing.upenn.edu>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Five Questions about Objects
Message-ID: <20020714102357.GA29788@force.stwing.upenn.edu>
Mail-Followup-To: caml-list@inria.fr
References: <20020714095816B.yoriyuki@mbg.sphere.ne.jp> <Pine.SOL.4.44.0207141051270.8560-100000@clipper.ens.fr> <20020714183842E.garrigue@kurims.kyoto-u.ac.jp>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20020714183842E.garrigue@kurims.kyoto-u.ac.jp>
User-Agent: Mutt/1.3.25i
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sun, Jul 14, 2002 at 06:38:42PM +0900, Jacques Garrigue wrote:
> This only works if your object has a monomorphic type.
> 
> The real point is that if object definitions were really first class
> in the language, they would not be restricted by these strange
> variable binding conditions: type inference would be enough.
> Since there is no theoretical problem here, it may well be a useful
> extension.

I was thinking about this recently, and it occurs to me that first class
object definitions would provide something equivalent to polymorphicly
typed records.  This would be a nice dual to the polymorphic variants
already in the language, i think.  Are there any plans for such an 
extension?  Would such an extension be feasible?

William
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

