Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA19767; Tue, 16 Jul 2002 22:36:22 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA19763 for <caml-list@pauillac.inria.fr>; Tue, 16 Jul 2002 22:36:21 +0200 (MET DST)
Received: from mel-rto2.wanadoo.fr (smtp-out-2.wanadoo.fr [193.252.19.254])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g6GKaKb23429
	for <caml-list@inria.fr>; Tue, 16 Jul 2002 22:36:20 +0200 (MET DST)
Received: from mel-rta10.wanadoo.fr (193.252.19.193) by mel-rto2.wanadoo.fr (6.5.007)
        id 3D1838B600BEE9B6; Tue, 16 Jul 2002 22:36:19 +0200
Received: from AlphaSystem.dnsalias.net (80.11.74.121) by mel-rta10.wanadoo.fr (6.5.007)
        id 3D2A79160040E421; Tue, 16 Jul 2002 22:36:19 +0200
Content-Type: text/plain;
  charset="iso-8859-1"
From: Johan =?iso-8859-1?q?Balti=E9?= <johan.baltie@wanadoo.fr>
To: John Max Skaller <skaller@ozemail.com.au>, Berke Durak <berke@altern.org>
Subject: Re: [Caml-list] Re: Statically detecting arrays bound exceptions ?? (was: Universal Serializer)
Date: Tue, 16 Jul 2002 22:36:18 +0200
User-Agent: KMail/1.4.1
Cc: caml-list@inria.fr
References: <200207081952.PAA28813@hickory.cc.columbia.edu> <20020714142540.A4150@gogol.zorgol> <3D348085.1040809@ozemail.com.au>
In-Reply-To: <3D348085.1040809@ozemail.com.au>
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
Message-Id: <200207162236.18697.johan.baltie@wanadoo.fr>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Le Mardi 16 Juillet 2002 22:22, John Max Skaller a =E9crit :
> Berke Durak wrote:
> >On Fri, Jul 12, 2002 at 10:41:35PM +1000, John Max Skaller wrote:
> >[...]
> >
> >>Ocaml run time errors include array (and string) bounds exceptions an=
d
> >>infinite recursions:
> >>static type checking could detect the first, but not the second.
> >
> >Hey, wait a minute, how do you plan to statically detect bounds except=
ions
> > ? It's as undecidable as detecting infinite recursions.
>
> Nah. Just depends on your mindset.
> In Pascal, array indexes have a specific type,
> (possibly a subrange type). So it isn't possible to
> get an array bounds error, only a type error
> if the index is the wrong type.

What about defining type that are subranges of int ?=20
=E0 la ADA...

--=20
Ciao

Jo

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

