Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA08036; Wed, 31 Jul 2002 03:11:47 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA08053 for <caml-list@pauillac.inria.fr>; Wed, 31 Jul 2002 03:11:45 +0200 (MET DST)
Received: from dynabooK (tcn005203.tcn-catv.ne.jp [210.238.31.203])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g6V1Bh918738
	for <caml-list@inria.fr>; Wed, 31 Jul 2002 03:11:44 +0200 (MET DST)
Received: from dynabook
	([127.0.0.1] helo=localhost ident=sumii)
	by dynabooK with esmtp (Exim 3.12 #1 (Debian))
	id 17ZQJH-00009r-00
	for <caml-list@inria.fr>; Tue, 30 Jul 2002 15:16:43 +0900
To: caml-list@inria.fr
From: eijiro_sumii@anet.ne.jp
Subject: Re: Games (Re: [Caml-list] Caml productivity.)
In-Reply-To: <002301c237f5$154edbc0$890bfea9@mimbi>
References: <20020729192313A.sumii@tuba.is.s.u-tokyo.ac.jp>
	<20020730135205T.sumii@yl.is.s.u-tokyo.ac.jp>
	<002301c237f5$154edbc0$890bfea9@mimbi>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20020730151643H.sumii@yl.is.s.u-tokyo.ac.jp>
Date: Tue, 30 Jul 2002 15:16:43 +0900
X-Dispatcher: imput version 991025(IM133)
Lines: 37
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: "Jonathan Coupe" <jonathan@meanwhile.freeserve.co.uk>
> Graphics Gems and Game Gems series would be good starting points.

I actually had taken looks of them during the discussions with
friends, but thank you anyway for references.

> The hard part of a games scripting language is not, generally, the symbol
> processing (take a junior programmer and les and yacc) but the runtime. Do a
> search for Unrealscript's documentation. Symbol processing barely impacts
> graphics editors at all.

Oh I see, the problem seems to be that I am saying "symbolic"
computation in a much broader (maybe too broad) sense.  As I wrote,

| By "symbolic part", I mean all parts involving more complex data
| structures than float arrays, like managing objects of various
| shapes, manipulating trees for grouping those objects, or even
| interpreting domain specific languages for describing placement and
| movement of such objects.

Language runtime is a _typical_ instance of symbolic computation in
this sense.  This is just a problem of definition and excuse me if it
was confusing (it seemed to me that many people share this definition,
but maybe not).  On the other hand,

| OCaml is very good at such a kind of programming, you know!

This point is more controversial and far beyond the ability of me
alone - please ask the people in this list!:-)

At the same time, of course, OCaml is not (yet) so good at real-time
processing, which was the first point of my first message in this list
on this topic.

Thanks,

	Eijiro
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

