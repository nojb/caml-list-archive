Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA10089; Fri, 5 Jul 2002 00:38:33 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA09920 for <caml-list@pauillac.inria.fr>; Fri, 5 Jul 2002 00:38:32 +0200 (MET DST)
Received: from smtp.web.de (smtp02.web.de [217.72.192.151])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g64McWP26769
	for <caml-list@inria.fr>; Fri, 5 Jul 2002 00:38:32 +0200 (MET DST)
Received: from dsl-213-023-027-235.arcor-ip.net ([213.23.27.235] helo=pokey.henrik-motakef.de.web.de)
	by smtp.web.de with esmtp (WEB.DE(Exim) 4.70 #5)
	id 17QFF9-0001Hp-00; Fri, 05 Jul 2002 00:38:31 +0200
To: Gerd Stolpmann <info@gerd-stolpmann.de>
Cc: Alessandro Baretta <alex@baretta.com>, Ocaml <caml-list@inria.fr>
Subject: Re: [Caml-list] XML, XSL, eXcetera
References: <24542c290fd7023473fa0a397374847c@caldo.demon.co.uk>
	<3D24975C.2020003@baretta.com>
	<20020704235143.A621@ice.gerd-stolpmann.de>
From: Henrik Motakef <henrik.motakef@web.de>
In-Reply-To: <20020704235143.A621@ice.gerd-stolpmann.de>
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.2
Date: 05 Jul 2002 00:46:06 +0200
Message-ID: <87pty3kt75.fsf@pokey.henrik-motakef.de>
Lines: 30
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Gerd Stolpmann <info@gerd-stolpmann.de> writes:

> A number of people would also be (more) happy if there were a
> common SAX-like interface.

I am one of those. XML documents nowadays tend to get really big, and
I certanly don't want to store all of them in an object structure in
RAM just to filter out the stuff I'm interested in.

Then again, I really don't insinst on SAX-compatibility, I'd rather
see an OCaml-stream based interface actually, like an xml_event
Stream.t, where type xml_event = start_element of String |
character_data of string | end_element of String ...

Regarding the more general question of an "OCaml XML standard": I'd
think it would be really usefull. Especially a tight integration
(maybe with serious Camlp4 magic, I've no idea if it would be
possible) would rock hard. Just imagine something like


match node with
  | foo/bar -> do_something ()
  | bla/blub[@mumbo="jumbo"] -> something_else ()
  ...

i.e. matching XML nodes with XPathes.  Who would want to use XSLT over
this? Certainly not me, never mind the Java weenies ;-)

Regards
Henrik

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

