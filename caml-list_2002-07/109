Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA23433; Sun, 7 Jul 2002 22:35:55 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA24281 for <caml-list@pauillac.inria.fr>; Sun, 7 Jul 2002 22:35:54 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from athlon.baretta.com (r-mi214-6a84.tin.it [62.211.4.84])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g67KZq927530
	for <caml-list@inria.fr>; Sun, 7 Jul 2002 22:35:52 +0200 (MET DST)
Received: from baretta.com (localhost.localdomain [127.0.0.1])
	by athlon.baretta.com (Postfix) with ESMTP id 815E32739C
	for <caml-list@inria.fr>; Sun,  7 Jul 2002 22:42:23 +0200 (CEST)
Message-ID: <3D28A7AF.3010503@baretta.com>
Date: Sun, 07 Jul 2002 22:42:23 +0200
From: Alessandro Baretta <alex@baretta.com>
Organization: Baretta srl -- www.baretta.com
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.0) Gecko/20020529
X-Accept-Language: it, en
MIME-Version: 1.0
To: Ocaml <caml-list@inria.fr>
Subject: Re: [Caml-list] Re: generic programming
References: <200207030246.WAA28665@dewberry.cc.columbia.edu> <4.3.2.7.2.20020703102610.0248b280@mail.d6.com> <200207032004.QAA07689@dewberry.cc.columbia.edu> <3D235FDE.6080203@baretta.com> <3D246ABC.9010306@ozemail.com.au> <3D249B27.5080807@baretta.com> <3D25D27B.2020005@ozemail.com.au>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

John Max Skaller wrote:
> 
> [ Information about Felix ]

I have read about Felix on this list several times. I will 
look into it when I get a chance.

> Well, Ocaml has some problems too.
> I sometime want to give up on it too.
> For example: there is no dynamic loading, which is very serious.
> I really must have that.

Dynamic loading? Hmmm... What about the Dynlink library? Is 
that not what you are talking about?

> And then, there is no intermodule recursion. That is less serious,
> but it is a pain: almost all of the lookup code in Felix is forced into
> a single module, and it is a very large module. I get lost in it.
> [Lookup in Felix is MUCH more complex than Ocaml, due to overloading]

The module system in O'Caml is overall very powerful, but it 
has some weak spots. I think some significant improvements 
could be introduced with relatively little effort. O'CamlP4 
is probably the key element in my idea of "revised module 
system".

> Heh. But I have been writing Ocaml almost exclusively for 3-4 years now.
> I might be on the C++ committee .. but I don't write C++ anymore :-)

Give two or three more years and I'll be at your present 
level. I'm trying to use only O'Caml for application 
software and SQL for batch data processing tasks.

> Be fair though: C++ is better than plain C.
> It's not all that bad, considering the C compatibility constraint.
> What I learned during the process is that C is a very very bad
> language, doing almost everything wrong; this becomes evident
> when you try to extend it (i.e. to build C++) in a a source comatible
> way.

I do not consider myself an expert in either language. What 
I can tell you is that I once had to write a Delaunay 
triangulation algorithm: I tried C++ but reverted to C soon 
enough, when I got lost in the calling sequences of 
constructors and destructors--complexity was a major 
concern, so I switched to C because of its entirely obvious 
code execution path. For many other applications, where 
complexity is not the primary concern, where hierarchical 
polymorphism can be exploited--without the need for 
templates--C++ can certainly win over C.

> Felix doesn't try. It generates C++, and makes it easy to bind to C++,
> but it is a new language, with its own type system and syntax.
> 
>    http://felix.sf.net
> 
> C++ has an excuse for being a bad language.
> 
> Java does not. So if you're going to be annoyed at a language,
> pick Java: C++ advanced industrial programming significantly.
> Java has set it back at least a decade.

Listen, my experience with Java is limited, but has been 
frustrating enough. Let me repeat my previous comment: Long 
live the Caml!

Alex

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

