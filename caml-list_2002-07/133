Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA21083; Tue, 9 Jul 2002 09:53:22 +0200 (MET DST)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA21062 for caml-list@pauillac.inria.fr; Tue, 9 Jul 2002 09:53:22 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA12585 for <caml-list@pauillac.inria.fr>; Mon, 8 Jul 2002 22:14:02 +0200 (MET DST)
Received: from obento.cs.caltech.edu (obento.cs.caltech.edu [131.215.44.101])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g68KE1P22316
	for <caml-list@inria.fr>; Mon, 8 Jul 2002 22:14:02 +0200 (MET DST)
Received: from orchestra.cs.caltech.edu (orchestra.cs.caltech.edu [131.215.44.20])
	by obento.cs.caltech.edu (Postfix) with ESMTP
	id 630AA4036; Mon,  8 Jul 2002 13:14:00 -0700 (PDT)
Received: (from mvanier@localhost)
	by orchestra.cs.caltech.edu (8.11.6/8.9.3) id g68KE0n02894;
	Mon, 8 Jul 2002 13:14:00 -0700
Date: Mon, 8 Jul 2002 13:14:00 -0700
Message-Id: <200207082014.g68KE0n02894@orchestra.cs.caltech.edu>
X-Authentication-Warning: orchestra.cs.caltech.edu: mvanier set sender to mvanier@cs.caltech.edu using -f
From: Michael Vanier <mvanier@cs.caltech.edu>
To: oleg_inconnu@myrealbox.com
Cc: caml-list@inria.fr
In-reply-to: <200207081952.PAA28813@hickory.cc.columbia.edu> (message from
	Oleg on Mon, 8 Jul 2002 15:53:26 -0400)
Subject: Re: [Caml-list] productivity improvement
References:  <200207081952.PAA28813@hickory.cc.columbia.edu>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Imperative code in ocaml is not going to be massively different than
imperative code in any other (garbage-collected) language.  You need to
learn the functional style.  Why not post some of the personal utility
programs to the list and see if we can make them more idiomatic?

Personally, I think one of the big issues wrt C++ vs. ocaml is simply the
presence of a garbage collector and real strong static type checking.  The
productivity increases are as much in the form of reduced debugging time as
they are in the form of fewer lines of code.  However, higher-order
functions can give you a substantial savings in code size.

Mike


> From: Oleg <oleg_inconnu@myrealbox.com>
> Date: Mon, 8 Jul 2002 15:53:26 -0400
> 
> Hi
> 
> As part of learning O'Caml I was rewriting small personal utility programs 
> from C++ to O'Caml and I have not seen any productivity improvement so far. 
> Possibly, this is because I essentially use the same imperative style or 
> because my knowledge of O'Caml is rudimental or because there is no 
> productivity enhancement, at least for the programs I was translating or for 
> small programs in general.
> 
> What are the _simplest_ examples that demonstrate considerable (> 2:1) O'Caml 
> vs C++ productivity improvement (in terms of program size) and where can I 
> find them?
> 
> Thanks
> Oleg
> 
> P.S. Just trying to stay motivated.
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

