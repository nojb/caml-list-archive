Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA13204; Wed, 31 Jul 2002 10:39:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA13129 for <caml-list@pauillac.inria.fr>; Wed, 31 Jul 2002 10:39:33 +0200 (MET DST)
Received: from web11204.mail.yahoo.com (web11204.mail.yahoo.com [216.136.131.186])
	by concorde.inria.fr (8.11.1/8.11.1) with SMTP id g6V8dWH05802
	for <caml-list@inria.fr>; Wed, 31 Jul 2002 10:39:32 +0200 (MET DST)
Message-ID: <20020731083931.60968.qmail@web11204.mail.yahoo.com>
Received: from [195.224.189.78] by web11204.mail.yahoo.com via HTTP; Wed, 31 Jul 2002 01:39:31 PDT
Date: Wed, 31 Jul 2002 01:39:31 -0700 (PDT)
From: Noel Welsh <noelwelsh@yahoo.com>
Subject: Re: ocaml, simd, & fftwgel RE: [Caml-list] Caml productivity.
To: "Gurr, David \(MED, self\)" <David.Gurr@med.ge.com>,
        Travis Bemann <bemann@execpc.com>,
        Nicolas Cannasse <warplayer@free.fr>
Cc: caml-list@inria.fr
In-Reply-To: <D4DBD8568F05D511A1C20002A55C008C09C294EE@uswaumsx03medge.med.ge.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

--- "Gurr, David (MED, self)" <David.Gurr@med.ge.com>
wrote:

> IMHO:
> 
> High performance numerical code esp using SIMD or
> multiprocessor is
> beyond the reach of hand written assembly or hand
> written C.  Very
> heavy template based C++ almost works but odds are
> you will run into
> C++ compiler bugs.

There are a least two parallelising C compilers for
the PC: Intel's and CodePlay's.  CodePlay say they do
a better job than Intel.  I imagine Intel hold a
differing opinion.

I'm interested in knowing the deficiencies of these
compilers.  I imagine they run into problems with
dependency analysis on complicated array expressions. 
Similarly, I'm interested in knowing in what areas HPF
and SAC are performant.  It appears to me that a
functional language (where dependency analysis is
simple) with array shape inference should be capable
of creating very array fast code is almost all
situations (and the SAC benchmarks show them beating
HPF).

Cheers,
Noel



__________________________________________________
Do You Yahoo!?
Yahoo! Health - Feel better, live better
http://health.yahoo.com
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

