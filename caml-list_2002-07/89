Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA01310; Fri, 5 Jul 2002 18:36:30 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA25384 for <caml-list@pauillac.inria.fr>; Fri, 5 Jul 2002 18:36:29 +0200 (MET DST)
Received: from CS.UniBO.IT (leporello.cs.unibo.it [130.136.1.110])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id g65GaS928949
	for <caml-list@inria.fr>; Fri, 5 Jul 2002 18:36:28 +0200 (MET DST)
Received: from marcello.cs.unibo.it (root@marcello.cs.unibo.it [130.136.2.29])
	by CS.UniBO.IT (8.9.3/8.9.3/Debian 8.9.3-6) with ESMTP id SAA12104;
	Fri, 5 Jul 2002 18:36:28 +0200
Received: (from sacerdot@localhost)
	by marcello.cs.unibo.it (8.9.3/8.9.3/Debian 8.9.3-21) id SAA31199;
	Fri, 5 Jul 2002 18:36:28 +0200
Date: Fri, 5 Jul 2002 18:36:28 +0200
From: Claudio Sacerdoti Coen <sacerdot@cs.unibo.it>
To: Alain Frisch <frisch@clipper.ens.fr>
Cc: Gerd Stolpmann <info@gerd-stolpmann.de>,
        Alessandro Baretta <alex@baretta.com>, Ocaml <caml-list@inria.fr>
Subject: Re: [Caml-list] XML, XSL, eXcetera
Message-ID: <20020705183628.A31146@cs.unibo.it>
References: <20020704235143.A621@ice.gerd-stolpmann.de> <Pine.SOL.4.44.0207050123040.29164-100000@clipper.ens.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <Pine.SOL.4.44.0207050123040.29164-100000@clipper.ens.fr>; from frisch@clipper.ens.fr on Fri, Jul 05, 2002 at 02:15:27AM +0200
X-Operating-System: Debian GNU/Linux
X-Organization: Department of computer science, University of Bologna, Eurpean Union
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

 I am sorry to enter the discussion so late, but I am abroad attending
 a conference...

 My opinion is:

 1) We need binding to C implementations of DOM, XSLT, etc. to be able to
    do more bindings. For example, we surely want to make bindings to
    GUIs (see lablgtk) and complex widgets for rendering XML staff are
    based on DOM and related stuff.
    The binding me and Luca Padovani did for gdome2 should be considered a
    refined, complete, elegant and tested library, as the binding to the MathML
    widget. The binding to libxslt is a little toy highly incomplete,
    but I have been using it succesfully in the last few months. Moreover
    libxslt is quite performant and I know of no serious open bug or
    missing feature.
 2) XDuce-like stuff would be great but also not standard. I enjoyed
    reading the papers, but I also want to keep on using also the ugly
    but widespread XSLT.
 3) A 100% ocaml XSLT implementation is also something interesting for
    several reasons. Nevertheless I am pretty sure that it is a
    time-expensive piece of code to write, not at all as simple as it seems.
 4) Camlp4 stuff+PXP+XPath would be convenient in the short period, but
    absolutely non standard as the XDuce solution and without the advantages
    of XDuce. Camlp4 sugar would really be nice once you have a native
    XSLT implementation.

 To sum up, IMHO solutions 1-3 are different and solve different problems.
 4 is not so promising as it seems. Finally it is nice to see some
 interest in this field in the ocaml community.

 						Cheers,
						C.S.C.


> 
> Well, all this rant to say that ok, (OCaml+PXP+XPath+Camlp4) would be a
> quite appealing solution (and I would probably use it !), but calling it
> the 'ultimate language to process XML' is an overstatement IMHO.
> 
> 
> 
> -- Alain
> 
> -------------------
> To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
> Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

-- 
----------------------------------------------------------------
Real name: Claudio Sacerdoti Coen
PhD Student in Computer Science at University of Bologna
E-mail: sacerdot@cs.unibo.it
http://caristudenti.cs.unibo.it/~sacerdot
----------------------------------------------------------------
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

