Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA19696; Thu, 4 Jul 2002 00:53:02 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA19242 for <caml-list@pauillac.inria.fr>; Thu, 4 Jul 2002 00:53:01 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from athlon.baretta.com (r-mi214-6a72.tin.it [62.211.4.72])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id g63Mr0914261
	for <caml-list@inria.fr>; Thu, 4 Jul 2002 00:53:00 +0200 (MET DST)
Received: from baretta.com (localhost.localdomain [127.0.0.1])
	by athlon.baretta.com (Postfix) with ESMTP id A1A652724D
	for <caml-list@inria.fr>; Thu,  4 Jul 2002 00:59:22 +0200 (CEST)
Message-ID: <3D2381CA.5070600@baretta.com>
Date: Thu, 04 Jul 2002 00:59:22 +0200
From: Alessandro Baretta <alex@baretta.com>
Organization: Baretta srl -- www.baretta.com
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.0.0) Gecko/20020529
X-Accept-Language: it, en
MIME-Version: 1.0
To: Ocaml <caml-list@inria.fr>
Subject: [Caml-list] XML, XSL, eXcetera
Content-Type: text/plain; charset=ISO-8859-15; format=flowed
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I have just visited the Hump for XML related resources, but 
cannot make much sense out of them. I need a simple (and 
fast) XSLT processor, with the possibility of calling 
"extension" functions. Basically, I'd like to be able to use 
O'Caml within my XLST templates. Has anyone written such a 
hypothetical O'CaXSL document processor?

Or, equivalently, has anyone written O'Caml bindings for 
such XSLT processors as the Apache Xalan-C++? (And, is 
linking with C++ supported in O'Caml?)

I noticed the is a wrapper for the gdome2-xlst library. I 
don't suppose this would allow me to mix O'Caml code with 
XSLT code, would it?

I wonder if the solution could lie with the Ocaml Server 
Pages project. I reckon I might write a Ocaml Server Page 
script generating an XML file which could subsequently be 
processed without the need of extension functions. Would 
anyone reccomend such a strategy?

Alex

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

