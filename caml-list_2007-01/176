Return-Path: <coreyoconnor@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.5 required=5.0 tests=AWL,HTML_MESSAGE,INFO_TLD,
	SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id D9E41BC0B
	for <caml-list@yquem.inria.fr>; Tue, 16 Jan 2007 18:48:14 +0100 (CET)
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.172])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l0GHmE8H021690
	for <caml-list@inria.fr>; Tue, 16 Jan 2007 18:48:14 +0100
Received: by ug-out-1314.google.com with SMTP id k3so1057621ugf
        for <caml-list@inria.fr>; Tue, 16 Jan 2007 09:48:14 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
        b=Qa82WtH4hNiDzCxNRbU6m1ILmSIT7JRZBkxZnXlivYMNlQys4okbfk8/JYS6KdCUVy1Hv5I0qUuMe9h/MVcs2xMhWo2F11vSF2OyMeLvW+Yybgnqu+tn79b1nZq5cI8t9+RcMLzkPTofMYpXQ9d54fp/a8szq0vzyRQQdZtyZhk=
Received: by 10.78.193.19 with SMTP id q19mr1009445huf.1168969692568;
        Tue, 16 Jan 2007 09:48:12 -0800 (PST)
Received: by 10.78.100.12 with HTTP; Tue, 16 Jan 2007 09:48:12 -0800 (PST)
Message-ID: <c12912350701160948w10a5861ayfe34398143ac6465@mail.gmail.com>
Date: Tue, 16 Jan 2007 09:48:12 -0800
From: "Corey O'Connor" <coreyoconnor@gmail.com>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Building OSX Universal Binaries
In-Reply-To: <13C8AAD6-95A2-4080-A7C2-A318D52E66F8@philippewang.info>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_111421_20647701.1168969692520"
References: <45A03E09.3050907@motion-twin.com>
	 <A63CC9DE-DE06-47D0-975B-2ED207D37F52@epfl.ch>
	 <c12912350701151333x6e089eafr47092354f73294b7@mail.gmail.com>
	 <71217FB6-B868-40DA-9019-230D9EEA7FEB@epfl.ch>
	 <c12912350701151724s320b48a0udcff5af195c75386@mail.gmail.com>
	 <13C8AAD6-95A2-4080-A7C2-A318D52E66F8@philippewang.info>
X-j-chkmail-Score: MSGID : 45AD0FDE.000 on concorde : j-chkmail score : XX : 0/20 2 0.000 -> 2
X-Miltered: at concorde with ID 45AD0FDE.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; osx:01 bunzli:01 buenzli:01 ocaml:01 caml's:01 haskell:01 compiler:01 ocamlopt:01 gcc:01 bunzli:01 buenzli:01 ocaml:01 caml's:01 haskell:01 compiler:01 

------=_Part_111421_20647701.1168969692520
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

On 1/15/07, Philippe Wang <lists@philippewang.info> wrote:
>
>
> On 16 janv. 07, at 02:24, Corey O'Connor wrote:
>
>
>
> On 1/15/07, Daniel B=FCnzli <daniel.buenzli@epfl.ch> wrote:
> >
> >
> > Le 15 janv. 07 =E0 22:33, Corey O'Connor a =E9crit :
> >
> > > I don't think you need access to both a ppc and intel machine: Just
> > > an intel machine would suffice. Two separate installs of ocaml, One
> > > PPC and one Intel, then using some appropriate PATH variable magic
> > > to  switch between compiling with one vs the other. Then lipo at
> > > the end. Should work OK.
> >
> > Maybe, then I guess a ppc machine would also be enough. Do you happen
> > to know how to trick caml's ./configure ?
>
>
> I don't think a ppc machine would be enough since a ppc mac cannot run x8=
6
> programs but a x86 mac can run both ppc and x86 programs.
> Not sure how to trick configure either. I've done this process before wit=
h
> Haskell programs, but in that case used pre-built binaries of the compile=
r
> for each platform.
>
>
> However, ocamlopt can be configured to produce x86 asm on a PPC, can't it
> ?
> And XCode can build universal binaries on both ppc and x86...
> So I guess you just need to call gcc with the right parameters...
>


Actually, I have no idea. That'd be great if it did.

--=20
-Corey O'Connor

------=_Part_111421_20647701.1168969692520
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

<br><br><div><span class=3D"gmail_quote">On 1/15/07, <b class=3D"gmail_send=
ername">Philippe Wang</b> &lt;<a href=3D"mailto:lists@philippewang.info">li=
sts@philippewang.info</a>&gt; wrote:</span><blockquote class=3D"gmail_quote=
" style=3D"border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0=
.8ex; padding-left: 1ex;">
<div style=3D""><br><div><div><span class=3D"e" id=3D"q_11029eab0c838d35_1"=
><div>On 16 janv. 07, at 02:24, Corey O&#39;Connor wrote:</div><br><blockqu=
ote type=3D"cite"><br><br><div><span class=3D"gmail_quote">On 1/15/07, <b c=
lass=3D"gmail_sendername">
Daniel B=FCnzli</b> &lt;<a href=3D"mailto:daniel.buenzli@epfl.ch" target=3D=
"_blank" onclick=3D"return top.js.OpenExtLink(window,event,this)">daniel.bu=
enzli@epfl.ch</a>&gt; wrote:</span><blockquote class=3D"gmail_quote" style=
=3D"border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; p=
adding-left: 1ex;">
 <br>Le 15 janv. 07 =E0 22:33, Corey O&#39;Connor a =E9crit :<br><br>&gt; I=
 don&#39;t think you need access to both a ppc and intel machine: Just<br>&=
gt; an intel machine would suffice. Two separate installs of ocaml, One<br>
&gt; PPC and one Intel, then using some appropriate PATH variable magic <br=
>&gt; to&nbsp;&nbsp;switch between compiling with one vs the other. Then li=
po at<br>&gt; the end. Should work OK.<br><br>Maybe, then I guess a ppc mac=
hine would also be enough. Do you happen
<br>to know how to trick caml&#39;s ./configure ? </blockquote><div><br>I d=
on&#39;t think a ppc machine would be enough since a ppc mac cannot run x86=
 programs but a x86 mac can run both ppc and x86 programs.&nbsp; <br>Not su=
re how to trick configure either. I&#39;ve done this process before with Ha=
skell programs, but in that case used pre-built binaries of the compiler fo=
r each platform.&nbsp;
</div></div></blockquote><div><br></div></span></div><div>However, ocamlopt=
 can be configured to produce x86 asm on a PPC, can&#39;t it ?</div><div>An=
d XCode can build universal binaries on both ppc and x86...</div>So I guess=
 you just need to call gcc with the right parameters...
</div></div></blockquote><div><br><br>Actually, I have no idea. That&#39;d =
be great if it did.<br></div><br></div>-- <br>-Corey O&#39;Connor

------=_Part_111421_20647701.1168969692520--

