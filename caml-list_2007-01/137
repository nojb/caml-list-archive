Return-Path: <daniel.buenzli@epfl.ch>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 6A9A9BC0B
	for <caml-list@yquem.inria.fr>; Mon, 15 Jan 2007 23:11:57 +0100 (CET)
Received: from mail19.bluewin.ch (mail19.bluewin.ch [195.186.18.65])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l0FMBvn9006854
	for <caml-list@yquem.inria.fr>; Mon, 15 Jan 2007 23:11:57 +0100
Received: from [10.0.1.2] (85.2.76.105) by mail19.bluewin.ch (Bluewin 7.3.118)
        id 45AB8E1A0001DA95 for caml-list@yquem.inria.fr; Mon, 15 Jan 2007 22:11:56 +0000
Mime-Version: 1.0 (Apple Message framework v752.2)
In-Reply-To: <c12912350701151333x6e089eafr47092354f73294b7@mail.gmail.com>
References: <45A03E09.3050907@motion-twin.com> <A63CC9DE-DE06-47D0-975B-2ED207D37F52@epfl.ch> <c12912350701151333x6e089eafr47092354f73294b7@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
Message-Id: <71217FB6-B868-40DA-9019-230D9EEA7FEB@epfl.ch>
Content-Transfer-Encoding: quoted-printable
From: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@epfl.ch>
Subject: Re: [Caml-list] Building OSX Universal Binaries
Date: Mon, 15 Jan 2007 23:13:32 +0100
To: caml-list@yquem.inria.fr
X-Mailer: Apple Mail (2.752.2)
X-Miltered: at concorde with ID 45ABFC2D.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; bunzli:01 buenzli:01 osx:01 ocaml:01 caml's:01 cmxa:01 ocaml:01 compiler:01 corey:98 surgery:98 binaries:01 binaries:01 caml-list:01 caml:02 compiling:02 


Le 15 janv. 07 =E0 22:33, Corey O'Connor a =E9crit :

> I don't think you need access to both a ppc and intel machine: Just =20=

> an intel machine would suffice. Two separate installs of ocaml, One =20=

> PPC and one Intel, then using some appropriate PATH variable magic =20
> to  switch between compiling with one vs the other. Then lipo at =20
> the end. Should work OK.

Maybe, then I guess a ppc machine would also be enough. Do you happen =20=

to know how to trick caml's ./configure ?

Note that I still think caml should, in the end, generate universal =20
binaries directly, even though I have no real idea about what it =20
means with respect to cmxa and friends and how much ocaml compiler =20
surgery you'd need. Maybe it is not worth the effort.

Best,

Daniel


