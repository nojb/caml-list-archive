Return-Path: <bhurt@janestcapital.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id BD577BC0B
	for <caml-list@yquem.inria.fr>; Tue, 16 Jan 2007 20:21:32 +0100 (CET)
Received: from smtp.janestcapital.com (www.janestcapital.com [66.155.124.107])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l0GJLVVf003376
	for <caml-list@yquem.inria.fr>; Tue, 16 Jan 2007 20:21:32 +0100
Received: from [192.168.250.117] [209.213.205.130] by janestcapital.com with ESMTP
  (SMTPD-9.10) id A5B10E58; Tue, 16 Jan 2007 14:21:21 -0500
Message-ID: <45AD25B1.5050802@janestcapital.com>
Date: Tue, 16 Jan 2007 14:21:21 -0500
From: Brian Hurt <bhurt@janestcapital.com>
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.2) Gecko/20040804 Netscape/7.2 (ax)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Edgar Friendly <thelema314@gmail.com>
Cc: Christophe TROESTLER <Christophe.Troestler@umh.ac.be>,
	caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Ocaml compiler features
References: <45A87011.8080203@gmail.com>	<20070115103556.GB12311@furbychan.cocan.org>	<45AC60CB.4070408@gmail.com>	<20070116.065515.246091320.Christophe.Troestler@umh.ac.be> <45AD10BF.60606@gmail.com>
In-Reply-To: <45AD10BF.60606@gmail.com>
Content-Type: text/plain; charset=ISO-8859-15; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 45AD25BB.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 compiler:01 ocaml:01 parens:01 parens:01 edgar:98 wrote:01 caml-list:01 tuples:01 tuples:01 generally:03 let:03 constructing:04 brian:05 brian:05 

Edgar Friendly wrote:

>I don't think this is as
>appropriate in ocaml because parens serve a second use: constructing
>tuples.  
>
parens aren't necessary for creating tuples, consider:
let f x y = x,y;;

Where they are necessary, it's generally to force an evaluation order.  
They're a good idea in general, but aren't *technically* necessary.

Brian

