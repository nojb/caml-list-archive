Return-Path: <David.Teller@univ-orleans.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.8 required=5.0 tests=INFO_TLD autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id B6102BC0A
	for <caml-list@yquem.inria.fr>; Sun,  7 Jan 2007 19:15:29 +0100 (CET)
Received: from karpinski.uscs.susx.ac.uk (karpinski.uscs.susx.ac.uk [139.184.14.85])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l07IFTK1008380
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Sun, 7 Jan 2007 19:15:29 +0100
Received: from [81.185.98.168] (port=34513 helo=[192.168.0.5])
	by karpinski.uscs.susx.ac.uk with esmtpsa (SSLv3:RC4-MD5:128)
	(Exim 4.64)
	(envelope-from <David.Teller@univ-orleans.fr>)
	id JBIG6W-0009MG-LI
	for caml-list@inria.fr; Sun, 07 Jan 2007 18:18:32 +0000
Subject: Before teaching OCaml
From: David Teller <David.Teller@univ-orleans.fr>
To: OCaml <caml-list@inria.fr>
Content-Type: text/plain
Date: Sun, 07 Jan 2007 19:15:22 +0100
Message-Id: <1168193722.6133.38.camel@Blefuscu>
Mime-Version: 1.0
X-Mailer: Evolution 2.8.1 
Content-Transfer-Encoding: 7bit
X-Sussex: true
X-j-chkmail-Score: MSGID : 45A138C1.005 on concorde : j-chkmail score : XXXXX : 10/20 0 0.000 -> 5
X-Miltered: at concorde with ID 45A138C1.005 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 univ-orleans:01 ocaml:01 cygwin:01 makefiles:01 emacs:01 lablgtk:01 low-level:01 emacs:01 makefile:01 unix:01 caml:02 graphics:02 graphics:02 objective:02 

  Dear list,

 I'm going to start teaching OCaml soon and I'm fishing for ideas and
suggestions. I hope this list is the right place to ask.

 Within a few weeks, I'll be teaching OCaml to a class of second-year
students in _mathematics & informatics_. The bad part is that their
knowledge of computer science is limited to 3 term-long lectures of
"algorithmics" (read "Java under Windows"), and that they have nil
knowledge of Unix/Cygwin or Makefiles, or even Emacs or command-lines.
The good part is that a number of them consider Java "not mathematical
enough", so they may be good candidates for functional programming.

 I'm planning to base my lecture roughly on part 1 of _Developing
applications with Objective Caml_, perhaps replacing the chapter devoted
to Graphics with the use of LablGTK. Then again, perhaps not. Some
low-level graphics might be interesting for them. I also intend to give
them a term-long project to work on and develop.

Right now, I see the following difficulties:

* the environment -- under Windows, is there any viable alternative to
Emacs + the MinGW-based port ? 

* the Makefile -- I've found OCamlMakefile [1] but I haven't tried it
yet, hopefully it's simple enough for my students to use without too
many arcane manipulations

* the task -- for the moment, I have no interesting idea of OCaml-based
projects. Perhaps something like finding the shortest path along
subway/train lines ?


Thanks for any idea/suggestion/comment,
 David,
  And a Happy New Year


[1] http://www.ocaml.info/home/ocaml_sources.html

