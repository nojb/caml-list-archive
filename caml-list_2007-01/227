Return-Path: <info@gerd-stolpmann.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id A731EBC0B
	for <caml-list@yquem.inria.fr>; Thu, 18 Jan 2007 00:28:11 +0100 (CET)
Received: from moutng.kundenserver.de (moutng.kundenserver.de [212.227.126.179])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l0HNS91E030973
	for <caml-list@inria.fr>; Thu, 18 Jan 2007 00:28:11 +0100
Received: from [84.58.139.132] (helo=gate.lan.gerd-stolpmann.de)
	by mrelayeu.kundenserver.de (node=mrelayeu6) with ESMTP (Nemesis),
	id 0ML29c-1H7KCO3Iff-0006iD; Thu, 18 Jan 2007 00:28:08 +0100
Received: from flakew.lan.gerd-stolpmann.de (fw.lan.gerd-stolpmann.de [192.168.1.1])
	by gate.lan.gerd-stolpmann.de (Postfix) with ESMTP id 85E25C05F;
	Thu, 18 Jan 2007 00:28:08 +0100 (CET)
Subject: Re: [Caml-list] help using json-wheel
From: Gerd Stolpmann <info@gerd-stolpmann.de>
To: Greg Meredith <lgreg.meredith@gmail.com>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <5de3f5ca0701171225n2bcd74d2jf6c59b4e2a56859@mail.gmail.com>
References: <5de3f5ca0701171225n2bcd74d2jf6c59b4e2a56859@mail.gmail.com>
Content-Type: text/plain
Date: Thu, 18 Jan 2007 00:28:07 +0100
Message-Id: <1169076487.6906.26.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.6.1 
Content-Transfer-Encoding: 7bit
X-Provags-ID: kundenserver.de abuse@kundenserver.de login:a6865a839c0178d9aa0ce41878507ea2
X-Miltered: at concorde with ID 45AEB109.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; gerd:01 stolpmann:01 pcre:01 libs:01 libpcre:01 stubs:01 pcre:01 lib:01 compilation:01 ocaml:01 compilation:01 ocamlc:01 ocamlfind:01 ocamlfind:01 netstring:01 

Am Mittwoch, den 17.01.2007, 12:25 -0800 schrieb Greg Meredith:
> All,
> 
> i'm trying to use Martin Jambon's json-wheel. The dependency chain
> backs up into pcre. When i add that to the list of libs, i get a
> missing external which i thought might be in libpcre_stubs.a in the
> pcre pkg lib. But, no joy. Any help would be greatly appreciated. 
> 
> Best wishes,
> 
> --greg
> 
> -*- mode: compilation; default-directory:
> "~/work/src/projex/biosimilarity/reflection/rho/ocaml/" -*-
> Compilation started at Wed Jan 17 12:17:34
> 
> make -k
> ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> `ocamlfind query json-wheel` -c rho.ml
> ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> `ocamlfind query json-wheel` -c vm.ml
> ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> `ocamlfind query json-wheel` -c logic.ml
> ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> `ocamlfind query json-wheel` -c mc.ml
> ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> `ocamlfind query json-wheel` -c geometry.ml
> ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> `ocamlfind query json-wheel` -c geometrize.ml
> ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> `ocamlfind query json-wheel` -c shell.ml
> ocamllex lexer.mll
> 40 states, 261 transitions, table size 1284 bytes
> ocamlyacc parser.mly
> ocamlc -g -c parser.mli
> ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> `ocamlfind query json-wheel` -c lexer.ml
> ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> `ocamlfind query json-wheel` -c parser.ml
> ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> `ocamlfind query json-wheel` -c frontend.ml
> ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> `ocamlfind query json-wheel` -c repl.ml
> ocamlc -ccopt -L`ocamlfind query pcre` -cclib -llibpcre_stubs.a -I
> `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind
> query json-wheel` dynlink.cma pcre.cma netstring.cma jsonwheel.cma
> rho.cmo vm.cmo logic.cmo mc.cmo geometry.cmo geometrize.cmo shell.cmo
> lexer.cmo parser.cmo frontend.cmo repl.cmo -o repl

Why this mess of -I/-L options?

ocamlfind ocamlc -package pcre,netstring,json-wheel -linkpkg \
rho.cmo ... repl.cmo -o repl

should do the trick. My guess would be that it does not find libpcre.so,
or the wrong one.

Gerd

> Error while
> linking /Users/lgm/work/src/devtools/ocaml/godi/lib/ocaml/pkg-lib/pcre/pcre.cma(Pcre): 
> The external function `pcre_isspace_stub' is not available
> make: *** [repl] Error 2
> make: Target `all' not remade because of errors.
> 
> Compilation exited abnormally with code 2 at Wed Jan 17 12:17:34 
> 
> note i get the same behavior if i try the following variations:
> 
> -cclib -lpcre_stubs.a
> 
> or
> 
> pass libpcre_stubs.a as a library to ocamlc instead of passing it on
> as a cclib.
> 
> -- 
> L.G. Meredith
> Partner
> Biosimilarity LLC
> 505 N 72nd St
> Seattle, WA 98103
> 
> +1 206.650.3740 
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
-- 
------------------------------------------------------------
Gerd Stolpmann * Viktoriastr. 45 * 64293 Darmstadt * Germany 
gerd@gerd-stolpmann.de          http://www.gerd-stolpmann.de
Phone: +49-6151-153855                  Fax: +49-6151-997714
------------------------------------------------------------

