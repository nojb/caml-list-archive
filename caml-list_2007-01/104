Return-Path: <thelema314@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.1 required=5.0 tests=AWL,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id D34C8BC0B
	for <caml-list@yquem.inria.fr>; Sun, 14 Jan 2007 20:01:51 +0100 (CET)
Received: from wr-out-0506.google.com (wr-out-0506.google.com [64.233.184.227])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l0EJ1oeO010454
	for <caml-list@yquem.inria.fr>; Sun, 14 Jan 2007 20:01:51 +0100
Received: by wr-out-0506.google.com with SMTP id i28so756205wra
        for <caml-list@yquem.inria.fr>; Sun, 14 Jan 2007 11:01:50 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:user-agent:mime-version:to:cc:subject:references:in-reply-to:content-type:content-transfer-encoding;
        b=Q9FUVhhS2SfWPnWsrD52nCvf01svP6WtRD9VN6I7a1KGyTLuQMMEV38YOUH4dZLb/8/0LZTHB8J0zR5LByWBYW0s2WG0CuZ3jRmrllNRQlC+32ibh5fJtiaYm3OPx90VDWmWOUZgwPt28MdYaeCkGgu56agzQ/Yy0qDnqKqvDIU=
Received: by 10.65.251.1 with SMTP id d1mr4221774qbs.1168801309700;
        Sun, 14 Jan 2007 11:01:49 -0800 (PST)
Received: from ?192.168.0.18? ( [69.155.31.57])
        by mx.google.com with ESMTP id e15sm195328qba.2007.01.14.11.01.48;
        Sun, 14 Jan 2007 11:01:48 -0800 (PST)
Message-ID: <45AA7DF9.7000304@gmail.com>
Date: Sun, 14 Jan 2007 13:01:13 -0600
From: Edgar Friendly <thelema314@gmail.com>
User-Agent: Thunderbird 1.5.0.9 (X11/20061206)
MIME-Version: 1.0
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Ocaml compiler features
References: <45A87011.8080203@gmail.com>	<53c655920701122341l3b95328clf4e9ee40d5656dde@mail.gmail.com>	<45AA6966.8010602@gmail.com> <200701141823.32855.jon@ffconsultancy.com>
In-Reply-To: <200701141823.32855.jon@ffconsultancy.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-j-chkmail-Score: MSGID : 45AA7E1F.000 on discorde : j-chkmail score : X : 0/20 1 0.000 -> 1
X-Miltered: at discorde with ID 45AA7E1F.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 compiler:01 camlp:01 syntaxes:01 parsing:01 'let':01 expr:01 expr:01 edgar:98 lowered:98 wrote:01 precedence:01 caml-list:01 cyclic:01 cyclic:01 

Jon Harrop wrote:
> If you want to make a fair comparison you should at least 
> start by quantifying how common each is, and whether or not your proposed 
> change has knock on effects (e.g. cyclic precedences).
> 
is it possible to have cyclic precedences?  Don't the precedences have
to be linearly ordered?

>> I think I'm arguing that the precedence of if/then/else is too high, and
>> maybe should be lowered.  Of course this isn't a reasonable thing to
>> ask, because it'll likely break existing code.  Anyone with a way to
>> have my cake and eat it too?
> 
> Use camlp4 to create some more revised syntaxes.
> 
I was thinking more along the lines of some parsing trick that would
look for the 'else' without the user having to use a 'let' binding as
the then-expression.

hmm, maybe it'd suffice to change
	|	 if /expr/ then  /expr/  [ else /expr/ ]
to
	|	 if /expr-high-priority-semi/ then /expr-high-priority-semi/ [ else
/expr-high-priority-semi/ ]

>> I want to compare the situation to TeX / LaTeX -- since you can 
>> customize it so much, people fix what they don't like on their local
>> copy, but these improvements never make it upstream to improve the
>> situation for the world.
>>
Does this make sense?  It's like every user having their own forked
system.  Without someone collecting, filtering, editing, integrating
improvements, improvements stay scattered and of little use to the
community.

E.

