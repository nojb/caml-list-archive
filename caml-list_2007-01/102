Return-Path: <tab@snarc.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id F3CEABC0B
	for <caml-list@yquem.inria.fr>; Sun, 14 Jan 2007 19:42:21 +0100 (CET)
Received: from hades.snarc.org (hades.snarc.org [212.85.152.11])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l0EIgJvc026136
	for <caml-list@yquem.inria.fr>; Sun, 14 Jan 2007 19:42:21 +0100
Received: by hades.snarc.org (Postfix, from userid 1000)
	id 3A2961B481; Sun, 14 Jan 2007 19:41:48 +0100 (CET)
Date: Sun, 14 Jan 2007 19:41:48 +0100
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Ocaml compiler features
Message-ID: <20070114184148.GA26213@snarc.org>
References: <45A87011.8080203@gmail.com> <53c655920701122341l3b95328clf4e9ee40d5656dde@mail.gmail.com> <45AA6966.8010602@gmail.com> <200701141823.32855.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200701141823.32855.jon@ffconsultancy.com>
X-Warning: Email may contain unsmilyfied humor and/or satire.
User-Agent: Mutt/1.5.13 (2006-08-11)
From: tab@snarc.org (Vincent Hanquez)
X-Miltered: at concorde with ID 45AA798B.002 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 compiler:01 camlp:01 compiler:01 syntax:01 camlp:01 ocaml:01 syntax:01 syntaxes:01 wrote:01 caml-list:01 define:01 construct:02 productive:04 vincent:07 

On Sun, Jan 14, 2007 at 06:23:32PM +0000, Jon Harrop wrote:
> > > > If you're bored with
> > > > begin/end a good solution might be to define a new construct using
> > > > camlp4 instead of hacking the compiler. It's the good advice in
> > > > general for syntax problems.
> >
> > Writing things in camlp4 could help me, but won't improve the world of
> > ocaml.
> 
> It will if you do something more productive with camlp4, like try...finally 
> or ...

and create lots of different syntax which make the code unsharable at
the end (each one using different syntaxes).

I think camlp4 is the not the proper way to extends the language, and is
definitevely *NOT* going to improve the world of OCaml.

-- 
Vincent Hanquez

