Return-Path: <lists@philippewang.info>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL,HTML_MESSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id A0F6CBC0B
	for <caml-list@yquem.inria.fr>; Tue, 16 Jan 2007 08:59:10 +0100 (CET)
Received: from 42.mail-out.ovh.net (42.mail-out.ovh.net [213.251.189.42])
	by discorde.inria.fr (8.13.6/8.13.6) with SMTP id l0G7xAZM020931
	for <caml-list@inria.fr>; Tue, 16 Jan 2007 08:59:10 +0100
Received: (qmail 5772 invoked by uid 503); 16 Jan 2007 07:59:16 -0000
Received: from b6.ovh.net (HELO mail92.ha.ovh.net) (213.186.33.56)
  by 42.mail-out.ovh.net with SMTP; 16 Jan 2007 07:59:16 -0000
Received: from b0.ovh.net (HELO queue-out) (213.186.33.50)
	by b0.ovh.net with SMTP; 16 Jan 2007 07:59:12 -0000
Received: from vil93-4-82-227-140-227.fbx.proxad.net (HELO ?192.168.1.222?) (lists%philippewang.info@82.227.140.227)
  by ns0.ovh.net with SMTP; 16 Jan 2007 07:59:11 -0000
In-Reply-To: <c12912350701151724s320b48a0udcff5af195c75386@mail.gmail.com>
References: <45A03E09.3050907@motion-twin.com> <A63CC9DE-DE06-47D0-975B-2ED207D37F52@epfl.ch> <c12912350701151333x6e089eafr47092354f73294b7@mail.gmail.com> <71217FB6-B868-40DA-9019-230D9EEA7FEB@epfl.ch> <c12912350701151724s320b48a0udcff5af195c75386@mail.gmail.com>
Mime-Version: 1.0 (Apple Message framework v752.3)
Content-Type: multipart/alternative; boundary=Apple-Mail-3--498914907
Message-Id: <13C8AAD6-95A2-4080-A7C2-A318D52E66F8@philippewang.info>
Cc: caml-list@inria.fr
From: Philippe Wang <lists@philippewang.info>
Subject: Re: [Caml-list] Building OSX Universal Binaries
Date: Tue, 16 Jan 2007 08:58:49 +0100
To: "Corey O'Connor" <coreyoconnor@gmail.com>
X-Mailer: Apple Mail (2.752.3)
X-Ovh-Remote: 82.227.140.227 (vil93-4-82-227-140-227.fbx.proxad.net)
X-Ovh-Local: 213.186.33.20 (ns0.ovh.net)
X-j-chkmail-Score: MSGID : 45AC85CE.000 on discorde : j-chkmail score : X : 0/20 1 0.000 -> 1
X-Miltered: at discorde with ID 45AC85CE.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; osx:01 bunzli:01 buenzli:01 ocaml:01 caml's:01 haskell:01 compiler:01 ocamlopt:01 gcc:01 bunzli:01 buenzli:01 ocaml:01 caml's:01 haskell:01 compiler:01 


--Apple-Mail-3--498914907
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=ISO-8859-1;
	delsp=yes;
	format=flowed


On 16 janv. 07, at 02:24, Corey O'Connor wrote:

>
>
> On 1/15/07, Daniel B=FCnzli <daniel.buenzli@epfl.ch> wrote:
>
> Le 15 janv. 07 =E0 22:33, Corey O'Connor a =E9crit :
>
> > I don't think you need access to both a ppc and intel machine: Just
> > an intel machine would suffice. Two separate installs of ocaml, One
> > PPC and one Intel, then using some appropriate PATH variable magic
> > to  switch between compiling with one vs the other. Then lipo at
> > the end. Should work OK.
>
> Maybe, then I guess a ppc machine would also be enough. Do you happen
> to know how to trick caml's ./configure ?
>
> I don't think a ppc machine would be enough since a ppc mac cannot =20
> run x86 programs but a x86 mac can run both ppc and x86 programs.
> Not sure how to trick configure either. I've done this process =20
> before with Haskell programs, but in that case used pre-built =20
> binaries of the compiler for each platform.

However, ocamlopt can be configured to produce x86 asm on a PPC, =20
can't it ?
And XCode can build universal binaries on both ppc and x86...
So I guess you just need to call gcc with the right parameters...

(I'll try when I have time...)

--
Philippe Wang=

--Apple-Mail-3--498914907
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=ISO-8859-1

<HTML><BODY style=3D"word-wrap: break-word; -khtml-nbsp-mode: space; =
-khtml-line-break: after-white-space; "><BR><DIV><DIV>On 16 janv. 07, at =
02:24, Corey O'Connor wrote:</DIV><BR =
class=3D"Apple-interchange-newline"><BLOCKQUOTE =
type=3D"cite"><BR><BR><DIV><SPAN class=3D"gmail_quote">On 1/15/07, <B =
class=3D"gmail_sendername">Daniel B=FCnzli</B> &lt;<A =
href=3D"mailto:daniel.buenzli@epfl.ch">daniel.buenzli@epfl.ch</A>&gt; =
wrote:</SPAN><BLOCKQUOTE class=3D"gmail_quote" style=3D"border-left: 1px =
solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: =
1ex;"> <BR>Le 15 janv. 07 =E0 22:33, Corey O'Connor a =E9crit =
:<BR><BR>&gt; I don't think you need access to both a ppc and intel =
machine: Just<BR>&gt; an intel machine would suffice. Two separate =
installs of ocaml, One<BR>&gt; PPC and one Intel, then using some =
appropriate PATH variable magic <BR>&gt; to=A0=A0switch between =
compiling with one vs the other. Then lipo at<BR>&gt; the end. Should =
work OK.<BR><BR>Maybe, then I guess a ppc machine would also be enough. =
Do you happen<BR>to know how to trick caml's ./configure ? =
</BLOCKQUOTE><DIV><BR>I don't think a ppc machine would be enough since =
a ppc mac cannot run x86 programs but a x86 mac can run both ppc and x86 =
programs.=A0 <BR>Not sure how to trick configure either. I've done this =
process before with Haskell programs, but in that case used pre-built =
binaries of the compiler for each =
platform.=A0</DIV></DIV></BLOCKQUOTE><DIV><BR =
class=3D"khtml-block-placeholder"></DIV><DIV>However, ocamlopt can be =
configured to produce x86 asm on a PPC, can't it ?</DIV><DIV>And XCode =
can build universal binaries on both ppc and x86...</DIV>So I guess you =
just need to call gcc with the right parameters...</DIV><BR><DIV>(I'll =
try when I have time...)</DIV><DIV><BR =
class=3D"khtml-block-placeholder"></DIV><DIV>--</DIV><DIV>Philippe =
Wang</DIV></BODY></HTML>=

--Apple-Mail-3--498914907--

