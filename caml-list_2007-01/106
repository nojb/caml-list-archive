Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 88C67BC65
	for <caml-list@yquem.inria.fr>; Mon, 15 Jan 2007 00:20:54 +0100 (CET)
Received: from pih-relay04.plus.net (pih-relay04.plus.net [212.159.14.131])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l0ENKrQc032677
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Mon, 15 Jan 2007 00:20:54 +0100
Received: from [80.229.56.224] (helo=[10.0.0.5])
	 by pih-relay04.plus.net with esmtp (Exim) id 1H6Eei-0005OQ-29
	for caml-list@yquem.inria.fr; Sun, 14 Jan 2007 23:20:52 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Ocaml compiler features
Date: Sun, 14 Jan 2007 20:49:57 +0000
User-Agent: KMail/1.9.5
References: <45A87011.8080203@gmail.com> <200701141823.32855.jon@ffconsultancy.com> <20070114184148.GA26213@snarc.org>
In-Reply-To: <20070114184148.GA26213@snarc.org>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200701142049.57959.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 45AABAD5.003 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 compiler:01 camlp:01 syntax:01 syntaxes:01 camlp:01 ocaml:01 haskell:01 overloading:01 optimise:01 frog:98 wrote:01 wrote:01 caml-list:01 macros:01 

On Sunday 14 January 2007 18:41, you wrote:
> On Sun, Jan 14, 2007 at 06:23:32PM +0000, Jon Harrop wrote:
> > It will if you do something more productive with camlp4, like
> > try...finally or ...
>
> and create lots of different syntax which make the code unsharable at
> the end (each one using different syntaxes).

Does it make code unsharable or can you apply multiple camlp4 macros to one 
piece of code?

> I think camlp4 is the not the proper way to extends the language, and is
> definitevely *NOT* going to improve the world of OCaml.

Camlp4 may be the best we have. I can't wait to see the next generation...

Playing with Haskell and F# has opened my eyes a bit. F#'s operator 
overloading and active patterns will make my code much nicer. Being lazier 
can simplify things until you have to optimise, in which case it suddenly 
becomes really complicated and error prone.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

