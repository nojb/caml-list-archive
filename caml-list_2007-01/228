Return-Path: <lgreg.meredith@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.4 required=5.0 tests=HTML_MESSAGE,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 48D6CBC0B
	for <caml-list@yquem.inria.fr>; Thu, 18 Jan 2007 00:59:45 +0100 (CET)
Received: from nf-out-0910.google.com (nf-out-0910.google.com [64.233.182.185])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l0HNxirG009002
	for <caml-list@inria.fr>; Thu, 18 Jan 2007 00:59:44 +0100
Received: by nf-out-0910.google.com with SMTP id m19so25518nfc
        for <caml-list@inria.fr>; Wed, 17 Jan 2007 15:59:44 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=XFl2lZJqddwO8v24iVh+HezhYdqkY8L8aMD7yLAn/R9KGYLqqHwC4SjkLAHUr4ZIcVFfwCqdgyLDgPmKANYo7VS/3OdNnsqxY0GA38Qj5SbttwM7b7u7wnFxlaRhOZDJmU2X+wMvwqXMB15Vt26qiQOrtUoWD+W8O3+PuLob34c=
Received: by 10.82.120.15 with SMTP id s15mr43233buc.1169078383682;
        Wed, 17 Jan 2007 15:59:43 -0800 (PST)
Received: by 10.82.125.16 with HTTP; Wed, 17 Jan 2007 15:59:43 -0800 (PST)
Message-ID: <5de3f5ca0701171559h3c75d473ue9721b1fa7ad0ba1@mail.gmail.com>
Date: Wed, 17 Jan 2007 15:59:43 -0800
From: "Greg Meredith" <lgreg.meredith@gmail.com>
To: "Gerd Stolpmann" <info@gerd-stolpmann.de>
Subject: Re: [Caml-list] help using json-wheel
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <1169076487.6906.26.camel@localhost.localdomain>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_157636_9790206.1169078383251"
References: <5de3f5ca0701171225n2bcd74d2jf6c59b4e2a56859@mail.gmail.com>
	 <1169076487.6906.26.camel@localhost.localdomain>
X-j-chkmail-Score: MSGID : 45AEB870.001 on discorde : j-chkmail score : X : 0/20 1 0.000 -> 1
X-Miltered: at discorde with ID 45AEB870.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; gerd:01 ocamlfind:01 ocaml:01 ocaml:01 gerd:01 stolpmann:01 pcre:01 libs:01 libpcre:01 stubs:01 pcre:01 lib:01 compilation:01 compilation:01 ocamlc:01 

------=_Part_157636_9790206.1169078383251
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Gerd, et al,

Martin wrote to and nudged me toward the better use of ocamlfind. Many
thanks to all who have responded. My usage pattern of OCaml hadn't put me in
contact with this aspect of the OCaml environment. How could have gotten by
without it?

Best wishes,

--greg

On 1/17/07, Gerd Stolpmann <info@gerd-stolpmann.de> wrote:
>
> Am Mittwoch, den 17.01.2007, 12:25 -0800 schrieb Greg Meredith:
> > All,
> >
> > i'm trying to use Martin Jambon's json-wheel. The dependency chain
> > backs up into pcre. When i add that to the list of libs, i get a
> > missing external which i thought might be in libpcre_stubs.a in the
> > pcre pkg lib. But, no joy. Any help would be greatly appreciated.
> >
> > Best wishes,
> >
> > --greg
> >
> > -*- mode: compilation; default-directory:
> > "~/work/src/projex/biosimilarity/reflection/rho/ocaml/" -*-
> > Compilation started at Wed Jan 17 12:17:34
> >
> > make -k
> > ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> > `ocamlfind query json-wheel` -c rho.ml
> > ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> > `ocamlfind query json-wheel` -c vm.ml
> > ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> > `ocamlfind query json-wheel` -c logic.ml
> > ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> > `ocamlfind query json-wheel` -c mc.ml
> > ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> > `ocamlfind query json-wheel` -c geometry.ml
> > ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> > `ocamlfind query json-wheel` -c geometrize.ml
> > ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> > `ocamlfind query json-wheel` -c shell.ml
> > ocamllex lexer.mll
> > 40 states, 261 transitions, table size 1284 bytes
> > ocamlyacc parser.mly
> > ocamlc -g -c parser.mli
> > ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> > `ocamlfind query json-wheel` -c lexer.ml
> > ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> > `ocamlfind query json-wheel` -c parser.ml
> > ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> > `ocamlfind query json-wheel` -c frontend.ml
> > ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
> > `ocamlfind query json-wheel` -c repl.ml
> > ocamlc -ccopt -L`ocamlfind query pcre` -cclib -llibpcre_stubs.a -I
> > `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind
> > query json-wheel` dynlink.cma pcre.cma netstring.cma jsonwheel.cma
> > rho.cmo vm.cmo logic.cmo mc.cmo geometry.cmo geometrize.cmo shell.cmo
> > lexer.cmo parser.cmo frontend.cmo repl.cmo -o repl
>
> Why this mess of -I/-L options?
>
> ocamlfind ocamlc -package pcre,netstring,json-wheel -linkpkg \
> rho.cmo ... repl.cmo -o repl
>
> should do the trick. My guess would be that it does not find libpcre.so,
> or the wrong one.
>
> Gerd
>
> > Error while
> > linking
> /Users/lgm/work/src/devtools/ocaml/godi/lib/ocaml/pkg-lib/pcre/pcre.cma(Pcre):
> > The external function `pcre_isspace_stub' is not available
> > make: *** [repl] Error 2
> > make: Target `all' not remade because of errors.
> >
> > Compilation exited abnormally with code 2 at Wed Jan 17 12:17:34
> >
> > note i get the same behavior if i try the following variations:
> >
> > -cclib -lpcre_stubs.a
> >
> > or
> >
> > pass libpcre_stubs.a as a library to ocamlc instead of passing it on
> > as a cclib.
> >
> > --
> > L.G. Meredith
> > Partner
> > Biosimilarity LLC
> > 505 N 72nd St
> > Seattle, WA 98103
> >
> > +1 206.650.3740
> > _______________________________________________
> > Caml-list mailing list. Subscription management:
> > http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> > Archives: http://caml.inria.fr
> > Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> > Bug reports: http://caml.inria.fr/bin/caml-bugs
> --
> ------------------------------------------------------------
> Gerd Stolpmann * Viktoriastr. 45 * 64293 Darmstadt * Germany
> gerd@gerd-stolpmann.de          http://www.gerd-stolpmann.de
> Phone: +49-6151-153855                  Fax: +49-6151-997714
> ------------------------------------------------------------
>
>


-- 
Meredith Gregory
Partner
Biosimilarity LLC
505 N 72nd St
Seattle, WA 98103

+1 206.650.3740

------=_Part_157636_9790206.1169078383251
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Gerd, et al,<br><br>Martin wrote to and nudged me toward the better use of ocamlfind. Many thanks to all who have responded. My usage pattern of OCaml hadn&#39;t put me in contact with this aspect of the OCaml environment. How could have gotten by without it?
<br><br>Best wishes,<br><br>--greg<br><br><div><span class="gmail_quote">On 1/17/07, <b class="gmail_sendername">Gerd Stolpmann</b> &lt;<a href="mailto:info@gerd-stolpmann.de">info@gerd-stolpmann.de</a>&gt; wrote:</span><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
Am Mittwoch, den 17.01.2007, 12:25 -0800 schrieb Greg Meredith:<br>&gt; All,<br>&gt;<br>&gt; i&#39;m trying to use Martin Jambon&#39;s json-wheel. The dependency chain<br>&gt; backs up into pcre. When i add that to the list of libs, i get a
<br>&gt; missing external which i thought might be in libpcre_stubs.a in the<br>&gt; pcre pkg lib. But, no joy. Any help would be greatly appreciated.<br>&gt;<br>&gt; Best wishes,<br>&gt;<br>&gt; --greg<br>&gt;<br>&gt; -*- mode: compilation; default-directory:
<br>&gt; &quot;~/work/src/projex/biosimilarity/reflection/rho/ocaml/&quot; -*-<br>&gt; Compilation started at Wed Jan 17 12:17:34<br>&gt;<br>&gt; make -k<br>&gt; ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
<br>&gt; `ocamlfind query json-wheel` -c <a href="http://rho.ml">rho.ml</a><br>&gt; ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I<br>&gt; `ocamlfind query json-wheel` -c <a href="http://vm.ml">vm.ml
</a><br>&gt; ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I<br>&gt; `ocamlfind query json-wheel` -c <a href="http://logic.ml">logic.ml</a><br>&gt; ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
<br>&gt; `ocamlfind query json-wheel` -c <a href="http://mc.ml">mc.ml</a><br>&gt; ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I<br>&gt; `ocamlfind query json-wheel` -c <a href="http://geometry.ml">
geometry.ml</a><br>&gt; ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I<br>&gt; `ocamlfind query json-wheel` -c <a href="http://geometrize.ml">geometrize.ml</a><br>&gt; ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
<br>&gt; `ocamlfind query json-wheel` -c <a href="http://shell.ml">shell.ml</a><br>&gt; ocamllex lexer.mll<br>&gt; 40 states, 261 transitions, table size 1284 bytes<br>&gt; ocamlyacc parser.mly<br>&gt; ocamlc -g -c parser.mli
<br>&gt; ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I<br>&gt; `ocamlfind query json-wheel` -c <a href="http://lexer.ml">lexer.ml</a><br>&gt; ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
<br>&gt; `ocamlfind query json-wheel` -c <a href="http://parser.ml">parser.ml</a><br>&gt; ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I<br>&gt; `ocamlfind query json-wheel` -c <a href="http://frontend.ml">
frontend.ml</a><br>&gt; ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I<br>&gt; `ocamlfind query json-wheel` -c <a href="http://repl.ml">repl.ml</a><br>&gt; ocamlc -ccopt -L`ocamlfind query pcre` -cclib -llibpcre_stubs.a -I
<br>&gt; `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind<br>&gt; query json-wheel` dynlink.cma pcre.cma netstring.cma jsonwheel.cma<br>&gt; rho.cmo vm.cmo logic.cmo mc.cmo geometry.cmo geometrize.cmo shell.cmo
<br>&gt; lexer.cmo parser.cmo frontend.cmo repl.cmo -o repl<br><br>Why this mess of -I/-L options?<br><br>ocamlfind ocamlc -package pcre,netstring,json-wheel -linkpkg \<br>rho.cmo ... repl.cmo -o repl<br><br>should do the trick. My guess would be that it does not find 
libpcre.so,<br>or the wrong one.<br><br>Gerd<br><br>&gt; Error while<br>&gt; linking /Users/lgm/work/src/devtools/ocaml/godi/lib/ocaml/pkg-lib/pcre/pcre.cma(Pcre):<br>&gt; The external function `pcre_isspace_stub&#39; is not available
<br>&gt; make: *** [repl] Error 2<br>&gt; make: Target `all&#39; not remade because of errors.<br>&gt;<br>&gt; Compilation exited abnormally with code 2 at Wed Jan 17 12:17:34<br>&gt;<br>&gt; note i get the same behavior if i try the following variations:
<br>&gt;<br>&gt; -cclib -lpcre_stubs.a<br>&gt;<br>&gt; or<br>&gt;<br>&gt; pass libpcre_stubs.a as a library to ocamlc instead of passing it on<br>&gt; as a cclib.<br>&gt;<br>&gt; --<br>&gt; L.G. Meredith<br>&gt; Partner<br>
&gt; Biosimilarity LLC<br>&gt; 505 N 72nd St<br>&gt; Seattle, WA 98103<br>&gt;<br>&gt; +1 206.650.3740<br>&gt; _______________________________________________<br>&gt; Caml-list mailing list. Subscription management:<br>&gt; 
<a href="http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list">http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list</a><br>&gt; Archives: <a href="http://caml.inria.fr">http://caml.inria.fr</a><br>&gt; Beginner&#39;s list: 
<a href="http://groups.yahoo.com/group/ocaml_beginners">http://groups.yahoo.com/group/ocaml_beginners</a><br>&gt; Bug reports: <a href="http://caml.inria.fr/bin/caml-bugs">http://caml.inria.fr/bin/caml-bugs</a><br>--<br>------------------------------------------------------------
<br>Gerd Stolpmann * Viktoriastr. 45 * 64293 Darmstadt * Germany<br><a href="mailto:gerd@gerd-stolpmann.de">gerd@gerd-stolpmann.de</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.gerd-stolpmann.de">http://www.gerd-stolpmann.de</a><br>Phone: +49-6151-153855&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Fax: +49-6151-997714
<br>------------------------------------------------------------<br><br></blockquote></div><br><br clear="all"><br>-- <br>Meredith Gregory<br>Partner<br>Biosimilarity LLC<br>505 N 72nd St<br>Seattle, WA 98103<br><br>+1 206.650.3740


------=_Part_157636_9790206.1169078383251--

