Return-Path: <lgreg.meredith@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.5 required=5.0 tests=AWL,HTML_10_20,HTML_MESSAGE,
	SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id A8741BC0B
	for <caml-list@yquem.inria.fr>; Wed, 17 Jan 2007 21:26:02 +0100 (CET)
Received: from ug-out-1314.google.com (ug-out-1314.google.com [66.249.92.168])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l0HKQ2rG003386
	for <caml-list@inria.fr>; Wed, 17 Jan 2007 21:26:02 +0100
Received: by ug-out-1314.google.com with SMTP id k3so1374891ugf
        for <caml-list@inria.fr>; Wed, 17 Jan 2007 12:26:02 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=beta;
        h=received:message-id:date:from:to:subject:mime-version:content-type;
        b=PorEwmtyCkqFji4+aSOEsnEe34/zva+6qabOLxeCXOkdIPVyzJaBAqmnFNa6PA7wPZop1VZWhL+w5kaG2c58tCmLDj4nZcF7tgFuDbNlCkcnG2RGN6Qs0ulEKCo0p4fyE8bcYA7nl6dY/4iSUQEOUuRY3AWKYSRTj+Vl9vrCngg=
Received: by 10.82.167.5 with SMTP id p5mr1639726bue.1169065559334;
        Wed, 17 Jan 2007 12:25:59 -0800 (PST)
Received: by 10.82.125.16 with HTTP; Wed, 17 Jan 2007 12:25:59 -0800 (PST)
Message-ID: <5de3f5ca0701171225n2bcd74d2jf6c59b4e2a56859@mail.gmail.com>
Date: Wed, 17 Jan 2007 12:25:59 -0800
From: "Greg Meredith" <lgreg.meredith@gmail.com>
To: caml-list <caml-list@inria.fr>
Subject: help using json-wheel
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_153777_19254381.1169065559158"
X-j-chkmail-Score: MSGID : 45AE865A.000 on discorde : j-chkmail score : X : 0/20 1 0.000 -> 1
X-Miltered: at discorde with ID 45AE865A.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; pcre:01 libs:01 libpcre:01 stubs:01 pcre:01 lib:01 compilation:01 ocaml:01 compilation:01 ocamlc:01 ocamlfind:01 ocamlfind:01 netstring:01 ocamlc:01 netstring:01 

------=_Part_153777_19254381.1169065559158
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

All,

i'm trying to use Martin Jambon's json-wheel. The dependency chain backs up
into pcre. When i add that to the list of libs, i get a missing external
which i thought might be in libpcre_stubs.a in the pcre pkg lib. But, no
joy. Any help would be greatly appreciated.

Best wishes,

--greg

-*- mode: compilation; default-directory:
"~/work/src/projex/biosimilarity/reflection/rho/ocaml/" -*-
Compilation started at Wed Jan 17 12:17:34

make -k
ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
`ocamlfind query json-wheel` -c rho.ml
ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
`ocamlfind query json-wheel` -c vm.ml
ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
`ocamlfind query json-wheel` -c logic.ml
ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
`ocamlfind query json-wheel` -c mc.ml
ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
`ocamlfind query json-wheel` -c geometry.ml
ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
`ocamlfind query json-wheel` -c geometrize.ml
ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
`ocamlfind query json-wheel` -c shell.ml
ocamllex lexer.mll
40 states, 261 transitions, table size 1284 bytes
ocamlyacc parser.mly
ocamlc -g -c parser.mli
ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
`ocamlfind query json-wheel` -c lexer.ml
ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
`ocamlfind query json-wheel` -c parser.ml
ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
`ocamlfind query json-wheel` -c frontend.ml
ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I
`ocamlfind query json-wheel` -c repl.ml
ocamlc -ccopt -L`ocamlfind query pcre` -cclib -llibpcre_stubs.a -I
`ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query
json-wheel` dynlink.cma pcre.cma netstring.cma jsonwheel.cma rho.cmo vm.cmo
logic.cmo mc.cmo geometry.cmo geometrize.cmo shell.cmo lexer.cmo parser.cmo
frontend.cmo repl.cmo -o repl
Error while linking
/Users/lgm/work/src/devtools/ocaml/godi/lib/ocaml/pkg-lib/pcre/pcre.cma(Pcre):
The external function `pcre_isspace_stub' is not available
make: *** [repl] Error 2
make: Target `all' not remade because of errors.

Compilation exited abnormally with code 2 at Wed Jan 17 12:17:34

note i get the same behavior if i try the following variations:

-cclib -lpcre_stubs.a

or

pass libpcre_stubs.a as a library to ocamlc instead of passing it on as a
cclib.

-- 
L.G. Meredith
Partner
Biosimilarity LLC
505 N 72nd St
Seattle, WA 98103

+1 206.650.3740

------=_Part_153777_19254381.1169065559158
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

All,<br><br>i&#39;m trying to use Martin Jambon&#39;s json-wheel. The dependency chain backs up into pcre. When i add that to the list of libs, i get a missing external which i thought might be in libpcre_stubs.a in the pcre pkg lib. But, no joy. Any help would be greatly appreciated.
<br><br>Best wishes,<br><br>--greg<br><br>-*- mode: compilation; default-directory: &quot;~/work/src/projex/biosimilarity/reflection/rho/ocaml/&quot; -*-<br>Compilation started at Wed Jan 17 12:17:34<br><br>make -k<br>ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` -c 
<a href="http://rho.ml">rho.ml</a><br>ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` -c <a href="http://vm.ml">vm.ml</a><br>ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` -c 
<a href="http://logic.ml">logic.ml</a><br>ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` -c <a href="http://mc.ml">mc.ml</a><br>ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` -c 
<a href="http://geometry.ml">geometry.ml</a><br>ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` -c <a href="http://geometrize.ml">geometrize.ml</a><br>ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` -c 
<a href="http://shell.ml">shell.ml</a><br>ocamllex lexer.mll<br>40 states, 261 transitions, table size 1284 bytes<br>ocamlyacc parser.mly<br>ocamlc -g -c parser.mli<br>ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` -c 
<a href="http://lexer.ml">lexer.ml</a><br>ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` -c <a href="http://parser.ml">parser.ml</a><br>ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` -c 
<a href="http://frontend.ml">frontend.ml</a><br>ocamlc -g -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` -c <a href="http://repl.ml">repl.ml</a><br>ocamlc -ccopt -L`ocamlfind query pcre` -cclib -llibpcre_stubs.a -I `ocamlfind query pcre` -I `ocamlfind query netstring` -I `ocamlfind query json-wheel` 
dynlink.cma pcre.cma netstring.cma jsonwheel.cma rho.cmo vm.cmo logic.cmo mc.cmo geometry.cmo geometrize.cmo shell.cmo lexer.cmo parser.cmo frontend.cmo repl.cmo -o repl<br>Error while linking /Users/lgm/work/src/devtools/ocaml/godi/lib/ocaml/pkg-lib/pcre/pcre.cma(Pcre):
<br>The external function `pcre_isspace_stub&#39; is not available<br>make: *** [repl] Error 2<br>make: Target `all&#39; not remade because of errors.<br><br>Compilation exited abnormally with code 2 at Wed Jan 17 12:17:34
<br><br>note i get the same behavior if i try the following variations:<br><br>-cclib -lpcre_stubs.a<br><br>or<br><br>pass libpcre_stubs.a as a library to ocamlc instead of passing it on as a cclib.<br clear="all"><br>-- 
<br>L.G. Meredith<br>Partner<br>Biosimilarity LLC<br>505 N 72nd St<br>Seattle, WA 98103<br><br>+1 206.650.3740

------=_Part_153777_19254381.1169065559158--

