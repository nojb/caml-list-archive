Return-Path: <Xavier.Leroy@inria.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 4BD17BC0B
	for <caml-list@yquem.inria.fr>; Sun, 21 Jan 2007 18:07:05 +0100 (CET)
Received: from smtp5-g19.free.fr (smtp5-g19.free.fr [212.27.42.35])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l0LH74fC032285
	for <caml-list@yquem.inria.fr>; Sun, 21 Jan 2007 18:07:05 +0100
Received: from [192.168.1.2] (che78-2-82-237-71-191.fbx.proxad.net [82.237.71.191])
	by smtp5-g19.free.fr (Postfix) with ESMTP id B25CC27A49
	for <caml-list@yquem.inria.fr>; Sun, 21 Jan 2007 18:07:04 +0100 (CET)
Message-ID: <45B39DB8.7000409@inria.fr>
Date: Sun, 21 Jan 2007 18:07:04 +0100
From: Xavier Leroy <Xavier.Leroy@inria.fr>
User-Agent: Mozilla Thunderbird 1.0.2 (X11/20050317)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] native-code stack backtraces (was: Ocaml compiler
 features)
References: <45A87011.8080203@gmail.com> <20070115103556.GB12311@furbychan.cocan.org> <20070115142434.GA1753@snarc.org> <wwuejpvbbrt.fsf@tandem.cs.ru.nl> <20070116090803.GB14494@snarc.org>
In-Reply-To: <20070116090803.GB14494@snarc.org>
X-Enigmail-Version: 0.91.0.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 45B39DB8.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; native-code:01 stack:01 ocaml:01 compiler:01 popl:01 native-code:01 backtrace:01 ocamlopt:01 backtrace:01 implements:01 bytecode:01 markus:01 mottl's:01 powerpc:01 exception:01 

Among the 150 messages that accumulated while I was at the POPL
conference, I notice that the topic of native-code exception
backtraces is making its come-back:

> Well, seeing that the very useful native exception backtrace patch has
been
> sitting idle (acknowledged) for more than a year, I think that's not
> working it out too well :\

Like elephants, I'm slow, but never forget :-)  You'll be pleased to
learn that I've been working recently on exception backtraces for
ocamlopt.  The code (nearly finished) currently sits in the
"opt_backtrace" branch of the repository and should be part of
release 3.10.

It implements an exception backtrace mechanism similar to that already
available in bytecode, but different from Markus Mottl's call backtrace.
The two kinds of backtraces are incomparable in general, but while
Markus's solution is quite low overhead already, mine has even lower
overhead, especially in terms of code size.

Native-code backtraces will be available initially for the following
back-ends: i386, amd64 and powerpc, both for Unix-like OS and for
Windows.  Ports to other back-ends will be considered if there is
sufficient demand.

- Xavier Leroy

