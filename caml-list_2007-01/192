Return-Path: <fw@deneb.enyo.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 37ADDBC0B
	for <caml-list@yquem.inria.fr>; Tue, 16 Jan 2007 22:15:40 +0100 (CET)
Received: from mail.enyo.de (mail.enyo.de [212.9.189.167])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l0GLFcji025401
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Tue, 16 Jan 2007 22:15:39 +0100
Received: from deneb.vpn.enyo.de ([212.9.189.177] helo=deneb.enyo.de)
	by mail.enyo.de with esmtp id 1H6veb-0004xM-Ji; Tue, 16 Jan 2007 22:15:37 +0100
Received: from fw by deneb.enyo.de with local (Exim 4.63)
	(envelope-from <fw@deneb.enyo.de>)
	id 1H6veM-0005dv-Rg; Tue, 16 Jan 2007 22:15:22 +0100
From: Florian Weimer <fw@deneb.enyo.de>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Ocaml compiler features
References: <45A87011.8080203@gmail.com> <20070116150027.GA17519@snarc.org>
	<1168969667.5178.18.camel@rosella.wigram>
	<200701161942.01541.jon@ffconsultancy.com>
Date: Tue, 16 Jan 2007 22:15:22 +0100
In-Reply-To: <200701161942.01541.jon@ffconsultancy.com> (Jon Harrop's message
	of "Tue, 16 Jan 2007 19:42:01 +0000")
Message-ID: <87zm8iu105.fsf@mid.deneb.enyo.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at discorde with ID 45AD407A.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 compiler:01 error-prone:01 abstraction:01 caml-list:01 exceptions:01 florian:03 preserve:03 library:03 raise:03 undo:06 rather:08 libraries:11 think:12 difficult:12 

* Jon Harrop:

> If you're writing a library where users can raise exceptions, you
> must be careful to undo state changes.

And such recovery code tends to be rather error-prone (and difficult
to test).  I don't think you want to see much of that outside
libraries which need such code to preserve some abstraction.

