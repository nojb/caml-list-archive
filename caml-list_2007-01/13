Return-Path: <H.Tews@cs.ru.nl>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 32796BC0A
	for <caml-list@yquem.inria.fr>; Tue,  2 Jan 2007 13:50:47 +0100 (CET)
Received: from smeltpunt.science.ru.nl (smeltpunt.science.ru.nl [131.174.16.145])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l02Cokp4003716
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@yquem.inria.fr>; Tue, 2 Jan 2007 13:50:47 +0100
Received: from tandem.cs.ru.nl [131.174.142.18]  (helo=tandem.cs.ru.nl)
	by smeltpunt.science.ru.nl (8.13.7/5.10) with ESMTP id l02CojqY029833
	for <caml-list@yquem.inria.fr>; Tue, 2 Jan 2007 13:50:46 +0100 (MET)
Received: from tews by tandem.cs.ru.nl with local (Exim 4.63)
	(envelope-from <tews@tandem.cs.ru.nl>)
	id 1H1j6L-00051d-VA
	for caml-list@yquem.inria.fr; Tue, 02 Jan 2007 13:50:45 +0100
From: Hendrik Tews <H.Tews@cs.ru.nl>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Type equalities in sub modules
References: <F62629D5-5795-45BA-9A12-2A5727334C66@epfl.ch>
Date: Tue, 02 Jan 2007 13:50:45 +0100
In-Reply-To: <F62629D5-5795-45BA-9A12-2A5727334C66@epfl.ch> (Daniel
 =?iso-8859-1?Q?B=FCnzli's?=
	message of "Sun, 31 Dec 2006 10:35:29 +0100")
Message-ID: <wwu4pr94moq.fsf@tandem.cs.ru.nl>
User-Agent: Gnus/5.110006 (No Gnus v0.6) Emacs/21.4 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Scanned-By: MIMEDefang 2.56 on 131.174.16.145
X-Miltered: at concorde with ID 459A5526.001 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; hendrik:01 tews:01 tews:01 bunzli:01 buenzli:01 struct:01 struct:01 sig:01 writes:01 caml-list:01 int:01 int:01 modules:02 epfl:02 module:03 

Daniel Bünzli <daniel.buenzli@epfl.ch> writes:

   In the example below, is there any way to achieve M.B.t = M.t without
   introducing the intermediate mt type ?

   > module M = struct
   >   type t = int
   >   module B = struct
   >     type mt = t
   >     type t = mt
   >   end
   > end

How about

module M = struct
  type t = int
  module BF(T : sig type mt end) = struct
    type t = T.mt
  end
  module B = BF(struct type mt = t end)
end

??

Hendirk

