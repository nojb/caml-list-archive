Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA29922 for caml-redistribution; Tue, 22 Dec 1998 19:03:57 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA04649 for <caml-list@pauillac.inria.fr>; Tue, 22 Dec 1998 12:06:19 +0100 (MET)
Received: from alcatel.fr (gatekeeper.alcatel.fr [194.133.58.131])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id MAA13456
	for <caml-list@inria.fr>; Tue, 22 Dec 1998 12:06:17 +0100 (MET)
Received: from alcatel.fr (gatekeeper-ssn.alcatel.fr [155.132.180.244])
        by mailgate.alcatel.fr (ALCANET/SMTP) with ESMTP id MAA19059
        for <caml-list@inria.fr>; Tue, 22 Dec 1998 12:04:32 +0100
Received: from alcatel.fr (cosmos.ansf.alcatel.fr [159.217.209.62])
        by aifhs2.alcatel.fr (ALCANET/SMTP2) with ESMTP id MAA15428
        for <caml-list@inria.fr>; Tue, 22 Dec 1998 12:03:59 +0100 (MET)
Message-ID: <367F7C87.3E08B590@alcatel.fr>
Date: Tue, 22 Dec 1998 12:03:35 +0100
From: Vincent BARAT <vincent.barat@alcatel.fr>
Organization: Alcatel TITN Answare
X-Mailer: Mozilla 4.5 [en] (WinNT; I)
X-Accept-Language: en
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: alloc_final() and alloc()
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis

Hi !

I'm new to the list and I am working on a project whose aim is
to permit to write CORBA client and servers in Objective ML
on top of a generated stub (ML and C++) that works under VisiBroker
for the moment but should work with any ORB with very few modifications
(because the generated stub is on top of the C++ mapping of CORBA).
This project is very near to its end (3 or 4 days now !). What I could
say for the moment is that it is far more easy to write clients and
servers
in ML than with C++ !!!

So, I've discovered a problem with alloc(): it seems to return
always the same address if it is used several times in the same function
that contains also calls to alloc_final().

Is it a known bug ? If not, am I missing something ?

Thanks for your answer.

P.S. : for the moment, instead of calling alloc(), I call alloc_shr()
which work well concurrently with alloc_final().



