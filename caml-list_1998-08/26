Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA22705 for caml-redistribution; Mon, 31 Aug 1998 13:54:27 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA05245 for <caml-list@pauillac.inria.fr>; Sat, 29 Aug 1998 19:36:32 +0200 (MET DST)
Received: from fritz.traverse.net (oliverhome.cablezone.com [207.140.231.102])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id TAA17141
	for <caml-list@inria.fr>; Sat, 29 Aug 1998 19:36:29 +0200 (MET DST)
Received: from oliver by fritz.traverse.net with local (Exim 1.90 #1)
	for caml-list@inria.fr
	id 0zCovM-00006a-00; Sat, 29 Aug 1998 13:36:28 -0400
Subject: Re: VLIW & caml: how?
To: caml-list@inria.fr
Date: Sat, 29 Aug 1998 13:36:28 -0400 (EDT)
From: "Christopher Oliver" <oliver@fritz.traverse.com>
X-Mailer: ELM [version 2.4 PL25 PGP3 *ALPHA*]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Message-Id: <E0zCovM-00006a-00@fritz.traverse.net>
Sender: weis

Todd Lewis writes:
> I've been reading that VLIW as implemented on the IA-64/Merced will post
> problems for conventional compilers such as gcc which don't have a very
> expansive view of the code they're compiling.  How well will o'caml deal
> with optimizing for this sort of architecture?  Any thoughts?

Well... since no one in the free software community knows much
about Merced, and Intel is not talking, this chip isn't yet real
as far as authors of compiler back ends for free languages.  I
think we should make sure Intel doesn't play Appendix H games
again before wasting much time speculating on how any compiler
handles optimization on this architecture.

-- 
Christopher Oliver                     Traverse Internet
Systems Coordinator                    223 Grandview Pkwy, Suite 108
oliver@traverse.net                    Traverse City, Michigan, 49684
let magic f = fun x -> x and more_magic n f = fun x -> f ((n f) x);;




