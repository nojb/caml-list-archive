Return-Path: <lukstafi@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 28E147EFCB
	for <caml-list@sympa.inria.fr>; Tue, 18 Feb 2014 20:03:07 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  lukstafi@gmail.com) identity=pra; client-ip=74.125.82.172;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="lukstafi@gmail.com";
  x-sender="lukstafi@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  lukstafi@gmail.com designates 74.125.82.172 as permitted
  sender) identity=mailfrom; client-ip=74.125.82.172;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="lukstafi@gmail.com";
  x-sender="lukstafi@gmail.com"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-we0-f172.google.com) identity=helo;
  client-ip=74.125.82.172;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="lukstafi@gmail.com";
  x-sender="postmaster@mail-we0-f172.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AicCAHGtA1NKfVKslGdsb2JhbABZgkJ8V78HT4EUCBYOAQEBAQcLCwkSKoJsARsWCAMSEF0BEQEFASIbh2gBAxENmyqDCoxegw6VPQoZJw1khysRAQEEDIJQjCGCOg+BegSYLJA2GCmEWjs
X-IPAS-Result: AicCAHGtA1NKfVKslGdsb2JhbABZgkJ8V78HT4EUCBYOAQEBAQcLCwkSKoJsARsWCAMSEF0BEQEFASIbh2gBAxENmyqDCoxegw6VPQoZJw1khysRAQEEDIJQjCGCOg+BegSYLJA2GCmEWjs
X-IronPort-AV: E=Sophos;i="4.97,502,1389740400"; 
   d="scan'208";a="49559572"
Received: from mail-we0-f172.google.com ([74.125.82.172])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 18 Feb 2014 20:03:06 +0100
Received: by mail-we0-f172.google.com with SMTP id u56so2090400wes.3
        for <caml-list@inria.fr>; Tue, 18 Feb 2014 11:03:06 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:from:date:message-id:subject:to:content-type;
        bh=mjoCsvXTBkFg0QPICLADqygXOH1ZBV6KGSnIWO/zONw=;
        b=y2z0pvoWKY2RgtAZXD+o5Y7eEqLmlrq6A2FSEHmcaDU1POIV03kSTLzzP/1SNA/QB+
         sQU8zc6YqzUsEEFv/fxKEn2/tj5VrunU9vNh7LhTMuoKq029w60DfJHb0TpxZVt+16oQ
         aSwX4sS9zDqGd3cdx9qnZMN37s+gzPg5DEOU3AJMQm8bjGo1Kx2AxmFxqzoeRV5ki/qh
         RN8UfIP7cA9qZP+XX7q8QDMIMQ6LTVy+50c9kl+bmmKw/O195woQ2bFLCLDUcZ3Y+two
         uhmcWnoULdHdNSXTHorGO3JoaPADUGmvsTtNUuT0M0SDPuTMnQpe2QA++twKojfOqK3y
         4V5w==
X-Received: by 10.194.60.37 with SMTP id e5mr23794141wjr.32.1392750186130;
 Tue, 18 Feb 2014 11:03:06 -0800 (PST)
MIME-Version: 1.0
Received: by 10.227.49.71 with HTTP; Tue, 18 Feb 2014 11:02:45 -0800 (PST)
From: Lukasz Stafiniak <lukstafi@gmail.com>
Date: Tue, 18 Feb 2014 20:02:45 +0100
Message-ID: <CAJMfKEWya8G1x3=_60kBsippQ6iYkgBAOGp3pnH5W1NQKRyWvw@mail.gmail.com>
To: Caml <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=047d7ba979da1af34704f2b2ec39
Subject: [Caml-list] [ANN] InvarGenT v1.2: GADTs for invariants and
 postconditions

--047d7ba979da1af34704f2b2ec39
Content-Type: text/plain; charset=ISO-8859-1

I am pleased to release version 1.2 of InvarGenT, a system that infers
invariants and postconditions, and exports the corresponding GADTs-based
OCaml code.
https://github.com/lukstafi/invargent/releases

The highlight of this release is the AVL trees example see:
https://github.com/lukstafi/invargent/blob/master/examples/avl_tree.gadt
https://github.com/lukstafi/invargent/blob/master/examples/avl_tree.gadti.target
InvarGenT finds out that the height of a rotated tree can be the same as
original tree or one bigger, the same fact for the tree with added element,
that the height of merger of two trees is at most one bigger than that of
the larger tree, and that removing an element can decrease the height of a
tree, by at most 1.

Changes:
* Several bug fixes.
* So-called "opti" relations: "k=min(m,n)" and "k=max(m,n)" in the
numerical sort.
* So-called "subopti" relations "k<=max(m,n)" and "min(m,n)<=k" in the
numerical sort.
* Less confusing syntax for existential types, "datatype" and "datacons"
keywords.
* Pattern-matching guards "when e1 <= e2", where e1 and "e2 are expressions
of type "Num".
* Positive assert clauses, "assert num e1 <= e2; ..." and "assert type e1 =
e2; ...".
* Flagship example: AVL trees with imbalance of 2 (based on the
implementation from OCaml standard library).

--047d7ba979da1af34704f2b2ec39
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><span style=3D"color:rgb(64,64,64);font-family:Roboto,aria=
l,sans-serif;font-size:13px;line-height:18px">I am pleased to release versi=
on 1.2 of InvarGenT, a system that infers invariants and postconditions, an=
d exports the corresponding GADTs-based OCaml code.</span><br style=3D"colo=
r:rgb(64,64,64);font-family:Roboto,arial,sans-serif;font-size:13px;line-hei=
ght:18px">

<a rel=3D"nofollow" target=3D"_blank" href=3D"https://github.com/lukstafi/i=
nvargent/releases" class=3D"" style=3D"color:rgb(66,127,237);text-decoratio=
n:none;font-family:Roboto,arial,sans-serif;font-size:13px;line-height:18px"=
>https://github.com/lukstafi/invargent/releases</a><br style=3D"color:rgb(6=
4,64,64);font-family:Roboto,arial,sans-serif;font-size:13px;line-height:18p=
x">

<br style=3D"color:rgb(64,64,64);font-family:Roboto,arial,sans-serif;font-s=
ize:13px;line-height:18px"><span style=3D"color:rgb(64,64,64);font-family:R=
oboto,arial,sans-serif;font-size:13px;line-height:18px">The highlight of th=
is release is the AVL trees example see:</span><br style=3D"color:rgb(64,64=
,64);font-family:Roboto,arial,sans-serif;font-size:13px;line-height:18px">

<a rel=3D"nofollow" target=3D"_blank" href=3D"https://github.com/lukstafi/i=
nvargent/blob/master/examples/avl_tree.gadt" class=3D"" style=3D"color:rgb(=
66,127,237);text-decoration:none;font-family:Roboto,arial,sans-serif;font-s=
ize:13px;line-height:18px">https://github.com/lukstafi/invargent/blob/maste=
r/examples/avl_tree.gadt</a><br style=3D"color:rgb(64,64,64);font-family:Ro=
boto,arial,sans-serif;font-size:13px;line-height:18px">

<a href=3D"https://github.com/lukstafi/invargent/blob/master/examples/avl_t=
ree.gadti.target">https://github.com/lukstafi/invargent/blob/master/example=
s/avl_tree.gadti.target</a><span style=3D"color:rgb(64,64,64);font-family:R=
oboto,arial,sans-serif;font-size:13px;line-height:18px"><br>

</span><div><span style=3D"color:rgb(64,64,64);font-family:Roboto,arial,san=
s-serif;font-size:13px;line-height:18px">InvarGenT finds out that the heigh=
t of a rotated tree can be the same as original tree or one bigger, the sam=
e fact for the tree with added element, that the height of merger of two tr=
ees is at most one bigger than that of the larger tree, and that removing a=
n element can decrease the height of a tree, by at most 1.</span><br>

</div><div><span style=3D"color:rgb(64,64,64);font-family:Roboto,arial,sans=
-serif;font-size:13px;line-height:18px"><br></span></div><div><div><font co=
lor=3D"#404040" face=3D"Roboto, arial, sans-serif"><span style=3D"line-heig=
ht:18px">Changes:</span></font></div>

<div><font color=3D"#404040" face=3D"Roboto, arial, sans-serif"><span style=
=3D"line-height:18px">* Several bug fixes.</span></font></div><div><font co=
lor=3D"#404040" face=3D"Roboto, arial, sans-serif"><span style=3D"line-heig=
ht:18px">* So-called &quot;opti&quot; relations: &quot;k=3Dmin(m,n)&quot; a=
nd &quot;k=3Dmax(m,n)&quot; in the numerical sort.</span></font></div>

<div><font color=3D"#404040" face=3D"Roboto, arial, sans-serif"><span style=
=3D"line-height:18px">* So-called &quot;subopti&quot; relations &quot;k&lt;=
=3Dmax(m,n)&quot; and &quot;min(m,n)&lt;=3Dk&quot; in the numerical sort.</=
span></font></div>

<div><font color=3D"#404040" face=3D"Roboto, arial, sans-serif"><span style=
=3D"line-height:18px">* Less confusing syntax for=A0</span></font><span sty=
le=3D"color:rgb(64,64,64);font-family:Roboto,arial,sans-serif;line-height:1=
8px">existential types,</span><span style=3D"line-height:18px;color:rgb(64,=
64,64);font-family:Roboto,arial,sans-serif">=A0&quot;datatype&quot; and &qu=
ot;datacons&quot; keywords.</span></div>

<div><font color=3D"#404040" face=3D"Roboto, arial, sans-serif"><span style=
=3D"line-height:18px">* Pattern-matching guards &quot;when e1 &lt;=3D e2&qu=
ot;, where e1 and &quot;e2 are expressions of type &quot;Num&quot;.</span><=
/font></div>

<div><font color=3D"#404040" face=3D"Roboto, arial, sans-serif"><span style=
=3D"line-height:18px">* Positive assert clauses, &quot;assert num e1 &lt;=
=3D e2; ...&quot; and &quot;assert type e1 =3D e2; ...&quot;.</span></font>=
</div><div>

<font color=3D"#404040" face=3D"Roboto, arial, sans-serif"><span style=3D"l=
ine-height:18px">* Flagship example: AVL trees with imbalance of 2 (based o=
n the implementation from OCaml standard library).</span></font></div></div>
<div>
<font color=3D"#404040" face=3D"Roboto, arial, sans-serif"><span style=3D"l=
ine-height:18px"><br></span></font></div></div>

--047d7ba979da1af34704f2b2ec39--
