Return-Path: <garrigue@math.nagoya-u.ac.jp>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id E15457F84F
	for <caml-list@sympa.inria.fr>; Sat, 15 Feb 2014 00:23:14 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  garrigue@math.nagoya-u.ac.jp) identity=pra;
  client-ip=133.6.130.5;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="garrigue@math.nagoya-u.ac.jp";
  x-sender="garrigue@math.nagoya-u.ac.jp";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  garrigue@math.nagoya-u.ac.jp) identity=mailfrom;
  client-ip=133.6.130.5;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="garrigue@math.nagoya-u.ac.jp";
  x-sender="garrigue@math.nagoya-u.ac.jp";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mailhost.math.nagoya-u.ac.jp) identity=helo;
  client-ip=133.6.130.5;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="garrigue@math.nagoya-u.ac.jp";
  x-sender="postmaster@mailhost.math.nagoya-u.ac.jp";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AtMCANek/lKFBoIFdGdsb2JhbABZw0eBLQ4BDBUIPIIlAQEEAToJATUCAwsLGC5XBogQB6YmhF0CljeHOBAHjkYzB4MkgRSJSop9g2mGR48Y
X-IPAS-Result: AtMCANek/lKFBoIFdGdsb2JhbABZw0eBLQ4BDBUIPIIlAQEEAToJATUCAwsLGC5XBogQB6YmhF0CljeHOBAHjkYzB4MkgRSJSop9g2mGR48Y
X-IronPort-AV: E=Sophos;i="4.95,848,1384297200"; 
   d="scan'208";a="49162360"
Received: from rabbit.math.nagoya-u.ac.jp (HELO mailhost.math.nagoya-u.ac.jp) ([133.6.130.5])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 15 Feb 2014 00:23:12 +0100
Received: from mailhost.math.nagoya-u.ac.jp (localhost [127.0.0.1])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTP id 4D43463E9;
	Sat, 15 Feb 2014 08:23:09 +0900 (JST)
Received: from mailhost.math.nagoya-u.ac.jp (localhost [127.0.0.1])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTP id E729E411A;
	Sat, 15 Feb 2014 08:23:08 +0900 (JST)
DomainKey-Signature: h=Received:Subject:Mime-Version:Content-Type:From:In-Reply-To:Date:Cc:Content-Transfer-Encoding:Message-Id:References:To:X-Mailer; b=; c=nofws; d=math.nagoya-u.ac.jp; q=; s=alpha
Received: from [192.168.43.31] (om126193000085.1.kyb.openmobile.ne.jp [126.193.0.85])
	by mailhost.math.nagoya-u.ac.jp (Postfix) with ESMTPSA id 00F72410F;
	Sat, 15 Feb 2014 08:23:07 +0900 (JST)
Mime-Version: 1.0 (Mac OS X Mail 7.1 \(1827\))
Content-Type: text/plain; charset=us-ascii
From: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <52FDE063.4050207@frisch.fr>
Date: Sat, 15 Feb 2014 08:23:08 +0900
Cc: Christophe Troestler <Christophe.Troestler@umons.ac.be>,
 OCaml Mailing List <caml-list@inria.fr>
Content-Transfer-Encoding: quoted-printable
Message-Id: <E313BF52-E184-4425-9E6A-F776AD32D2CA@math.nagoya-u.ac.jp>
References: <20140214.082352.48621319473754158.Christophe.Troestler@umons.ac.be> <52FDDA89.5070303@frisch.fr> <B18F34A1-55C0-4945-96A6-BA5A8C164A94@math.nagoya-u.ac.jp> <52FDE063.4050207@frisch.fr>
To: Alain Frisch <alain@frisch.fr>
X-Mailer: Apple Mail (2.1827)
Subject: Re: [Caml-list] First class modules aliases

On 2014/02/14 18:22, Alain Frisch wrote:

> On 02/14/2014 10:08 AM, Jacques Garrigue wrote:
> > On 2014/02/14 17:57, Alain Frisch wrote:
>>>   One way to fix it would be to tweak the "strengthening" algorithm=20
> which adds equalities to module types in order to turn a module type decl=
aration to an alias to the original definition instead of copying it.
>>=20
>> This is already done in trunk.
>=20
> Are you sure?  I don't see it.  We're talking about keeping equations for=
 module type declarations, not for module declarations, right?

Sorry, I got confused.
What trunk does is allowing to use aliases of module types in first class m=
odules.
This was not allowed before.
What you suggest is also introducing aliases in place of copying for module=
 types when using include.
This would be useless without the previous change, but makes sense with it.

	Jacques=
