Return-Path: <adrien@notk.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 8E3407F860
	for <caml-list@sympa.inria.fr>; Fri, 21 Feb 2014 08:06:25 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  adrien@notk.org) identity=pra; client-ip=91.121.71.147;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="adrien@notk.org"; x-sender="adrien@notk.org";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  adrien@notk.org designates 91.121.71.147 as permitted sender)
  identity=mailfrom; client-ip=91.121.71.147;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="adrien@notk.org"; x-sender="adrien@notk.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@nautica.notk.org) identity=helo;
  client-ip=91.121.71.147;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="adrien@notk.org";
  x-sender="postmaster@nautica.notk.org";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhgFAKn5BlNbeUeT/2dsb2JhbABZgwY7gwhSvUKBDhZ0giUBAQUjQxMQCxIGAgIFEw4CAg8FGB0BExMeh2urVaFEF4EpjTsHgm81gRQEmDMBkieDLjs
X-IPAS-Result: AhgFAKn5BlNbeUeT/2dsb2JhbABZgwY7gwhSvUKBDhZ0giUBAQUjQxMQCxIGAgIFEw4CAg8FGB0BExMeh2urVaFEF4EpjTsHgm81gRQEmDMBkieDLjs
X-IronPort-AV: E=Sophos;i="4.97,517,1389740400"; 
   d="scan'208";a="49895607"
Received: from nautica.notk.org ([91.121.71.147])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/ADH-AES256-SHA; 21 Feb 2014 08:06:24 +0100
Received: by nautica.notk.org (Postfix, from userid 1003)
	id 69C7CC009; Fri, 21 Feb 2014 08:06:23 +0100 (CET)
Date: Fri, 21 Feb 2014 08:06:23 +0100
From: Adrien Nader <adrien@notk.org>
To: Anil Madhavapeddy <anil@recoil.org>
Cc: Xavier Leroy <Xavier.Leroy@inria.fr>,
	Ocaml Mailing List <caml-list@inria.fr>
Message-ID: <20140221070623.GA7924@notk.org>
References: <20140218185032.GA20593@notk.org>
 <5306330F.1020401@inria.fr>
 <B30CB0CD-BD71-4327-84CA-785451A25D15@recoil.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <B30CB0CD-BD71-4327-84CA-785451A25D15@recoil.org>
User-Agent: Mutt/1.5.21 (2010-09-15)
Subject: Re: [Caml-list] [RFC] Remaining changes for cross-compilation
 support in OCaml

On Fri, Feb 21, 2014, Anil Madhavapeddy wrote:
> On 20 Feb 2014, at 16:53, Xavier Leroy <Xavier.Leroy@inria.fr> wrote:
> 
> >> 
> >> **************************** Further Goals ****************************
> >> - cross-compile the compiler: build a native Windows toolchain on Linux
> >> - canadian cross support: ${build}, ${target}, ${host} are all
> >>  different, i.e. on Linux, build a toolchain that runs on Windows 64b
> >>  but targets Windows 32b or a different architecture/OS like ARM Linux.
> > 
> > That could be a nice touch if it's not too much extra work.  The issue
> > was discussed at the last OCaml dev team meeting that Wojciech
> > attended, and we agreed that some scenarios were less important than
> > others, e.g. nobody really needs to compile from a 32-bit host for a
> > 64-bit target.
> 
> This would actually be quite useful for Mirage compilation, since we've
> had quite a few (~10) reports of people attempting to compile up OCaml
> kernels intended for Xen (x86_64) using x86_32 host machines, with one
> brave chap even trying on an ARM32 Chromebook.  The output kernels are
> spun up on a remote cloud service like Amazon or Rackspace, and so being
> flexible about the host machine is helpful.
> 
> (This scenario is certainly less important than the 32-bit target for
> a 64-bit host, but I just thought I'd point it out)

My own use-case is to build Windows binaries of the compiler from Linux
so I can add them to win-builds ( http://win-builds.org ).

I really mention it as a _further_ goal however. I think it could be
achieved without too much work and current changes should keep this
possibility in mind but not try to handle it.
Realistically, the current changes first have to be finished, polished,
checked, released, settled, their bugs fixed...
(well, if the changes are simple, it should be possible to have a set of
"canonical" patches quickly and only merge them later on)

-- 
Adrien Nader
