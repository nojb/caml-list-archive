Return-Path: <xavier.leroy@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 905D8E76E8
	for <caml-list@sympa.inria.fr>; Fri,  4 Jun 2021 19:15:25 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=Xavier.Leroy@inria.fr; spf=Pass smtp.mailfrom=xavier.leroy@gmail.com; spf=None smtp.helo=postmaster@mail-wm1-f54.google.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  Xavier.Leroy@inria.fr) identity=pra; client-ip=209.85.128.54;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="xavier.leroy@gmail.com";
  x-sender="Xavier.Leroy@inria.fr";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  xavier.leroy@gmail.com designates 209.85.128.54 as permitted
  sender) identity=mailfrom; client-ip=209.85.128.54;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="xavier.leroy@gmail.com";
  x-sender="xavier.leroy@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-wm1-f54.google.com) identity=helo;
  client-ip=209.85.128.54;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="xavier.leroy@gmail.com";
  x-sender="postmaster@mail-wm1-f54.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?A9a23=3AIBQHehzTsgpqaV3XCzIVylBlVkEcU1XcAAcZ59I?=
 =?us-ascii?q?dhq5Udez7ptK+ZR2Zvq00xwKUFazgqNt8w9LMtK7hXWFSqb2gi1slNKJ2ahkel?=
 =?us-ascii?q?M8NlBYhCsPWQWfyLfrtcjBoVJ8aDAwt8H60K1VaF9jjbFPOvHKy8SQSGhLiPgZ?=
 =?us-ascii?q?pO+j5AIHfg9mz2uyo9ZDffxhEiDW9bL5yMR67sRjfus4KjIV4N60/0AHJonxGe?=
 =?us-ascii?q?+RXwWNnO1eelAvi68mz4ZBu7T1et+ou+MBcX6r6eb84TaFDAzQ9L281/szrugL?=
 =?us-ascii?q?dQgaJ+3ART38ZkhtMAwjC8RH6QpL8uTb0u+ZhxCWXO9D9QKsqUjq+8ahkVB7oi?=
 =?us-ascii?q?D8GNzEn9mHXltdwh79frB64uhBz35LYbISTOfFjfK3SYMkaSHJOUcZfVSNPAo2?=
 =?us-ascii?q?yYYgSAeQfIelVtJPyq0cUoBakGQWgGOHixzlVjXH2x6061OEhHBnH0wM6AdIOs?=
 =?us-ascii?q?WrbrM/oP6kUT++11q7IzDXeZP5R2Djy8pbIchE/rvGWR75+d9TeyVMoFwLFlVi?=
 =?us-ascii?q?QqIrlPymU1usXqWSb4fBgWPuphmU6pA5/viKhyd0wionVmI0V0FbE+D17zYopJ?=
 =?us-ascii?q?dO1SUx2bN6nHZZMuC+WK4V4T8M/Tm12tys216ELtYO/cSULy5kpyR3SZ+CZf4W?=
 =?us-ascii?q?M7B/uUOKcLDZ5iX94fr+0mhW88VC4x+HiSsW51ExGoylFn9XWq3wByR/e5tKHR?=
 =?us-ascii?q?/Zy+EqqxCyB2BrJ6u5eJEA5jarbJIAlwr43jpcTtF7MHi7ymEnvgq6Wc1go9vG?=
 =?us-ascii?q?m6+nnbbjqvJCcN4hzigHxNqQhhNazDvg/MggLR2Sb+OK826P//UDhXrlGkvk7n?=
 =?us-ascii?q?rPavZ3aP8gXu7C1DgxP3osj5BuzFzKm384ZnXkDIlJFYhWHj43xNlDBOv/4E/a?=
 =?us-ascii?q?/jEq2kDtxw/DJIKfhApLNL3XYn7fheKxy609YyAYp0d9f4JdUBqkbIP3vQk/xq?=
 =?us-ascii?q?MDYDhghPgOo2ennDdF92poaWWKOGa+ZLLjfsUSI5+IqO+mDfpUZuDf7K/g/5v7?=
 =?us-ascii?q?hl2U1mVEHffrh4ZxCQ3CiH+96JF2ZbDLWi9kPGGMOv0JqR+zwiUaeViZTal6oV?=
 =?us-ascii?q?qwy7zU/CcSrENGQaJqqhemx1Tm6E4ceQm1cDUHERUfhaYSJQbEoZTiVM+dglCY?=
 =?us-ascii?q?FXP6vUdlyhlmVqAbmxu8/faLv8SoCuMemjYAtjwU8vR43/D1wSc+a1jPUJ4mRt?=
 =?us-ascii?q?mIOXT4/mq5l8xQVIrar1KF5h7lHEIUW6a4VFAg9MpHYwqpxDNWgAmr8?=
IronPort-HdrOrdr: =?us-ascii?q?A9a23=3AJ3GXpa1MJiG5+opv5JZFDwqjBX1yeYIsimQD?=
 =?us-ascii?q?101hICF9WteTlsCwkPle/QKcskdSZJhSo6H7BEDgewKmyXcR2+Qs1NiZLW/bUV?=
 =?us-ascii?q?WTXfdfBOfZslnd88OXzJ8f6U9PG5IOROEYJ2IKwPoTeGKDYpYdKODuytHouQ81?=
 =?us-ascii?q?p00dAj2CEpsQoTuRaTzranGeJjM2YqbRT6Dsr7sOm9PIQx1+Ba7WaRdlLouzxe?=
 =?us-ascii?q?Ej8qiWFCLuKCRXozVm5gnYmoISfSLouyv2Hwk/uIsKwCzvkx/w4auq2svLuiM1?=
 =?us-ascii?q?6QXonuBrseqk7MBCCsyKgs1QBxHFsSztX4hqXaaO1QpF5d2H2RINi9nDoxApOo?=
 =?us-ascii?q?BI7W/LdG3wgSKF4Xic7B8er0TvzleEjWCmm8DjWz4gLMJEietiA2rkwntlh916?=
 =?us-ascii?q?2L9GxCairpJSJxvdhiiV3am3azha0nG5pnI+nfVWtWVWVbEVbqRcxLZvg399Id?=
 =?us-ascii?q?M6ECXz9Yw9VNN2BMXn+f5KfTqhHgzkVmIE+q3aYl0DWiiPR0gOstGU1T8Tl2AR?=
 =?us-ascii?q?9Tpq+CXBpBc93aN4TJ8B7//PM6R2mNh1P4UrUZ4=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0ALUgAVX7pghjaAVdFaGgEBAQEBPAEBA?=
 =?us-ascii?q?QECAgEBAQECAQEBAQMBAQEBgUEBAQEBHQUBAQEBAwGBOwIBAQEBAYIzOzGESIE?=
 =?us-ascii?q?ekFuVFIZCgXMBAwENEi8EAQGGUgIdBwEENQUNAgQVAQEFAQEBAgEDAwQBEwEBA?=
 =?us-ascii?q?QELCwsIKRqFdYI4KQGDYwEEARIRMCYFCwsEBzcCAiISAQUBHAYTIoJPgmchnwS?=
 =?us-ascii?q?BBD2LMoEygQGIVoFiEoEmAgEBAQEBAQGFZVNIAQGGYScQgVVEgUuCbT6EBgSDU?=
 =?us-ascii?q?YJkBINLZR4zkymqBywHgWqBNYEsC5Bai2UrpWG1BoUTECOBSYF8MxonTDEGgjJ?=
 =?us-ascii?q?QGQ6cb0IvOAIGAQkBAQMJiwsBAQ?=
X-IPAS-Result: =?us-ascii?q?A0ALUgAVX7pghjaAVdFaGgEBAQEBPAEBAQECAgEBAQECAQE?=
 =?us-ascii?q?BAQMBAQEBgUEBAQEBHQUBAQEBAwGBOwIBAQEBAYIzOzGESIEekFuVFIZCgXMBA?=
 =?us-ascii?q?wENEi8EAQGGUgIdBwEENQUNAgQVAQEFAQEBAgEDAwQBEwEBAQELCwsIKRqFdYI?=
 =?us-ascii?q?4KQGDYwEEARIRMCYFCwsEBzcCAiISAQUBHAYTIoJPgmchnwSBBD2LMoEygQGIV?=
 =?us-ascii?q?oFiEoEmAgEBAQEBAQGFZVNIAQGGYScQgVVEgUuCbT6EBgSDUYJkBINLZR4zkym?=
 =?us-ascii?q?qBywHgWqBNYEsC5Bai2UrpWG1BoUTECOBSYF8MxonTDEGgjJQGQ6cb0IvOAIGA?=
 =?us-ascii?q?QkBAQMJiwsBAQ?=
X-Spam-Status: Yes
X-IronPort-AV: E=Sophos;i="5.83,248,1616454000"; 
   d="scan'208,217";a="511819833"
X-MGA-submission: =?us-ascii?q?MDFS/6pAaf2USnn4jv0ctk+l202uEPQGHrWZWF?=
 =?us-ascii?q?Mv8k9zIeWbNrgGPKHSb1eXib3VhM9bd2zUp3xVqs7PYcWMcrkvS3pK7N?=
 =?us-ascii?q?chiwkuy7p9Mmld5eao4tZfxmxdL4HkupKnTKzuk752obl50VyANsCYt+?=
 =?us-ascii?q?WYH1MegEEannfLagVyOvll5Q=3D=3D?=
Received: from mail-wm1-f54.google.com ([209.85.128.54])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES256-GCM-SHA384; 04 Jun 2021 19:15:05 +0200
Received: by mail-wm1-f54.google.com with SMTP id h3so5804399wmq.3
        for <caml-list@inria.fr>; Fri, 04 Jun 2021 10:15:05 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=UlSoAe9Gi1jsSqvA2UmqbQIq7uyhls5ukx2TLbvi2Ns=;
        b=m/mdRJdze2ltd+QbXKbraF+3c9RmumOslrqM0HwgoNxups4eMSTYmyCQMjZEPwMlDV
         sKvlaOCyV9wej72cqlu+sYhIbAsTDWeB9mG/vsi7VRPyIK7dSDJOetFqj/Adju10cMhR
         Wyrq/l99fhEgPDMzBymstVIWfM+Y56RroXvPsXvvXqy82M2sUIo8VhXM/AlhHoPoQuLv
         E+ICHHG5hWC8LkpRGkrnR+tqj++u7KerdN7zG0K05wEWTSN1Z+dG2D/5YmbdxWyrGZU0
         gpnhNnXEa6+nY+trug9L/lL7nD/ex9LdmzC3/Jt0UCqOX+gyajqpuSkGuKwf9KyUIzqp
         bQ/A==
X-Gm-Message-State: AOAM532EGn0GH2+pwKCJqLCGnjFY+mVOUp6KKrFblGQWFUBT+8l1VWYY
	vyFhiWd1VpTBuKXO4FdSY/c94NS2ns2NZTAkyPCIko15Qd4Ung==
X-Google-Smtp-Source: ABdhPJzXM0SLEMcEvccFuxFcQsOvpO3anT29O+RDh4Uu75hwa6OA4/fnE8AMxm0lrTyRcQrJWmKOkxewJvrbHghKYjM=
X-Received: by 2002:a1c:ed03:: with SMTP id l3mr4764692wmh.130.1622826904965;
 Fri, 04 Jun 2021 10:15:04 -0700 (PDT)
MIME-Version: 1.0
References: <20210603171753.nci6b45fepzyupnm@oulala>
In-Reply-To: <20210603171753.nci6b45fepzyupnm@oulala>
From: Xavier Leroy <Xavier.Leroy@inria.fr>
Date: Fri, 4 Jun 2021 19:14:39 +0200
Message-ID: <CAH=h3gFgmPXLPMbuLn1De_F8oNyS+ohfiHoUpJk6jL6A+HNU=g@mail.gmail.com>
To: Christophe Raffalli <christophe@raffalli.eu>
Cc: caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary="00000000000033d79305c3f3d5a4"
Subject: Re: [Caml-list] serialization of closures

--00000000000033d79305c3f3d5a4
Content-Type: text/plain; charset="UTF-8"

On Thu, Jun 3, 2021 at 7:18 PM Christophe Raffalli <christophe@raffalli.eu>
wrote:

>
> Hello dear camlers,
>
> I just noticed that in 4.12+effect, in the road to multicore, we have now
> the
> nice exception:
>
>   Failure("Serializing closures is broken in multicore")
>
> This is a bit a pity: if you want to use both multicore and multi-machine
> parallelism, then, marshalling closures was useful for communication
> between
> machines in some cases. Is it a final decision or serialization of
> closures will
> be lost forever in OCaml ?
>

I was not aware of this limitation of Multicore OCaml, and looking at its
git history, it looks like it was introduced very early in the development,
perhaps to make things simpler initially.

Marshalling of function closures has always been sort of experimental and
not super reliable, but I was not expecting it to be incompatible with
Multicore OCaml.  We (the core dev team) will sort it out.

Kind regards,

- Xavier Leroy


> Remark: Closures is not marked as obsolete in Marshal.mli
>
> Cheers,
> Christophe
>

--00000000000033d79305c3f3d5a4
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_quote"><div dir=3D"ltr" class=3D"gmail=
_attr">On Thu, Jun 3, 2021 at 7:18 PM Christophe Raffalli &lt;<a href=3D"ma=
ilto:christophe@raffalli.eu">christophe@raffalli.eu</a>&gt; wrote:<br></div=
><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border=
-left:1px solid rgb(204,204,204);padding-left:1ex"><br>
Hello dear camlers,<br>
<br>
I just noticed that in 4.12+effect, in the road to multicore, we have now t=
he<br>
nice exception:<br>
<br>
=C2=A0 Failure(&quot;Serializing closures is broken in multicore&quot;)<br>
<br>
This is a bit a pity: if you want to use both multicore and multi-machine<b=
r>
parallelism, then, marshalling closures was useful for communication betwee=
n<br>
machines in some cases. Is it a final decision or serialization of closures=
 will<br>
be lost forever in OCaml ?<br></blockquote><div><br></div><div>I was not aw=
are of this limitation of Multicore OCaml, and looking at its git history, =
it looks like it was introduced very early in the development, perhaps to m=
ake things simpler initially.</div><div><br></div><div>Marshalling of funct=
ion closures has always been sort of experimental and not super reliable, b=
ut I was not expecting it to be incompatible with Multicore OCaml.=C2=A0 We=
 (the core dev team) will sort it out.</div><div><br></div><div>Kind regard=
s,</div><div><br></div><div>- Xavier Leroy</div><div><br></div><blockquote =
class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px sol=
id rgb(204,204,204);padding-left:1ex">
<br>
Remark: Closures is not marked as obsolete in Marshal.mli<br>
<br>
Cheers,<br>
Christophe<br>
</blockquote></div></div>

--00000000000033d79305c3f3d5a4--
