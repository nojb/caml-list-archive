Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA20081; Mon, 5 Nov 2001 18:38:49 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA20816 for <caml-list@pauillac.inria.fr>; Mon, 5 Nov 2001 18:38:47 +0100 (MET)
Received: from quetelet.bik-gmbh.de ([194.233.237.132])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id fA5HclH21403
	for <caml-list@inria.fr>; Mon, 5 Nov 2001 18:38:47 +0100 (MET)
Received: from hars by quetelet.bik-gmbh.de with local (Exim 3.12 #1 (Debian))
	id 160ng6-0003zz-00; Mon, 05 Nov 2001 18:36:54 +0100
Date: Mon, 5 Nov 2001 18:36:54 +0100
From: Florian Hars <florian@hars.de>
To: Jean-Christophe Filliatre <Jean-Christophe.Filliatre@lri.fr>
Cc: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>, caml-list@inria.fr
Subject: Re: [Caml-list] Specialized dictionaries
Message-ID: <20011105183653.A15329@hars>
References: <slrn9ucp5i.4an.qrczak@qrnik.zagroda> <15334.27347.973997.129488@pc803>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <15334.27347.973997.129488@pc803>; from Jean-Christophe.Filliatre@lri.fr on Mon, Nov 05, 2001 at 11:32:51AM +0100
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, Nov 05, 2001 at 11:32:51AM +0100, Jean-Christophe Filliatre wrote:
> Marcin 'Qrczak' Kowalczyk writes:
>  > I need dictionaries indexed by ints which must be very fast.
> 
> To be  even more efficient, I'm  afraid you have to  follow your idea,
> that is to inline this hash function in your own copy of hashtbl.ml.

Wouldn't the Patricia Trees (from the 
"the-name-of-the-author-currently-escapes-me"-department :-)) mentioned on 
http://www.lri.fr/~filliatr/software.en.html be useful in this case (unless 
the problem needs the in-place update available with Hashtbl)? 
The documentation claims that "The
    performances are always better than the standard library's module
    [Set], except for linear insertion (building a set by insertion of
    consecutive integers)."
Or is Hashtbl faster still?

Yours, Florian Hars.


-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

