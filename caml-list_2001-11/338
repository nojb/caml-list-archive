Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA03599; Mon, 19 Nov 2001 13:50:47 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA03196 for caml-list@pauillac.inria.fr; Mon, 19 Nov 2001 13:50:46 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA02922 for <caml-list@pauillac.inria.fr>; Mon, 19 Nov 2001 13:22:28 +0100 (MET)
Received: from chopin.ai.univie.ac.at (chopin.ai.univie.ac.at [131.130.174.170])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id fAJCMQb18000
	for <caml-list@inria.fr>; Mon, 19 Nov 2001 13:22:27 +0100 (MET)
Received: (from markus@localhost)
	by chopin.ai.univie.ac.at (8.9.3/8.9.3/Debian 8.9.3-21) id NAA30615;
	Mon, 19 Nov 2001 13:21:17 +0100
Date: Mon, 19 Nov 2001 13:21:17 +0100
From: Markus Mottl <markus@oefai.at>
To: Andreas Rossberg <rossberg@ps.uni-sb.de>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Re: variance, subtyping and monads... oh, my!
Message-ID: <20011119132117.C29501@chopin.ai.univie.ac.at>
References: <DCC4EB14-DC73-11D5-963F-000502DB38F5@wetware.com> <3BF8E14C.BE31359E@ps.uni-sb.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <3BF8E14C.BE31359E@ps.uni-sb.de>; from rossberg@ps.uni-sb.de on Mon, Nov 19, 2001 at 11:39:08 +0100
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Andreas Rossberg schrieb am Montag, den 19. November 2001:
> Maybe. I don't often use monads myself, so I am by no means an expert,
> but there are quite some useful applications, even outside the realm of
> lazy evaluation and purely functional languages. Examples are
> encapsulating state, failure, non-determinism, etc. I think Markus Mottl
> posted an OCaml example of a simple monadic evaluator some time ago.

Yes, you can get it here (called "IMP"):

  http://www.ai.univie.ac.at/~markus/home/ocaml_sources.html

It compares interpretation of a simple imperative language in monadic
style to explicit state passing. As was already mentioned, the lack of
overloading doesn't make monads as convenient as in Haskell.

Regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

