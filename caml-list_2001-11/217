Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA30324; Mon, 12 Nov 2001 09:57:25 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA30512 for <caml-list@pauillac.inria.fr>; Mon, 12 Nov 2001 09:57:24 +0100 (MET)
Received: from lachesis.inria.fr (lachesis.inria.fr [128.93.52.5])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id fAC8vMn21371;
	Mon, 12 Nov 2001 09:57:22 +0100 (MET)
Received: (from lefessan@localhost)
	by lachesis.inria.fr (8.11.3/8.11.3) id fAC7wfL12235;
	Mon, 12 Nov 2001 08:58:41 +0100
X-Authentication-Warning: lachesis.inria.fr: lefessan set sender to fabrice.le_fessant@inria.fr using -f
From: Fabrice Le Fessant <fabrice.le_fessant@inria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15343.33070.25617.279577@lachesis.inria.fr>
Date: Mon, 12 Nov 2001 08:58:38 +0100 (CET)
To: "Rolf Wester" <rolf.wester@ilt.fhg.de>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] avoiding native call from bytecode issue via dynamic linking
References: <3BEC0E53.6797.26E241B7@localhost>
X-Mailer: VM 6.75 under Emacs 20.7.1
Reply-To: fabrice.le_fessant@inria.fr
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


>  Jeff Henrikson wrote:
>  > Has anybody considered sidestepping the native/bytecode compatablity
>  > issue in favor of an all native toplevel?  That is, one which takes an
>  > expression, compiles it to native code, and loads it back in to code
>  > space?  For example, write it out to a shared lib, either one for each
>  > expression (or more likely for efficiency) one for some reasonably sized
>  > history of expressions.  Then dlopen and dlsym the symbols into place.
>  > 
>  It would be great to have a toplevel that compiles to native code. If this
>  would only be possible under UNIX I would immediately change from NT to
>  Linux (what I probably should do anyway). Native code compilation in the
>  toplevel was one of the reasons to consider to use Lisp.

I've started working on a very simple JIT for Ocaml. It is not working
yet (I'm a busy programmer) , but I have a module which ouputs native
i386 code in memory that might be useful, if someone wants to try to
plug it into the backend of the native code compiler ...

- Fabrice
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

