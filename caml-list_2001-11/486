Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA11240; Fri, 30 Nov 2001 09:07:31 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA11252 for <caml-list@pauillac.inria.fr>; Fri, 30 Nov 2001 09:07:30 +0100 (MET)
Received: from dpt-info.u-strasbg.fr (dpt-info.u-strasbg.fr [130.79.44.193])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id fAU87Tn18721;
	Fri, 30 Nov 2001 09:07:29 +0100 (MET)
Received: (from luther@localhost)
	by dpt-info.u-strasbg.fr (8.9.3/8.9.3) id JAA14806;
	Fri, 30 Nov 2001 09:05:43 +0100
Date: Fri, 30 Nov 2001 09:05:43 +0100
From: Sven <luther@dpt-info.u-strasbg.fr>
To: Xavier Leroy <xavier.leroy@inria.fr>
Cc: "Rafael 'Dido' Sevilla" <sevillar@team.ph.inter.net>,
        Fergus Henderson <fjh@cs.mu.OZ.AU>, caml-list@inria.fr
Subject: Re: [Caml-list] License Conditions for OCaml
Message-ID: <20011130090543.A14742@dpt-info.u-strasbg.fr>
References: <20011127032158.C10358@earth.cs.mu.oz.au> <20011126113627.G92700-100000@fledge.watson.org> <20011127212859.A25966@hg.cs.mu.oz.au> <20011127185858.A29671@team.ph.inter.net> <20011128190038.A9601@pauillac.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0.1i
In-Reply-To: <20011128190038.A9601@pauillac.inria.fr>; from xavier.leroy@inria.fr on Wed, Nov 28, 2001 at 07:00:38PM +0100
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, Nov 28, 2001 at 07:00:38PM +0100, Xavier Leroy wrote:
> > There have been whispers here and there that the OCaml
> > regular expression code contains code taken from a LGPLed regex library,
> > whose copyright is owned by the Free Software Foundation.
> 
> Yes, the "Str" library of OCaml is built on top of the "regexp"
> library, which is owned by the FSF and distributed under the GPL.
> 
> > THEY definitely are not going to agree with any sort of change away from the
> > (L)GPL, and will not look kindly on any violation.
> 
> Sure.  When we're talking about changing the OCaml licensing terms, it
> really means changing the licensing terms of the code for which we are
> the copyright owners.  (The LICENSE file in the OCaml distribution is
> carefully worded to cover only the source files that are copyright INRIA.)
> 
> Fortunately, all of the OCaml code is copyright INRIA except this
> lousy "regexp" library, which no-one is forced to use (the remainder
> of the OCaml system doesn't depend on it), and which we'll replace
> eventually by something more efficient.
> 
> > And even if you owned all the code and decided to change its license,
> > especially to something less liberal than the GPL, people who don't like
> > it can just take your old GPLed version and use THAT instead and hack on
> > THAT instead.  Like what happened with Sistina and GFS.
> 
> We're talking about making the OCaml license *more* liberal, by
> *removing* silly requirements of the LGPL.  I don't see users
> objecting to this.

Well, you are the copyright owner, but going away from the LGPL is more
liberal for the user, but less liberal for others, so it is a compromise, a
subtle balance that must be met.

The current 'silly' requirement you object to is there to guarantee the right
of the user of a tool written in ocaml to use with the latest bug fixed
version of the ocaml runtime libs even if the producer of the product don't
care about it.

This may be an important issue, especially if ocaml gets used in more
security-conscious stuff.

Also there is the fact that some may want to produce only the i386 native code
and distribute this to their clients, which ties them to use i386 hardware,
and is a restriction of their liberty to use whatever they want.

Sure, true arch indepent bytecode as we will soon have may well solve this
problem.

You may think that this is not a real problem, and it is not, provided the
provider of the product is conscious enough to provide a rebuild or something
like it when it is needed, but this is not something you can guarantee, and it
may have repercussions on the perception of ocaml in some ways.

Anyway, this is a hairy discution, which we should maybe port to a specialized
list or something like that ?


Friendly,

Sven Luther
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

