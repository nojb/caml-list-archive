Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA30530; Fri, 9 Nov 2001 00:23:57 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA30123 for <caml-list@pauillac.inria.fr>; Fri, 9 Nov 2001 00:23:55 +0100 (MET)
Received: from c0mailgw12.prontomail.com ([216.163.180.10])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id fA8NNpX10894
	for <caml-list@pauillac.inria.fr>; Fri, 9 Nov 2001 00:23:52 +0100 (MET)
Received: by c0mailgw12.prontomail.com (NPlex 5.5.029) id 3BD60C21002BD643 for caml-list@pauillac.inria.fr; Thu, 8 Nov 2001 15:16:58 -0800
Received: from 207.1.194.208 by SmtpServer for <enew@bigfoot.com>; Thu, 08 Nov 2001 23:16:54 +0000
X-Sender: 29538.starband.net
Message-ID: <001101c168ac$41891110$d0c201cf@XENO>
Reply-To: "Eric Newhuis" <enew@starband.net>
From: "Eric Newhuis" <enew@bigfoot.com>
To: "Caml" <caml-list@pauillac.inria.fr>
Subject: [Caml-list] APL in Caml
Date: Thu, 8 Nov 2001 17:22:22 -0600
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_000_000E_01C16879.ED78C110"
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2600.0000
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2600.0000
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

This is a multi-part message in MIME format.

------=_NextPart_000_000E_01C16879.ED78C110
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

Has anyone experience with APL or one of its dialects?  (I've tried J, =
for instance.)

I am impressed with the concise power of the proprietary K language from =
www.kx.com and would like to have some of that expressive power around =
when I write Caml code.

I am interested in learning if there are any Caml features that would =
enable APL-like vector manipulation and K-like transparent i/o, but with =
type safety.

------=_NextPart_000_000E_01C16879.ED78C110
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.2600.0" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffd5>
<DIV><FONT face=3DArial size=3D2>Has anyone&nbsp;experience with APL or =
one of its=20
dialects?&nbsp; (I've tried J, for instance.)</FONT></DIV>
<DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>I am impressed with the concise power =
of the=20
proprietary K language from <A href=3D"http://www.kx.com">www.kx.com</A> =
and would=20
like to have some of that expressive power around when I write Caml=20
code.</FONT></DIV>
<DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>I am interested in learning if there =
are any Caml=20
features that would enable APL-like vector manipulation and K-like =
transparent=20
i/o, but with type safety.</FONT></DIV></BODY></HTML>

------=_NextPart_000_000E_01C16879.ED78C110--

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

