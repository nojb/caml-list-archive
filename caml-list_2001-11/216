Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA29980; Mon, 12 Nov 2001 09:19:15 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA29264 for <caml-list@pauillac.inria.fr>; Mon, 12 Nov 2001 09:19:14 +0100 (MET)
Received: from c007.snv.cp.net (c007-h013.c007.snv.cp.net [209.228.33.220])
	by nez-perce.inria.fr (8.11.1/8.10.0) with SMTP id fAC8JDH23460
	for <caml-list@inria.fr>; Mon, 12 Nov 2001 09:19:14 +0100 (MET)
Received: (cpmta 10797 invoked from network); 12 Nov 2001 00:19:11 -0800
Received: from 65.187.194.217 (HELO vaiobambino)
  by smtp.directvinternet.com (209.228.33.220) with SMTP; 12 Nov 2001 00:19:11 -0800
X-Sent: 12 Nov 2001 08:19:11 GMT
From: "Jeff Henrikson" <jehenrik@yahoo.com>
To: "Berke Durak" <berke@altern.org>, <caml-list@inria.fr>
Subject: RE: [Caml-list] Rewriting UNIX in Caml and getting rid of the C disease
Date: Mon, 12 Nov 2001 03:32:27 -0500
Message-ID: <003501c16b54$8f7021c0$0b01a8c0@mit.edu>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook 8.5, Build 4.71.2173.0
In-Reply-To: <20011111061746.A214@gogol.zorgol>
Importance: Normal
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2615.200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> An appropriate sublanguage of Caml should be isolated, and a given,
> well-accepted brand of UNIX should be reimplemented in that language.

Well, I've heard lots of versions of comment before, and let's just say I'm not holding my breath for an industrial strength
solution.  Here's some prior art.  Olin Shivers at the MIT AI lab wrote an OS based on SML/NJ called ML/OS and called it "the
express project":

http://www.ai.mit.edu/projects/express/

More significantly, the toolkit he used seems to be taking off a lot better. The Flux OS Kit from the University of Utah has about
10 client research projects.  The basic philosophy is that the "hello world" OS should be as easy to write as the "hello world" C
program.  They have cannibalized a lot of functionality from Linux and FreeBSD, including various device driver models.

http://www.cs.utah.edu/flux/oskit/projects.html

And then, for the ultra-hyper-purist who takes purity above progress at all cost, there's Tunes, which has looked about as
undeveloped as it does now for the last seven years.  The idea here is an os which can be quieried, "Print me out a copy of your
own source code decompiled.  Then instrument in ways x, y and z, compile it, and dynamically load the changes back into yourself."
They plan on doing this with a untyped low level language which is like a compiler intermediary form for a GCed language, plus a
high level language which is like scheme with a type-and-various-other-properties proof system added on.

http://tunes.org/

When will tunes be ready?  Well, my first comment was not my own.  In their own words, "Don't hold your breath (tm)."


Jeff Henrikson

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

