Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA04806; Tue, 20 Nov 2001 21:56:09 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA04977 for <caml-list@pauillac.inria.fr>; Tue, 20 Nov 2001 21:56:08 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id fAKKtxb19879;
	Tue, 20 Nov 2001 21:55:59 +0100 (MET)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA04921; Tue, 20 Nov 2001 21:55:58 +0100 (MET)
Date: Tue, 20 Nov 2001 21:55:58 +0100
From: Xavier Leroy <xavier.leroy@inria.fr>
To: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
Cc: frisch@clipper.ens.fr, caml-list@inria.fr
Subject: Re: [Caml-list] Polymorphic methods
Message-ID: <20011120215558.A2692@pauillac.inria.fr>
References: <Pine.GSO.4.33.0111191612460.13708-100000@clipper.ens.fr> <20011120092918S.garrigue@kurims.kyoto-u.ac.jp>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <20011120092918S.garrigue@kurims.kyoto-u.ac.jp>; from garrigue@kurims.kyoto-u.ac.jp on Tue, Nov 20, 2001 at 09:29:18AM +0900
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> After two years, my promises may seem void, but I intend to
> implement polymorphic methods, probably as soon as 3.03 is released.
> Or should I start before?  This is a rather large chunk of work,
> modifying very sensitive parts of the compiler...
> 
> What would you need them for?

I believe my ever-ongoing Caml/Java mapping could make good use of
polymorphic methods.  Indeed, in this particular example of
translating a Java class hierarchy to Caml, polymorphic methods seem
to offer exactly what is needed to simulate Java-like implicit
subsumption with OCaml's row polymorphism.

This said, I understand polymorphic methods impact the type inference
engine quite a lot, and I'm not pushing for additional complexity in
this (already rather hairy) part of the OCaml implementation...

- Xavier Leroy
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

