Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id GAA28877; Thu, 22 Nov 2001 06:06:45 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id GAA28808 for <caml-list@pauillac.inria.fr>; Thu, 22 Nov 2001 06:06:44 +0100 (MET)
Received: from mx7.airmail.net (mx7.airmail.net [209.196.77.104])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id fAM56hT12718
	for <caml-list@inria.fr>; Thu, 22 Nov 2001 06:06:44 +0100 (MET)
Received: from covert.black-ring.iadfw.net ([209.196.123.142])
	by mx7.airmail.net with smtp (Exim 3.16 #10)
	id 166m4T-000EOh-00
	for caml-list@inria.fr; Wed, 21 Nov 2001 23:06:45 -0600
Received: from rootless.localdomain from [207.136.45.127] by covert.black-ring.iadfw.net 
	(/\##/\ Smail3.1.30.16 #30.55) with esmtp for <caml-list@inria.fr> sender: <william.newman@airmail.net>
	id <mS/166m5m-0002n2S@covert.black-ring.iadfw.net>; Wed, 21 Nov 2001 23:08:06 -0600 (CST)
Received: (from newman@localhost)
	by rootless.localdomain (8.10.1/8.10.1) id fAM4eTm18196;
	Wed, 21 Nov 2001 22:40:29 -0600 (CST)
Date: Wed, 21 Nov 2001 22:40:28 -0600
From: William Harold Newman <william.newman@airmail.net>
To: caml-list@inria.fr
Subject: Re: [Caml-list] limits on mutual recursion and modules?
Message-ID: <20011121224028.A22464@rootless>
References: <20011121195339.A24894@rootless> <Pine.BSF.4.10.10111220358320.12326-100000@bpr.best.vwh.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0.1i
In-Reply-To: <Pine.BSF.4.10.10111220358320.12326-100000@bpr.best.vwh.net>; from bpr@bpr.best.vwh.net on Thu, Nov 22, 2001 at 04:27:24AM +0000
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, Nov 22, 2001 at 04:27:24AM +0000, Brian Rogoff wrote:
> On Wed, 21 Nov 2001, William Harold Newman wrote:

> > for mutual recursion between classes and modules in OCaml. That doesn't 
> 
> You mean between classes and types here, of course. 

Yes.

> You use that same trick. It also means that you must make a polymorphic
> version of Set to participate in the recursion; the library Set won't do. 
> Check this out 
> 
> http://caml.inria.fr/archives/200010/msg00154.html

Thank you, that seems to be exactly what I was looking for.

> It's my guess that every frequent user of OCaml or SML bangs into this
> within their first 9 months of serious ML programming, and most likely
> long before that.

It might make a good entry in <http://caml.inria.fr/FAQ/FAQ_EXPERT-eng.html>.

-- 
William Harold Newman <william.newman@airmail.net>
"Furious activity is no substitute for understanding." -- H. H. Williams
PGP key fingerprint 85 CE 1C BA 79 8D 51 8C  B9 25 FB EE E0 C3 E5 7C
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

