Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id EAA27828; Thu, 22 Nov 2001 04:12:59 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA27544 for <caml-list@pauillac.inria.fr>; Thu, 22 Nov 2001 04:12:58 +0100 (MET)
Received: from gatekeeper.ph.inter.net (ip3.ph.psi.net [203.176.75.3] (may be forged))
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id fAM3Csn11254
	for <caml-list@pauillac.inria.fr>; Thu, 22 Nov 2001 04:12:54 +0100 (MET)
Received: from dido.engr.internet.org.ph (unknown [203.176.75.250])
	by gatekeeper.ph.inter.net (Postfix) with SMTP id D65BB43DA4
	for <caml-list@pauillac.inria.fr>; Thu, 22 Nov 2001 11:12:46 +0800 (PHT)
Received: by dido.engr.internet.org.ph (sSMTP sendmail emulation); Thu, 22 Nov 2001 11:11:57 +0800
Date: Thu, 22 Nov 2001 11:10:50 +0800
From: "Rafael 'Dido' Sevilla" <sevillar@team.ph.inter.net>
To: Michael Hicks <mhicks@cs.cornell.edu>
Subject: Re: [Caml-list] Rewriting UNIX in Caml and getting rid of the C disease
Message-ID: <20011122111049.A702@team.ph.inter.net>
References: <706871B20764CD449DB0E8E3D81C4D4301FA2278@opus.cs.cornell.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <706871B20764CD449DB0E8E3D81C4D4301FA2278@opus.cs.cornell.edu>; from mhicks@cs.cornell.edu on Wed, Nov 21, 2001 at 04:25:12PM -0500
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


On Wed, Nov 21, 2001 at 04:25:12PM -0500, Michael Hicks wrote:
> Cornell and AT&T Research called Cyclone.  It incorporates successful
> high-level language features to ensure safety, but unlike most
> high-level languages, gives the programmer control over data
> representation and, to a large extent, memory management (e.g. a GC is
> not required).  Furthermore, Cyclone is very close to C, thus

Oh, a GC is not required?  Last time I checked the website it used the
Boehm-Demers-Weiser conservative garbage collector.  So the only time a
GC is not required is when your program does little or NO heap
allocation whatsoever...  The FAQ says:

Q: Can I call free?
A: No, individual memory objects may not be freed. In future versions,
we may support freeing objects for which you can prove that there are no
other pointers to the object. Until then, you must rely on a garbage
collector to reclaim heap objects or use regions (similar to ``arenas''
or ``zones'') for managing collections of objects.

Thus Cyclone doesn't (yet anyway), give the programmer that much control
over memory management.  But hey, the compiler is still at Version 0.2
so it's got a long way to go...

> So that I'm not too off-topic, I should say that OCaml has been a strong
> influence on Cyclone---many of the OCaml libraries and tools were ported

This was one of the first things I noted about it, as these days I'm
just beginning to learn Caml myself and ran into Cyclone just a few days
ago (thanks to aleph1)...

Looks very cool.  Might be a better language to write a next-generation
OS in once it matures some more, but yes, for applications that don't
require intimate contact with the machine (almost all applications fit
into this category), Caml may work better.

-- 
Rafael R. Sevilla <sevillar@team.ph.inter.net>   +63(2)   8177746 ext. 8311
Programmer, Inter.Net Philippines                +63(917) 4458925
http://dido.engr.internet.org.ph/                OpenPGP Key ID: 0x5CDA17D8
            Heute die Welt und Morgen das Sonnensystem!
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

