Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id BAA18708; Tue, 20 Nov 2001 01:21:29 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA18633 for <caml-list@pauillac.inria.fr>; Tue, 20 Nov 2001 01:21:23 +0100 (MET)
Received: from favie.faith.gr.jp (favie.faith.gr.jp [61.127.175.250])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id fAK0LJ129982;
	Tue, 20 Nov 2001 01:21:20 +0100 (MET)
Received: from localhost (dhcp7.faith.gr.jp [192.168.1.17])
	by favie.faith.gr.jp (8.9.3/8.9.3) with ESMTP id JAA22535;
	Tue, 20 Nov 2001 09:21:16 +0900
To: alan.schmitt@inria.fr
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] lablgtk, caml and windows
In-Reply-To: <20011118122707.F1667@alan-schm1p>
References: <20011118122707.F1667@alan-schm1p>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20011120092055S.garrigue@kurims.kyoto-u.ac.jp>
Date: Tue, 20 Nov 2001 09:20:55 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 22
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Alan Schmitt <alan.schmitt@inria.fr>

> I'm working on a small project for my wife to use at work. This project
> has a graphical interface, is going to be used under windows, and should
> be easy to install. The way I've done it until now is to use gtk+, and
> use the mingw32 port of gcc and the corresponding gtk+ dlls. Of course
> I'd really like to use caml for this, but I'd like to know how to
> proceed with this. More precisely, is it possible to use lablgtk with
> windows, do I need cygwin or mingw32, and if I use cygwin, is it just a
> matter of providing the cygwin dll to run it ?

It is possible to use LablGTK with windows (the Makefile supports it).
I only tested it with Visual C++, but it should probably work with any
compiler.
If your goal is to do static linking, then you may look at unison's
packaging: they made lots of efforts to avoid depending on any
non-standard DLL. Note that this may mean you have to recompile GTK+
libraries statically.

Cheers,

Jacques Garrigue
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

