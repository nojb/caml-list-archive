Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA12272; Sun, 11 Nov 2001 13:48:57 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA12981 for <caml-list@pauillac.inria.fr>; Sun, 11 Nov 2001 13:48:57 +0100 (MET)
Received: from dpt-info.u-strasbg.fr (dpt-info.u-strasbg.fr [130.79.44.193])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id fABCmu508735
	for <caml-list@inria.fr>; Sun, 11 Nov 2001 13:48:56 +0100 (MET)
Received: (from luther@localhost)
	by dpt-info.u-strasbg.fr (8.9.3/8.9.3) id NAA23938;
	Sun, 11 Nov 2001 13:47:46 +0100
Date: Sun, 11 Nov 2001 13:47:46 +0100
From: Sven <luther@dpt-info.u-strasbg.fr>
To: Berke Durak <berke@altern.org>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Rewriting UNIX in Caml and getting rid of the C disease
Message-ID: <20011111134746.E23725@dpt-info.u-strasbg.fr>
References: <20011111061746.A214@gogol.zorgol>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0.1i
In-Reply-To: <20011111061746.A214@gogol.zorgol>; from berke@altern.org on Sun, Nov 11, 2001 at 06:17:46AM +0100
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sun, Nov 11, 2001 at 06:17:46AM +0100, Berke Durak wrote:
> Everyone on this list will agree that the C language is far from being
> perfect. More specifically, if we consider its various derivatives
> together (i.e. the C preprocessor and C++) they form the worst piece
> of stinking, pathogen and toxic garbage in the realm of programming
> languages.

...

A most interresting project, i would be higly interrested by it.

My previous thinkings about it would have me worried about the low level
access stuff.

How does ocaml and its garbage collection interract with things like handling
non-cacheable driver IO memory, or maybe the DMA-able pages sent to your SCSI
driver or graphic card ?

A worthy project, but i assume somewhat really big (after all, linux represent
10 years of developpment by thousands of very competent programmers all over
the world). A more realistic thing would be a small ocaml written kernel for a
small embedded system, with a limited set of peripherics. Once that is done,
you can go ahead and propose a more complete system.

Friendly,

Sven Luther
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

