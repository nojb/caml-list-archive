Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA07722; Tue, 6 Nov 2001 16:51:35 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA07473 for <caml-list@pauillac.inria.fr>; Tue, 6 Nov 2001 16:51:34 +0100 (MET)
Received: from heplix4.ikp.physik.tu-darmstadt.de (heplix4.ikp.physik.tu-darmstadt.de [130.83.210.158])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id fA6FpXD19390
	for <caml-list@inria.fr>; Tue, 6 Nov 2001 16:51:33 +0100 (MET)
Received: (from ohl@localhost)
	by heplix4.ikp.physik.tu-darmstadt.de (8.11.2/8.11.2/SuSE Linux 8.11.1-0.5) id fA6FpP729976;
	Tue, 6 Nov 2001 16:51:25 +0100
From: Thorsten Ohl <ohl@hep.tu-darmstadt.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15336.1789.139574.113570@heplix4.ikp.physik.tu-darmstadt.de>
Date: Tue, 6 Nov 2001 16:51:25 +0100
To: caml-list@inria.fr
CC: Christophe TROESTLER <debian00@tiscalinet.be>
Subject: [Caml-list] Array Optimizations
In-Reply-To: <20011105.221118.74322497.debian00@tiscalinet.be>
References: <20011105.221118.74322497.debian00@tiscalinet.be>
X-Mailer: VM 6.84 under Emacs 20.7.1
Reply-To: ohl@hep.tu-darmstadt.de
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Christophe TROESTLER writes:

> P.S.  As outlined in the paper, the Bigarray library is really slow
> (much slower than the standard Array).  Given its (other)
> capabilities, it is tempting to use it for numeric processing
> however.

I never noticed that Bigarray was so much slower, because I only
started to use it after standard Arrays outgrew my memory.  In this
case, the speedup from mapped Bigarrays relative to mildly thrashing
standard Arrays to was dramatic and masked the slowdown completely.

I didn't know that all accesses are going through the general
interface.   Inlining accesses in the native compiler for Arrays with
fixed dimensions could be a tremendous performance boost.

> Until this is solved,

I currently have a program that vitally depends on Bigarrays for
numeric processing.  The runtime is still on the order of hours and I
wouldn't want to rewrite it in Fortran anyway, but a factor 10 speedup
would be really cool :-).

Cheers,
-Thorsten

> The Omega Project:
> http://www.cs.umd.edu/projects/omega/

Darn, somebody used that name before ...
-- 
Thorsten Ohl, Physics Department, TU Darmstadt -- ohl@hep.tu-darmstadt.de
http://heplix.ikp.physik.tu-darmstadt.de/~ohl/ [<=== PGP public key here]
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

