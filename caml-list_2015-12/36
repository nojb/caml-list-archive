Return-Path: <icfp.publicity@googlemail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 48ADB7FD6D
	for <caml-list@sympa.inria.fr>; Sun,  6 Dec 2015 04:39:58 +0100 (CET)
IronPort-PHdr: 9a23:fCKx/RVcLfGFHajj54M1qNyXbQjV8LGtZVwlr6E/grcLSJyIuqrYZhOOt8tkgFKBZ4jH8fUM07OQ6PC+HzRYqb+681k8M7V0HycfjssXmwFySOWkMmbcaMDQUiohAc5ZX0Vk9XzoeWJcGcL5ekGA6ibqtW1aJBzzOEJPK/jvHcaK1oLsh770o8WbSj4LrQT+SIs6FA+xowTVu5teqqpZAYF19CH0pGBVcf9d32JiKAHbtR/94sCt4MwrqHwI6Lpyv/JHBK7zeqB9Sb1DEBwnNXo07Yvlr0r5QBOL90cbB2QdnAIOGxXP6BDxX4vgmiT9seV51SyTPMmwRrcxChq46KI+bB7uhDwKJnYa7XnakIQkjalVuFS5uhZ7woXVfJC9O/15cafQeNobQSxKWcMHBH8JOZ+1c4ZaV7lJBu1ftYSo/1Y=
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=icfp.publicity@googlemail.com; spf=Pass smtp.mailfrom=icfp.publicity@googlemail.com; spf=None smtp.helo=postmaster@mail-yk0-f200.google.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  icfp.publicity@googlemail.com) identity=pra;
  client-ip=209.85.160.200;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="icfp.publicity@googlemail.com";
  x-sender="icfp.publicity@googlemail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  icfp.publicity@googlemail.com designates 209.85.160.200 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.160.200;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="icfp.publicity@googlemail.com";
  x-sender="icfp.publicity@googlemail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-yk0-f200.google.com) identity=helo;
  client-ip=209.85.160.200;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="icfp.publicity@googlemail.com";
  x-sender="postmaster@mail-yk0-f200.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0A3AQC0rWNWm8igVdFIDQMGg1k0bqpDgVuKBYkiFwELgjuCZoFyPBABAQEBAQEBARABAQEBAQYLCwkhLoItgiAIAQIjAQEkAgQGCEUNQgEFAQMBOgsCDId3AQECEg2hKIExPjGKV4VUAQWBbIQtChkEChkNhFkBCgEBAQEBFwaGDYcEgmIHCAMEEoJzDEGBMYdUCoVQgTOIBYUtiA+BW0mDeoMmjzeCJTZHUDiCSQmBXT40hCUCHgeBIwEBAQ
X-IPAS-Result: A0A3AQC0rWNWm8igVdFIDQMGg1k0bqpDgVuKBYkiFwELgjuCZoFyPBABAQEBAQEBARABAQEBAQYLCwkhLoItgiAIAQIjAQEkAgQGCEUNQgEFAQMBOgsCDId3AQECEg2hKIExPjGKV4VUAQWBbIQtChkEChkNhFkBCgEBAQEBFwaGDYcEgmIHCAMEEoJzDEGBMYdUCoVQgTOIBYUtiA+BW0mDeoMmjzeCJTZHUDiCSQmBXT40hCUCHgeBIwEBAQ
X-IronPort-AV: E=Sophos;i="5.20,388,1444687200"; 
   d="scan'208";a="190603997"
Received: from mail-yk0-f200.google.com ([209.85.160.200])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 06 Dec 2015 04:39:54 +0100
Received: by ykdu195 with SMTP id u195so239274694ykd.1
        for <caml-list@inria.fr>; Sat, 05 Dec 2015 19:39:52 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlemail.com; s=20120113;
        h=mime-version:reply-to:message-id:date:subject:from:to:content-type;
        bh=eldF37E7SDj4bx3WEV/6/DgvTk1NyCTA9FUsiwTejlk=;
        b=yjWos0tBHXc/e91z4rZJiSIPpsZQrrn9s2FYZjJq+9n5NnOTI9Aa2el79uM7NYWsw6
         ixkx9DwoM2/sPwv0JUnKKHJKiRjrrNm7QBiQK82YMmNJ9vGrRthZ+gSDTcL54i28zzk0
         rgFXgTGF2ZkK2dbTN5jk/qNKSIfz+VZK/rTXz34Tz/2y7PUaavV4Y57XCjBTfhvhb16u
         0mDmAl4nF+3xrjgbnybRHuRmHQSkQXAKuwhwYueLgUewe0dU1svSGonMIu/Ussc4PbI7
         sB9N+6acgDGK3TUvVMmg6yPXZQkp20u76e3i1/oMGn2/6NsZISCIhKooIc1saL4cwM2+
         gYWQ==
MIME-Version: 1.0
X-Received: by 10.129.83.85 with SMTP id h82mr20826451ywb.0.1449373192740;
 Sat, 05 Dec 2015 19:39:52 -0800 (PST)
Reply-To: icfp.publicity@googlemail.com
Message-ID: <001a114d6f324cf0320526327e49@google.com>
Date: Sun, 06 Dec 2015 03:39:52 +0000
From: Lindsey Kuper <icfp.publicity@googlemail.com>
To: caml-list@inria.fr
Content-Type: multipart/alternative; boundary=001a114d6f324cf0140526327e46
Subject: [Caml-list] ICFP 2016 Call for Papers

--001a114d6f324cf0140526327e46
Content-Type: text/plain; charset=ISO-8859-1; format=flowed; delsp=yes

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ICFP 2016
The 21st ACM SIGPLAN International Conference on Functional Programming
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  
&nbsp;http://conf.researchr.org/home/icfp-2016
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  
&nbsp; &nbsp; &nbsp; &nbsp;Call for Papers

Important dates
---------------

Submissions due:&nbsp; &nbsp; Wednesday, March 16 2016, 15:00 (UTC)
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  
https://icfp2016.hotcrp.com
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (in  
preparation as of December 1)
Author response:&nbsp; &nbsp; Monday, 2 May, 2016, 15:00 (UTC) -
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  
Thursday, 5 May, 2016, 15:00 (UTC)
Notification:&nbsp; &nbsp; &nbsp; &nbsp;Friday, 20 May, 2016
Final copy due:&nbsp; &nbsp; &nbsp;TBA
Early registration: TBA
Conference:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Tuesday, 20 September -
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  
Thursday, 22 September, 2016

Scope
-----

ICFP 2016 seeks original papers on the art and science of functional
programming. Submissions are invited on all topics from principles to
practice, from foundations to features, and from abstraction to
application. The scope includes all languages that encourage
functional programming, including both purely applicative and
imperative languages, as well as languages with objects, concurrency,
or parallelism. Topics of interest include (but are not limited to):

- Language Design: concurrency, parallelism, and distribution;
&nbsp; modules; components and composition; metaprogramming; type systems;
&nbsp; interoperability; domain-specific languages; and relations to
&nbsp; imperative, object-oriented, or logic programming.

- Implementation: abstract machines; virtual machines; interpretation;
&nbsp; compilation; compile-time and run-time optimization; garbage
&nbsp; collection and memory management; multi-threading; exploiting
&nbsp; parallel hardware; interfaces to foreign functions, services,
&nbsp; components, or low-level machine resources.

- Software-Development Techniques: algorithms and data structures;
&nbsp; design patterns; specification; verification; validation; proof
&nbsp; assistants; debugging; testing; tracing; profiling.

- Foundations: formal semantics; lambda calculus; rewriting; type
&nbsp; theory; monads; continuations; control; state; effects; program
&nbsp; verification; dependent types.

- Analysis and Transformation: control-flow; data-flow; abstract
&nbsp; interpretation; partial evaluation; program calculation.

- Applications: symbolic computing; formal-methods tools; artificial
&nbsp; intelligence; systems programming; distributed-systems and web
&nbsp; programming; hardware design; databases; XML processing; scientific
&nbsp; and numerical computing; graphical user interfaces; multimedia and
&nbsp; 3D graphics programming; scripting; system administration; security.

- Education: teaching introductory programming; parallel programming;
&nbsp; mathematical proof; algebra.

- Functional Pearls: elegant, instructive, and fun essays on
&nbsp; functional programming.

- Experience Reports: short papers that provide evidence that
&nbsp; functional programming really works or describe obstacles that have
&nbsp; kept it from working.

If you are concerned about the appropriateness of some topic, do not
hesitate to contact the program chair.

Abbreviated instructions for authors
------------------------------------

- By Wednesday, March 16 2016, 15:00 (UTC), submit a full paper of at
&nbsp; most 12 pages (6 pages for an Experience Report), in standard
&nbsp; SIGPLAN conference format, including figures but ***excluding
&nbsp; bibliography***.

The deadlines will be strictly enforced and papers exceeding the page
limits will be summarily rejected.

***ICFP 2016 will employ a lightweight double-blind reviewing
process.*** To facilitate this, submitted papers must adhere to two
rules:

&nbsp;1. ***author names and institutions must be omitted***, and

&nbsp;2. ***references to authors&#39; own related work should be in the  
third
&nbsp; &nbsp; person*** (e.g., not &quot;We build on our previous  
work ...&quot; but
&nbsp; &nbsp; rather &quot;We build on the work of ...&quot;).

The purpose of this process is to help the PC and external reviewers
come to an initial judgement about the paper without bias, not to make
it impossible for them to discover the authors if they were to
try. Nothing should be done in the name of anonymity that weakens the
submission or makes the job of reviewing the paper more difficult
(e.g., important background references should not be omitted or
anonymized). In addition, authors should feel free to disseminate
their ideas or draft versions of their paper as they normally
would. For instance, authors may post drafts of their papers on the
web or give talks on their research ideas. We have put together a
document answering frequently asked questions that should address many
common concerns:
http://conf.researchr.org/track/icfp-2016/icfp-2016-papers#Submission-and-Reviewing-FAQ

- Authors have the option to attach supplementary material to a
&nbsp; submission, on the understanding that reviewers may choose not to
&nbsp; look at it. The material should be uploaded at submission time, as a
&nbsp; single pdf or a tarball, not via a URL. This supplementary material
&nbsp; may or may not be anonymized; if not anonymized, it will only be
&nbsp; revealed to reviewers after they have submitted their review of your
&nbsp; paper and learned your identity.

- Each submission must adhere to SIGPLAN&#39;s republication policy, as
&nbsp; explained on the web at:
&nbsp; http://www.sigplan.org/Resources/Policies/Republication

- Authors of resubmitted (but previously rejected) papers have the
&nbsp; option to attach an annotated copy of the reviews of their previous
&nbsp; submission(s), explaining how they have addressed these previous
&nbsp; reviews in the present submission. If a reviewer identifies
&nbsp; him/herself as a reviewer of this previous submission and wishes to
&nbsp; see how his/her comments have been addressed, the program chair will
&nbsp; communicate to this reviewer the annotated copy of his/her previous
&nbsp; review. Otherwise, no reviewer will read the annotated copies of the
&nbsp; previous reviews.

Overall, a submission will be evaluated according to its relevance,
correctness, significance, originality, and clarity. It should explain
its contributions in both general and technical terms, clearly
identifying what has been accomplished, explaining why it is
significant, and comparing it with previous work. The technical
content should be accessible to a broad audience. Functional Pearls
and Experience Reports are separate categories of papers that need not
report original research results and must be marked as such at the
time of submission. Detailed guidelines on both categories are given
below.

Presentations will be videotaped and released online if the presenter
consents. The proceedings will be freely available for download from
the ACM Digital Library from at least one week before the start of the
conference until two weeks after the conference.

Formatting: Submissions must be in PDF format printable in black and
white on US Letter sized paper and interpretable by
Ghostscript. Papers must adhere to the standard SIGPLAN conference
format: two columns, nine-point font on a ten-point baseline, with
columns 20pc (3.33in) wide and 54pc (9in) tall, with a column gutter
of 2pc (0.33in). A suitable document template for LaTeX is available
at http://www.sigplan.org/Resources/Author/

Submission: Submissions will be accepted at
https://icfp2016.hotcrp.com (in preparation as of December 1).

Improved versions of a paper may be submitted at any point before the
submission deadline using the same web interface.

Author response: Authors will have a 72-hour period, starting at 15:00
UTC on Monday, 2 May, 2016, to read reviews and respond to them.

ACM Author-Izer is a unique service that enables ACM authors to
generate and post links on either their home page or institutional
repository for visitors to download the definitive version of their
articles from the ACM Digital Library at no charge. Downloads through
Author-Izer links are captured in official ACM statistics, improving
the accuracy of usage and impact measurements. Consistently linking
the definitive version of ACM article should reduce user confusion
over article versioning. After your article has been published and
assigned to your ACM Author Profile page, please visit
http://www.acm.org/publications/acm-author-izer-service to learn how
to create your links for free downloads from the ACM DL.

Publication date: The official publication date of accepted papers is
the date the proceedings are made available in the ACM Digital
Library. This date may be up to two weeks prior to the first day of
the conference. The official publication date affects the deadline for
any patent filings related to published work.

Special categories of papers
----------------------------

In addition to research papers, ICFP solicits two kinds of papers that
do not require original research contributions: Functional Pearls,
which are full papers, and Experience Reports, which are limited to
six pages. Authors submitting such papers may wish to consider the
following advice.

Functional Pearls
=================

A Functional Pearl is an elegant essay about something related to
functional programming. Examples include, but are not limited to:

- a new and thought-provoking way of looking at an old idea
- an instructive example of program calculation or proof
- a nifty presentation of an old or new data structure
- an interesting application of functional programming techniques
- a novel use or exposition of functional programming in the classroom

While pearls often demonstrate an idea through the development of a
short program, there is no requirement or expectation that they do
so. Thus, they encompass the notions of theoretical and educational
pearls.

Functional Pearls are valued as highly and judged as rigorously as
ordinary papers, but using somewhat different criteria. In particular,
a pearl is not required to report original research, but, it should be
concise, instructive, and entertaining. Your pearl is likely to be
rejected if your readers get bored, if the material gets too
complicated, if too much specialized knowledge is needed, or if the
writing is inelegant. The key to writing a good pearl is polishing.

A submission you wish to have treated as a pearl must be marked as
such on the submission web page, and should contain the words
``Functional Pearl&#39;&#39; somewhere in its title or subtitle. These steps
will alert reviewers to use the appropriate evaluation
criteria. Pearls will be combined with ordinary papers, however, for
the purpose of computing the conference&#39;s acceptance rate.

Experience Reports
==================

The purpose of an Experience Report is to help create a body of
published, refereed, citable evidence that functional programming
really works -- or to describe what obstacles prevent it from working.

Possible topics for an Experience Report include, but are not limited
to:

- insights gained from real-world projects using functional
&nbsp; programming

- comparison of functional programming with conventional programming
&nbsp; in the context of an industrial project or a university curriculum

- project-management, business, or legal issues encountered when using
&nbsp; functional programming in a real-world project

- curricular issues encountered when using functional programming in
&nbsp; education

- real-world constraints that created special challenges for an
&nbsp; implementation of a functional language or for functional
&nbsp; programming in general

An Experience Report is distinguished from a normal ICFP paper by its
title, by its length, and by the criteria used to evaluate it.

- Both in the proceedings and in any citations, the title of each
&nbsp; accepted Experience Report must begin with the words ``Experience
&nbsp; Report&#39;&#39; followed by a colon. The acceptance rate for  
Experience
&nbsp; Reports will be computed and reported separately from the rate for
&nbsp; ordinary papers.

- An Experience Report is at most six pages long. Each accepted
&nbsp; Experience Report will be presented at the conference, but depending
&nbsp; on the number of Experience Reports and regular papers accepted,
&nbsp; authors of Experience reports may be asked to give shorter talks.

- Because the purpose of Experience Reports is to enable our community
&nbsp; to accumulate a body of evidence about the efficacy of functional
&nbsp; programming, an acceptable Experience Report need not add to the
&nbsp; body of knowledge of the functional-programming community by
&nbsp; presenting novel results or conclusions. It is sufficient if the
&nbsp; Report states a clear thesis and provides supporting evidence. The
&nbsp; thesis must be relevant to ICFP, but it need not be novel.

The program committee will accept or reject Experience Reports based
on whether they judge the evidence to be convincing. Anecdotal
evidence will be acceptable provided it is well argued and the author
explains what efforts were made to gather as much evidence as
possible. Typically, more convincing evidence is obtained from papers
which show how functional programming was used than from papers which
only say that functional programming was used. The most convincing
evidence often includes comparisons of situations before and after the
introduction or discontinuation of functional programming. Evidence
drawn from a single person&#39;s experience may be sufficient, but more
weight will be given to evidence drawn from the experience of groups
of people.

An Experience Report should be short and to the point: make a claim
about how well functional programming worked on your project and why,
and produce evidence to substantiate your claim. If functional
programming worked for you in the same ways it has worked for others,
you need only to summarize the results?the main part of your paper
should discuss how well it worked and in what context. Most readers
will not want to know all the details of your project and its
implementation, but please characterize your project and its context
well enough so that readers can judge to what degree your experience
is relevant to their own projects. Be especially careful to highlight
any unusual aspects of your project. Also keep in mind that specifics
about your project are more valuable than generalities about
functional programming; for example, it is more valuable to say that
your team delivered its software a month ahead of schedule than it is
to say that functional programming made your team more productive.

If your paper not only describes experience but also presents new
technical results, or if your experience refutes cherished beliefs of
the functional-programming community, you may be better off submitting
it as a full paper, which will be judged by the usual criteria of
novelty, originality, and relevance. If you are unsure in which
category to submit, the program chair will be happy to help you
decide.

Organizers
----------

General Co-Chairs:

Jacques Garrigue (Nagoya University)
Gabriele Keller (University of New South Wales)

Program Chair:

Eijiro Sumii (Tohoku University)

Program Committee:

Koen Claessen (Chalmers University of Technology)
Joshua Dunfield (University of British Columbia, Canada)
Matthew Fluet (Rochester Institute of Technology)
Nate Foster (Cornell University)
Dan Grossman (University of Washington, USA)
Jurriaan Hage (Utrecht University)
Roman Leshchinskiy (Standard Chartered Bank)
Keisuke Nakano (The University of Electro-Communications)
Aleksandar Nanevski (IMDEA Software Institute)
Scott Owens (University of Kent)
Sungwoo Park (Pohang University of Science and Technology)
Amr Sabry (Indiana University)
Tom Schrijvers (KU Leuven)
Olin Shivers (Northeastern University)
Walid Taha (Halmstad University)
Dimitrios Vytiniotis (Microsoft Research, Cambridge)
David Walker (Princeton University)
Nobuko Yoshida (Imperial College London, UK)

External Review Committee to be announced.

--001a114d6f324cf0140526327e46
Content-Type: text/html; charset=ISO-8859-1

&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ICFP 2016<br />
The 21st ACM SIGPLAN International Conference on Functional Programming<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;http://conf.researchr.org/home/icfp-2016<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Call for Papers<br />
<br />
Important dates<br />
---------------<br />
<br />
Submissions due:&nbsp; &nbsp; Wednesday, March 16 2016, 15:00 (UTC)<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; https://icfp2016.hotcrp.com<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (in preparation as of December 1)<br />
Author response:&nbsp; &nbsp; Monday, 2 May, 2016, 15:00 (UTC) -<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thursday, 5 May, 2016, 15:00 (UTC)<br />
Notification:&nbsp; &nbsp; &nbsp; &nbsp;Friday, 20 May, 2016<br />
Final copy due:&nbsp; &nbsp; &nbsp;TBA<br />
Early registration: TBA<br />
Conference:&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Tuesday, 20 September -<br />
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thursday, 22 September, 2016<br />
<br />
Scope<br />
-----<br />
<br />
ICFP 2016 seeks original papers on the art and science of functional<br />
programming. Submissions are invited on all topics from principles to<br />
practice, from foundations to features, and from abstraction to<br />
application. The scope includes all languages that encourage<br />
functional programming, including both purely applicative and<br />
imperative languages, as well as languages with objects, concurrency,<br />
or parallelism. Topics of interest include (but are not limited to):<br />
<br />
- Language Design: concurrency, parallelism, and distribution;<br />
&nbsp; modules; components and composition; metaprogramming; type systems;<br />
&nbsp; interoperability; domain-specific languages; and relations to<br />
&nbsp; imperative, object-oriented, or logic programming.<br />
<br />
- Implementation: abstract machines; virtual machines; interpretation;<br />
&nbsp; compilation; compile-time and run-time optimization; garbage<br />
&nbsp; collection and memory management; multi-threading; exploiting<br />
&nbsp; parallel hardware; interfaces to foreign functions, services,<br />
&nbsp; components, or low-level machine resources.<br />
<br />
- Software-Development Techniques: algorithms and data structures;<br />
&nbsp; design patterns; specification; verification; validation; proof<br />
&nbsp; assistants; debugging; testing; tracing; profiling.<br />
<br />
- Foundations: formal semantics; lambda calculus; rewriting; type<br />
&nbsp; theory; monads; continuations; control; state; effects; program<br />
&nbsp; verification; dependent types.<br />
<br />
- Analysis and Transformation: control-flow; data-flow; abstract<br />
&nbsp; interpretation; partial evaluation; program calculation.<br />
<br />
- Applications: symbolic computing; formal-methods tools; artificial<br />
&nbsp; intelligence; systems programming; distributed-systems and web<br />
&nbsp; programming; hardware design; databases; XML processing; scientific<br />
&nbsp; and numerical computing; graphical user interfaces; multimedia and<br />
&nbsp; 3D graphics programming; scripting; system administration; security.<br />
<br />
- Education: teaching introductory programming; parallel programming;<br />
&nbsp; mathematical proof; algebra.<br />
<br />
- Functional Pearls: elegant, instructive, and fun essays on<br />
&nbsp; functional programming.<br />
<br />
- Experience Reports: short papers that provide evidence that<br />
&nbsp; functional programming really works or describe obstacles that have<br />
&nbsp; kept it from working.<br />
<br />
If you are concerned about the appropriateness of some topic, do not<br />
hesitate to contact the program chair.<br />
<br />
Abbreviated instructions for authors<br />
------------------------------------<br />
<br />
- By Wednesday, March 16 2016, 15:00 (UTC), submit a full paper of at<br />
&nbsp; most 12 pages (6 pages for an Experience Report), in standard<br />
&nbsp; SIGPLAN conference format, including figures but ***excluding<br />
&nbsp; bibliography***.<br />
<br />
The deadlines will be strictly enforced and papers exceeding the page<br />
limits will be summarily rejected.<br />
<br />
***ICFP 2016 will employ a lightweight double-blind reviewing<br />
process.*** To facilitate this, submitted papers must adhere to two<br />
rules:<br />
<br />
&nbsp;1. ***author names and institutions must be omitted***, and<br />
<br />
&nbsp;2. ***references to authors&#39; own related work should be in the third<br />
&nbsp; &nbsp; person*** (e.g., not &quot;We build on our previous work ...&quot; but<br />
&nbsp; &nbsp; rather &quot;We build on the work of ...&quot;).<br />
<br />
The purpose of this process is to help the PC and external reviewers<br />
come to an initial judgement about the paper without bias, not to make<br />
it impossible for them to discover the authors if they were to<br />
try. Nothing should be done in the name of anonymity that weakens the<br />
submission or makes the job of reviewing the paper more difficult<br />
(e.g., important background references should not be omitted or<br />
anonymized). In addition, authors should feel free to disseminate<br />
their ideas or draft versions of their paper as they normally<br />
would. For instance, authors may post drafts of their papers on the<br />
web or give talks on their research ideas. We have put together a<br />
document answering frequently asked questions that should address many<br />
common concerns:<br />
http://conf.researchr.org/track/icfp-2016/icfp-2016-papers#Submission-and-Reviewing-FAQ<br />
<br />
- Authors have the option to attach supplementary material to a<br />
&nbsp; submission, on the understanding that reviewers may choose not to<br />
&nbsp; look at it. The material should be uploaded at submission time, as a<br />
&nbsp; single pdf or a tarball, not via a URL. This supplementary material<br />
&nbsp; may or may not be anonymized; if not anonymized, it will only be<br />
&nbsp; revealed to reviewers after they have submitted their review of your<br />
&nbsp; paper and learned your identity.<br />
<br />
- Each submission must adhere to SIGPLAN&#39;s republication policy, as<br />
&nbsp; explained on the web at:<br />
&nbsp; http://www.sigplan.org/Resources/Policies/Republication<br />
<br />
- Authors of resubmitted (but previously rejected) papers have the<br />
&nbsp; option to attach an annotated copy of the reviews of their previous<br />
&nbsp; submission(s), explaining how they have addressed these previous<br />
&nbsp; reviews in the present submission. If a reviewer identifies<br />
&nbsp; him/herself as a reviewer of this previous submission and wishes to<br />
&nbsp; see how his/her comments have been addressed, the program chair will<br />
&nbsp; communicate to this reviewer the annotated copy of his/her previous<br />
&nbsp; review. Otherwise, no reviewer will read the annotated copies of the<br />
&nbsp; previous reviews.<br />
<br />
Overall, a submission will be evaluated according to its relevance,<br />
correctness, significance, originality, and clarity. It should explain<br />
its contributions in both general and technical terms, clearly<br />
identifying what has been accomplished, explaining why it is<br />
significant, and comparing it with previous work. The technical<br />
content should be accessible to a broad audience. Functional Pearls<br />
and Experience Reports are separate categories of papers that need not<br />
report original research results and must be marked as such at the<br />
time of submission. Detailed guidelines on both categories are given<br />
below.<br />
<br />
Presentations will be videotaped and released online if the presenter<br />
consents. The proceedings will be freely available for download from<br />
the ACM Digital Library from at least one week before the start of the<br />
conference until two weeks after the conference.<br />
<br />
Formatting: Submissions must be in PDF format printable in black and<br />
white on US Letter sized paper and interpretable by<br />
Ghostscript. Papers must adhere to the standard SIGPLAN conference<br />
format: two columns, nine-point font on a ten-point baseline, with<br />
columns 20pc (3.33in) wide and 54pc (9in) tall, with a column gutter<br />
of 2pc (0.33in). A suitable document template for LaTeX is available<br />
at http://www.sigplan.org/Resources/Author/<br />
<br />
Submission: Submissions will be accepted at<br />
https://icfp2016.hotcrp.com (in preparation as of December 1).<br />
<br />
Improved versions of a paper may be submitted at any point before the<br />
submission deadline using the same web interface.<br />
<br />
Author response: Authors will have a 72-hour period, starting at 15:00<br />
UTC on Monday, 2 May, 2016, to read reviews and respond to them.<br />
<br />
ACM Author-Izer is a unique service that enables ACM authors to<br />
generate and post links on either their home page or institutional<br />
repository for visitors to download the definitive version of their<br />
articles from the ACM Digital Library at no charge. Downloads through<br />
Author-Izer links are captured in official ACM statistics, improving<br />
the accuracy of usage and impact measurements. Consistently linking<br />
the definitive version of ACM article should reduce user confusion<br />
over article versioning. After your article has been published and<br />
assigned to your ACM Author Profile page, please visit<br />
http://www.acm.org/publications/acm-author-izer-service to learn how<br />
to create your links for free downloads from the ACM DL.<br />
<br />
Publication date: The official publication date of accepted papers is<br />
the date the proceedings are made available in the ACM Digital<br />
Library. This date may be up to two weeks prior to the first day of<br />
the conference. The official publication date affects the deadline for<br />
any patent filings related to published work.<br />
<br />
Special categories of papers<br />
----------------------------<br />
<br />
In addition to research papers, ICFP solicits two kinds of papers that<br />
do not require original research contributions: Functional Pearls,<br />
which are full papers, and Experience Reports, which are limited to<br />
six pages. Authors submitting such papers may wish to consider the<br />
following advice.<br />
<br />
Functional Pearls<br />
=================<br />
<br />
A Functional Pearl is an elegant essay about something related to<br />
functional programming. Examples include, but are not limited to:<br />
<br />
- a new and thought-provoking way of looking at an old idea<br />
- an instructive example of program calculation or proof<br />
- a nifty presentation of an old or new data structure<br />
- an interesting application of functional programming techniques<br />
- a novel use or exposition of functional programming in the classroom<br />
<br />
While pearls often demonstrate an idea through the development of a<br />
short program, there is no requirement or expectation that they do<br />
so. Thus, they encompass the notions of theoretical and educational<br />
pearls.<br />
<br />
Functional Pearls are valued as highly and judged as rigorously as<br />
ordinary papers, but using somewhat different criteria. In particular,<br />
a pearl is not required to report original research, but, it should be<br />
concise, instructive, and entertaining. Your pearl is likely to be<br />
rejected if your readers get bored, if the material gets too<br />
complicated, if too much specialized knowledge is needed, or if the<br />
writing is inelegant. The key to writing a good pearl is polishing.<br />
<br />
A submission you wish to have treated as a pearl must be marked as<br />
such on the submission web page, and should contain the words<br />
``Functional Pearl&#39;&#39; somewhere in its title or subtitle. These steps<br />
will alert reviewers to use the appropriate evaluation<br />
criteria. Pearls will be combined with ordinary papers, however, for<br />
the purpose of computing the conference&#39;s acceptance rate.<br />
<br />
Experience Reports<br />
==================<br />
<br />
The purpose of an Experience Report is to help create a body of<br />
published, refereed, citable evidence that functional programming<br />
really works -- or to describe what obstacles prevent it from working.<br />
<br />
Possible topics for an Experience Report include, but are not limited<br />
to:<br />
<br />
- insights gained from real-world projects using functional<br />
&nbsp; programming<br />
<br />
- comparison of functional programming with conventional programming<br />
&nbsp; in the context of an industrial project or a university curriculum<br />
<br />
- project-management, business, or legal issues encountered when using<br />
&nbsp; functional programming in a real-world project<br />
<br />
- curricular issues encountered when using functional programming in<br />
&nbsp; education<br />
<br />
- real-world constraints that created special challenges for an<br />
&nbsp; implementation of a functional language or for functional<br />
&nbsp; programming in general<br />
<br />
An Experience Report is distinguished from a normal ICFP paper by its<br />
title, by its length, and by the criteria used to evaluate it.<br />
<br />
- Both in the proceedings and in any citations, the title of each<br />
&nbsp; accepted Experience Report must begin with the words ``Experience<br />
&nbsp; Report&#39;&#39; followed by a colon. The acceptance rate for Experience<br />
&nbsp; Reports will be computed and reported separately from the rate for<br />
&nbsp; ordinary papers.<br />
<br />
- An Experience Report is at most six pages long. Each accepted<br />
&nbsp; Experience Report will be presented at the conference, but depending<br />
&nbsp; on the number of Experience Reports and regular papers accepted,<br />
&nbsp; authors of Experience reports may be asked to give shorter talks.<br />
<br />
- Because the purpose of Experience Reports is to enable our community<br />
&nbsp; to accumulate a body of evidence about the efficacy of functional<br />
&nbsp; programming, an acceptable Experience Report need not add to the<br />
&nbsp; body of knowledge of the functional-programming community by<br />
&nbsp; presenting novel results or conclusions. It is sufficient if the<br />
&nbsp; Report states a clear thesis and provides supporting evidence. The<br />
&nbsp; thesis must be relevant to ICFP, but it need not be novel.<br />
<br />
The program committee will accept or reject Experience Reports based<br />
on whether they judge the evidence to be convincing. Anecdotal<br />
evidence will be acceptable provided it is well argued and the author<br />
explains what efforts were made to gather as much evidence as<br />
possible. Typically, more convincing evidence is obtained from papers<br />
which show how functional programming was used than from papers which<br />
only say that functional programming was used. The most convincing<br />
evidence often includes comparisons of situations before and after the<br />
introduction or discontinuation of functional programming. Evidence<br />
drawn from a single person&#39;s experience may be sufficient, but more<br />
weight will be given to evidence drawn from the experience of groups<br />
of people.<br />
<br />
An Experience Report should be short and to the point: make a claim<br />
about how well functional programming worked on your project and why,<br />
and produce evidence to substantiate your claim. If functional<br />
programming worked for you in the same ways it has worked for others,<br />
you need only to summarize the results?the main part of your paper<br />
should discuss how well it worked and in what context. Most readers<br />
will not want to know all the details of your project and its<br />
implementation, but please characterize your project and its context<br />
well enough so that readers can judge to what degree your experience<br />
is relevant to their own projects. Be especially careful to highlight<br />
any unusual aspects of your project. Also keep in mind that specifics<br />
about your project are more valuable than generalities about<br />
functional programming; for example, it is more valuable to say that<br />
your team delivered its software a month ahead of schedule than it is<br />
to say that functional programming made your team more productive.<br />
<br />
If your paper not only describes experience but also presents new<br />
technical results, or if your experience refutes cherished beliefs of<br />
the functional-programming community, you may be better off submitting<br />
it as a full paper, which will be judged by the usual criteria of<br />
novelty, originality, and relevance. If you are unsure in which<br />
category to submit, the program chair will be happy to help you<br />
decide.<br />
<br />
Organizers<br />
----------<br />
<br />
General Co-Chairs:<br />
<br />
Jacques Garrigue (Nagoya University)<br />
Gabriele Keller (University of New South Wales)<br />
<br />
Program Chair:<br />
<br />
Eijiro Sumii (Tohoku University)<br />
<br />
Program Committee:<br />
<br />
Koen Claessen (Chalmers University of Technology)<br />
Joshua Dunfield (University of British Columbia, Canada)<br />
Matthew Fluet (Rochester Institute of Technology)<br />
Nate Foster (Cornell University)<br />
Dan Grossman (University of Washington, USA)<br />
Jurriaan Hage (Utrecht University)<br />
Roman Leshchinskiy (Standard Chartered Bank)<br />
Keisuke Nakano (The University of Electro-Communications)<br />
Aleksandar Nanevski (IMDEA Software Institute)<br />
Scott Owens (University of Kent)<br />
Sungwoo Park (Pohang University of Science and Technology)<br />
Amr Sabry (Indiana University)<br />
Tom Schrijvers (KU Leuven)<br />
Olin Shivers (Northeastern University)<br />
Walid Taha (Halmstad University)<br />
Dimitrios Vytiniotis (Microsoft Research, Cambridge)<br />
David Walker (Princeton University)<br />
Nobuko Yoshida (Imperial College London, UK)<br />
<br />
External Review Committee to be announced.<br />

--001a114d6f324cf0140526327e46--
