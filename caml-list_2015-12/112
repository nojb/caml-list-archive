Return-Path: <armael.gueneau@ens-lyon.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 630FA7FD8B
	for <caml-list@sympa.inria.fr>; Sun, 20 Dec 2015 16:33:05 +0100 (CET)
IronPort-PHdr: 9a23:vijNthybnAIJYWnXCy+O+j09IxM/srCxBDY+r6Qd0eIQIJqq85mqBkHD//Il1AaPBtWFraocw8Pt8IneGkU4qa6bt34DdJEeHzQksu4x2zIaPcieFEfgJ+TrZSFpVO5LVVti4m3peRMNQJW2WVTerzWI4CIIHV2nbEwudrqzQtaapv/0/t7x0qWbWx9Piju5bOE6BzSNhiKViPMrh5B/IL060BrDrygAUe1XwWR1OQDbxE6ktY+YtaRu+CVIuv8n69UIEeCjJ/x5HvRkC2EJOmov5cDv/SLITQaV62FUBmofmABJDgyD9xr6U438qAP1s+N83G+ROsigHp4uXjH3xr1uQZzsvwgatjg0+Xyf3sVqiatWpFSuuhF5zofJSIyTL796b6TbO90AEzkSFv1NXjBMV9vvJ7AECPAMaKMB99Hw
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=armael.gueneau@ens-lyon.fr; spf=Pass smtp.mailfrom=armael.gueneau@ens-lyon.fr; spf=None smtp.helo=postmaster@labbe.ens-lyon.fr
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  armael.gueneau@ens-lyon.fr) identity=pra;
  client-ip=140.77.167.222;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="armael.gueneau@ens-lyon.fr";
  x-sender="armael.gueneau@ens-lyon.fr";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  armael.gueneau@ens-lyon.fr designates 140.77.167.222 as
  permitted sender) identity=mailfrom;
  client-ip=140.77.167.222;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="armael.gueneau@ens-lyon.fr";
  x-sender="armael.gueneau@ens-lyon.fr";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@labbe.ens-lyon.fr) identity=helo;
  client-ip=140.77.167.222;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="armael.gueneau@ens-lyon.fr";
  x-sender="postmaster@labbe.ens-lyon.fr";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0B1AABKyXZWnN6nTYxehAxtjFKxHYFkI4VqAoEZOhIBAQEBAQEBARABAQEBAQYNCQkhLoItgggBAQQjVQEQCQIYCRYIAwICCQMCAQIBNBEGDQYCAQEXiBQECo4UnTaGVBYBAQIBiw0BAQEBAQEEAQEBAQEBARMJik6BBod3gUkFlwCCb4Fiaoo1hwGUBAIoAYJJAxYHgVdxhHwBAQE
X-IPAS-Result: A0B1AABKyXZWnN6nTYxehAxtjFKxHYFkI4VqAoEZOhIBAQEBAQEBARABAQEBAQYNCQkhLoItgggBAQQjVQEQCQIYCRYIAwICCQMCAQIBNBEGDQYCAQEXiBQECo4UnTaGVBYBAQIBiw0BAQEBAQEEAQEBAQEBARMJik6BBod3gUkFlwCCb4Fiaoo1hwGUBAIoAYJJAxYHgVdxhHwBAQE
X-IronPort-AV: E=Sophos;i="5.20,455,1444687200"; 
   d="scan'208,217";a="157743140"
Received: from labbe.ens-lyon.fr ([140.77.167.222])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 20 Dec 2015 16:33:04 +0100
Received: from localhost (localhost [127.0.0.1])
	by labbe.ens-lyon.fr (Postfix) with ESMTP id 2F08D320BDF;
	Sun, 20 Dec 2015 16:33:04 +0100 (CET)
X-Virus-Scanned: by amavisd-new-2.10.1 (20141025) (Debian) at ens-lyon.fr
Received: from labbe.ens-lyon.fr ([127.0.0.1])
	by localhost (labbe.ens-lyon.fr [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id xxE2qoJFwzfM; Sun, 20 Dec 2015 16:33:02 +0100 (CET)
Received: from [192.168.0.13] (rab81-1-78-217-174-105.fbx.proxad.net [78.217.174.105])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(Client did not present a certificate)
	by labbe.ens-lyon.fr (Postfix) with ESMTPSA id 4ED963209EF;
	Sun, 20 Dec 2015 16:33:02 +0100 (CET)
To: Gabriel Scherer <gabriel.scherer@gmail.com>
References: <567430DC.6020009@ens-lyon.fr>
 <CAPFanBFoZrMj-HhmQmQPXaVgPzX8wM-mF2xpJ7B5ZDW=uBBYDA@mail.gmail.com>
 <56745B1C.7090904@ens-lyon.fr>
 <CAPFanBF_a+JPkyd2Pnz16r4ReVN5esv_pBj=ejV1Jvnoz9Pv_Q@mail.gmail.com>
Cc: caml users <caml-list@inria.fr>, Gerd Stolpmann <info@gerd-stolpmann.de>
From: =?UTF-8?Q?Arma=c3=abl_Gu=c3=a9neau?= <armael.gueneau@ens-lyon.fr>
Message-ID: <5676CA2F.2060002@ens-lyon.fr>
Date: Sun, 20 Dec 2015 16:33:03 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
 Thunderbird/38.4.0
MIME-Version: 1.0
In-Reply-To: <CAPFanBF_a+JPkyd2Pnz16r4ReVN5esv_pBj=ejV1Jvnoz9Pv_Q@mail.gmail.com>
Content-Type: multipart/mixed;
 boundary="------------020209060101040703090903"
Subject: Re: [Caml-list] OCamldoc plugins & ocamlbuild

This is a multi-part message in MIME format.
--------------020209060101040703090903
Content-Type: multipart/alternative;
 boundary="------------030009010301050703030801"


--------------030009010301050703030801
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 8bit

OK. I've attached an attempt of patch to ocamlfind that implements what 
you describe (a META file with just the directory field).
I think it does the right things, but I did not test it extensively.

Le 18/12/2015 22:43, Gabriel Scherer a écrit :
> There is no ocamldoc.cm <http://ocamldoc.cm>{,x}a in  ocamldoc 
> libraries today. We could probably change ocamldoc's build system to 
> build one, but for now an ocamldoc package would have no archive(...) 
> field, just the directory. It is not clear we need an ocamldoc.cm 
> <http://ocamldoc.cm>{,x}a archive if all plugins are to be passed to 
> ocamldoc{,.opt} which is already linked with ocamldoc modules.
>
> On Fri, Dec 18, 2015 at 8:14 PM, Armaël Guéneau 
> <armael.gueneau@ens-lyon.fr <mailto:armael.gueneau@ens-lyon.fr>> wrote:
>
>     Ok, thanks for the explanations.
>
>     As for the ocamldoc package, would a META file along these lines
>     do the trick?
>
>     # Specification for the "ocamldoc" library
>     requires = "compiler-libs"
>     version = "[distributed with Ocaml]"
>     description = "ocamldoc support library"
>     directory= "^ocamldoc"
>     archive(byte) = "ocamldoc.cma"
>     archive(native) = "ocamldoc.cmxa"
>
>     Le 18/12/2015 18:06, Gabriel Scherer a écrit :
>     > So I just tried¹, and the failure is as follows: > > $ ocamlbuild -tag use_ocamldoc test.cmxs > +
>     /home/gasche/.opam/4.02.3/bin/ocamlopt.opt -shared -I +ocamldoc
>     ocamldoc.cmxa test.cmx -o test.cmxs > File "_none_", line 1: >
>     Error: Cannot find file ocamldoc.cmxa > > It looks like the tag
>     use_ocamldoc expects a file ocamldoc.cmxa to exist, providing
>     library support for ocamldoc plugins, and it does not seem to
>     exist -- it seems that the preferred way to use ocamldoc plugins
>     is to use "ocamldoc.opt -g foo.cmxs", with ocamldoc libraries
>     already linked inside ocamldoc.opt. So just using > >   ocamlbuild
>     -cflags -I,+ocamldoc test.cmxs > > works and seems to do what you
>     expect. > > It goes without saying that this is not a perfect
>     long-term solution, as it assumes that ocamldoc libraries are
>     distributed with the stdlib. It would be cleaner to have an
>     ocamldoc package for them (just like ocamlbuild has a dummy
>     ocamlfind package indicating the location of its library files),
>     but it seems that this is not currently the case. It would be nice
>     (but not super-high priority) to have such a dummy package in
>     ocamlfind in the future, so that you can just do > >   ocamlbuild
>     -use-ocamlfind -package ocamldoc test.cmxs > > ¹: The most
>     time-consuming part was finding the code of a ocamldoc plugin to
>     compile, as the documentation examples are incomplete. Next time,
>     feel free to provide a tarball with a minimal example to
>     reproduce. > > On Fri, Dec 18, 2015 at 5:14 PM, Armaël Guéneau
>     <armael.gueneau@ens-lyon.fr> <mailto:armael.gueneau@ens-lyon.fr>
>     wrote: > >     Hi list, > >     I'm wondering how one should
>     compile ocamldoc custom generators using >     ocamlbuild. > >    
>     First, the ocamlbuild manual >    
>     (https://github.com/gasche/manual-ocamlbuild/blob/master/manual.md#basic-tags-)
>     >     says that the [use_ocamldoc] tag is deprecated; and that a
>     corresponding >     ocamlfind package should be used instead. Is
>     there such a package for ocamldoc? >     I did not found one. >
>     >     Then, I did not manage to build the plugin into .cma/.cmxs
>     files directly using >     ocamlbuild. My command line was
>     something along these lines: > >        ocamlbuild -use-ocamlfind
>     -tag use_ocamldoc -package compiler-libs plugin.cmxs > >     When
>     trying to build plugin.cma/plugin.cmxs, ocamlbuild complained that
>     "Cannot >     find file ocamldoc.cma/ocamldoc.cmxa"
>     (respectively). However, I can build >     plugin.cmo/plugin.cmx
>     using the same command line, then create the .cma/.cmxs >    
>     manually using ocamlc/ocamlopt - which I ended up doing. > >    
>     Is there a better way to do so? If the whole process can be
>     improved (how?), I >     would be happy to write the required
>     patches/documentation. > >     — Armaël > >
>
>
>


--------------030009010301050703030801
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: 8bit

<html>
  <head>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type">
  </head>
  <body bgcolor="#FFFFFF" text="#000000">
    OK. I've attached an attempt of patch to ocamlfind that implements
    what you describe (a META file with just the directory field).<br>
    I think it does the right things, but I did not test it extensively.<br>
    <br>
    <div class="moz-cite-prefix">Le 18/12/2015 22:43, Gabriel Scherer a
      écrit :<br>
    </div>
    <blockquote
cite="mid:CAPFanBF_a+JPkyd2Pnz16r4ReVN5esv_pBj=ejV1Jvnoz9Pv_Q@mail.gmail.com"
      type="cite">
      <div dir="ltr">There is no <a moz-do-not-send="true"
          href="http://ocamldoc.cm">ocamldoc.cm</a>{,x}a in  ocamldoc
        libraries today. We could probably change ocamldoc's build
        system to build one, but for now an ocamldoc package would have
        no archive(...) field, just the directory. It is not clear we
        need an <a moz-do-not-send="true" href="http://ocamldoc.cm">ocamldoc.cm</a>{,x}a
        archive if all plugins are to be passed to ocamldoc{,.opt} which
        is already linked with ocamldoc modules.<br>
      </div>
      <div class="gmail_extra"><br>
        <div class="gmail_quote">On Fri, Dec 18, 2015 at 8:14 PM, Armaël
          Guéneau <span dir="ltr">&lt;<a moz-do-not-send="true"
              href="mailto:armael.gueneau@ens-lyon.fr" target="_blank">armael.gueneau@ens-lyon.fr</a>&gt;</span>
          wrote:<br>
          <blockquote class="gmail_quote" style="margin:0 0 0
            .8ex;border-left:1px #ccc solid;padding-left:1ex">
            <div bgcolor="#FFFFFF" text="#000000"> Ok, thanks for the
              explanations.<br>
              <br>
              As for the ocamldoc package, would a META file along these
              lines do the trick?<br>
              <br>
              # Specification for the "ocamldoc" library<br>
              requires = "compiler-libs"<br>
              version = "[distributed with Ocaml]"<br>
              description = "ocamldoc support library"<br>
              directory= "^ocamldoc"<br>
              archive(byte) = "ocamldoc.cma"<br>
              archive(native) = "ocamldoc.cmxa"<span class=""><br>
                <br>
                Le 18/12/2015 18:06, Gabriel Scherer a écrit :<br>
                <span style="white-space:pre-wrap">&gt; So I just tried¹, and the failure is as follows:
&gt;
&gt; $ ocamlbuild -tag use_ocamldoc test.cmxs
&gt; + /home/gasche/.opam/4.02.3/bin/ocamlopt.opt -shared -I +ocamldoc ocamldoc.cmxa test.cmx -o test.cmxs
&gt; File "_none_", line 1:
&gt; Error: Cannot find file ocamldoc.cmxa
&gt;
&gt; It looks like the tag use_ocamldoc expects a file ocamldoc.cmxa to exist, providing library support for ocamldoc plugins, and it does not seem to exist -- it seems that the preferred way to use ocamldoc plugins is to use "ocamldoc.opt -g foo.cmxs", with ocamldoc libraries already linked inside ocamldoc.opt. So just using
&gt;
&gt;   ocamlbuild -cflags -I,+ocamldoc test.cmxs
&gt;
&gt; works and seems to do what you expect.
&gt;
&gt; It goes without saying that this is not a perfect long-term solution, as it assumes that ocamldoc libraries are distributed with the stdlib. It would be cleaner to have an ocamldoc package for them (just like ocamlbuild has a dummy ocamlfind package indicating the location of its library files), but it seems that this is not currently the case. It would be nice (but not super-high priority) to have such a dummy package in ocamlfind in the future, so that you can just do
&gt;
&gt;   ocamlbuild -use-ocamlfind -package ocamldoc test.cmxs
&gt;
&gt; ¹: The most time-consuming part was finding the code of a ocamldoc plugin to compile, as the documentation examples are incomplete. Next time, feel free to provide a tarball with a minimal example to reproduce.
&gt;
&gt; On Fri, Dec 18, 2015 at 5:14 PM, Armaël Guéneau <a moz-do-not-send="true" href="mailto:armael.gueneau@ens-lyon.fr" target="_blank">&lt;armael.gueneau@ens-lyon.fr&gt;</a> wrote:
&gt;
&gt;     Hi list,
&gt;
&gt;     I'm wondering how one should compile ocamldoc custom generators using
&gt;     ocamlbuild.
&gt;
&gt;     First, the ocamlbuild manual
&gt;     (<a moz-do-not-send="true" href="https://github.com/gasche/manual-ocamlbuild/blob/master/manual.md#basic-tags" target="_blank">https://github.com/gasche/manual-ocamlbuild/blob/master/manual.md#basic-tags</a>-)
&gt;     says that the [use_ocamldoc] tag is deprecated; and that a corresponding
&gt;     ocamlfind package should be used instead. Is there such a package for ocamldoc?
&gt;     I did not found one.
&gt;
&gt;     Then, I did not manage to build the plugin into .cma/.cmxs files directly using
&gt;     ocamlbuild. My command line was something along these lines:
&gt;
&gt;        ocamlbuild -use-ocamlfind -tag use_ocamldoc -package compiler-libs plugin.cmxs
&gt;
&gt;     When trying to build plugin.cma/plugin.cmxs, ocamlbuild complained that "Cannot
&gt;     find file ocamldoc.cma/ocamldoc.cmxa" (respectively). However, I can build
&gt;     plugin.cmo/plugin.cmx using the same command line, then create the .cma/.cmxs
&gt;     manually using ocamlc/ocamlopt - which I ended up doing.
&gt;
&gt;     Is there a better way to do so? If the whole process can be improved (how?), I
&gt;     would be happy to write the required patches/documentation.
&gt;
&gt;     — Armaël
&gt;
&gt;</span><br>
                <br>
                <br>
              </span></div>
          </blockquote>
        </div>
        <br>
      </div>
    </blockquote>
    <br>
  </body>
</html>

--------------030009010301050703030801--

--------------020209060101040703090903
Content-Type: text/x-patch;
 name="ocamldoc-META.patch"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
 filename="ocamldoc-META.patch"

diff --git trunk/configure trunk/configure
index 2fef7ad..82f72bd 100755
--- trunk/configure
+++ trunk/configure
@@ -449,6 +449,16 @@ else
     echo "ocamlbuild: not present"
 fi
 
+# Check whether ocamldoc is present
+
+if [ -d "${ocaml_core_stdlib}/ocamldoc" ]; then
+    lodoc=ocamldoc
+    echo "ocamldoc: found"
+else
+    lodoc=""
+    echo "ocamldoc: not present"
+fi
+
 # Check on camlp4:
 
 if [ $with_camlp4 -eq 0 ]; then
@@ -521,7 +531,7 @@ fi
 
 # Generate the META files now.
 
-l="$ldbm dynlink graphics num num-top str threads unix stdlib bigarray $llabltk $lcamlp4 $lobuild $lcomplibs $lbytes"
+l="$ldbm dynlink graphics num num-top str threads unix stdlib bigarray $llabltk $lcamlp4 $lobuild $lodoc $lcomplibs $lbytes"
 
 for dir in site-lib-src/*; do
     # We do not really know if $dir is a directory.
diff --git trunk/findlib.files trunk/findlib.files
index cf2775e..f4b1a29 100644
--- trunk/findlib.files
+++ trunk/findlib.files
@@ -98,6 +98,8 @@ f site-lib-src/unix/interfaces.in
 f site-lib-src/unix/interfaces.out
 d site-lib-src/ocamlbuild
 f site-lib-src/ocamlbuild/META.in
+d site-lib-src/ocamldoc
+f site-lib-src/ocamldoc/META.in
 d site-lib-src/compiler-libs
 f site-lib-src/compiler-libs/META.in
 d site-lib-src/bytes
diff --git trunk/site-lib-src/ocamldoc/META.in trunk/site-lib-src/ocamldoc/META.in
new file mode 100644
index 0000000..3994bec
--- /dev/null
+++ trunk/site-lib-src/ocamldoc/META.in
@@ -0,0 +1,5 @@
+`# Specification for the "ocamldoc" library'
+`requires = "compiler-libs"'
+`version = "[distributed with Ocaml]"'
+`description = "ocamldoc support library"'
+`directory= "^ocamldoc"'

--------------020209060101040703090903--
