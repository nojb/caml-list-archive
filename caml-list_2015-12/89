Return-Path: <francois.berenger@inria.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 024537EF29
	for <caml-list@sympa.inria.fr>; Fri, 18 Dec 2015 16:21:50 +0100 (CET)
X-IronPort-AV: E=Sophos;i="5.20,446,1444687200"; 
   d="scan'208";a="193002542"
Received: from meleze.ens.fr (HELO [129.199.99.114]) ([129.199.99.114])
  by mail2-relais-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES128-SHA; 18 Dec 2015 16:21:49 +0100
To: caml-list@inria.fr
References: <20151218010834.GA7442@topoi.pooq.com>
 <20151218011315.GB7442@topoi.pooq.com>
 <CAPFanBEHk-QmMGMssuuvuwmYUTGfQ-_URc5Qwz6Tw9M4YGAvGg@mail.gmail.com>
From: Francois Berenger <francois.berenger@inria.fr>
Message-ID: <5674248D.3080202@inria.fr>
Date: Fri, 18 Dec 2015 16:21:49 +0100
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:38.0) Gecko/20100101
 Thunderbird/38.4.0
MIME-Version: 1.0
In-Reply-To: <CAPFanBEHk-QmMGMssuuvuwmYUTGfQ-_URc5Qwz6Tw9M4YGAvGg@mail.gmail.com>
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit
Subject: Re: [Caml-list] Is OCaml for experienced beginners?

On 12/18/2015 03:44 PM, Gabriel Scherer wrote:
>  > Are beginners even welcome?
>
> Yes, beginners are warmly welcome. Feel free to keep pointing out
> changes that would help answer this question, this is helpful. Of
> course small-scope changes (fixing library X to support format Y) are
> always much easier to actuate than general recommendations
> (more libraries).
>
>  > Is anyone in charge of the OCaml ecosystem?
>
> No, there is no one in charge of the OCaml ecosystem, or of a general
> "OCaml experience".

I wonder if the ocaml platform mailing list

https://www.cl.cam.ac.uk/projects/ocamllabs/tasks/platform.html
http://lists.ocaml.org/listinfo/platform

isn't the closest thing to what Hendrik was looking for.

 > This may explain some of the very real usability
> issues, but it is also rather unclear to me how this should be
> fixed. Would anyone volunteer for such a role (funded how?), and to do
> what?
>
> I agree with your conclusion that the OCaml ecosystem today is
> unforgiving, and that it is particularly harsh on non-accompanied
> beginners. How could this state of affairs be improved?

I was also an isolated OCaml programmer in the past, for several years.
I remember it was discouraging sometimes and can understand some of the
associated feelings/frustration.
I however think I survived this situation pretty well, thanks to the 
many ocaml-related mailing lists (caml-list at inria, ocaml beginners at 
yahoo and the core mailing list at google groups) and the many helpful 
users on all of those lists.

There is also stack overflow (with several ocaml topics, I found) that 
works pretty well to get damn good answers on pretty much any question.

> I think that while a unified vision for the ecosystem may be necessary
> to fix some of the usability issues (one problem with unification is
> that you need people to agree on it), a large part of the problem is
> rather of the "death by thousand cuts" kind: small things that add up
> to create an overall unpleasant experience. This portion of the
> general problem is both too large for a single person to fix (no one
> person can guess all use-cases), it is easily amenable to
> crowd-fixing: reporting and/or fixing issues one at a time as you
> discover them. So please keep doing that!
>
>
> On Fri, Dec 18, 2015 at 2:13 AM, Hendrik Boom <hendrik@topoi.pooq.com
> <mailto:hendrik@topoi.pooq.com>> wrote:
>
>     On Thu, Dec 17, 2015 at 08:08:35PM -0500, Hendrik Boom wrote:
>
>     And in case anyone wonders, I haven't given up.  I will continue trying
>     to use OCaml becuse it seems to be the right kind of tool.  Not everyone
>     will be so stubborn,
>
>     -- hendrik.
>
>      > # Is anyone in charge of the OCaml ecosystem?
>      >
>      > I am a beginner to OCaml.  I'm not a beginner to the functional
>     style of programmins, nor to sophisticated type systems, nor to
>     computing in general.  I started programming in 1963, was involved
>     with Algol 68, Lisp, and constructive type theory.  I've managed to
>     get code running in the days when you had to enter it as numbers;
>     the machine I  used then wouldn't even type letters other than u, v,
>     w, x, y, z (its version of hexadecimal).  In those days what you
>     needed to know was the instruction set and its encoding.  Everything
>     followed from that.
>      >
>      > Believe be, I appreciate every advantage high-level languages
>     have to offer.
>      >
>      > With this background, you'd expect I'd take to OCaml like a duck
>     to water.
>      >
>      > Wrong.
>      >
>      > The language itself is actually usable.  Once you figure out how
>     the syntax works and where to put the brackets.
>      >
>      > But the world has changed since source code was in hexadecimal.
>      >
>      > ## Libraries
>      >
>      > Nowdays, software rests on a huge inventory of libaries and
>     tools.  A language, however elegant, isn't very usable for anything
>     very practical without its libraries and their documentation.  It's
>     not enough to know the machine inside out.
>      >
>      > That's the hurdle I face whenever I program in OCaml -- figuring
>     out which libraries are usable, and which are actually documented.
>     Not documented in the sense that someone has written an API guide
>     and a tutorial, but documented in the sense that it is actually
>     possible to find them.
>      >
>      > There are often multiple packages to accomplish a single task.
>      >
>      > You don't know which one to use.  You try the obvious one, have
>     trouble, ask about it, and then be told, No, that one is troubled,
>     you should use this other one instead.  The one you can download
>     from *this* site.  So you do,  You download it.  You figure out how
>     to edit the Makefile so that it generates the right package files.
>     The options you need are actually documented in the Makefile.
>      >
>      > I had to compile my own from the original Makefile, using the
>     options that are indeed documented inside it.XXX
>      >
>      > I've actually manged to write a trivial 3D videogame once I was
>     pointed to the usable OpenGL library.  The one where the function
>     names were closely related to the ones in the OpenGL manual, of
>     which I have a printed copy.  I didn't have to guess what functions
>     to use.
>      >
>      > But then you discover that the one you were recommended to use is
>     in the opam library (the one you access by saying opam install ...
>     with a default configuration), and you decide to simplify things by
>     using the Opam package instead of including all the library's source
>     code within your own project.  But when you do that, it doesn't
>     work, because the Opam package was was configured with optons that
>     preclude essential functionality.  (in my case, the ability to load
>     PNG files, not just JPEG).
>      >
>      > So what? another might say.  Just tell opam to install with
>     different options.  But that is another *huge* problem for a beginner.
>      >
>      > So I stick with embedding the library source code in my
>     application.  I already understand how to edit a Makefile.
>      >
>      > ## Documentation
>      >
>      > And try to find documentation.  I'm dealing with this problemm
>     with gtk at the moment.  There's a lablgtk.  There's a lablgtk2.
>     Whats the relationship between the two?  And where's the
>     documentation.  There's links to a tutorial all over the place, but
>     they seem all to be to the same web page, which isn't there.
>      >
>      > Opam has a way, I'm told, to install documentation along with the
>     package, but  haven't been able to figure out how it works.  Or
>     maybe, just maybe, the packages I've been trying it on don't have
>     documentation.  Who knows?
>      >
>      > ## Are beginners even  welcome?
>      >
>      > Is there anyone in charge of any of this?
>      >
>      > And what's the result?  It's a lovely language, it deserves to be
>     used, but to get something done, I find myself programming in C++
>     instead, even though the concpts of OCAML fit my style of
>     programming ike a glove and fit C++ like a rusty nail keeps my hand
>     warm.   Or spend days or months trying things, asking questions,
>     deciphering the answers, and so forth.
>      >
>      > I imagine if I were working in a shop where lots of people used
>     OCaml, all the ways of doing stuff would be local folklore.  But for
>     the isolated beginner, there's a huge barrier to entry.
>      >
>      > It's a lovely language, but the pragmatics of its ecosystem are
>     all wrong.  For a beginner.  For someone with experience in the
>     particular set of tools and libraries he needs, it's great.
>      >
>      > And most of the problem is lack of organised, findable documentation.
>      >
>      > -- hendrik
>      >
>      >
>      > --
>      > Caml-list mailing list.  Subscription management and archives:
>      > https://sympa.inria.fr/sympa/arc/caml-list
>      > Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>      > Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>     --
>     Caml-list mailing list.  Subscription management and archives:
>     https://sympa.inria.fr/sympa/arc/caml-list
>     Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>     Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>

-- 
Regards,
Francois.
"When in doubt, use more types"
