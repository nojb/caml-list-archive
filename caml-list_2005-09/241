Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 0A13DBB81
	for <caml-list@yquem.inria.fr>; Mon, 26 Sep 2005 13:53:27 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j8QBrQ6V009560
	for <caml-list@yquem.inria.fr>; Mon, 26 Sep 2005 13:53:26 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA05614 for <caml-list@pauillac.inria.fr>; Mon, 26 Sep 2005 13:53:26 +0200 (MET DST)
Received: from reserv6.univ-lille1.fr (reserv6.univ-lille1.fr [193.49.225.20])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j8QBrPwg009553
	for <caml-list@inria.fr>; Mon, 26 Sep 2005 13:53:25 +0200
Received: from malonne.lifl.fr (malonne.lifl.fr [134.206.10.29])
          by reserv6.univ-lille1.fr (8.13.3/jtpda-5.3.1) with ESMTP id j8QBrKVN031667
          ; Mon, 26 Sep 2005 13:53:20 +0200
Received: from [134.206.10.243] (wastine.lifl.fr [134.206.10.243])
          by malonne.lifl.fr  with ESMTP id j8QBrMC07473
          ; Mon, 26 Sep 2005 13:53:22 +0200 (MEST)
Message-ID: <4337E15E.5000307@lifl.fr>
Date: Mon, 26 Sep 2005 13:54:06 +0200
From: Pierre Boulet <Pierre.Boulet@lifl.fr>
User-Agent: Mozilla Thunderbird 1.0 (Windows/20041206)
X-Accept-Language: fr, en
MIME-Version: 1.0
To: Christophe Raffalli <christophe.raffalli@univ-savoie.fr>
Cc: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Yacc limitations
References: <43327FEF.7070209@barettadeit.com> <4332AD1B.1060704@univ-savoie.fr>
In-Reply-To: <4332AD1B.1060704@univ-savoie.fr>
Content-Type: text/plain; charset=ISO-8859-15; format=flowed
Content-Transfer-Encoding: 8bit
X-USTL-MailScanner-Information: Please contact the ISP for more information
X-USTL-MailScanner: Found to be clean
X-MailScanner-From: pierre.boulet@lifl.fr
X-Miltered: at nez-perce with ID 4337E136.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 4337E135.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; boulet:01 boulet:01 lifl:01 caml-list:01 parsers:01 notation:01 lalr:01 ocaml:01 lexer:01 parser:01 christophe:01 raffalli:01 baretta:01 parser:01 ocamlyacc:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

Hi,

I like using Camlp4 for that purpose. It has a very convenient way to 
write parsers (the EXTEND notation). Its power is not directly 
comparable to LALR but I find it suiting my needs (at least it is enough 
to parse ocaml). The main pain is writing the lexer that feeds the 
parser. That I remember from the early days of camlp4, it may have changed.

Regards,

Pierre.

Christophe Raffalli a écrit :
> Alex Baretta a écrit :
> 
>> I am getting very much annoyed with the obtusity of the LALR-yacc parser
>> generators. I have unsurmountable difficulties at teaching ocamlyacc how
>> to parse SQL decently.
>>
>> What is the "way to go" in terms of parser generators for Ocaml? I'd
>> like to see if there is some level of agreement in the community on this
>> issue.
>>
> 
> may be give a try to elkhound
> (http://www.cs.berkeley.edu/~smcpeak/elkhound/) ? It generated both
> OCaml and C++. I haven't used it, But it seems nice and will remove the
> LALR(1) constraint .
> 
> 
>> Alex
>>
>>
> 
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs

