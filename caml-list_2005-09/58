Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 59E23BDCB
	for <caml-list@yquem.inria.fr>; Sun,  4 Sep 2005 21:43:11 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j84JhAUR006446
	for <caml-list@yquem.inria.fr>; Sun, 4 Sep 2005 21:43:11 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA05703 for <caml-list@pauillac.inria.fr>; Sun, 4 Sep 2005 21:43:10 +0200 (MET DST)
Received: from xproxy.gmail.com (xproxy.gmail.com [66.249.82.192])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j84Jh92I006442
	for <caml-list@inria.fr>; Sun, 4 Sep 2005 21:43:10 +0200
Received: by xproxy.gmail.com with SMTP id h26so1092617wxd
        for <caml-list@inria.fr>; Sun, 04 Sep 2005 12:43:09 -0700 (PDT)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=EVjBJ2yhfoBP99LxXwY8qrCkeL2m3r35VSIiSjOZ19QaMFUdC81MrV6F8anJNsIaxeIhh0e9WmEnUloKIv3RZmNH8P1H6wu7LUKSJOfW82uUj3NrQP/RMHSbQGUA+QEgVIZqZhbTHsfM0dknQaI5CffKGH29rrvoWFSPFzm9jnQ=
Received: by 10.70.26.3 with SMTP id 3mr60578wxz;
        Sun, 04 Sep 2005 12:43:09 -0700 (PDT)
Received: by 10.70.51.20 with HTTP; Sun, 4 Sep 2005 12:43:09 -0700 (PDT)
Message-ID: <4a708d205090412435bca9cb0@mail.gmail.com>
Date: Sun, 4 Sep 2005 21:43:09 +0200
From: Lukasz Stafiniak <lukstafi@gmail.com>
To: caml users <caml-list@inria.fr>
Subject: Existential types
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
X-Miltered: at nez-perce with ID 431B4E4F.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 431B4E4D.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; lukasz:01 existential:01 one-way:01 existential:01 lukasz:01 abstract:01 types:02 let:03 implement:05 magic:10 operator:11 obj:12 some:12 type:14 type:14 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_BY_IP autolearn=disabled 
	version=3.0.3

Hi!

I use an abstract type and a one-way typecast operator to implement
existential quantification; e. g.

type 'a t
type unknown_t
let some (v : 'a t) =3D ((Obj.magic v) : unknown_t t)

Good?

Best Regards,
Lukasz

