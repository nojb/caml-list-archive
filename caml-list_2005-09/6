Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 7B4B0BDE9
	for <caml-list@yquem.inria.fr>; Thu,  1 Sep 2005 06:48:57 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j814mvbf001667
	for <caml-list@yquem.inria.fr>; Thu, 1 Sep 2005 06:48:57 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id GAA16676 for <caml-list@pauillac.inria.fr>; Thu, 1 Sep 2005 06:48:56 +0200 (MET DST)
Received: from mz3.forethought.net (mzpi5.forethought.net [216.241.36.14])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j814mtER001662
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@inria.fr>; Thu, 1 Sep 2005 06:48:56 +0200
Received: from [216.241.35.41] (helo=[10.0.0.2])
	by mz3.forethought.net with esmtp (Exim 4.51)
	id 1EAh0Q-0004Hx-9Y
	for caml-list@inria.fr; Wed, 31 Aug 2005 22:48:54 -0600
Message-ID: <43168841.9000302@havenrock.com>
Date: Wed, 31 Aug 2005 22:49:05 -0600
From: Matt Gushee <mgushee@havenrock.com>
User-Agent: Mozilla Thunderbird 1.0 (X11/20050108)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: Feeding the OCaml GUI troll
References: <20050830174757.99765.qmail@web30510.mail.mud.yahoo.com>	<200508302001.58080.jon@ffconsultancy.com> <3d13dcfc05083101487092acd5@mail.gmail.com>
In-Reply-To: <3d13dcfc05083101487092acd5@mail.gmail.com>
X-Enigmail-Version: 0.86.1.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 43168839.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 43168837.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 macos:01 labltk:01 widget:01 sockets:01 wrote:01 behaviour:01 strings:01 modules:01 argument:01 native:02 graphical:02 objects:02 encoding:02 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

First of all, I hope the "troll" label is tongue-in-cheek. I really am 
not trying to stir up argument for argument's sake. The goal is to find 
a project or two that might benefit both myself and the community.

David MENTRE wrote:

> I really fear your under estimate the amount of work needed to
> accomplish such a job. And the OCaml community seems pretty fragmented
> on this GUI front.

Sounds right to me.

>  2. write a *simple* GUI front end, in OCaml, with only simple modules
> and/or simple objects. No fancy use of OCaml type system. Stay close
> to ML core. Use Labgtk2, native Win32 and MacOS X libraries to render
> the GUI. However I don't know the complexity of handling gory details,
> like encoding of strings;

I'm not sold on the idea of a "simple" GUI front end. I've tried one or 
two of them, and I think they're probably good for, say, a database 
application, but useless for more general apps like text editors and 
drawing tools.

>  4. Use Labltk. I can't really comment on it, as I have never used it
> and can't say about its graphical behaviour or desktop integration
> (copy/paste and drag&drop);

Drag and drop would have to be added; copy/paste functionality is a 
built-in feature of the Text widget and possibly some others.

>  5. drop OCaml to write GUI. Use other languages (usually C++) to make
> front-ends and use OCaml code only as backend, communicating through
> sockets or shared memory. Maybe the most viable long term solution.

That's no doubt a technically sound solution. Is it commercially viable? 
I'd say that depends on your market. Large organizations are generally 
comfortable with separately installed components. Small businesses, 
primary and secondary schools (at least in the US), and home users are 
often terrified of complex installation and configuration procedures. 
They want one-step installation.

--
Matt Gushee
Englewood, CO, USA

