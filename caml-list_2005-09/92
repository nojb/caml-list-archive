Return-Path: <fw@deneb.enyo.de>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 44391BDCB
	for <caml-list@yquem.inria.fr>; Thu,  8 Sep 2005 19:14:59 +0200 (CEST)
Received: from mail.enyo.de (mail.enyo.de [212.9.189.167])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j88HEwQP001726
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Thu, 8 Sep 2005 19:14:59 +0200
Received: from deneb.vpn.enyo.de ([212.9.189.177] helo=deneb.enyo.de)
	by albireo.enyo.de with esmtp id 1EDPzA-00052R-BN; Thu, 08 Sep 2005 19:14:52 +0200
Received: from fw by deneb.enyo.de with local (Exim 4.52)
	id 1EDPyP-0005zQ-SY; Thu, 08 Sep 2005 19:14:05 +0200
From: Florian Weimer <fw@deneb.enyo.de>
To: David Brown <caml@davidb.org>
Cc: padator@wanadoo.fr, caml-list <caml-list@yquem.inria.fr>,
	Damien Guichard <alphablock@wanadoo.fr>
Subject: Re: [Caml-list] The Caml morale crasher #1
References: <9504834.1126184133428.JavaMail.www@wwinf1536>
	<1126197893.3685.7.camel@a64.davidb.org>
Date: Thu, 08 Sep 2005 19:14:05 +0200
In-Reply-To: <1126197893.3685.7.camel@a64.davidb.org> (David Brown's message
	of "Thu, 08 Sep 2005 09:44:53 -0700")
Message-ID: <87irxbqy76.fsf@mid.deneb.enyo.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at nez-perce with ID 43207192.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; florian:01 caml-list:01 gcc:01 implements:01 stack:01 pointer:01 stack:01 gcc:01 passing:01 caml:02 generated:05 fails:06 platforms:08 function:08 generating:08 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

* David Brown:

> GCC implements this by generating trampolines on the stack and
> passing the address of the newly generated code as the function
> pointer.  It fails to work on platforms that have security features
> that prevent stack execution.

GCC should generate code for the appropriate mprotect calls on these
architectures, so it should work on them, too.

