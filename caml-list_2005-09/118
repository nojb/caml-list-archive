Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id CA933BB9D
	for <caml-list@yquem.inria.fr>; Sun, 11 Sep 2005 22:19:43 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j8BKJhft022246
	for <caml-list@yquem.inria.fr>; Sun, 11 Sep 2005 22:19:43 +0200
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA19946 for <caml-list@pauillac.inria.fr>; Sun, 11 Sep 2005 22:19:42 +0200 (MET DST)
Received: from smtp.cegetel.net (mf00.sitadelle.com [212.94.174.67])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j8BKJgH2001699
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Sun, 11 Sep 2005 22:19:42 +0200
Received: from [192.168.144.2] (unknown [84.5.107.164])
	by smtp.cegetel.net (Postfix) with ESMTP id B7FB91A4357;
	Sun, 11 Sep 2005 22:19:37 +0200 (CEST)
Message-ID: <43249158.4070900@univ-savoie.fr>
Date: Sun, 11 Sep 2005 22:19:36 +0200
From: Christophe Raffalli <christophe.raffalli@univ-savoie.fr>
User-Agent: Mozilla Thunderbird 1.0.6 (X11/20050716)
X-Accept-Language: fr, en
MIME-Version: 1.0
To: caml-list <caml-list@inria.fr>
Subject: camlp4 char stream
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4324915F.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 4324915E.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; christophe:01 raffalli:01 christophe:01 raffalli:01 univ-savoie:01 char:01 char:01 parsing:01 ...:98 ...:98 string:03 string:03 stream:04 stream:04 variable:06 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.3


I would like to know how I can access directly the input char stream in 
camlp4

i want a

c-code { ... }

producing an empty str_item, but consuming the c-code in the { ... "} 
and outputing it in a separate file. An easy way is to access directly 
the char stream, but I do not find it (actually, looking at the source 
it is not stored in an accessible variable.

Someonce see a solution, other that parsing a string ?

[ [ c_code STRING -> ... ] ] would be easy, but is not very satisfactory.


