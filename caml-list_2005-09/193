Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id A2FA1BB9C
	for <caml-list@yquem.inria.fr>; Mon, 19 Sep 2005 22:21:30 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j8JKLUEC017787
	for <caml-list@yquem.inria.fr>; Mon, 19 Sep 2005 22:21:30 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA21337 for <caml-list@pauillac.inria.fr>; Mon, 19 Sep 2005 22:21:29 +0200 (MET DST)
Received: from smtp.cegetel.net (mf01.sitadelle.com [212.94.174.68])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j8JKLTYQ031687
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Mon, 19 Sep 2005 22:21:29 +0200
Received: from [192.168.144.2] (84-4-98-61.adslgp.cegetel.net [84.4.98.61])
	by smtp.cegetel.net (Postfix) with ESMTP id E11333F2426;
	Mon, 19 Sep 2005 22:21:26 +0200 (CEST)
Message-ID: <432F1DC5.2000607@univ-savoie.fr>
Date: Mon, 19 Sep 2005 22:21:25 +0200
From: Christophe Raffalli <christophe.raffalli@univ-savoie.fr>
User-Agent: Mozilla Thunderbird 1.0.6 (X11/20050716)
X-Accept-Language: fr, en
MIME-Version: 1.0
To: caml-list <caml-list@inria.fr>
Subject: Request for example where type annotation are required
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 432F1DCA.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 432F1DC9.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; christophe:01 raffalli:01 christophe:01 raffalli:01 univ-savoie:01 annotation:01 variants:01 ocaml:01 developping:01 unification:01 ocaml:01 higher-order:01 functor:01 annotation:01 ...:98 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.3


I am looking for small ML examples (using variants, modules, objects, 
etc ...)

Where one needs to write type information to be able to type-check the 
program with OCaml

I am developping a new typing algorithm (not unification based ;-) which 
seems to accept all OCaml features and more (like higher-order type 
without using a functor) with no type annotation at all. I have quite a 
few examples, but all the experts on this list may have idea I did not have.

Christophe Raffalli

PS: an article and a first implementation should be available very soon.

