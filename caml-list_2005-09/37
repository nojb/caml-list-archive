Return-Path: <damien.bobillot@m4x.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 702AFBDDB
	for <caml-list@yquem.inria.fr>; Sat,  3 Sep 2005 11:23:59 +0200 (CEST)
Received: from mx1.polytechnique.org (mx1.polytechnique.org [129.104.30.34])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j839Nx7V022767
	for <caml-list@yquem.inria.fr>; Sat, 3 Sep 2005 11:23:59 +0200
Received: from [192.168.0.11] (falcal.net [81.56.73.55])
	(using TLSv1 with cipher RC4-SHA (128/128 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTP id 9716233168;
	Sat,  3 Sep 2005 11:23:57 +0200 (CEST)
In-Reply-To: <87slwny8xs.fsf@mid.deneb.enyo.de>
References: <87slwny8xs.fsf@mid.deneb.enyo.de>
Mime-Version: 1.0 (Apple Message framework v734)
Content-Type: multipart/signed; micalg=sha1; boundary=Apple-Mail-33--744127176; protocol="application/pkcs7-signature"
Message-Id: <2D13837B-0BDC-4E14-86DE-ADCCE2E3BC78@m4x.org>
Cc: caml-list@yquem.inria.fr
From: Damien Bobillot <damien.bobillot@m4x.org>
Subject: Re: [Caml-list] Unsafe features
Date: Sat, 3 Sep 2005 11:24:03 +0200
To: Florian Weimer <fw@deneb.enyo.de>
X-Mailer: Apple Mail (2.734)
X-AV-Checked: ClamAV using ClamSMTP at djali.polytechnique.org (Sat Sep  3 11:23:58 2005 +0200 (CEST))
X-DCC--Metrics: djali 32702; Body=1 Fuz1=1 Fuz2=1
X-Org-Mail: damien.bobillot.2002@polytechnique.org
X-Miltered: at nez-perce with ID 43196BAF.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; damien:01 damien:01 caml-list:01 flowed:01 florian:01 ocaml:01 compiler:01 run-time:01 pointer:01 deallocation:01 heap:01 pkcs:01 065:98 emu:98 1341:98 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3


--Apple-Mail-33--744127176
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=ISO-8859-1;
	delsp=yes;
	format=flowed


Le 2 sept. 05 =E0 14:02, Florian Weimer a =E9crit :

> Has Ocaml any unsafe features?  With "unsafe", I mean constructs
> which, when (ab)used in certain ways, make further reasoning about the
> behavior of the program impossible (and neither the compiler nor the
> run-time system provides a diagnosis).  Examples in other languages
> are out-of-bounds array access, null pointer dereference, integer
> arithmetic overflow, premature deallocation of heap objects, wrong
> type declarations -- you get the idea.
>
> The C language interface falls into this category.  Are there any
> other problematic areas?

The Obj.magic function. I don't know exactly what it does, but I =20
think it does arbitrary type conversions.

--=20
Damien alias Schmurtz
aim:goim?screenname=3Dschmuuurtz


--Apple-Mail-33--744127176
Content-Transfer-Encoding: base64
Content-Type: application/pkcs7-signature;
	name=smime.p7s
Content-Disposition: attachment;
	filename=smime.p7s

MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIGIjCCAtsw
ggJEoAMCAQICAw54xzANBgkqhkiG9w0BAQQFADBiMQswCQYDVQQGEwJaQTElMCMGA1UEChMcVGhh
d3RlIENvbnN1bHRpbmcgKFB0eSkgTHRkLjEsMCoGA1UEAxMjVGhhd3RlIFBlcnNvbmFsIEZyZWVt
YWlsIElzc3VpbmcgQ0EwHhcNMDUwNDEzMTc1MTAxWhcNMDYwNDEzMTc1MTAxWjBJMR8wHQYDVQQD
ExZUaGF3dGUgRnJlZW1haWwgTWVtYmVyMSYwJAYJKoZIhvcNAQkBFhdkYW1pZW4uYm9iaWxsb3RA
bTR4Lm9yZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ1TOYBqwJ42s0Fzz56jY1p0
fplGyikFgoNEUKGnOpqt4vpeoqUppAnORt2yvdQJxfIkhsWkrD/diiPS7MTF73wcxlSJtqYzVzPK
G/2WDm6dBinuWCIyWYFhtGedyxbap3kJW44H7cL7HUVVxZ0JhOIOTsjCoEzaeKnML7bctbIJeXEE
lErfbDv2jA1PDG1ru5dx+Q+AmbexX92ygnntE6aX3QZLSbhrytg4yCRdV8cOyQ9eFruZBI42RJv3
nJXevjUOr4n+y/7bzijAJj4BFyUU+dllvj6bmk5brnUXheCSOD0Ci20dqGNC1MyJ43b6MoIrbW7j
JwYIv12D6KuWoaUCAwEAAaM0MDIwIgYDVR0RBBswGYEXZGFtaWVuLmJvYmlsbG90QG00eC5vcmcw
DAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQQFAAOBgQB0u5b6wgwsbcyzDHJTzshlCn4gshxWtU/1
mH77gBCpsY8L554YV4/Tvm1PzmDzErm++drQf5HMy8sEFjmwLvNfBP0BqtkSqsdRFGR4wHzTjMhS
EW5LgmlaccqBQzqQrANtzglgBVbtmBDAV92qHjQslwHK4FohCRRzGl4DLQmqBDCCAz8wggKooAMC
AQICAQ0wDQYJKoZIhvcNAQEFBQAwgdExCzAJBgNVBAYTAlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENh
cGUxEjAQBgNVBAcTCUNhcGUgVG93bjEaMBgGA1UEChMRVGhhd3RlIENvbnN1bHRpbmcxKDAmBgNV
BAsTH0NlcnRpZmljYXRpb24gU2VydmljZXMgRGl2aXNpb24xJDAiBgNVBAMTG1RoYXd0ZSBQZXJz
b25hbCBGcmVlbWFpbCBDQTErMCkGCSqGSIb3DQEJARYccGVyc29uYWwtZnJlZW1haWxAdGhhd3Rl
LmNvbTAeFw0wMzA3MTcwMDAwMDBaFw0xMzA3MTYyMzU5NTlaMGIxCzAJBgNVBAYTAlpBMSUwIwYD
VQQKExxUaGF3dGUgQ29uc3VsdGluZyAoUHR5KSBMdGQuMSwwKgYDVQQDEyNUaGF3dGUgUGVyc29u
YWwgRnJlZW1haWwgSXNzdWluZyBDQTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAxKY8VXNV
+065yplaHmjAdQRwnd/p/6Me7L3N9VvyGna9fww6YfK/Uc4B1OVQCjDXAmNaLIkVcI7dyfArhVqq
P3FWy688Cwfn8R+RNiQqE88r1fOCdz0Dviv+uxg+B79AgAJk16emu59l0cUqVIUPSAR/p7bRPGEE
QB5kGXJgt/sCAwEAAaOBlDCBkTASBgNVHRMBAf8ECDAGAQH/AgEAMEMGA1UdHwQ8MDowOKA2oDSG
Mmh0dHA6Ly9jcmwudGhhd3RlLmNvbS9UaGF3dGVQZXJzb25hbEZyZWVtYWlsQ0EuY3JsMAsGA1Ud
DwQEAwIBBjApBgNVHREEIjAgpB4wHDEaMBgGA1UEAxMRUHJpdmF0ZUxhYmVsMi0xMzgwDQYJKoZI
hvcNAQEFBQADgYEASIzRUIPqCy7MDaNmrGcPf6+svsIXoUOWlJ1/TCG4+DYfqi2fNi/A9BxQIJNw
PP2t4WFiw9k6GX6EsZkbAMUaC4J0niVQlGLH2ydxVyWN3amcOY6MIE9lX5Xa9/eH1sYITq726jTl
EBpbNU1341YheILcIRk13iSx0x1G/11fZU8xggLnMIIC4wIBATBpMGIxCzAJBgNVBAYTAlpBMSUw
IwYDVQQKExxUaGF3dGUgQ29uc3VsdGluZyAoUHR5KSBMdGQuMSwwKgYDVQQDEyNUaGF3dGUgUGVy
c29uYWwgRnJlZW1haWwgSXNzdWluZyBDQQIDDnjHMAkGBSsOAwIaBQCgggFTMBgGCSqGSIb3DQEJ
AzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTA1MDkwMzA5MjQwNFowIwYJKoZIhvcNAQkE
MRYEFA4zAPUhCJOnnC0kf5EKelee6P+UMHgGCSsGAQQBgjcQBDFrMGkwYjELMAkGA1UEBhMCWkEx
JTAjBgNVBAoTHFRoYXd0ZSBDb25zdWx0aW5nIChQdHkpIEx0ZC4xLDAqBgNVBAMTI1RoYXd0ZSBQ
ZXJzb25hbCBGcmVlbWFpbCBJc3N1aW5nIENBAgMOeMcwegYLKoZIhvcNAQkQAgsxa6BpMGIxCzAJ
BgNVBAYTAlpBMSUwIwYDVQQKExxUaGF3dGUgQ29uc3VsdGluZyAoUHR5KSBMdGQuMSwwKgYDVQQD
EyNUaGF3dGUgUGVyc29uYWwgRnJlZW1haWwgSXNzdWluZyBDQQIDDnjHMA0GCSqGSIb3DQEBAQUA
BIIBADLmLuNcgn+H1r8sVEgyzpl4ckiSJ9Kcj3gsxNzIKdDmgoZMWVV9nkZ5q0XTTpTc9AMzba7P
a3QTlhzSqD4Pz+t42zgbTaPEQuDaukNp0aBYKJ+vUO2s3vB44if/0Gt0n+ylVG1Yd8yKdBpZTrRC
MuzdDSptfb5xPsMLtG9RZKge5VS9n7LWSQWnpFA8dIsDaUaN9gvr7it1Cy86pvvbFEsHdXtPzIy8
pkygPnyCoysJt4F6PMXgfF7JdCLqcLZ/rak4Gy3phCO1jonKL3GZgedOEXBehq3wWYn3rBIs6vqS
j05sBhJxO6EmZrjQw5WJKd8nCoX+iOhFNMpk9FdKpkUAAAAAAAA=

--Apple-Mail-33--744127176--

