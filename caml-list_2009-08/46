Return-Path: <elnatan@cs.umd.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.9 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 77318BBAF
	for <caml-list@yquem.inria.fr>; Mon, 10 Aug 2009 15:22:30 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhUEANy7f0qACH+TgWdsb2JhbACaTgEBFiSlQIVhiE6EGAWCNg
X-IronPort-AV: E=Sophos;i="4.43,353,1246831200"; 
   d="scan'208";a="34236629"
Received: from server-nat-4.cs.umd.edu (HELO bacon.cs.umd.edu) ([128.8.127.147])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 10 Aug 2009 15:22:29 +0200
X-CSD-MailScanner-Watermark: 1250515341.20861@0Gnjd7Ujp+NK9qIjIWo2vQ
Received: from veruca.cs.umd.edu (veruca.cs.umd.edu [128.8.128.211])
	(authenticated bits=0)
	by bacon.cs.umd.edu (8.13.1/8.14.1) with ESMTP id n7ADMKKr023286
	(version=TLSv1/SSLv3 cipher=RC4-MD5 bits=128 verify=NO);
	Mon, 10 Aug 2009 09:22:20 -0400
Subject: Re: [Caml-list] Re: ocaml sefault in bytecode: unanswered questions
From: Elnatan Reisner <elnatan@cs.umd.edu>
To: Alain Frisch <alain@frisch.fr>
Cc: Caml Mailing List <caml-list@yquem.inria.fr>
In-Reply-To: <4A7F1EEF.2050301@frisch.fr>
References: <000301ca184b$032b8cc0$0982a640$@chollet@free.fr>
	 <000701ca184d$29507e90$7bf17bb0$@metastack.com>
	 <001001ca18c7$37b22220$a7166660$@chollet@free.fr>
	 <001501ca18cc$d59a61a0$80cf24e0$@metastack.com>
	 <001201ca18e9$c4456810$4cd03830$@chollet@free.fr>
	 <4A7ED53B.90607@frisch.fr>
	 <32623A80-A2C3-4AE4-B9FA-3FC0888494BD@cs.umd.edu>
	 <4A7F1EEF.2050301@frisch.fr>
Content-Type: text/plain
Date: Mon, 10 Aug 2009 09:22:19 -0400
Message-Id: <1249910539.27080.10.camel@veruca.cs.umd.edu>
Mime-Version: 1.0
X-Mailer: Evolution 2.0.2 (2.0.2-41.el4_7.2) 
Content-Transfer-Encoding: 7bit
X-Greylist: Sender succeeded SMTP AUTH, not delayed by milter-greylist-4.0 (bacon.cs.umd.edu [172.24.3.34]); Mon, 10 Aug 2009 09:22:20 -0400 (EDT)
X-Spam: no; 0.00; ocaml:01 bytecode:01 0200,:01 frisch:01 mutable:01 symmetric:01 toplevel:01 arrays:01 recursive:01 pointers:01 bool:01 2009:98 2009:98 equality:01 terminates:01 

On Sun, 2009-08-09 at 21:09 +0200, Alain Frisch wrote:
> On 8/9/2009 8:56 PM, Elnatan Reisner wrote:
> > My other issue is that the description of (==) for mutable structures
> > doesn't specify that it is symmetric; reading the documentation
> > literally only implies that e1 is a substructure of e2. Even just adding
> > 'and vice versa' might clean this up:
> > |e1 == e2| is true if and only if physical modification of |e1| also
> > affects |e2 and vice versa|
> 
> It depends on what 'physical modification' and 'affect' mean. Clearly, 
> the documentation means toplevel modifications of the values (i.e. 
> modifying fields for record values, or elements for arrays or strings). 
> If one includes deep modifications, then your extended criterion does 
> not work either (think about two mutually recursive records).

You're right; thanks for pointing this out. But what does this mean for
physical equality? What does it really mean? Does [e1 == e2] mean e1 and
e2 are the same entity in memory---i.e., they are equal as C pointers?

> Note that (=) sometimes terminates for cylic values.
> 
> # type t = A of t | B of t;;
> type t = A of t | B of t
> # (let rec x = A x in x) = (let rec x = B x in x);;
> - : bool = false

Again, thanks for pointing this out. But can (=) ever evaluate to true
on cyclic structures?

-Elnatan

