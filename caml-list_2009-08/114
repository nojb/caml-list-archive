Return-Path: <rich@annexia.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.8 required=5.0 tests=AWL,SPF_FAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 9D005BC37
	for <caml-list@yquem.inria.fr>; Thu, 20 Aug 2009 23:47:28 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Av0EAHRhjUpQRFuwWWdsb2JhbACbAQEWFQS9B4QYBQ
X-IronPort-AV: E=Sophos;i="4.43,416,1246831200"; 
   d="scan'208";a="34642582"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 20 Aug 2009 23:47:28 +0200
Received: from rich by furbychan.cocan.org with local (Exim 4.63)
	(envelope-from <rich@annexia.org>)
	id 1MeFTi-0000Yf-D5; Thu, 20 Aug 2009 22:47:26 +0100
Date: Thu, 20 Aug 2009 22:47:26 +0100
To: rixed@happyleptic.org
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Good book about ML compilation ?
Message-ID: <20090820214726.GA2015@annexia.org>
References: <20090820184052.GA28533@happyleptic.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20090820184052.GA28533@happyleptic.org>
User-Agent: Mutt/1.5.13 (2006-08-11)
From: Richard Jones <rich@annexia.org>
X-Spam: no; 0.00; compilation:01 0200,:01 ocaml:01 lambda:01 compiler:01 advices:01 ocaml:01 20,:98 2009:98 garbage:01 wrote:01 caml-list:01 imperative:01 simonpj:02 implemented:02 

On Thu, Aug 20, 2009 at 08:40:52PM +0200, rixed@happyleptic.org wrote:
> Hello !
> 
> Suppose I want to learn how ML is compiled, and especialy how OCaml is
> compiled, it's various internal lambda representations and the like.
> Would this book :
> 
> http://www.amazon.com/Modern-Compiler-Implementation-Andrew-Appel/dp/0521607647/
> 
> be a good one ?

I read this book last year.  It's mainly directed towards writing a
compiler for imperative languages.  I didn't find it to be anything
particularly special, but I guess it's OK if you want to know the
basics of writing things like garbage collectors.

For functional programming specifically, you might try Simon
Peyton-Jones's book "The Implementation of Functional Programming
Languages".  This used to be available free here, but as I write the
website is down:

http://research.microsoft.com/en-us/um/people/simonpj/papers/slpj-book-1987/

I have a local copy of it if you don't locate one.

> It's hard to tell what this book's worth from the customer advices ; it's
> especialy hard to tell if it fits well to OCaml or not.

Best way to find out how OCaml is implemented is to read
the source.

Rich.

-- 
Richard Jones
Red Hat

