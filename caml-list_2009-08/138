Return-Path: <Pascal.Cuoq@cea.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: **
X-Spam-Status: No, score=2.1 required=5.0 tests=AWL,RCVD_IN_BL_SPAMCOP_NET,
	SPF_SOFTFAIL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id CAB04BBAF
	for <caml-list@yquem.inria.fr>; Wed, 26 Aug 2009 12:16:23 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AisCAAOolEqEqOABmWdsb2JhbACbEAEBAQEBCAsKBxO8doQaBQ
X-IronPort-AV: E=Sophos;i="4.44,279,1249250400"; 
   d="scan'208";a="45557321"
Received: from oxalide-out.extra.cea.fr ([132.168.224.1])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 26 Aug 2009 12:16:23 +0200
Received: from pisaure.intra.cea.fr (pisaure.intra.cea.fr [132.166.88.21])
	by oxalide.extra.cea.fr (8.14.2/8.14.2/CEAnet-Internet-out-2.0) with ESMTP id n7QAGMgP015649
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <caml-list@yquem.inria.fr>; Wed, 26 Aug 2009 12:16:22 +0200
Received: from muguet2.intra.cea.fr (muguet2.intra.cea.fr [132.166.192.7])
	by pisaure.intra.cea.fr (8.14.2/8.14.2) with ESMTP id n7QAGMkJ025761
	for <caml-list@yquem.inria.fr>; Wed, 26 Aug 2009 12:16:22 +0200
	(envelope-from Pascal.Cuoq@cea.fr)
Received: from is005030.intra.cea.fr (is005030.intra.cea.fr [132.166.132.11])
	by muguet2.intra.cea.fr (8.13.8/8.13.8/CEAnet-Intranet-out-1.1) with ESMTP id n7QAGMpA016905
	for <caml-list@yquem.inria.fr>; Wed, 26 Aug 2009 12:16:22 +0200
Message-Id: <22CF333F-1944-405D-AE3C-08C55473A291@cea.fr>
From: Pascal Cuoq <Pascal.Cuoq@cea.fr>
To: caml-list@yquem.inria.fr
In-Reply-To: <20090826100004.0169CBC58@yquem.inria.fr>
Content-Type: text/plain; charset=US-ASCII; format=flowed
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (Apple Message framework v936)
Subject: Re: Physical counterpart to Pervasives.compare?
Date: Wed, 26 Aug 2009 12:14:16 +0200
References: <20090826100004.0169CBC58@yquem.inria.fr>
X-Mailer: Apple Mail (2.936)
X-Spam: no; 0.00; cuoq:01 cuoq:01 pervasives:01 christophe:01 raffalli:01 christophe:01 raffalli:01 univ-savoie:01 ocaml's:01 wrote:01 recursively:01 heap:01 heap:01 cea:01 gcs:01 

Christophe Raffalli <christophe.raffalli@univ-savoie.fr> wrote:
> Or, if all major GCs are compacting and the minor heap is at
> a higher adress than the major heap, then OCaml's could also
> preserve the adress order between GC ...

I do not think that the current minor GC algorithm does
any effort to copy the live blocks from the minor heap in order
(i.e. to copy first the blocks with the lower addresses).
It copies them as it finds them, recursively. Two blocks from
the minor heap may still see the order in which they are
in memory change when they are both copied
to the major heap.
For this reason, I do not think that the above trick would work.

Pascal

