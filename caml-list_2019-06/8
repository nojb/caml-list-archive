Return-Path: <hugo.heuzard@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id F096F8247D
	for <caml-list@sympa.inria.fr>; Thu,  6 Jun 2019 03:05:45 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=hugo.heuzard@gmail.com; spf=Pass smtp.mailfrom=hugo.heuzard@gmail.com; spf=None smtp.helo=postmaster@mail-vk1-f193.google.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  hugo.heuzard@gmail.com) identity=pra;
  client-ip=209.85.221.193;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="hugo.heuzard@gmail.com";
  x-sender="hugo.heuzard@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  hugo.heuzard@gmail.com designates 209.85.221.193 as permitted
  sender) identity=mailfrom; client-ip=209.85.221.193;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="hugo.heuzard@gmail.com";
  x-sender="hugo.heuzard@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-vk1-f193.google.com) identity=helo;
  client-ip=209.85.221.193;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="hugo.heuzard@gmail.com";
  x-sender="postmaster@mail-vk1-f193.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AvlBBzhfWnTmJneLgxZaOK+UhlGMj4u6mDksu8pMi?=
 =?us-ascii?q?zoh2WeGdxcS+ZB7h7PlgxGXEQZ/co6odzbaP6ua5BTdLvc7JmUtBWaQEbwUCh8?=
 =?us-ascii?q?QSkl5oK+++Imq/EsTXaTcnFt9JTl5v8iLzG0FUHMHjew+a+SXqvnYdFRrlKAV6?=
 =?us-ascii?q?OPn+FJLMgMSrzeCy/IDYbxlViDanbr5+MQi6oR/MusQZj4ZuJak8xgfUqXZUZu?=
 =?us-ascii?q?pawn9lK0iOlBjm/Mew+5Bj8yVUu/0/8sNLTLv3caclQ7FGFToqK2866tHluhnF?=
 =?us-ascii?q?VguP+2ATUn4KnRpSAgjK9w/1U5HsuSbnrOV92S2aPcrrTbAoXDmp8qlmRAP0hC?=
 =?us-ascii?q?oBKjU063/chNBug61HoRKhvx1/zJDSYIGJL/p1Y6fRccoHSWZdQspdUipMCZ6+?=
 =?us-ascii?q?YYQSFeoMJelXr4f/qFUOoxWwBhSiCv3zxTJTnHD6wbc33v49HQ3a3gEtGc8Fvn?=
 =?us-ascii?q?TOrNXyMacfSeC1zLTHzTXEcvhb3jf96JXHchAmu/2MXax/cdfQyEY1DQPKk06d?=
 =?us-ascii?q?qYPgPzyP1+QNt3KX4PZnVeKqkmMqrRx6rDaoxscpkIbJh4QVx0ja+iVn2ok1Ic?=
 =?us-ascii?q?e0SEt/YdK8EJtQqySaN49sTsMjWGFkoCk6yrwauZ67YSgF044ryALYa/yCa4SI?=
 =?us-ascii?q?7AjsW/qLLTd9gHJofq+0iRWq8UW41OHwSs253ExJoydFiNXAqG4B2wHJ5sSaTv?=
 =?us-ascii?q?Zw8EGs0iuV2Q/J8OFLO0U0mLLbK5E/xr4wkYIesUHZES/3nEX6lbGWdkY59uSx?=
 =?us-ascii?q?5eTrf7Hrq5GGO497jQH+NasumsihDugiLgcOWG2b9fy91L3l40L5XK1HguMqnq?=
 =?us-ascii?q?TdqpzXJsQWqrSnDwNLz4ov8QuzAjOo3dgAmHkINlNFeBaJj4jzPFHOJej1Dfei?=
 =?us-ascii?q?g1Sjlzdn3fDGMaP8ApTMNHfDiqrucK1y605Z0gUzzNRf64hIBbEGJfL/QlXxu8?=
 =?us-ascii?q?DADh8lLwy0xP7qB8ln2YMbXWKDG6uZMKLJsV+U/e8vOOmNZIoNuDnnMfQl5vju?=
 =?us-ascii?q?jWU4mVAHZ6Wp04EXOziEGaFFLkOYanrtyv4aGGZC6gMlRe3CiUbEVjVTbjC7VO?=
 =?us-ascii?q?Q+/mdoJpihCNLDW4+qyOiBwSi8WJ1be3JPEFykHnLhdoHCUPAJPnHBavR9myAJ?=
 =?us-ascii?q?AODyA7Qq0guj4Uqjk+I+crjkvxYAvJem7+BbovXJnEhrpzNxBsWZlWqKSjMsxz?=
 =?us-ascii?q?5ad3oNxKl65HdF5BKD3Kx/2aIKENVS47ZXUV5/O8eNlKp1DNf9Xg+HddCMGg7/?=
 =?us-ascii?q?E4eWRAopR9d0+OcgJkN0GtGslBfGhnP4DLoclrjND5sxoPvR?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BbBAB/Zvhcf8HdVdFmDg8BAQUBBwUBg?=
 =?us-ascii?q?WWCe1EzKIQUgR2CXpEDikeQEgkBAwEMJQoBAYN6RgKCVhsHAQQ0EwEDAQEEAQE?=
 =?us-ascii?q?CAQEDARMBAQkLCwgnJQyCOikBgmYBAQEDASMdARsXBgEDAQsGAwILDSoCAiIBE?=
 =?us-ascii?q?QEFARwGE4MjgWkBAw4PD4p8kA48iyCBFAUBF4J6BYQ4ChknDWCBOgIHDQIDgSK?=
 =?us-ascii?q?LW4IWgyVQLj6CYQKCDoJdglgEizCHeoESlFQHAoIQgWgBhFmMeBuDDJNzLZNzj?=
 =?us-ascii?q?zcPIYFFgXlwUDGCOwmCBoNwhCCFeEg1MJAPAQE?=
X-IPAS-Result: =?us-ascii?q?A0BbBAB/Zvhcf8HdVdFmDg8BAQUBBwUBgWWCe1EzKIQUgR2?=
 =?us-ascii?q?CXpEDikeQEgkBAwEMJQoBAYN6RgKCVhsHAQQ0EwEDAQEEAQECAQEDARMBAQkLC?=
 =?us-ascii?q?wgnJQyCOikBgmYBAQEDASMdARsXBgEDAQsGAwILDSoCAiIBEQEFARwGE4MjgWk?=
 =?us-ascii?q?BAw4PD4p8kA48iyCBFAUBF4J6BYQ4ChknDWCBOgIHDQIDgSKLW4IWgyVQLj6CY?=
 =?us-ascii?q?QKCDoJdglgEizCHeoESlFQHAoIQgWgBhFmMeBuDDJNzLZNzjzcPIYFFgXlwUDG?=
 =?us-ascii?q?COwmCBoNwhCCFeEg1MJAPAQE?=
X-IronPort-AV: E=Sophos;i="5.60,557,1549926000"; 
   d="scan'208,217";a="386180727"
X-MGA-submission: =?us-ascii?q?MDGyNmT9lVZXGOIBHIeAonhkgSIeKQvmGZaY3n?=
 =?us-ascii?q?x0Mo/hRvs74jCwd+p8QykfbPIZ46/HBNXE4R8bDme0YhYV6FRSwEAPft?=
 =?us-ascii?q?gL0AYrKIcEvzMlEN+QsInNTx+pnzBea+DGNhs8dnS1MiM+jIBXIZ9AUh?=
 =?us-ascii?q?S7gh043TI7dShR531H8pbjsQ=3D=3D?=
Received: from mail-vk1-f193.google.com ([209.85.221.193])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 06 Jun 2019 03:05:28 +0200
Received: by mail-vk1-f193.google.com with SMTP id b69so142711vkb.3
        for <caml-list@inria.fr>; Wed, 05 Jun 2019 18:05:28 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:references:in-reply-to:from:date:message-id:subject:to
         :cc;
        bh=sItbMsNqi4zmx5uSFW/Vd2cNZlZbdjfMDq5GcJd1Zsk=;
        b=sQVqofZ3Ju7w8Jcue4OL0YgHUgWqEuUKG66Mke9eQJzzWXDyYcxqESvA0JZzX56ewC
         Q34+kAWe7AYKb8NR/kwaP/M9o67+EMxnJ6EgBvIymg5xQOutcshGkbGUFa21TBtQpeak
         XEHvO+CGkEX4KLJYITyts8Jv9qC1aeylZHHn9o1Xtx0kFC3TyMrQj18w61U/Sjt6ocyP
         kftBPTtcI2h3tXsxGRV0Aop/0lTfg3bLdV6NG/Lv90NP9rVWgmZuHlmZlQJqjqxs0k4M
         ieybosYWLTXXXzVtTGEPKVbNlaW1M9E75opXbQnyzsKvcl2N9mulHHale2uYJwePIS2I
         8vBA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=sItbMsNqi4zmx5uSFW/Vd2cNZlZbdjfMDq5GcJd1Zsk=;
        b=Pm+fzSuditJFq6GerQA6UviE2ff9txw65gQFzB3+Mflvtu/971fVEcPIsFJF8zqrln
         kUozhA/ZO7sgSQvDpkVlUE5Qgv2/W3RMsGfeEl0QJrUJMjkSEoVKRncMLQPCS1arKlGf
         g1LePNy1MX2Yc3cQQsByhUOx9A03H0aaYU7aNqVALs7Q8My83/IKDqMufBaBqdmUwIy2
         ZsH0UdhQGhhphaE4lwi2gqrLMOb/PQWUJrYMZYn2wqV9+r39S7W3okhxvsgWrU0/DDIR
         pUmql1xS/loaZ7nhbjiTiKozTsfckttsbL6+aXkaBpCiha309/X1IWrgqTdn3SVbHEfx
         5cYQ==
X-Gm-Message-State: APjAAAXU6a+TqlY1Ugp/PxGO9n1jbsj33Bbed/LT7onzj0zU8sBYz596
	rKIfvgGPqkpSWxKkcUzI+DHwhIgrX2hzviTs660y3aaer1ZneA==
X-Google-Smtp-Source: APXvYqx8eVBh/WyjEJTZkuhJ+gU1vPeUiEPnPoJZZ3MiQJ54VLuB4XaOsDlrCzHrYWxLZqN/Ypagcvc8CrCjLfi6Y4A=
X-Received: by 2002:ac5:c254:: with SMTP id n20mr13766459vkk.89.1559783126932;
 Wed, 05 Jun 2019 18:05:26 -0700 (PDT)
MIME-Version: 1.0
References: <20190526062659.GA63981@pllab.is.ocha.ac.jp> <CAEYcRDH==Ej9XKUVNudG8L+ON59TrPBS9NVQJ-arj5UcJMxd0g@mail.gmail.com>
 <20190530141933.GA93967@pllab.is.ocha.ac.jp> <20190601010031.GA673@pllab.is.ocha.ac.jp>
In-Reply-To: <20190601010031.GA673@pllab.is.ocha.ac.jp>
From: hugo <hugo.heuzard@gmail.com>
Date: Thu, 6 Jun 2019 09:05:15 +0800
Message-ID: <CAEYcRDEGyB_vF+JQppxNDWn+wmvkx+tD9cYL13UTHeJb1G0XJw@mail.gmail.com>
To: Kenichi Asai <asai@is.ocha.ac.jp>
Cc: caml-list@inria.fr
Content-Type: multipart/alternative; boundary="0000000000003522c9058a9d4f96"
Subject: Re: [Caml-list] How can I use a library in a toplevel created by
 js_of_ocaml?

--0000000000003522c9058a9d4f96
Content-Type: text/plain; charset="UTF-8"

On Sat, Jun 1, 2019 at 9:00 AM Kenichi Asai <asai@is.ocha.ac.jp> wrote:

> I could.  In addition to adding myFac to the argument of
> jsoo_listunits:
>
> > (action (run jsoo_listunits -o %{targets} stdlib myFac))
>
> I inserted myFac as one of the libraries:
>
> (executables
>   (names eval)
>   (libraries
>     myFac
>     js_of_ocaml-compiler
>     js_of_ocaml-toplevel)
>   (link_flags (:standard -linkall))
>   (preprocess (pps js_of_ocaml-ppx)))
>
> and added the path to the cmi file of myFac library to the argument
> of js_of_ocaml.
>
> -I /home/asai/.opam/ocaml-base-compiler.4.04.0/lib/myFac/


> (I wonder if I always have to write this path.  Maybe it could be
> automatically searched (as it is an opam library) or there is a
> better way to write it rather than writing the absolute path.)
>

I would expect the path to not be necessary when passing a library name to
jsoo_listunits


>
> > As a related question, is there a document I can study that describes:
> > - what jsoo_listunits does, and
> > - what the --export option (and other options) of js_of_ocaml does?


> I imagine that:
>
> - executables have to contain libraries to be used in the toplevel.
> - The --export option exports to the toplevel those modules that are
>   required in the toplevel.
> - export.txt specifies which modules to be exported.
>
> Correct me if I am wrong.  I still welcome any documents to study.
>

The set of module one want to expose in a toplevel is different from the
set of module needed to build the toplevel.
`--export` is used to tell jsoo what module should be exported. Only module
linked in the toplevel can be exported.

jsoo_listunits is a small helper to build that list of module from library
names.
In short, what it does is: lookup {cma,cmo}s for the given libraries (using
findlib) and build the list of module for theses libraries.

I encourage you to open issues on github
<https://github.com/ocsigen/js_of_ocaml/issues/new> for theses questions.


> Sincerely,
>
> --
> Kenichi Asai
>
>
> On Thu, May 30, 2019 at 11:19:33PM +0900,
>  Kenichi Asai wrote:
>
> > Thank you for the e-mail.  It goes great.  Going one step further, can
> > I do the same if I install fac as an opam library?  Suppose I packaged
> > fac.ml as a library called myFac and installed fac.cma and fac.cmi via
> > opam.  Using:
> >
> > (action (run jsoo_listunits -o %{targets} stdlib myFac))
> >
> > I could compile it but I got the "Unbound module Fac" error when I
> > open index.html.  Is listing myFac in the above line not enough?
> >
> > As a related question, is there a document I can study that describes:
> > - what jsoo_listunits does, and
> > - what the --export option (and other options) of js_of_ocaml does?
> >
> > --
> > Kenichi Asai
> >
> >
> > On Tue, May 28, 2019 at 08:41:01AM +0800,
> >  hugo wrote:
> >
> > > You need to tell js_of_ocaml the list of cmi that you want to export.
> > > [jsoo_listunits] can compute the list of cmi from a findlib library.
> > > Because fac is not installed, you'll need to be explicit.
> > > There might be some better wait to integrate with dune but the
> following
> > > should change should do what you want.
> > >
> > > (rule
> > >  (targets export.txt)
> > >  (deps eval.bc fac/fac.cma)
> > >  (action (run jsoo_listunits -o %{targets} stdlib
> fac/.fac.objs/byte/fac.cmi)))
> > >
> > > H
> > >
> > >
> > > On Sun, May 26, 2019 at 2:27 PM Kenichi Asai <asai@is.ocha.ac.jp>
> wrote:
> > >
> > > > I want to create a web page where I can execute an OCaml expression
> > > > that mentions a prebuilt user-defined library.  I find the following
> > > > example in the js_of_ocaml/toplevel repository:
> > > >
> > > >
> https://github.com/ocsigen/js_of_ocaml/tree/master/toplevel/examples/eval
> > > >
> > > > Can I extend this example so that the toplevel is compiled with a
> > > > user-defined library?  The attached program contains the following
> > > > where the first three files are copied from the example in the
> > > > js_of_ocaml/toplevel repository.
> > > >
> > > > toplevel/ -- dune
> > > >           -- eval.ml
> > > >           -- index.html
> > > >           -- fac/ -- dune
> > > >                   -- fac.ml
> > > >
> > > > I intend that fac.ml is compiled as a library and I want to use it
> in
> > > > the toplevel.  I added "fac" in the libraries stanza of the toplevel
> > > > dune file (as in the attached file):
> > > >
> > > > (executables
> > > >   (names eval)
> > > >   (libraries
> > > >     fac
> > > >     js_of_ocaml-compiler
> > > >     js_of_ocaml-toplevel)
> > > >   (link_flags (:standard -linkall))
> > > >   (preprocess (pps js_of_ocaml-ppx)))
> > > >
> > > > Naturally, fac.ml is compiled and I can use it in the eval.ml, but
> it
> > > > is not visible from the toplevel.  I included the following part in
> > > > the index.html (as in the attached file):
> > > >
> > > > <script type="text/ocaml" stdout="script3" stderr="script3">
> > > >   Fac.go 3;;
> > > > </script>
> > > > <div id="script3"> </div>
> > > >
> > > > but the output says:
> > > >
> > > > File "/dev/fake_stdin", line 2, characters 6-12:
> > > > Error: Unbound module Fac
> > > >
> > > > Thank you in advance.
> > > >
> > > > --
> > > > Kenichi Asai
>

--0000000000003522c9058a9d4f96
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div dir=3D"ltr"><br></div><br><div class=3D"gmail_quote">=
<div dir=3D"ltr" class=3D"gmail_attr">On Sat, Jun 1, 2019 at 9:00 AM Kenich=
i Asai &lt;<a href=3D"mailto:asai@is.ocha.ac.jp">asai@is.ocha.ac.jp</a>&gt;=
 wrote:<br></div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px =
0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex">I could.=
=C2=A0 In addition to adding myFac to the argument of<br>
jsoo_listunits:<br>
<br>
&gt; (action (run jsoo_listunits -o %{targets} stdlib myFac))<br>
<br>
I inserted myFac as one of the libraries:<br>
<br>
(executables<br>
=C2=A0 (names eval)<br>
=C2=A0 (libraries<br>
=C2=A0 =C2=A0 myFac<br>
=C2=A0 =C2=A0 js_of_ocaml-compiler<br>
=C2=A0 =C2=A0 js_of_ocaml-toplevel)<br>
=C2=A0 (link_flags (:standard -linkall))<br>
=C2=A0 (preprocess (pps js_of_ocaml-ppx)))<br>
<br>
and added the path to the cmi file of myFac library to the argument<br>
of js_of_ocaml.<br>
<br>
-I /home/asai/.opam/ocaml-base-compiler.4.04.0/lib/myFac/=C2=A0</blockquote=
><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border=
-left:1px solid rgb(204,204,204);padding-left:1ex">
<br>
(I wonder if I always have to write this path.=C2=A0 Maybe it could be<br>
automatically searched (as it is an opam library) or there is a<br>
better way to write it rather than writing the absolute path.)<br></blockqu=
ote><div><br></div><div>I would expect the path to not be necessary when pa=
ssing a library name to jsoo_listunits</div><div>=C2=A0</div><blockquote cl=
ass=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid=
 rgb(204,204,204);padding-left:1ex">
<br>
&gt; As a related question, is there a document I can study that describes:=
<br>
&gt; - what jsoo_listunits does, and<br>
&gt; - what the --export option (and other options) of js_of_ocaml does?=C2=
=A0</blockquote><blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0=
px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex">
<br>
I imagine that:<br>
<br>
- executables have to contain libraries to be used in the toplevel.<br>
- The --export option exports to the toplevel those modules that are<br>
=C2=A0 required in the toplevel.<br>
- export.txt specifies which modules to be exported.<br>
<br>
Correct me if I am wrong.=C2=A0 I still welcome any documents to study.<br>=
</blockquote><div><br></div><div>The set of module one want to expose in a =
toplevel is different from the set of module needed to build the toplevel.<=
/div><div>`--export` is used to tell jsoo what module should be exported. O=
nly module linked in the toplevel can be exported.</div><div><br></div><div=
>jsoo_listunits is a small helper to build that list of module from library=
 names.</div><div>In short, what it does is: lookup {cma,cmo}s for the give=
n libraries (using findlib) and build the list of module for theses librari=
es.</div><div><br></div><div>I encourage you to open issues on <a href=3D"h=
ttps://github.com/ocsigen/js_of_ocaml/issues/new">github</a>=C2=A0for these=
s questions.</div><div><br></div><blockquote class=3D"gmail_quote" style=3D=
"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-le=
ft:1ex">
<br>
Sincerely,<br>
<br>
-- <br>
Kenichi Asai<br>
<br>
<br>
On Thu, May 30, 2019 at 11:19:33PM +0900,<br>
=C2=A0Kenichi Asai wrote:<br>
<br>
&gt; Thank you for the e-mail.=C2=A0 It goes great.=C2=A0 Going one step fu=
rther, can<br>
&gt; I do the same if I install fac as an opam library?=C2=A0 Suppose I pac=
kaged<br>
&gt; <a href=3D"http://fac.ml" rel=3D"noreferrer" target=3D"_blank">fac.ml<=
/a> as a library called myFac and installed fac.cma and fac.cmi via<br>
&gt; opam.=C2=A0 Using:<br>
&gt; <br>
&gt; (action (run jsoo_listunits -o %{targets} stdlib myFac))<br>
&gt; <br>
&gt; I could compile it but I got the &quot;Unbound module Fac&quot; error =
when I<br>
&gt; open index.html.=C2=A0 Is listing myFac in the above line not enough?<=
br>
&gt; <br>
&gt; As a related question, is there a document I can study that describes:=
<br>
&gt; - what jsoo_listunits does, and<br>
&gt; - what the --export option (and other options) of js_of_ocaml does?<br>
&gt; <br>
&gt; -- <br>
&gt; Kenichi Asai<br>
&gt; <br>
&gt; <br>
&gt; On Tue, May 28, 2019 at 08:41:01AM +0800,<br>
&gt;=C2=A0 hugo wrote:<br>
&gt; <br>
&gt; &gt; You need to tell js_of_ocaml the list of cmi that you want to exp=
ort.<br>
&gt; &gt; [jsoo_listunits] can compute the list of cmi from a findlib libra=
ry.<br>
&gt; &gt; Because fac is not installed, you&#39;ll need to be explicit.<br>
&gt; &gt; There might be some better wait to integrate with dune but the fo=
llowing<br>
&gt; &gt; should change should do what you want.<br>
&gt; &gt; <br>
&gt; &gt; (rule<br>
&gt; &gt;=C2=A0 (targets export.txt)<br>
&gt; &gt;=C2=A0 (deps eval.bc fac/fac.cma)<br>
&gt; &gt;=C2=A0 (action (run jsoo_listunits -o %{targets} stdlib fac/.fac.o=
bjs/byte/fac.cmi)))<br>
&gt; &gt; <br>
&gt; &gt; H<br>
&gt; &gt; <br>
&gt; &gt; <br>
&gt; &gt; On Sun, May 26, 2019 at 2:27 PM Kenichi Asai &lt;<a href=3D"mailt=
o:asai@is.ocha.ac.jp" target=3D"_blank">asai@is.ocha.ac.jp</a>&gt; wrote:<b=
r>
&gt; &gt; <br>
&gt; &gt; &gt; I want to create a web page where I can execute an OCaml exp=
ression<br>
&gt; &gt; &gt; that mentions a prebuilt user-defined library.=C2=A0 I find =
the following<br>
&gt; &gt; &gt; example in the js_of_ocaml/toplevel repository:<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; <a href=3D"https://github.com/ocsigen/js_of_ocaml/tree/maste=
r/toplevel/examples/eval" rel=3D"noreferrer" target=3D"_blank">https://gith=
ub.com/ocsigen/js_of_ocaml/tree/master/toplevel/examples/eval</a><br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; Can I extend this example so that the toplevel is compiled w=
ith a<br>
&gt; &gt; &gt; user-defined library?=C2=A0 The attached program contains th=
e following<br>
&gt; &gt; &gt; where the first three files are copied from the example in t=
he<br>
&gt; &gt; &gt; js_of_ocaml/toplevel repository.<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; toplevel/ -- dune<br>
&gt; &gt; &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0-- <a href=3D"http:/=
/eval.ml" rel=3D"noreferrer" target=3D"_blank">eval.ml</a><br>
&gt; &gt; &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0-- index.html<br>
&gt; &gt; &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0-- fac/ -- dune<br>
&gt; &gt; &gt;=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=
=A0 =C2=A0-- <a href=3D"http://fac.ml" rel=3D"noreferrer" target=3D"_blank"=
>fac.ml</a><br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; I intend that <a href=3D"http://fac.ml" rel=3D"noreferrer" t=
arget=3D"_blank">fac.ml</a> is compiled as a library and I want to use it i=
n<br>
&gt; &gt; &gt; the toplevel.=C2=A0 I added &quot;fac&quot; in the libraries=
 stanza of the toplevel<br>
&gt; &gt; &gt; dune file (as in the attached file):<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; (executables<br>
&gt; &gt; &gt;=C2=A0 =C2=A0(names eval)<br>
&gt; &gt; &gt;=C2=A0 =C2=A0(libraries<br>
&gt; &gt; &gt;=C2=A0 =C2=A0 =C2=A0fac<br>
&gt; &gt; &gt;=C2=A0 =C2=A0 =C2=A0js_of_ocaml-compiler<br>
&gt; &gt; &gt;=C2=A0 =C2=A0 =C2=A0js_of_ocaml-toplevel)<br>
&gt; &gt; &gt;=C2=A0 =C2=A0(link_flags (:standard -linkall))<br>
&gt; &gt; &gt;=C2=A0 =C2=A0(preprocess (pps js_of_ocaml-ppx)))<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; Naturally, <a href=3D"http://fac.ml" rel=3D"noreferrer" targ=
et=3D"_blank">fac.ml</a> is compiled and I can use it in the <a href=3D"htt=
p://eval.ml" rel=3D"noreferrer" target=3D"_blank">eval.ml</a>, but it<br>
&gt; &gt; &gt; is not visible from the toplevel.=C2=A0 I included the follo=
wing part in<br>
&gt; &gt; &gt; the index.html (as in the attached file):<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; &lt;script type=3D&quot;text/ocaml&quot; stdout=3D&quot;scri=
pt3&quot; stderr=3D&quot;script3&quot;&gt;<br>
&gt; &gt; &gt;=C2=A0 =C2=A0Fac.go 3;;<br>
&gt; &gt; &gt; &lt;/script&gt;<br>
&gt; &gt; &gt; &lt;div id=3D&quot;script3&quot;&gt; &lt;/div&gt;<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; but the output says:<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; File &quot;/dev/fake_stdin&quot;, line 2, characters 6-12:<b=
r>
&gt; &gt; &gt; Error: Unbound module Fac<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; Thank you in advance.<br>
&gt; &gt; &gt;<br>
&gt; &gt; &gt; --<br>
&gt; &gt; &gt; Kenichi Asai<br>
</blockquote></div></div>

--0000000000003522c9058a9d4f96--
