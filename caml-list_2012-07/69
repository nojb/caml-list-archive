Return-Path: <yallop@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id 47E687ED34
	for <caml-list@sympa.inria.fr>; Tue, 10 Jul 2012 12:22:56 +0200 (CEST)
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  yallop@gmail.com) identity=pra; client-ip=74.125.82.52;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="yallop@gmail.com";
  x-sender="yallop@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail1-smtp-roc.national.inria.fr: domain of
  yallop@gmail.com designates 74.125.82.52 as permitted sender)
  identity=mailfrom; client-ip=74.125.82.52;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="yallop@gmail.com";
  x-sender="yallop@gmail.com"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-wg0-f52.google.com) identity=helo;
  client-ip=74.125.82.52;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="yallop@gmail.com";
  x-sender="postmaster@mail-wg0-f52.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjgBAJQB/E9KfVI0kGdsb2JhbABFhWayDwgiAQEBAQkJDQcUBCOCIAEBAQQSAg8EGQEbHQEDDAYFCw0CAiYCAiIBEQEFARwGEyKHWwEDDJ1yCQOLVE+CcYVBChknBQhXiHEBBQyBFIoghRCBEgOVNoESiXWDIT6Dfw
X-IronPort-AV: E=Sophos;i="4.77,559,1336341600"; 
   d="scan'208";a="166259398"
Received: from mail-wg0-f52.google.com ([74.125.82.52])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 10 Jul 2012 12:22:55 +0200
Received: by wgbgn7 with SMTP id gn7so12549037wgb.9
        for <caml-list@inria.fr>; Tue, 10 Jul 2012 03:22:55 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=8/3wG5fiUhEmVGuuDDD+blveTG4K/GLh8A1jPgRSKLw=;
        b=Fcbk/hqHETI6ehS43dTZteAWL7YAO6jahfd2UYkPktNYSpRe8YMn6WkOm5CEQv0sk2
         wEf4PNc9c8SGhj5hEIICfflOOoCb9LYS+DtkEte35xO/t27xB0a0PmzF+x2ik4nVx+8i
         Rq7l59RPtMHaZRBK57W/uFSwT37H68IkxOQDH+vz6JMplMcGJt+mph+iL2R4je8l+O25
         7bvJmhj/8KU7Ia5nJQrzwKY6X5is3nYSHpKdGzXUFx2OBuzmo4di7vJXqEA8mdf/zCAn
         GKNgi1YxGv6kdsNltiBnNX5Rj6s5nXKb8DPgIFE3V9wU/RsZiUD4yNTZ6ik+fYdBbl+9
         QG9A==
MIME-Version: 1.0
Received: by 10.180.99.232 with SMTP id et8mr31347497wib.11.1341915775593;
 Tue, 10 Jul 2012 03:22:55 -0700 (PDT)
Received: by 10.194.32.1 with HTTP; Tue, 10 Jul 2012 03:22:55 -0700 (PDT)
In-Reply-To: <1341912621.75991.YahooMailRC@web180013.mail.gq1.yahoo.com>
References: <1341912621.75991.YahooMailRC@web180013.mail.gq1.yahoo.com>
Date: Tue, 10 Jul 2012 11:22:55 +0100
Message-ID: <CAAxsn=F-aJxXnrTyV2Yv2B+sJXu+ukMUe3rkhg3QZ8jPYjs19Q@mail.gmail.com>
From: Jeremy Yallop <yallop@gmail.com>
To: Dan Bensen <danbensen@att.net>
Cc: caml-list@inria.fr
Content-Type: text/plain; charset=UTF-8
Subject: Re: [Caml-list] trying to localize a functor/signature mismatch

On 10 July 2012 10:30, Dan Bensen <danbensen@att.net> wrote:
> The compiler says an entire functor (all the contents of Make)
> is "not included" in a named signature (PST).  How can I
> localize the problem to some specific part(s) of the module?
>
> Here's the code: http://pastebin.com/mWgxMVNm
>
> And the compiler error message: http://pastebin.com/B0mAZhqw

This line:

   module Make (Reader: READER.T): PST = struct

says that Make is a functor that takes a READER.T and returns a PST.
You want to say instead that Make is a functor of type PST, so you
should change it to

   module Make : PST = functor (Reader: READER.T) -> struct

In other words, it's not that some component of the module doesn't
match the ascribed signature; the problem is that you're ascribing a
functor type to the result of your functor rather than to the functor
itself.
