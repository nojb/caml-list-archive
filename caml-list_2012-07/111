Return-Path: <rich@annexia.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by sympa.inria.fr (Postfix) with ESMTPS id C499F7ED34
	for <caml-list@sympa.inria.fr>; Mon, 16 Jul 2012 15:17:00 +0200 (CEST)
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  rich@annexia.org) identity=pra; client-ip=80.68.91.176;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="rich@annexia.org";
  x-sender="rich@annexia.org"; x-conformance=sidf_compatible
Received-SPF: Pass (mail4-smtp-sop.national.inria.fr: domain of
  rich@annexia.org designates 80.68.91.176 as permitted sender)
  identity=mailfrom; client-ip=80.68.91.176;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="rich@annexia.org";
  x-sender="rich@annexia.org"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@furbychan.cocan.org) identity=helo;
  client-ip=80.68.91.176;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="rich@annexia.org";
  x-sender="postmaster@furbychan.cocan.org";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Av0EALoTBFBQRFuw/2dsb2JhbABFuTSBB4IgAQEFOk8LGBwSFCiIRbtnhU6FcoMrgjxgA5U6iSeGYIJg
X-IronPort-AV: E=Sophos;i="4.77,594,1336341600"; 
   d="scan'208";a="150788252"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/AES256-SHA; 16 Jul 2012 15:16:57 +0200
Received: from rich by furbychan.cocan.org with local (Exim 4.72)
	(envelope-from <rich@annexia.org>)
	id 1SqlAW-0003nw-Pf
	for caml-list@inria.fr; Mon, 16 Jul 2012 14:16:56 +0100
Date: Mon, 16 Jul 2012 14:16:56 +0100
From: "Richard W.M. Jones" <rich@annexia.org>
To: caml-list@inria.fr
Message-ID: <20120716131656.GB16367@annexia.org>
References: <20120716122327.GA16367@annexia.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20120716122327.GA16367@annexia.org>
User-Agent: Mutt/1.5.20 (2009-06-14)
Subject: Re: [Caml-list] Anyone else seeing core dumps in
 caml_thread_reinitialize?

On Mon, Jul 16, 2012 at 01:23:27PM +0100, Richard W.M. Jones wrote:
>   static void caml_thread_reinitialize(void)

Supplemental questions ..

What exactly is this function for?  I've seen the explanation in
PR#4577 but I'm still not exactly sure I understand why this function
is needed, particularly since when it fails we're just about to
exec(2) an entirely new process.

Also, in the cases where it's failing we've released the GC lock
(ie. we've called caml_enter_blocking_section).  Is this correct?
It appears that the GC could be in any intermediate state when
caml_thread_reinitialize is called.

Rich.

-- 
Richard Jones
Red Hat
