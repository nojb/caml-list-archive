Return-Path: <guillaume.yziquel@citycable.ch>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 4B1DEBC37
	for <caml-list@yquem.inria.fr>; Mon, 11 Jan 2010 18:11:46 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AooCAPfqSktV2gB4mWdsb2JhbACDXpd2AQEBAQEICwoHE7AAjGSBK4IuVgSJJg
X-IronPort-AV: E=Sophos;i="4.49,257,1262559600"; 
   d="scan'208";a="53668038"
Received: from emailfrontal1.citycable.ch ([85.218.0.120])
  by mail4-smtp-sop.national.inria.fr with SMTP; 11 Jan 2010 18:11:45 +0100
Received: from [192.168.0.12] (unknown [85.218.92.99])
	(Authenticated sender: guillaume.yziquel@citycable.ch)
	by emailfrontal1.citycable.ch (Postfix) with ESMTPA id D5FB112C465;
	Mon, 11 Jan 2010 18:11:40 +0100 (CET)
Message-ID: <4B4B5BA9.2030104@citycable.ch>
Date: Mon, 11 Jan 2010 18:11:05 +0100
From: Guillaume Yziquel <guillaume.yziquel@citycable.ch>
Reply-To: guillaume.yziquel@citycable.ch
User-Agent: Mozilla-Thunderbird 2.0.0.22 (X11/20090707)
MIME-Version: 1.0
To: Gerd Stolpmann <gerd@gerd-stolpmann.de>
Cc: Richard Jones <rich@annexia.org>,
	'caml-list List' <caml-list@yquem.inria.fr>
Subject: Re: [Caml-list] problem creating .cma library
References: <56670.41.177.16.252.1262195331.squirrel@41.177.16.252>	 <4B3BE288.4030701@citycable.ch>	 <3EE07409-9559-4B91-BA3E-8787D1378275@inria.fr>	 <4B47C201.7090201@citycable.ch> <4B47C59C.9080505@starynkevitch.net>	 <4B47C9BE.4060309@citycable.ch>	 <001f01ca9101$7ee76850$7cb638f0$@romulus.metastack.com>	 <4B486974.7060007@citycable.ch> <20100109125224.GC26610@annexia.org>	 <4B48D912.8090602@citycable.ch> <1263212311.17350.15.camel@flake.lan.gerd-stolpmann.de>
In-Reply-To: <1263212311.17350.15.camel@flake.lan.gerd-stolpmann.de>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: quoted-printable
X-Spam: no; 0.00; guillaume:01 guillaume:01 gerd:01 stolpmann:01 camlreturn:01 val:01 val:01 camlreturn:01 camlparam:01 'try:98 exception:01 exception:01 caml-list:01 macros:01 macros:01 

Gerd Stolpmann a =C3=A9crit :
>>
>> Would it be legitimate to include CAMLlocal2 inside the error-handling=
=20
>> braces?
>=20
> No. You would start a new context for local roots, and there is no way
> to end it (CAMLreturn ends the context).
>=20
> There are the macros Begin_roots<n> and End_roots that should be used i=
n
> this case, e.g.
>=20
> if (error) {
>   value ml_error_call =3D Val_unit;
>   value ml_error_message =3D Val_unit;
>=20
>   Begin_roots2(ml_error_call, ml_error_message);
>   ...
>   End_roots();
>=20
>   raise_with_arg(...)
> }

End_roots before caml_raise_with_arg? Why not after?

I mean, you do not do a CAMLreturn before a caml_raise_with_args, so why=20
should't this be the same for End_roots()?

> The macros are only documented in memory.h.
>=20
> So far I know, raising an exception from within Begin_roots/End_roots i=
s
> not allowed.

It seems to me that the major issue is how caml_local_roots gets=20
restored. With the CAMLparam/CAMLreturn macros, this is done by storing=20
its original value in caml__frame and restoring it via CAMLreturn.

As it is written in memory.h

> Your function may raise an exception or return a [value] with the
> [CAMLreturn] macro.

I assume that caml_local_roots gets restored by a mechanism in the 'try'=20
of the 'try / with' construct after the siglongjmp of caml_raise.

Therefore it should be OK to use caml_raise_with_args before End_roots().

Am I right, or is this plainly wild guessing?

--=20
      Guillaume Yziquel
http://yziquel.homelinux.org/

