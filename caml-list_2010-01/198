Return-Path: <avoinov@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id BFB19BC37
	for <caml-list@yquem.inria.fr>; Mon, 25 Jan 2010 22:46:11 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnECAHKgXUvRVaAsimdsb2JhbACRJz2CEodUPwEBAQoJDAcRBa9OgUCES4hEAQEDBYQ0BA
X-IronPort-AV: E=Sophos;i="4.49,342,1262559600"; 
   d="scan'208";a="42455573"
Received: from mail-pw0-f44.google.com ([209.85.160.44])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 25 Jan 2010 22:45:56 +0100
Received: by pwi15 with SMTP id 15so2777377pwi.3
        for <caml-list@yquem.inria.fr>; Mon, 25 Jan 2010 13:45:54 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:from:to:cc:references
         :in-reply-to:subject:date:message-id:mime-version:content-type
         :content-transfer-encoding:x-mailer:thread-index:content-language;
        bh=1FCx2J06cd1JMtDrbYxaI4FWJnqnYOz5HuewTGYF2GE=;
        b=RClsij5Mf4ct7ajsRxaB6l8rgHryBzk0GYX5dz1++oVMKJNY1tSUi74Xlg3pr5WS+b
         YNYkR3HOoFgRu93iw60w0g6XPFyl15eozslfDCHYzAblc4Rc9J/3w5WgQVNNfysQXBZ+
         T5jpYlvGWZtmszL9W4u6ahSel5fpJdkfnPyTY=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=from:to:cc:references:in-reply-to:subject:date:message-id
         :mime-version:content-type:content-transfer-encoding:x-mailer
         :thread-index:content-language;
        b=qVgeSsIK7pOFtreROJ1BwZrTQ88CIgqeCbPQElE/s2s/GsRaIxnYzyRQWWeR2xYiKK
         PT8ZcrF11E9Gxcz26yWc/UEdUSx+6x8tJw68FDbm5Qb7dkAeftTaZufsWoS9Wk6Np49l
         KRZYxgvYN8KGVqcMJifCpyoJ2K96/XtSBvoiA=
Received: by 10.141.91.4 with SMTP id t4mr5060073rvl.296.1264455953179;
        Mon, 25 Jan 2010 13:45:53 -0800 (PST)
Received: from psr1913plus16 ([32.177.10.214])
        by mx.google.com with ESMTPS id 23sm5234961pzk.12.2010.01.25.13.45.51
        (version=TLSv1/SSLv3 cipher=RC4-MD5);
        Mon, 25 Jan 2010 13:45:52 -0800 (PST)
From: "Alexander Voinov" <avoinov@gmail.com>
To: "'Damien Doligez'" <damien.doligez@inria.fr>,
	"'blue storm'" <bluestorm.dylc@gmail.com>
Cc: <caml-list@yquem.inria.fr>
References: <4b523e9c.0d67f10a.06ab.ffffced7@mx.google.com> <003801ca9702$a72e2b30$f58a8190$@com> <527cf6bc1001170024r1e74b0dal38c92924037f2788@mail.gmail.com> <EE2570EB-ECDF-4E22-8554-B84827173C2A@inria.fr>
In-Reply-To: <EE2570EB-ECDF-4E22-8554-B84827173C2A@inria.fr>
Subject: RE: [Caml-list] A syntax extension to simplify List manipulation
Date: Mon, 25 Jan 2010 13:45:41 -0800
Message-ID: <005b01ca9e07$c254d6a0$46fe83e0$@com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Mailer: Microsoft Office Outlook 12.0
Thread-Index: Acqd5crc8wGoLi+KR7qH/UzAZowBoQAITzVQ
Content-Language: en-us
X-Spam: no; 0.00; voinov:01 syntax:01 uncomment:01 makefile:01 tarball:01 voinov:01 camlp:01 camlp:01 damien:01 damien:01 syntax:01 stdlib:01 stdlib:01 struct:01 storm:98 

Hi All,

I've updated this extension to remove the dependency on ExtLib (as suggested
previously). The price is that iteratei is not available with the core List
module.

If you do need iteratei, first uncomment the 

# WITH_ITERATEI = 1

line in the Makefile (and do a fresh build), and, second, always

open ExtLib;;

The tarball is: http://www.voinov.org/FP/spbSyntax-1.0.1.tgz

(and also http://www.voinov.org/FP/spbSyntax.tgz)

Regarding camlp4, I don't remember why this extension didn't work with it
after that big refactoring, which gave birth to camlp5. I'm making a TODO
for myself to take a look at this.

Thank you!

Alexander

-----Original Message-----
From: Damien Doligez [mailto:damien.doligez@inria.fr] 
Sent: Monday, January 25, 2010 9:43 AM
To: blue storm
Cc: Alexander Voinov; caml-list@yquem.inria.fr
Subject: Re: [Caml-list] A syntax extension to simplify List manipulation


On 2010-01-17, at 09:24, blue storm wrote:

> 2) The use of the Extlib module is hardcoded in the syntax extension.
> I would find it nicer if you only referred to "List.map" instead of
> "Extlib.List.map", and let the user "open Extlib" if he wants to
> override the stdlib. That would allow one to use other implementations
> of List.


You can do this if you want to use the stdlib instead of extlib:

     module Extlib = struct module List = List end;;

Rather ugly, but it should work...

-- Damien

