Return-Path: <guillaume.yziquel@citycable.ch>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 5D1E3BC37
	for <caml-list@yquem.inria.fr>; Mon, 11 Jan 2010 18:15:28 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AooCANvrSktV2gB4mWdsb2JhbACDXpd2AQEBAQEICwoHE69tjGeBK4IuVgSJJg
X-IronPort-AV: E=Sophos;i="4.49,257,1262559600"; 
   d="scan'208";a="41440493"
Received: from emailfrontal1.citycable.ch ([85.218.0.120])
  by mail3-smtp-sop.national.inria.fr with SMTP; 11 Jan 2010 18:15:17 +0100
Received: from [192.168.0.12] (unknown [85.218.92.99])
	(Authenticated sender: guillaume.yziquel@citycable.ch)
	by emailfrontal1.citycable.ch (Postfix) with ESMTPA id E306112C2D6;
	Mon, 11 Jan 2010 18:15:15 +0100 (CET)
Message-ID: <4B4B5C91.2040206@citycable.ch>
Date: Mon, 11 Jan 2010 18:14:57 +0100
From: Guillaume Yziquel <guillaume.yziquel@citycable.ch>
Reply-To: guillaume.yziquel@citycable.ch
User-Agent: Mozilla-Thunderbird 2.0.0.22 (X11/20090707)
MIME-Version: 1.0
To: =?UTF-8?B?RGFuaWVsIELDvG56bGk=?= <daniel.buenzli@erratique.ch>
Cc: caml-list List <caml-list@yquem.inria.fr>
Subject: Re: [Caml-list] problem creating .cma library
References: <56670.41.177.16.252.1262195331.squirrel@41.177.16.252>	 <3EE07409-9559-4B91-BA3E-8787D1378275@inria.fr>	 <4B47C201.7090201@citycable.ch> <4B47C59C.9080505@starynkevitch.net>	 <4B47C9BE.4060309@citycable.ch>	 <001f01ca9101$7ee76850$7cb638f0$@romulus.metastack.com>	 <4B486974.7060007@citycable.ch> <20100109125224.GC26610@annexia.org>	 <91a3da521001090600y2a456e3dg98200cd84d8bf082@mail.gmail.com>	 <4B48DAA7.3070400@citycable.ch> <91a3da521001091811n6a972e84l3dfcae92f4dfae93@mail.gmail.com>
In-Reply-To: <91a3da521001091811n6a972e84l3dfcae92f4dfae93@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: quoted-printable
X-Spam: no; 0.00; guillaume:01 guillaume:01 multithreads:01 ocaml:01 sexp:01 val:01 sexp:01 ocaml's:01 runtime:01 ocaml:01 camlparam:01 stub:01 caml-list:01 functions:01 cma:01 

Daniel B=C3=BCnzli a =C3=A9crit :
>> So if I want to call R code that multithreads with OCaml, I should wri=
te
>> something like
>>
>>>  enter_blocking_section();
>>>  PROTECT(e =3D R_tryEval(Sexp_val(sexp_list), R_GlobalEnv, &error));
>>>  UNPROTECT(1);
>>>  leave_blocking_section();
>> Am I correct?
>=20
> Yes, but the functions have now a caml_ prefix.
>=20
> Make sure that there is no interaction whatsoever with ocaml's runtime
> system (e.g. ocaml value allocation) between the two calls.

I will have interaction, because I plan to be able to make R call OCaml=20
code (not in the foreseeable future). But it's just a question of=20
wrapping the call back to Ocaml with a

	caml_leave_blocking_section()
	callingOCamlcode()
	caml_enter_blocking_section()

construct. As far as I've understood.

> Note also that in case you need to use some caml value after the leave
> call you have to declare it with a CAMLparam macro as it may move
> during the blocking section even if the stub itself doesn't allocate.

Very helpful. Thanks a lot.

--=20
      Guillaume Yziquel
http://yziquel.homelinux.org/

