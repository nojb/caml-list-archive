Return-Path: <guillaume.yziquel@citycable.ch>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 2C111BBAF
	for <caml-list@yquem.inria.fr>; Sat,  9 Jan 2010 00:39:06 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Av4CAFpRR0tV2gB5h2dsb2JhbACDXpd9AQEBCgsIBxWsf40OgSuCLlYEiSY
X-IronPort-AV: E=Sophos;i="4.49,244,1262559600"; 
   d="scan'208";a="44494168"
Received: from emailfrontal2.citycable.ch ([85.218.0.121])
  by mail1-smtp-roc.national.inria.fr with SMTP; 09 Jan 2010 00:39:05 +0100
Received: from [192.168.0.12] (unknown [85.218.92.99])
	(Authenticated sender: guillaume.yziquel@citycable.ch)
	by emailfrontal2.citycable.ch (Postfix) with ESMTPA id 7966C83426B;
	Sat,  9 Jan 2010 00:38:53 +0100 (CET)
Message-ID: <4B47C201.7090201@citycable.ch>
Date: Sat, 09 Jan 2010 00:38:41 +0100
From: Guillaume Yziquel <guillaume.yziquel@citycable.ch>
Reply-To: guillaume.yziquel@citycable.ch
User-Agent: Mozilla-Thunderbird 2.0.0.22 (X11/20090707)
MIME-Version: 1.0
To: Damien Doligez <damien.doligez@inria.fr>
Cc: caml-list List <caml-list@yquem.inria.fr>
Subject: Re: [Caml-list] problem creating .cma library
References: <56670.41.177.16.252.1262195331.squirrel@41.177.16.252>	<4B3BE288.4030701@citycable.ch> <3EE07409-9559-4B91-BA3E-8787D1378275@inria.fr>
In-Reply-To: <3EE07409-9559-4B91-BA3E-8787D1378275@inria.fr>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: quoted-printable
X-Spam: no; 0.00; guillaume:01 guillaume:01 damien:01 stdio:01 mlvalues:01 mylib:01 mylib:01 camlprim:01 stub:01 camlparam:01 val:01 val:01 camlparam:01 camlreturn:01 ocaml:01 

Damien Doligez a =C3=A9crit :
>=20
> On 2009-12-31, at 00:30, Guillaume Yziquel wrote:
>=20
>>> #include <stdio.h>
>>> #include <caml/mlvalues.h>
>>> #include "../mylib/mylib.h"
>>> CAMLprim value
>>> my_print_stub(value v) {
>>
>>      CAMLparam1(v);  /* is missing here, for garbage
>>                         collection purposes. */
>>
>>>    char* str =3D (char*)String_val( v );
>>
>>      /* You do not need the right-hand side (char*) casting. */
>>
>>>    my_print( str );
>>>    return Val_unit;
>>> }
>=20
> If you use CAMLparam1, you must use CAMLreturn instead of return.

Yes. Indeed. Didn't see it.

However, I had a look at

	https://yquem.inria.fr/caml/svn/ocaml/version/3.09/byterun/sys.c

and more specifically at the function

> CAMLprim value caml_sys_exit(value retcode)
> {
> #ifndef NATIVE_CODE
>   caml_debugger(PROGRAM_EXIT);
> #endif
>   exit(Int_val(retcode));
>   return Val_unit;
> }

or the function

> CAMLprim value caml_sys_close(value fd)
> {
>   close(Int_val(fd));
>   return Val_unit;
> }

Why do these functions not follow the usual CAMLparam/CAMLreturn macro=20
stuff?

--=20
      Guillaume Yziquel
http://yziquel.homelinux.org/

