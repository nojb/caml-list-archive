Return-Path: <ivg@ieee.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id EE4ED800BE
	for <caml-list@sympa.inria.fr>; Fri,  6 Jan 2017 19:00:05 +0100 (CET)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=ivg@ieee.org; spf=Pass smtp.mailfrom=ivg@ieee.org; spf=None smtp.helo=postmaster@mail-lf0-f45.google.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  ivg@ieee.org) identity=pra; client-ip=209.85.215.45;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ivg@ieee.org"; x-sender="ivg@ieee.org";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  ivg@ieee.org designates 209.85.215.45 as permitted sender)
  identity=mailfrom; client-ip=209.85.215.45;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ivg@ieee.org"; x-sender="ivg@ieee.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-lf0-f45.google.com) identity=helo;
  client-ip=209.85.215.45;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ivg@ieee.org";
  x-sender="postmaster@mail-lf0-f45.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AvVUNzhXY9EP6R+RDv4fmCu9AY53V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbBOFt8tkgFKBZ4jH8fUM07OQ6PG8HzZZqs/Z7TgrS99lb1c9k8?=
 =?us-ascii?q?IYnggtUoauKHbQC7rUVRE8B9lIT1R//nu2YgB/Ecf6YEDO8DXptWZBUhrwOhBo?=
 =?us-ascii?q?KevrB4Xck9q41/yo+53Ufg5EmCexbal8IRiyogjdrNcajZZtJqos1hfEomZDdv?=
 =?us-ascii?q?hLy29vOV+dhQv36N2q/J5k/SRQuvYh+NBFXK7nYak2TqFWASo/PWwt68LlqRfM?=
 =?us-ascii?q?TQ2U5nsBSWoWiQZHAxLE7B7hQJj8tDbxu/dn1ymbOc32Sq00WSin4qx2RhLklD?=
 =?us-ascii?q?sLOjgk+2zMlMd+kLxUrw6gpxxnwo7bfoeVNOZlfqjAed8WXHdNUtpNWyBEBI6z?=
 =?us-ascii?q?aJYBD/caPeZAsYbyu0cOoxW5BQmpHuzvyzlIjWLy0aA11+ktFAfL1xEiEd0Tqn?=
 =?us-ascii?q?TZtNf6NKkSX+67z6fG0CvNYO9N1Djn9ITFaAosre2QUb9yd8fa1EkhFxnCjlWV?=
 =?us-ascii?q?sYHrPC2V2f4Ls2OG7uRgUv6vi2k5qw5tojivx9ssipLUjY8Sy1DE6yp5zZ00Jd?=
 =?us-ascii?q?KmVkF0f8SoEJxKtyGVLoZ7RN4pTW9vuCY/0LIGuJi7cTALyJQh3R7fauaIf5KG?=
 =?us-ascii?q?4hL5TOqRLjZ4hG5leLKinBm+61Svyur5VsWs0FdFtCpFkt7LtnwXyxPT7c2HRu?=
 =?us-ascii?q?Nm/ki/3DaPyR7c6vteLUAzj6rbJJgsyaMzmJoLqUnPADP6lUHsgKKVdkgo4Pak?=
 =?us-ascii?q?5/nnb7n8qZKRN4l5gRzkPKs0gMywG+E4PxAOX2eF/eS806Xu/UjjT7VLiv06i6?=
 =?us-ascii?q?3ZsJ7GKcgCqK60DA9Y3pws6xa4CDem39AYkmcdIF1ZfxKHipDlO1DIIP/mEfey?=
 =?us-ascii?q?m0qgnCtvyvzcPbDsAo/BImbenLrhZ7pw5E5RxBI2zd9F5pJUDr8BIOj0Wk/0rN?=
 =?us-ascii?q?HYDwE5MwOvzubmFtpyyJ0RVXiIAq+DP6PeqUWI6f43I+mQeI8Vvy7wJOQ/6P7r?=
 =?us-ascii?q?iX81gFsdfaiy3ZsLc324BfRnI0CBYXX2mNsBEGEKvhA/TOPwklGCXyRTND6OWP?=
 =?us-ascii?q?cV4C08DsqMBIzDR4bl1LWHwD28GJdfbWBHDHiDFH7pc8OPXPJaOwyIJco0syIN?=
 =?us-ascii?q?U/COTJMmyxqutRPhg+5mMOX8+yAVuNTkztcjtL6brg076TEhV5fV6GqKVWwh2z?=
 =?us-ascii?q?5RSg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0AIAQCG2m9Yhi3XVdFVCRoBAQEBAgEBA?=
 =?us-ascii?q?QEIAQEBARUBAQEBAgEBAQEIAQEBAYMOAQEBAQFAPoEMB41QkiGCNYVKhTgQgjV?=
 =?us-ascii?q?QgXKCaIIJLIV2AoFOBz8UAQEBAQEBAQEBAQESAQEBCAsLCh0wQg6BYxqCHAEEA?=
 =?us-ascii?q?SMdAQEsCwEECwsLAxYBHQICIQESAQUBCgcLBhMSAgaIOwMLBQgOpAQ/ixtogiW?=
 =?us-ascii?q?DCAEBBYQsAwqCVgEBAQcBAQEBAQEBGQgShjODW4EGgk4bgTZUgluCXociDIdsf?=
 =?us-ascii?q?IUJhUM4hliFNYE+g3yBd1GEN4lcigOHCBQegRQPEIIBCDUTBINaKQ8RC4F9IDU?=
 =?us-ascii?q?BhVWDEAEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0AIAQCG2m9Yhi3XVdFVCRoBAQEBAgEBAQEIAQEBARUBAQE?=
 =?us-ascii?q?BAgEBAQEIAQEBAYMOAQEBAQFAPoEMB41QkiGCNYVKhTgQgjVQgXKCaIIJLIV2A?=
 =?us-ascii?q?oFOBz8UAQEBAQEBAQEBAQESAQEBCAsLCh0wQg6BYxqCHAEEASMdAQEsCwEECws?=
 =?us-ascii?q?LAxYBHQICIQESAQUBCgcLBhMSAgaIOwMLBQgOpAQ/ixtogiWDCAEBBYQsAwqCV?=
 =?us-ascii?q?gEBAQcBAQEBAQEBGQgShjODW4EGgk4bgTZUgluCXociDIdsfIUJhUM4hliFNYE?=
 =?us-ascii?q?+g3yBd1GEN4lcigOHCBQegRQPEIIBCDUTBINaKQ8RC4F9IDUBhVWDEAEBAQ?=
X-IronPort-AV: E=Sophos;i="5.33,326,1477954800"; 
   d="scan'208,217";a="207405277"
Received: from mail-lf0-f45.google.com ([209.85.215.45])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 06 Jan 2017 19:00:04 +0100
Received: by mail-lf0-f45.google.com with SMTP id v186so4121752lfa.1
        for <caml-list@inria.fr>; Fri, 06 Jan 2017 10:00:04 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=ieee-org.20150623.gappssmtp.com; s=20150623;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=5hS8Thh0UYfNgAnY+IIAXyZ+e6K5YdG0JXnVs48Wjls=;
        b=MyfkXSriZiBctujBdO7LwoIt7ByyeXDSr9uWWKe23hactleRXtUdQmofMQHHdL6u3G
         2TqMSL9iDk52E0f0Zed2UF/cwSj2DX28te/FRry0276ZPt7DjCmVqTPGw4s7b0B/yX5+
         HVGQYuXm2pKkF2yMW0X/kdD0fFcqpTK55jFrHro+MyaxiKM6fwW7WMVmywGtNf9eELAm
         Jquvgs0XviV1KouW7B6fKYGFgAb1faW6Sqey2rDAmz88sTWcSUHwey1RjEC9d2BUbU2y
         VM7myDoSffYf+Gw+g/st7lyxRxKgOskTx4LuIfsNLTOua6zZrCjmGLHFEjlPvpEh5513
         NOmA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc;
        bh=5hS8Thh0UYfNgAnY+IIAXyZ+e6K5YdG0JXnVs48Wjls=;
        b=VSOmAAyNQNfswXspdzy3JKMFws28kfZf3MEhhjhMs2ysHEgb1AmfvFB5tn7GB+GNlR
         Z3CO3Osz1y3UFrQ9lsH8WxAYTOanEP00HKSKMJf6bbYNR31YGbBOQUi7Xjzizuwea8H8
         FZ3NESEXRcsq/CmoVJaW/NfXF5x6JjyeeFK0Q4ujIt9S8lqqMhxUXOeqovBbfM5zAfw7
         H8gBkcfvMcv1w+GtWYf0EEU+NuW2xs1X/a1kPZ2Qsp842KE5A/9jY74mDCWGvuZHLM/x
         Tp3r6Rn5xh+Dryz12xihMUOh2Zv2qouTOXH9xDOJX54j4AbbAXu6NDjxW7TGZcq6vni7
         1oWw==
X-Gm-Message-State: AIkVDXL30HhfmoQl3r+tV8VGfB6CRa864WBHV9AWcYUdKoUzthqYZe2u2eix2N8oFQiSMJ8Zb1rNx+zLEJasZNXP
X-Received: by 10.46.32.158 with SMTP id g30mr18747287lji.31.1483725602964;
 Fri, 06 Jan 2017 10:00:02 -0800 (PST)
MIME-Version: 1.0
Received: by 10.114.93.99 with HTTP; Fri, 6 Jan 2017 10:00:02 -0800 (PST)
In-Reply-To: <22A97EAF-DBFF-4FE8-90C3-0343533CC621@gmail.com>
References: <22A97EAF-DBFF-4FE8-90C3-0343533CC621@gmail.com>
From: Ivan Gotovchits <ivg@ieee.org>
Date: Fri, 6 Jan 2017 13:00:02 -0500
Message-ID: <CALdWJ+wDTuRn1inxZvw1ABXR497z=OWab6MxZ+RMUmGOD52mCg@mail.gmail.com>
To: Anton Bachin <antronbachin@gmail.com>
Cc: "caml-list@inria.fr users" <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a1142aaa882687c054570c96f
Subject: Re: [Caml-list] =?UTF-8?Q?=5BANN=5D_Lwt_2=2E7=2E0_=E2=80=93_monad?=
 =?UTF-8?Q?ic_promises=3B_concurrent_I/O?=

--001a1142aaa882687c054570c96f
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

These are the great news!

And thanks for the maintainers notification, it was really helpful :)

I have one comment, though:



> Values of types 'a Lwt.t are now called promises rather than threads.
>   This should eliminate a lot of confusion for beginners.


And create a confusion for seasoned programmers, especially for those who
are accustomed to
C++ newly introduced concepts, like promises and futures, where a promise
has quite an opposite
meaning.  In short, it has the same meaning as a value of type  `'a Lwt.u`,
i.e., it is an object through
which a promise can be fulfilled. I think that it is better to refer to
Lwt.t threads as futures because they
are the values, whose value is determined in the future. Another way to
name them is `deferred`, again
for the same reason. You can also say, that a value of type `'a Lwt.t` is a
computation. You can also try
to borrow names from the Standard ML community, where `'a Lwt.t` like
objects are named as IVars.

Finally, you may also find this project interesting [1]. This is an
attempt to factor out the core idea from both
Core Async and Lwt. In particular, the Future library allows us to write a
monadic code, that is independent
of a particular implementation (Lwt or Async or Identity monad).

[1]:
https://github.com/BinaryAnalysisPlatform/bap/blob/master/lib/bap_future/ba=
p_future.mli

On Fri, Jan 6, 2017 at 11:08 AM, Anton Bachin <antronbachin@gmail.com>
wrote:

> Greetings,
>
> I am pleased to announce release 2.7.0 of Lwt.
>
>   https://github.com/ocsigen/lwt
>
> The primary goals of this release are (1) to improve communication
> between maintainers and users, and (2) to prepare for (minor) breaking
> changes to some APIs in Lwt 3.0.0 (planned for April). The changelog is
> available here:
>
>   https://github.com/ocsigen/lwt/releases/tag/2.7.0
>
> - Lwt now uses deprecation warnings ([@deprecated]), especially for
>   upcoming breaking changes [1]. This required dropping support for
>   OCaml 4.01.
> - There is a gradual, communicative, conservative process for
>   deprecation and breaking [2]. Maintainers of packages in OPAM get
>   notified proactively (see [1] again). If you have code not published
>   in OPAM, watch the Lwt repo, recompile the code at least once in three
>   months, watch this mailing list, or subscribe to the Lwt announcements
>   issue [3].
> - If a planned breaking change is a bad idea, please let the maintainers
>   know when you see the warning.
> - Lwt now uses semantic versioning [4]. The major version will grow
>   slowly but steadily, but this does not mean that the whole API is
>   being redesigned or broken.
>
> If you are releasing a package to OPAM that depends on Lwt, it is not
> recommended to constrain Lwt to its current major version. A major
> release of Lwt will break only a few APIs, and your package is likely
> not to be affected =E2=80=93 if it is, you will be notified. You may, how=
ever,
> wish to constrain Lwt to a major version in your private or production
> code.
>
> - The main OPAM package lwt is getting rid of some optional
>   dependencies in 3.0.0, which are now installable through separate OPAM
>   packages lwt_ssl, lwt_glib, lwt_react. This is to reduce recompilation
>   of Lwt when installing OPAM packages ssl, lablgtk, and react.
> - Values of types 'a Lwt.t are now called promises rather than threads.
>   This should eliminate a lot of confusion for beginners.
>
> Lwt 2.7.0 also has a number of more ordinary changes, such as bug fixes
> and the addition of bindings to writev and readv. See the full
> changelog [5].
>
> I am working on an all-new manual, including fully rewritten API
> documentation with examples. It should be ready towards the end of
> winter.
>
> My hope is that all the above allows Lwt to be taken progressively into
> the future, at the same time making development more open and more
> humane :)
>
> Best,
> Anton
>
>
> [1]: https://github.com/ocsigen/lwt/issues/308
> [2]: https://github.com/ocsigen/lwt/issues/293
> [3]: https://github.com/ocsigen/lwt/issues/309
> [4]: http://semver.org/
> [5]: https://github.com/ocsigen/lwt/releases/tag/2.7.0
>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs

--001a1142aaa882687c054570c96f
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>These are the great news!=C2=A0</div><div><br></div><=
div>And thanks for the maintainers=C2=A0notification, it was really helpful=
 :)</div><div><br></div><div>I have one comment, though:</div><div><br></di=
v><div>=C2=A0</div><blockquote class=3D"gmail_quote" style=3D"margin:0px 0p=
x 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex">Values=
 of types &#39;a Lwt.t are now called promises rather than threads.<br>=C2=
=A0 This should eliminate a lot of confusion for beginners.</blockquote><di=
v><br></div><div>And create a confusion for seasoned programmers, especiall=
y for those who are accustomed to=C2=A0</div><div>C++ newly introduced conc=
epts, like promises and futures, where a promise has quite an=C2=A0opposite=
</div><div>meaning.=C2=A0 In short, it has the same meaning as a value of t=
ype =C2=A0`&#39;a Lwt.u`, i.e., it is an object through<br></div><div>which=
 a promise can be fulfilled. I think that it is better to refer to Lwt.t th=
reads as futures=C2=A0because they</div><div>are the values, whose value is=
 determined in the future. Another way to name them is `deferred`, again</d=
iv><div>for the same reason. You can also say, that a value of type `&#39;a=
 Lwt.t` is a computation. You can also try</div><div>to borrow names from t=
he Standard ML community, where `&#39;a Lwt.t` like objects are named as IV=
ars.</div><div><br></div><div>Finally, you may also find this project inter=
esting [1]. This is an attempt=C2=A0to factor out the core idea from both</=
div><div>Core Async and Lwt. In particular, the Future library allows us to=
 write a monadic code, that is independent</div><div>of a particular implem=
entation (Lwt=C2=A0or Async or Identity monad). =C2=A0</div><div><br></div>=
<div>[1]:=C2=A0<a href=3D"https://github.com/BinaryAnalysisPlatform/bap/blo=
b/master/lib/bap_future/bap_future.mli">https://github.com/BinaryAnalysisPl=
atform/bap/blob/master/lib/bap_future/bap_future.mli</a></div></div><div cl=
ass=3D"gmail_extra"><br><div class=3D"gmail_quote">On Fri, Jan 6, 2017 at 1=
1:08 AM, Anton Bachin <span dir=3D"ltr">&lt;<a href=3D"mailto:antronbachin@=
gmail.com" target=3D"_blank">antronbachin@gmail.com</a>&gt;</span> wrote:<b=
r><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:=
1px #ccc solid;padding-left:1ex">Greetings,<br>
<br>
I am pleased to announce release 2.7.0 of Lwt.<br>
<br>
=C2=A0 <a href=3D"https://github.com/ocsigen/lwt" rel=3D"noreferrer" target=
=3D"_blank">https://github.com/ocsigen/lwt</a><br>
<br>
The primary goals of this release are (1) to improve communication<br>
between maintainers and users, and (2) to prepare for (minor) breaking<br>
changes to some APIs in Lwt 3.0.0 (planned for April). The changelog is<br>
available here:<br>
<br>
=C2=A0 <a href=3D"https://github.com/ocsigen/lwt/releases/tag/2.7.0" rel=3D=
"noreferrer" target=3D"_blank">https://github.com/ocsigen/<wbr>lwt/releases=
/tag/2.7.0</a><br>
<br>
- Lwt now uses deprecation warnings ([@deprecated]), especially for<br>
=C2=A0 upcoming breaking changes [1]. This required dropping support for<br>
=C2=A0 OCaml 4.01.<br>
- There is a gradual, communicative, conservative process for<br>
=C2=A0 deprecation and breaking [2]. Maintainers of packages in OPAM get<br>
=C2=A0 notified proactively (see [1] again). If you have code not published=
<br>
=C2=A0 in OPAM, watch the Lwt repo, recompile the code at least once in thr=
ee<br>
=C2=A0 months, watch this mailing list, or subscribe to the Lwt announcemen=
ts<br>
=C2=A0 issue [3].<br>
- If a planned breaking change is a bad idea, please let the maintainers<br>
=C2=A0 know when you see the warning.<br>
- Lwt now uses semantic versioning [4]. The major version will grow<br>
=C2=A0 slowly but steadily, but this does not mean that the whole API is<br>
=C2=A0 being redesigned or broken.<br>
<br>
If you are releasing a package to OPAM that depends on Lwt, it is not<br>
recommended to constrain Lwt to its current major version. A major<br>
release of Lwt will break only a few APIs, and your package is likely<br>
not to be affected =E2=80=93 if it is, you will be notified. You may, howev=
er,<br>
wish to constrain Lwt to a major version in your private or production<br>
code.<br>
<br>
- The main OPAM package lwt is getting rid of some optional<br>
=C2=A0 dependencies in 3.0.0, which are now installable through separate OP=
AM<br>
=C2=A0 packages lwt_ssl, lwt_glib, lwt_react. This is to reduce recompilati=
on<br>
=C2=A0 of Lwt when installing OPAM packages ssl, lablgtk, and react.<br>
- Values of types &#39;a Lwt.t are now called promises rather than threads.=
<br>
=C2=A0 This should eliminate a lot of confusion for beginners.<br>
<br>
Lwt 2.7.0 also has a number of more ordinary changes, such as bug fixes<br>
and the addition of bindings to writev and readv. See the full<br>
changelog [5].<br>
<br>
I am working on an all-new manual, including fully rewritten API<br>
documentation with examples. It should be ready towards the end of<br>
winter.<br>
<br>
My hope is that all the above allows Lwt to be taken progressively into<br>
the future, at the same time making development more open and more<br>
humane :)<br>
<br>
Best,<br>
Anton<br>
<br>
<br>
[1]: <a href=3D"https://github.com/ocsigen/lwt/issues/308" rel=3D"noreferre=
r" target=3D"_blank">https://github.com/ocsigen/<wbr>lwt/issues/308</a><br>
[2]: <a href=3D"https://github.com/ocsigen/lwt/issues/293" rel=3D"noreferre=
r" target=3D"_blank">https://github.com/ocsigen/<wbr>lwt/issues/293</a><br>
[3]: <a href=3D"https://github.com/ocsigen/lwt/issues/309" rel=3D"noreferre=
r" target=3D"_blank">https://github.com/ocsigen/<wbr>lwt/issues/309</a><br>
[4]: <a href=3D"http://semver.org/" rel=3D"noreferrer" target=3D"_blank">ht=
tp://semver.org/</a><br>
[5]: <a href=3D"https://github.com/ocsigen/lwt/releases/tag/2.7.0" rel=3D"n=
oreferrer" target=3D"_blank">https://github.com/ocsigen/<wbr>lwt/releases/t=
ag/2.7.0</a><br>
<span class=3D"HOEnZb"><font color=3D"#888888"><br>
<br>
--<br>
Caml-list mailing list.=C2=A0 Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" rel=3D"noreferrer" t=
arget=3D"_blank">https://sympa.inria.fr/sympa/<wbr>arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" rel=3D"noreferrer" target=3D"_blank">http://groups.yahoo.com/group/<wbr=
>ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" rel=3D"noreferr=
er" target=3D"_blank">http://caml.inria.fr/bin/caml-<wbr>bugs</a></font></s=
pan></blockquote></div><br></div>

--001a1142aaa882687c054570c96f--
