Return-Path: <examachine@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 8312E7FA5F
	for <caml-list@sympa.inria.fr>; Mon, 16 Jan 2017 14:19:32 +0100 (CET)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=examachine@gmail.com; spf=Pass smtp.mailfrom=examachine@gmail.com; spf=None smtp.helo=postmaster@mail-vk0-f44.google.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  examachine@gmail.com) identity=pra; client-ip=209.85.213.44;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="examachine@gmail.com";
  x-sender="examachine@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  examachine@gmail.com designates 209.85.213.44 as permitted
  sender) identity=mailfrom; client-ip=209.85.213.44;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="examachine@gmail.com";
  x-sender="examachine@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-vk0-f44.google.com) identity=helo;
  client-ip=209.85.213.44;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="examachine@gmail.com";
  x-sender="postmaster@mail-vk0-f44.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3APKRrgRUaPd8pIY8wExv908a9ygPV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbBOFt8tkgFKBZ4jH8fUM07OQ6PG8Hzddqs/e6zgrS99lb1c9k8?=
 =?us-ascii?q?IYnggtUoauKHbQC7rUVRE8B9lIT1R//nu2YgB/Ecf6YEDO8DXptWZBUhrwOhBo?=
 =?us-ascii?q?KevrB4Xck9q41/yo+53Ufg5EmCexbal8IRiyogjdrMcbjIttJqosyBbErGZDdv?=
 =?us-ascii?q?hLy29vOV+dhQv36N2q/J5k/SRQuvYh+NBFXK7nYak2TqFWASo/PWwt68LlqRfM?=
 =?us-ascii?q?TQ2U5nsBSWoWiQZHAxLE7B7hQJj8tDbxu/dn1ymbOc32Sq00WSin4qx2RhLklD?=
 =?us-ascii?q?sLOjgk+2zMlMd+kLxUrw6gpxxnwo7bfoeVNOZlfqjAed8WXHdNUtpNWyBEBI6z?=
 =?us-ascii?q?aJYBD/caPeZAsYbyu0cOoxW5BQmpHuzvyzlIjWLy0aA11+ktFAfL1xEiEd0Tqn?=
 =?us-ascii?q?TZtNf6NKkSX+67z6fG0CvNYO9N1Djn9ITFaAosre2QUb9yd8fa1EkhFxnCjlWV?=
 =?us-ascii?q?sYHrMCmV2f4NsmOG9uRhVOGvi3M9qw5rpjik28AhhZfGh40Pz1DL7zl2wIY0Jd?=
 =?us-ascii?q?2+VkF2etGkEJ5KuCGbM4t6WN8tQ2ZtuCsjzLANpJC1fC8PyJs9xh7fbeSKc4mO?=
 =?us-ascii?q?4hL5VeaeOy10hHx/eL6nhxe960igyur7VsWuzFlKqS9FnsHLtnAO0hzT68qHRu?=
 =?us-ascii?q?F6/ke71jaC0R3Y5OJcIU0si6bXN5oszqQzm5cTq0jPADL6lUvsgKKZeUgp/PWj?=
 =?us-ascii?q?5f79bbX8vJCcMpd5igHgPaQqncyyGeE4PRIPX2if4Oi8yr7j8VHgTLVEgfA7nb?=
 =?us-ascii?q?PVsJ/dJcQcqa65BxFa3pw/5Ba4CjeqyNUYnX8ZI1JZYB+LkZTlNlXULP37Dfqz?=
 =?us-ascii?q?mUqgnCplyvzcMbDsDY3BLn3Zn7fgebZ95VRcyA02zd1H+Z1VBasOIPfpVUDttN?=
 =?us-ascii?q?zYDxk5PBKvzuboDdVyzIIeWWaVDqCFN6PStEeE5vgzLOmUeI8VpDH9JuA56PH0?=
 =?us-ascii?q?iH85nUYRfa2o3ZsMdHC1Be9mIkWcYXr0mNgNC2YKvgwkTOzrklKOSzBTZ2zhF5?=
 =?us-ascii?q?47sxoyDYbuKYbYWsj5i7WE2GK/H4ZKTmFAEFGFV3nyIdaqQfAJPQ+IK94ptS4H?=
 =?us-ascii?q?SKKoT8d12AGnsQbxy7thI8Lb/yQZsdTo090jtL6brg076TEhV5fV6GqKVWwh2z?=
 =?us-ascii?q?5RSg=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DICQDkx3xYhizVVdFdHAEBBAEBCgEBF?=
 =?us-ascii?q?wEBBAEBCgEBgw4BAQEBAUABMwqBCQeDSoEEmWsIAQEGgRkEgjaGPocNhzYqhXg?=
 =?us-ascii?q?CghoHQhUBAQEBAQEBAQEBARIBAQEICwsKHTCCMxuCHAEEASMdARsSBgYDDAYDA?=
 =?us-ascii?q?gsaHQICIgERAQUBChIGExKIVQEDCwUIDpB7kQw/jAOCAwUBHIMJBYNRChknAwp?=
 =?us-ascii?q?VgXcBAQgCAR0CBhKFb4UrgmuCCoJZgl4FhyQMiG2LHYZdiwKBd1GEPYlokSYUH?=
 =?us-ascii?q?oEUDyaBNxIdTxSDaykggW07NYhuAQEB?=
X-IPAS-Result: =?us-ascii?q?A0DICQDkx3xYhizVVdFdHAEBBAEBCgEBFwEBBAEBCgEBgw4?=
 =?us-ascii?q?BAQEBAUABMwqBCQeDSoEEmWsIAQEGgRkEgjaGPocNhzYqhXgCghoHQhUBAQEBA?=
 =?us-ascii?q?QEBAQEBARIBAQEICwsKHTCCMxuCHAEEASMdARsSBgYDDAYDAgsaHQICIgERAQU?=
 =?us-ascii?q?BChIGExKIVQEDCwUIDpB7kQw/jAOCAwUBHIMJBYNRChknAwpVgXcBAQgCAR0CB?=
 =?us-ascii?q?hKFb4UrgmuCCoJZgl4FhyQMiG2LHYZdiwKBd1GEPYlokSYUHoEUDyaBNxIdTxS?=
 =?us-ascii?q?DaykggW07NYhuAQEB?=
X-IronPort-AV: E=Sophos;i="5.33,239,1477954800"; 
   d="scan'208,217";a="209309409"
Received: from mail-vk0-f44.google.com ([209.85.213.44])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 16 Jan 2017 14:18:32 +0100
Received: by mail-vk0-f44.google.com with SMTP id k127so27209497vke.0
        for <caml-list@inria.fr>; Mon, 16 Jan 2017 05:18:32 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to;
        bh=AOTjLk05T1vU94SVGirc2HXLleYHcJyz3dqcDWrfL58=;
        b=bdtIO5CKVt/DHItVduy2am3VsxbIMT4F0OidWVwhnI+sTjfpF/CJf5v3LhP0tnm1Zx
         d/HZqon/t32YyXWzUZDQEArJ8nJpjeQ/LaMkj1ncWqR6sD0XVsYzTH9VLc1r8/7S3q1+
         GiWyO1nOOIm+zeAuzsan0FRO8loujGmCDcEtfRIfPUHlfL7nSgeLrs+KVp29jhafGZto
         Uah26I0kY0Pc8VVkP1TxuTG7t1EvwQIAI/obiACCxqkXStvmHnIoc6KFkVtk+xZrKGwd
         R6IuQXOIgJSbYz0uSF/5R0Pg9CumdGTGJu9qGni14h1/ZTNMXCpQJOET+LzQat5unGIy
         Yrow==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to;
        bh=AOTjLk05T1vU94SVGirc2HXLleYHcJyz3dqcDWrfL58=;
        b=BsTGW73U6zffJSwLScZdu1cNdqrXsCxUOAsrvgEjwS+G9/O0dySS6FI6wHhoT945CN
         /mnEwnzX1iaD8W9G7vN8p+DDGmmUR6299cjHFtMsbxDg+2STlE26aKWabxn4GRqb8vzq
         8A1PlJVm+Azo3YmpesHA9zqKDhderkgmPGaNwImDWLkTyanh9OLnonDPT6KhGasdktDb
         2IK5q+X3VDK0L1Db2UsaJqIRVBrNifJEOMer8DaYp5ktMFUs6Ql3rzWudRg2+o35bkM2
         11RCWcY9ljCt51oA+6260I6FRPjYKGE8Oas/fe7dEvg/SEkmhX5XaoDXSkiCeoAJrysX
         SRKw==
X-Gm-Message-State: AIkVDXITNRubcLw34cHDcYWckbB2noIbZk6rKTQsTDK/Ey7X4ET6IK7jDdQp8J+F4uU7uJY/Po94ZKdaxqHF1w==
X-Received: by 10.31.32.77 with SMTP id g74mr13889871vkg.122.1484572711008;
 Mon, 16 Jan 2017 05:18:31 -0800 (PST)
MIME-Version: 1.0
Received: by 10.176.91.214 with HTTP; Mon, 16 Jan 2017 05:18:30 -0800 (PST)
In-Reply-To: <20170101152022.GA1291@Magus.localnet>
References: <20170101152022.GA1291@Magus.localnet>
From: Eray Ozkural <examachine@gmail.com>
Date: Mon, 16 Jan 2017 16:18:30 +0300
Message-ID: <CA+rXZpb0QBfCefCyUW6D2b+njT-+jtuAqcCamHLpL-iDF57xGA@mail.gmail.com>
To: Caml List <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a11469b24154068054636050c
Subject: Re: [Caml-list] ANN: BER MetaOCaml N104, for OCaml 4.04.0

--001a11469b24154068054636050c
Content-Type: text/plain; charset=UTF-8

Hi Oleg,

I have a question. Have you ever designed at length how to implement a
super fast *interpreted* version of metaocaml, or let me put it this way:
do you think if that is possible at all?

Best,

Eray

On Sun, Jan 1, 2017 at 6:20 PM, Oleg <oleg@okmij.org> wrote:

>
> BER MetaOCaml N104 is a strict superset of OCaml 4.04.0 for ``writing
> programs that generate programs''.  BER MetaOCaml adds to OCaml the
> type of code values (denoting ``program code'', or future-stage
> computations), and two basic constructs to build them:
> quoting and splicing. The generated code can be printed, stored in a
> file -- or compiled and linked-back to the running program, thus
> implementing run-time code optimization. A well-typed BER MetaOCaml
> program generates only well-scoped and well-typed programs:
> The generated code shall compile without type errors.
> Staging-annotation-free BER MetaOCaml is identical to
> OCaml; BER MetaOCaml can link to any OCaml-compiled library (and
> vice versa); findlib and other tools can be used with BER MetaOCaml as
> they are, in their binary form.
>
> BER MetaOCaml N104 comes with one minor and two notable improvements.
> The minor improvement is the availability of the native MetaOCaml.  If
> the generator is compiled in native mode (using metaocamlopt), the
> dynamically generated and run code will be natively-compiled as
> well. The lack of native mode was the most frequently heard criticism
> of MetaOCaml, although in my experience it hardly even
> matters. Off-line code specialization seems to be far more prevalent
> and useful than online one. Anyway, here we have it.
>
> The notable new features -- not seen in MetaOCaml (or MetaML, for that
> matter) -- are generating pattern-matching expression with the
> statically unknown number of clauses, and let-insertion as a
> primitive. To wit, |genlet exp| inserts  |let freshname = exp in ...|
> somewhere in the generated code and returns |.<freshname>.| (unless |exp|
> is already syntactically a value such as a variable reference).
> The let-statement is inserted at the most appropriate place.
>
> BER MetaOCaml N104 should be available though OPAM, hopefully soon.
> In the meanwhile, it is available as a set of patches to the
> OCaml 4.04.0 distribution.
>         http://okmij.org/ftp/ML/ber-metaocaml-104.tar.gz
> See the INSTALL document in that archive. You need the source
> distribution of OCaml 4.04.0, see the following URL for details.
>
> For more explanations, please see
>         http://okmij.org/ftp/ML/MetaOCaml.html
> as well as ChangeLog and NOTES.txt in the BER MetaOCaml distribution.
>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>



-- 
Eray Ozkural, PhD. Computer Scientist
Founder, Gok Us Sibernetik Ar&Ge Ltd.
http://groups.yahoo.com/group/ai-philosophy

--001a11469b24154068054636050c
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hi Oleg,<div><br></div><div>I have a question. Have you ev=
er designed at length how to implement a super fast *interpreted* version o=
f metaocaml, or let me put it this way: do you think if that is possible at=
 all?</div><div><br></div><div>Best,</div><div><br></div><div>Eray</div></d=
iv><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On Sun, Jan 1,=
 2017 at 6:20 PM, Oleg <span dir=3D"ltr">&lt;<a href=3D"mailto:oleg@okmij.o=
rg" target=3D"_blank">oleg@okmij.org</a>&gt;</span> wrote:<br><blockquote c=
lass=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;=
padding-left:1ex"><br>
BER MetaOCaml N104 is a strict superset of OCaml 4.04.0 for ``writing<br>
programs that generate programs&#39;&#39;.=C2=A0 BER MetaOCaml adds to OCam=
l the<br>
type of code values (denoting ``program code&#39;&#39;, or future-stage<br>
computations), and two basic constructs to build them:<br>
quoting and splicing. The generated code can be printed, stored in a<br>
file -- or compiled and linked-back to the running program, thus<br>
implementing run-time code optimization. A well-typed BER MetaOCaml<br>
program generates only well-scoped and well-typed programs:<br>
The generated code shall compile without type errors.<br>
Staging-annotation-free BER MetaOCaml is identical to<br>
OCaml; BER MetaOCaml can link to any OCaml-compiled library (and<br>
vice versa); findlib and other tools can be used with BER MetaOCaml as<br>
they are, in their binary form.<br>
<br>
BER MetaOCaml N104 comes with one minor and two notable improvements.<br>
The minor improvement is the availability of the native MetaOCaml.=C2=A0 If=
<br>
the generator is compiled in native mode (using metaocamlopt), the<br>
dynamically generated and run code will be natively-compiled as<br>
well. The lack of native mode was the most frequently heard criticism<br>
of MetaOCaml, although in my experience it hardly even<br>
matters. Off-line code specialization seems to be far more prevalent<br>
and useful than online one. Anyway, here we have it.<br>
<br>
The notable new features -- not seen in MetaOCaml (or MetaML, for that<br>
matter) -- are generating pattern-matching expression with the<br>
statically unknown number of clauses, and let-insertion as a<br>
primitive. To wit, |genlet exp| inserts=C2=A0 |let freshname =3D exp in ...=
|<br>
somewhere in the generated code and returns |.&lt;freshname&gt;.| (unless |=
exp|<br>
is already syntactically a value such as a variable reference).<br>
The let-statement is inserted at the most appropriate place.<br>
<br>
BER MetaOCaml N104 should be available though OPAM, hopefully soon.<br>
In the meanwhile, it is available as a set of patches to the<br>
OCaml 4.04.0 distribution.<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 <a href=3D"http://okmij.org/ftp/ML/ber-metaocam=
l-104.tar.gz" rel=3D"noreferrer" target=3D"_blank">http://okmij.org/ftp/ML/=
ber-<wbr>metaocaml-104.tar.gz</a><br>
See the INSTALL document in that archive. You need the source<br>
distribution of OCaml 4.04.0, see the following URL for details.<br>
<br>
For more explanations, please see<br>
=C2=A0 =C2=A0 =C2=A0 =C2=A0 <a href=3D"http://okmij.org/ftp/ML/MetaOCaml.ht=
ml" rel=3D"noreferrer" target=3D"_blank">http://okmij.org/ftp/ML/<wbr>MetaO=
Caml.html</a><br>
as well as ChangeLog and NOTES.txt in the BER MetaOCaml distribution.<br>
<span class=3D"HOEnZb"><font color=3D"#888888"><br>
<br>
--<br>
Caml-list mailing list.=C2=A0 Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" rel=3D"noreferrer" t=
arget=3D"_blank">https://sympa.inria.fr/sympa/<wbr>arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" rel=3D"noreferrer" target=3D"_blank">http://groups.yahoo.com/group/<wbr=
>ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" rel=3D"noreferr=
er" target=3D"_blank">http://caml.inria.fr/bin/caml-<wbr>bugs</a><br>
</font></span></blockquote></div><br><br clear=3D"all"><div><br></div>-- <b=
r><div class=3D"gmail_signature" data-smartmail=3D"gmail_signature">Eray Oz=
kural, PhD. Computer Scientist<br>Founder, Gok Us Sibernetik Ar&amp;Ge Ltd.=
 <br><a href=3D"http://groups.yahoo.com/group/ai-philosophy" target=3D"_bla=
nk">http://groups.yahoo.com/group/ai-philosophy</a><br></div>
</div>

--001a11469b24154068054636050c--
