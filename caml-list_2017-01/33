Return-Path: <ivg@ieee.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 383A2800BE
	for <caml-list@sympa.inria.fr>; Fri,  6 Jan 2017 19:12:11 +0100 (CET)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=ivg@ieee.org; spf=Pass smtp.mailfrom=ivg@ieee.org; spf=None smtp.helo=postmaster@mail-lf0-f52.google.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  ivg@ieee.org) identity=pra; client-ip=209.85.215.52;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ivg@ieee.org"; x-sender="ivg@ieee.org";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  ivg@ieee.org designates 209.85.215.52 as permitted sender)
  identity=mailfrom; client-ip=209.85.215.52;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ivg@ieee.org"; x-sender="ivg@ieee.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-lf0-f52.google.com) identity=helo;
  client-ip=209.85.215.52;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ivg@ieee.org";
  x-sender="postmaster@mail-lf0-f52.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AaS1yyRUslfJGWRL/BahC4tZ+2n3V8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbRSHt8tkgFKBZ4jH8fUM07OQ6PG8HzZZqs/Z7TgrS99lb1c9k8?=
 =?us-ascii?q?IYnggtUoauKHbQC7rUVRE8B9lIT1R//nu2YgB/Ecf6YEDO8DXptWZBUhrwOhBo?=
 =?us-ascii?q?KevrB4Xck9q41/yo+53Ufg5EmCexbal8IRiyogjdrNcajZZtJqos1hfEomZDdv?=
 =?us-ascii?q?hLy29vOV+dhQv36N2q/J5k/SRQuvYh+NBFXK7nYak2TqFWASo/PWwt68LlqRfM?=
 =?us-ascii?q?TQ2U5nsBSWoWiQZHAxLE7B7hQJj8tDbxu/dn1ymbOc32Sq00WSin4qx2RhLklD?=
 =?us-ascii?q?sLOjgk+2zMlMd+kLxUrw6gpxxnwo7bfoeVNOZlfqjAed8WXHdNUtpNWyBEBI6z?=
 =?us-ascii?q?aJYBD/caPeZAsYbyu0cOoxW5BQmpHuzvyzlIjWLy0aA11+ktFAfL1xEiEd0Tqn?=
 =?us-ascii?q?TZtNf6NKkSX+67z6fG0CvNYO9N1Djn9ITFaAosre2QUb9yd8fa1EkhFxnCjlWV?=
 =?us-ascii?q?sYHrPC2V2f4Ls2OG7uRgUv6vi2k5qw5tojivx9ssipLUjY8Sy1DE6yp5zZ00Jd?=
 =?us-ascii?q?KmVkF0f8SoEJxKtyGVLoZ7RN4pTW9vuCY/0LIGuJi7cTALyJQh3R7fauaIf5KG?=
 =?us-ascii?q?4hL5TOqRLjZ4hG5leLKinBm+61Svyur5VsWs0FdFtCpFkt7LtnwXyxPT7c2HRu?=
 =?us-ascii?q?Nm/ki/3DaPyR7c6vteLUAzj6rbJIYtwrsxlpUPq0TDGTT2mEL4jK+KbEkr5u+o?=
 =?us-ascii?q?6+Hhb777pZGcL5d5hh/iPqkqgMCyAuQ1PhIQU2SG+emwzr3u8VP/Tb5XlPM5iL?=
 =?us-ascii?q?PZv4rfJckDpq62HQtV0oE75ha6FTim0dAYkWADLFJLZB6LlobpNlHQLPziAve/?=
 =?us-ascii?q?hFOskDhvx//YJLHuHpLNLn3bnLfge7Zy9VJcxRItwdxD459YELIMLfLpVkPvqd?=
 =?us-ascii?q?DVDgU1Pgyqz+r/DdVyzIIeWWaBAq+DN6PStEeF5uMxI+mDf4IVuSjyJOY76PL0?=
 =?us-ascii?q?in85g1AdcbGz3ZQLcHC4AuhmI0KBbHXwmNgBFGMKshM6TOzrk12CTSVeZ22yXq?=
 =?us-ascii?q?I5/jE0EpiqDYbFRoC3gbyOxj23HpNMZjMONlfZOHH0cIPMcf4HaCOUaptolCAe?=
 =?us-ascii?q?Ur6rQoQh1BeGuwrzyr4hJe3RrH42r5Xmgflr7uubuhYu8iJ/D8WByCnZTn97tm?=
 =?us-ascii?q?IFSjJw27pw9x8ugmyf2LR11qQLXedY4OlEB0JnbJM=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CuAgDV3G9YhjTXVdFVCRoBAQEBAgEBA?=
 =?us-ascii?q?QEIAQEBARUBAQEBAgEBAQEIAQEBAYMOAQEBAQF+gQwHn3GCNYVKhTgQgjVQgXK?=
 =?us-ascii?q?EcSyFLEoCgU4HQhEBAQEBAQEBAQEBARIBAQEICwsKHTBCDoFjGoIbAQEBAwEjH?=
 =?us-ascii?q?QEBLAsBBAsLCwMKDAEdAgIhARIBBQEKBwsGExICBog7AwsFCA6kDD+LG2iCJYM?=
 =?us-ascii?q?IAQEFhCwDCoJWAQEBBwEBAQEBAQEZCBKGM4NbgQaCThuBNlSCW4JehyIMh2x8i?=
 =?us-ascii?q?kw4hliFNYE+g3yBd1GEN4lcigOHCBQegRQPJoFrCDUTBINaKQ8RC4F9IDUBhVW?=
 =?us-ascii?q?DEAEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0CuAgDV3G9YhjTXVdFVCRoBAQEBAgEBAQEIAQEBARUBAQE?=
 =?us-ascii?q?BAgEBAQEIAQEBAYMOAQEBAQF+gQwHn3GCNYVKhTgQgjVQgXKEcSyFLEoCgU4HQ?=
 =?us-ascii?q?hEBAQEBAQEBAQEBARIBAQEICwsKHTBCDoFjGoIbAQEBAwEjHQEBLAsBBAsLCwM?=
 =?us-ascii?q?KDAEdAgIhARIBBQEKBwsGExICBog7AwsFCA6kDD+LG2iCJYMIAQEFhCwDCoJWA?=
 =?us-ascii?q?QEBBwEBAQEBAQEZCBKGM4NbgQaCThuBNlSCW4JehyIMh2x8ikw4hliFNYE+g3y?=
 =?us-ascii?q?Bd1GEN4lcigOHCBQegRQPJoFrCDUTBINaKQ8RC4F9IDUBhVWDEAEBAQ?=
X-IronPort-AV: E=Sophos;i="5.33,326,1477954800"; 
   d="scan'208,217";a="207410566"
Received: from mail-lf0-f52.google.com ([209.85.215.52])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 06 Jan 2017 19:12:09 +0100
Received: by mail-lf0-f52.google.com with SMTP id v186so4320074lfa.1
        for <caml-list@inria.fr>; Fri, 06 Jan 2017 10:12:09 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=ieee-org.20150623.gappssmtp.com; s=20150623;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc;
        bh=438ZNAELeOTu3qNlk4MRa/EQq56Ra2EkLOc8R0cTT8c=;
        b=OvycABWucdZqikAAU7mdWt00OGL6lykfOBo/D5+FIsXnKeDby7jmyS8qw4E+dkxVR/
         mv+Gnpl8jO0dn5NqsY7Dui4JPyJtrjjT+lTdDLKHokS6BRxdCjQyLb5yeCj1RDwBhtJl
         B22gB+18O/esgbNVeCGKF7ooXKLQLoSuuMsndcJxY6ijVTRE7O83BckjSc5ScRMKSZnz
         cLNuIC+KayoqL+daMlZJcUiMaVsVAWDAnsuwOeEOvzIoIQoImrBvtOqt7J4UBmqABhgr
         qQ5aEyzmPEPGwOMRGUAP2tNkY8PNigl/LepbSJs8ZEXJTBlzrWie0vbVvrZwOEGpcJ9X
         xoag==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:in-reply-to:references:from:date
         :message-id:subject:to:cc;
        bh=438ZNAELeOTu3qNlk4MRa/EQq56Ra2EkLOc8R0cTT8c=;
        b=W0lztXJB0ct9NcIebeJABd3c2c0PU7CvaRUQMJgb8fg6NmI6Iu22uPFYs5qLKCFY+e
         yrRbh3AruG0dOlrPpFB0Q3QEF2EoaBGH7/pugEN1THGudkxFd/oi4jT3b+1reuh6MQdh
         52PX7pgmLSLFxJkQHBg5lPoACyxF3AXPk/6UYL9IrFshIEchfyNq8h0Yu+WsWyXnYQaQ
         lOd9O7fsLSx3YD7g1z08/N2hjyTwiPpvOkCOnjgeKX0mJ4YOsyUWKBUHESGhp3IAzP2X
         +4R5V+Ti5fENmMmQ4hs2lp6dHtDOmDztA5ijKjI65aNQ1U8LnXPWPLg/CAtUrr4N08jX
         WNHQ==
X-Gm-Message-State: AIkVDXK76l0+Ky3hs2do1/6J7ANhAwK2VZv7NQtLdyMbKHajPk0zpidR42FWFZYw4iwR/36h1y+43G8mUjSGie/a
X-Received: by 10.25.199.10 with SMTP id x10mr20881743lff.177.1483726328963;
 Fri, 06 Jan 2017 10:12:08 -0800 (PST)
MIME-Version: 1.0
Received: by 10.114.93.99 with HTTP; Fri, 6 Jan 2017 10:12:08 -0800 (PST)
In-Reply-To: <CALdWJ+wDTuRn1inxZvw1ABXR497z=OWab6MxZ+RMUmGOD52mCg@mail.gmail.com>
References: <22A97EAF-DBFF-4FE8-90C3-0343533CC621@gmail.com> <CALdWJ+wDTuRn1inxZvw1ABXR497z=OWab6MxZ+RMUmGOD52mCg@mail.gmail.com>
From: Ivan Gotovchits <ivg@ieee.org>
Date: Fri, 6 Jan 2017 13:12:08 -0500
Message-ID: <CALdWJ+z9hPEgmPu=JnLUtcaO_+Tck-BGjULoLTtCBQD722V26w@mail.gmail.com>
To: Anton Bachin <antronbachin@gmail.com>
Cc: "caml-list@inria.fr users" <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=94eb2c1a16e0c846ce054570f407
Subject: Re: [Caml-list] =?UTF-8?Q?=5BANN=5D_Lwt_2=2E7=2E0_=E2=80=93_monad?=
 =?UTF-8?Q?ic_promises=3B_concurrent_I/O?=

--94eb2c1a16e0c846ce054570f407
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Forgot to mention F# and their asynchronous workflows [1]. These guys did a
good job of hiding a monad behind simple ideas.
Basically, they use term "asynchronous computation" for the values of type
`'a Lwt.t`

[1]:
https://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/=
asynchronous-workflows

On Fri, Jan 6, 2017 at 1:00 PM, Ivan Gotovchits <ivg@ieee.org> wrote:

> These are the great news!
>
> And thanks for the maintainers notification, it was really helpful :)
>
> I have one comment, though:
>
>
>
>> Values of types 'a Lwt.t are now called promises rather than threads.
>>   This should eliminate a lot of confusion for beginners.
>
>
> And create a confusion for seasoned programmers, especially for those who
> are accustomed to
> C++ newly introduced concepts, like promises and futures, where a promise
> has quite an opposite
> meaning.  In short, it has the same meaning as a value of type  `'a
> Lwt.u`, i.e., it is an object through
> which a promise can be fulfilled. I think that it is better to refer to
> Lwt.t threads as futures because they
> are the values, whose value is determined in the future. Another way to
> name them is `deferred`, again
> for the same reason. You can also say, that a value of type `'a Lwt.t` is
> a computation. You can also try
> to borrow names from the Standard ML community, where `'a Lwt.t` like
> objects are named as IVars.
>
> Finally, you may also find this project interesting [1]. This is an
> attempt to factor out the core idea from both
> Core Async and Lwt. In particular, the Future library allows us to write a
> monadic code, that is independent
> of a particular implementation (Lwt or Async or Identity monad).
>
> [1]: https://github.com/BinaryAnalysisPlatform/bap/
> blob/master/lib/bap_future/bap_future.mli
>
> On Fri, Jan 6, 2017 at 11:08 AM, Anton Bachin <antronbachin@gmail.com>
> wrote:
>
>> Greetings,
>>
>> I am pleased to announce release 2.7.0 of Lwt.
>>
>>   https://github.com/ocsigen/lwt
>>
>> The primary goals of this release are (1) to improve communication
>> between maintainers and users, and (2) to prepare for (minor) breaking
>> changes to some APIs in Lwt 3.0.0 (planned for April). The changelog is
>> available here:
>>
>>   https://github.com/ocsigen/lwt/releases/tag/2.7.0
>>
>> - Lwt now uses deprecation warnings ([@deprecated]), especially for
>>   upcoming breaking changes [1]. This required dropping support for
>>   OCaml 4.01.
>> - There is a gradual, communicative, conservative process for
>>   deprecation and breaking [2]. Maintainers of packages in OPAM get
>>   notified proactively (see [1] again). If you have code not published
>>   in OPAM, watch the Lwt repo, recompile the code at least once in three
>>   months, watch this mailing list, or subscribe to the Lwt announcements
>>   issue [3].
>> - If a planned breaking change is a bad idea, please let the maintainers
>>   know when you see the warning.
>> - Lwt now uses semantic versioning [4]. The major version will grow
>>   slowly but steadily, but this does not mean that the whole API is
>>   being redesigned or broken.
>>
>> If you are releasing a package to OPAM that depends on Lwt, it is not
>> recommended to constrain Lwt to its current major version. A major
>> release of Lwt will break only a few APIs, and your package is likely
>> not to be affected =E2=80=93 if it is, you will be notified. You may, ho=
wever,
>> wish to constrain Lwt to a major version in your private or production
>> code.
>>
>> - The main OPAM package lwt is getting rid of some optional
>>   dependencies in 3.0.0, which are now installable through separate OPAM
>>   packages lwt_ssl, lwt_glib, lwt_react. This is to reduce recompilation
>>   of Lwt when installing OPAM packages ssl, lablgtk, and react.
>> - Values of types 'a Lwt.t are now called promises rather than threads.
>>   This should eliminate a lot of confusion for beginners.
>>
>> Lwt 2.7.0 also has a number of more ordinary changes, such as bug fixes
>> and the addition of bindings to writev and readv. See the full
>> changelog [5].
>>
>> I am working on an all-new manual, including fully rewritten API
>> documentation with examples. It should be ready towards the end of
>> winter.
>>
>> My hope is that all the above allows Lwt to be taken progressively into
>> the future, at the same time making development more open and more
>> humane :)
>>
>> Best,
>> Anton
>>
>>
>> [1]: https://github.com/ocsigen/lwt/issues/308
>> [2]: https://github.com/ocsigen/lwt/issues/293
>> [3]: https://github.com/ocsigen/lwt/issues/309
>> [4]: http://semver.org/
>> [5]: https://github.com/ocsigen/lwt/releases/tag/2.7.0
>>
>>
>> --
>> Caml-list mailing list.  Subscription management and archives:
>> https://sympa.inria.fr/sympa/arc/caml-list
>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>
>

--94eb2c1a16e0c846ce054570f407
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Forgot to mention F# and their asynchronous workflows [1].=
 These guys did a good job of hiding a monad behind simple ideas.<div>Basic=
ally, they use term &quot;asynchronous computation&quot; for the values of =
type `&#39;a Lwt.t`=C2=A0</div><div><br></div><div>[1]:=C2=A0<a href=3D"htt=
ps://docs.microsoft.com/en-us/dotnet/articles/fsharp/language-reference/asy=
nchronous-workflows">https://docs.microsoft.com/en-us/dotnet/articles/fshar=
p/language-reference/asynchronous-workflows</a></div></div><div class=3D"gm=
ail_extra"><br><div class=3D"gmail_quote">On Fri, Jan 6, 2017 at 1:00 PM, I=
van Gotovchits <span dir=3D"ltr">&lt;<a href=3D"mailto:ivg@ieee.org" target=
=3D"_blank">ivg@ieee.org</a>&gt;</span> wrote:<br><blockquote class=3D"gmai=
l_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left=
:1ex"><div dir=3D"ltr"><div>These are the great news!=C2=A0</div><div><br><=
/div><div>And thanks for the maintainers=C2=A0notification, it was really h=
elpful :)</div><div><br></div><div>I have one comment, though:</div><span c=
lass=3D""><div><br></div><div>=C2=A0</div><blockquote class=3D"gmail_quote"=
 style=3D"margin:0px 0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);p=
adding-left:1ex">Values of types &#39;a Lwt.t are now called promises rathe=
r than threads.<br>=C2=A0 This should eliminate a lot of confusion for begi=
nners.</blockquote><div><br></div></span><div>And create a confusion for se=
asoned programmers, especially for those who are accustomed to=C2=A0</div><=
div>C++ newly introduced concepts, like promises and futures, where a promi=
se has quite an=C2=A0opposite</div><div>meaning.=C2=A0 In short, it has the=
 same meaning as a value of type =C2=A0`&#39;a Lwt.u`, i.e., it is an objec=
t through<br></div><div>which a promise can be fulfilled. I think that it i=
s better to refer to Lwt.t threads as futures=C2=A0because they</div><div>a=
re the values, whose value is determined in the future. Another way to name=
 them is `deferred`, again</div><div>for the same reason. You can also say,=
 that a value of type `&#39;a Lwt.t` is a computation. You can also try</di=
v><div>to borrow names from the Standard ML community, where `&#39;a Lwt.t`=
 like objects are named as IVars.</div><div><br></div><div>Finally, you may=
 also find this project interesting [1]. This is an attempt=C2=A0to factor =
out the core idea from both</div><div>Core Async and Lwt. In particular, th=
e Future library allows us to write a monadic code, that is independent</di=
v><div>of a particular implementation (Lwt=C2=A0or Async or Identity monad)=
. =C2=A0</div><div><br></div><div>[1]:=C2=A0<a href=3D"https://github.com/B=
inaryAnalysisPlatform/bap/blob/master/lib/bap_future/bap_future.mli" target=
=3D"_blank">https://github.com/<wbr>BinaryAnalysisPlatform/bap/<wbr>blob/ma=
ster/lib/bap_future/<wbr>bap_future.mli</a></div></div><div class=3D"HOEnZb=
"><div class=3D"h5"><div class=3D"gmail_extra"><br><div class=3D"gmail_quot=
e">On Fri, Jan 6, 2017 at 11:08 AM, Anton Bachin <span dir=3D"ltr">&lt;<a h=
ref=3D"mailto:antronbachin@gmail.com" target=3D"_blank">antronbachin@gmail.=
com</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=3D"mar=
gin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex">Greetings,<br>
<br>
I am pleased to announce release 2.7.0 of Lwt.<br>
<br>
=C2=A0 <a href=3D"https://github.com/ocsigen/lwt" rel=3D"noreferrer" target=
=3D"_blank">https://github.com/ocsigen/lwt</a><br>
<br>
The primary goals of this release are (1) to improve communication<br>
between maintainers and users, and (2) to prepare for (minor) breaking<br>
changes to some APIs in Lwt 3.0.0 (planned for April). The changelog is<br>
available here:<br>
<br>
=C2=A0 <a href=3D"https://github.com/ocsigen/lwt/releases/tag/2.7.0" rel=3D=
"noreferrer" target=3D"_blank">https://github.com/ocsigen/lwt<wbr>/releases=
/tag/2.7.0</a><br>
<br>
- Lwt now uses deprecation warnings ([@deprecated]), especially for<br>
=C2=A0 upcoming breaking changes [1]. This required dropping support for<br>
=C2=A0 OCaml 4.01.<br>
- There is a gradual, communicative, conservative process for<br>
=C2=A0 deprecation and breaking [2]. Maintainers of packages in OPAM get<br>
=C2=A0 notified proactively (see [1] again). If you have code not published=
<br>
=C2=A0 in OPAM, watch the Lwt repo, recompile the code at least once in thr=
ee<br>
=C2=A0 months, watch this mailing list, or subscribe to the Lwt announcemen=
ts<br>
=C2=A0 issue [3].<br>
- If a planned breaking change is a bad idea, please let the maintainers<br>
=C2=A0 know when you see the warning.<br>
- Lwt now uses semantic versioning [4]. The major version will grow<br>
=C2=A0 slowly but steadily, but this does not mean that the whole API is<br>
=C2=A0 being redesigned or broken.<br>
<br>
If you are releasing a package to OPAM that depends on Lwt, it is not<br>
recommended to constrain Lwt to its current major version. A major<br>
release of Lwt will break only a few APIs, and your package is likely<br>
not to be affected =E2=80=93 if it is, you will be notified. You may, howev=
er,<br>
wish to constrain Lwt to a major version in your private or production<br>
code.<br>
<br>
- The main OPAM package lwt is getting rid of some optional<br>
=C2=A0 dependencies in 3.0.0, which are now installable through separate OP=
AM<br>
=C2=A0 packages lwt_ssl, lwt_glib, lwt_react. This is to reduce recompilati=
on<br>
=C2=A0 of Lwt when installing OPAM packages ssl, lablgtk, and react.<br>
- Values of types &#39;a Lwt.t are now called promises rather than threads.=
<br>
=C2=A0 This should eliminate a lot of confusion for beginners.<br>
<br>
Lwt 2.7.0 also has a number of more ordinary changes, such as bug fixes<br>
and the addition of bindings to writev and readv. See the full<br>
changelog [5].<br>
<br>
I am working on an all-new manual, including fully rewritten API<br>
documentation with examples. It should be ready towards the end of<br>
winter.<br>
<br>
My hope is that all the above allows Lwt to be taken progressively into<br>
the future, at the same time making development more open and more<br>
humane :)<br>
<br>
Best,<br>
Anton<br>
<br>
<br>
[1]: <a href=3D"https://github.com/ocsigen/lwt/issues/308" rel=3D"noreferre=
r" target=3D"_blank">https://github.com/ocsigen/lwt<wbr>/issues/308</a><br>
[2]: <a href=3D"https://github.com/ocsigen/lwt/issues/293" rel=3D"noreferre=
r" target=3D"_blank">https://github.com/ocsigen/lwt<wbr>/issues/293</a><br>
[3]: <a href=3D"https://github.com/ocsigen/lwt/issues/309" rel=3D"noreferre=
r" target=3D"_blank">https://github.com/ocsigen/lwt<wbr>/issues/309</a><br>
[4]: <a href=3D"http://semver.org/" rel=3D"noreferrer" target=3D"_blank">ht=
tp://semver.org/</a><br>
[5]: <a href=3D"https://github.com/ocsigen/lwt/releases/tag/2.7.0" rel=3D"n=
oreferrer" target=3D"_blank">https://github.com/ocsigen/lwt<wbr>/releases/t=
ag/2.7.0</a><br>
<span class=3D"m_9108439709492512423HOEnZb"><font color=3D"#888888"><br>
<br>
--<br>
Caml-list mailing list.=C2=A0 Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" rel=3D"noreferrer" t=
arget=3D"_blank">https://sympa.inria.fr/sympa/a<wbr>rc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" rel=3D"noreferrer" target=3D"_blank">http://groups.yahoo.com/group/<wbr=
>ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" rel=3D"noreferr=
er" target=3D"_blank">http://caml.inria.fr/bin/caml-<wbr>bugs</a></font></s=
pan></blockquote></div><br></div>
</div></div></blockquote></div><br></div>

--94eb2c1a16e0c846ce054570f407--
