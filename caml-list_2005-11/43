Return-Path: <daniel.buenzli@epfl.ch>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 5B661D45F
	for <caml-list@yquem.inria.fr>; Wed,  2 Nov 2005 10:57:33 +0100 (CET)
Received: from mail21.bluewin.ch (mail21.bluewin.ch [195.186.18.66])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jA29vXEq021369
	for <caml-list@yquem.inria.fr>; Wed, 2 Nov 2005 10:57:33 +0100
Received: from [10.0.1.2] (81.62.79.11) by mail21.bluewin.ch (Bluewin 7.2.068.1)
        id 435F98510014D8A1 for caml-list@yquem.inria.fr; Wed, 2 Nov 2005 09:57:32 +0000
Mime-Version: 1.0 (Apple Message framework v746.2)
In-Reply-To: <20051102094613.GA8506@furbychan.cocan.org>
References: <43679EEF.70102@confluent.org> <20051102094613.GA8506@furbychan.cocan.org>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
Message-Id: <1E27D2C8-E4BC-4AC2-86BF-BD906F4CDD25@epfl.ch>
Content-Transfer-Encoding: quoted-printable
From: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@epfl.ch>
Subject: Re: [Caml-list] Nesting Modules
Date: Wed, 2 Nov 2005 10:57:37 +0100
To: caml-list@yquem.inria.fr
X-Mailer: Apple Mail (2.746.2)
X-Miltered: at concorde with ID 43688D8D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; epfl:01 caml-list:01 nesting:01 notation:01 46,:98 modules:01 modules:01 hierarchy:01 hierarchical:02 module:03 hierarchies:03 ecrit:04 daniel:04 daniel:04 suppose:05 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3


Le 2 nov. 05 =E0 10:46, Richard Jones a =E9crit :

> If you want clean, hierarchical names it's much better to use '_' to
> separate the hierarchies (eg. Top_Bottom).  The reason for this is
> that it allows others to extend your hierarchy by adding other modules
> (eg. someone else can easily then create Top_MyExtension).

This doesn't scale well, suppose that I want to extend Top_Bottom, =20
then I have a module called Top_Bottom_Myextension. I think 'include' =20=

is a better mechanism if you need to extend modules.

Another problem of this solution is that you cannot open modules =20
hierarchically, e.g. open Top but use the dot notation for Bottom.

Daniel=

