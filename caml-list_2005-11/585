Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id BFDD0BB81
	for <caml-list@yquem.inria.fr>; Tue, 29 Nov 2005 14:42:05 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jATDg5LG016917
	for <caml-list@yquem.inria.fr>; Tue, 29 Nov 2005 14:42:05 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA10714 for <caml-list@pauillac.inria.fr>; Tue, 29 Nov 2005 14:42:04 +0100 (MET)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jATDg2Bl021511
	for <caml-list@inria.fr>; Tue, 29 Nov 2005 14:42:04 +0100
Received: from localhost (orion [130.54.16.5])
	by kurims.kurims.kyoto-u.ac.jp (8.13.1/8.13.1) with ESMTP id jATDg2FL014381
	for <caml-list@inria.fr>; Tue, 29 Nov 2005 22:42:02 +0900 (JST)
Date: Tue, 29 Nov 2005 22:42:02 +0900 (JST)
Message-Id: <20051129.224202.68561368.keiko@kurims.kyoto-u.ac.jp>
To: caml-list@inria.fr
Subject: Re: a role of explicit type coersion
From: Keiko Nakata <keiko@kurims.kyoto-u.ac.jp>
In-Reply-To: <20051129.173206.68530481.keiko@kurims.kyoto-u.ac.jp>
References: <20051129.173206.68530481.keiko@kurims.kyoto-u.ac.jp>
X-Mailer: Mew version 4.2 on Emacs 20.7 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 438C5AAD.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 438C5AAB.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; rec:01 node:01 node:01 mli:01 val:01 typos:01 seems:03 explicit:03 let:03 let:03 meant:05 anyway:05 function:08 kyoto-u:10 kurims:10 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

I am sorry, my codes had typos.
I meant:

leafs.ml: 
let rec leafs = function
    `Node (a, b) -> (leafs a) @ (leafs b)
  | `Var _ as l -> [l]
  | others -> [others]
 
let leafs2 : ([> `Node of 'a * 'a ] as 'a) -> 'a list
  = (leafs2 :> ([> `Node of 'a * 'a ] as 'a) -> 'a list)
 
leafs.mli:
val leafs2 : ([> `Node of 'a * 'a ] as 'a) -> 'a list

Anyway, it seems impossible to hide `Var from the type of leafs2.

Keiko

