Return-Path: <swaroop@cs.jhu.edu>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 56A0FBB9C
	for <caml-list@yquem.inria.fr>; Tue, 15 Nov 2005 23:44:21 +0100 (CET)
Received: from blaze.cs.jhu.edu (blaze.cs.jhu.edu [128.220.13.50])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jAFMiK4T022557
	for <caml-list@yquem.inria.fr>; Tue, 15 Nov 2005 23:44:21 +0100
Received: from [128.220.220.231] (wheat.cs.jhu.edu [128.220.220.231])
	by blaze.cs.jhu.edu (8.12.9/8.12.9) with ESMTP id jAFMiJRl000923
	for <caml-list@yquem.inria.fr>; Tue, 15 Nov 2005 17:44:19 -0500 (EST)
Message-ID: <437A64C1.3000807@cs.jhu.edu>
Date: Tue, 15 Nov 2005 17:44:17 -0500
From: Swaroop Sridhar <swaroop@cs.jhu.edu>
User-Agent: Mozilla Thunderbird 1.0.7-1.1.fc4 (X11/20050929)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Recursive types
References: <20050506044107.1698.70519.Mailman@yquem.inria.fr>
In-Reply-To: <20050506044107.1698.70519.Mailman@yquem.inria.fr>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 437A64C4.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; recursive:01 recursive:01 combinator:01 unifier:01 arbitrary:01 caml:02 implemented:02 types:02 types:02 explicit:03 fix:04 edu:07 somebody:08 postings:08 discussed:10 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

How are arbitrary recursive types implemented in caml? Is it done using 
an explicit fix point combinator "type" so that the unifier itself does 
not go into an infinite loop?

I apologize if this topic has been previously discussed, and I would 
really appreciate if somebody can point me at the relevant postings.

Thanks,
Swaroop.

