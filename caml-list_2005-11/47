Return-Path: <daniel.buenzli@epfl.ch>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 0C174D45F
	for <caml-list@yquem.inria.fr>; Wed,  2 Nov 2005 11:57:43 +0100 (CET)
Received: from mail13.bluewin.ch (mail13.bluewin.ch [195.186.18.62])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jA2AvgXF028888
	for <caml-list@yquem.inria.fr>; Wed, 2 Nov 2005 11:57:42 +0100
Received: from [10.0.1.2] (81.62.79.11) by mail13.bluewin.ch (Bluewin 7.2.068.1)
        id 435DFDA2001A2105; Wed, 2 Nov 2005 10:57:40 +0000
In-Reply-To: <20051102104759.GA5067@furbychan.cocan.org>
References: <43679EEF.70102@confluent.org> <20051102094613.GA8506@furbychan.cocan.org> <1E27D2C8-E4BC-4AC2-86BF-BD906F4CDD25@epfl.ch> <20051102104759.GA5067@furbychan.cocan.org>
Mime-Version: 1.0 (Apple Message framework v746.2)
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
Message-Id: <C8363C6C-96D2-4F2E-B59C-FAD43872AACB@epfl.ch>
Cc: caml-list@yquem.inria.fr
Content-Transfer-Encoding: quoted-printable
From: =?ISO-8859-1?Q?Daniel_B=FCnzli?= <daniel.buenzli@epfl.ch>
Subject: Re: [Caml-list] Nesting Modules
Date: Wed, 2 Nov 2005 11:57:45 +0100
To: Richard Jones <rich@annexia.org>
X-Mailer: Apple Mail (2.746.2)
X-Miltered: at concorde with ID 43689BA6.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; epfl:01 caml-list:01 nesting:01 functors:01 modules:01 modules:01 notion:04 ecrit:04 daniel:04 daniel:04 interface:05 consider:08 frontend:09 example:10 think:11 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3


Le 2 nov. 05 =E0 11:47, Richard Jones a =E9crit :

>  consider a database layer:
>
>   Database
>   Database_Postgres
>   Database_MySQL
>
> Obviously '_' is the way to go here if you want multiple third parties
> to provide database modules.  'include' wouldn't work at all here.

You are right. I think 'include' doesn't work here because there is a =20=

notion of choice. If I understand well your example, functors =20
wouldn't help here because it is not that you want to get a unified =20
interface (frontend) from a specific database implementation =20
(backend), but you really want to access database specific features =20
via the third party modules, right ?

Daniel

