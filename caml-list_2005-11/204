Return-Path: <damien.doligez@inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 6997ABB81
	for <caml-list@yquem.inria.fr>; Thu, 10 Nov 2005 11:26:08 +0100 (CET)
Received: from [127.0.0.1] (yquem.inria.fr [128.93.8.37])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jAAAQ8an016777
	for <caml-list@yquem.inria.fr>; Thu, 10 Nov 2005 11:26:08 +0100
Mime-Version: 1.0 (Apple Message framework v746.2)
In-Reply-To: <1130585342.15589.124.camel@localhost.localdomain>
References: <ad8cfe7e0510210301n69e7a384s23e45f2870de9395@mail.gmail.com> <ad8cfe7e0510260256x6651fc2l6d755a97acedda78@mail.gmail.com> <5636A978-D095-489D-A20D-8E762F133240@inria.fr> <ad8cfe7e0510281441o779e5ed6g2a283d72ee078153@mail.gmail.com> <1130585342.15589.124.camel@localhost.localdomain>
Content-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed
Message-Id: <D229B681-47A5-4FEC-9957-F34F9E310D02@inria.fr>
Content-Transfer-Encoding: 7bit
From: Damien Doligez <damien.doligez@inria.fr>
Subject: Re: [Caml-list] The Bytecode Interpreter...
Date: Thu, 10 Nov 2005 11:26:17 +0100
To: caml-list <caml-list@yquem.inria.fr>
X-Mailer: Apple Mail (2.746.2)
X-Miltered: at concorde with ID 43732040.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; damien:01 damien:01 caml-list:01 bytecode:01 gerd:01 stolpmann:01 minor:01 minor:01 heap:01 ocaml:01 heap:01 ...:98 2005,:98 wrote:01 doligez:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Oct 29, 2005, at 13:29, Gerd Stolpmann wrote:

> Major GC: In principle, you can stop it at any time. You should  
> probably
> do so when the interrupt occurs. And then? The ISR must not allocate
> memory in this case, because the memory manager cannot give it to  
> you in
> this moment (major GCs are triggered from minor GCs, so the minor heap
> is currently full).

Actually, in OCaml a major GC slice is triggered right _after_ each  
minor
GC, so the minor heap is always empty when the major GC is running.

-- Damien

