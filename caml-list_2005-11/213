Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id C13A1BB81
	for <caml-list@yquem.inria.fr>; Fri, 11 Nov 2005 06:21:14 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jAB5LD2D000312
	for <caml-list@yquem.inria.fr>; Fri, 11 Nov 2005 06:21:14 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id GAA11095 for <caml-list@pauillac.inria.fr>; Fri, 11 Nov 2005 06:21:13 +0100 (MET)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jAB5LBLp017930
	for <caml-list@inria.fr>; Fri, 11 Nov 2005 06:21:12 +0100
Received: from localhost (suiren [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.13.1/8.13.1) with ESMTP id jAB5KUsF007271;
	Fri, 11 Nov 2005 14:20:36 +0900 (JST)
Date: Fri, 11 Nov 2005 14:21:33 +0900 (JST)
Message-Id: <20051111.142133.126763902.garrigue@math.nagoya-u.ac.jp>
To: Pietro.Abate@anu.edu.au
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] marshalling objects
From: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <20051111045430.GA17854@pulp.anu.edu.au>
References: <20051111045430.GA17854@pulp.anu.edu.au>
X-Mailer: Mew version 4.2 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 43742A49.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 43742A47.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 marshalling:01 anu:01 heap:01 bug:01 wire:98 abstract:01 closures:01 closures:01 marshal:01 marshal:01 jacques:01 jacques:01 objects:02 objects:02 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

From: Pietro Abate <Pietro.Abate@anu.edu.au>

> It's not clear to me if it is possible or not to marshall objects ? From
> my tests it is not the case (output_value: abstract value (outside
> heap).). Am I missing something ? What is common practice to send
> objects across the wire ?

It is possible, but there was a bug in 3.08.
In 3.09, you can marshal an object with
   Marshal.to_string obj [Marshal.Closures]
Note that this means that the method table is really sent, as an array
of closures, which is possibly very innefficient, and also means that
the program on the other side must be the same one.

Jacques Garrigue

