Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 52FDBBB81
	for <caml-list@yquem.inria.fr>; Fri, 18 Nov 2005 17:14:35 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jAIGEYIM010100
	for <caml-list@yquem.inria.fr>; Fri, 18 Nov 2005 17:14:35 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA17079 for <caml-list@pauillac.inria.fr>; Fri, 18 Nov 2005 17:14:34 +0100 (MET)
Received: from einhorn.in-berlin.de (einhorn.in-berlin.de [192.109.42.8])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jAIGEX1m027122
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Fri, 18 Nov 2005 17:14:34 +0100
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: <caml-list@inria.fr>
Received: from first.in-berlin.de (e178038113.adsl.alicedsl.de [85.178.38.113])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.12.10/8.12.10/Debian-4) with ESMTP id jAIGEW2k014279
	for <caml-list@inria.fr>; Fri, 18 Nov 2005 17:14:32 +0100
Received: by first.in-berlin.de (Postfix, from userid 501)
	id 6AFAF194CE2; Fri, 18 Nov 2005 17:13:53 +0100 (CET)
Date: Fri, 18 Nov 2005 17:13:53 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@inria.fr
Subject: Re: [Caml-list] [1/2 OT] Indexing (and mergeable Index-algorithms)
Message-ID: <20051118161353.GA1514@first.in-berlin.de>
References: <20051116234238.GA5741@first.in-berlin.de> <87r79fjxy4.fsf@mid.deneb.enyo.de> <1132325649.17170.1.camel@starlight> <20051118142244.GF1116@first.in-berlin.de> <87wtj6yqbw.fsf@mid.deneb.enyo.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <87wtj6yqbw.fsf@mid.deneb.enyo.de>
User-Agent: Mutt/1.5.6i
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
X-Miltered: at concorde with ID 437DFDEA.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 437DFDE9.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; oliver:01 bandel:01 oliver:01 in-berlin:01 caml-list:01 indexing:01 bandel:01 ocaml:01 bindings:01 arises:01 rewriting:01 inverted:01 inverted:01 wrote:01 data:02 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.3

On Fri, Nov 18, 2005 at 03:37:39PM +0100, Florian Weimer wrote:
> * Oliver Bandel:
> 
> >> After a quick search that only returned one dead project (Alpha, v0.0.1,
> >> last updated 2002), I have to ask: are there any OCaml bindings for
> >> BerkeleyDB?
> >
> > Isn't Dbm-module that thing?
> 
> No, it isn't.  Berkeley DB offers much richer functionality, including
> transactions and replication.
> 
> > But there only string -> string  can be used.
> > So your key as well as value has to be string-type.
> 
> You have to use some serialization/deserialization code.  The same
> issue arises if you use an SQL database.

Maybe rewriting from scratch would make sense.
Then I neither need a SQL-database nor writing
interface code.

If the Dbm is fast enbough and can handle such big
amounts of data/files efficiently enough, I would
write my own indexer then, using the mentioned
idea of inverted lists (but using a think like
inverted trees).

Ciao,
   Oliver

