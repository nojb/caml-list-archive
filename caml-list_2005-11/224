Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 34048BB81
	for <caml-list@yquem.inria.fr>; Fri, 11 Nov 2005 21:18:11 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jABKIA0h008403
	for <caml-list@yquem.inria.fr>; Fri, 11 Nov 2005 21:18:10 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA31900 for <caml-list@pauillac.inria.fr>; Fri, 11 Nov 2005 21:18:10 +0100 (MET)
Received: from mail.physik.uni-muenchen.de (mail.physik.uni-muenchen.de [192.54.42.129])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jABKI9wE008400
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Fri, 11 Nov 2005 21:18:10 +0100
Received: from localhost (unknown [127.0.0.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id 5EB102001B
	for <caml-list@inria.fr>; Fri, 11 Nov 2005 21:18:09 +0100 (CET)
Received: from mail.physik.uni-muenchen.de ([127.0.0.1])
 by localhost (mail.physik.uni-muenchen.de [127.0.0.1]) (amavisd-new, port 10024)
 with LMTP id 17336-01-18 for <caml-list@inria.fr>;
 Fri, 11 Nov 2005 21:18:09 +0100 (CET)
Received: from mailhost.cip.physik.uni-muenchen.de (kaiser.cip.physik.uni-muenchen.de [141.84.136.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id 468D620007
	for <caml-list@inria.fr>; Fri, 11 Nov 2005 21:18:09 +0100 (CET)
Received: from eiger.cip.physik.uni-muenchen.de (eiger.cip.physik.uni-muenchen.de [141.84.136.54])
	by mailhost.cip.physik.uni-muenchen.de (Postfix) with ESMTP id 9CF7626E89
	for <caml-list@inria.fr>; Fri, 11 Nov 2005 21:18:08 +0100 (CET)
Received: by eiger.cip.physik.uni-muenchen.de (Postfix, from userid 3092)
	id 3D7A334FFF; Fri, 11 Nov 2005 21:18:08 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by eiger.cip.physik.uni-muenchen.de (Postfix) with ESMTP id 349F72258E
	for <caml-list@inria.fr>; Fri, 11 Nov 2005 21:18:08 +0100 (CET)
Date: Fri, 11 Nov 2005 21:18:08 +0100 (CET)
From: Thomas Fischbacher <Thomas.Fischbacher@Physik.Uni-Muenchen.DE>
To: caml-list@inria.fr
Subject: What on earth is this?
Message-ID: <Pine.LNX.4.61.0511112117490.6534@eiger.cip.physik.uni-muenchen.de>
X-BOFH: Daemons did it
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: amavisd-new at physik.uni-muenchen.de
X-Miltered: at nez-perce with ID 4374FC82.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 4374FC81.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; beginner's:01 memoizing:01 stdout:01 gettimeofday:01 gettimeofday:01 printf:01 fprintf:01 rec:01 memoized:01 hashtbl:01 hashtbl:01 rec:01 memoized:01 right-hand:01 rec':01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3


Maybe I just need a good night of sleep, maybe I overlooked something 
really dumb and rather should have asked on the beginner's list. Anyway, 
I find the behaviour demonstrated below quite confusing. Why don't the 
definitions ###_v1 and ###_v2 work? Any idea, anyone?

===>
(* (C) T. Fischbacher, 2005 - Demonstrating a simple form of memoizing... *)
#load "unix.cma";;

let timing ?(tagfun= fun _ -> "Time passed: ") ?(channel=stdout) f x =
  let tag = tagfun x in
  let t0 = Unix.gettimeofday () in
  let result = f x in
  let t1 = Unix.gettimeofday () in
  let () = Printf.fprintf channel "%s%f sec\n%!" tag (t1-.t0) in
  result
;;

let rec fibonacci n =
  if n < 2 then 1 else fibonacci (n-1) + fibonacci (n-2)
;;

(*
# timing fibonacci 35;;
Time passed: 4.254157 sec
- : int = 14930352
*)

let memoized ht f arg =
  try
    Hashtbl.find ht arg
  with
  | Not_found ->
      let result = f arg in
      let () = Hashtbl.add ht arg result in
      result
;;

let rec mem_fibonacci_v1 =
  let mem = Hashtbl.create 10 in
  memoized mem
    (fun n -> if n < 2 then 1 else mem_fibonacci_v1 (n-1) + 
mem_fibonacci_v1 (n-2))
;;
(* Error: "This kind of expression is not allowed as right-hand side of `let rec'" *)

let mem_fibonacci_v2 =
  let mem = Hashtbl.create 10 in
  let rec mf =
    memoized mem
      (fun n -> if n < 2 then 1 else (mf (n-1)) + (mf (n-2)))
  in mf
;;
(* Error: "This kind of expression is not allowed as right-hand side of `let rec'" *)

let mem_fibonacci_v3 =
  let mem = Hashtbl.create 10 in
  let mf yfp =
    memoized mem 
      (fun n -> if n < 2 then 1 else yfp () (n-1) + yfp () (n-2))
  in
  let rec yc x = x (fun () -> (yc x)) in
  yc mf
;;

(* This definition worked. And indeed: 

# timing mem_fibonacci_v3 35;;
Time passed: 0.000149 sec
- : int = 14930352
# timing mem_fibonacci_v3 35;;
Time passed: 0.000005 sec
- : int = 14930352
# 
 *)
<===

-- 
regards,               tf@cip.physik.uni-muenchen.de              (o_
 Thomas Fischbacher -  http://www.cip.physik.uni-muenchen.de/~tf  //\
(lambda (n) ((lambda (p q r) (p p q r)) (lambda (g x y)           V_/_
(if (= x 0) y (g g (- x 1) (* x y)))) n 1))                  (Debian GNU)

