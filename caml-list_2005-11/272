Return-Path: <skaller@users.sourceforge.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id E0F2ABB9A
	for <caml-list@yquem.inria.fr>; Tue, 15 Nov 2005 05:10:58 +0100 (CET)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jAF4Au6q007845
	for <caml-list@yquem.inria.fr>; Tue, 15 Nov 2005 05:10:58 +0100
Received: from rosella (ppp7-104.lns1.syd7.internode.on.net [59.167.7.104])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.6) with ESMTP id jAF4AosT060583;
	Tue, 15 Nov 2005 14:40:50 +1030 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] Building a custom compiler environment
From: skaller <skaller@users.sourceforge.net>
To: Jonathan Roewen <jonathan.roewen@gmail.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <ad8cfe7e0511141436y4f7a6e7evaa2fcd42b2f5fe3@mail.gmail.com>
References: <ad8cfe7e0511121901y1588e920ue5b798ad9f09b471@mail.gmail.com>
	 <ad8cfe7e0511122005k40ea0e70le33104c88208c496@mail.gmail.com>
	 <1131880149.31023.25.camel@gate.lan.gerd-stolpmann.de>
	 <ad8cfe7e0511132238m5aeac1c7t11be60971ac68dfa@mail.gmail.com>
	 <ad8cfe7e0511141436y4f7a6e7evaa2fcd42b2f5fe3@mail.gmail.com>
Content-Type: text/plain
Date: Tue, 15 Nov 2005 15:10:49 +1100
Message-Id: <1132027850.11813.88.camel@rosella>
Mime-Version: 1.0
X-Mailer: Evolution 2.4.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 43795FD0.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 compiler:01 compiler:01 -output-obj:01 dynlink:01 customised:01 ocamlc:01 wrote:01 sourceforge:01 workaround:01 define:01 primitives:02 primitives:02 output:02 seems:03 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Tue, 2005-11-15 at 11:36 +1300, Jonathan Roewen wrote:
> I also need to ask: why are the primitives built INTO the compiler? Is
> there any sound explanation for this?
> 
> One reason I could think of is to force the linker to keep those
> symbols in the final output file (when using -output-obj). But if
> they're not used, then why do they need to be present? For Dynlink to
> work correctly?
> 
> This seems to be the -one- thing to make building my custom compiler
> environment not work without requiring a customised ocamlc (with less
> primitives builtin).

Perhaps: as a workaround make a dummy object file with the required
symbols in it and link it in .. since you're not using them,
it doesn't matter how you define them .. :)

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

