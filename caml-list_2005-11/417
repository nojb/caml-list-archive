Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id DFDB0BB81
	for <caml-list@yquem.inria.fr>; Sat, 19 Nov 2005 16:10:13 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jAJFADG0031806
	for <caml-list@yquem.inria.fr>; Sat, 19 Nov 2005 16:10:13 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA09760 for <caml-list@pauillac.inria.fr>; Sat, 19 Nov 2005 16:10:12 +0100 (MET)
Received: from einhorn.in-berlin.de (einhorn.in-berlin.de [192.109.42.8])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jAJFACNi026668
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Sat, 19 Nov 2005 16:10:12 +0100
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: <caml-list@inria.fr>
Received: from first.in-berlin.de (e178055100.adsl.alicedsl.de [85.178.55.100])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.12.10/8.12.10/Debian-4) with ESMTP id jAJFAAmv014232
	for <caml-list@inria.fr>; Sat, 19 Nov 2005 16:10:10 +0100
Received: by first.in-berlin.de (Postfix, from userid 501)
	id 01FCA1959F0; Sat, 19 Nov 2005 16:09:31 +0100 (CET)
Date: Sat, 19 Nov 2005 16:09:31 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@inria.fr
Subject: Yet another OCaml Webserver?!     (was: Re: [Caml-list] Yet another sudoku solver (838 bytes))
Message-ID: <20051119150931.GB324@first.in-berlin.de>
References: <dln6hs$eat$1@sea.gmane.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <dln6hs$eat$1@sea.gmane.org>
User-Agent: Mutt/1.5.6i
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
X-Miltered: at nez-perce with ID 437F4055.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 437F4054.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; oliver:01 bandel:01 oliver:01 in-berlin:01 ocaml:01 caml-list:01 solver:01 solver:01 ocaml:01 libs:01 buffer:01 buffer:01 libs:01 c-libraries:01 compiler:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.9 required=5.0 tests=FORGED_RCVD_HELO,PLING_QUERY 
	autolearn=disabled version=3.0.3

On Sat, Nov 19, 2005 at 12:41:32PM +0000, Marco Maggesi wrote:
> While we are there, this is my soduku solver.  It is not as efficient
> as the other solver proposed in this list, but it takes a fraction of
> seconds to compute a solution on a P4 anyway.
[...]


Well, this nice game is able to trigger the OCaml-programmers
very well. It's fun and it's kind of academic programming
experience, because it's about solving theoretical problems.


But where is the "yet another" or even "first" Ocaml webserver?

Where are other interesting applications, which can show people
the power of this language - especially safety/security of an application?

When looking at many progra,s and libs, written in C, or Web-Languages
like PHP and such stupid stuff, I always remind me the very often
readable security warnings - buffer overflows and so on.

But where's the OCaml programmers community (is there something like that?),
showing that it also goes in other ways?

When asking here for databases and other stuff, often comes the
answer: try to use <xyz> library and write a C-binding.

Nice idea, but too often most of the libraries are buggy and
many of them struggle with Buffer Overflow (and similar) problems.

For example pcre-lib, curl-lib, a lot of the graphic-format libs, ...
...even cryptographic libs... where you send your credit card
informations through the network... well....


So, it looks like OCaml is mainly used to write code that lives
on the base of C-libraries.
Not thatr it is a nice feature to have the possibility to have
C-libs included relatively easy.
But to rely completely on that feature (and relying on potentially
insecure libraries) instead of reimplementing save versions of these
libraries, this is IMHO not the best idea.

Well, I really hate slow applications, and so, if a C-application
is much faster than one written in OCaml, this would be not so fine,
but when a fast application works unsecure/unsafe, then it is much
worse.
Speed of OCaml-programs maybe could be enhanced, when the compiler
will be more optimized. But as long as OCaml is only used for
such toy-applications (not that this is bad, it's fine, but
what's about the "real world"?!), then there will be no need for
further optimizing.
And no interest in that language on a broader population...


So, where are the projects like a webserver in OCaml (the first one,
and another one, and yet another one...) as there are several
implementations of other programs written in C?!


What's about starting such a project?

Here are a lot of fine programmers on the list, but
all are doing some small academic toy-programming,
but when it comes to bigger stuff, no one will start
the first line of code...

...big projects are done in C or Java or C++ or maybe
Perl/Python.

OCaml?

No one knows, no one uses...


Just... just only some thoughts about it...


Ciao,
   Oliver

