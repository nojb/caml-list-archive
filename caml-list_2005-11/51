Return-Path: <Julien.Narboux@inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id F0A5ED45F
	for <caml-list@yquem.inria.fr>; Wed,  2 Nov 2005 12:31:42 +0100 (CET)
Received: from mx-a.polytechnique.fr (mx-a.polytechnique.fr [129.104.30.14])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jA2BVgBV000713
	for <caml-list@yquem.inria.fr>; Wed, 2 Nov 2005 12:31:42 +0100
Received: from argos.lix.polytechnique.fr (argos.lix.polytechnique.fr [129.104.11.2])
	by mx-a.polytechnique.fr (tbp 5.3.1/2.0.6) with ESMTP id jA2BVen9023434;
	Wed, 2 Nov 2005 12:31:40 +0100
Received: from [129.104.11.153] (pouilly.polytechnique.fr [129.104.11.153])
	by argos.lix.polytechnique.fr (Postfix) with ESMTP id 0945D4BA14;
	Wed,  2 Nov 2005 12:31:40 +0100 (CET)
Message-ID: <4368A16B.4050703@inria.fr>
Date: Wed, 02 Nov 2005 12:22:19 +0100
From: Julien Narboux <Julien.Narboux@inria.fr>
User-Agent: Mozilla Thunderbird 1.0.2 (X11/20050322)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Richard Jones <rich@annexia.org>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] The best way to circumvent the lack of Thread.kill
 ?
References: <43688C4C.2080606@inria.fr> <20051102105419.GB5067@furbychan.cocan.org>
In-Reply-To: <20051102105419.GB5067@furbychan.cocan.org>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4368A39E.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 wrote:01 wrote:01 theorem:01 theorem:01 thread:02 thread:02 native:02 graphical:02 caml:02 implemented:02 prover:02 prover:02 complex:04 structure:04 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

Richard Jones wrote:

>On Wed, Nov 02, 2005 at 10:52:12AM +0100, Julien Narboux wrote:
>  
>
>>My problem is that I don't want to pollute my target thread with checks 
>>for a variable.
>>
>>Indeed, I am writing a graphical user interface for an automated theorem 
>>prover.
>>    
>>
>
>How about forking off the theorem prover as a separate process?  You
>can communicate the result back to the main program using either a
>status code or a pipe (depending on how complex the result structure
>is).  The interrupt button just kills the forked process.
>
>Rich.
>
>  
>
Yes, but the problem is that under the native windows port (see 
http://caml.inria.fr/pub/docs/manual-ocaml/manual035.html) :

"kill, pause not implemented (no inter-process signals in Windows)"


Julien Narboux

