Return-Path: <micha-1@fantasymail.de>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 0B1FAD460
	for <caml-list@yquem.inria.fr>; Tue,  8 Nov 2005 16:56:22 +0100 (CET)
Received: from mxintern.schlund.de (mxintern.kundenserver.de [212.227.126.201])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jA8FuLr0017502
	for <caml-list@yquem.inria.fr>; Tue, 8 Nov 2005 16:56:21 +0100
Received: from [172.17.36.11] (helo=schluck.use.schlund.de)
	by mxintern.kundenserver.de with esmtp (Exim 4.34)
	id 1EZVpb-0007Gb-Bs
	for caml-list@yquem.inria.fr; Tue, 08 Nov 2005 16:56:19 +0100
From: Michael Wohlwend <micha-1@fantasymail.de>
To: caml-list@yquem.inria.fr
Subject: Re: Ant:  [Caml-list] The "Objective" part of Objective Caml
Date: Tue, 8 Nov 2005 16:56:18 +0100
User-Agent: KMail/1.8.3
References: <20051107214110.46596.qmail@web26805.mail.ukl.yahoo.com> <Pine.LNX.4.63.0511080859590.20621@localhost.localdomain> <4370C761.9010800@gushee.net>
In-Reply-To: <4370C761.9010800@gushee.net>
X-Face: S)[vu%Bha1d&ej9GfwAq~7C}A,y[B.uS}+D6'hb~xPwsxymw$fnCOaMe<=?utf-8?q?*bnUajSBR=5Fm=3FR=0A=09?=@V3;iX8[A}z`.%pEQ1r7iZhN8#ktTCBQ}&mkx>=RH&l|l6\]NZI@
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200511081656.18864.micha-1@fantasymail.de>
X-Virus-Scanned: Symantec AntiVirus Scan Engine
X-Miltered: at nez-perce with ID 4370CAA5.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 allways:01 mutable:01 cheers:01 ...:98 modules:01 caml:02 objective:02 objective:02 seems:03 michael:07 michael:07 object:09 think:11 create:12 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.3


I think you can allways use Oo.copy to make a copy of an object. So if your 
singleton has mutable state you can create a  copy with Oo.copy and have two 
singletons ...
It seems modules are the way to go :-)

cheers,
 Michael

