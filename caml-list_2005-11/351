Return-Path: <skaller@users.sourceforge.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id D4ED3BB9C
	for <caml-list@yquem.inria.fr>; Thu, 17 Nov 2005 15:56:29 +0100 (CET)
Received: from ash25e.internode.on.net (ash25e.internode.on.net [203.16.214.182])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jAHEuRcl012576
	for <caml-list@yquem.inria.fr>; Thu, 17 Nov 2005 15:56:29 +0100
Received: from rosella (ppp7-104.lns1.syd7.internode.on.net [59.167.7.104])
	by ash25e.internode.on.net (8.12.9/8.12.6) with ESMTP id jAHEuGNh085517;
	Fri, 18 Nov 2005 01:26:17 +1030 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] Video/Audio codecs in ocaml
From: skaller <skaller@users.sourceforge.net>
To: Brian Hurt <bhurt@spnz.org>
Cc: Jonathan Roewen <jonathan.roewen@gmail.com>,
	caml-list@yquem.inria.fr
In-Reply-To: <Pine.LNX.4.63.0511170837120.24132@localhost.localdomain>
References: <ad8cfe7e0511162041t61242aafg218d84809948b7cd@mail.gmail.com>
	 <ad8cfe7e0511162116m75d9d812ib6aca11d2e1d8ca1@mail.gmail.com>
	 <Pine.LNX.4.63.0511170837120.24132@localhost.localdomain>
Content-Type: text/plain
Date: Fri, 18 Nov 2005 01:56:14 +1100
Message-Id: <1132239374.8992.1.camel@rosella>
Mime-Version: 1.0
X-Mailer: Evolution 2.4.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 437C9A1B.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 decoding:01 gcc:01 mappings:01 gcc:01 mile:98 wrote:01 sourceforge:01 opcodes:03 brian:04 processors:04 long:05 thu:05 john:08 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Thu, 2005-11-17 at 08:39 -0600, Brian Hurt wrote:

> No, it won't be.  Nor, I comment, will C.  To get sufficient performance 
> for real-time MPEG decoding, you need to code the inner loop (the 2DFFT) 
> using SSE or Altivec or similiar.

Of course you can do that with gcc easily, all the opcodes
on most processors have 'function' like mappings. See the
gcc man page .. there's a list a mile long.

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

