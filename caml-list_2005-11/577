Return-Path: <jon@ffconsultancy.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 7EBB7BBA7
	for <caml-list@yquem.inria.fr>; Mon, 28 Nov 2005 11:06:40 +0100 (CET)
Received: from pih-relay06.plus.net (fuzznuts.plus.net [212.159.14.133] (may be forged))
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jASA6dDt011921
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Mon, 28 Nov 2005 11:06:40 +0100
Received: from [80.229.56.224] (helo=chetara)
	 by pih-relay06.plus.net with esmtp (Exim) id 1EgfuB-0003JK-0z
	for caml-list@yquem.inria.fr; Mon, 28 Nov 2005 10:06:39 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Efficency of varient types
Date: Mon, 28 Nov 2005 10:01:31 +0000
User-Agent: KMail/1.8.2
References: <c62c8d860511251553k782c574cg37fa1116d6fc3064@mail.gmail.com> <53c655920511272324w1630fe89y@mail.gmail.com> <20051128.164900.41199864.garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <20051128.164900.41199864.garrigue@math.nagoya-u.ac.jp>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200511281001.32158.jon@ffconsultancy.com>
X-Miltered: at nez-perce with ID 438AD6AF.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 variants:01 integers:01 variants:01 ocaml:01 frog:98 wrote:01 polymorphic:01 polymorphic:01 jacques:01 native:02 caml:02 objective:02 types:02 garrigue:03 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Monday 28 November 2005 07:49, Jacques Garrigue wrote:
> More importantly, polymorphic variants are internally encoded as
> integers, so there is no representation cost for constant tags.

Is pattern matching over constant ordinary variants not more efficient than 
pattern matching over constant polymorphic variants when compiled to native 
code?

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

