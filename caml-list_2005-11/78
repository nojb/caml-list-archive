Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 6E984D461
	for <caml-list@yquem.inria.fr>; Thu,  3 Nov 2005 20:24:41 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jA3JOeYq016347
	for <caml-list@yquem.inria.fr>; Thu, 3 Nov 2005 20:24:41 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA18073 for <caml-list@pauillac.inria.fr>; Thu, 3 Nov 2005 20:24:40 +0100 (MET)
Received: from moutng.kundenserver.de (moutng.kundenserver.de [212.227.126.190])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jA3JOe1U007552
	for <caml-list@inria.fr>; Thu, 3 Nov 2005 20:24:40 +0100
Received: from [212.227.126.160] (helo=mrelayng.kundenserver.de)
	by moutng.kundenserver.de with esmtp (Exim 3.35 #1)
	id 1EXkhT-0001NZ-00; Thu, 03 Nov 2005 20:24:39 +0100
Received: from [84.58.139.142] (helo=gate.lan.gerd-stolpmann.de)
	by mrelayng.kundenserver.de with asmtp (Exim 3.35 #1)
	id 1EXkhT-0008M3-00; Thu, 03 Nov 2005 20:24:39 +0100
Received: from flakew.lan.gerd-stolpmann.de (flakew.lan.gerd-stolpmann.de [192.168.0.32])
	by gate.lan.gerd-stolpmann.de (Postfix) with ESMTP id CCDCAC05F;
	Thu,  3 Nov 2005 20:24:38 +0100 (CET)
Subject: Re: [Caml-list] Wikipedia
From: Gerd Stolpmann <info@gerd-stolpmann.de>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@inria.fr
In-Reply-To: <200511031726.59561.jon@ffconsultancy.com>
References: <200511031726.59561.jon@ffconsultancy.com>
Content-Type: text/plain
Date: Thu, 03 Nov 2005 20:24:37 +0100
Message-Id: <1131045878.4327.94.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.2.1.1 
Content-Transfer-Encoding: 7bit
X-Provags-ID: kundenserver.de abuse@kundenserver.de auth:a6865a839c0178d9aa0ce41878507ea2
X-Miltered: at nez-perce with ID 436A63F8.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 436A63F8.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 gerd:01 stolpmann:01 donnerstag:01 ocaml:01 ocaml:01 sml:01 haskell:01 productive:01 o'caml:01 o'caml:01 runtime:01 subtyping:01 compiler:01 gerd:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.3

Am Donnerstag, den 03.11.2005, 17:26 +0000 schrieb Jon Harrop:
> Wikipedia is a large, famous, on-line, reader-editable encyclopaedia with a 
> page dedicated to OCaml:
> 
>   http://en.wikipedia.org/wiki/Ocaml
> 
> The page gets a lot of hits and is, most likely, the first port of call by 
> many people when trying to learn about OCaml.
> 
> Unfortunately, the quality of this page is substantially worse than that of 
> the equivalent pages on SML, Haskell and so on. I have tried to improve the 
> page myself but most of my links have been removed following complaints to 
> admim by an anonymous, German-speaking, OCaml-using physicist with the IRC 
> nic "tf" and all of my corrections were removed by Mike Lin. My code examples 
> remain though.
> 
> So if anyone out there has a little spare time and wants to do something 
> productive, please try to improve this page.

The article focuses on the practical aspects of O'Caml, and this is IMHO
off-topic because it doesn't explain anything (e.g. look under
"Philosophy", you find some random thoughts about typing and speed). A
fanzine may do so, but not an encyclopedia.

In the first place, O'Caml is a research language where scientists
enhance ML in a sound way, and implement it such that it is practically
usable. The article mentions the "strict type system" several times, but
that remains mysterious and somehow ensures that there are no runtime
errors. Actually, there is a lot of theoretical work behind that. The
type system is actually a calculus that has some properties (e.g. there
is always a principal type if you don't use subtyping - which explains
something, in particular that the compiler can always deduce a type if
possible at all). At least, I would expect that such an article lists
the most important properties of type checking and evaluation (the
article does not even mention that O'Caml is an eager language).

If O'Caml has a revolutionary aspect, this can only be that the
developers do not allow that practical benefits destroy theoretical
soundness, and that O'Caml is nevertheless extremely well-suited for
practical problems at the same time. If that was the motto of the
article this would have my consent.

Gerd
-- 
------------------------------------------------------------
Gerd Stolpmann * Viktoriastr. 45 * 64293 Darmstadt * Germany 
gerd@gerd-stolpmann.de          http://www.gerd-stolpmann.de
Telefon: 06151/153855                  Telefax: 06151/997714
------------------------------------------------------------

