Return-Path: <skaller@users.sourceforge.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id E937ABB81
	for <caml-list@yquem.inria.fr>; Sat, 12 Nov 2005 15:45:55 +0100 (CET)
Received: from ash25e.internode.on.net (ash25e.internode.on.net [203.16.214.182])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jACEjrmC030312
	for <caml-list@yquem.inria.fr>; Sat, 12 Nov 2005 15:45:55 +0100
Received: from rosella (ppp7-104.lns1.syd7.internode.on.net [59.167.7.104])
	by ash25e.internode.on.net (8.12.9/8.12.6) with ESMTP id jACEjl3G014042;
	Sun, 13 Nov 2005 01:15:48 +1030 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] strange behavior with record type definition
From: skaller <skaller@users.sourceforge.net>
To: Michael Wohlwend <micha-1@fantasymail.de>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <200511121515.18429.micha-1@fantasymail.de>
References: <43752259.80800@aist.enst.fr> <4375DDFC.9060802@motion-twin.com>
	 <1131799890.18524.14.camel@rosella>
	 <200511121515.18429.micha-1@fantasymail.de>
Content-Type: text/plain
Date: Sun, 13 Nov 2005 01:45:46 +1100
Message-Id: <1131806746.22931.1.camel@rosella>
Mime-Version: 1.0
X-Mailer: Evolution 2.4.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 43760022.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 syntax:01 wrote:01 wrote:01 sourceforge:01 expression:01 exists:02 problem:05 quite:06 looks:07 strange:07 definition:07 michael:07 john:08 2005:91 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Sat, 2005-11-12 at 15:15 +0100, Michael Wohlwend wrote:
> On Saturday 12 November 2005 13:51, skaller wrote:
> > > > So that the type of an expression:
> > > >
> > > > 	{ x = 1; y = 2 }
> > > >
> > > > can be determined.
> 
> I would have no problem to write in these situations Type1.{ x = 1 } or  
> Type2.{x = 2} , I think there exists  camlp4 program for this.

This looks quite a nice solution to me (though I prefer builtin
syntax not camlp4). Anyone see any problems with it?


-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

