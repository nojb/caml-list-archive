Return-Path: <superluminal1905@yahoo.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id CDC2DD45F
	for <caml-list@yquem.inria.fr>; Tue,  1 Nov 2005 03:06:56 +0100 (CET)
Received: from web32209.mail.mud.yahoo.com (web32209.mail.mud.yahoo.com [68.142.207.140])
	by nez-perce.inria.fr (8.13.0/8.13.0) with SMTP id jA126t2i014054
	for <caml-list@yquem.inria.fr>; Tue, 1 Nov 2005 03:06:55 +0100
Received: (qmail 49023 invoked by uid 60001); 1 Nov 2005 02:06:55 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.com;
  h=Message-ID:Received:Date:From:Subject:To:MIME-Version:Content-Type:Content-Transfer-Encoding;
  b=sog3/BbA7zFzKj5AOYuyRLeieYtimK99GkUrqoSumJ/A13bV3H/KEBAbIjCIe9Dj4taXpok1NjzDZwO7LP9ysjLU0ylxousIlP5/UhXiHrv6mdVCxHBYU0ZRxVSw9EGRuEsk1odCpaMCzPP0P2yoRiSsMbY445JrsDSmXt1PnqU=  ;
Message-ID: <20051101020655.49021.qmail@web32209.mail.mud.yahoo.com>
Received: from [128.111.54.206] by web32209.mail.mud.yahoo.com via HTTP; Mon, 31 Oct 2005 18:06:54 PST
Date: Mon, 31 Oct 2005 18:06:54 -0800 (PST)
From: Dan Koppel <superluminal1905@yahoo.com>
Subject: problem calling C-function from Ocaml
To: caml-list@yquem.inria.fr
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="0-952138978-1130810814=:48997"
Content-Transfer-Encoding: 8bit
X-Miltered: at nez-perce with ID 4366CDBF.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 syntax:01 stub:01 stub:01 val:01 bytecode:01 argv:01 argv:01 mli:01 bytecode:01 printf:01 granularity:01 gettimeofday:01 syntax:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: ***
X-Spam-Status: No, score=3.1 required=5.0 tests=DNS_FROM_RFC_ABUSE,
	FORGED_YAHOO_RCVD,FROM_ENDS_IN_NUMS,HTML_30_40,HTML_MESSAGE 
	autolearn=disabled version=3.0.3

--0-952138978-1130810814=:48997
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit

Hello all,
  I'm trying to use a C-function called from inside an Ocaml function.  I believe I'm using the correct syntax, but I'm getting some strange results.  Therefore something I'm doing must be wrong.
 
Here's my C-function:
 
float myCTime(int dummy) {
        float factor = 1.0;
        return (factor*((float) clock()));
}
 
Here's how it's being called from Ocaml:
 
let dummy = 0 in
print_float (myCamlTime dummy); (* first call *)
print_newline ();
some code here which always takes exactly 30 seconds
print_float (myCamlTime dummy); (* second call *)
print_newline ();
 
The output I get is:
0.
3000.
 
So, it seems that the time returned is in units of "centiseconds".  However, when I change the variable "factor" in the C-function to 2.0, the output is exactly the same!  I know this function IS being called because when I replace the last line with "return 0.0", the output changes (both calls return the same number).
 
Here is the C "stub function" that I use:
 
value stub_myCTime(
        value _v_dummy)
{
  int dummy; /*in*/
  float _res;
  value _vres;
  dummy = Int_val(_v_dummy);
  _res = myCTime(dummy);
  _vres = copy_double(_res);
  return _vres;
}
value stub_myCTime_bytecode(value * argv, int argn)
{
  return stub_myCTime(argv[0]);
}
 
and here is the .ml/.mli file that I use:
 
external myCamlTime : int -> float
        = "stub_myCTime_bytecode" "stub_myCTime"
 
But something even more perplexing occurs when I insert a printf statement in the C-function.  The output of both calls is now "0.".  I am totally baffled.
 
Could a kind soul please tell me what, if anything, I may be doing wrong?  All I seek, actually, is an Ocaml function that returns CPU time used by this process with a very good accuracy and very small granularity.  The Unix function "gettimeofday" is good but it returns actual (clock) time, rather than CPU time.
 
Any help is greatly appreciated!
 
Sincerely, Dan
 
PS. Changing float => double in the C-function does not help.

		
---------------------------------
 Yahoo! FareChase - Search multiple travel sites in one click.  
--0-952138978-1130810814=:48997
Content-Type: text/html; charset=iso-8859-1
Content-Transfer-Encoding: 8bit

<DIV>Hello all,<BR>&nbsp; I'm trying to use a C-function called from inside an Ocaml function.&nbsp; I believe I'm using the correct syntax, but I'm getting some strange results.&nbsp; Therefore something I'm doing must be wrong.</DIV>
<DIV>&nbsp;</DIV>
<DIV>Here's my C-function:</DIV>
<DIV>&nbsp;</DIV>
<DIV>float myCTime(int dummy) {<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; float factor = 1.0;<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return (factor*((float) clock()));<BR>}</DIV>
<DIV>&nbsp;</DIV>
<DIV>Here's how it's being called from Ocaml:</DIV>
<DIV>&nbsp;</DIV>
<DIV>let dummy = 0 in<BR>print_float (myCamlTime dummy); (* first call *)<BR>print_newline ();<BR>some code here which always takes exactly 30 seconds<BR>print_float (myCamlTime dummy); (* second call *)<BR>print_newline ();</DIV>
<DIV>&nbsp;</DIV>
<DIV>The output I get is:</DIV>
<DIV>0.<BR>3000.</DIV>
<DIV>&nbsp;</DIV>
<DIV>So, it seems that the time returned is in units of "centiseconds".&nbsp; However, when I change the variable "factor" in the C-function to 2.0, the output is exactly the same!&nbsp; I know this function IS being called because when I replace the last line with "return 0.0", the output changes (both calls return the same number).</DIV>
<DIV>&nbsp;</DIV>
<DIV>Here is the C "stub function" that I use:</DIV>
<DIV>&nbsp;</DIV>
<DIV>value stub_myCTime(<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; value _v_dummy)<BR>{<BR>&nbsp; int dummy; /*in*/<BR>&nbsp; float _res;<BR>&nbsp; value _vres;</DIV>
<DIV>&nbsp; dummy = Int_val(_v_dummy);<BR>&nbsp; _res = myCTime(dummy);<BR>&nbsp; _vres = copy_double(_res);<BR>&nbsp; return _vres;<BR>}</DIV>
<DIV>value stub_myCTime_bytecode(value * argv, int argn)<BR>{<BR>&nbsp; return stub_myCTime(argv[0]);<BR>}</DIV>
<DIV>&nbsp;</DIV>
<DIV>and here is the .ml/.mli file that I use:</DIV>
<DIV>&nbsp;</DIV>
<DIV>external myCamlTime : int -&gt; float<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; = "stub_myCTime_bytecode" "stub_myCTime"</DIV>
<DIV>&nbsp;</DIV>
<DIV>But something even more perplexing occurs when I insert a printf statement in the C-function.&nbsp; The output of both calls is now "0.".&nbsp; I am totally baffled.</DIV>
<DIV>&nbsp;</DIV>
<DIV>Could a kind soul please tell me what, if anything, I may be doing wrong?&nbsp; All I seek, actually, is an Ocaml function that returns CPU time used by this process with a very good accuracy and very small granularity.&nbsp; The Unix function "gettimeofday" is good but it returns actual (clock) time, rather than CPU time.</DIV>
<DIV>&nbsp;</DIV>
<DIV>Any help is greatly appreciated!</DIV>
<DIV>&nbsp;</DIV>
<DIV>Sincerely, Dan</DIV>
<DIV>&nbsp;</DIV>
<DIV>PS. Changing float =&gt; double in the C-function does not help.</DIV><p>
		<hr size=1> <a href="http://us.lrd.yahoo.com/_ylc=X3oDMTFqODRtdXQ4BF9TAzMyOTc1MDIEX3MDOTY2ODgxNjkEcG9zAzEEc2VjA21haWwtZm9vdGVyBHNsawNmYw--/SIG=110oav78o/**http%3a//farechase.yahoo.com/">Yahoo! FareChase - Search multiple travel sites in one click.</a>

 

 
--0-952138978-1130810814=:48997--

