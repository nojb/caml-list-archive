Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 5CA6CBB9C
	for <caml-list@yquem.inria.fr>; Tue, 22 Nov 2005 11:01:44 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id jAMA1hPL002191
	for <caml-list@yquem.inria.fr>; Tue, 22 Nov 2005 11:01:44 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA05938 for <caml-list@pauillac.inria.fr>; Tue, 22 Nov 2005 11:01:42 +0100 (MET)
Received: from moldavcable.com (moldavcable.bendery.md [193.201.204.34])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jAMA1b35017055
	for <caml-list@inria.fr>; Tue, 22 Nov 2005 11:01:41 +0100
Received: from localhost (localhost.localdomain [127.0.0.1])
	by moldavcable.com (Postfix) with ESMTP id C5DD85753
	for <caml-list@inria.fr>; Tue, 22 Nov 2005 12:01:30 +0200 (EET)
Received: from moldavcable.com ([127.0.0.1])
 by localhost (mlc-gw-l.moldavcable.com [127.0.0.1]) (amavisd-new, port 10024)
 with ESMTP id 32199-03 for <caml-list@inria.fr>;
 Tue, 22 Nov 2005 12:01:30 +0200 (EET)
Received: from pm053.mlc.local (pm053 [192.168.50.53])
	by moldavcable.com (Postfix) with ESMTP id 1DBBA4F46
	for <caml-list@inria.fr>; Tue, 22 Nov 2005 12:01:30 +0200 (EET)
Date: Tue, 22 Nov 2005 12:01:46 +0200
From: dmitry grebeniuk <gds-mlsts@moldavcable.com>
X-Mailer: The Bat! (v3.5.25) Home
Reply-To: dmitry grebeniuk <gds-mlsts@moldavcable.com>
Organization: Moldavcable
X-Priority: 3 (Normal)
Message-ID: <397509111.20051122120146@moldavcable.com>
To: caml-list@inria.fr
Subject: approx. performance of memory operations
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: by amavisd-new at moldavcable.com
X-Miltered: at nez-perce with ID 4382EC88.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 4382EC81.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; grebeniuk:01 allocations:01 minor:01 mutable:01 heap:01 heap:01 dmitry:01 dmitry:01 objects:02 allocated:03 root:03 size:95 size:95 heaps:05 space:07 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.3

Hello.

  I have a question about performance of memory operations.
  Let's assume that I know everything about current memory allocations
and GC state: count of root values, total count and size of allocated
values, current size and free space in old and young heaps, settings
of GC and sizes of all memory objects in the questions below.
  How much time and space (approximately, in O-notation) will consume
operations:
1) minor GC,
2) major GC,
3) allocation on young heap (if it really happens on young heap),
4) allocation on old heap,
5) assigning value X to mutable field of some value Y (in cases when:
   (a. X and Y are both on young heap,
    b. X and Y are both on old heap,
    c. X is on young heap, Y is on old heap,
    d. X is on old heap, Y is on young heap)
6) other operations that can consume time and space.

-- 
WBR,
 dmitry                          mailto:gds-mlsts@moldavcable.com

