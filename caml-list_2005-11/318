Return-Path: <anObject@mac.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 091C8BB9C
	for <caml-list@yquem.inria.fr>; Wed, 16 Nov 2005 14:02:33 +0100 (CET)
Received: from smtpout.mac.com (smtpout.mac.com [17.250.248.71])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id jAGD2VK4029425
	for <caml-list@yquem.inria.fr>; Wed, 16 Nov 2005 14:02:32 +0100
Received: from mac.com (smtpin08-en2 [10.13.10.153])
	by smtpout.mac.com (Xserve/8.12.11/smtpout14/MantshX 4.0) with ESMTP id jAGD2V8R008315
	for <caml-list@yquem.inria.fr>; Wed, 16 Nov 2005 05:02:31 -0800 (PST)
Received: from CNCHZUR2497 ([138.188.100.224])
	(authenticated bits=0)
	by mac.com (Xserve/smtpin08/MantshX 4.0) with ESMTP id jAGD1rWV009969
	for <caml-list@yquem.inria.fr>; Wed, 16 Nov 2005 05:02:14 -0800 (PST)
Message-Id: <200511161302.jAGD1rWV009969@mac.com>
Received: from CNCHZUR2497
  by CNCHZUR2497 (PGP Universal service);
  Wed, 16 Nov 2005 14:02:04 +0100
X-PGP-Universal: processed;
	by CNCHZUR2497 on Wed, 16 Nov 2005 14:02:04 +0100
Reply-To: <anobject@mac.com>
From: "Harald Schmidt" <anObject@mac.com>
To: <caml-list@yquem.inria.fr>
Subject: Problem with network example of Ocaml book
Date: Wed, 16 Nov 2005 14:01:36 +0100
Organization: Harald Schmidt
MIME-Version: 1.0
X-Mailer: Microsoft Office Outlook, Build 11.0.6353
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2900.2180
Thread-index: AcXqrdoKUIr36oaeREqE09Bn13Q5BA==
X-MS-TNEF-Correlator: 000000006FFD76C8D249D91181C500B0D0EA40F107006E8A0646503AD91181BE00B0D0EA40F100000049F16100006F8A0646503AD91181BE00B0D0EA40F1000000B488330000
Content-Type: multipart/mixed;
	boundary="----=_NextPart_000_003C_01C5EAB6.508A3730"
X-Miltered: at concorde with ID 437B2DE7.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 hash:01 ocaml:01 cygwin:01 einval:01 gethostname:01 getsockname:01 failwith:01 val:01 abstr:01 abstr:01 val:01 einval:01 getsockname:01 unix:01 
X-Attachments: type="application/octet-stream" name="PGPexch.rtf" name="PGPexch.rtf" type="application/octet-stream" name="Schmidt,Harald (SQS Schweiz).vcf" name="Schmidt,Harald (SQS Schweiz).vcf" type="application/octet-stream" name="PGPexch.rtf.sig" name="PGPexch.rtf.sig" type="application/octet-stream" name="Schmidt,Harald (SQS Schweiz).vcf.sig" name="Schmidt,Harald (SQS Schweiz).vcf.sig" 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=MSGID_FROM_MTA_HEADER 
	autolearn=disabled version=3.0.3

This is a multi-part message in MIME format.

------=_NextPart_000_003C_01C5EAB6.508A3730
X-Content-PGP-Universal-Saved-Content-Transfer-Encoding: 7bit
X-Content-PGP-Universal-Saved-Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
Content-Type: text/plain;
	charset="us-ascii"

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Hi all,

I worked through the network example (page 629) of the the Ocaml book, and
don't know what's going wrong with the last statement. I am using Ocaml
under cygwin / WinXP.

I know, EINVAL means invalid argument, but as far as I read s_descr is used
as an abstract file descriptor. Is this wrong?

 
- ----------------------------------------------------------------------------
- -------------------------------------------------
let my_name = Unix.gethostname ();;
let my_entry_byname = Unix.gethostbyname my_name;;
let my_addr = my_entry_byname.Unix.h_addr_list.(0);;
let my_entry_byaddr = Unix.gethostbyaddr my_addr;;
let my_full_name = my_entry_byaddr.Unix.h_name;;
let s_descr = Unix.socket Unix.PF_INET Unix.SOCK_STREAM 0;;
let (addr_in, p_num) =
  match Unix.getsockname s_descr with
      Unix.ADDR_INET (a,n) -> (a,n)
    | _ -> failwith "not INET";;

# val my_entry_byname : Unix.host_entry =
  {Unix.h_name = "CNCHZUR2497"; Unix.h_aliases = [||];
   Unix.h_addrtype = Unix.PF_INET; Unix.h_addr_list = [|<abstr>; <abstr>|]}
# val my_addr : Unix.inet_addr = <abstr>
# val my_entry_byaddr : Unix.host_entry =
  {Unix.h_name = "CNCHZUR2497"; Unix.h_aliases = [||];
   Unix.h_addrtype = Unix.PF_INET; Unix.h_addr_list = [|<abstr>|]}
# val my_full_name : string = "CNCHZUR2497"
# val s_descr : Unix.file_descr = <abstr>
#       Exception: Unix.Unix_error (Unix.EINVAL, "getsockname", "").
# 
 
- ----------------------------------------------------------------------------
- -------------------------------------------------

By the way: where can I find the domain_of function of page 630. Here is the
code I used from the book:


Harald


-----BEGIN PGP SIGNATURE-----
Version: PGP Desktop 9.0.1 (Build 2185)

iQA/AwUBQ3stzKW2pktsM+Z9EQKiawCg33hDISm9FUVuJIKF2oFiQJLdhIsAoLE3
fOf8ojkhqDaz47CqeERZdO64
=AsBR
-----END PGP SIGNATURE-----

------=_NextPart_000_003C_01C5EAB6.508A3730
Content-Type: application/octet-stream;
	name="PGPexch.rtf"
Content-Disposition: attachment;
	filename="PGPexch.rtf"
Content-Transfer-Encoding: base64

e1xydGYxXGFuc2lcYW5zaWNwZzEyNTJcZGVmZjBcZGVmbGFuZzIwNTV7XGZvbnR0Ymx7XGYw
XGZzd2lzc1xmY2hhcnNldDAgQXJpYWw7fX0KDXtcKlxnZW5lcmF0b3IgUmljaGVkMjAgNS41
MC45OS4yMDA5O31cdmlld2tpbmQ0XHVjMVxwYXJkXGYwXGZzMjAgSGkgYWxsLFxwYXIKDVxw
YXIKDUkgd29ya2VkIHRocm91Z2ggdGhlIG5ldHdvcmsgZXhhbXBsZSAocGFnZSA2MjkpIG9m
IHRoZSB0aGUgT2NhbWwgYm9vaywgYW5kIGRvbid0IGtub3cgd2hhdCdzIGdvaW5nIHdyb25n
IHdpdGggdGhlIGxhc3Qgc3RhdGVtZW50LiBJIGFtIHVzaW5nIE9jYW1sIHVuZGVyIGN5Z3dp
biAvIFdpblhQLlxwYXIKDVxwYXIKDUkga25vdywgRUlOVkFMIG1lYW5zIGludmFsaWQgYXJn
dW1lbnQsIGJ1dCBhcyBmYXIgYXMgSSByZWFkIHNfZGVzY3IgaXMgdXNlZCBhcyBhbiBhYnN0
cmFjdCBmaWxlIGRlc2NyaXB0b3IuIElzIHRoaXMgd3Jvbmc/XHBhcgoNXHBhcgoNIC0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tXHBhcgoNbGV0IG15X25hbWUgPSBVbml4LmdldGhvc3RuYW1lICgpOztc
cGFyCg1sZXQgbXlfZW50cnlfYnluYW1lID0gVW5peC5nZXRob3N0YnluYW1lIG15X25hbWU7
O1xwYXIKDWxldCBteV9hZGRyID0gbXlfZW50cnlfYnluYW1lLlVuaXguaF9hZGRyX2xpc3Qu
KDApOztccGFyCg1sZXQgbXlfZW50cnlfYnlhZGRyID0gVW5peC5nZXRob3N0YnlhZGRyIG15
X2FkZHI7O1xwYXIKDWxldCBteV9mdWxsX25hbWUgPSBteV9lbnRyeV9ieWFkZHIuVW5peC5o
X25hbWU7O1xwYXIKDWxldCBzX2Rlc2NyID0gVW5peC5zb2NrZXQgVW5peC5QRl9JTkVUIFVu
aXguU09DS19TVFJFQU0gMDs7XHBhcgoNbGV0IChhZGRyX2luLCBwX251bSkgPVxwYXIKDSAg
bWF0Y2ggVW5peC5nZXRzb2NrbmFtZSBzX2Rlc2NyIHdpdGhccGFyCg0gICAgICBVbml4LkFE
RFJfSU5FVCAoYSxuKSAtPiAoYSxuKVxwYXIKDSAgICB8IF8gLT4gZmFpbHdpdGggIm5vdCBJ
TkVUIjs7XHBhcgoNXHBhcgoNIyB2YWwgbXlfZW50cnlfYnluYW1lIDogVW5peC5ob3N0X2Vu
dHJ5ID1ccGFyCg0gIFx7VW5peC5oX25hbWUgPSAiQ05DSFpVUjI0OTciOyBVbml4LmhfYWxp
YXNlcyA9IFt8fF07XHBhcgoNICAgVW5peC5oX2FkZHJ0eXBlID0gVW5peC5QRl9JTkVUOyBV
bml4LmhfYWRkcl9saXN0ID0gW3w8YWJzdHI+OyA8YWJzdHI+fF1cfVxwYXIKDSMgdmFsIG15
X2FkZHIgOiBVbml4LmluZXRfYWRkciA9IDxhYnN0cj5ccGFyCg0jIHZhbCBteV9lbnRyeV9i
eWFkZHIgOiBVbml4Lmhvc3RfZW50cnkgPVxwYXIKDSAgXHtVbml4LmhfbmFtZSA9ICJDTkNI
WlVSMjQ5NyI7IFVuaXguaF9hbGlhc2VzID0gW3x8XTtccGFyCg0gICBVbml4LmhfYWRkcnR5
cGUgPSBVbml4LlBGX0lORVQ7IFVuaXguaF9hZGRyX2xpc3QgPSBbfDxhYnN0cj58XVx9XHBh
cgoNIyB2YWwgbXlfZnVsbF9uYW1lIDogc3RyaW5nID0gIkNOQ0haVVIyNDk3IlxwYXIKDSMg
dmFsIHNfZGVzY3IgOiBVbml4LmZpbGVfZGVzY3IgPSA8YWJzdHI+XHBhcgoNIyAgICAgICBF
eGNlcHRpb246IFVuaXguVW5peF9lcnJvciAoVW5peC5FSU5WQUwsICJnZXRzb2NrbmFtZSIs
ICIiKS5ccGFyCg0jIFxwYXIKDVxwYXJkICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxwYXIKDVxwYXJk
XHBhcgoNXHBhcmQgQnkgdGhlIHdheTogd2hlcmUgY2FuIEkgZmluZCB0aGUgZG9tYWluX29m
IGZ1bmN0aW9uIG9mIHBhZ2UgNjMwLiBIZXJlIGlzIHRoZSBjb2RlIEkgdXNlZCBmcm9tIHRo
ZSBib29rOlxwYXIKDVxwYXJkXHBhcgoNXHBhcgoNSGFyYWxkXHBhcgoNXHBhcgoNfQoNAA==
------=_NextPart_000_003C_01C5EAB6.508A3730
Content-Type: application/octet-stream;
	name="Schmidt,Harald (SQS Schweiz).vcf"
Content-Disposition: attachment;
	filename="Schmidt,Harald (SQS Schweiz).vcf"
Content-Transfer-Encoding: base64

QkVHSU46VkNBUkQNClZFUlNJT046Mi4xDQpOOlNjaG1pZHQ7SGFyYWxkDQpGTjpTY2htaWR0
LEhhcmFsZCAoU1FTIFNjaHdlaXopDQpPUkc6U1FTIFNjaHdlaXogQUc7U1FTIFNjaHdlaXoN
ClRFTDtXT1JLO1ZPSUNFOis0MSAoMCkgNDMgMjEwOSAzMDgNCkFEUjtXT1JLOjta/HJpY2gN
CkxBQkVMO1dPUks6WvxyaWNoDQpFTUFJTDtQUkVGO0lOVEVSTkVUOkhhcmFsZC5TY2htaWR0
QHNxcy1ncm91cC5jaA0KUkVWOjIwMDUxMDAzVDEzNDEyOFoNCkVORDpWQ0FSRA0K
------=_NextPart_000_003C_01C5EAB6.508A3730
Content-Type: application/octet-stream;
	name="PGPexch.rtf.sig"
Content-Disposition: attachment;
	filename="PGPexch.rtf.sig"
Content-Transfer-Encoding: base64

iQA/AwUAQ3stzKW2pktsM+Z9EQIeIgCeNBV4zutPwesvKySPJv0aJQGOBIAAnRgCQzCVavYW
sXSGOtVzhP/S7W5g
------=_NextPart_000_003C_01C5EAB6.508A3730
Content-Type: application/octet-stream;
	name="Schmidt,Harald (SQS Schweiz).vcf.sig"
Content-Disposition: attachment;
	filename="Schmidt,Harald (SQS Schweiz).vcf.sig"
Content-Transfer-Encoding: base64

iQA/AwUAQ3stzKW2pktsM+Z9EQKsUQCgi3xFMr5keB5URt1zDRfN4vxlywAAoMexJIJ5Bw7Y
P+vtweFqH8OqkBnI
------=_NextPart_000_003C_01C5EAB6.508A3730--

