Return-Path: <ober.14@osu.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 9C920BC69
	for <caml-list@yquem.inria.fr>; Wed, 26 Dec 2007 18:54:52 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aq4HAIAkckdDWxLC/2dsb2JhbACBV6dp
X-IronPort-AV: E=Sophos;i="4.24,209,1196636400"; 
   d="scan'208";a="6049838"
Received: from ip67-91-18-194.z18-91-67.customer.algx.net (HELO server1.bertec.net) ([67.91.18.194])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 26 Dec 2007 18:54:49 +0100
Received: from kuba.bertec.net (kuba.bertec.net [192.168.2.16])
	by server1.bertec.net (Postfix) with ESMTP id 683C1CDFB7
	for <caml-list@yquem.inria.fr>; Wed, 26 Dec 2007 12:54:49 -0500 (EST)
From: Kuba Ober <ober.14@osu.edu>
To: caml-list@yquem.inria.fr
Subject: Re: Re : Re: [Caml-list] Re: MinGW port w/o Cygwin?
Date: Wed, 26 Dec 2007 12:54:44 -0500
User-Agent: KMail/1.9.6 (enterprise 0.20071123.740460)
References: <200712200930.29585.ober.14@osu.edu> <476E7CA1.6000501@dravanet.hu> <666572260712230833j79ea3f41vc3649b6b3e17940f@mail.gmail.com>
In-Reply-To: <666572260712230833j79ea3f41vc3649b6b3e17940f@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200712261254.44486.ober.14@osu.edu>
X-Spam: no; 0.00; mingw:01 cygwin:01 ocaml:01 cygwin:01 mingw:01 ocaml:01 compiler:01 compiler:01 lacks:01 flags:01 separators:01 iirc:01 cheers:01 2007,:98 20,:98 

On Sunday 23 December 2007, Adrien wrote:
> 2007/12/20, Kuba Ober <ober.14@osu.edu>:
> > I guess that Ocaml maintainers should just drop that Cygwin requirement,
> > and tweak their build process to work "out of the box" with MSYS/MinGW.
>
> You shouldn't see cygwin as a _requirement_.
> Ocaml installation from source (let the binary distributions be a
> special case) use C. If there is no c compiler installed as it is
> under all windows installations (I mean right after setup is
> completed) ocaml simply can't be installed ; the problem is not with
> ocaml or cygwin but with windows. Cygwin is not a fancy requirement
> just one of the few ways to get a c compiler under windows.
>
> Also mingw without cygwin still lacks a lot of things. Capabilities
> are there but it seems header files have not been updated in ages and
> linker flags need to be different (you will often need -lws2_32 for
> many C apps especially).

THe right way is to update mingw headers, submit to the maintainers, and go 
from there. That's the OSS way.

> Anyway, the result is a big headache for the developper. I perfectly
> understand the ocaml team is not willing to make a complete mingw/msys
> port ; it's such a mess.

It's the only sane way to go. THere's no technical reason to require a unix 
environment to build ocaml. Big applications build on Windows just fine...

> So there would be msvc, cygwin, cygwin/mingw, msys/mingw with
> different configuration files for each. While such a port would be
> easy to create it wouldn't be wise to create it imho ; it wouldn't
> help maintaining and would create bugs along with more work for the
> ocaml team.

Supporting Cygwin at all is a waste IMHO. Either you run Unix or Windows, 
choose one and stick with it...

> And then one could add a SFU port (Services For Unix) which lets you
> compile ocaml without problem except that it works so well ocaml
> thinks it is running under unix and uses forward-slashes as path
> separators. (everything that ./configure can enable is enabled)

IIRC Windows accepts forward slashes everywhere just fine.

> compile with mingw just to remember last time I tried I spent two
> hours. I then used sfu, cd'ed in the source directory, ./configure,
> make, strip and within 90 seconds my rsync build was ready to
> download. SFU is free though not free as in free speech, but when
> you've spent hours on msys/mingw, you can accept anything and be
> really happy with it. *)

Well, all it means is that Ocaml wasn't designed to build on Windows, that's 
it. MSYS provides what reasonably can be provided without a Unix emulation 
layer. THe fact that Oaml uses a Unix-centric build system and whatnot makes 
things the way they are. The windows build could dispense with configure and 
whatnot.

Cheers, Kuba

