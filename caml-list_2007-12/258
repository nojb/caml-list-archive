Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id EBED6BC69
	for <caml-list@yquem.inria.fr>; Sat, 29 Dec 2007 00:46:44 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ao8CAJ0ZdUfUnw6GhWdsb2JhbACCNY1YAQEBCAQGBwgTB5wv
X-IronPort-AV: E=Sophos;i="4.24,218,1196636400"; 
   d="scan'208";a="6118148"
Received: from pih-relay08.plus.net ([212.159.14.134])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 29 Dec 2007 00:46:44 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay08.plus.net with esmtp (Exim) id 1J8OuZ-0001wQ-TM
	for caml-list@yquem.inria.fr; Fri, 28 Dec 2007 23:46:44 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: "OCaml gives you only monomorphic methods in classes."
Date: Fri, 28 Dec 2007 23:37:23 +0000
User-Agent: KMail/1.9.7
MIME-Version: 1.0
Content-Disposition: inline
Content-Type: text/plain;
  charset="us-ascii"
Content-Transfer-Encoding: 7bit
Message-Id: <200712282337.23952.jon@ffconsultancy.com>
X-Spam: no; 0.00; ocaml:01 milner:01 inference:01 ocaml:01 haskell:01 overloading:01 polymorphism:01 odersky:01 frog:98 integer:01 incompatible:01 monomorphic:01 monomorphic:01 languages:03 languages:03 


I just read this quote and I do not understand what it means:

  "In particular, the Hindley/Milner style of type inference used in languages 
such as OCaml or Haskell is incompatible with lots of assumptions of OO 
languages. One incompatibility is with overloading. That's why OCaml does not 
let you write + for both integer and floating point addition. Another 
incompatibility is with higher order polymorphism. That's why OCaml gives you 
only monomorphic methods in classes." - Martin Odersky

In what way must methods be monomorphic in OCaml classes?

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

