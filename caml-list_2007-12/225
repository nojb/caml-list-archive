Return-Path: <zoltan.s.mark@dravanet.hu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.3 required=5.0 tests=AWL,DNS_FROM_RFC_POST 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 0D19ABC69
	for <caml-list@yquem.inria.fr>; Sun, 23 Dec 2007 19:00:31 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAACsxbkfUKEUHfGdsb2JhbACBV44zAQEJCimBFJcL
X-IronPort-AV: E=Sophos;i="4.24,201,1196636400"; 
   d="scan'208";a="5481339"
Received: from mail.dravanet.hu (HELO arwen.dravanet.hu) ([212.40.69.7])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 23 Dec 2007 19:00:30 +0100
Received: from arwen-vbmailshield (localhost.localdomain [127.0.0.1])
	by arwen-vbmailshield (Postfix) with SMTP id 29981881
	for <caml-list@yquem.inria.fr>; Sun, 23 Dec 2007 19:00:30 +0100 (CET)
Received: from arwen.dravanet.hu ([127.0.0.1])
	by arwen ([192.168.69.23])
	with SMTP (gateway) id A0026119A82; Sun, 23 Dec 2007 19:00:30 +0100
Received: from [127.0.0.1] (unknown [212.40.85.9])
	by arwen.dravanet.hu (Postfix) with ESMTP id 6EF2A881
	for <caml-list@yquem.inria.fr>; Sun, 23 Dec 2007 19:00:29 +0100 (CET)
Message-ID: <476EA23B.3020001@dravanet.hu>
Date: Sun, 23 Dec 2007 19:00:27 +0100
From: =?ISO-8859-1?Q?=22M=E1rk_S=2E_Zolt=E1n=22?= <zoltan.s.mark@dravanet.hu>
User-Agent: Thunderbird 2.0.0.9 (Windows/20071031)
MIME-Version: 1.0
To: Caml Mailing List <caml-list@yquem.inria.fr>
Subject: Re: [Caml-list] Type visibility limitation in recursive modules
References: <476E6FB7.6040100@dravanet.hu> <200712231220.56613.peng.zang@gmail.com>
In-Reply-To: <200712231220.56613.peng.zang@gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Antivirus: avast! (VPS 071215-0, 12/15/2007), Outbound message
X-Antivirus-Status: Clean
X-VBMailShield: version 1.57.6 at arwen - template: default
X-Spam: no; 0.00; recursive:01 abstracting:01 sig:01 struct:01 sig:01 val:01 struct:01 val:01 bool:01 showstopper:01 bug:01 bug:01 pointer:01 peng:98 peng:98 

Peng Zang wrote:
> I do not know if this is the intended behavior.  It may very well be.  
> However, it appears we can easily work around this by simply abstracting the 
> type later.  Eg.
>
> module rec Aleph :
>     sig
>         type t = Tag of Beth.t
>     end =
>     struct
>         type t = Tag of Beth.t
>     end
> and Beth :
>     sig
>         type t = Aleph.t list
>         val scandalous : Aleph.t
>     end =
>     struct
>         type t = Aleph.t list
>         let scandalous = Aleph.Tag((* HERE BE DRAGONS *) [])
>     end
>
> module Beth = (Beth:sig type t val scandalous : Aleph.t end)
>
>
> # Beth.scandalous;;
> - - : Aleph.t = Aleph.Tag []
> # Aleph.Tag [];;
> - - : Aleph.t = Aleph.Tag []
> # (Aleph.Tag []) = Beth.scandalous;;
> - - : bool = true
>
> Happy Holidays,
>
> Peng
>
>   
Agreed, this does work for the code on the outside, but I wanted to hide 
the actual gory details of Beth.t from the implementation of Aleph too. 
The real-life Aleph contains a huge mess of inherited code (inherited 
from myself, but I wrote it years ago), plus some serious potential for 
quasi-macaronic growth. I wanted to make sure that none of that code 
makes assumptions about Beth.t, because the choice of Beth.t could 
easily have serious performance implications, and I would like to 
isolate the rest of the code from the impact of Beth.t turning overnight 
into an Aleph.t array or worse. That can only be done if the 
implementation of Beth is the only place where the details of Beth.t are 
known.

This is not exactly a showstopper issue for me, though. The reason I 
posted it was that (1) I suspect this is a bug (more likely a design 
bug, not an implementation one), and I like finding bugs, or (2) this is 
a pointer into something I really should understand about modules, and 
with any help I will understand it soon, as more replies come in.

Happy Holidays,

      Z-

