Return-Path: <erickt@dslextreme.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id AF126BC69
	for <caml-list@yquem.inria.fr>; Wed,  5 Dec 2007 03:20:28 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAJ+ZVUdCM8demGdsb2JhbACPUAIBAQcEBic
X-IronPort-AV: E=Sophos;i="4.23,251,1194217200"; 
   d="scan'208";a="6484474"
Received: from mail9.dslextreme.com ([66.51.199.94])
  by mail3-smtp-sop.national.inria.fr with SMTP; 05 Dec 2007 03:20:27 +0100
Received: (qmail 6520 invoked from network); 5 Dec 2007 02:20:20 -0000
Received: from unknown (HELO foobears.dynamic.pixar.com) (erickt@138.72.136.25)
	by mail9.dslextreme.com with (RC4-MD5 encrypted) SMTP; Tue, 04 Dec 2007 18:20:20 -0800
Message-ID: <47560AC4.1020607@dslextreme.com>
Date: Tue, 04 Dec 2007 18:19:48 -0800
From: Erick Tryzelaar <erickt@dslextreme.com>
User-Agent: Thunderbird 2.0.0.9 (Macintosh/20071031)
MIME-Version: 1.0
To: Ashish Agarwal <agarwal1975@gmail.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] error building native code with ocamlbuild
References: <d8be5ae20712031256i214a3dccu1bbcdd641360f7f@mail.gmail.com>	 <4754DEF5.20403@dslextreme.com> <d8be5ae20712040731n53e3feffocdbc7a87fefbf169@mail.gmail.com>
In-Reply-To: <d8be5ae20712040731n53e3feffocdbc7a87fefbf169@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; wiki:01 foo:01 ocaml:01 wrote:01 caml-list:01 nums:01 native:03 somewhere:06 libraries:11 error:12 built:12 agarwal:13 but:14 str:15 nice:16 

Ashish Agarwal wrote:
> Thanks. Is there a list of tags somewhere? I cannot find them in the 
> user guide or wiki.
>
I don't believe so, but that'd be nice. From what I understand, you can 
just do "use_foo" with all of the built in ocaml libraries, like str, 
nums, and etc.

