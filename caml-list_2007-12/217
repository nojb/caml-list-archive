Return-Path: <francois.rouaix@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=AWL,HTML_MESSAGE,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 99B90BC6B
	for <caml-list@yquem.inria.fr>; Sun, 23 Dec 2007 03:49:59 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAKZbbUfAXQInh2dsb2JhbACCOzSNGwEBAQgKKZkS
X-IronPort-AV: E=Sophos;i="4.24,199,1196636400"; 
   d="scan'208";a="7191334"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 23 Dec 2007 03:49:59 +0100
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id lBN2nwAt030104
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Sun, 23 Dec 2007 03:49:58 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAGpbbUfRVZKzkmdsb2JhbACCOzSNGwEBAQEHBAQpmRQ
X-IronPort-AV: E=Sophos;i="4.24,199,1196636400"; 
   d="scan'208";a="20642913"
Received: from wa-out-1112.google.com ([209.85.146.179])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 23 Dec 2007 03:49:57 +0100
Received: by wa-out-1112.google.com with SMTP id m34so1794136wag.9
        for <caml-list@inria.fr>; Sat, 22 Dec 2007 18:49:56 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
        bh=qjbAd3+bqalaIzKiqgYKqZiW4gdpucL4Bs6CWx17qKg=;
        b=pmQVqPtCuTTXrakg2su/GWqfyURY+m4zb10weCjcs28G15f5bRfsvqYt5cOGwI6yW4BU9rn5VglhqQEECdFBxFGdDRbL65UVpzKFBfOyDWJsgjlWqE790+oiHhToLXvOIBjzsb8wSAssFe9g2qXFS9RnIDWZ/iZiXeWKAgJIpM0=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:in-reply-to:mime-version:content-type:references;
        b=iIlTRxbBfSnssick4qfVEfn7qpplsGJ7of2Hv11TFZ7b1Sxx02r0tbJLKdmk7d/CljjcXWEzAckhAUlhdwxmxAk0Gtogyi/NLpcqSyJe4x8NxEs7MWOaAdvaikkXOumdJqvpfJEj6jElSV/j/r5Fi1FF75DwCayMZ3sS/HGQJ7M=
Received: by 10.115.48.12 with SMTP id a12mr1860801wak.105.1198378195237;
        Sat, 22 Dec 2007 18:49:55 -0800 (PST)
Received: by 10.114.167.6 with HTTP; Sat, 22 Dec 2007 18:49:55 -0800 (PST)
Message-ID: <f2d6cc680712221849l7e334c9fm5861f725e225551f@mail.gmail.com>
Date: Sat, 22 Dec 2007 18:49:55 -0800
From: "Francois Rouaix" <francois.rouaix@gmail.com>
To: caml-list@inria.fr
Subject: Re: Dynamic linking on MacOSX & bus error
In-Reply-To: <f2d6cc680712210715r245e02b4qfbef6181cdeb5d76@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_4575_17348527.1198378195227"
References: <f2d6cc680712210715r245e02b4qfbef6181cdeb5d76@mail.gmail.com>
X-Miltered: at concorde with ID 476DCCD6.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; rtfm:01 ocamlmklib:01 foo:01 foo:01 trivial:01 -custom:01 ocaml:01 camlparam:01 alloc:01 camlreturn:01 val:01 prerr:01 endline:01 gcc:01 ocamlc:01 

------=_Part_4575_17348527.1198378195227
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Replying to myself: RTFM.ocamlmklib actually has a "-framework foo" option
for MacOSX, and it works. What I was doing instead "-ccopt -framework -ccopt
foo" doesn't work.
Solved.


On Dec 21, 2007 7:15 AM, Francois Rouaix <francois.rouaix@gmail.com> wrote:

> This is a very MacOSX specific question I'm afraid - apologies to
> platform-independent readers.
> I'm perplexed by the following: the same simple code invoking an external
> trivial Cocoa method works fine when linked with -custom and crashes when
> not. Anyone has a clue of what I am doing wrong? This is ocaml 3.09.3 and
> a G4 PB under 10.4.11 (Tiger).
>
> $ cat foo.m
> #define CAML_NAME_SPACE
> #include <caml/callback.h>
> #include <caml/memory.h>
>
> #import <Foundation/NSAutoreleasePool.h>
>
> static NSAutoreleasePool *arp =nil;
>
> value caml_init_default(value unit)
> {
>   CAMLparam0();
>   if (nil == arp) {
>     arp = [[NSAutoreleasePool alloc] init];
>   }
>   CAMLreturn(Val_int(0));
> }
>
> $ cat foo.ml
> external init : unit -> unit = "caml_init_default"
> let () = init()
> let f() =
>   prerr_endline "Hello World!"
>
> $ cat main.ml
> let _ = Foo.f()
>
> $ cat build
> rm -f foo.o foo.cm* main.cm*
> gcc -c -g -I$(ocamlc -where) foo.m
> ocamlmklib -o foo foo.ml foo.o -ccopt -g -ccopt -framework -ccopt
> Foundation -lobjc
> ocamlc -c main.ml
> ocamlc -verbose -custom -o main-custom -g -I . foo.cma main.cmo
> ocamlc -verbose -o main-dyn -g -I . foo.cma main.cmo
>
> $ bash build
> + gcc  -o 'main-custom' -I'/usr/local/lib/ocaml' -g -framework Foundation
> /tmp/camlprim5918c8.c  '-L.' '-L/usr/local/lib/ocaml' '-lfoo' '-lobjc'
> -lcamlrun -lcurses -lpthread
>
> $ ./main-custom
> Hello World!
>
> $ ./main-dyn
> Bus error
>
> Program received signal EXC_BAD_ACCESS, Could not access memory.
> Reason: KERN_PROTECTION_FAILURE at address: 0x00000020
> 0x90a410f8 in objc_msgSend ()
> (gdb) bt
> #0  0x90a410f8 in objc_msgSend ()
> #1  0x00093f1c in caml_init_default (unit=1) at foo.m:13
> #2  0x00018554 in caml_interprete ()
> #3  0x000123fc in caml_main ()
> #4  0x00002684 in main ()
>
>
> Somehow NSautoreleasePool is nil?
> --f
>
>

------=_Part_4575_17348527.1198378195227
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Replying to myself: RTFM.<div>ocamlmklib actually has a &quot;-framework foo&quot; option for MacOSX, and it works. What I was doing instead &quot;-ccopt -framework -ccopt foo&quot; doesn&#39;t work.</div><div>Solved.</div>
<div><br class="webkit-block-placeholder"></div><div><br><div class="gmail_quote">On Dec 21, 2007 7:15 AM, Francois Rouaix &lt;<a href="mailto:francois.rouaix@gmail.com">francois.rouaix@gmail.com</a>&gt; wrote:<br><blockquote class="gmail_quote" style="margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex;">
<div>This is a very MacOSX specific question I&#39;m afraid - apologies to platform-independent readers.</div><div>I&#39;m perplexed by the following: the same simple code invoking an external trivial Cocoa method works fine when linked with -custom and crashes when not.&nbsp;Anyone has a clue of what I am doing wrong? This is ocaml 
3.09.3 and a G4 PB under 10.4.11 (Tiger).</div><div><br></div><div><div>$ cat foo.m</div><div>#define CAML_NAME_SPACE</div><div>#include &lt;caml/callback.h&gt;</div><div>#include &lt;caml/memory.h&gt;
</div><div><br></div><div>#import &lt;Foundation/NSAutoreleasePool.h&gt;</div><div><br></div><div>static NSAutoreleasePool *arp =nil;</div><div><br>
</div><div>value caml_init_default(value unit)</div><div>{</div><div>&nbsp;&nbsp;CAMLparam0();</div><div>&nbsp;&nbsp;if (nil == arp) {</div><div>&nbsp;&nbsp; &nbsp;arp = [[NSAutoreleasePool alloc] init];</div><div>&nbsp;&nbsp;}</div><div>&nbsp;&nbsp;CAMLreturn(Val_int(0));</div>

<div>}</div><div><br></div><div>$ cat <a href="http://foo.ml" target="_blank">foo.ml</a></div><div><div>external init : unit -&gt; unit = &quot;caml_init_default&quot;</div><div>let () = init()</div><div>
let f() =&nbsp;</div><div>&nbsp;&nbsp;prerr_endline &quot;Hello World!&quot;</div><div><br></div><div>$ cat <a href="http://main.ml" target="_blank">main.ml</a></div><div><div>let _ = Foo.f()</div><div><br>
</div><div><div>$ cat build</div><div>rm -f foo.o foo.cm* main.cm*</div><div>gcc -c -g -I$(ocamlc -where) foo.m</div><div>ocamlmklib -o foo <a href="http://foo.ml" target="_blank">foo.ml</a> foo.o -ccopt -g -ccopt -framework -ccopt Foundation -lobjc
</div><div>ocamlc -c <a href="http://main.ml" target="_blank">main.ml</a></div><div>ocamlc -verbose -custom -o main-custom -g -I . foo.cma main.cmo</div><div>ocamlc -verbose -o main-dyn -g -I . foo.cma main.cmo</div><div>
<br>
</div><div><div>$ bash build</div><div>+ gcc &nbsp;-o &#39;main-custom&#39; -I&#39;/usr/local/lib/ocaml&#39; -g -framework Foundation /tmp/camlprim5918c8.c &nbsp;&#39;-L.&#39; &#39;-L/usr/local/lib/ocaml&#39; &#39;-lfoo&#39; &#39;-lobjc&#39; -lcamlrun -lcurses -lpthread
</div><div><br></div><div>$ ./main-custom</div><div>Hello World!</div><div><br></div><div><div>$ ./main-dyn&nbsp;</div><div>Bus error</div><div><br>
</div><div><div>Program received signal EXC_BAD_ACCESS, Could not access memory.</div><div>Reason: KERN_PROTECTION_FAILURE at address: 0x00000020</div><div>0x90a410f8 in objc_msgSend ()</div><div>(gdb) bt</div><div>#0 &nbsp;0x90a410f8 in objc_msgSend ()
</div><div>#1 &nbsp;0x00093f1c in caml_init_default (unit=1) at foo.m:13</div><div>#2 &nbsp;0x00018554 in caml_interprete ()</div><div>#3 &nbsp;0x000123fc in caml_main ()</div><div>#4 &nbsp;0x00002684 in main ()</div><div><br>
</div><div><br></div><div>Somehow NSautoreleasePool is nil?</div><div>--f</div><div><br></div></div></div></div></div></div></div></div>
</blockquote></div><br></div>

------=_Part_4575_17348527.1198378195227--

