Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id C6D84BC69
	for <caml-list@yquem.inria.fr>; Sat, 29 Dec 2007 08:20:52 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ah4FAGeEdUfUnw6FdWdsb2JhbACCNY1dAQoEBg8TB5wC
X-IronPort-AV: E=Sophos;i="4.24,219,1196636400"; 
   d="scan'208";a="7310270"
Received: from pih-relay06.plus.net ([212.159.14.133])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 29 Dec 2007 08:20:52 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay06.plus.net with esmtp (Exim) id 1J8W03-0004g6-CI
	for caml-list@yquem.inria.fr; Sat, 29 Dec 2007 07:20:51 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] "OCaml gives you only monomorphic methods in classes."
Date: Sat, 29 Dec 2007 07:11:33 +0000
User-Agent: KMail/1.9.7
References: <200712282337.23952.jon@ffconsultancy.com> <Pine.LNX.4.58.0712282223460.10344@shell2.speakeasy.net>
In-Reply-To: <Pine.LNX.4.58.0712282223460.10344@shell2.speakeasy.net>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200712290711.34066.jon@ffconsultancy.com>
X-Spam: no; 0.00; ocaml:01 touted:01 ocaml:01 olabl:01 statically:01 bindings:01 torn:98 smoke:98 frog:98 polymorphic:01 polymorphic:01 wrote:01 caml-list:01 caml-list:01 monomorphic:01 

On Saturday 29 December 2007 06:30:48 brogoff wrote:
> What's the date that quote was made?

Yesterday, by the professor heading the group at Lausanne who are developing 
one of the most widely touted modern statically-typed functional programming 
languages (Scala).

> It was probably made before polymorphic methods were added to OCaml from
> OLabl. 

Looks like polymorphic methods have been in OCaml for 5 years now:

http://caml.inria.fr/pub/ml-archives/caml-list/2002/07/0efd71474f4d41a39e4250aeddcf08e5.en.html

This is really ossifying my impression that the Scala developers (let alone 
the community) are not aware of the current state-of-the-art in statically 
typed functional programming languages despite the fact that their sole 
purpose is to improve upon them.

Unfortunately, this is rubbing off on the Scala community who keep publishing 
articles making silly claims like "Scala is the first impure functional 
programming language".

I wouldn't mind this so much whilst learning the language if it weren't for 
the fact that it is sorely lacking in so many respects.

I'm currently torn between devoting time to learning Scala or to a new system 
based upon LLVM and targetted at technical users (e.g. high performance 
numerics), commerce (e.g. DLLs) and visualization (e.g. Smoke and OpenGL 2). 
Things like this keep pushing me towards LLVM. Well, this and the fact that 
Gordon's bindings make LLVM so much damn fun. ;-)

Happy New Year,
-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

