Return-Path: <forum@x9c.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.1 required=5.0 tests=AWL,SPF_SOFTFAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 65314BC69
	for <caml-list@yquem.inria.fr>; Thu,  6 Dec 2007 22:31:10 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAC74V0dbeR7Snmdsb2JhbACPVwEBAQEHBAYp
X-IronPort-AV: E=Sophos;i="4.23,263,1194217200"; 
   d="scan'208";a="5357300"
Received: from 27.mail-out.ovh.net ([91.121.30.210])
  by mail1-smtp-roc.national.inria.fr with SMTP; 06 Dec 2007 22:31:07 +0100
Received: (qmail 20339 invoked by uid 503); 6 Dec 2007 21:45:58 -0000
Received: from gw2.ovh.net (HELO mail170.ha.ovh.net) (213.251.189.202)
  by 27.mail-out.ovh.net with SMTP; 6 Dec 2007 21:45:58 -0000
Received: from b0.ovh.net (HELO queue-out) (213.186.33.50)
	by b0.ovh.net with SMTP; 6 Dec 2007 21:30:44 -0000
Received: from mut38-5-82-246-191-110.fbx.proxad.net (HELO ?82.246.191.110?) (forum%x9c.fr@82.246.191.110)
  by ns0.ovh.net with SMTP; 6 Dec 2007 21:30:44 -0000
Mime-Version: 1.0 (Apple Message framework v752.2)
In-Reply-To: <200712061650.32678.jon@ffconsultancy.com>
References: <4757D904.2090502@functionality.de> <20071206142609.GA15768@furbychan.cocan.org> <47580DE4.40503@functionality.de> <200712061650.32678.jon@ffconsultancy.com>
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
Message-Id: <5208F98A-4688-46EB-B051-F896B18D0ED9@x9c.fr>
Content-Transfer-Encoding: quoted-printable
From: "forum@x9c.fr" <forum@x9c.fr>
Subject: Re: [Caml-list] Questions on replacing finalizers and memory footprints
Date: Thu, 6 Dec 2007 22:33:49 +0100
To: caml-list <caml-list@yquem.inria.fr>
X-Mailer: Apple Mail (2.752.2)
X-Ovh-Remote: 82.246.191.110 (mut38-5-82-246-191-110.fbx.proxad.net)
X-Ovh-Local: 213.186.33.20 (ns0.ovh.net)
X-Spam: no; 0.00; finalizers:01 footprints:01 ocaml:01 byte:01 runtime:01 in-memory:01 50,:98 wrote:01 wrote:01 ints:01 caml-list:01 marshal:01 surprising:01 int:01 variant:02 


Le 6 d=E9c. 07 =E0 17:50, Jon Harrop a =E9crit :

> On Thursday 06 December 2007 14:57, Thomas Fischbacher wrote:
>> Richard Jones wrote:
>>> If you want to do this in pure OCaml, probably your best bet =20
>>> would be
>>> to just Marshal the structure and count how big it is.  It'll be =20
>>> slow
>>> of course.
>>
>> Actually, the situation that brought up this question is that I =20
>> have a
>> complicated internal data structure which will free 300 MB of RAM =20
>> if I
>> delete it, while serializing it produces a file of 94 MB only...
>> So, I would like to have more clarity what is going on here, and =20
>> which
>> part of this data structure eats how much space.
>
> I had never though of measuring the size of a marshalled data =20
> structure. Turns
> out its representation of ints can be more concise than the code
> representation though:

(...)

Yes, the marshalled format although not compressed is quite optimized.
For example, if I am not wrong, an "int" value in 0..63 will be coded =20=

on a
single byte. Such a value may take up to 8 times more space in memory
if you are using a 64-bit architecture. The same is of course also =20
true for
all data types that are represented at runtime by values in 0..63
(e.g. variant with no embedded data).
The same kind of encoding is used for "small" blocks, whose headers are
stored more compactly in a marshalled stream than in memory.

As a consequence, it is not very surprising that you observe a 3:1 ratio
between in-memory and marshalled representations.


Xavier Clerc=

