Return-Path: <pedagand@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=AWL,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 63A1EBC69
	for <caml-list@yquem.inria.fr>; Mon, 24 Dec 2007 18:33:06 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAJN8b0fRVYC4kmdsb2JhbACQDgEBAQEHBAQJIJQwg0g
X-IronPort-AV: E=Sophos;i="4.24,204,1196636400"; 
   d="scan'208";a="20667600"
Received: from fk-out-0910.google.com ([209.85.128.184])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 24 Dec 2007 18:33:06 +0100
Received: by fk-out-0910.google.com with SMTP id b27so2605588fka.11
        for <caml-list@yquem.inria.fr>; Mon, 24 Dec 2007 09:33:05 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        bh=IskF2ykgaQ15Qp+NTaRMlPHph17ZmhJndoFpE9nDBrk=;
        b=p6cTcOWeDuT2uyI2QXdWmEWSVia3yi2Jhwyf3kKBPM6nFFgv56E4P5zq+GVFFRr3sdYHa1k8iXC5mqayWU3UvY+ZMTT5ykg/QmzhgAwCkah8x6X6L/E1YvLV2McyBNXmqDTTTwNlk0Ms58ze0npDR+kZVPi1qM1OxaBjb44dRvI=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=KRXb66UYV9OR0bAGE+BXQNExTVLYxFVaUlhOrCZgGFGtdq6/Be8kgmQe5S66bTykeULoGoJXeDX7KISyrrSeqBU/+YQ4sUC8G6B9FpAFNjGEVYqx6Q1j65fOjojfAA1MbDpkqwwpx33NOQuOKKVXcpwvSUa2bjQwf6Jw8aLZsRo=
Received: by 10.82.121.15 with SMTP id t15mr8711203buc.26.1198517583669;
        Mon, 24 Dec 2007 09:33:03 -0800 (PST)
Received: by 10.82.154.16 with HTTP; Mon, 24 Dec 2007 09:33:03 -0800 (PST)
Message-ID: <6cb897b30712240933t44d28881g66d65dcb50708692@mail.gmail.com>
Date: Mon, 24 Dec 2007 18:33:03 +0100
From: "Pierre-Evariste Dagand" <pedagand@gmail.com>
To: "Loup Vaillant" <loup.vaillant@gmail.com>,
	caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Lost Polymorphism. Can we force the compiler not to?
In-Reply-To: <6f9f8f4a0712240759w6e1715aeg5a7bf9d642f9a737@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
References: <6f9f8f4a0712240759w6e1715aeg5a7bf9d642f9a737@mail.gmail.com>
X-Spam: no; 0.00; polymorphism:01 compiler:01 combinators:01 type-checker:01 ocaml:01 polymorphic:01 partial:01 faq:01 faq:01 caml-list:01 caml-list:01 caml:02 inria:06 inria:06 thread:06 

Hi,

You might find this thread interesting :

[http://camltest.inria.fr/pub/ml-archives/caml-list/2003/10/b524697dd6429ef4b3d37491d400e8ff.fr.html]

In a nutshell, it is a FAQ :

"A function obtained through partial application is not polymorphic enough"

at [http://caml.inria.fr/resources/doc/faq/core.en.html].

The proposed solution is eta-expanding. It's what I do when I use my
Arrow combinators.

But I'm not either a type-checker or OCaml guru so their might be a
better solution. That I would be pleased to learn.

HTH,

-- 
Pierre-Evariste Dagand

