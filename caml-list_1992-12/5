Received: by margaux.inria.fr, Mon, 21 Dec 92 16:16:39 +0100
Received: from peray.inria.fr by margaux.inria.fr, Mon, 21 Dec 92 12:05:47 +0100
Received: by peray.inria.fr; Mon, 21 Dec 92 12:05:28 +0100
From: Daniel de Rauglaudre <ddr@peray>
Message-Id: <9212211105.AA03738@peray.inria.fr>
Subject: Re: Parallel CAML
To: sd@informatics.rutherford.ac.uk
Date: Mon, 21 Dec 1992 12:05:27 +0900 (MET)
Cc: caml-list@margaux
In-Reply-To: <9212171026.AA00160(a)piston> from "sd@informatics.rutherford.ac.uk" at Dec 17, 92 10:26:25 am
X-Mailer: ELM [version 2.4 PL13]
Content-Type: text
Content-Length: 920       
Sender: weis@margaux
Status: O

> We're thinking of doing some experiments using CAML as the
> basis for a parallel distributed system.  (It's only in the
> early stages at present, so don't ask me how!!)  Is anyone
> else doing anything with CAML and parallelism?  I'd be
> especially interested in anyone who's ported Reppy's
> Comcurrent ML constructs, but anything to do with parallel
> execution would be of interest.

I implemented the continuations functions, a` la SML: "callcc" and "throw" 
in Caml-Light. I read Reppy's thesis. I just implemented his basic functions
"channel", "spawn", "send" et "accept" in Caml-Light using continuations.

This implementation of continuations is compatible with Caml-Light
version 0.5 on unix machines. No modification of the runtime is
necessary, just a link with a C program. The functions "callcc" and
"throw" are normal C functions, called from Caml-Light.

	Daniel de Rauglaudre
	ddr@margaux.inria.fr



