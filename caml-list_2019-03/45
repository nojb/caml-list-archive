Return-Path: <xclerc@janestreet.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id B54D282603
	for <caml-list@sympa.inria.fr>; Thu, 14 Mar 2019 20:24:25 +0100 (CET)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=xclerc@janestreet.com; spf=Pass smtp.mailfrom=xclerc@janestreet.com; spf=None smtp.helo=postmaster@mxout3.mail.janestreet.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  xclerc@janestreet.com) identity=pra;
  client-ip=38.105.200.229;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="xclerc@janestreet.com";
  x-sender="xclerc@janestreet.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  xclerc@janestreet.com designates 38.105.200.229 as permitted
  sender) identity=mailfrom; client-ip=38.105.200.229;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="xclerc@janestreet.com";
  x-sender="xclerc@janestreet.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mxout3.mail.janestreet.com) identity=helo;
  client-ip=38.105.200.229;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="xclerc@janestreet.com";
  x-sender="postmaster@mxout3.mail.janestreet.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AqcY1ZRC1kDBa6UNEZAWgUyQJP3N1i/DPJgcQr6Af?=
 =?us-ascii?q?oPdwSPT4oMbcNUDSrc9gkEXOFd2Cra4d06yO6ujJYi8p2d65qncMcZhBBVcuqP?=
 =?us-ascii?q?49uEgeOvODElDxN/XwbiY3T4xoXV5h+GynYwAOQJ6tL1LdrWev4jEMBx7xKRR6?=
 =?us-ascii?q?JvjvGo7Vks+7y/2+94fcbglVmDaxe69+IAirpgjNq8cahpdvJLwswRXTuHtIfO?=
 =?us-ascii?q?pWxWJsJV2Nmhv3+9m98p1+/SlOovwt78FPX7n0cKQ+VrxYES8pM3sp683xtBnM?=
 =?us-ascii?q?VhWA630BWWgLiBVIAgzF7BbnXpfttybxq+Rw1DWGMcDwULs5Xymp4aV2Rx/ykC?=
 =?us-ascii?q?oIOD43/m/UhMJtkqxUvAmsqAZjz4POeoyZKOZyc6HbcNgHRWRBRMFRVylZD4y9?=
 =?us-ascii?q?dYQPEesBMvhCr4LguVYOqQWxBROwC+jyzTJJiWP53akk3OQ7DQ7Lxw4gEMgIsH?=
 =?us-ascii?q?vKt9X1KL0SXv6rw6nU1znMc/RW2TLk5YXObxsvr/aMXbdqfsrQz0kiDwTFgUmK?=
 =?us-ascii?q?pozgOzOZzOMNs3KU7+Z4WuKvinInqwFsoje03Msjlo7JhocNxlDG7yp5xpg6Jc?=
 =?us-ascii?q?akSE5hf9GrDodQuzuGOItxR8MvRXxjtiUiyrAet5O2fzIGxIk7yxPfcfCLbZSE?=
 =?us-ascii?q?7g75WOqPPzt1gGppdKyjixu260Stye3xWtOp3FtLsiZJiMfAumwR2xHV98OJUO?=
 =?us-ascii?q?Fy/l271jaKzw3T6v9LIUQzlafDLp4gzbkwlocPsUnNBCP2nV/5jK6Sdkk++Oin?=
 =?us-ascii?q?8eLnbav9pp+ALY97lB/xMrg0lsOjBuQ4NxACX2md+euiyL3u5UP0TbZQgvErjq?=
 =?us-ascii?q?XUsIrWKdoHqqKlGQNZzJgv5hKnAzejytsYnH0HLFxfeBKAiojkI17PL+z8Dfih?=
 =?us-ascii?q?mVSjjCxmx/LcMb3nHJrNNWTDkK3/crlj905Q0hY8zdda555MELEOPOrzWlPttN?=
 =?us-ascii?q?zfFhI2Lxa7w+PjCNlk0oMeWHmPArOCPaPJsV6I4/ovLPOWaI8Uvjb9Mfkl6OT0?=
 =?us-ascii?q?gX83g19ONZWuiJAebXT9GvV9Pw3NanPphpIFEHwWlgs4Vu3jzlOYB219fXG3Cp?=
 =?us-ascii?q?I1+DA2EsqNCYrZTcj5kLeF0T2wNp9fYG1dFkqBHGuufIKBDaRfIBmOK9Nsx2RX?=
 =?us-ascii?q?HYOqTJUsgEn35V3KjoF/J++RwRU28Jfq1dx7/erWzE9g9zVyAt+ByWyAUyd/mW?=
 =?us-ascii?q?ZaHmZqjpA6mlR0zxK46YY9m+ZRTIIB5fpPXxwmL5PR06pxDNWgAlucLOfMc06v?=
 =?us-ascii?q?R5CdOR90Tt81xIVeMUNtHMi+1VbG1iuuRb0ckbGQGIY5/76a1H/0dZ5w?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0CKBQBEqYpcfeXIaSZkHAEBAR8EAQEFA?=
 =?us-ascii?q?QGBTAKCdoEDJ4QLgR2SIZo9FIFnDSWER4RSGgcBBDAJDQEBAwEBCQEDAQEBEwE?=
 =?us-ascii?q?BCRYITAyCOiKDGB0BASMVJTcCJBIBBQEigzUBgXUDDKFqPIoscYEvgngBAQWBM?=
 =?us-ascii?q?QEDAw1BhSYDBRKBHQGLLBeBQD+HQQIEgSUYAQEGRYJdgleKKgiGTZNECYdYi0c?=
 =?us-ascii?q?Zk0sBiAuII0SNDg8hgSaCDjMaCBsVOzEGggEBM4IWF4NLhRSFPz8zAY4Igj4BA?=
 =?us-ascii?q?Q?=
X-IPAS-Result: =?us-ascii?q?A0CKBQBEqYpcfeXIaSZkHAEBAR8EAQEFAQGBTAKCdoEDJ4Q?=
 =?us-ascii?q?LgR2SIZo9FIFnDSWER4RSGgcBBDAJDQEBAwEBCQEDAQEBEwEBCRYITAyCOiKDG?=
 =?us-ascii?q?B0BASMVJTcCJBIBBQEigzUBgXUDDKFqPIoscYEvgngBAQWBMQEDAw1BhSYDBRK?=
 =?us-ascii?q?BHQGLLBeBQD+HQQIEgSUYAQEGRYJdgleKKgiGTZNECYdYi0cZk0sBiAuII0SND?=
 =?us-ascii?q?g8hgSaCDjMaCBsVOzEGggEBM4IWF4NLhRSFPz8zAY4Igj4BAQ?=
X-IronPort-AV: E=Sophos;i="5.58,479,1544482800"; 
   d="scan'208,217";a="373475662"
X-MGA-submission: =?us-ascii?q?MDFeEaR2ZS30b2SwmGljFw5BH72oilAnyNDVWM?=
 =?us-ascii?q?MWke//KBY61oAxwMkD0fv/eVF4RNkQeL3u+Kk6U6skIEWt7n07eOAAYO?=
 =?us-ascii?q?32mPltm90Sfvb5VEzYkzDiLSWH1dADjF7sQXxClaN5w1rmUIudv+2npw?=
 =?us-ascii?q?F5oVXerOlzz9I4hNnkOgmiQw=3D=3D?=
Received: from mxout3.mail.janestreet.com ([38.105.200.229])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Mar 2019 20:24:24 +0100
X-JS-Received: from [30.40.81.8] (helo=tot-qpr-mailcore1)
	by mxout3.mail.janestreet.com with esmtps (TLSv1.2:ECDHE-RSA-AES256-GCM-SHA384:256)
	(Exim 4.90_1)
	(envelope-from <xclerc@janestreet.com>)
	id 1h4Vxn-0000Ke-8N
	for caml-list@inria.fr; Thu, 14 Mar 2019 15:24:23 -0400
X-JS-Flow: external
X-JS-Received: by tot-qpr-mailcore1 with ocaml/mailcore/main_production (c35580b6ead4)
 	(envelope-from <xclerc@janestreet.com>)
 	id Bciqpn-uxPTEA-Gg; 2019-03-14 15:24:23.223757-04:00
X-JS-Scanner-attachment: No attachments
X-JS-Scanner-esets: Not scanned (internal mail)
Received: from mail-qt1-f200.google.com ([209.85.160.200])
 	by mxgoog2.mail.janestreet.com with esmtps (TLSv1.2:ECDHE-RSA-AES128-GCM-SHA256:128)
 	(Exim 4.90_1)
 	id 1h4Vxn-0005qT-4m
 	for caml-list@inria.fr; Thu, 14 Mar 2019 15:24:23 -0400
Received: by mail-qt1-f200.google.com with SMTP id i21so6405577qtq.6
         for <caml-list@inria.fr>; Thu, 14 Mar 2019 12:24:23 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
         d=janestreet.com; s=google;
         h=mime-version:from:date:message-id:subject:to;
         bh=eqWjw2RR43ldFFWDrKv2LxOblixZPKZ30+XrDh/8DFc=;
         b=hD6ljHxxjM04jQK7jXlGM5JFDj4WYQzq6hqb4Dvxd95zlB1UAPrpK8w58iHIsC+nW5
          oqcP4+v3gjr/wg0yKGYNb+LsTEidhRPxBO1JlIPY3bBbS863EiPYNSypF+Z4tvjwqFcT
          vR4tYnS08YRE68gmmaL3Cny+rW78U5KRUKdsM=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
         d=1e100.net; s=20161025;
         h=x-gm-message-state:mime-version:from:date:message-id:subject:to;
         bh=eqWjw2RR43ldFFWDrKv2LxOblixZPKZ30+XrDh/8DFc=;
         b=HYJKjiwzqwyfuMSGt7X3nndk8vSoKA2/rE/HD3AEZ2zckKRPnkaC9/0+8Mps+WHqnc
          fzlSgqDSy6/1WrdUHQzdvRgnEKWcItVUNTom+GzMUnVhiGQb1Lrhj46/IB8nl18QpJwd
          jJgJYNrCDQjqjaeqgWZSJt4echorfESIseXyJQOVu9j4Cm3S/fhhK8v8dd0ElYyBH9y2
          AGv1CaRIwCtjotwaackVrystsB6dvSnKyvRZSZrq5K/64ZhQHiQyxWavIX70SH26HIK6
          OVUw/28PY8GBVHjQNijKqJxbe0GXevzz2uLV/daT5U2+baJZ2HiG/z/Z5X21ZdAta6Kq
          4Etw==
X-Gm-Message-State: APjAAAVa4CN5abN+SoEYhn85R+WxnfhmnprGXNROwbRploH+HrAHGyKG
 	QGJi5OkiMMl34DQzMMj2nkfGp0+mJpQu6up3u8+mM/XrIJNuviwJO5SkxbcP9vRdSU9Lp3jJCzC
 	h9rKvvDmEVVQQ8EOqW2uXdxqBiw==
X-Received: by 2002:ae9:f209:: with SMTP id m9mr6195195qkg.72.1552591462706;
         Thu, 14 Mar 2019 12:24:22 -0700 (PDT)
X-Google-Smtp-Source: APXvYqyqzP7TkEnadU5P3MHGhPyrR7YztZY2TBsGac0x55aj9Hn4uy1DAqT4NNydVER5lhpL4MxbA+ZmoZSpEiPX4wY=
X-Received: by 2002:ae9:f209:: with SMTP id m9mr6195184qkg.72.1552591462454;
  Thu, 14 Mar 2019 12:24:22 -0700 (PDT)
MIME-Version: 1.0
From: Xavier Clerc <xclerc@janestreet.com>
Date: Thu, 14 Mar 2019 19:24:11 +0000
Message-ID: <CAGi3GpwJtp28GUpC9FWTNnMzvosR-PtT-hM+sGOr56-RUTr8Xg@mail.gmail.com>
To: caml-list <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary="00000000000099f203058412deb0"
X-JS-Exim-Data-Received: 2019-03-14 15:24:23-0400
X-JS-Processed-by: mailcore
Subject: [Caml-list] [ANN] v0.12 release of Jane Street packages

--00000000000099f203058412deb0
Content-Type: text/plain; charset="UTF-8"

Dear OCaml developers,

We are happy to announce the v0.12 release of Jane Street packages!

This release comes with a lot of changes, as we ship 19 new
packages, and have enhanced and refactored a number of existing
ones. The documentation for this release is available on our
website:

  https://ocaml.janestreet.com/ocaml-core/v0.12/doc/

The remainder of this mail highlights the main changes since the v0.11
release; we hope it will be useful to developers in the process of
migrating to the new version. A comprehensive change log is available
on discuss (it turned out to be too big for this list):

  https://discuss.ocaml.org/t/ann-v0-12-release-of-jane-street-packages/3499

# Comparison and Equality

- The `~cmp` argument used to pass a comparison function has been
  renamed to `~compare`.

- The `~equal` label of functions `List.equal` and `Array.equal`
  has been removed.


# New packages

- base_bigstring (https://github.com/janestreet/base_bigstring):
  String type based on Bigarray, for use in I/O and C-bindings.

- base_quickcheck (https://github.com/janestreet/base_quickcheck):
  Randomized testing framework, designed for compatibility with Base.

- hardcaml (https://github.com/janestreet/hardcaml):
  Hardcaml is an OCaml library for designing hardware.

- hardcaml_waveterm (https://github.com/janestreet/hardcaml_waveterm):
  A terminal based digital waveform viewer for Hardcaml.

- incr_dom_keyboard (https://github.com/janestreet/incr_dom_keyboard):
  A terminal based digital waveform viewer for Hardcaml.

- incr_dom_partial_render (
https://github.com/janestreet/incr_dom_partial_render):
  A library for simplifying rendering of large amounts of data.

- jst-config (https://github.com/janestreet/jst-config):
  Compile-time configuration for Jane Street libraries.

- netsnmp (https://github.com/janestreet/netsnmp):
  An interface to the Net-SNMP client library.

- notty_async (https://github.com/janestreet/notty_async):
  An interface to the Net-SNMP client library.

- pam (https://github.com/janestreet/pam):
  OCaml bindings for the Linux-PAM library.

- ppx_deriving_hardcaml (https://github.com/janestreet/ppx_deriving_hardcaml
):
  A plugin for the ppx_deriving rewriter that supports the Hardcaml syntax.

- ppx_module_timer (https://github.com/janestreet/ppx_module_timer):
  Ppx rewriter that records top-level module startup times.

- ppx_stable (https://github.com/janestreet/ppx_stable):
  Stable types conversions generator.

- sexp (https://github.com/janestreet/sexp):
  S-expression swiss knife.

- sexp_diff_kernel (https://github.com/janestreet/sexp_diff_kernel):
  Code for computing the diff of two sexps.

- sexp_macro (https://github.com/janestreet/sexp_macro):
  Sexp macros.

- shell (https://github.com/janestreet/shell):
  Yet another implementation of fork&exec and related functionality.

- time_now (https://github.com/janestreet/time_now):
  Reports the current time.

- zstandard (https://github.com/janestreet/zstandard):
  OCaml bindings to Zstandard.


# Deprecations

`Async`:

- Deprecated `Scheduler.add_busy_poller`.


`Base`:

- Deprecated `Applicative`'s `Args*` module types and `Make_args*`
  functors, which have been superseded by the `let%map` syntax.

- Deprecated `Array.replace`.

`Core_kernel`:
- Deprecated `Obj_array`, replacing uses with `Uniform_array`.

- Deprecated the `Timing_wheel_ns.Priority_queue` module, with no
  intended replacement.


No longer released:

- `async_extended`.

- `async_parallel`.

- `configurator`.

- `findlib_top`.

- `incremental_kernel`.

- `jane-street-tests`.

- `jenga`.

- `ppx_ast`.

- `ppx_core`.

- `ppx_driver`.

- `ppx_metaquot`.

- `ppx_traverse`.

- `ppx_traverse_builtins`.

- `ppx_type_conv`.


# Moves

`Async`:

- Moved `Weak_hashtbl` module out of `Async` to its own library.

- Moved `Lock_file` to a single-module library, `Lock_file_async`.

- Moved `Async_extra.Udp` to a standalone library, `Async_udp`.


`Async_extended`:

- Moved modules out of `Async_extended` into their own libraries,
  aimed at deleting `Async_extended`.


`Async_kernel`:

- Moved the `Limiter` module to a single-module library,
  `Limiter_async`.

- Moved `Eager_deferred` to a standalone library.


`Async_unix`:

- Moved modules to standalone libraries: `Thread_pool`,
  `Thread_safe_ivar`, `Thread_safe_pipe`.


`Base`:

- Moved the `Heap_block` module to `Core_kernel`.

- Added top-level module `Base.Sign_or_nan`, moved out of `Float`

- Added `Stack` module, moved in from `Core_kernel`.

- Added `Base.Bigstring` module, moving in most of
  `Core_kernel.Bigstring`.

- Added the `Base_bigstring` library, splitting out the `Bigstring`
  module from `Base`.


`Core`:

- Moved some modules out of `Core` to their own library: `Crc`,
  `Piecewise_linear`, `Syslog`, `Timing_wheel_float`, `Weak_hashtbl`.

- Moved modules `Schedule_v4_deprecated` and `Schedule_v5` out of
  `Core` and to their own libraries.

- Moved the `Daemon` module, to a single-module library.

- Moved the `Uuid` module out of `Core`, to a single-module library.

- Moved `Lock_file` to a single-module library, `Lock_file_blocking`.

- Moved the `Mac_address` module out of `Core`, to a single-module
  library.

- Moved modules out to standalone libraries: `Nano_mutex`, `Squeue`.


`Core_kernel`:

- Added `Time_ns.Ofday` submodule, moved from `Core`.

- Moved module `Unpack_buffer` out of `Core_kernel` and into its own
  library.

- Moved the implementation of `Quickcheck` into its own library,
  `Base_quickcheck`.

- Moved the `Limiter` module to a single-module library.

- Moved the `Bucket` module out to a single-module library.

- Split out a `Config_h` library for generating the `config.h` file
  that many libraries (including `Core_kernel`) use.

- Moved the `Weak_pointer` module to a standalone library.

- Moved modules out to standalone libraries: `Force_once`,
  `Hash_heap`, `Int_set`, `Rope`, `Thread_safe_queue`, `Total_map`,
  `Weak_array`.


`Incremental`:

- Made `Incremental` be the library name rather than
  `Incremental_lib`, and moved all modules from `Incremental_lib` to
  submodules of `Incremental`.

- Merged the `Incremental` and `Incremental_kernel` libraries into a
  single library, `Incremental`.

- Moved the `Balanced_reducer` module out of `Incremental`, to a
  single-module library.


`Sexplib`:

- Moved `Sexplib.Macro` to its own library `Sexp_macro`.


`ppx`:

- `ppx_ast`, `ppx_core`, `ppx_driver`, `ppx_metaquot`, `ppx_traverse`,
  `ppx_traverse_builtins`, and  `ppx_type_conv` have been merged into
  ppxlib (https://github.com/ocaml-ppx/ppxlib).

--00000000000099f203058412deb0
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div dir=3D"ltr"><div dir=3D"ltr"><div>Dear OCaml develope=
rs,<br></div><div><br></div><div>We are happy to announce the v0.12 release=
 of Jane Street packages!</div><div><br></div><div>This release comes with =
a lot of changes, as we ship 19 new</div><div>packages, and have enhanced a=
nd refactored a number of existing</div><div>ones. The documentation for th=
is release is available on our</div><div>website:</div><div><br></div><div>=
=C2=A0=C2=A0<a href=3D"https://ocaml.janestreet.com/ocaml-core/v0.12/doc/" =
target=3D"_blank">https://ocaml.janestreet.com/ocaml-core/v0.12/doc/</a></d=
iv><div><br></div><div>The remainder of this mail highlights the main chang=
es since the v0.11</div><div>release; we hope it will be useful to develope=
rs in the process of</div><div>migrating to the new version. A comprehensiv=
e change log is available</div><div>on discuss (it turned out to be too big=
 for this list):</div><div><br></div><div>=C2=A0=C2=A0<a href=3D"https://di=
scuss.ocaml.org/t/ann-v0-12-release-of-jane-street-packages/3499">https://d=
iscuss.ocaml.org/t/ann-v0-12-release-of-jane-street-packages/3499</a></div>=
<div><br></div><div># Comparison and Equality</div><div><br></div><div>- Th=
e `~cmp` argument used to pass a comparison function has been</div><div>=C2=
=A0 renamed to `~compare`.</div><div><br></div><div>- The `~equal` label of=
 functions `List.equal` and `Array.equal`</div><div>=C2=A0 has been removed=
.</div><div><br></div><div><br></div><div># New packages</div><div><br></di=
v><div>- base_bigstring (<a href=3D"https://github.com/janestreet/base_bigs=
tring" target=3D"_blank">https://github.com/janestreet/base_bigstring</a>):=
</div><div>=C2=A0 String type based on Bigarray, for use in I/O and C-bindi=
ngs.</div><div><br></div><div>- base_quickcheck (<a href=3D"https://github.=
com/janestreet/base_quickcheck" target=3D"_blank">https://github.com/janest=
reet/base_quickcheck</a>):</div><div>=C2=A0 Randomized testing framework, d=
esigned for compatibility with Base.</div><div><br></div><div>- hardcaml (<=
a href=3D"https://github.com/janestreet/hardcaml" target=3D"_blank">https:/=
/github.com/janestreet/hardcaml</a>):</div><div>=C2=A0 Hardcaml is an OCaml=
 library for designing hardware.</div><div><br></div><div>- hardcaml_wavete=
rm (<a href=3D"https://github.com/janestreet/hardcaml_waveterm" target=3D"_=
blank">https://github.com/janestreet/hardcaml_waveterm</a>):</div><div>=C2=
=A0 A terminal based digital waveform viewer for Hardcaml.</div><div><br></=
div><div>- incr_dom_keyboard (<a href=3D"https://github.com/janestreet/incr=
_dom_keyboard" target=3D"_blank">https://github.com/janestreet/incr_dom_key=
board</a>):</div><div>=C2=A0 A terminal based digital waveform viewer for H=
ardcaml.</div><div><br></div><div>- incr_dom_partial_render (<a href=3D"htt=
ps://github.com/janestreet/incr_dom_partial_render" target=3D"_blank">https=
://github.com/janestreet/incr_dom_partial_render</a>):</div><div>=C2=A0 A l=
ibrary for simplifying rendering of large amounts of data.</div><div><br></=
div><div>- jst-config (<a href=3D"https://github.com/janestreet/jst-config"=
 target=3D"_blank">https://github.com/janestreet/jst-config</a>):</div><div=
>=C2=A0 Compile-time configuration for Jane Street libraries.</div><div><br=
></div><div>- netsnmp (<a href=3D"https://github.com/janestreet/netsnmp" ta=
rget=3D"_blank">https://github.com/janestreet/netsnmp</a>):</div><div>=C2=
=A0 An interface to the Net-SNMP client library.</div><div><br></div><div>-=
 notty_async (<a href=3D"https://github.com/janestreet/notty_async" target=
=3D"_blank">https://github.com/janestreet/notty_async</a>):</div><div>=C2=
=A0 An interface to the Net-SNMP client library.</div><div><br></div><div>-=
 pam (<a href=3D"https://github.com/janestreet/pam" target=3D"_blank">https=
://github.com/janestreet/pam</a>):</div><div>=C2=A0 OCaml bindings for the =
Linux-PAM library.</div><div><br></div><div>- ppx_deriving_hardcaml (<a hre=
f=3D"https://github.com/janestreet/ppx_deriving_hardcaml" target=3D"_blank"=
>https://github.com/janestreet/ppx_deriving_hardcaml</a>):</div><div>=C2=A0=
 A plugin for the ppx_deriving rewriter that supports the Hardcaml syntax.<=
/div><div><br></div><div>- ppx_module_timer (<a href=3D"https://github.com/=
janestreet/ppx_module_timer" target=3D"_blank">https://github.com/janestree=
t/ppx_module_timer</a>):</div><div>=C2=A0 Ppx rewriter that records top-lev=
el module startup times.</div><div><br></div><div>- ppx_stable (<a href=3D"=
https://github.com/janestreet/ppx_stable" target=3D"_blank">https://github.=
com/janestreet/ppx_stable</a>):</div><div>=C2=A0 Stable types conversions g=
enerator.</div><div><br></div><div>- sexp (<a href=3D"https://github.com/ja=
nestreet/sexp" target=3D"_blank">https://github.com/janestreet/sexp</a>):</=
div><div>=C2=A0 S-expression swiss knife.</div><div><br></div><div>- sexp_d=
iff_kernel (<a href=3D"https://github.com/janestreet/sexp_diff_kernel" targ=
et=3D"_blank">https://github.com/janestreet/sexp_diff_kernel</a>):</div><di=
v>=C2=A0 Code for computing the diff of two sexps.</div><div><br></div><div=
>- sexp_macro (<a href=3D"https://github.com/janestreet/sexp_macro" target=
=3D"_blank">https://github.com/janestreet/sexp_macro</a>):</div><div>=C2=A0=
 Sexp macros.</div><div><br></div><div>- shell (<a href=3D"https://github.c=
om/janestreet/shell" target=3D"_blank">https://github.com/janestreet/shell<=
/a>):</div><div>=C2=A0 Yet another implementation of fork&amp;exec and rela=
ted functionality.</div><div><br></div><div>- time_now (<a href=3D"https://=
github.com/janestreet/time_now" target=3D"_blank">https://github.com/janest=
reet/time_now</a>):</div><div>=C2=A0 Reports the current time.</div><div><b=
r></div><div>- zstandard (<a href=3D"https://github.com/janestreet/zstandar=
d" target=3D"_blank">https://github.com/janestreet/zstandard</a>):</div><di=
v>=C2=A0 OCaml bindings to Zstandard.</div><div><br></div><div><br></div><d=
iv># Deprecations</div><div><br></div><div>`Async`:</div><div><br></div><di=
v>- Deprecated `Scheduler.add_busy_poller`.</div><div><br></div><div><br></=
div><div>`Base`:</div><div><br></div><div>- Deprecated `Applicative`&#39;s =
`Args*` module types and `Make_args*`</div><div>=C2=A0 functors, which have=
 been superseded by the `let%map` syntax.</div><div><br></div><div>- Deprec=
ated `Array.replace`.</div><div><br></div><div>`Core_kernel`:</div><div>- D=
eprecated `Obj_array`, replacing uses with `Uniform_array`.</div><div><br><=
/div><div>- Deprecated the `Timing_wheel_ns.Priority_queue` module, with no=
</div><div>=C2=A0 intended replacement.</div><div><br></div><div><br></div>=
<div>No longer released:</div><div><br></div><div>- `async_extended`.</div>=
<div><br></div><div>- `async_parallel`.</div><div><br></div><div>- `configu=
rator`.</div><div><br></div><div>- `findlib_top`.</div><div><br></div><div>=
- `incremental_kernel`.</div><div><br></div><div>- `jane-street-tests`.</di=
v><div><br></div><div>- `jenga`.</div><div><br></div><div>- `ppx_ast`.</div=
><div><br></div><div>- `ppx_core`.</div><div><br></div><div>- `ppx_driver`.=
</div><div><br></div><div>- `ppx_metaquot`.</div><div><br></div><div>- `ppx=
_traverse`.</div><div><br></div><div>- `ppx_traverse_builtins`.</div><div><=
br></div><div>- `ppx_type_conv`.</div><div><br></div><div><br></div><div># =
Moves</div><div><br></div><div>`Async`:</div><div><br></div><div>- Moved `W=
eak_hashtbl` module out of `Async` to its own library.</div><div><br></div>=
<div>- Moved `Lock_file` to a single-module library, `Lock_file_async`.</di=
v><div><br></div><div>- Moved `Async_extra.Udp` to a standalone library, `A=
sync_udp`.</div><div><br></div><div><br></div><div>`Async_extended`:</div><=
div><br></div><div>- Moved modules out of `Async_extended` into their own l=
ibraries,</div><div>=C2=A0 aimed at deleting `Async_extended`.</div><div><b=
r></div><div><br></div><div>`Async_kernel`:</div><div><br></div><div>- Move=
d the `Limiter` module to a single-module library,</div><div>=C2=A0 `Limite=
r_async`.</div><div><br></div><div>- Moved `Eager_deferred` to a standalone=
 library.</div><div><br></div><div><br></div><div>`Async_unix`:</div><div><=
br></div><div>- Moved modules to standalone libraries: `Thread_pool`,</div>=
<div>=C2=A0 `Thread_safe_ivar`, `Thread_safe_pipe`.</div><div><br></div><di=
v><br></div><div>`Base`:</div><div><br></div><div>- Moved the `Heap_block` =
module to `Core_kernel`.</div><div><br></div><div>- Added top-level module =
`Base.Sign_or_nan`, moved out of `Float`</div><div><br></div><div>- Added `=
Stack` module, moved in from `Core_kernel`.</div><div><br></div><div>- Adde=
d `Base.Bigstring` module, moving in most of</div><div>=C2=A0 `Core_kernel.=
Bigstring`.</div><div><br></div><div>- Added the `Base_bigstring` library, =
splitting out the `Bigstring`</div><div>=C2=A0 module from `Base`.</div><di=
v><br></div><div><br></div><div>`Core`:</div><div><br></div><div>- Moved so=
me modules out of `Core` to their own library: `Crc`,</div><div>=C2=A0 `Pie=
cewise_linear`, `Syslog`, `Timing_wheel_float`, `Weak_hashtbl`.</div><div><=
br></div><div>- Moved modules `Schedule_v4_deprecated` and `Schedule_v5` ou=
t of</div><div>=C2=A0 `Core` and to their own libraries.</div><div><br></di=
v><div>- Moved the `Daemon` module, to a single-module library.</div><div><=
br></div><div>- Moved the `Uuid` module out of `Core`, to a single-module l=
ibrary.</div><div><br></div><div>- Moved `Lock_file` to a single-module lib=
rary, `Lock_file_blocking`.</div><div><br></div><div>- Moved the `Mac_addre=
ss` module out of `Core`, to a single-module</div><div>=C2=A0 library.</div=
><div><br></div><div>- Moved modules out to standalone libraries: `Nano_mut=
ex`, `Squeue`.</div><div><br></div><div><br></div><div>`Core_kernel`:</div>=
<div><br></div><div>- Added `Time_ns.Ofday` submodule, moved from `Core`.</=
div><div><br></div><div>- Moved module `Unpack_buffer` out of `Core_kernel`=
 and into its own</div><div>=C2=A0 library.</div><div><br></div><div>- Move=
d the implementation of `Quickcheck` into its own library,</div><div>=C2=A0=
 `Base_quickcheck`.</div><div><br></div><div>- Moved the `Limiter` module t=
o a single-module library.</div><div><br></div><div>- Moved the `Bucket` mo=
dule out to a single-module library.</div><div><br></div><div>- Split out a=
 `Config_h` library for generating the `config.h` file</div><div>=C2=A0 tha=
t many libraries (including `Core_kernel`) use.</div><div><br></div><div>- =
Moved the `Weak_pointer` module to a standalone library.</div><div><br></di=
v><div>- Moved modules out to standalone libraries: `Force_once`,</div><div=
>=C2=A0 `Hash_heap`, `Int_set`, `Rope`, `Thread_safe_queue`, `Total_map`,</=
div><div>=C2=A0 `Weak_array`.</div><div><br></div><div><br></div><div>`Incr=
emental`:</div><div><br></div><div>- Made `Incremental` be the library name=
 rather than</div><div>=C2=A0 `Incremental_lib`, and moved all modules from=
 `Incremental_lib` to</div><div>=C2=A0 submodules of `Incremental`.</div><d=
iv><br></div><div>- Merged the `Incremental` and `Incremental_kernel` libra=
ries into a</div><div>=C2=A0 single library, `Incremental`.</div><div><br><=
/div><div>- Moved the `Balanced_reducer` module out of `Incremental`, to a<=
/div><div>=C2=A0 single-module library.</div><div><br></div><div><br></div>=
<div>`Sexplib`:</div><div><br></div><div>- Moved `Sexplib.Macro` to its own=
 library `Sexp_macro`.</div><div><br></div><div><br></div><div>`ppx`:</div>=
<div><br></div><div>- `ppx_ast`, `ppx_core`, `ppx_driver`, `ppx_metaquot`, =
`ppx_traverse`,</div><div>=C2=A0 `ppx_traverse_builtins`, and=C2=A0 `ppx_ty=
pe_conv` have been merged into</div><div>=C2=A0 ppxlib (<a href=3D"https://=
github.com/ocaml-ppx/ppxlib" target=3D"_blank">https://github.com/ocaml-ppx=
/ppxlib</a>).</div><div><br></div></div></div></div>

--00000000000099f203058412deb0--
