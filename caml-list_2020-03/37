Return-Path: <alan.schmitt@polytechnique.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id B5B7A7EEE8
	for <caml-list@sympa.inria.fr>; Tue, 24 Mar 2020 10:31:28 +0100 (CET)
X-IronPort-AV: E=Sophos;i="5.72,299,1580770800"; 
   d="scan'208,217";a="343403774"
Received: from cbg35-2-78-242-14-140.fbx.proxad.net (HELO set) ([78.242.14.140])
  by mail3-relais-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 24 Mar 2020 10:31:23 +0100
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr, comp@lists.orbitalfox.eu
Date: Tue, 24 Mar 2020 10:31:22 +0100
Message-ID: <87a746xfo5.fsf@polytechnique.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: base64

SGVsbG8NCg0KSGVyZSBpcyB0aGUgbGF0ZXN0IE9DYW1sIFdlZWtseSBOZXdz
LCBmb3IgdGhlIHdlZWsgb2YgTWFyY2ggMTcgdG8gMjQsDQoyMDIwLg0KDQpU
YWJsZSBvZiBDb250ZW50cw0K4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCkx1diAwLjUuMSDigJQgYSBs
aWJ1diBiaW5kaW5nIOKAlCBXaW5kb3dzIHN1cHBvcnQNCnJlc3RvIDAuMiBy
ZWxlYXNlZA0KQmlzZWN0X3BweCAyLjAuMCDigJQgY29kZSBjb3ZlcmFnZSBm
b3IgT0NhbWwgd2l0aCBuaWNlIEhUTUwgcmVwb3J0cw0KT0NhbWwgNC4wOS4x
IHJlbGVhc2VkDQpDb29raWUgMC4xLjYNCkZpcnN0IHJlbGVhc2Ugb2YgbHd0
LXBpcGVsaW5lDQpVc2luZyBPY2FtbCBhcyBzY3JpcHRpbmcgbGFuZ3VhZ2Ug
LSBwaXBpbmcgc2ggY29tbWFuZHMNCk9sZCBDV04NCg0KDQpMdXYgMC41LjEg
4oCUIGEgbGlidXYgYmluZGluZyDigJQgV2luZG93cyBzdXBwb3J0DQrilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZANCg0K
ICBBcmNoaXZlOg0KICA8aHR0cHM6Ly9kaXNjdXNzLm9jYW1sLm9yZy90L2x1
di0wLTUtMS1hLWxpYnV2LWJpbmRpbmctd2luZG93cy1zdXBwb3J0LzUzMzQv
MT4NCg0KDQpBbnRvbiBCYWNoaW4gYW5ub3VuY2VkDQrilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIANCg0KICBJIGFtIHBsZWFzZWQgdG8gYW5ub3VuY2UgcmVsZWFz
ZSBbMC41LjFdIG9mIFsqKkx1dioqXS4gVGhlIG1haW4gY2hhbmdlDQogIGlz
IHRoZSBhZGRpdGlvbiBvZiBXaW5kb3dzIHN1cHBvcnQsIHdoaWNoIG1ha2Vz
IEx1diBmdWxseQ0KICBjcm9zcy1wbGF0Zm9ybS4NCg0KICBBY2NvcmRpbmds
eSwgTHV2IDAuNS4xIGlzIG5vdyBpbnN0YWxsYWJsZSBmcm9tIGJvdGggdGhl
IG1haW4gb3BhbQ0KICByZXBvLCBhbmQgZnJvbSBvcGFtLXJlcG9zaXRvcnkt
bWluZ3cuDQoNCiAgPGh0dHBzOi8vZ2l0aHViLmNvbS9hYW50cm9uL2x1dj4N
Cg0KICBBbHNvLCBhcyBhIHNpZGUgZWZmZWN0IG9mIHRoZSBidWlsZCBzeXN0
ZW0gcmVmYWN0b3JpbmcgdGhhdCB3YXMgbmVlZGVkDQogIHRvIHN1cHBvcnQg
V2luZG93cywgTHV2J3MgYnVpbGQgc3lzdGVtIG5vIGxvbmdlciByZXF1aXJl
cyBQeXRob24sIGFuZA0KICBzdXBwb3J0cyBjcm9zcy1jb21waWxhdGlvbi4N
Cg0KICBUaGUgb3RoZXIgbm90ZXdvcnRoeSBjaGFuZ2UgaW4gcmVsZWFzZSAw
LjUuMSBpcyBhIHJvdXRpbmUgdXBncmFkZSBvZg0KICB0aGUgdmVuZG9yZWQg
bGlidXYgdG8gaXRzIGxhdGVzdCB2ZXJzaW9uLCBbMS4zNS4wXS4NCg0KDQpb
MC41LjFdIDxodHRwczovL2dpdGh1Yi5jb20vYWFudHJvbi9sdXYvcmVsZWFz
ZXMvdGFnLzAuNS4xPg0KDQpbKipMdXYqKl0gPGh0dHBzOi8vZ2l0aHViLmNv
bS9hYW50cm9uL2x1dj4NCg0KWzEuMzUuMF0gPGh0dHBzOi8vZ2l0aHViLmNv
bS9saWJ1di9saWJ1di9yZWxlYXNlcy90YWcvdjEuMzUuMD4NCg0KDQpyZXN0
byAwLjIgcmVsZWFzZWQNCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6IDxodHRw
czovL2Rpc2N1c3Mub2NhbWwub3JnL3QvYW5uLXJlc3RvLTAtMi1yZWxlYXNl
ZC81MDI4LzI+DQoNCg0KUmFwaGHDq2wgUHJvdXN0IGFubm91bmNlZA0K4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNClJlbGVhc2VzIG9mIGByZXN0
bycgMC4zIGFuZCAwLjQNCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKV
jOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKV
jOKVjOKVjOKVjOKVjOKVjOKVjA0KDQogIE9uIGJlaGFsZiBvZiBOb21hZGlj
IExhYnMsIEknbSBoYXBweSB0byBhbm5vdW5jZSB0aGUgcmVsZWFzZSBvZg0K
ICB2ZXJzaW9ucyAwLjMgYW5kIDAuNCBvZiBgcmVzdG8nLiBCb3RoIHZlcnNp
b25zIGFyZSBhdmFpbGFibGUgdGhyb3VnaA0KICBgb3BhbScgYW5kIGF2YWls
YWJsZSBvbiA8aHR0cHM6Ly9naXRsYWIuY29tL25vbWFkaWMtbGFicy9yZXN0
bz4uDQoNCiAgVGhlIG1haW4gY2hhbmdlIGluIDAuMyBpcyB0byBkZXBlbmQg
b24gYGpzb24tZGF0YS1lbmNvZGluZycsIHRoZSBmb3JrDQogIG9mIHRoZSB1
bm1haW50YWluZWQgYG9jcGxpYi1qc29uLXR5cGVkJy4NCg0KICBUaGUgY2hh
bmdlcyBvZiAwLjQgYXJlIG1vcmUgaW52YXNpdmUgYW5kIHJlcXVpcmUgdXNl
cnMgY2hhbmdlczoNCiAg4oCiIGhhbmRsZSB0aGUgbmV3IGBgR29uZScgcmVz
cG9uc2UgY29kZSwgYW5kDQogIOKAoiBwYXNzIGBnZXR0aW1lb2ZkYXknIG1h
bnVhbGx5Lg0KDQogIFRoaXMgbGFzdCBmZWF0dXJlIHJlbW92ZXMgYSBkZXBl
bmRlbmN5IGZyb20gYHJlc3RvLWNvaHR0cCcgdG8gYFVuaXgnLA0KICBhbmQg
dGh1cyBoZWxwcyB3aXRoIHVzZSB3aXRoaW4gYSBganNfb2Zfb2NhbWwnIGVu
dmlyb25tZW50Lg0KDQoNCkJpc2VjdF9wcHggMi4wLjAg4oCUIGNvZGUgY292
ZXJhZ2UgZm9yIE9DYW1sIHdpdGggbmljZSBIVE1MIHJlcG9ydHMNCuKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6DQogIDxodHRwczovL2Rpc2N1c3Mu
b2NhbWwub3JnL3QvYmlzZWN0LXBweC0yLTAtMC1jb2RlLWNvdmVyYWdlLWZv
ci1vY2FtbC13aXRoLW5pY2UtaHRtbC1yZXBvcnRzLzUzMzgvMT4NCg0KDQpB
bnRvbiBCYWNoaW4gYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIAN
Cg0KICBJIGFtIHBsZWFzZWQgdG8gYW5ub3VuY2UgW3JlbGVhc2UgMi4wLjBd
IG9mIFsqKkJpc2VjdF9wcHgqKl0sIHRoZQ0KICBPQ2FtbCBjb3ZlcmFnZSB0
b29sLCB3aGljaCBoZWxwcyB5b3Ugc2VlIHdoaWNoIHBhcnRzIG9mIHlvdXIg
Y29kZSBhcmUNCiAgbm90IGJlaW5nIHRlc3RlZC4NCg0KICA8aHR0cHM6Ly9h
d3MxLmRpc2NvdXJzZS1jZG4uY29tL3N0YW5kYXJkMTEvdXBsb2Fkcy9vY2Ft
bC9vcmlnaW5hbC8yWC8xLzE5MTFhZGM2YWY4OThiNmY0ZWZkN2RjNjlkMmMx
ZjkwNjk5MDMxYmEuZ2lmPg0KDQogIFRoaXMgcmVsZWFzZSBpcyBhIG1ham9y
IHVwZ3JhZGUuIFRoZSBoaWdobGlnaHRzIGFyZToNCg0KICDigKIgU3VwcG9y
dCBmb3IgQnVja2xlU2NyaXB0LCBqc19vZl9vY2FtbCwgYW5kIGVzeS4gSW4g
b3RoZXIgd29yZHMsDQogICAgQmlzZWN0X3BweCBub3cgY29tcGlsZXMgdG8g
Ym90aCBuYXRpdmUgY29kZSBhbmQgSlMsIGFuZCBpcyBwdWJsaXNoZWQNCiAg
ICBpbiBib3RoIG9wYW0gYW5kIG5wbS4NCiAg4oCiIFRoZSBhYmlsaXR5IHRv
IFtzZW5kIHJlcG9ydHMgYXV0b21hdGljYWxseV0gZnJvbSBUcmF2aXMgYW5k
IENpcmNsZUNJDQogICAgdG8gQ292ZXJhbGxzIGFuZCBDb2RlY292LiBNb3Jl
IGludGVncmF0aW9ucyBjYW4gYmUgYWRkZWQgb3ZlciB0aW1lLg0KICDigKIg
VGhlIGF3a3dhcmQgYCgqQklTRUNULUlHTk9SRSopJyBjb21tZW50cyBmb3Ig
ZXhjbHVkaW5nIGNvZGUgZnJvbQ0KICAgIGluc3RydW1lbnRhdGlvbiBoYXZl
IGJlZW4gcmVwbGFjZWQgYnkgQVNUIGF0dHJpYnV0ZXMgbGlrZQ0KICAgIGBb
QGNvdmVyYWdlIG9mZl0nDQogICAgKDxodHRwczovL2dpdGh1Yi5jb20vYWFu
dHJvbi9iaXNlY3RfcHB4I0V4Y2x1c2lvbj4pLg0KICDigKIgQSBuZXcsIG1v
cmUgcHJpbmNpcGxlZCBpbnN0cnVtZW50YXRpb24gYWxnb3JpdGhtLg0KICDi
gKIgQSBuZXcgcmVwb3J0ZXIgY29tbWFuZCBsaW5lIGJhc2VkIG9uIFtDbWRs
aW5lcl0uIFJ1bg0KICAgIGBiaXNlY3QtcHB4LXJlcG9ydCAtLWhlbHAnIHRv
IGdldCBzdGFydGVkIHdpdGggaXQuDQogIOKAoiBTeW50YXggaGlnaGxpZ2h0
aW5nLg0KDQogIFlvdSBhcmUgaW52aXRlZCB0byBwZXJ1c2UgdGhlIGFsbC1u
ZXcgW1JFQURNRV0gZm9yIGRldGFpbHMgOikNCg0KICBTZXZlcmFsIGZlYXR1
cmVzIGhhdmUgYmVlbiBkZXByZWNhdGVkOyBtb3N0bHkgY29tbWFuZC1saW5l
IGZsYWdzLiBZb3UNCiAgY2FuIHNlZSB0aGUgbGlzdCBpbiB0aGUgKkRlcHJl
Y2F0aW9ucyogc2VjdGlvbiBvZiB0aGUNCiAgW2NoYW5nZWxvZ10uIEhvd2V2
ZXIsIGl0IG1heSBiZSBlYXNpZXIgdG8gc2ltcGx5IHRyeSB1c2luZyBCaXNl
Y3RfcHB4DQogIGFzIGJlZm9yZSDigJMgaXQgd2lsbCB3YXJuIHlvdSBpZiB5
b3UgdXNlIGEgZGVwcmVjYXRlZCBmbGFnLiBUaGUNCiAgZGVwcmVjYXRlZCBm
bGFncyB3aWxsIGJlIHJlbW92ZWQgaW4gQmlzZWN0X3BweCAyLjEuMCwgZXhw
ZWN0ZWQgYXJvdW5kDQogIEp1bHkgMjAyMC4NCg0KICBIYXBweSB0ZXN0aW5n
IQ0KDQogIDxodHRwczovL2dpdGh1Yi5jb20vYWFudHJvbi9iaXNlY3RfcHB4
Pg0KDQoNCltyZWxlYXNlIDIuMC4wXQ0KPGh0dHBzOi8vZ2l0aHViLmNvbS9h
YW50cm9uL2Jpc2VjdF9wcHgvcmVsZWFzZXMvdGFnLzIuMC4wPg0KDQpbKipC
aXNlY3RfcHB4KipdIDxodHRwczovL2dpdGh1Yi5jb20vYWFudHJvbi9iaXNl
Y3RfcHB4Pg0KDQpbc2VuZCByZXBvcnRzIGF1dG9tYXRpY2FsbHldDQo8aHR0
cHM6Ly9naXRodWIuY29tL2FhbnRyb24vYmlzZWN0X3BweCNDb3ZlcmFsbHM+
DQoNCltDbWRsaW5lcl0gPGh0dHBzOi8vZXJyYXRpcXVlLmNoL3NvZnR3YXJl
L2NtZGxpbmVyL2RvYy9DbWRsaW5lcj4NCg0KW1JFQURNRV0gPGh0dHBzOi8v
Z2l0aHViLmNvbS9hYW50cm9uL2Jpc2VjdF9wcHgjcmVhZG1lPg0KDQpbY2hh
bmdlbG9nXSA8aHR0cHM6Ly9naXRodWIuY29tL2FhbnRyb24vYmlzZWN0X3Bw
eC9yZWxlYXNlcy90YWcvMi4wLjA+DQoNCg0KT0NhbWwgNC4wOS4xIHJlbGVh
c2VkDQrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZANCg0KICBBcmNoaXZlOiA8aHR0cHM6
Ly9kaXNjdXNzLm9jYW1sLm9yZy90L29jYW1sLTQtMDktMS1yZWxlYXNlZC81
MzQxLzE+DQoNCg0Kb2N0YWNocm9uIGFubm91bmNlZA0K4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
DQoNCiAgV2UgaGF2ZSB0aGUgcGxlYXN1cmUgb2YgY2VsZWJyYXRpbmcgdGhl
IGFubml2ZXJzYXJ5IG9mIHRoZSBmaXJzdA0KICBzcGFjZXdhbGssIGNvbmR1
Y3RlZCBieSBBbGV4ZWkgTGVvbm92LCBieSBhbm5vdW5jaW5nIHRoZSByZWxl
YXNlIG9mDQogIE9DYW1sIHZlcnNpb24gNC4wOS4xLiAgVGhpcyBpcyBtYWlu
bHkgYSBidWctZml4IHJlbGVhc2UsIHdpdGggYQ0KICBoYW5kZnVsIG9mIGNv
bmZpZ3VyYXRpb24gZml4ZXMgYW5kIGEgR0MgZml4IGJhY2twb3J0ZWQgZnJv
bSA0LjEwLjANCiAgLiBTZWUgdGhlIGxpc3Qgb2YgY2hhbmdlcyBiZWxvdyBm
b3IgbW9yZSBkZXRhaWxzLg0KDQogIEl0IGlzIChvciBzb29uIHdpbGwgYmUp
IGF2YWlsYWJsZSBhcyBhIHNldCBvZiBPUEFNIHN3aXRjaGVzLCBhbmQgYXMg
YQ0KICBzb3VyY2UgZG93bmxvYWQgaGVyZToNCg0KICA8aHR0cHM6Ly9naXRo
dWIuY29tL29jYW1sL29jYW1sL2FyY2hpdmUvNC4wOS4xLnRhci5nej4NCg0K
DQpDaGFuZ2VzIGluIDQuMDkuMToNCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKV
jOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjA0KDQogIOKAoiBbIzkw
NzNdLCBbIzkxMjBdOiBmaXggaW5jb3JyZWN0IEdDIHJhdGlvIG11bHRpcGxp
ZXIgd2hlbiBhbGxvY2F0aW5nDQogICAgY3VzdG9tIGJsb2NrcyB3aXRoIGNh
bWxfYWxsb2NfY3VzdG9tX21lbSBpbiBydW50aW1lL2N1c3RvbS5jIChNYXJr
dXMNCiAgICBNb3R0bCwgcmV2aWV3IGJ5IEdhYnJpZWwgU2NoZXJlciBhbmQg
RGFtaWVuIERvbGlnZXopDQoNCiAg4oCiIFsjODg1NV0sIFsjODg1OF06IExp
bmtzIGZvciB0b29scyBub3QgY3JlYXRlZCB3aGVuIGluc3RhbGxpbmcgd2l0
aA0KICAgIOKAk2Rpc2FibGUtaW5zdGFsbGluZy1ieWVjb2RlLXByb2dyYW1z
IChlLmcuIG9jYW1sZGVwLm9wdCBpbnN0YWxsZWQsDQogICAgYnV0IG9jYW1s
ZGVwIGxpbmsgbm90IGNyZWF0ZWQpIChEYXZpZCBBbGxzb3BwLCByZXBvcnQg
YnkgVGhvbWFzDQogICAgTGVvbmFyZCkNCg0KICDigKIgWyM4OTQ3XSwgWyM5
MTM0XSwgWyM5MzAyXTogZml4L2ltcHJvdmUgc3VwcG9ydCBmb3IgdGhlIEJG
RCBsaWJyYXJ5DQogICAgKFPDqWJhc3RpZW4gSGluZGVyZXIsIHJldmlldyBi
eSBEYW1pZW4gRG9saWdleiBhbmQgRGF2aWQgQWxsc29wcCkNCg0KICDigKIg
WyM4OTUzXSwgWyM4OTU0XTogRml4IGVycm9yIHN1Ym1lc3NhZ2VzIGluIHRo
ZSB0b3BsZXZlbDogZG8gbm90DQogICAgZGlzcGxheSBkdW1teSBsb2NhdGlv
bnMgKEFybWHDq2wgR3XDqW5lYXUsIHJldmlldyBieSBHYWJyaWVsIFNjaGVy
ZXIpDQoNCiAg4oCiIFsjODk2NV0sIFsjODk3OV06IEFscGluZSBidWlsZCBm
YWlsdXJlIGNhdXNlZCBieQ0KICAgIGNoZWNrLXBhcnNlci11cHRvZGF0ZS1v
ci13YXJuLnNoIChHYWJyaWVsIFNjaGVyZXIgYW5kIERhdmlkIEFsbHNvcHAs
DQogICAgcmVwb3J0IGJ5IEFudG9uIEtvY2hrb3YpDQoNCiAg4oCiIFsjODk4
NV0sIFsjODk4Nl06IGZpeCBnZW5lcmF0aW9uIG9mIHRoZSBwcmltaXRpdmVz
IHdoZW4gdGhlIGxvY2FsZQ0KICAgIGNvbGxhdGlvbiBpcyBpbmNvbXBhdGli
bGUgd2l0aCBDLiAoRGF2aWQgQWxsc29wcCwgcmV2aWV3IGJ5IE5pY29sw6Fz
DQogICAgT2plZGEgQsOkciwgcmVwb3J0IGJ5IFNlYmFzdGlhbiBSYXNtdXNz
ZW4pDQoNCiAg4oCiIFsjOTA1MF0sIFsjOTA3Nl06IGluc3RhbGwgbWlzc2lu
ZyBjb21waWxlcmxpYnMvb2NhbWxtaWRkbGVlbmQNCiAgICBhcmNoaXZlcyAo
R2FicmllbCBTY2hlcmVyLCByZXZpZXcgYnkgRmxvcmlhbiBBbmdlbGV0dGks
IHJlcG9ydCBieQ0KICAgIE9sYWYgSGVyaW5nKQ0KDQogIOKAoiBbIzkxNDRd
LCBbIzkxODBdOiBtdWx0aXBsZSBkZWZpbml0aW9ucyBvZiBnbG9iYWwgdmFy
aWFibGVzIGluIHRoZSBDDQogICAgcnVudGltZSwgY2F1c2luZyBwcm9ibGVt
cyB3aXRoIEdDQyAxMC4wIGFuZCBwb3NzaWJseSB3aXRoIG90aGVyIEMNCiAg
ICBjb21waWxlcnMgKFhhdmllciBMZXJveSwgcmVwb3J0IGJ5IErDvHJnZW4g
UmV1dGVyLCByZXZpZXcgYnkgTWFyaw0KICAgIFNoaW53ZWxsKQ0KDQogIOKA
oiBbIzkxODBdOiBwYXNzIC1mbm8tY29tbW9uIG9wdGlvbiB0byBDIGNvbXBp
bGVyIHdoZW4gYXZhaWxhYmxlLCBzbyBhcw0KICAgIHRvIGRldGVjdCBwcm9i
bGVtYXRpYyBtdWx0aXBsZSBkZWZpbml0aW9ucyBvZiBnbG9iYWwgdmFyaWFi
bGVzIGluDQogICAgdGhlIEMgcnVudGltZSAoWGF2aWVyIExlcm95LCByZXZp
ZXcgYnkgTWFyayBTaGlud2VsbCkNCg0KICDigKIgWyM5MTI4XTogRml4IGEg
YnVnIGluIGJ5dGVjb2RlIG1vZGUgd2hpY2ggY291bGQgbGVhZCB0byBhDQog
ICAgc2VnbWVudGF0aW9uIGZhdWx0LiBUaGUgYnVnIHdhcyBjYXVzZWQgYnkg
dGhlIGZhY3QgdGhhdCB0aGUgYXRvbQ0KICAgIHRhYmxlIHNoYXJlZCBhIHBh
Z2Ugd2l0aCBzb21lIGJ5dGVjb2RlLiBUaGUgZml4IG1ha2VzIHN1cmUgYm90
aCB0aGUNCiAgICBhdG9tIHRhYmxlIGFuZCB0aGUgbWlub3IgaGVhcCBoYXZl
IHRoZWlyIG93biBwYWdlcy4gKEphY3F1ZXMtSGVucmkNCiAgICBKb3VyZGFu
LCByZXZpZXcgYnkgU3RlcGhlbiBEb2xhbiwgWGF2aWVyIExlcm95IGFuZCBH
YWJyaWVsIFNjaGVyZXIpDQoNCg0KWyM5MDczXSA8aHR0cHM6Ly9naXRodWIu
Y29tL29jYW1sL29jYW1sL2lzc3Vlcy85MDczPg0KDQpbIzkxMjBdIDxodHRw
czovL2dpdGh1Yi5jb20vb2NhbWwvb2NhbWwvaXNzdWVzLzkxMjA+DQoNClsj
ODg1NV0gPGh0dHBzOi8vZ2l0aHViLmNvbS9vY2FtbC9vY2FtbC9pc3N1ZXMv
ODg1NT4NCg0KWyM4ODU4XSA8aHR0cHM6Ly9naXRodWIuY29tL29jYW1sL29j
YW1sL2lzc3Vlcy84ODU4Pg0KDQpbIzg5NDddIDxodHRwczovL2dpdGh1Yi5j
b20vb2NhbWwvb2NhbWwvaXNzdWVzLzg5NDc+DQoNClsjOTEzNF0gPGh0dHBz
Oi8vZ2l0aHViLmNvbS9vY2FtbC9vY2FtbC9pc3N1ZXMvOTEzND4NCg0KWyM5
MzAyXSA8aHR0cHM6Ly9naXRodWIuY29tL29jYW1sL29jYW1sL2lzc3Vlcy85
MzAyPg0KDQpbIzg5NTNdIDxodHRwczovL2dpdGh1Yi5jb20vb2NhbWwvb2Nh
bWwvaXNzdWVzLzg5NTM+DQoNClsjODk1NF0gPGh0dHBzOi8vZ2l0aHViLmNv
bS9vY2FtbC9vY2FtbC9pc3N1ZXMvODk1ND4NCg0KWyM4OTY1XSA8aHR0cHM6
Ly9naXRodWIuY29tL29jYW1sL29jYW1sL2lzc3Vlcy84OTY1Pg0KDQpbIzg5
NzldIDxodHRwczovL2dpdGh1Yi5jb20vb2NhbWwvb2NhbWwvaXNzdWVzLzg5
Nzk+DQoNClsjODk4NV0gPGh0dHBzOi8vZ2l0aHViLmNvbS9vY2FtbC9vY2Ft
bC9pc3N1ZXMvODk4NT4NCg0KWyM4OTg2XSA8aHR0cHM6Ly9naXRodWIuY29t
L29jYW1sL29jYW1sL2lzc3Vlcy84OTg2Pg0KDQpbIzkwNTBdIDxodHRwczov
L2dpdGh1Yi5jb20vb2NhbWwvb2NhbWwvaXNzdWVzLzkwNTA+DQoNClsjOTA3
Nl0gPGh0dHBzOi8vZ2l0aHViLmNvbS9vY2FtbC9vY2FtbC9pc3N1ZXMvOTA3
Nj4NCg0KWyM5MTQ0XSA8aHR0cHM6Ly9naXRodWIuY29tL29jYW1sL29jYW1s
L2lzc3Vlcy85MTQ0Pg0KDQpbIzkxODBdIDxodHRwczovL2dpdGh1Yi5jb20v
b2NhbWwvb2NhbWwvaXNzdWVzLzkxODA+DQoNClsjOTEyOF0gPGh0dHBzOi8v
Z2l0aHViLmNvbS9vY2FtbC9vY2FtbC9pc3N1ZXMvOTEyOD4NCg0KDQpDb29r
aWUgMC4xLjYNCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kA0KDQogIEFyY2hpdmU6IDxodHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3Qv
YW5uLWNvb2tpZS0wLTEtNi81MzQ2LzE+DQoNCg0KVWxyaWsgU3RyaWQgYW5u
b3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIANCg0KICBJIHJlY2VudGx5IHJl
bGVhc2VkIGEgY29va2llIGxpYnJhcnkuIEl0IGNhbiBwYXJzZSBhbmQgY3Jl
YXRlIGNvb2tpZQ0KICBoZWFkZXJzIChgbGlzdCgoc3RyaW5nLCBzdHJpbmcp
JyB3aGljaCBib3RoIENvaHR0cCBhbmQgSHR0cGFmIHVzZXMpLA0KICBib3Ro
IGBTZXQtQ29va2llJyBhbmQgYENvb2tpZScgc28gaXQgd29ya3Mgb24gYm90
aCBjbGllbnQgYW5kDQogIHNlcnZlci4gSXQgc2hvdWxkIGJlIGNvbXBsaWFu
dCB3aXRoDQogIDxodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNjI2
NT4gYW5kIEkgaGF2ZSBhIHByZXR0eSBnb29kIHRlc3QNCiAgc3VpdGUgZm9y
IHRoZSBwYXJzaW5nIG9mIGNvb2tpZXMgYXQgbGVhc3QuDQoNCiAgSSBjb3Vs
ZG7igJl0IGZpbmQgYSBzdGFuZGFsb25lIGxpYnJhcnkgYmVmb3JlIHRoaXMg
c28gSSBkZWNpZGVkIHRvDQogIGNyZWF0ZSBvbmUgc2luY2UgSSBuZWVkIGl0
IGZvciBteSB3ZWIgZnJhbWV3b3JrLCBgTW9ycGgnLg0KDQogIFRoZSBuZXh0
IHN0ZXAgaXMgdG8gY3JlYXRlIGFuZCBwdWJsaXNoIGludGVncmF0aW9ucyB3
aXRoDQogIFtgb2NhbWwtc2Vzc2lvbiddIHdoaWNoIEkgaGF2ZSBzdGFydGVk
Lg0KDQogIOKAoiBSZXBvOiA8aHR0cHM6Ly9naXRodWIuY29tL3Vscmlrc3Ry
aWQvb2NhbWwtY29va2llPg0KICDigKIgRG9jczogPGh0dHBzOi8vdWxyaWtz
dHJpZC5naXRodWIuaW8vb2NhbWwtY29va2llPg0KDQoNCltgb2NhbWwtc2Vz
c2lvbiddIDxodHRwczovL2dpdGh1Yi5jb20vaW5oYWJpdGVkdHlwZS9vY2Ft
bC1zZXNzaW9uPg0KDQoNCkZpcnN0IHJlbGVhc2Ugb2YgbHd0LXBpcGVsaW5l
DQrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZAN
Cg0KICBBcmNoaXZlOg0KICA8aHR0cHM6Ly9kaXNjdXNzLm9jYW1sLm9yZy90
L2Fubi1maXJzdC1yZWxlYXNlLW9mLWx3dC1waXBlbGluZS80MjIwLzI+DQoN
Cg0KUmFwaGHDq2wgUHJvdXN0IGFubm91bmNlZA0K4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSADQoNCiAgQSBzZWNvbmQgcmVsZWFzZSBvZiBgbHd0LXBp
cGVsaW5lJyAodjAuMikgaXMgYXZhaWxhYmxlIHRocm91Z2gNCiAgYG9wYW0n
LiBUaGlzIG5ldyByZWxlYXNlIG1ha2VzIG5vIGNoYW5nZSB0byB0aGUgY29k
ZSBhbmQgb25seSBhZmZlY3RzDQogIHRoZSBmb2xsb3dpbmc6DQoNCiAg4oCi
IGxvb3NlciBjb25zdHJhaW50cyBvbiB2ZXJzaW9ucyBvZiBgZHVuZScgZGVw
ZW5kZW5jeSwNCiAg4oCiIHRlc3RzLA0KICDigKIgdGVzdHMgYXJlIGV4ZWN1
dGVkIGluIENJLA0KICDigKIgbWlub3IgZG9jdW1lbnRhdGlvbiBpbXByb3Zl
bWVudHMuDQoNCg0KVXNpbmcgT2NhbWwgYXMgc2NyaXB0aW5nIGxhbmd1YWdl
IC0gcGlwaW5nIHNoIGNvbW1hbmRzDQrilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZANCg0KICBBcmNoaXZlOg0KICA8aHR0cHM6Ly9kaXNjdXNzLm9jYW1s
Lm9yZy90L3VzaW5nLW9jYW1sLWFzLXNjcmlwdGluZy1sYW5ndWFnZS1waXBp
bmctc2gtY29tbWFuZHMvNTM2Ni8xPg0KDQoNCk5pY29sYXMgVG9sbGVuYWVy
ZSBhbm5vdW5jZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgA0KDQogIEkgYW0gdHJ5aW5nIHRvIHVzZSBvY2FtbCB0byBwaXBl
IHRoZSByZXN1bHQgb2YgYSBjb21tYW5kIHRvIGFub3RoZXIgKEkNCiAgd291
bGQgYWxzbyBiZSBpbnRlcmVzdGVkIGluIGZlZWRpbmcgYSBzdHJpbmcgb3Ig
YSBpbyBzdHJlYW0gaW50byBhIHNoDQogIGNvbW1hbmQpLiBGb3IgZXhhbXBs
ZSwgSSB3b3VsZCBsaWtlIHRvIGRvIHRoZSBlcXVpdmFsZW50IG9mIGNhdA0K
ICBmb28udHh0IHwgZ3JlcCB0aGluZywgb3IgcGlwZSB0aGUgcmVzdWx0IG9m
IG9uZSBvZiBteSBvY2FtbCBmdW5jdGlvbg0KICBpbnRvIGdyZXAuDQoNCiAg
UXVpdGUgc3VycHJpbnNpbmdseSwgbmVpdGhlciB0aGUgU3RkbGliIG9yIEJh
dHRlcmllcyBTeXMgbW9kdWxlcw0KICBleHBvc2UgYW55IHdheSB0byBoYW5k
bGUgdGhlIG91dHB1dCBvZiBTeXMuY29tbWFuZCBkaXJlY3RseSAoSSB3b3Vs
ZA0KICBoYXZlIHRob3VnaHQgdGhlcmUgd291bGQgYmUgb3B0aW9uYWwgaW5w
dXQgYW5kIG91dHB1dCBhcmd1bWVudHMNCiAgZGVmYXVsdGluZyB0byBzdGRp
biBhbmQgc3Rkb3V0LCBvciBzb21ldGhpbmcgYWxvbmcgdGhhdCkuIEJhdHRl
cmllcyBJTw0KICBtb2R1bGUgZG9lcyBleHBvc2UgYSBwaXBlIGZ1bmN0aW9u
IGJ1dCBpdCdzIG5vdCBjbGVhciBmb3IgbWUgaG93IGl0DQogIHdvdWxkIGlu
dGVyYWN0IHdpdGggdGhlIFN5cyBtb2R1bGUuIEFueSBpZGVhcyBvciBvdGhl
ciBtb2R1bGVzL3BhY2thZ2UNCiAgSSBjb3VsZCB1c2UgPw0KDQoNCk5pY29s
w6FzIE9qZWRhIELDpHIgc3VnZ2VzdGVkDQrilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIANCg0KICBJIHRoaW5rIHlvdSBtYXkgYmUgaW50
ZXJlc3RlZCBieQ0KICA8aHR0cHM6Ly9naXRodWIuY29tL2phbmVzdHJlZXQv
c2hleHA+Lg0KDQoNCk5pY29sYXMgVG9sbGVuYWVyZSB0aGVuIHNhaWQNCuKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEBn
cmF5c3dhbmR5ciBAbm9qYiBUaGFua3MgZm9yIHRoZSBzdWdnZXN0aW9uLiBJ
IGp1c3QgZm91bmQgc2hjYW1sDQogIDxodHRwOi8vdG92LmdpdGh1Yi5pby9z
aGNhbWwvZG9jLz4gYW5kIEkgd2FzIGdvaW5nIHRvIGdpdmUgaXQgYSB0cnks
DQogIGRvIHlvdSBrbm93IGhvdyBpdCBjb21wYXJlcyB0byBzaGV4cCA/DQoN
Cg0KRGF2aWQgQ2hlbW91aWwgcmVwbGllZA0K4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSADQoNCiAgQUZBSUsgc2hjYW1sIGlzIHVubWFpbnRhaW5lZCwgYnV0IHRo
ZSBhcHByb2FjaCBpcyB2ZXJ5IG5pY2UgaW5kZWVkLg0KDQoNCk9sZCBDV04N
CuKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIElmIHlvdSBoYXBwZW4gdG8g
bWlzcyBhIENXTiwgeW91IGNhbiBbc2VuZCBtZSBhIG1lc3NhZ2VdIGFuZCBJ
J2xsIG1haWwNCiAgaXQgdG8geW91LCBvciBnbyB0YWtlIGEgbG9vayBhdCBb
dGhlIGFyY2hpdmVdIG9yIHRoZSBbUlNTIGZlZWQgb2YgdGhlDQogIGFyY2hp
dmVzXS4NCg0KICBJZiB5b3UgYWxzbyB3aXNoIHRvIHJlY2VpdmUgaXQgZXZl
cnkgd2VlayBieSBtYWlsLCB5b3UgbWF5IHN1YnNjcmliZQ0KICBbb25saW5l
XS4NCg0KICBbQWxhbiBTY2htaXR0XQ0KDQoNCltzZW5kIG1lIGEgbWVzc2Fn
ZV0gPG1haWx0bzphbGFuLnNjaG1pdHRAcG9seXRlY2huaXF1ZS5vcmc+DQoN
Clt0aGUgYXJjaGl2ZV0gPGh0dHA6Ly9hbGFuLnBldGl0ZXBvbW1lLm5ldC9j
d24vPg0KDQpbUlNTIGZlZWQgb2YgdGhlIGFyY2hpdmVzXSA8aHR0cDovL2Fs
YW4ucGV0aXRlcG9tbWUubmV0L2N3bi9jd24ucnNzPg0KDQpbb25saW5lXSA8
aHR0cDovL2xpc3RzLmlkeWxsLm9yZy9saXN0aW5mby9jYW1sLW5ld3Mtd2Vl
a2x5Lz4NCg0KW0FsYW4gU2NobWl0dF0gPGh0dHA6Ly9hbGFuLnBldGl0ZXBv
bW1lLm5ldC8+DQoNCg==

--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2020-03-24 Tue 10:30 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org mode" />
<style type=3D"text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
<script type=3D"text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2019 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target =3D document.getElementById(id);
   if(null !=3D target) {
     elem.cacheClassElem =3D elem.className;
     elem.cacheClassTarget =3D target.className;
     target.className =3D "code-highlighted";
     elem.className   =3D "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target =3D document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className =3D elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className =3D elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"http://alan.petitepomme.net/cwn/2020.03.17.html">Previous Week</=
a> <a href=3D"http://alan.petitepomme.net/cwn/index.html">Up</a> <a href=3D=
"http://alan.petitepomme.net/cwn/2020.03.31.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of March 17 to 24, 2020.
</p>

<div id=3D"table-of-contents">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents">
<ul>
<li><a href=3D"#1">Luv 0.5.1 =E2=80=94 a libuv binding =E2=80=94 Windows su=
pport</a></li>
<li><a href=3D"#2">resto 0.2 released</a></li>
<li><a href=3D"#3">Bisect_ppx 2.0.0 =E2=80=94 code coverage for OCaml with =
nice HTML reports</a></li>
<li><a href=3D"#4">OCaml 4.09.1 released</a></li>
<li><a href=3D"#5">Cookie 0.1.6</a></li>
<li><a href=3D"#6">First release of lwt-pipeline</a></li>
<li><a href=3D"#7">Using Ocaml as scripting language - piping sh commands</=
a></li>
<li><a href=3D"#org9859b89">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-orga72e90d" class=3D"outline-2">
<h2 id=3D"1">Luv 0.5.1 =E2=80=94 a libuv binding =E2=80=94 Windows support<=
/h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/luv-0-5-1-a-libuv-binding-w=
indows-support/5334/1">https://discuss.ocaml.org/t/luv-0-5-1-a-libuv-bindin=
g-windows-support/5334/1</a>
</p>
</div>

<div id=3D"outline-container-org74b1386" class=3D"outline-3">
<h3 id=3D"org74b1386">Anton Bachin announced</h3>
<div class=3D"outline-text-3" id=3D"text-org74b1386">
<p>
I am pleased to announce release <a href=3D"https://github.com/aantron/luv/=
releases/tag/0.5.1">0.5.1</a> of <a href=3D"https://github.com/aantron/luv"=
><b><b>Luv</b></b></a>. The main change is the addition of Windows support,=
 which makes Luv fully cross-platform.
</p>

<p>
Accordingly, Luv 0.5.1 is now installable from both the main opam repo, and=
 from opam-repository-mingw.
</p>

<p>
<a href=3D"https://github.com/aantron/luv">https://github.com/aantron/luv</=
a>
</p>

<p>
Also, as a side effect of the build system refactoring that was needed to s=
upport Windows, Luv's build system no
longer requires Python, and supports cross-compilation.
</p>

<p>
The other noteworthy change in release 0.5.1 is a routine upgrade of the ve=
ndored libuv to its latest version,
<a href=3D"https://github.com/libuv/libuv/releases/tag/v1.35.0">1.35.0</a>.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-orgca8d8bc" class=3D"outline-2">
<h2 id=3D"2">resto 0.2 released</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-resto-0-2-released/5028=
/2">https://discuss.ocaml.org/t/ann-resto-0-2-released/5028/2</a>
</p>
</div>

<div id=3D"outline-container-orgd8fed08" class=3D"outline-3">
<h3 id=3D"orgd8fed08">Rapha=C3=ABl Proust announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgd8fed08">
</div>
<div id=3D"outline-container-org8fb2823" class=3D"outline-4">
<h4 id=3D"org8fb2823">Releases of <code>resto</code> 0.3 and 0.4</h4>
<div class=3D"outline-text-4" id=3D"text-org8fb2823">
<p>
On behalf of Nomadic Labs, I'm happy to announce the release of versions 0.=
3 and 0.4 of <code>resto</code>. Both versions are
available through <code>opam</code> and available on <a href=3D"https://git=
lab.com/nomadic-labs/resto">https://gitlab.com/nomadic-labs/resto</a>.
</p>

<p>
The main change in 0.3 is to depend on <code>json-data-encoding</code>, the=
 fork of the unmaintained <code>ocplib-json-typed</code>.
</p>

<p>
The changes of 0.4 are more invasive and require users changes:
</p>
<ul class=3D"org-ul">
<li>handle the new <code>`Gone</code> response code, and</li>
<li>pass <code>gettimeofday</code> manually.</li>
</ul>

<p>
This last feature removes a dependency from <code>resto-cohttp</code> to <c=
ode>Unix</code>, and thus helps with use within a <code>js_of_ocaml</code> =
environment.
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-org59daf75" class=3D"outline-2">
<h2 id=3D"3">Bisect_ppx 2.0.0 =E2=80=94 code coverage for OCaml with nice H=
TML reports</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/bisect-ppx-2-0-0-code-cover=
age-for-ocaml-with-nice-html-reports/5338/1">https://discuss.ocaml.org/t/bi=
sect-ppx-2-0-0-code-coverage-for-ocaml-with-nice-html-reports/5338/1</a>
</p>
</div>

<div id=3D"outline-container-org1dc13c4" class=3D"outline-3">
<h3 id=3D"org1dc13c4">Anton Bachin announced</h3>
<div class=3D"outline-text-3" id=3D"text-org1dc13c4">
<p>
I am pleased to announce <a href=3D"https://github.com/aantron/bisect_ppx/r=
eleases/tag/2.0.0">release 2.0.0</a> of <a href=3D"https://github.com/aantr=
on/bisect_ppx"><b><b>Bisect_ppx</b></b></a>, the OCaml coverage tool, which=
 helps
you see which parts of your code are not being tested.
</p>


<div class=3D"figure">
<p><img src=3D"https://aws1.discourse-cdn.com/standard11/uploads/ocaml/orig=
inal/2X/1/1911adc6af898b6f4efd7dc69d2c1f90699031ba.gif" alt=3D"1911adc6af89=
8b6f4efd7dc69d2c1f90699031ba.gif" />
</p>
</div>

<p>
This release is a major upgrade. The highlights are:
</p>

<ul class=3D"org-ul">
<li>Support for BuckleScript, js_of_ocaml, and esy. In other words, Bisect_=
ppx now compiles to both native code and JS, and is published in both opam =
and npm.</li>
<li>The ability to <a href=3D"https://github.com/aantron/bisect_ppx#Coveral=
ls">send reports automatically</a> from Travis and CircleCI to Coveralls an=
d Codecov. More integrations can be added over time.</li>
<li>The awkward <code>(*BISECT-IGNORE*)</code> comments for excluding code =
from instrumentation have been replaced by AST attributes like <code>[@cove=
rage off]</code> (<a href=3D"https://github.com/aantron/bisect_ppx#Exclusio=
n">https://github.com/aantron/bisect_ppx#Exclusion</a>).</li>
<li>A new, more principled instrumentation algorithm.</li>
<li>A new reporter command line based on <a href=3D"https://erratique.ch/so=
ftware/cmdliner/doc/Cmdliner">Cmdliner</a>. Run <code>bisect-ppx-report --h=
elp</code> to get started with it.</li>
<li>Syntax highlighting.</li>
</ul>

<p>
You are invited to peruse the all-new <a href=3D"https://github.com/aantron=
/bisect_ppx#readme">README</a> for details :)
</p>

<p>
Several features have been deprecated; mostly command-line flags. You can s=
ee the list in the <b>Deprecations</b> section of the <a href=3D"https://gi=
thub.com/aantron/bisect_ppx/releases/tag/2.0.0">changelog</a>. However, it =
may be easier to simply try using Bisect_ppx as before =E2=80=93 it will wa=
rn you if you use a deprecated flag. The deprecated flags will be removed i=
n Bisect_ppx 2.1.0, expected around July 2020.
</p>

<p>
Happy testing!
</p>

<p>
<a href=3D"https://github.com/aantron/bisect_ppx">https://github.com/aantro=
n/bisect_ppx</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org01280b5" class=3D"outline-2">
<h2 id=3D"4">OCaml 4.09.1 released</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ocaml-4-09-1-released/5341/=
1">https://discuss.ocaml.org/t/ocaml-4-09-1-released/5341/1</a>
</p>
</div>

<div id=3D"outline-container-orgb03ed9a" class=3D"outline-3">
<h3 id=3D"orgb03ed9a">octachron announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgb03ed9a">
<p>
We have the pleasure of celebrating the anniversary of the first spacewalk,
conducted by Alexei Leonov, by announcing the release of OCaml version 4.09=
.1.
This is mainly a bug-fix release, with a handful of configuration fixes and
a GC fix backported from 4.10.0 . See the list of changes below for more de=
tails.
</p>

<p>
It is (or soon will be) available as a set of OPAM switches,
and as a source download here:
</p>

<p>
<a href=3D"https://github.com/ocaml/ocaml/archive/4.09.1.tar.gz">https://gi=
thub.com/ocaml/ocaml/archive/4.09.1.tar.gz</a>
</p>
</div>

<div id=3D"outline-container-org7a37dc8" class=3D"outline-4">
<h4 id=3D"org7a37dc8">Changes in 4.09.1:</h4>
<div class=3D"outline-text-4" id=3D"text-org7a37dc8">
<ul class=3D"org-ul">
<li><a href=3D"https://github.com/ocaml/ocaml/issues/9073">#9073</a>, <a hr=
ef=3D"https://github.com/ocaml/ocaml/issues/9120">#9120</a>: fix incorrect =
GC ratio multiplier when allocating custom blocks with caml_alloc_custom_me=
m in runtime/custom.c (Markus Mottl, review by Gabriel Scherer and Damien D=
oligez)</li>

<li><a href=3D"https://github.com/ocaml/ocaml/issues/8855">#8855</a>, <a hr=
ef=3D"https://github.com/ocaml/ocaml/issues/8858">#8858</a>: Links for tool=
s not created when installing with &#x2013;disable-installing-byecode-progr=
ams (e.g. ocamldep.opt installed, but ocamldep link not created) (David All=
sopp, report by Thomas Leonard)</li>

<li><a href=3D"https://github.com/ocaml/ocaml/issues/8947">#8947</a>, <a hr=
ef=3D"https://github.com/ocaml/ocaml/issues/9134">#9134</a>, <a href=3D"htt=
ps://github.com/ocaml/ocaml/issues/9302">#9302</a>: fix/improve support for=
 the BFD library (S=C3=A9bastien Hinderer, review by Damien Doligez and Dav=
id Allsopp)</li>

<li><a href=3D"https://github.com/ocaml/ocaml/issues/8953">#8953</a>, <a hr=
ef=3D"https://github.com/ocaml/ocaml/issues/8954">#8954</a>: Fix error subm=
essages in the toplevel: do not display dummy locations (Arma=C3=ABl Gu=C3=
=A9neau, review by Gabriel Scherer)</li>

<li><a href=3D"https://github.com/ocaml/ocaml/issues/8965">#8965</a>, <a hr=
ef=3D"https://github.com/ocaml/ocaml/issues/8979">#8979</a>: Alpine build f=
ailure caused by check-parser-uptodate-or-warn.sh (Gabriel Scherer and Davi=
d Allsopp, report by Anton Kochkov)</li>

<li><a href=3D"https://github.com/ocaml/ocaml/issues/8985">#8985</a>, <a hr=
ef=3D"https://github.com/ocaml/ocaml/issues/8986">#8986</a>: fix generation=
 of the primitives when the locale collation is incompatible with C. (David=
 Allsopp, review by Nicol=C3=A1s Ojeda B=C3=A4r, report by Sebastian Rasmus=
sen)</li>

<li><a href=3D"https://github.com/ocaml/ocaml/issues/9050">#9050</a>, <a hr=
ef=3D"https://github.com/ocaml/ocaml/issues/9076">#9076</a>: install missin=
g compilerlibs/ocamlmiddleend archives (Gabriel Scherer, review by Florian =
Angeletti, report by Olaf Hering)</li>

<li><a href=3D"https://github.com/ocaml/ocaml/issues/9144">#9144</a>, <a hr=
ef=3D"https://github.com/ocaml/ocaml/issues/9180">#9180</a>: multiple defin=
itions of global variables in the C runtime, causing problems with GCC 10.0=
 and possibly with other C compilers (Xavier Leroy, report by J=C3=BCrgen R=
euter, review by Mark Shinwell)</li>

<li><a href=3D"https://github.com/ocaml/ocaml/issues/9180">#9180</a>: pass =
-fno-common option to C compiler when available, so as to detect problemati=
c multiple definitions of global variables in the C runtime (Xavier Leroy, =
review by Mark Shinwell)</li>

<li><a href=3D"https://github.com/ocaml/ocaml/issues/9128">#9128</a>: Fix a=
 bug in bytecode mode which could lead to a segmentation fault. The bug was=
 caused by the fact that the atom table shared a page with some bytecode. T=
he fix makes sure both the atom table and the minor heap have their own pag=
es. (Jacques-Henri Jourdan, review by Stephen Dolan, Xavier Leroy and Gabri=
el Scherer)</li>
</ul>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-orgf40b837" class=3D"outline-2">
<h2 id=3D"5">Cookie 0.1.6</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-cookie-0-1-6/5346/1">ht=
tps://discuss.ocaml.org/t/ann-cookie-0-1-6/5346/1</a>
</p>
</div>

<div id=3D"outline-container-org895353c" class=3D"outline-3">
<h3 id=3D"org895353c">Ulrik Strid announced</h3>
<div class=3D"outline-text-3" id=3D"text-org895353c">
<p>
I recently released a cookie library. It can parse and create cookie header=
s (<code>list((string, string)</code> which both
Cohttp and Httpaf uses), both <code>Set-Cookie</code> and <code>Cookie</cod=
e> so it works on both client and server. It should be compliant with <a hr=
ef=3D"https://tools.ietf.org/html/rfc6265">https://tools.ietf.org/html/rfc6=
265</a> and I have a pretty good test suite for the parsing of cookies at l=
east.
</p>

<p>
I couldn=E2=80=99t find a standalone library before this so I decided to cr=
eate one since I need it for my web framework, <code>Morph</code>.
</p>

<p>
The next step is to create and publish integrations with <a href=3D"https:/=
/github.com/inhabitedtype/ocaml-session"><code>ocaml-session</code></a> whi=
ch I have started.
</p>

<ul class=3D"org-ul">
<li>Repo: <a href=3D"https://github.com/ulrikstrid/ocaml-cookie">https://gi=
thub.com/ulrikstrid/ocaml-cookie</a></li>
<li>Docs: <a href=3D"https://ulrikstrid.github.io/ocaml-cookie">https://ulr=
ikstrid.github.io/ocaml-cookie</a></li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-org3798ddb" class=3D"outline-2">
<h2 id=3D"6">First release of lwt-pipeline</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-first-release-of-lwt-pi=
peline/4220/2">https://discuss.ocaml.org/t/ann-first-release-of-lwt-pipelin=
e/4220/2</a>
</p>
</div>

<div id=3D"outline-container-orgaf5e973" class=3D"outline-3">
<h3 id=3D"orgaf5e973">Rapha=C3=ABl Proust announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgaf5e973">
<p>
A second release of <code>lwt-pipeline</code> (v0.2) is available through <=
code>opam</code>. This new release makes no change to the code and only aff=
ects the following:
</p>

<ul class=3D"org-ul">
<li>looser constraints on versions of <code>dune</code> dependency,</li>
<li>tests,</li>
<li>tests are executed in CI,</li>
<li>minor documentation improvements.</li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-org8b63ef5" class=3D"outline-2">
<h2 id=3D"7">Using Ocaml as scripting language - piping sh commands</h2>
<div class=3D"outline-text-2" id=3D"text-7">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/using-ocaml-as-scripting-la=
nguage-piping-sh-commands/5366/1">https://discuss.ocaml.org/t/using-ocaml-a=
s-scripting-language-piping-sh-commands/5366/1</a>
</p>
</div>

<div id=3D"outline-container-org0f210de" class=3D"outline-3">
<h3 id=3D"org0f210de">Nicolas Tollenaere announced</h3>
<div class=3D"outline-text-3" id=3D"text-org0f210de">
<p>
I am trying to use ocaml to pipe the result of a command to another (I woul=
d also be interested in feeding a string
or a io stream into a sh command). For example, I would like to do the equi=
valent of cat foo.txt | grep thing, or
pipe the result of one of my ocaml function into grep.
</p>

<p>
Quite surprinsingly, neither the Stdlib or Batteries Sys modules expose any=
 way to handle the output of Sys.command
directly (I would have thought there would be optional input and output arg=
uments defaulting to stdin and stdout, or
something along that). Batteries IO module does expose a pipe function but =
it's not clear for me how it would
interact with the Sys module. Any ideas or other modules/package I could us=
e ?
</p>
</div>
</div>


<div id=3D"outline-container-org214a6d5" class=3D"outline-3">
<h3 id=3D"org214a6d5">Nicol=C3=A1s Ojeda B=C3=A4r suggested</h3>
<div class=3D"outline-text-3" id=3D"text-org214a6d5">
<p>
I think you may be interested by <a href=3D"https://github.com/janestreet/s=
hexp">https://github.com/janestreet/shexp</a>.
</p>
</div>
</div>


<div id=3D"outline-container-orgde0ea5d" class=3D"outline-3">
<h3 id=3D"orgde0ea5d">Nicolas Tollenaere then said</h3>
<div class=3D"outline-text-3" id=3D"text-orgde0ea5d">
<p>
@grayswandyr @nojb Thanks for the suggestion. I just found shcaml <a href=
=3D"http://tov.github.io/shcaml/doc/">http://tov.github.io/shcaml/doc/</a> =
and I was going to
give it a try, do you know how it compares to shexp ?
</p>
</div>
</div>


<div id=3D"outline-container-orgad0044f" class=3D"outline-3">
<h3 id=3D"orgad0044f">David Chemouil replied</h3>
<div class=3D"outline-text-3" id=3D"text-orgad0044f">
<p>
AFAIK shcaml is unmaintained, but the approach is very nice indeed.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-org9859b89" class=3D"outline-2">
<h2 id=3D"org9859b89">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org9859b89">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"http://alan.petitepomme.net/cwn/">the archive</a> or the <a=
 href=3D"http://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archives<=
/a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a hre=
f=3D"http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class=3D"authorname">
<p>
<a href=3D"http://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--
