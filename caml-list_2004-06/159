Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA23187; Thu, 10 Jun 2004 21:47:03 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA22862 for <caml-list@pauillac.inria.fr>; Thu, 10 Jun 2004 21:47:01 +0200 (MET DST)
Received: from mxout4.cac.washington.edu (mxout4.cac.washington.edu [140.142.33.19])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i5AJkxSH018563
	for <caml-list@inria.fr>; Thu, 10 Jun 2004 21:47:00 +0200
Received: from mailhost2.u.washington.edu (mailhost2.u.washington.edu [140.142.33.2])
	by mxout4.cac.washington.edu (8.12.11+UW04.02/8.12.11+UW04.03) with ESMTP id i5AJkXcO032172;
	Thu, 10 Jun 2004 12:46:33 -0700
Received: from lulu (mobile258.dyn.cs.washington.edu [128.208.7.79])
	by mailhost2.u.washington.edu (8.12.11+UW04.02/8.12.11+UW04.03) with ESMTP id i5AJkW1I011843;
	Thu, 10 Jun 2004 12:46:33 -0700
Received: from martine by lulu with local (masqmail 0.2.20) id
 1BYVVB-605-00; Thu, 10 Jun 2004 12:46:17 -0700
Date: Thu, 10 Jun 2004 12:46:17 -0700
From: Evan Martin <martine@danga.com>
To: Keith Wansbrough <Keith.Wansbrough@cl.cam.ac.uk>
Cc: skaller@users.sourceforge.net, David Brown <caml-list@davidb.org>,
        Nicolas Cannasse <warplayer@free.fr>,
        "Brandon J. Van Every" <vanevery@indiegamedesign.com>,
        caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] 32 bit floats, SSE instructions
Message-ID: <20040610194617.GB22928@lulu>
References: <1086883041.16811.1168.camel@pelican.wigram> <E1BYSL0-0003eE-00@mta1.cl.cam.ac.uk>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <E1BYSL0-0003eE-00@mta1.cl.cam.ac.uk>
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde with ID 40C8BAB3.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; evan:01 caml-list:01 floats:01 2004:99 pointers:01 doubles:01 evan:01 compilers:01 ints:01 polymorphic:01 polymorphic:01 bytes:02 wrote:03 types:03 types:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, Jun 10, 2004 at 05:23:33PM +0100, Keith Wansbrough wrote:
> > Does that work with polymorphic functions?
> > eg: cause the function to be specialised every call?
> 
> No, but you can tell it to specialise a function to a particular type
> (or any finite number of types), and it will automatically use the
> specialised one if available.

It would seem to me that a polymorphic function would only need to be
specialized for a small set of, uh, "sizes" of data:  bytes, ints,
(and pointers, doubles, longs, depending on the architecture).

Do these compilers really pass larger types by value?  Or does
specialization need more information than the sizes of the types?

-- 
Evan Martin
martine@danga.com
http://neugierig.org

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

