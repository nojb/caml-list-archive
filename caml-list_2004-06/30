Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA19441; Thu, 3 Jun 2004 14:44:23 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA19430 for <caml-list@pauillac.inria.fr>; Thu, 3 Jun 2004 14:44:22 +0200 (MET DST)
Received: from waco.inria.fr (waco.inria.fr [128.93.25.2])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i53CiISH025433;
	Thu, 3 Jun 2004 14:44:18 +0200
Received: from waco.inria.fr (localhost [127.0.0.1])
	by waco.inria.fr (8.12.10/8.12.10) with ESMTP id i53CiIPU031665;
	Thu, 3 Jun 2004 14:44:18 +0200
Received: (from verlyck@localhost)
	by waco.inria.fr (8.12.10/8.12.10/Submit) id i53CiHAX031664;
	Thu, 3 Jun 2004 14:44:17 +0200
Date: Thu, 3 Jun 2004 14:44:17 +0200
Message-Id: <200406031244.i53CiHAX031664@waco.inria.fr>
To: yoriyuki@mbg.ocn.ne.jp
CC: caml-list@inria.fr
In-reply-to: <20040529.182752.74755831.yoriyuki@mbg.ocn.ne.jp>
Subject: Re: [Caml-list] The library parsing S-expressions?
From: Bruno.Verlyck@inria.fr
References:  <20040529.182752.74755831.yoriyuki@mbg.ocn.ne.jp>
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
X-Miltered: at concorde with ID 40BF1D22.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 2004:99 yamagata:01 yoriyuki:01 yoriyuki:01 sexp:01 -bit:01 -bit:01 syntax:02 ast:02 string:03 library:03 library:03 scheme:03 scheme:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

   Date: Sat, 29 May 2004 18:27:52 +0900 (JST)
   From: Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp>

   Does anyone know a library converting S-expressions to AST?
   Preferably, it would allow 8-bit characters in symbol names,
   bacause I want to parse the file using Japanese symbol names.
There's something like this in Cash, a sort of Scheme reader, in fact.
Files sexp.ml*, atomo.mll, schlex.ml*.  Anything that's not something
else (number, string) is a symbol, with 8-bit chars if any.  The
lexical syntax is inspired by Scheme, but the source is small and
should be easy to modify.

Bruno.
http://pauillac.inria.fr/cash/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

