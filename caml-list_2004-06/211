Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id EAA17442; Wed, 16 Jun 2004 04:30:13 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA20256 for <caml-list@pauillac.inria.fr>; Wed, 16 Jun 2004 04:27:25 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i5G2QpEV002015
	for <caml-list@inria.fr>; Wed, 16 Jun 2004 04:26:53 +0200
Received: from [192.168.1.200] (ppp219-112.lns2.syd3.internode.on.net [203.122.219.112])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i5G2Qj4Y011010;
	Wed, 16 Jun 2004 11:56:47 +0930 (CST)
Subject: Re: [Caml-list] OCaml compared as a scripting language
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Brian Hurt <bhurt@spnz.org>
Cc: Hellflame <hellflame@hotmail.com>, Ocaml Mailing List <caml-list@inria.fr>
In-Reply-To: <Pine.LNX.4.44.0406151359560.4243-100000@localhost.localdomain>
References: <Pine.LNX.4.44.0406151359560.4243-100000@localhost.localdomain>
Content-Type: text/plain
Message-Id: <1087352804.16811.1386.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 16 Jun 2004 12:26:45 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 40CFAFEB.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 ocaml's:01 immutability:01 perl's:01 disadvantage:01 stateful:01 9660:01 glebe:01 ocaml:01 ocaml:01 nsw:01 side-effects:02 snail:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 2004-06-16 at 06:07, Brian Hurt wrote:
> On Tue, 15 Jun 2004, Hellflame wrote:

> 
> Now, the whole situation has reversed.  Ocaml's feature of 
> immutability/functional programming becomes an advantage in the large, 
> while Perl's feature of side effects becomes a disadvantage.

Hmm .. but (a) Perl like most languages can be used
in a functional way to some extent and (b) Ocaml is worse
than Perl, C or C++ or Felix when it comes to side-effects
since there is no syntactic or type system support.

I think the number of constructions needed for a good
programming language are quite small. I also think we
have little idea what they are: clearly we need
a unified account of both functional and stateful
programming perhaps derived by dualising the better
understood functional paradigm. 

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

