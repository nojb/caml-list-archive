Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA04033; Thu, 17 Jun 2004 08:47:02 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA03745; Thu, 17 Jun 2004 08:47:01 +0200 (MET DST)
Received: from nef.ens.fr (nef.ens.fr [129.199.96.32])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i5H6l0SH001685;
	Thu, 17 Jun 2004 08:47:00 +0200
Received: from clipper.ens.fr (clipper-gw.ens.fr [129.199.1.22])
          by nef.ens.fr (8.12.11/1.01.28121999) with ESMTP id i5H6kv4W087621
          ; Thu, 17 Jun 2004 08:46:57 +0200 (CEST)
Received: from localhost (frisch@localhost) by clipper.ens.fr (8.12.3/jb-1.1)
	id i5H6kulL007614 ; Thu, 17 Jun 2004 08:46:56 +0200 (MET DST)
X-Authentication-Warning: clipper.ens.fr: frisch owned process doing -bs
Date: Thu, 17 Jun 2004 08:46:55 +0200 (MET DST)
From: Alain Frisch <Alain.Frisch@ens.fr>
X-X-Sender: frisch@clipper.ens.fr
Reply-To: Alain Frisch <Alain.Frisch@ens.fr>
To: Pierre Weis <pierre.weis@inria.fr>
cc: Luc Maranget <Luc.Maranget@inria.fr>, <jgoerzen@complete.org>,
        Caml list <caml-list@inria.fr>
Subject: Re: [Caml-list] ocamllex/yacc and camlp4
In-Reply-To: <200406162248.AAA11976@pauillac.inria.fr>
Message-ID: <Pine.SOL.4.44.0406170842470.23010-100000@clipper.ens.fr>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: by amavisd-milter (http://amavis.org/)
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-1.3.3 (nef.ens.fr [129.199.96.32]); Thu, 17 Jun 2004 08:46:57 +0200 (CEST)
X-Miltered: at concorde with ID 40D13E64.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; alain:01 frisch:01 alain:01 frisch:01 caml-list:01 camlp:01 pierre:01 weis:01 damned:01 camlp:01 syntaxes:01 backend:01 ocaml:01 ocaml:01 simpler:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 17 Jun 2004, Pierre Weis wrote:

>  1) ocamllex and ocamlyacc implementation technologies are damned fast
> and it is difficult to compete with them using streams.

As I understand it, the question was about implementing ocamllex/ocamlyacc
frontend (parsing the specifications) and backend (producing OCaml code)
using Camlp4, not about implementing lexers/parsers using Camlp4 grammars.

I wrote a pa_ocamllex some time ago (and it is included in the OCaml
distribution), but it is no longer in sync with new ocamllex features
(capture variables).

Using Camlp4 to parse the specifications has several advantages: simpler
build procedure (no intermediate file to be generated), support for
alternative syntaxes (e.g. the revised syntax).


-- Alain

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

