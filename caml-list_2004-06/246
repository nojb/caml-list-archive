Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA10045; Fri, 18 Jun 2004 11:57:33 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA10033 for <caml-list@pauillac.inria.fr>; Fri, 18 Jun 2004 11:57:31 +0200 (MET DST)
Received: from will.iki.fi (will.iki.fi [217.169.64.20])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i5I9vUSH005285
	for <caml-list@inria.fr>; Fri, 18 Jun 2004 11:57:30 +0200
Received: from [10.0.20.56] (fa-3-0-0.fw.exomi.com [217.169.64.99])
	by will.iki.fi (Postfix) with ESMTP id 8940413B;
	Fri, 18 Jun 2004 12:57:30 +0300 (EEST)
In-Reply-To: <1087549187.16811.1568.camel@pelican.wigram>
References: <Pine.LNX.4.44.0406171237270.4305-100000@localhost.localdomain> <06D9583C-C0FD-11D8-8AC7-000393863F70@exomi.com> <1087549187.16811.1568.camel@pelican.wigram>
Mime-Version: 1.0 (Apple Message framework v618)
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <E912EE18-C10D-11D8-8AC7-000393863F70@exomi.com>
Content-Transfer-Encoding: 7bit
Cc: Brian Hurt <bhurt@spnz.org>, Ocaml Mailing List <caml-list@inria.fr>
From: Ville-Pertti Keinonen <will@exomi.com>
Subject: Re: [Caml-list] Great Programming Language Shootout Revived
Date: Fri, 18 Jun 2004 12:57:29 +0300
To: skaller@users.sourceforge.net
X-Mailer: Apple Mail (2.618)
X-Miltered: at concorde with ID 40D2BC8A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 shootout:01 camlp:01 ignoring:01 camlp:01 4...:01 well-suited:01 ocaml:01 ocaml:01 variant:02 precisely:02 parsers:03 parsers:03 wrote:03 perl:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


On Jun 18, 2004, at 11:59 AM, skaller wrote:

> Ocaml not only has 'DSL' characteristics, it is easily
> the best DSL around for a wide range of tasks:
> more precisely, Ocaml is such a good DSL it doesn't
> need any built-in DSLs, it uses a DSL generator instead.

What I think of as DSL characteristics are language features targeted 
at specific tasks which aren't generally useful outside that area, yet 
are integrated in the language (e.g. file and text processing in Perl).

> Of course I'm mainly talking about camlp4, but one
> cannot leave out its strong ability to create
> parsers and interpreters and translators by other
> means as another DSL integration technique.

I was ignoring camlp4...and while OCaml is well-suited for creating 
parsers, interpreters and translators, can you think of any specific 
non-general language feature (apart from camlp4) facilitating this?  I 
think things like variant types and pattern matching are extremely 
general language features.

Of course it's difficult to define what a "general" language feature 
is, but I'm curious as to what OCaml features someone might consider 
domain-specific.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

