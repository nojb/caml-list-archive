Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA21475; Tue, 8 Jun 2004 21:13:48 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA21656 for <caml-list@pauillac.inria.fr>; Tue, 8 Jun 2004 21:13:47 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i58JDhSH004208
	for <caml-list@inria.fr>; Tue, 8 Jun 2004 21:13:45 +0200
Received: from [192.168.1.200] (ppp114-11.lns1.syd3.internode.on.net [150.101.114.11])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i58JDc4Y080978;
	Wed, 9 Jun 2004 04:43:41 +0930 (CST)
Subject: Re: [Caml-list] Re: Efficient C++ Interfacing?
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Fritz Wuehler <fritz@spamexpire-200406.rodent.frell.eu.org>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <3a4641a78693342be4a5f7172e068f53@remailer.frell.eu.org>
References: <3a4641a78693342be4a5f7172e068f53@remailer.frell.eu.org>
Content-Type: text/plain
Message-Id: <1086722017.16811.901.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 09 Jun 2004 05:13:38 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 40C60FE7.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 interfacing:01 sourceforge:01 2004:99 bootstrapped:01 unambiguous:01 lalr:01 9660:01 glebe:01 compilers:01 ocaml:01 ocaml:01 nsw:01 syntax:02 snail:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 2004-06-09 at 01:02, Fritz Wuehler wrote:

> > I want to process data with OCaml
> 
> Oh, I thought Felix wanted to be bootstrapped.

It does, eventually. however, to do that
I would have to write some very complex
code in an unstable language (Felix).
[At the moment, Ocaml is better for writing
compilers in :]

> Since Felix is so C++ friendly it should be
> easy to drop OpenC++ in to help bootstrapping.
> Seems a waste to write a C++ parser in Ocaml
> that has to be rewritten in Felix later.

Sure but you're effectively suggesting to use
OpenC++ and which means building a representation
using C++ code.

> This thing was designed to do what Felix
> does, make (C++)++ languages.  It can also
> for example deal with Qt's non-C++ issues,
> which is just another (C++)++.

Felix isn't a (C++)++ language syntactically:
the syntax is unambiguous LALR(1) .. :)

You are right I suspect I could write the
wrapper generator in C++ instead of Ocaml,
and then leverage OpenC++ to do the
parsing. There are also several other C++ parsers
including part of CERN's ROOT system.

However this complicates the tool chain quite
a lot. The wrapper generator excluding the parser
is only a few hundred lines of code at the moment.
The C parser is a bit bigger, but I didn't write it.

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

