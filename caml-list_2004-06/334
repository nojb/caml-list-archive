Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA05763; Wed, 23 Jun 2004 22:52:37 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA06466 for <caml-list@pauillac.inria.fr>; Wed, 23 Jun 2004 22:52:36 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i5NKqXSH019290
	for <caml-list@inria.fr>; Wed, 23 Jun 2004 22:52:35 +0200
Received: from [192.168.1.200] (ppp215-31.lns1.syd2.internode.on.net [203.122.215.31])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i5NKqUHY086444;
	Thu, 24 Jun 2004 06:22:32 +0930 (CST)
Subject: Re: [Caml-list] Why must types be always defined at the top level?
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Andreas Rossberg <rossberg@ps.uni-sb.de>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <1088022094.1941.84.camel@pelican.wigram>
References: <20040622224125.GA24785@redhat.com>
	 <20040622225321.GB31368@fichte.ai.univie.ac.at>
	 <1087947151.29427.82.camel@pelican.wigram> <40D97122.8000909@ps.uni-sb.de>
	 <1088001930.1941.31.camel@pelican.wigram>  <40D9AFAF.3040405@ps.uni-sb.de>
	 <1088022094.1941.84.camel@pelican.wigram>
Content-Type: text/plain
Message-Id: <1088023950.1941.98.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 24 Jun 2004 06:52:30 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 40D9ED91.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 2004:99 rossberg:01 bug:01 9660:01 glebe:01 semantics:01 caml:01 int:01 int:01 nsw:01 snail:02 purely:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 2004-06-24 at 06:21, skaller wrote:
> On Thu, 2004-06-24 at 02:28, Andreas Rossberg wrote:
> 
> > However, a stamp based semantics is a purely operational approach and 
> > has no proper explanation in type theory. 
> 
> What has scoping got to do with it though?
> 
> In Felix there is a quirk where you can do this:
> 
> fun f():(1->t) * (t->0) = {
>   type t = "int"; 
>   fun a():t={ return 1; }
>   fun b(x:t):0={ print_int x; }
> }

Woops .. i didn't mean to post this to caml list,
and there is a bug too .. forgot to return the nested
functions :)


-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

