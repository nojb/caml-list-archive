Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA06612; Sun, 20 Jun 2004 23:38:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA06725 for <caml-list@pauillac.inria.fr>; Sun, 20 Jun 2004 23:38:33 +0200 (MET DST)
Received: from muscadet.inria.fr (muscadet.inria.fr [128.93.8.12])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i5KLcWSH002271
	for <caml-list@inria.fr>; Sun, 20 Jun 2004 23:38:32 +0200
Received: by muscadet.inria.fr (Postfix, from userid 11404)
	id 6F26D7AAC; Sun, 20 Jun 2004 23:38:32 +0200 (CEST)
To: caml-list@inria.fr
Subject: [Caml-list] mod_caml's bytecode restriction due to Apache or just CGI
 dyn'linking?
Reply-To: James Leifer <James.Leifer@inria.fr>
From: James Leifer <James.Leifer@inria.fr>
Date: Sun, 20 Jun 2004 23:38:32 +0200
Message-ID: <r77zn6xewpz.fsf@muscadet.inria.fr>
User-Agent: Gnus/5.1006 (Gnus v5.10.6) Emacs/21.2 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at concorde with ID 40D603D8.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml's:01 caml's:01 read-only:01 hash:01 perfomance:01 statically:01 natively:01 glue:01 ocaml:01 ocaml:01 caml:01 bytecode:01 bytecode:01 handles:01 native:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi Richard et al,

I had a question about mod_caml's design.  I understand from the web
page that confining CGIs to bytecode isn't particularly onereous.  The
argument that most of the overhead is in talking with the db makes
perfect sense.

Yet for some applications, native would be useful.  For example, for
read-only data that changes only a few times a day, one can pack it in
Ocaml hash tables and get high perfomance queries right in Ocaml.  In
such a setup where Ocaml handles both the page layout *and* the
functionality of a db, native code looks a lot more attractive.

So... Is the limitation to use bytecode due to the desire to support
*dynamic* linking of CGIs or for other reasons?  If only the former,
then could one simply forgo this feature and *statically* link all the
natively compiled CGIs together with the mod_caml glue to make a
library that gets delivered to Apache?  If the price is that I have to
restart Apache when changing my CGIs I would be willing to pay it.

Kind regards,
-James

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

