Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA10955; Tue, 29 Jun 2004 09:34:46 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA10952 for <caml-list@pauillac.inria.fr>; Tue, 29 Jun 2004 09:34:44 +0200 (MET DST)
Received: from hirsch.in-berlin.de (hirsch.in-berlin.de [192.109.42.6])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i5T7YhEV024177
	for <caml-list@inria.fr>; Tue, 29 Jun 2004 09:34:43 +0200
X-Envelope-From: postmaster@first.in-berlin.de
X-Envelope-To: <caml-list@inria.fr>
Received: from hirsch.in-berlin.de (localhost [127.0.0.1])
	by hirsch.in-berlin.de (8.12.11/8.12.11/Debian-3) with ESMTP id i5T7YhNQ024388
	for <caml-list@inria.fr>; Tue, 29 Jun 2004 09:34:43 +0200
Received: (from www-data@localhost)
	by hirsch.in-berlin.de (8.12.11/8.12.11/Debian-3) id i5T7YhmE024387;
	Tue, 29 Jun 2004 09:34:43 +0200
Date: Tue, 29 Jun 2004 09:34:43 +0200
Message-Id: <200406290734.i5T7YhmE024387@hirsch.in-berlin.de>
X-Authentication-Warning: hirsch.in-berlin.de: www-data set sender to postmaster@first.in-berlin.de using -f
From: oliver@first.in-berlin.de
To: caml-list@inria.fr
X-Sender: postmaster@first.in-berlin.de
X-Mailer: UUCP WebMail - IN-Berlin e.V.
References: <20040616032612.GA23426@complete.org>
In-Reply-To: <20040616032612.GA23426@complete.org>
Subject: [Caml-list] Startconditions in ocamllex
Content-Type: text/plain; charset=iso-8859-15
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
X-Miltered: at nez-perce with ID 40E11B93.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; oliver:01 in-berlin:01 implemented:01 implemented:01 oliver:01 syntax:02 ciao:02 lex:04 lex:04 ocamllex:05 ocamllex:05 documented:07 feature:07 i'm:07 hello:15 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello,


in the original lex it is possible to use startconditions.
Is that possible in ocamllex too?
There is no description of start conditions in the
ocamllex-section of the Ocaml-manual.

So I'm not sure if that feature is implemented and not documented,
or if it is not implemented.

And: which syntax to use? Is it the same like in lex?

Ciao,
   Oliver

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

