Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA06986; Mon, 14 Jun 2004 23:52:18 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA08561; Mon, 14 Jun 2004 23:52:17 +0200 (MET DST)
Received: from smtp.mbg.ocn.ne.jp (mbg.ocn.ne.jp [210.190.142.181])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i5ELqFSH027798;
	Mon, 14 Jun 2004 23:52:16 +0200
Received: from localhost (p27229-adsau14honb7-acca.tokyo.ocn.ne.jp [220.111.77.229])
	by smtp.mbg.ocn.ne.jp (Postfix) with ESMTP
	id 0E5BB62D6; Tue, 15 Jun 2004 06:52:14 +0900 (JST)
Date: Tue, 15 Jun 2004 06:51:36 +0900 (JST)
Message-Id: <20040615.065136.108813244.yoriyuki@mbg.ocn.ne.jp>
To: xavier.leroy@inria.fr
Cc: sjah@land.ru, caml-list@inria.fr
Subject: Re: [Caml-list] string_of_float -> float_of_string locale
 dependency bug
From: Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp>
In-Reply-To: <20040614175822.B28810@pauillac.inria.fr>
References: <20040614115444.A14769@pauillac.inria.fr>
	<20040615.002347.94548124.yoriyuki@mbg.ocn.ne.jp>
	<20040614175822.B28810@pauillac.inria.fr>
X-Mailer: Mew version 3.3 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 40CE1E0F.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 locale:01 bug:01 yamagata:01 yoriyuki:01 yoriyuki:01 caml-list:01 locale:01 bug:01 2004:99 camomile:01 camomile:01 api:01 run-time:01 api:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Xavier Leroy <xavier.leroy@inria.fr>
Subject: Re: [Caml-list] string_of_float -> float_of_string locale dependency bug
Date: Mon, 14 Jun 2004 17:58:22 +0200

> > Camomile needs to set LC_ALL to acquire LC_NUMERIC value.  Camomile
> > does not use LC_NUMERIC value currently, but it provides API to
> > getting all LC_* values for the user.
> 
> Fine.  So what about restoring LC_NUMERIC after getting its value, like you
> helpfully suggest that the Caml run-time system does?

Because I did not aware that this causes a problem.  I will do
something to fix this problem.

> > > The C library API for internationalization is largely broken, and as
> > > you can see there is nothing we can do to work around the fact that
> > > the current locale is a global variable for the whole program.
> > 
> > You can temporally save the current LC_NUMERIC value, change its value
> > to C, and restore the value after the conversion.  What is a problem?
> 
> Speed.  setlocale() is quite expensive, and string <-> float
> conversions can be extremely frequent.

Then, how about wrapping the entire ocaml-runtime by this "locale-free
zone"?  C primitives would be executed in "C" locale, but let them
have an access to the saved locale and temporarily revert back to the
original locale.

--
Yamagata Yoriyuki

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

