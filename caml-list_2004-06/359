Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA18732; Fri, 25 Jun 2004 03:59:04 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA18800 for <caml-list@pauillac.inria.fr>; Fri, 25 Jun 2004 03:59:02 +0200 (MET DST)
Received: from mproxy.gmail.com (mproxy.gmail.com [216.239.56.240])
	by nez-perce.inria.fr (8.12.10/8.12.10) with SMTP id i5P1x0EV008550
	for <caml-list@inria.fr>; Fri, 25 Jun 2004 03:59:01 +0200
Received: by mproxy.gmail.com with SMTP id r62so125978cwc
        for <caml-list@inria.fr>; Thu, 24 Jun 2004 18:59:00 -0700 (PDT)
Received: by 10.11.119.30 with SMTP id r30mr239680cwc;
        Thu, 24 Jun 2004 18:59:00 -0700 (PDT)
Message-ID: <891bd3390406241859600a9fba@mail.gmail.com>
Date: Thu, 24 Jun 2004 21:59:00 -0400
From: Yaron Minsky <yminsky@gmail.com>
Reply-To: yminsky@cs.cornell.edu
To: Caml Mailing List <caml-list@inria.fr>
Subject: Re: [Caml-list] Why must types be always defined at the top level?
In-Reply-To: <20040624194553.A27745@pauillac.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
References: <1088023950.1941.98.camel@pelican.wigram> <20040624142732.9767110EF06@clark.cs.brown.edu> <20040624194553.A27745@pauillac.inria.fr>
X-Miltered: at nez-perce with ID 40DB86E4.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; yaron:01 minsky:01 yminsky:01 caml-list:01 2004:99 floats:01 reinvent:01 kahan:01 floats:01 abide:01 equality:01 equality:01 arithmetic:01 0200,:01 float:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 24 Jun 2004 19:45:53 +0200, Xavier Leroy <xavier.leroy@inria.fr> wrote:

> As to whether equality should be defined on floats, there are pros and
> cons.  My standpoint is that it's eventually better to stick to
> established standards (that is, IEEE float arithmetic) rather than try
> to reinvent a wheel likely to be even squarer than these standards.
> Prof. Kahan found it worthwhile to fully define equality over floats;
> I'll abide by his wisdom.

For what it's worth, I've found equality types for floats to be VERY
useful.  That's because I do a lot of data munging which involves
moving data (including floats) around from place to place, and so all
I'm relying on is the fact that when you copy a float from one place
to another, then the resulting float is equal to the original.

The only thing that kills me in this context is nan, which turns out
not to be equal to anything.  I've already spent too much time on the
list complaining about that, however...

y

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

