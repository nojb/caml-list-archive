Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id FAA11211; Wed, 9 Jun 2004 05:05:51 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id FAA10978 for <caml-list@pauillac.inria.fr>; Wed, 9 Jun 2004 05:05:50 +0200 (MET DST)
Received: from ptb-relay03.plus.net (ptb-relay03.plus.net [212.159.14.214])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i5935nEV001506
	for <caml-list@inria.fr>; Wed, 9 Jun 2004 05:05:49 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by ptb-relay03.plus.net with esmtp (Exim) id 1BXtPQ-000McM-U0; Wed, 09 Jun 2004 03:05:49 +0000
From: Jon Harrop <jdh30@cam.ac.uk>
Organization: University of Cambridge
To: "Brandon J. Van Every" <vanevery@indiegamedesign.com>
Subject: Re: [Caml-list] 32 bit floats, SSE instructions
Date: Wed, 9 Jun 2004 04:04:23 +0100
User-Agent: KMail/1.6.2
Cc: "caml" <caml-list@inria.fr>
References: <OOEALCJCKEBJBIJHCNJDEEGAHDAB.vanevery@indiegamedesign.com>
In-Reply-To: <OOEALCJCKEBJBIJHCNJDEEGAHDAB.vanevery@indiegamedesign.com>
MIME-Version: 1.0
Content-Disposition: inline
Content-Type: text/plain;
  charset="windows-1252"
Content-Transfer-Encoding: 7bit
Message-Id: <200406090404.23544.jdh30@cam.ac.uk>
X-Miltered: at nez-perce with ID 40C67E8D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 floats:01 2004:99 brandon:99 scream:01 'real:01 ocaml's:01 abandon:01 inventing:01 avoided:01 judicious:01 gcc:01 metaocaml:01 clue:01 tweaked:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wednesday 09 June 2004 02:33, Brandon J. Van Every wrote:
> Am I allowed to just scream at you every time someone utters this
> drivel?  Compare how Xavier feels about the 'real world'.  I think all
> the 'exterior constant' O() theory guys should be hung from the rafters.

I used to be like that. Now I see multiresolution representations everywhere.

> ... One of OCaml's strengths as far as
> gaining language converts, actually, is that it doesn't immediately
> force C++ people to abandon an imperative, OO mode of thinking.

Yes, just look at Skaller. ;-)

> The "Worse Is Better" school of technological development has won.  You
> have to deal with that reality if you want to benefit from it.
> Otherwise, have fun writing all your own code from scratch.

I understand that there are sectors where this has to be the case. A long time 
ago, I worked in one such area. I hated it. Now I avoid it like the plague. I 
much prefer inventing new maths and flogging it to people for lots of money.

> > Just out of curiosity, do you use the STL much? An interface
> > to the STL might be interesting.
>
> I don't.  I've totally avoided it, and I despise the thought of having
> to deal with it.

Interesting. Before I learned OCaml, I spent a long time writing 
partially-specialised code by abusing the C++ template system. I also made 
judicious use of the STL as well. I always thought that it was the only 
aspect of the language which made using it worthwhile.

Incidentally, I eventually abandoned this because there were so many bugs and 
missing features in gcc. That was 2.95, IIRC, the new ones seem to have the 
same numbers of bugs and missing features albeit in different areas?!

> I went looking for higher level languages rather than 
> worry about STL.

I think that is for the best. Although the STL was the only well-designed bit 
of C++ code that I've ever seen (including mine ;-).

> Thanks for reminding me that there's a dimension of 
> the C++ migration problem I hadn't considered.  I don't make much use of
> templates... but they're germane to the C++ idiom, they won't be
> 'optional'.

Yes, I'd like some partial specialisation in OCaml. Oh how I yearn for a 
native-code MetaOCaml compiler. It's not all important though.

> > I'm getting offered jobs because I am so much more
> > productive as a consequence.
>
> So where are you finding these OCaml jobs?  Clue us in.

Basically, anywhere that people are used to writing in C/C++ or, dare I say 
it, FORTRAN. Most of them have never seen a tree, let alone a language which 
can manipulate them without segfaulting. There are lots of applications in 
science, engineering, maths etc. which currently use flat data structures 
because they are easy to write in C and FORTRAN. People have tweaked (and 
corrected!) these programs for decades. But much simpler, multiresolution 
methods written in languages like OCaml are so much more robust, elegant and 
efficient on large inputs (which is where the money and supercomputers are) 
that they're always sold immediately.

IMHO, this is decidedly ironic. Physical scientists have mocked biologists 
since the beginning of time because they don't apply mathematics when they 
should. Stereotypical biologists argue until they are blue in the face about 
whether or not the ions flow inwards or outwards. But physical scientists 
make an equivalent mistake with respect to programming and, so, computer 
scientists laugh at them. Physical scientists ignore complexity theory and 
everything related to it and just stick to programming in FORTRAN because it 
lets you iterate over flat containers slightly more quickly. Talk about 
low-hanging fruit.

It's very timely to have a PhD in this stuff. Soon, the whole world will be 
multiresolution (and mine). :-)

Cheers,
Jon.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

