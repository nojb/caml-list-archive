Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA31395; Wed, 9 Jun 2004 11:58:58 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA31361 for <caml-list@pauillac.inria.fr>; Wed, 9 Jun 2004 11:58:57 +0200 (MET DST)
Received: from mail.physik.uni-muenchen.de (mail.physik.uni-muenchen.de [192.54.42.129])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i599wuEV011329
	for <caml-list@inria.fr>; Wed, 9 Jun 2004 11:58:56 +0200
Received: from localhost (unknown [127.0.0.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id 4F85B200B1
	for <caml-list@inria.fr>; Wed,  9 Jun 2004 11:58:56 +0200 (CEST)
Received: from mail.physik.uni-muenchen.de ([127.0.0.1])
 by localhost (mail.physik.uni-muenchen.de [127.0.0.1]) (amavisd-new, port 10024)
 with LMTP id 01344-01-79 for <caml-list@inria.fr>;
 Wed,  9 Jun 2004 11:58:54 +0200 (CEST)
Received: from mailhost.cip.physik.uni-muenchen.de (kaiser.cip.physik.uni-muenchen.de [141.84.136.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id A39EE200A7
	for <caml-list@inria.fr>; Wed,  9 Jun 2004 11:58:54 +0200 (CEST)
Received: from seekar.cip.physik.uni-muenchen.de (seekar.cip.physik.uni-muenchen.de [141.84.136.52])
	by mailhost.cip.physik.uni-muenchen.de (Postfix) with ESMTP id 976BB26E87
	for <caml-list@inria.fr>; Wed,  9 Jun 2004 11:58:54 +0200 (CEST)
Received: by seekar.cip.physik.uni-muenchen.de (Postfix, from userid 3092)
	id 8A0AA31394; Wed,  9 Jun 2004 11:58:54 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by seekar.cip.physik.uni-muenchen.de (Postfix) with ESMTP id 87C8C31393
	for <caml-list@inria.fr>; Wed,  9 Jun 2004 11:58:54 +0200 (CEST)
Date: Wed, 9 Jun 2004 11:58:54 +0200 (CEST)
From: Thomas Fischbacher <Thomas.Fischbacher@Physik.Uni-Muenchen.DE>
To: caml-list@inria.fr
Subject: [Caml-list] String Problem
Message-ID: <Pine.LNX.4.58.0406091144100.9017@seekar.cip.physik.uni-muenchen.de>
X-BOFH: Daemons did it
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: by amavisd-new at physik.uni-muenchen.de
X-Miltered: at nez-perce with ID 40C6DF60.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; physik:01 parallelize:01 chunks:01 serializing:01 serialized:01 serialize:01 cip:99 physik:01 cip:99 -bit:01 -bit:01 ocaml:01 ocaml:01 caml:01 simpler:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Dear Caml hackers,

I am just doing some quite large (string theory) calculation which 
basically runs through a huge tree and does some computation at every 
node in ocaml which I have to parallelize in an effective way. My present 
approach is to set an alarm for the process doing the calculation, then 
splitting into chunks and serializing all the work that corresponds to 
nodes that have been touched but for which the calculation has not yet 
been finished. The serialized strings are then compressed and sent out via 
the net to other machines to help with the calculation.

I'd love to avoid temporary files, as these are not necessary, and my 
design is simpler and cleaner without having to worry about filesystem 
issues.

Now I encounter the problem that ocaml can only serialize to 
strings, but these are limited to 16 MB in size. If my data set (which is 
structured in a complicated way, i.e. it would be quite some effort to 
write specialized readers and printers) gets large enough, this entire 
approach therefore breaks down.

So, would it be that much of a problem to take the length information 
for strings out of the type word (I suppose that's the problem here) and 
use a proper 32-bit quantity on 32-bit machines here? I simply cannot 
believe it's not many more people experiencing similar difficulties with 
this 16 MB limitation on string lengths.


-- 
regards,               tf@cip.physik.uni-muenchen.de              (o_
 Thomas Fischbacher -  http://www.cip.physik.uni-muenchen.de/~tf  //\
(lambda (n) ((lambda (p q r) (p p q r)) (lambda (g x y)           V_/_
(if (= x 0) y (g g (- x 1) (* x y)))) n 1))                  (Debian GNU)

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

