Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA19067; Wed, 9 Jun 2004 18:13:16 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA19219 for <caml-list@pauillac.inria.fr>; Wed, 9 Jun 2004 18:13:14 +0200 (MET DST)
Received: from herd.plethora.net (herd.plethora.net [205.166.146.1])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i59GD7SH025439
	for <caml-list@inria.fr>; Wed, 9 Jun 2004 18:13:07 +0200
Received: from bhurt.plethora.net (bhurt.plethora.net [205.166.146.49])
	by herd.plethora.net (8.11.6/8.10.1) with ESMTP id i59GD2G28519
	for <caml-list@inria.fr>; Wed, 9 Jun 2004 11:13:02 -0500 (CDT)
Date: Wed, 9 Jun 2004 11:18:52 -0500 (CDT)
From: Brian Hurt <bhurt@spnz.org>
X-X-Sender: bhurt@localhost.localdomain
To: caml <caml-list@inria.fr>
Subject: Re: [Caml-list] popular for being popular
In-Reply-To: <OOEALCJCKEBJBIJHCNJDIEGKHDAB.vanevery@indiegamedesign.com>
Message-ID: <Pine.LNX.4.44.0406091035060.4243-100000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Miltered: at concorde with ID 40C73713.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 brandon:99 abandon:01 ocaml's:01 cop:99 api:01 pursued:99 ideally:01 partnership:99 ocamlopt:01 work-:99 python:01 resembling:01 vaguely:01 python:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, 9 Jun 2004, Brandon J. Van Every wrote:

> > 2) Not Invented Here.  Specifically, Not Invented in Industry.  Eww-
> > research cooties!  The implicit assumption of your average
> > programmer is
> > that people in academia never do "real" work, and wouldn't know it or
> > understand it if it bit them on the ass.  Never mind that writting and
> > maintaining a cross-platform optimizing compiler qualifies as
> > real work,
> > they're certain that no one in academia would ever do
> > something like that.
> > At most, they think, an academic would just write a proof of concept,
> > allowing them to handwave past minor problems, and then
> > promptly abandon
> > the code and return to writting proofs and journal papers.
> 
> Forget theory, where's proof?  There's no OCaml 3D graphics engine out
> there.  I'm on the frontier.  There's nothing proving OCaml's any good
> at 3D graphics at all.  I just have some faith in it because of its
> performance capabilities in other areas.
> 

I will cop to not having a lot of experience in 3D graphics.  On the other
hand, I talk to people in a lot of different areas of the computing
industry.  First off, the vast majority of programmers have no need for
floating point numbers at all.  Second, I have two nuclear-family members
who work in the CAD-CAM industry, and a third who does numeric simulations
(for the military, btw).  And (this issue having come up before), none of
them bother to use single-precision floating point except when an external
API (directX) demands it.  So while the games industry may be all over
single-precision, other users of 3D rendering aren't.

> OCaml is proven at language transformation problems.  Nobody in industry
> cares about this.

Yep.  There being no money in compilers.


> Academics *don't* do real work.  They do research problems, and real
> (i.e. boring) work is regarded as uninteresting.  (And rightly so.)  It
> isn't pursued to the degree necessary for industrial support.  Frankly
> you gotta just pay people to do that kind of gruntwork, it's not fun.
> Ideally one would look to have an academic-industrial partnership.  I
> believe we've been over this ground before, on the subject of core
> language capabilities vs. standard libraries.  I hope someone has the
> energy to move forwards on that... I don't.  I'm worried about 3D
> graphics engines, not (boring) industrial support.
> 
> There's the impulse to do research, and then there's the impulse to
> achieve widespread industrial relevance.  They are not the same impulse.
> 

Obviously my dripping saracasm wasn't dripping enough.  Frankly, I 
consider writting a multi-platform optimizing compiler (like, say, 
ocamlopt) and maintaining it for a decade or more to be more "real" work 
than writting some game that'll have a six month shelf life (if you're 
lucky).

And this is *exactly* the attitude I was talking about.  "Academics can't 
do real work- if they could, they'd be doing real work and not research!"

> > 3) Marketing.
> 
> So where's the Marketing?  If you've got zero marketing, then nobody
> cares about you.  I've been through it with the Python crowd about
> marketing.  They're way farther along the evolutionary succession of
> marketing than you guys are, and they still totally suck.  Hopefully you
> don't have anything remotely resembling Guido's foibles though.  If he
> would just refrain from exercising his prejudicial aesthetic judgement
> on language logos and just get the hell outta the way of people who
> actually have talent for the enterprise... but it didn't happen, and it
> won't happen.  Nobody's going to try again with those PSF Dilberts for a
> few years yet.
> 
> I don't think open source techies are even vaguely capable of marketing.
> In this arena I'm utterly contemptuous of them.  Aside from personal
> experience, I see abundant evidence in Myers-Briggs Type Indicators as
> to why they're this way.  A technology simply has to advance,
> technologically, among techies, until it's finally worth enough money to
> suits that they step in and take over.

Perl and python have gained widespread adoption despite not being
corporate financed.  I go down to my local book store, and what do I see?  
Shelf after shelf of books on C++, Java, Perl, C#, and VB.  If I go
hunting for it, I might find a book on lisp or scheme tucked away in a
corner- I have yet to go into a bookstore and find a book on Ocaml (I
look).  I go to the magazine rack, and what do I see?  Half a dozen (or
more) magazines on C++ and Java programming, 2-3 each on VB and Perl, and
an increasing number on C#.

This is advertising.

-- 
"Usenet is like a herd of performing elephants with diarrhea -- massive,
difficult to redirect, awe-inspiring, entertaining, and a source of
mind-boggling amounts of excrement when you least expect it."
                                - Gene Spafford 
Brian

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

