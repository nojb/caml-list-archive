Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA07446; Tue, 8 Jun 2004 17:04:53 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA07500 for <caml-list@pauillac.inria.fr>; Tue, 8 Jun 2004 17:04:51 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from mail.frell.eu.org (d010174.adsl.hansenet.de [80.171.10.174])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i58F4oEV029200
	for <caml-list@inria.fr>; Tue, 8 Jun 2004 17:04:51 +0200
Received: by mail.frell.eu.org with local 
	id 1BXi72-0004Ju-00 
	for caml-list@inria.fr
	sender fritz-bounce@frell.theremailer.net; Tue, 08 Jun 2004 17:02:04 +0200
From: Fritz Wuehler <fritz@spamexpire-200406.rodent.frell.eu.org>
Comments: This message did not originate from the Sender address above.
	It was remailed automatically by anonymizing remailer software.
	Please report problems or inappropriate use to the
	remailer administrator at <abuse@frell.theremailer.net>.
To: caml-list@inria.fr
Subject: [Caml-list] Re: Efficient C++ Interfacing?
Message-ID: <3a4641a78693342be4a5f7172e068f53@remailer.frell.eu.org>
Date: Tue, 08 Jun 2004 17:02:04 +0200
X-Miltered: at nez-perce with ID 40C5D592.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; interfacing:01 toolkit:01 bootstrapped:01 model:01 ocaml:01 ocaml:01 parser:02 rewritten:02 interface:03 library:03 data:03 efficient:05 seems:05 languages:06 semantic:07 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk



> Sure but this is a C++ code generator

No, see the Overview.
"OpenC++ is a toolkit for C++ translators and analyzers."

> I want to process data with OCaml

Oh, I thought Felix wanted to be bootstrapped.
Since Felix is so C++ friendly it should be
easy to drop OpenC++ in to help bootstrapping.
Seems a waste to write a C++ parser in Ocaml
that has to be rewritten in Felix later.

This thing was designed to do what Felix
does, make (C++)++ languages.  It can also
for example deal with Qt's non-C++ issues,
which is just another (C++)++.

The main thing is, no matter what end goal -
this tool gives you a semantic model of the
C++ code, that you can then interface to OCaml
or whatever language you want.  Treat it like
any other library.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

