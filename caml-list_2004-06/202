Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA31423; Tue, 15 Jun 2004 19:42:47 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA29186 for <caml-list@pauillac.inria.fr>; Tue, 15 Jun 2004 19:42:46 +0200 (MET DST)
Received: from ptb-relay02.plus.net (ptb-relay02.plus.net [212.159.14.213])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i5FHgjSH002469
	for <caml-list@inria.fr>; Tue, 15 Jun 2004 19:42:46 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by ptb-relay02.plus.net with esmtp (Exim) id 1BaHxN-0002S1-Dy
	for caml-list@inria.fr; Tue, 15 Jun 2004 17:42:45 +0000
From: Jon Harrop <jdh30@cam.ac.uk>
Organization: University of Cambridge
To: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml compared as a scripting language
Date: Tue, 15 Jun 2004 18:41:07 +0100
User-Agent: KMail/1.6.2
References: <20040614095216.GA8184@redhat.com> <200406151613.i5FGDN7k030987@waco.inria.fr> <20040615171535.GA14773@redhat.com>
In-Reply-To: <20040615171535.GA14773@redhat.com>
MIME-Version: 1.0
Content-Disposition: inline
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Message-Id: <200406151841.07708.jdh30@cam.ac.uk>
X-Miltered: at concorde with ID 40CF3515.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 2004:99 2004:99 biased:01 verbosity:01 higher-order:01 hofs:01 ocaml:01 ocaml:01 0200,:01 comparison:02 wrote:03 wrote:03 perl:03 perl:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tuesday 15 June 2004 18:15, Richard Jones wrote:
> On Tue, Jun 15, 2004 at 06:13:23PM +0200, Bruno.Verlyck@inria.fr wrote:
> > Anyway, all those language comparisons are always biased; is `program
> > length' a good measure of scripting capacity ?  It turns the
> > comparison into a shortest script challenge, doesn't it ?
>
> Actually it's not a bad measure.  One of the reasons I prefer Perl
> over Java, and OCaml over Perl, is verbosity...

This may be a crazy idea, but is there any formal work on automatically 
factoring higher-order functions out of OCaml programs?

I'm thinking along the lines of a tool which could point out when your code is 
unnecessarily redundant and recommend a common function which could be 
factored out. This seems to be much more interesting in the presence of 
HOFs...

The nearest thing I can think of is in-compiler optimisations like CSE.

Cheers,
Jon.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

