Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA09817; Thu, 10 Jun 2004 18:47:37 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA09828 for <caml-list@pauillac.inria.fr>; Thu, 10 Jun 2004 18:47:36 +0200 (MET DST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i5AGlXSH027734
	for <caml-list@inria.fr>; Thu, 10 Jun 2004 18:47:35 +0200
Received: from [192.168.1.200] (ppp219-112.lns2.syd3.internode.on.net [203.122.219.112])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i5AGlR4Y029134;
	Fri, 11 Jun 2004 02:17:29 +0930 (CST)
Subject: Re: [Caml-list] 32 bit floats, SSE instructions
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Keith Wansbrough <Keith.Wansbrough@cl.cam.ac.uk>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <E1BYSL0-0003eE-00@mta1.cl.cam.ac.uk>
References: <E1BYSL0-0003eE-00@mta1.cl.cam.ac.uk>
Content-Type: text/plain
Message-Id: <1086886046.16811.1196.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 11 Jun 2004 02:47:27 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 40C890A5.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 floats:01 sourceforge:01 2004:99 vars:01 fuzzy:01 9660:01 glebe:01 nsw:01 snail:02 checkout:02 2037:03 wrote:03 btw:03 partial:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 2004-06-11 at 02:23, Keith Wansbrough wrote:

> No, but you can tell it to specialise a function to a particular type
> (or any finite number of types), and it will automatically use the
> specialised one if available.
> 
> (You can't automatically specialise in general if you're doing
> separate compilation - well, you could, but it wouldn't really be
> separate compilation, it would be more like using the function as a
> macro).

Ah .. i seem to recall a discussion on this on comp.lang.functional
now? Regarding partial specialisation where some type vars
are specialised and some not?

BTW: the notion of 'separate compilation' is pretty fuzzy these
days I think.

For example one could argue that it means 'avoiding recompilation
of common parts  of multiple programs' and in this sense
C and C++ don't have separate compilation :)

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

