Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA29822 for caml-red; Tue, 24 Oct 2000 17:50:34 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA10226 for <caml-list@pauillac.inria.fr>; Tue, 24 Oct 2000 10:37:31 +0200 (MET DST)
Received: from tcs.inf.tu-dresden.de (tcs.inf.tu-dresden.de [141.76.75.101])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id e9O8bUv07921;
	Tue, 24 Oct 2000 10:37:30 +0200 (MET DST)
Received: from ithif20.inf.tu-dresden.de (ithif20 [141.76.75.120])
	by tcs.inf.tu-dresden.de (8.11.1/8.11.1) with ESMTP id e9O8bT518585;
	Tue, 24 Oct 2000 10:37:29 +0200 (MET DST)
Received: (from tews@localhost)
	by ithif20.inf.tu-dresden.de (8.9.1a/8.9.1) id KAA23102;
	Tue, 24 Oct 2000 10:37:29 +0200 (MET DST)
Date: Tue, 24 Oct 2000 10:37:29 +0200 (MET DST)
Message-Id: <200010240837.KAA23102@ithif20.inf.tu-dresden.de>
From: Hendrik Tews <tews@tcs.inf.tu-dresden.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
To: Tom Hirschowitz <hirschow@mouton.inria.fr>
Cc: caml-list@inria.fr
Subject: Re: circular types?
In-Reply-To: <200010230743.e9N7hJv12430@concorde.inria.fr>
References: <200010230743.e9N7hJv12430@concorde.inria.fr>
X-Mailer: VM 6.34 under Emacs 19.34.1
Sender: weis@pauillac.inria.fr

Hi,

Tom Hirschowitz writes:
   Date: Mon, 23 Oct 2000 09:43:19 +0200
   Subject: Re: circular types?
   
   Since I'm just beginning this, I would really be pleased by any 
   comments, suggestions or questions about it.
   

I would like to have recursive types spread over different files
like

========== file types.ml

type types =
  | Product of types list
  ...
  | Comprehension of formula

===================================

========== file expression.ml

type expression =
  | Abstraction of (string * types) list * expression
  ....
  | Formula of formula

===================================

========== file formula.ml

type formula = 
  | Forall of (string * types) list * formula
  ...
  | Expression of expression

===================================


It would be great if one could incorporate a class into the
recursion. But I guess as a first step one has to allow recursion
between classes and types in one module as in

    type t = ....

    and class c = ...

    and type t' = ...


Bye,

Hendrik


