Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA12516 for caml-red; Tue, 10 Oct 2000 19:02:25 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA07578 for <caml-list@pauillac.inria.fr>; Tue, 10 Oct 2000 14:49:47 +0200 (MET DST)
Received: from heplix4.ikp.physik.tu-darmstadt.de (heplix4.ikp.physik.tu-darmstadt.de [130.83.24.139])
	by nez-perce.inria.fr (8.10.0/8.10.0) with ESMTP id e9ACnlH04569
	for <caml-list@inria.fr>; Tue, 10 Oct 2000 14:49:47 +0200 (MET DST)
Received: (from ohl@localhost)
	by heplix4.ikp.physik.tu-darmstadt.de (8.9.3/8.9.3) id OAA06373;
	Tue, 10 Oct 2000 14:47:30 +0200
X-Authentication-Warning: heplix4.ikp.physik.tu-darmstadt.de: ohl set sender to ohl@heplix4.ikp.physik.tu-darmstadt.de using -f
From: Thorsten Ohl <ohl@hep.tu-darmstadt.de>
Message-ID: <14819.4066.697232.891781@heplix4.ikp.physik.tu-darmstadt.de>
Date: Tue, 10 Oct 2000 14:47:30 +0200 (CEST)
To: caml-list@inria.fr
Subject: Re: Undefined evaluation order
In-Reply-To: <Pine.BSF.4.21.0010081528360.11237-100000@shell5.ba.best.com>
References: <wd8g0m7mj80.fsf@parate.irisa.fr>
	<Pine.BSF.4.21.0010081528360.11237-100000@shell5.ba.best.com>
X-Mailer: VM 6.74 under Emacs 20.3.1
Reply-To: ohl@hep.tu-darmstadt.de
Sender: weis@pauillac.inria.fr

Brian Rogoff <bpr@best.com> writes:

> For OCaml it appears that the perspective adopted is that the
> programmer must make the temporal dependencies explicit. [...] it is
> mentioned that this usually leads to clearer programs.  I'm sure the
> bytecode compiler argument is valid, but not the code clarity one

Maybe I have ben brainwashed by too much Fortran, but depending on
side effects in the evaluation of function arguments that change the
result according to the evaluation order is not good style, IMHO.
Explicit `let' bindings are clear and improve the likelihood that the
author will still be able to understand his/her code a few year later
significantly.

I agree that leaving this important chunk of the semantics unspecified
is not nice, but closing the door on parallelism forever would be much
worse, IMHO.

(Only half-joking) There should be an option in the compiler
randomizing evaluation order for debugging ...
-- 
Thorsten Ohl, Physics Department, TU Darmstadt -- ohl@hep.tu-darmstadt.de
http://heplix.ikp.physik.tu-darmstadt.de/~ohl/ [<=== PGP public key here]


