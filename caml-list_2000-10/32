Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA32018 for caml-red; Sat, 7 Oct 2000 09:42:13 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA27932 for <caml-list@pauillac.inria.fr>; Sat, 7 Oct 2000 08:46:47 +0200 (MET DST)
Received: from mail.is.titech.ac.jp (mail.is.titech.ac.jp [131.112.51.131])
	by nez-perce.inria.fr (8.10.0/8.10.0) with SMTP id e976kjj08948
	for <caml-list@inria.fr>; Sat, 7 Oct 2000 08:46:45 +0200 (MET DST)
Received: (qmail 12417 invoked from network); 7 Oct 2000 06:46:37 -0000
Received: from dmznat-9.is.titech.ac.jp (HELO localhost) (131.112.51.189)
  by mail.is.titech.ac.jp with SMTP; 7 Oct 2000 06:46:37 -0000
To: bernardp@cli.di.unipi.it
Cc: caml-list@inria.fr
Subject: Re: Undefined evaluation order
In-Reply-To: <Pine.GSO.4.00.10010061259150.1439-100000@carlotta.cli.di.unipi.it>
References: <20001006110211J.wakita@is.titech.ac.jp>
	<Pine.GSO.4.00.10010061259150.1439-100000@carlotta.cli.di.unipi.it>
X-Mailer: Mew version 1.94.1 on Emacs 20.5 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20001007154658H.wakita@is.titech.ac.jp>
Date: Sat, 07 Oct 2000 15:46:58 +0900
From: Ken Wakita <wakita@is.titech.ac.jp>
X-Dispatcher: imput version 990905(IM130)
Lines: 26
Sender: weis@pauillac.inria.fr


Thanks for your correction.  I looked up in versions of "n'th revised
reports on algorithmic language Scheme" and found the following at a
section "Procedure calls":

  Note: Although the order of evaluation is otherwise unspecified, the
        effect of any concurrent evaluation of the operator and
        operand expressions is constrained to be consistent with some
        sequential order of evaluation. The order of evaluation may be
        chosen differently for each procedure call.

        (http://swissnet.ai.mit.edu/~jaffer/r5rs_6.html#SEC28)

This note first appeared in R4RS.  However, in R3RS it is rather
unclear in that "the same evaluation rules" may allow nondeterministic
evaluations:

  Note: In contrast to other dialects of Lisp, the order of evaluation
        is unspecified, and the operator expression and the operand
        expressions are always evaluated with the same evaluation
        rules.

        (http://swissnet.ai.mit.edu/~jaffer/r3rs_6.html#SEC25)

Ken Wakita


