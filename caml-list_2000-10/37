Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA28261 for caml-red; Sun, 8 Oct 2000 18:01:26 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA03648 for <caml-list@pauillac.inria.fr>; Sat, 7 Oct 2000 13:33:29 +0200 (MET DST)
Received: from suburbia.net (suburbia.net [203.4.184.1])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e97BXQT04461
	for <caml-list@inria.fr>; Sat, 7 Oct 2000 13:33:27 +0200 (MET DST)
Received: by suburbia.net (Postfix, from userid 110)
	id B5C306C4E1; Sat,  7 Oct 2000 22:33:23 +1100 (EST)
To: caml-list@inria.fr
Subject: polymorphic variant oddity
Cc: proff@iq.org
From: Julian Assange <proff@iq.org>
Date: 07 Oct 2000 22:33:23 +1100
Message-ID: <wxitr4naws.fsf@suburbia.net>
Lines: 12
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: weis@pauillac.inria.fr



let `F x = x;;   
Unbound value x
# let `F x = 1;;
This expression has type int but is here used with type [< `F of 'a | ..]
# let `F x = `F 1;;
val x : int = 1
# `F 4;;
- : [> `F of int] = `F 4

What exactly is the meaning this?


