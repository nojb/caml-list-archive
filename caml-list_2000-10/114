Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA25892 for caml-red; Wed, 18 Oct 2000 10:25:29 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA17377 for <caml-list@pauillac.inria.fr>; Tue, 17 Oct 2000 18:10:25 +0200 (MET DST)
Received: from beaune.inria.fr (beaune.inria.fr [128.93.8.3])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id e9HGAOf28010
	for <caml-list@inria.fr>; Tue, 17 Oct 2000 18:10:24 +0200 (MET DST)
Received: by beaune.inria.fr (8.8.8/1.1.22.3/14Sep99-0328PM)
	id SAA0000021832; Tue, 17 Oct 2000 18:10:24 +0200 (MET DST)
Date: Tue, 17 Oct 2000 18:10:24 +0200 (MET DST)
From: Damien Doligez <Damien.Doligez@inria.fr>
Message-Id: <200010171610.SAA0000021832@beaune.inria.fr>
To: caml-list@inria.fr
Subject: Re:  single-precision floats, etc.
Sender: weis@pauillac.inria.fr

>From: Chris Hecker <checker@d6.com>

>Hi, I'm looking into the feasibility of using Caml for some
>high-performance numerically intensive video game stuff, and I had a
>couple questions:

I'd be worried about the GC pause times.  They're pretty short, but
are they short enough for high-performance video game stuff ?


>Another question, which is not as important, was the size limitation
>on arrays.  The biggest float array one can have is around 699000
>elements.

Where did you get that number from ?  The maximum size of float arrays
is 2097152 elements on a 32-bit machine, and 9007199254740992 elements
on a 64-bit machine (assuming you have enough memory...)


>Finally, why aren't simple arrays of ints unboxed, like the arrays of
>floats?  Would that be a hard change to make as well?

I can't give a precise answer to this question, but already the
special treatment of float arrays imposes some overhead on all
polymorphic array operations.  I'm not sure how much worse it would
get with a second kind of special arrays.

-- Damien


