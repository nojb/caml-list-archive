Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA00050 for caml-red; Thu, 26 Oct 2000 20:38:39 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA32175 for <caml-list@pauillac.inria.fr>; Thu, 26 Oct 2000 18:31:43 +0200 (MET DST)
Received: from localhost.localdomain (ike114.zip.com.au [210.23.146.114])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id e9QGVcv03668
	for <caml-list@inria.fr>; Thu, 26 Oct 2000 18:31:39 +0200 (MET DST)
Received: from ozemail.com.au (IDENT:root@localhost [127.0.0.1])
	by localhost.localdomain (8.9.3/8.8.7) with ESMTP id DAA19937;
	Fri, 27 Oct 2000 03:37:38 +1100
Message-ID: <39F85DD2.5A82565C@ozemail.com.au>
Date: Fri, 27 Oct 2000 03:37:38 +1100
From: John Max Skaller <skaller@ozemail.com.au>
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12-20 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: Hendrik Tews <tews@tcs.inf.tu-dresden.de>
CC: caml-list@inria.fr
Subject: Re: circular types?
References: <Pine.BSF.4.21.0010230748080.17875-100000@shell5.ba.best.com>
		<39F6E831.621B85E3@ozemail.com.au> <200010260912.LAA21537@ithif20.inf.tu-dresden.de>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis@pauillac.inria.fr

Hendrik Tews wrote:

> John Max Skaller writes:

>    I think this can be done now. Here is the method: to have a type t
>    and a class c mutually dependent, for example:
> 
>         class type c = object x : t end
>         and type  t = C c | Null
> 
>    write
> 
>         class type c' ['t] = object x : 't end
>         type t = C t c' | Null
>         class type c = t c'
> 
> 
> Yes, this is the theoretical answer. But this just doesn't work
> out in anything bigger than a tutorial example. I am involved in
> programming a logic compiler. We have about 40 variant types and
> at least 10 classes. 

	I have used this technique in Vyper (my implementation
of Python in Ocaml). While it is probably smaller than your logic
compiler:
there are 10 public class types, and about 20 variants --- the word
'and' occurs 33 times in the .mli file --- it would seem to be in the
same league. The interface file is 500 lines.

> If my design were not constraint by the
> abilities of the ocaml compiler some of the classes were in
> mutual recursion with the bigger halve of the variant types. So
> you are not telling me seriously I should write classes with 10
> type variables!

	Sure! 10 type variables adds one line to each class. 
(if you use very short names :-)

> Just for curiosity: Does somebody use the above workaround in a
> project with more than 10.000 lines of ocaml code? (We do, but
> every typing error is a nightmare.)

	Vyper consists of 25,000 lines of .ml files and
5000 lines of .mli files. 
	
-- 
John (Max) Skaller, mailto:skaller@maxtal.com.au
10/1 Toxteth Rd Glebe NSW 2037 Australia voice: 61-2-9660-0850
checkout Vyper http://Vyper.sourceforge.net
download Interscript http://Interscript.sourceforge.net


