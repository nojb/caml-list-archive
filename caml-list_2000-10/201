Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA09710 for caml-red; Mon, 30 Oct 2000 08:40:08 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA15368 for <caml-list@pauillac.inria.fr>; Mon, 30 Oct 2000 08:36:18 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id e9U7aGP06060;
	Mon, 30 Oct 2000 08:36:16 +0100 (MET)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA14139; Mon, 30 Oct 2000 08:36:16 +0100 (MET)
From: Pierre Weis <Pierre.Weis@inria.fr>
Message-Id: <200010300736.IAA14139@pauillac.inria.fr>
Subject: Re: Where did the exception occur?
In-Reply-To: <HDEEKOMJILGEIHIMAPCDIEGHDEAA.mattias.waldau@abc.se> from Mattias Waldau at "Oct 29, 100 10:59:50 am"
To: mattias.waldau@abc.se (Mattias Waldau)
Date: Mon, 30 Oct 2000 08:36:16 +0100 (MET)
Cc: caml-list@inria.fr
X-Mailer: ELM [version 2.4ME+ PL28 (25)]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: weis@pauillac.inria.fr

> I am running my program from the top-level, and the programs aborts to the
> toplevel ans says:
> 
> Uncaught exception: Not_found.
> 
> Is there a way to tell where the exception occured, for example program
> languages like SICStus Prolog, Lisp, Visual C++, Visual Basic normally stops
> in a top-loop at the stack frame of the error. Is there a similar feature in
> OCaml?
> 
> ----
> Mattias Waldau

Some programming languages use ``pushing'' exceptions (exceptions
that push a stack frame on the control stack then try to find a
handler), other languages use ``poping'' exceptions (exceptions pops
stack frames directly to the next handler). Caml uses the second kind,
which is considered more efficient. So there is no way in Caml to
start a new top-loop where the exception occurred.

However, you've got a nice replay debugger that allows you to step
back anywhere in the past of the computation of your (bte-code)
compiled program. So, you just have to go back to the point where the
exception is raised and then use the usual top-level of the debugger.

Hope this helps,

Pierre Weis

INRIA, Projet Cristal, Pierre.Weis@inria.fr, http://cristal.inria.fr/~weis/



