Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA14195 for caml-red; Sun, 8 Oct 2000 23:00:50 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA32280; Sat, 7 Oct 2000 18:21:13 +0200 (MET DST)
Received: from dynabook (207-245-78-253.dca.net [207.245.78.253])
	by nez-perce.inria.fr (8.10.0/8.10.0) with ESMTP id e97GLCj11449;
	Sat, 7 Oct 2000 18:21:12 +0200 (MET DST)
Received: from dynabook
	([127.0.0.1] helo=localhost ident=sumii)
	by dynabook with esmtp (Exim 3.12 #1 (Debian))
	id 13hwie-00007h-00; Sat, 07 Oct 2000 12:21:04 -0400
To: Pierre.Weis@inria.fr
Cc: caml-list@pauillac.inria.fr, sumii@saul.cis.upenn.edu
From: eijiro_sumii@anet.ne.jp
Reply-To: sumii@saul.cis.upenn.edu
Subject: Re: WWW Page of Team PLClub (Re: ICFP programming contest: results)
In-Reply-To: <200010070759.JAA00538@pauillac.inria.fr>
References: <20001006160522Y.sumii@saul.cis.upenn.edu>
	<200010070759.JAA00538@pauillac.inria.fr>
X-Mailer: Mew version 1.94.1 on Emacs 20.7 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20001007122103K.sumii@saul.cis.upenn.edu>
Date: Sat, 07 Oct 2000 12:21:03 -0400
X-Dispatcher: imput version 991025(IM133)
Lines: 24
Sender: weis@pauillac.inria.fr

> > (It was Jerome who decided that, but anyway...)  The reason was
> > convenience: we could write matrix/vector multiplication by using
> > for-loops, for instance.  As for the efficiency,
> > "records > tuples = arrays (without boundary checks)" and as for the
> > safety, "records = tuples > arrays", I suppose.

Oh, sorry, I meant "to represent matrices and vectors" only.

> Not exactly, for efficiency:
> 
> records = tuples = array without boundary checks

Excuse me, but I'm a bit confused here...  What did Xavier mean in the
message below then?

| Subject: Re: ICFP programming contest: results
| From: Xavier Leroy <Xavier.Leroy@inria.fr>
| Date: Tue, 26 Sep 2000 10:55:21 +0200
| 
| > Could you also tell us to what extent the knowledge of the
| > implementation of Ocaml was needed in order to get good performance ?
| 
| The only important thing to know was that a record with three float
| fields is more efficient than a triple of floats.


