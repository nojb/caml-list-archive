Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA02815 for caml-red; Thu, 26 Oct 2000 20:41:00 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA02056 for <caml-list@pauillac.inria.fr>; Thu, 26 Oct 2000 18:56:10 +0200 (MET DST)
Received: from morgon.inria.fr (morgon.inria.fr [128.93.8.33])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id e9QGu8b20576;
	Thu, 26 Oct 2000 18:56:08 +0200 (MET DST)
Received: (from remy@localhost)
	by morgon.inria.fr (8.9.3/8.9.3) id SAA04573;
	Thu, 26 Oct 2000 18:56:24 +0200
Date: Thu, 26 Oct 2000 18:56:23 +0200
From: Didier Remy <Didier.Remy@inria.fr>
To: Benedikt.Rosenau@debis-sfr.de
Cc: caml-list@inria.fr
Subject: Re: Some questions about type inference
Message-ID: <20001026185623.A4562@morgon.inria.fr>
Reply-To: Didier.Remy@inria.fr
References: <200010261330.e9QDUDK45488@dv.go.dlr.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0pre3us
In-Reply-To: <200010261330.e9QDUDK45488@dv.go.dlr.de>
Organization: INRIA, BP 105, F-78153 Le Chesnay Cedex
Phone: (33) 1 3963 5317 -- Sec: (33) 1 3963 5570 -- Fax: (33) 1 3963 5684
Web: http://cristal.inria.fr/~remy
Sender: weis@pauillac.inria.fr

> Namely, I tried to define a class
> of objects with a method "eat" who would only eat objects defining
> a method "eat" themselves.
...
>  However, the following works (more or less):

>    class virtual ['a] carnivore =
>      object
>        constraint 'a = ('a) #carnivore
>        method virtual eat: <eat: _; ..> -> unit
>      end

This is correct but maybe cumbersome. You may also write: 

    class virtual ['a] carnivore =
      object
        constraint 'a = < eat: _; .. >
        method virtual eat: 'a  -> unit
      end
        ;;

which may be clearer.

BTW, if you are trying variations on the well-known cow/animal example
introduced by David Shang ["Is a cow an animal?", Unpublished note January
1996] you may find a discussion of this example together with a version in
Ocaml at:

        http://cristal.inria.fr/~remy/work/virtual/
        >> [Section] Expressiveness and abstraction

-Didier


