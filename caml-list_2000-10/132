Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA15732 for caml-red; Thu, 19 Oct 2000 13:16:14 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA01845 for <caml-list@pauillac.inria.fr>; Wed, 18 Oct 2000 15:54:07 +0200 (MET DST)
Received: from malonne.lifl.fr (malonne.lifl.fr [134.206.10.29])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id e9IDs6f06581
	for <caml-list@inria.fr>; Wed, 18 Oct 2000 15:54:06 +0200 (MET DST)
Received: from gala.lifl.fr (gala.lifl.fr [134.206.10.216])
          by malonne.lifl.fr (8.9.3/jtpda-5.3.3) with ESMTP id PAA23268
          ; Wed, 18 Oct 2000 15:53:41 +0200 (MET DST)
Received: from (boulet@localhost)
          by gala.lifl.fr (8.9.3/jtpda-5.3.3) id PAA07159
          ; Wed, 18 Oct 2000 15:53:59 +0200
To: Chris Hecker <checker@d6.com>
Cc: caml-list@inria.fr
Subject: Re: single-precision floats, etc.
References: <4.3.2.7.2.20001016110744.01e9d660@shell16.ba.best.com>
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
From: Pierre.Boulet@lifl.fr (Pierre.Boulet)
Date: 18 Oct 2000 15:53:59 +0200
In-Reply-To: Chris Hecker's message of "Mon, 16 Oct 2000 11:20:59 -0700"
Message-ID: <vtuog0i45mw.fsf@gala.lifl.fr>
Lines: 24
X-Mailer: Gnus v5.6.45/XEmacs 21.1 - "Bryce Canyon"
Sender: weis@pauillac.inria.fr

Hello Chris,

> Most importantly, is there any way to make the "float" type compile
> to single precision floating point numbers?
> ...
> Another question, which is not as important, was the size limitation
> on arrays. 
> ...
> Finally, why aren't simple arrays of ints unboxed, like the arrays
> of floats?  Would that be a hard change to make as well?

I think that maybe what you are looking for is the bigarray library
that appeared with ocaml 3.00. It provides unboxed arrays of float32,
float64 and many int variants without any size limitation... and with
the choice of Fortran or C layout. I have not yet tested it but I was
really pleased to see it because it means ocaml can now be used for
scientific computing also (as well as for games :-) ).


-- 
Pierre.Boulet@lifl.fr -  http://www.lifl.fr/~boulet

     In theory, practice and theory are the same, 
     but in practice they are different. -- Larry McVoy


