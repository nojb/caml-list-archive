Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA21258 for caml-red; Sat, 28 Oct 2000 18:20:18 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA12094 for <caml-list@pauillac.inria.fr>; Fri, 27 Oct 2000 23:38:10 +0200 (MET DST)
Received: from e4.ny.us.ibm.com (e4.ny.us.ibm.com [32.97.182.104])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id e9RLc9b29145
	for <caml-list@inria.fr>; Fri, 27 Oct 2000 23:38:09 +0200 (MET DST)
Received: from northrelay02.pok.ibm.com (northrelay02.pok.ibm.com [9.117.200.22])
	by e4.ny.us.ibm.com (8.9.3/8.9.3) with ESMTP id RAA278150
	for <caml-list@inria.fr>; Fri, 27 Oct 2000 17:37:35 -0400
From: ortmann@us.ibm.com
Received: from RCHASA28.RCHLAND.IBM.COM (d27ml101.rchland.ibm.com [9.5.39.103])
	by northrelay02.pok.ibm.com (8.8.8m3/NCO v4.94) with ESMTP id RAA42078
	for <caml-list@inria.fr>; Fri, 27 Oct 2000 17:37:21 -0400
Importance: Normal
Subject: Re: single-precision floats, etc.
Cc: caml-list@inria.fr
Date: Fri, 27 Oct 2000 16:39:32 -0500
Message-ID: <OF320DEF29.56B837F4-ON86256985.0076CC69@RCHLAND.IBM.COM>
X-MIMETrack: Serialize by Router on d27ml101/27/M/IBM(Release 5.0.4 |June 8, 2000) at 10/27/2000
	04:39:33 PM
MIME-Version: 1.0
Content-type: text/plain; charset=us-ascii
Sender: weis@pauillac.inria.fr



Just curious ... would single-precision floats have been accurate enough
for the ICFP programming contest?

And how fast might they have been?

--
Daniel Ortmann, IBM Circuit Technology, Rochester, MN 55901-7829
ortmann@us.ibm.com / internal 8.553.6795 / external 507.253.6795
ortmann@isl.net home 507.288.7732

"The answers are so simple, and we all know where to look,
but it's easier just to avoid the question." -- Kansas




Chris Hecker <checker@d6.com>@inria.fr on 10/24/2000 10:22:20 PM

Sent by:  Pierre.Weis@inria.fr


To:   Charles Martin <martin@chasm.org>, caml-list@inria.fr
cc:
Subject:  Re: single-precision floats, etc.




>I would want single floats for space, not speed!

On today's architectures, size == speed.

Single precision is also still faster for things like divides, sqrts, and
whatnot.  And, as someone mentioned, the SIMD instruction sets are single
precision only (at least until Wilamette).  But yes, size is the biggest
issue.

I'm going to check out the Bigarray package and see how it performs,
though.

Chris





