Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA05251 for caml-red; Fri, 20 Oct 2000 14:44:11 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA29823 for <caml-list@pauillac.inria.fr>; Fri, 20 Oct 2000 02:21:36 +0200 (MET DST)
Received: from smtp2.ihug.co.nz (smtp2.ihug.co.nz [203.109.252.8])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id e9K0LXL24177
	for <caml-list@inria.fr>; Fri, 20 Oct 2000 02:21:34 +0200 (MET DST)
Received: from [192.168.0.12] (p5-max5.wlg.ihug.co.nz [203.173.231.5])
	by smtp2.ihug.co.nz (8.9.3/8.9.3/Debian 8.9.3-21) with ESMTP id MAA09876
	for <caml-list@inria.fr>; Fri, 20 Oct 2000 12:55:42 +1300
X-Authentication-Warning: smtp2.ihug.co.nz: Host p5-max5.wlg.ihug.co.nz [203.173.231.5] claimed to be [192.168.0.12]
Mime-Version: 1.0
X-Sender: bruce@209.163.245.148
Message-Id: <a04310176b61538f10bfd@[192.168.0.12]>
In-Reply-To: <200010191858.OAA70430@sanson.reyes.somos.net>
References: <200010191858.OAA70430@sanson.reyes.somos.net>
Date: Fri, 20 Oct 2000 12:55:39 +1300
To: caml-list@inria.fr
From: Bruce Hoult <bruce@hoult.org>
Subject: multiple destructuring?
Content-Type: text/plain; charset="us-ascii" ; format="flowed"
Sender: weis@pauillac.inria.fr

I'm just starting to play with OCaml and I wrote the following function:

let rec is_sorted lst =
    match lst with
       [] -> true
    | [elt] -> true
    | a :: b :: tail -> a<b & is_sorted(b :: tail)


I'm wondering whether the b :: tail actually allocates memory or is 
the compiler smarter than that?  What's the best way to avoid this? 
If I rewrite to match instead with "a :: tail" (and then later pull 
that apart into b :: more_tail) am I guaranteed that tail is 
non-empty because of the prior [elt] case?

-- Bruce


