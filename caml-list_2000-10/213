Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA01065 for caml-red; Tue, 31 Oct 2000 11:40:10 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA27858 for <weis@pauillac.inria.fr>; Tue, 31 Oct 2000 00:39:46 +0100 (MET)
Received: from jay.koscom.co.kr (fts.koscom.co.kr [128.134.150.2])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id e9UNdiP28760;
	Tue, 31 Oct 2000 00:39:44 +0100 (MET)
Received: from jay by jay.koscom.co.kr with local (Exim 3.16 #1 (Debian))
	id 13qOVO-0000kn-00; Tue, 31 Oct 2000 08:38:18 +0900
To: Pierre Weis <Pierre.Weis@inria.fr>
Cc: caml-list@inria.fr
Subject: Re: Redefinition doesn't work
References: <200010300739.IAA13016@pauillac.inria.fr>
X-Url: http://kldp.org/~jay
Reply-to: jay@kldp.org
From: Jaeyoun Chung <jay@kldp.org>
Date: 31 Oct 2000 08:38:18 +0900
In-Reply-To: Pierre Weis's message of "Mon, 30 Oct 2000 08:39:15 +0100 (MET)"
Message-ID: <87hf5t99xx.fsf@jay.koscom.co.kr>
Lines: 39
User-Agent: Gnus/5.0808 (Gnus v5.8.8) Emacs/20.7
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: weis@pauillac.inria.fr


[hm. this is quite strange anyway, here's the message that i've posted to
the caml list.]

* "Mattias Waldau" <mattias.waldau@abc.se> at 2000-10-28 09:32+0200
| # let f1 () = 10;;
|   val f1 : unit -> int = <fun>
| # let f2 () = (f1 ()) * 10;;
| val f2 : unit -> int = <fun>
| # f2 ();;
| - : int = 100
| # let f1 () = 20;;
| val f1 : unit -> int = <fun>
| # f2 ();;
| - : int = 100
| #

* Pierre Weis <Pierre.Weis@inria.fr> at 2000-10-28 18:37+0200
| This is not a misfeature, but an extremely desirable property: a sound
| theoretical fundation for the binding rule of identifiers in the
| language. This rule means that every identifier in a program is bound
| before the point of use. This is simple to explain and clear to
| understand. Furthermore it allows the static verification of type
| correctness.

 this is quite true but the above feature for the toplevel is quite useful
 during the development phase. if each time we should redefine everything
 dependent on one function, toplevel isn't quite that useful -- to find out
 the dependencies or just reload everything dependent on the file
 containing the function is what should have be done automatically. what
 about having an option or directive so that user can control the behavior?

 when user redefines some function, isn't it exactly the user's intention
 to redefine all the bindings already defined not only those following that
 redefinition?

-- 
Jaeyoun Chung                       mailto:jay@kldp.org
[see http://emacs.kldp.org for emacs-KR homepage.]


