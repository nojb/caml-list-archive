Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA25977; Tue, 10 Apr 2001 15:12:32 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA25973 for <caml-list@pauillac.inria.fr>; Tue, 10 Apr 2001 15:12:31 +0200 (MET DST)
Received: from students.mimuw.edu.pl (zodiac.mimuw.edu.pl [193.0.99.1])
	by nez-perce.inria.fr (8.11.1/8.10.0) with SMTP id f3ADCUn07430
	for <caml-list@inria.fr>; Tue, 10 Apr 2001 15:12:30 +0200 (MET DST)
Received: (qmail 31515 invoked by uid 978); 10 Apr 2001 13:12:11 -0000
Received: from localhost (sendmail-bs@127.0.0.1)
  by localhost with SMTP; 10 Apr 2001 13:12:11 -0000
Date: Tue, 10 Apr 2001 15:12:11 +0200 (CEST)
From: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>
X-Sender: mk167280@zodiac.mimuw.edu.pl
To: caml-list@inria.fr
Subject: RE: [Caml-list] variant with tuple arg in pattern match?
In-Reply-To: <DD7356599083414BA450E3DCC4119B8B06C435@NT.kal.com>
Message-ID: <Pine.LNX.4.21.0104101501270.27758-100000@zodiac.mimuw.edu.pl>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, 10 Apr 2001, Dave Berry wrote:

> You certainly can avoid currying in functional languages.  Currying is a
> hack that was created to keep the lambda calculus as simple as possible.

It's not a hack. When functions can return functions, there is no need of
inventing the concept of multiparameter functions.

> 1. Multiple arguments.  Fine for the calculus, but in any language with
> tuples or records we can just write f(x,y), like everybody else.

This is as much of a hack as currying. Why to pack arguments in a tuple
when you could simply use currying?

> In cases where a function is explicitly returning another (as opposed to
> just simulating multiple arguments), I think the explicit binding
> describes what is happening more clearly.

It's not opposition. This is semantically the same, so there is no need of
introducing a syntactic difference.

Does map take a function and a list, returning a list, or does it lift
a function to a function operating on a list? There is no difference.

-- 
Marcin 'Qrczak' Kowalczyk

-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

