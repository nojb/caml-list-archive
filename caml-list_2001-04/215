Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA19201; Wed, 11 Apr 2001 17:32:24 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA19227 for <caml-list@pauillac.inria.fr>; Wed, 11 Apr 2001 17:32:23 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f3BFWLD05851
	for <caml-list@inria.fr>; Wed, 11 Apr 2001 17:32:21 +0200 (MET DST)
Received: from localhost (isdnppp3.kurims.kyoto-u.ac.jp [130.54.16.104])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3/3.7W) with ESMTP id AAA02099;
	Thu, 12 Apr 2001 00:32:14 +0900 (JST)
To: fare@quatramaran.ens.fr
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Future of labels, and ideas for library labelling
In-Reply-To: <200104100906.LAA09565@quatramaran.ens.fr>
References: <4.3.2.7.2.20010409124220.00d4a810@shell16.ba.best.com>
	<20010410123756H.garrigue@kurims.kyoto-u.ac.jp>
	<200104100906.LAA09565@quatramaran.ens.fr>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20010412003442E.garrigue@kurims.kyoto-u.ac.jp>
Date: Thu, 12 Apr 2001 00:34:42 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 33
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: fare@quatramaran.ens.fr (François-René Rideau)

> You left without discussion the approach suggested by Arturo Borquez,
> which is quite distinct from that by Chris Hecker:
> 
> "An unlabeled argument should be labeled with the first available label
> in the declared type of the function being called."

I might have worded my classification in this (less understandable
way): all proposals have to choose between two types of unification,
strictly matching labels or ignoring them.

You must ignore them to be compatible with classic mode.
You must match them strictly to be compatible with label mode (provide
commutation with any decent semantics).

So this is just impossible to be compatible with both simultaneously.
To some degree you may allow idioms of classic mode in label mode
(like dropping some labels), but not the other way round, and not 100%
compatible.

This is the basic reason I didn't try to answer in detail all
proposals.

The rule you describe here might also be seen as an alternative to
label mode (yet incompatible with classic mode). However it is not
compatible with label mode, semantics are a bit more complex, and
this idea of choosing label by label whether to write or not sounds a
bit too laxist to me (not a good reason, but the other two are).

Cheers,

Jacques Garrigue
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

