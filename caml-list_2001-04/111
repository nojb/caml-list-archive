Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA06763; Fri, 6 Apr 2001 02:28:07 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA06933 for <caml-list@pauillac.inria.fr>; Fri, 6 Apr 2001 02:28:06 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f360S3505863
	for <caml-list@inria.fr>; Fri, 6 Apr 2001 02:28:04 +0200 (MET DST)
Received: from localhost (mikan.kurims.kyoto-u.ac.jp [130.54.16.202])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3/3.7W) with ESMTP id JAA00081;
	Fri, 6 Apr 2001 09:27:55 +0900 (JST)
To: frisch@clipper.ens.fr
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml runtime system and Java
In-Reply-To: <Pine.GSO.4.04.10104052354270.4942-100000@clipper.ens.fr>
References: <Pine.GSO.4.04.10104052354270.4942-100000@clipper.ens.fr>
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.0 (HANANOEN)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20010406092754K.garrigue@kurims.kyoto-u.ac.jp>
Date: Fri, 06 Apr 2001 09:27:54 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 29
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Alain Frisch <frisch@clipper.ens.fr>

> It seems than a few OCaml users have considered various approaches for
> running Caml programs on the Java VM. Has there been some attempt to do
> it the other way round, that is to run Java on the OCaml runtime system ?
> 
> It could be with the full OCaml VM, or maybe more realistically, with a
> specialized VM using only the OCaml memory model (GC and block layout)
> and thread scheduling. Would it be difficult to implement (in C for
> instance) a Java VM on top of the OCaml runtime system ?

You do not need C. What appeared from experience is that ocamlopt is
more than enough for practical use: for a project we had a programmer
write a full fledge Java VM in ocaml, able of running an XML parser
for instance. He did it in about a month, and the speed was about a
factor 3 of the Java JDK VM (without JIT, of course). If speed is not
your main concern (it shouldn't be if you're using Java anyway :-)),
then it should be enough.

It is only a VM, and does not contain extra runtime extensions, like
the GUI, and does not implement the bytecode checker, but I suppose
some people might have a use for that anyway.

We plan to release this code, but this may take some time as the
project was with a company, and they must agree. However the company
is used to open sourcing, and I see no reason they would refuse.

Jacques

-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

