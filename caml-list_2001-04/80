Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA08951; Wed, 4 Apr 2001 11:46:11 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA08932 for <caml-list@pauillac.inria.fr>; Wed, 4 Apr 2001 11:46:10 +0200 (MET DST)
Received: from mrwall.kal.com (mrwall.kal.com [194.193.14.236])
	by concorde.inria.fr (8.11.1/8.10.0) with SMTP id f349k9r12692
	for <caml-list@inria.fr>; Wed, 4 Apr 2001 11:46:09 +0200 (MET DST)
Received: from mrwall.kal.com [194.193.14.236]
	(HELO localhost)
	by mrwall.kal.com (AltaVista Mail V2.0J/2.0J BL25J listener)
	id 0000_0045_3aca_ee09_02be;
	Wed, 04 Apr 2001 10:48:57 +0100
Subject: RE: [Caml-list] Generics?
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Date: Wed, 4 Apr 2001 10:44:34 +0100
content-class: urn:content-classes:message
X-MimeOLE: Produced By Microsoft Exchange V6.0.4417.0
Message-ID: <DD7356599083414BA450E3DCC4119B8B06BFE2@NT.kal.com>
Thread-Topic: [Caml-list] Generics?
Thread-Index: AcC8aiPhjhz922yWTeizPZuzWonmwAAgVrvA
From: "Dave Berry" <Dave@kal.com>
To: "Brian Rogoff" <bpr@best.com>, "Chris Hecker" <checker@d6.com>
Cc: <caml-list@inria.fr>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

In the broader community, "generics" also refers to parameterised
classes or modules.  Examples include ML's functors, C++ class
templates, and parameterised classes in Eiffel, OCaml, and others.
There are some papers comparing the power and expressiveness of
inheritance vs genericity (I think Bertrand Meyer wrote one of these).

Chris's concern's are largely addressed by functors, given suitable
optimisations in the implementation.  Overloading can also help.

-----Original Message-----
From: Brian Rogoff [mailto:bpr@best.com]
Sent: Tuesday, April 03, 2001 19:14
To: Chris Hecker
Cc: caml-list@inria.fr
Subject: [Caml-list] Generics?


On Mon, 2 Apr 2001, Chris Hecker wrote:
> I find OCaml pretty wordy as it is (no overloading being a big problem
> here, since the types all float into the names, as someone said), and
> making it moreso seems to me to be a mistake.  I also feel (like
> Patrick) that there are more important things (overloading, module
> recursion, generics) that need fixing than labeling right now.

I'm confused by your use of the term "generics", which I've seen in
another of your posts as well. Care to explain to the uninitiated?=20

FYI, "generic polymorphism" is being used as a term to describe the kind
of overloading formerly called "extensional polymorphism", and that was=20
probably influenced by CLOS/Dylan style generic functions with multiple=20
dispatch. So generics are already overloaded enough, maybe you need to=20
disambiguate :-).=20

I don't find Ocaml wordy at all, but then I've used (and liked) Ada so=20
it's probably just whatever you're used to...
=20
-- Brian


-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives:
http://caml.inria.fr
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

