Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA23957; Thu, 5 Apr 2001 08:23:05 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA23495 for <caml-list@pauillac.inria.fr>; Thu, 5 Apr 2001 08:23:05 +0200 (MET DST)
Received: from tor.abc.se (ns.abc.se [195.17.72.11])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f356N4520840
	for <caml-list@inria.fr>; Thu, 5 Apr 2001 08:23:04 +0200 (MET DST)
Received: from gateway (dialup-58 [195.17.73.58])
	by tor.abc.se (8.9.3+Sun/8.9.3) with SMTP id IAA10147
	for <caml-list@inria.fr>; Thu, 5 Apr 2001 08:23:02 +0200 (MET DST)
From: "Mattias Waldau" <mattias.waldau@abc.se>
To: <caml-list@inria.fr>
Subject: RE: [Caml-list] semi-colons and begin
Date: Thu, 5 Apr 2001 08:23:01 +0200
Message-ID: <AAEBJHFJOIPMMIILCEPBEEMNCHAA.mattias.waldau@abc.se>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
In-Reply-To: <20010405055348.A4758@verdot.inria.fr>
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
Importance: Normal
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

There are a lot of problems with the Caml-syntax and I can live with the
most
ones. I am really glad that Emacs indents correctly, and that makes the
following

What you see:
   if blahblah then
      let x = e in
      thing1;
   thing2;
   thing3;
What you get:
   if blahblah then
      let x = e in
      thing1;
      thing2;
      thing3;

code correctly, since Emacs will indent it the second way. In Python
indentation
means something. It would be nice if the ocaml-compiler would complain if
indentation is inconsistent. In the example above thing2 and thing3 are
inconsistent intended since it should be on the same level as thing1.

Also, regarding if-then, I have learned to use begin/end.

My biggest problem is when the syntax error occurs in a completely different
location in the file, because it makes finding the bugs very difficult.
(I understand why the typechecker sometimes complains at the source,
sometimes
and the destination). Whould it be possible to pinpoint the error more
exactly
or is there a reason that in

let _ = 1+2;

let _ = 2

let _ = 4

we get a syntax error at the last 'let'?

/mattias

-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

