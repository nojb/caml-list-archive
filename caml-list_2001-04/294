Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA31429; Tue, 24 Apr 2001 17:23:42 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA31362 for <caml-list@pauillac.inria.fr>; Tue, 24 Apr 2001 17:23:42 +0200 (MET DST)
Received: from shell5.ba.best.com (shell5.ba.best.com [206.184.139.136])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f3OFNfj21124
	for <caml-list@inria.fr>; Tue, 24 Apr 2001 17:23:41 +0200 (MET DST)
Received: from localhost (bpr@localhost)
	by shell5.ba.best.com (8.9.3/8.9.2/best.sh) with ESMTP id IAA24265
	for <caml-list@inria.fr>; Tue, 24 Apr 2001 08:23:39 -0700 (PDT)
Date: Tue, 24 Apr 2001 08:23:39 -0700 (PDT)
From: Brian Rogoff <bpr@best.com>
To: caml-list@inria.fr
Subject: [Caml-list] Petty complaints
Message-ID: <Pine.BSF.4.21.0104240810450.12262-100000@shell5.ba.best.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi,
    I'd like to be able to treat the types "defined" in the Pervasives
module as if they really were defined there. This way I could reuse 
type names like array, char, string, and list cleanly by referring to 
the built-ins by their qualified names. Why doesn't it work that way now?
It would even be nice to be able to have the OCaml library modules be 
referable by qualified names, like Pervasives.List, Pervasives.Array, etc...

    Someone recently got bit by the mutable nature of the OCaml built in 
strings. I looked at the mailing list and there was mention that a long 
time ago Caml had immutable strings (ropes?) and arrays, but that no one
used them. I'm building some stuff using version arrays now (Martin
Erwig's Functional Graph Library) and while they're simple enough to write
in OCaml I bet built in immutable arrays would be much faster.

-- Brian
 

-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

