Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA22449; Tue, 24 Apr 2001 09:13:45 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA22531 for <caml-list@pauillac.inria.fr>; Tue, 24 Apr 2001 09:13:44 +0200 (MET DST)
Received: from cremant.inria.fr (cremant.inria.fr [128.93.8.143])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f3O7DhP28679
	for <caml-list@inria.fr>; Tue, 24 Apr 2001 09:13:43 +0200 (MET DST)
Received: (from lefessan@localhost)
	by cremant.inria.fr (8.11.0/8.11.0) id f3O7Dh621362;
	Tue, 24 Apr 2001 09:13:43 +0200
X-Authentication-Warning: cremant.inria.fr: lefessan set sender to fabrice.le_fessant@inria.fr using -f
From: Fabrice Le Fessant <fabrice.le_fessant@inria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15077.10151.589093.42683@cremant.inria.fr>
Date: Tue, 24 Apr 2001 09:13:43 +0200 (CEST)
To: caml-list@inria.fr
Subject: Re: [Caml-list] equality over functional value
References: <200104202012.QAA09326@lub0127.lss.emc.com>
	<20010423095627.A517@pauillac.inria.fr>
X-Mailer: VM 6.75 under Emacs 20.7.1
Reply-To: fabrice.le_fessant@inria.fr
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Personally, I think functions comparisons should always have the same
behavior. So, we have two options:

- Always raise an exception, even for f = f. This would have a cost
  for all programs, since the runtime would have to check the type of
  the value before testing for pointer equality.

- Never raise an exception. Function comparison would be closure
  comparison. Most people will never use any such comparison, and I
  don't know any already-written program whose behavior would be
  broken by this change. Even if the semantics is not clearly defined,
  it is not the first time (cf labels), and it can be seen as an
  implementation compromise...

So, I personnaly vote for the second one.


- Fabrice

-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

