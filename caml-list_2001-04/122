Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA01995; Fri, 6 Apr 2001 17:04:02 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA01991 for <caml-list@pauillac.inria.fr>; Fri, 6 Apr 2001 17:04:01 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f36F3x510551;
	Fri, 6 Apr 2001 17:03:59 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA01987; Fri, 6 Apr 2001 17:03:59 +0200 (MET DST)
Date: Fri, 6 Apr 2001 17:03:59 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Martin Berger <martinb@dcs.qmw.ac.uk>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] ocaml, java, rmi and jini
Message-ID: <20010406170359.B1347@pauillac.inria.fr>
References: <Pine.BSF.3.96.1010402211922.97906A-100000@fledge.watson.org> <20010403125314Q.garrigue@kurims.kyoto-u.ac.jp> <20010403105212.A15700@pauillac.inria.fr> <20010403185448J.garrigue@kurims.kyoto-u.ac.jp> <15049.51482.197252.672850@pc803> <3AC9CBE8.AB078628@dcs.qmw.ac.uk>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <3AC9CBE8.AB078628@dcs.qmw.ac.uk>; from martinb@dcs.qmw.ac.uk on Tue, Apr 03, 2001 at 02:11:04PM +0100
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> hi there, i'm interested in integrating java and jini with ocaml. i 
> understand that executing ocaml bytecode on JVMs might not be a 
> good idea, but what about the other way around: executing java (byte
> code) in an ocaml environment?

As Jacques Garrigue said, it is feasible to write a JVM interpreter in
OCaml.  However, performance will not be great, and more importantly
most of the Java API libraries will be missing (because the JVM
interpreter will not be able to deal with native methods).

> and what about integrating java RMI with ocaml? 

That's not a bad idea.  I think it makes more sense to
interoperate between languages at the level of RPC/RMI, e.g. using Sun
RPC, CORBA, Java RMI, SOAP, or whatever, rather than interoperating at
the level of the virtual machines.  The problem here is that there are
so many standards to choose from...  Also, while, say, CORBA or SOAP are
relatively language-neutral, I don't know how Java-specific Java RMI is.

For completeness, let me mention a third possibility that I've been
working on and off (mostly off lately): interface OCaml and Java
through the OCaml/C interface and through Java's native interface.

- Xavier Leroy
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

