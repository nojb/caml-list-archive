Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA01503; Mon, 23 Apr 2001 10:12:26 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA30029 for <caml-list@pauillac.inria.fr>; Mon, 23 Apr 2001 10:12:25 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f3N8CKf20613;
	Mon, 23 Apr 2001 10:12:20 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA01343; Mon, 23 Apr 2001 10:12:20 +0200 (MET DST)
Date: Mon, 23 Apr 2001 10:12:20 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Jan Skibinski <jans@numeric-quest.com>
Cc: Jonathan Coupe <jonathan@meanwhile.freeserve.co.uk>, caml-list@inria.fr
Subject: Re: [Caml-list] OCaml related article
Message-ID: <20010423101220.B517@pauillac.inria.fr>
References: <000701c0cb33$e525bc40$a00bfea9@baby> <Pine.LNX.4.21.0104220745180.28550-100000@info.numeric-quest.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <Pine.LNX.4.21.0104220745180.28550-100000@info.numeric-quest.com>; from jans@numeric-quest.com on Sun, Apr 22, 2001 at 08:12:34AM -0400
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> 	His conclusion though is that it is practically impossible
> 	to introduce any kind of static typing to Perl.

Dominus' claim is that if it could be done, it would still be largely
useless: since Perl has so many context-dependent automatic coercions,
nearly all programs would be correct, and the type system wouldn't
help much finding programming errors.

Actually, I believe one could do a soft typing system for Perl along
the lines of Mr. Spidey for Scheme
(http://www.cs.rice.edu/CS/PLT/packages/mrspidey/), using
constraint-based flow analysis.  Of course, uses of "eval" would not
be checked at all.  But Dominus' point that it would be largely
useless is probably true.

>       Contrast it
> 	with http://www.cc.gatech.edu/~lex/ti/ti.html
> 	where Lex Spoon attempts to deliver a type inference engine to
> 	Smalltalk (sic!).

Why not?  Constraint-based flow analysis can be applied to Smalltalk
(at least without the reflection features -- if you change the
behavior of method invocation, all bets are off), and since Smalltalk
has cleaner, more restrictive dynamic semantics than Perl, it could
actually be useful in finding errors.

- Xavier Leroy
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

