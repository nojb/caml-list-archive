Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA19849; Mon, 9 Apr 2001 08:23:55 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA19842 for <caml-list@pauillac.inria.fr>; Mon, 9 Apr 2001 08:23:54 +0200 (MET DST)
Received: from tor.abc.se (ns.abc.se [195.17.72.11])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f396Nnf06950;
	Mon, 9 Apr 2001 08:23:49 +0200 (MET DST)
Received: from gateway (dialup-5 [195.17.73.5])
	by tor.abc.se (8.9.3+Sun/8.9.3) with SMTP id IAA20956;
	Mon, 9 Apr 2001 08:23:40 +0200 (MET DST)
From: "Mattias Waldau" <mattias.waldau@abc.se>
To: "Brian Rogoff" <bpr@best.com>, "Pierre Weis" <Pierre.Weis@inria.fr>
Cc: <caml-list@inria.fr>
Subject: RE: [Caml-list] variant with tuple arg in pattern match?
Date: Mon, 9 Apr 2001 08:23:40 +0200
Message-ID: <AAEBJHFJOIPMMIILCEPBOEBNCIAA.mattias.waldau@abc.se>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.2416 (9.0.2911.0)
In-Reply-To: <Pine.BSF.4.21.0104081635150.1008-100000@shell5.ba.best.com>
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
Importance: Normal
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> I would suggest the other way round: as we already did for functions,
> we should prefer the curried syntax for constructors.

What do you really mean by "curried syntax", do you mean that you can
"add" one argument at a time to a function call?

If so, I don't think that curried syntax is something good. I don't
understand
why "curried" calls couldn't be annotated.

If I for example add an argument to a function and forget to update
all callers, I won't get an error where the call is done, but where the
result of the call is used. I won't errors at the correct location.

Since 99% of my calls are non-curried, Ocaml points me to the incorrect
location in 99% of the cases.

Why can't curried calls be annotated? This would improve error-detection!

And of course, I don't want this misfeature to spread anymore.

/mattias


-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

