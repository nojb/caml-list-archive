Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA00794; Fri, 6 Apr 2001 11:42:04 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA00768 for <caml-list@pauillac.inria.fr>; Fri, 6 Apr 2001 11:41:59 +0200 (MET DST)
Received: from dpt-info.u-strasbg.fr (dpt-info.u-strasbg.fr [130.79.6.1])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f369eI526987
	for <caml-list@inria.fr>; Fri, 6 Apr 2001 11:40:18 +0200 (MET DST)
Received: from lambda.u-strasbg.fr (lambda.u-strasbg.fr [130.79.90.63])
	by dpt-info.u-strasbg.fr (8.9.3/8.9.3) with ESMTP id LAA29730;
	Fri, 6 Apr 2001 11:39:00 +0200
Received: from luther by lambda.u-strasbg.fr with local (Exim 3.22 #1 (Debian))
	id 14lSj8-0005lH-00; Fri, 06 Apr 2001 11:40:22 +0200
Date: Fri, 6 Apr 2001 11:40:22 +0200
To: Gerd Stolpmann <gerd@gerd-stolpmann.de>
Cc: Chris Hecker <checker@d6.com>, Martin Berger <martinb@dcs.qmw.ac.uk>,
        caml-list@inria.fr
Subject: Re: [Caml-list] ocaml, java, rmi and jini
Message-ID: <20010406114022.B22133@lambda.u-strasbg.fr>
References: <Pine.BSF.3.96.1010402211922.97906A-100000@fledge.watson.org> <15049.51482.197252.672850@pc803> <4.3.2.7.2.20010403121826.03425d50@shell16.ba.best.com> <01040323051504.00489@ice>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.3.17i
In-Reply-To: <01040323051504.00489@ice>; from gerd@gerd-stolpmann.de on Tue, Apr 03, 2001 at 10:50:49PM +0200
From: Sven LUTHER <luther@dpt-info.u-strasbg.fr>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, Apr 03, 2001 at 10:50:49PM +0200, Gerd Stolpmann wrote:
> Of course, it is still possible to use the current JavaCaml implementation, and
> to extend it. However, I must warn you. "Some graphics, mouse/keyboard,
> simple UI, networking" would require more performance than this emulation can
> give you, even with execellent JIT compilers and fast CPUs. It's only several
> thousand bytecode instructions per second.

Also javacaml don't work with the current ocaml, am i right in thinking this
Gerd ?

I suppose not too much work would be needed to solve this, as you only need to
add the primitives that were added to the standard lib between ocaml 2.0x and
3.01.

What are the other java alternatives for doing interactive web sites out of
ocaml bytecode, beside the cgi way that is.

Also, still no luck to ever see the ocaml plugin to netscape ?

Friendly,

Sven Luther
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

