Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA03459; Mon, 9 Apr 2001 18:02:05 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA03454 for <caml-list@pauillac.inria.fr>; Mon, 9 Apr 2001 18:02:04 +0200 (MET DST)
Received: from shell5.ba.best.com (shell5.ba.best.com [206.184.139.136])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f39G22P24362
	for <caml-list@inria.fr>; Mon, 9 Apr 2001 18:02:03 +0200 (MET DST)
Received: from localhost (bpr@localhost)
	by shell5.ba.best.com (8.9.3/8.9.2/best.sh) with ESMTP id JAA29247;
	Mon, 9 Apr 2001 09:01:52 -0700 (PDT)
Date: Mon, 9 Apr 2001 09:01:52 -0700 (PDT)
From: Brian Rogoff <bpr@best.com>
To: Christian Lindig <lindig@eecs.harvard.edu>
cc: Caml Mailing List <caml-list@inria.fr>
Subject: Re: [Caml-list] petty complaints
In-Reply-To: <20010409113449.A19116@lakeland.eecs.harvard.edu>
Message-ID: <Pine.BSF.4.21.0104090853450.6359-100000@shell5.ba.best.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 9 Apr 2001, Christian Lindig wrote:
> On Sun, Apr 01, 2001 at 09:26:59PM -0700, Brian Rogoff wrote:
> >     Another unrelated trifling question concerns the syntax of numerical 
> > literals. 
> 
> Now that the spring cleaning for OCaml's syntax (floats, labels,
> constructors) is in full swing, here is my wish:  Haskell allows to
> use any identifier as a binary operator when it is placed in
> backquotes:  x `plus` y.  These operators are often more readable than
> the classic infix operator symbols.  These terms have no associativity
> and a low precedence, thus forcing to use parentheses.  An
> implementation would only affect the lexer and should not be too hard. 
> Would other people like this feature, too?

I've expressed this wish here too. I wonder at this point though if the
use of backquotes will be confusing to human readers due to the syntax of 
polymorphic variants. Anyways, the answer from me is a resounding yes.

On the plus side for classic Caml, I have to admit that while beginners
stumble over the lack of an end for 'let', it is something that the
frequent Caml user really grows to love. As I said, I'm porting a bit of
SML to OCaml and this is something I really like about Caml (though I do
like their interCap naming convention a bit better than our under_scores :)

-- Brian

-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

