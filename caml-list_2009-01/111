Return-Path: <oliver@first.in-berlin.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 5E727BB84
	for <caml-list@yquem.inria.fr>; Thu, 15 Jan 2009 23:20:50 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AtgCAGBFb0nAbSoIgWdsb2JhbACUAgEBFiK6PYVx
X-IronPort-AV: E=Sophos;i="4.37,272,1231110000"; 
   d="scan'208";a="19674937"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 15 Jan 2009 23:20:49 +0100
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: <caml-list@yquem.inria.fr>
Received: from einhorn.in-berlin.de (localhost [127.0.0.1])
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id n0FMKmP8004029
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <caml-list@yquem.inria.fr>; Thu, 15 Jan 2009 23:20:48 +0100
Received: (from www-data@localhost)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Submit) id n0FMKmwD004027
	for caml-list@yquem.inria.fr; Thu, 15 Jan 2009 23:20:48 +0100
X-Authentication-Warning: einhorn.in-berlin.de: www-data set sender to oliver@first.in-berlin.de using -f
Received: from dslb-088-074-006-137.pools.arcor-ip.net (dslb-088-074-006-137.pools.arcor-ip.net [88.74.6.137]) 
	by webmail.in-berlin.de (IMP) with HTTP 
	for <first@localhost>; Thu, 15 Jan 2009 23:20:48 +0100
Message-ID: <1232058048.496fb6c099265@webmail.in-berlin.de>
Date: Thu, 15 Jan 2009 23:20:48 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] What is a future of ocaml?
References: <1231924711.2711.11.camel@serphost.localdomain> <496DEC48.7000906@wp.pl> <001801c9765e$4fabc3b0$ef034b10$@com> <20090115.211335.27794984.garrigue@math.nagoya-u.ac.jp> <9b415f950901150446u3f4781e3n3dc2dcb8e2732263@mail.gmail.com>
In-Reply-To: <9b415f950901150446u3f4781e3n3dc2dcb8e2732263@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
User-Agent: Internet Messaging Program (IMP) 3.2.6
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
X-Spam: no; 0.00; bandel:01 in-berlin:01 ocaml:01 grundmann:01 grundmann:01 ocaml's:01 model:01 ocaml:01 syntax:01 lambda:01 lacks:01 perl's:01 compiler:01 bandel:01 cathedral:98 

Hi,

Zitat von Benedikt Grundmann <benedikt.grundmann@googlemail.com>:

> I would even go so far as to say that
>
> One of the advantages of OCaml's current development model is
> that it is not changing the language very quickly.
>
> OCaml is already a big language (featurer/syntax and so on wise),
> it should (IMHO) not grow a lot more at least not without giving
> each change a lot of thought.
[...]


Yes, I agree fullheartedly!

So many other languages evolve a lot, and there is enough
busy-ness / daily business, that needs attention.
Always changing the API or other properties of the language would
be a factor of annoyance.

Such permanent changes and "add-ons" is/are necessary, when there
is a language that is quite weak, so that it is necessary to be enhanced
permanently.

But OCaml is such a good language, that it can compete with it's
language features without that kind of ADH-disorder, that many other
environments offer.  Such ADHD is provided as an advantage, but it
shows me, that there is not only room for enhancement... there also is
a necessity for enhancement of such languages!

And I don't say, OCaml is perfect or any way of making it better should
be deined. But it's strong with it's features.

And with it's it-does-not-change-every-week it is a good base for
long-term developments, IMHO.

Many languages, which will be changed permanently,
also incorporate functional features. I have heard that C++ now has
lambda terms... but it lacks many other things...

So, as Richard Jones mentioned it: it would be much better in enhancing
documentation (Tuorials and HowTO's and so on) and many of the tools...
especially easy installing of packages.

Let me mention R for example... I've never seen a better package-update
system. You can update installed, or install new packages very easy.
It's interactive like Perl's CPAN-module, but you don't need to be
superuser. If you want to install your stuff locally, R supports you
with this! You can have more than one library directory, and you can
select the right directory during the installation process.

Also better consitency of Code and Docs is worth looking at in OCaml.


If there will be enhancements in the distribution (Compiler and
library), I will be happy to appreciate it. I don't want to stop
enhancement. But as you, Benedikt, mentioned, a lot of thought should
be invested, before doing it. I think the INRIA team with it's superior
programmers will do this. There is necessity for the Bazaar as welll as
the Cathedral. We need both, and IMHO the Ocaml-cathedral makes sense.

The Bazaar can offer a lot of tools, tutorials and other things...
...as Richard Jones already mentioned.


Best wishes,
         Oliver Bandel

