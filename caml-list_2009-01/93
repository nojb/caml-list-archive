Return-Path: <d0@wp.pl>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.1 required=5.0 tests=AWL,SPF_FAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 458DFBB84
	for <caml-list@yquem.inria.fr>; Wed, 14 Jan 2009 14:44:49 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AigBAHh6bUnUTWUFkGdsb2JhbACHGox8AQEBAQkJDAcRBLkXhW8
X-IronPort-AV: E=Sophos;i="4.37,263,1231110000"; 
   d="scan'208";a="21474950"
Received: from mx1.wp.pl ([212.77.101.5])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 14 Jan 2009 14:44:48 +0100
Received: (wp-smtpd smtp.wp.pl 15798 invoked from network); 14 Jan 2009 14:44:44 +0100
Received: from phpdk6.ph.kcl.ac.uk (HELO [137.73.5.196]) (d0@[137.73.5.196])
          (envelope-sender <d0@wp.pl>)
          by smtp.wp.pl (WP-SMTPD) with AES256-SHA encrypted SMTP
          for <caml-list@yquem.inria.fr>; 14 Jan 2009 14:44:44 +0100
Message-ID: <496DEC48.7000906@wp.pl>
Date: Wed, 14 Jan 2009 13:44:40 +0000
From: Dawid Toton <d0@wp.pl>
User-Agent: Thunderbird 1.5.0.12 (X11/20090107)
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] What is a future of ocaml?
References: <1231924711.2711.11.camel@serphost.localdomain>
In-Reply-To: <1231924711.2711.11.camel@serphost.localdomain>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-WP-AV: skaner antywirusowy poczty Wirtualnej Polski S. A.
X-WP-SPAM: NO 0000000 [wdNE]                               
X-Spam: no; 0.00; ocaml:01 ocaml:01 compiler:01 'ocaml:01 mutable:01 byte:01 arrays:01 syntax:01 overloading:01 optimistic:98 caml-list:01 functions:01 immutable:01 strings:01 modules:02 

Few days ago I spent some time googling for any info in the subject and 
found nothing (except assigned feature requests in the tracer).

Would be great to know what should be expected about OCaml in a long term.
I understand that there's no manpower to push the core compiler forward 
faster. But it would be a solace to know that there are at least some 
optimistic plans with a broader horizon.

(say, following is a collection of dreams :))

Is there any hope for a grand 'OCaml 4' release that would iron out the 
last ugly spots left in the language with some breaking changes?

E.g.:
Have immutable strings for everyday use and mutable byte arrays as buffers?

Full support for revised syntax? (Error messages, documentation...)

Make modules practically first-class by devising some standard way of 
automatic module to record conversion?

Make record fields acting as projection functions?

Could anybody explain why it's impossible to have type classes in OCaml?
We have few very special operators like (=), is there any chance to make 
them less magic and work out anything that would satisfy basic needs for 
overloading?

Dawid

