Return-Path: <daniel.de_rauglaudre@inria.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 72862BB84
	for <caml-list@yquem.inria.fr>; Tue, 13 Jan 2009 05:51:17 +0100 (CET)
X-IronPort-AV: E=Sophos;i="4.37,257,1231110000"; 
   d="scan'208";a="22375908"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 13 Jan 2009 05:51:17 +0100
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id n0D4pG0F010932
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Tue, 13 Jan 2009 05:51:17 +0100
X-IronPort-AV: E=Sophos;i="4.37,257,1231110000"; 
   d="scan'208";a="22375906"
Received: from yquem.inria.fr ([128.93.8.37])
  by mail1-relais-roc.national.inria.fr with ESMTP; 13 Jan 2009 05:51:16 +0100
Received: by yquem.inria.fr (Postfix, from userid 25991)
	id BFD95BB84; Tue, 13 Jan 2009 05:51:16 +0100 (CET)
Date: Tue, 13 Jan 2009 05:51:16 +0100
From: Daniel de Rauglaudre <daniel.de_rauglaudre@inria.fr>
To: caml-list@inria.fr
Subject: caml_alloc + 64 bits - caml_alloc.h
Message-ID: <20090113045116.GA646@yquem.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.9i
X-Miltered: at concorde with ID 496C1DC4.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; rauglaudre:01 rauglaudre:01 alloc:01 alloc:01 compilation:01 stub:01 ocaml:01 morality:98 caml:02 caml:02 segmentation:03 daniel:04 daniel:04 fault:04 raises:05 

Hi everybody,

Possibly useful information. Is it already known?

When using calls to "caml_alloc" in a 64 bits architecture without
having included "caml/alloc.h", it raises "Segmentation fault" at
execution time.

Notice that I got no warning at compilation time for using caml_alloc
without a definition stub.

In 32 bits architecture, I never had any problem with that.

Morality:
   Don't forget to #include "caml/alloc.h" in your C programs
   if you alloc OCaml things!

-- 
Daniel de Rauglaudre
http://pauillac.inria.fr/~ddr/

