Return-Path: <David.Teller@univ-orleans.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.2 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 1FA0FBB84
	for <caml-list@yquem.inria.fr>; Sun, 18 Jan 2009 00:29:08 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Al4CAFD4cUnCpx6wi2dsb2JhbACUBQEBAQoLChi6HYVz
X-IronPort-AV: E=Sophos;i="4.37,282,1231110000"; 
   d="scan'208";a="21638229"
Received: from unknown (HELO min.univ-orleans.fr) ([194.167.30.176])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 18 Jan 2009 00:29:07 +0100
Received: from smtps.univ-orleans.fr (localhost [127.0.0.1])
	by min.univ-orleans.fr (Postfix) with ESMTP
	id 0CE2312B526; Sun, 18 Jan 2009 00:29:05 +0100 (CET)
Received: from [192.168.0.12] (ras75-4-82-235-58-110.fbx.proxad.net [82.235.58.110])
	by smtps.univ-orleans.fr (Postfix) with ESMTP id 76F4336E60;
	Sun, 18 Jan 2009 00:29:09 +0100 (CET)
Subject: Re: [Caml-list] C++/C# inheritance is bad?
From: David Teller <David.Teller@univ-orleans.fr>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <200901172217.56861.jon@ffconsultancy.com>
References: <FCB84B14-903B-4DC9-949E-F4190C6D4873@osu.edu>
	 <200901171659.36732.jon@ffconsultancy.com>
	 <BAC98FB8-5E8B-4E18-A1AF-421ABC3A4D07@osu.edu>
	 <200901172217.56861.jon@ffconsultancy.com>
Content-Type: text/plain
Date: Sun, 18 Jan 2009 00:29:06 +0100
Message-Id: <1232234946.8010.1.camel@Blefuscu>
Mime-Version: 1.0
X-Mailer: Evolution 2.12.1 
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; univ-orleans:01 vastly:01 alpha-beta:01 model:01 cheers:01 univ-orleans:01 lifo:01 2009:98 shim:98 loving:98 wrote:01 graph:01 caml-list:01 unsafe:01 argument:02 

On Sat, 2009-01-17 at 22:17 +0000, Jon Harrop wrote:
> We've wrapped part of WPF in a functional shim for our F# for Visualization 
> product and, even though it was originally intended for internal use only, 
> our customers are loving using it themselves because it is vastly simpler and 
> less error prone than trying to use WPF's own heavily-imperative but entirely 
> thread unsafe OOP-based API directly.

Out of curiosity: is there a public documentation for your functional
API?

> Incidentally, Cilk looks like the ideal tool to write a parallel GC...

Mmmmhhh... Care to argument this? While I'd be glad to implement, say,
graph search or min-max/alpha-beta with Cilk, I don't quite see how a
concurrent GC would fit into the Cilk model.

Cheers,
 David

-- 
David Teller-Rajchenbach
 Security of Distributed Systems
  http://www.univ-orleans.fr/lifo/Members/David.Teller
   Latest News of French Research: System being liquidated. Researchers angry. 

