Return-Path: <rich@annexia.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.8 required=5.0 tests=AWL,SPF_FAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 689F5BB84
	for <caml-list@yquem.inria.fr>; Sun, 25 Jan 2009 10:49:16 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: An8CACnEe0lQRFuwgWdsb2JhbACTfQEBFiK1FYVL
X-IronPort-AV: E=Sophos;i="4.37,321,1231110000"; 
   d="scan'208";a="34238262"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/AES256-SHA; 25 Jan 2009 10:49:16 +0100
Received: from rich by furbychan.cocan.org with local (Exim 4.63)
	(envelope-from <rich@annexia.org>)
	id 1LR1c8-0002ZW-QC; Sun, 25 Jan 2009 09:49:13 +0000
Date: Sun, 25 Jan 2009 09:49:12 +0000
To: Mikkel =?iso-8859-1?Q?Fahn=F8e_J=F8rgensen?= <mikkel@dvide.com>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] camlp4 compilation model
Message-ID: <20090125094912.GA8018@annexia.org>
References: <caee5ad80901241215kf0b684aj6d70d3337f74ec5c@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <caee5ad80901241215kf0b684aj6d70d3337f74ec5c@mail.gmail.com>
User-Agent: Mutt/1.5.13 (2006-08-11)
From: Richard Jones <rich@annexia.org>
X-Spam: no; 0.00; camlp:01 compilation:01 model:01 0100,:01 mikkel:01 rgensen:01 camlp:01 syntax:01 syntax:01 trivial:01 ocamlfind:01 2009:98 wrote:01 preprocessor:01 caml-list:01 

On Sat, Jan 24, 2009 at 09:15:43PM +0100, Mikkel Fahnøe Jørgensen wrote:
> It seems that an enduser program can link with a camlp4 enhanced
> library and magically have its syntax extended without adding camlp4
> to the build process (once the library has been built). For example
> the bitstring library introduces the bitmatch syntax.

No, this isn't so, at least not in bitstring.

You can link your program with bitstring.cma and get access to
the Bitstring.* library functions like the ones here:

http://et.redhat.com/~rjones/bitstring/html/Bitstring.html#reference

but you cannot use the special bitmatch syntax without preprocessing
your source code with camlp4.

It's trivial to add the preprocessor if you use ocamlfind, so in
practice this is not a problem.

Rich.

-- 
Richard Jones
Red Hat

