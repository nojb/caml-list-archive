Return-Path: <yallop@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id B28747FE07
	for <caml-list@sympa.inria.fr>; Wed,  3 Feb 2016 19:02:08 +0100 (CET)
IronPort-PHdr: 9a23:TwIPWxMGzSZLj1H9HDol6mtUPXoX/o7sNwtQ0KIMzox0KPv5rarrMEGX3/hxlliBBdydsKIbzbOI+PC7EUU7or+/81k6OKRWUBEEjchE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i760zceF13FOBZvIaytQ8iJ35vxjr75q8abSj4LrQT+SIs6FA+xowTVu5teqqpZAYF19CH0pGBVcf9d32JiKAHbtR/94sCt4MwrqHwI6LoJvvRNWqTifqk+UacQTHF/azh0t4XXskzvRBWO6jMnUmgbjgEAVxPF4RzmRb/4tjb/8O98xG+XMdCgHp4uXjH3zapxRRr5wBYOMzo+6CmDm8V0iKVDiB2krh17hYXTZdfGZ7JFYqrBcIZCFiJ6VcFLWnkEW9vkYg==
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=yallop@gmail.com; spf=Pass smtp.mailfrom=yallop@gmail.com; spf=None smtp.helo=postmaster@mail-qk0-f179.google.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  yallop@gmail.com) identity=pra; client-ip=209.85.220.179;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="yallop@gmail.com";
  x-sender="yallop@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  yallop@gmail.com designates 209.85.220.179 as permitted
  sender) identity=mailfrom; client-ip=209.85.220.179;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="yallop@gmail.com";
  x-sender="yallop@gmail.com"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qk0-f179.google.com) identity=helo;
  client-ip=209.85.220.179;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="yallop@gmail.com";
  x-sender="postmaster@mail-qk0-f179.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0DmAAAcQLJWlLPcVdFeDoRrBohVnzaRXgENgWaGDQKBQQc4FAEBAQEBAQEBEAEBAQEHCwsJHzBBEAGBW4IVAQEEEhEdARsdAQMMBgULDQICJgICIQEBEQEFARwGEyKHYwEDEqNAgTE+MYs0gWmCV4VAChknDVGDbgEBAQEGAQEBAQEVAQUKBG2JToI3hHuBOgWOGYhYi1qBc45xhn+GBREegQ0eAQGCOB6BFVwbLoMNhl4BAQE
X-IPAS-Result: A0DmAAAcQLJWlLPcVdFeDoRrBohVnzaRXgENgWaGDQKBQQc4FAEBAQEBAQEBEAEBAQEHCwsJHzBBEAGBW4IVAQEEEhEdARsdAQMMBgULDQICJgICIQEBEQEFARwGEyKHYwEDEqNAgTE+MYs0gWmCV4VAChknDVGDbgEBAQEGAQEBAQEVAQUKBG2JToI3hHuBOgWOGYhYi1qBc45xhn+GBREegQ0eAQGCOB6BFVwbLoMNhl4BAQE
X-IronPort-AV: E=Sophos;i="5.22,391,1449529200"; 
   d="scan'208";a="162980396"
Received: from mail-qk0-f179.google.com ([209.85.220.179])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 03 Feb 2016 19:02:07 +0100
Received: by mail-qk0-f179.google.com with SMTP id o6so11038041qkc.2
        for <caml-list@inria.fr>; Wed, 03 Feb 2016 10:02:07 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=tWj9mEVvTYHhkB0cZ67WAuHCzR1bOa/B4DE8pNVlP0E=;
        b=zph3SFCz0dAvyPqSka2e8Fb37lh0+n//UjeRuyIX6arXGbapNAk2IsS4izbKYW/V75
         nZDNDSnSnsUwkIdC+BPGRCQdJ//xYn7+CE3RkWCALYb1SUt6/lvPHqChSI+ASt207HXD
         IODkdsSZ6fKWZskYWAbNqjiywbCfNQxfaLEgxpwJTh8hhQ01V3z+wm/kN6LuIh6YsVT5
         NEWJMiJpzA5ZLB/QbB6h+Zm2DuX8mJRsV6c7KFGdWGWIIECtxqmqNLYPnJWotw+U8MFV
         ChdVM11RGvf82+vgqla7cyA2SqanQ5p7l66ab+kT/pnfWI38YNgHaeyuO/jbeNuT90ns
         Vnug==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:in-reply-to:references:date
         :message-id:subject:from:to:cc:content-type;
        bh=tWj9mEVvTYHhkB0cZ67WAuHCzR1bOa/B4DE8pNVlP0E=;
        b=EymYXDbSqU9UYG/Zqs0jLnc+vQtG77PxGinCAT2WgY6jBmIcxaYHOjcgdNLmKrHcQ2
         GI6ahTPRceGFM10kXPdqgIhVpVXBRPRRD9TLRXRYFwkBxhugqd2Gv23zLXyf0QJEvq5d
         jMA42Uz/w9lZDHm8oDYb3WkaPYDY6Nyruv/H2qSjseduqglht44sDA5g2gAjakiqlQQI
         42xQNyy9NWE5HiAlZPg2uqcncy3dha0w7n0FRNZtmu4abi4aJt03BL8ZxquvL/ODvaoz
         uhl3w3bT319MsTlkEo2RkDHcBGoQE8Bu5fn5tOWKDFsvTWiKCQ6PGLmuIegm42u+JMcL
         YS3A==
X-Gm-Message-State: AG10YOQ9pqPU/TeFSrRdBWSi9tiEQ8VwwDMpy/8HV85TRVQeyVEAmb9E7GrqyZP/lPKVPuBLlHjT4I7GLQd/eA==
MIME-Version: 1.0
X-Received: by 10.55.72.12 with SMTP id v12mr3291022qka.28.1454522526525; Wed,
 03 Feb 2016 10:02:06 -0800 (PST)
Received: by 10.55.192.129 with HTTP; Wed, 3 Feb 2016 10:02:06 -0800 (PST)
In-Reply-To: <CAAWM5Tyn-HjZPWOmUaWmk_w8isetx_x6pmLHUpXugHhjZsKZ5Q@mail.gmail.com>
References: <56B1DC54.1060109@tu-berlin.de>
	<CANhEzE4MUw6Do5xY05d5L6MJeVxApQFn-Q6c+rM444nhmK_8ig@mail.gmail.com>
	<86r3guq8t4.fsf@gmail.com>
	<CAAWM5Tyn-HjZPWOmUaWmk_w8isetx_x6pmLHUpXugHhjZsKZ5Q@mail.gmail.com>
Date: Wed, 3 Feb 2016 10:02:06 -0800
Message-ID: <CAAxsn=G4oRTdE_Peh8FWvfjTuSu+9jSw8q-dvZ+QNmGyWpWw4Q@mail.gmail.com>
From: Jeremy Yallop <yallop@gmail.com>
To: David Sheets <sheets@alum.mit.edu>
Cc: Malcolm Matalka <mmatalka@gmail.com>, Jeremie Dimino <jdimino@janestreet.com>, 
	=?UTF-8?Q?Christoph_H=C3=B6ger?= <christoph.hoeger@tu-berlin.de>, 
	caml users <caml-list@inria.fr>
Content-Type: text/plain; charset=UTF-8
Subject: Re: [Caml-list] Save callbacks from OCaml to C

On 3 February 2016 at 05:44, David Sheets <sheets@alum.mit.edu> wrote:
> On Wed, Feb 3, 2016 at 12:26 PM, Malcolm Matalka <mmatalka@gmail.com> wrote:
>> Jeremie Dimino <jdimino@janestreet.com> writes:
>>> You need to register [ml_t], [ml_x] and [ml_g
>>> ] as GC roots. Otherwise if the GC runs in caml_ba_alloc for instance,
>>> [ml_t] might ends up containing garbage even before reaching
>>> [caml_callback3]. You can use the normal macros for that:
>>>
>> If one is using ctypes, is all of this taken care of?  I have a library
>> that registers a bunch of Ocaml functions in C code, which the C code
>> calls.  I haven't experienced anything bad happening yet, but that
>> doesn't mean much...
>
> If you use ctypes and pass OCaml closures to C, you *must* retain a
> reference to the closure to avoid it being GCed. If you do not, you
> may experience the exception CallToExpiredClosure sporadically.

Besides David's caveat, the answer is yes: ctypes will take care of
registering arguments as GC roots as necessary.
