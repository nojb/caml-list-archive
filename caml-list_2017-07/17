Return-Path: <shayne.fletcher.50@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id DA6C38018B
	for <caml-list@sympa.inria.fr>; Thu,  6 Jul 2017 00:55:56 +0200 (CEST)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=shayne.fletcher.50@gmail.com; spf=Pass smtp.mailfrom=shayne.fletcher.50@gmail.com; spf=None smtp.helo=postmaster@mail-vk0-f52.google.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  shayne.fletcher.50@gmail.com) identity=pra;
  client-ip=209.85.213.52;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="shayne.fletcher.50@gmail.com";
  x-sender="shayne.fletcher.50@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  shayne.fletcher.50@gmail.com designates 209.85.213.52 as
  permitted sender) identity=mailfrom; client-ip=209.85.213.52;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="shayne.fletcher.50@gmail.com";
  x-sender="shayne.fletcher.50@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-vk0-f52.google.com) identity=helo;
  client-ip=209.85.213.52;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="shayne.fletcher.50@gmail.com";
  x-sender="postmaster@mail-vk0-f52.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3AwUwqwxVbnv14IQcynLcRKuJTAJLV8LGtZVwlr6E/?=
 =?us-ascii?q?grcLSJyIuqrYbBCDt8tkgFKBZ4jH8fUM07OQ6PG/HzRYqb+681k6OKRWUBEEjc?=
 =?us-ascii?q?hE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i764jEdAAjwOhRo?=
 =?us-ascii?q?LerpBIHSk9631+ev8JHPfglEnjSwbLdwIRmssQndqtQdjJd/JKo21hbHuGZDdf?=
 =?us-ascii?q?5MxWNvK1KTnhL86dm18ZV+7SleuO8v+tBZX6nicKs2UbJXDDI9M2Ao/8LrrgXM?=
 =?us-ascii?q?TRGO5nQHTGoblAdDDhXf4xH7WpfxtTb6tvZ41SKHM8D6Uaw4VDK/5KptVRTmij?=
 =?us-ascii?q?oINyQh/W/XhMJ+j79Vrgy9qBFk2YHYfJuYOeBicq/Bf94XQ3dKUMZLVyxGB4Ox?=
 =?us-ascii?q?d5YBD+obMudYqYnyuUYFoxu6BQayGOPg1j9IiWHs3aYn1OkhCgHG0xYgHtIIrn?=
 =?us-ascii?q?vYttv1NKMMXuCp0KbIzSvMb+lM1Tr99ITFaR8hofSWUrJxdcrd01UgFwTAjliJ?=
 =?us-ascii?q?r4HuIj2b1uMIs2eB7upgU/qii3YmqwFpvDej3t8siojRho0L0FzE6SJ5zJ4tJd?=
 =?us-ascii?q?25UE50f8SoEIFOuC6AKoR6WtgiQ31yuCY7zL0Gtpi2dzUJxpQ/3xPTdeCLfoyS?=
 =?us-ascii?q?7h/gVOudOyl0iG9rdb6lhxu+706twfDmWMauylZFtC9Fn8HMtn8T0xzT7dCKSv?=
 =?us-ascii?q?5n8Ueg3TaDzh7T6uJYLUwtm6rWK4AtzqQ/lpoUtkTDESv2l1vsgKCKcUUk//Ck?=
 =?us-ascii?q?6+XhYrr4up+RL5F4hh36P6g0mcGyAf40PhYTU2WV4+ix1KPv8VX8QLpQj/02lq?=
 =?us-ascii?q?fZsIrdJcQevqO5GA9V3Zwj6ha5ETiqytoYnX0ZI1JZZB2Hj5bmO0vULP34Efuy?=
 =?us-ascii?q?mFuskDJxyPDHOr3tGInCLn/GkLv5Z7Zy91ZcyBYvzdBY/59bFqsOIPf3WkPosN?=
 =?us-ascii?q?zYDwQ5MxCvzub8CNR905seVniVDq+YNqPSq16I6fg1L+mCfo9G8Ar6frIu7vvq?=
 =?us-ascii?q?yHs4gkM1fK+z3JJRZmrwA+9rOV7TKS7ni9IFVGMLpRYWTerwiVTEXyQFNFioWK?=
 =?us-ascii?q?dp3TEyGYSrRanHS5ymgLGblHOgHpRHYG0ABFSBDXzoep/CBq8kZyebI8snmTsB?=
 =?us-ascii?q?A+vyA7Q93A2j4Vepg4FsKfDZr3UV?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DzCAD+bV1ZgDTVVdFcHhgHCxgHg0YBP?=
 =?us-ascii?q?oEQB4Ufo2iEP4J5hz0OGYkMB0MUAQEBAQEBAQEBAQESAQEJDQkIJjGCMyKCbQQ?=
 =?us-ascii?q?ZARseAxIDDTcCJAERAQUBIoopAQMVEJFhjVWDRT+MCoFsGAUBHIMIBYNjChknD?=
 =?us-ascii?q?VaDUQIGEoEMggmLd4RXFoJLAQSBLAEBlXuHUwgBAYFNkjiCDIVKg3GGV0iLY4d?=
 =?us-ascii?q?AFB+BFTaBK1IjeFuBV4RlJDaJAwEBAQ?=
X-IPAS-Result: =?us-ascii?q?A0DzCAD+bV1ZgDTVVdFcHhgHCxgHg0YBPoEQB4Ufo2iEP4J?=
 =?us-ascii?q?5hz0OGYkMB0MUAQEBAQEBAQEBAQESAQEJDQkIJjGCMyKCbQQZARseAxIDDTcCJ?=
 =?us-ascii?q?AERAQUBIoopAQMVEJFhjVWDRT+MCoFsGAUBHIMIBYNjChknDVaDUQIGEoEMggm?=
 =?us-ascii?q?Ld4RXFoJLAQSBLAEBlXuHUwgBAYFNkjiCDIVKg3GGV0iLY4dAFB+BFTaBK1Ije?=
 =?us-ascii?q?FuBV4RlJDaJAwEBAQ?=
X-IronPort-AV: E=Sophos;i="5.40,314,1496095200"; 
   d="scan'208,217";a="282227799"
Received: from mail-vk0-f52.google.com ([209.85.213.52])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 06 Jul 2017 00:55:55 +0200
Received: by mail-vk0-f52.google.com with SMTP id 191so869975vko.2
        for <caml-list@inria.fr>; Wed, 05 Jul 2017 15:55:55 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20161025;
        h=mime-version:from:date:message-id:subject:to;
        bh=rBz6LVjuXHTpOGeXXoDYw/k7AacAv4vEtPQZDWNEfC8=;
        b=RxkescVYD7xK2pgeAI8BJzizzj6kW8IVnSASoXpgnWr9H4hKtZr+vFm96Q6HMWvfKX
         d7AyckIAhhm/LHU9U74PiUQ0BxY8/KFjn2kUtN0AHPkmBGWxov6ird7m1GaZmwuWZgY1
         0Ca2BAMzB6ecC+M44yQVLld8Lw4biy5uNEfB1+wsidKVNAfG7JZkHgc3XuTZj3QEd1JI
         KSmQX9OJ9JZ4twOZo+z8MGP/o7POqZ5nUhZ4vS+OeEjsGccl2VuK6gd8Q+c2ogfWKhNR
         A6anEgbVKwUHE16Dz2igaPdw58GTS4h5t2xSKFP++B5M2Ze4Wyn6wCOWgBi/+zMMpJBi
         4IEQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:from:date:message-id:subject:to;
        bh=rBz6LVjuXHTpOGeXXoDYw/k7AacAv4vEtPQZDWNEfC8=;
        b=huePZpqLcUG+zJ8tjauSUoRET2t+tmzeFqnw2w8/PC7QT6a1y4xXK2XqGDPTE5nPtR
         Jed2WLSxggOyWGi4tqZv33FtWLmlwkI2mI9UP3UiKs+ZXUyLZR7jhSjnn3W/NiZhGCRs
         Puf1zHA5LTpMPquoZSEeVd9j9K/3XVOKt4T0hPaoYOmCL0bObF4UX4z0mmfqOYJd+65f
         EW61QxPh/Jgi5i4Tkr4Q364ZeMYDfhmPTwZN7YHZQ4AKvR+JQEDzlQjf8nz5Se3EmLgH
         WVWs8+SFJB7UImXv1kzZ6lW2p1o4YL/XqJNZZ2HKY6ZNOi4EvmuXwMHBuWtG2rrkuxFz
         26Dw==
X-Gm-Message-State: AKS2vOxsA5KVKkAKlrsR9YqztKRsJ4TGLEebBy0PwUe1X4KqSzaPu5EV
	NthLG2VV8ruKt/cmyl1PRXWZcIZ5/XIW
X-Received: by 10.31.108.199 with SMTP id j68mr26053395vki.106.1499295354434;
 Wed, 05 Jul 2017 15:55:54 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.176.81.41 with HTTP; Wed, 5 Jul 2017 15:55:34 -0700 (PDT)
From: Shayne Fletcher <shayne.fletcher.50@gmail.com>
Date: Wed, 5 Jul 2017 18:55:34 -0400
Message-ID: <CAMsAzy9S4GM4Q9vOqk0PSK9UnoK-tZQtDGmoNF4qmFQP3TpQig@mail.gmail.com>
To: "caml-list@inria.fr users" <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary="001a11478efc03bf03055399e7b2"
Subject: [Caml-list] [Async / Cohttp_async] Problem getting all of the data
 in a response body

--001a11478efc03bf03055399e7b2
Content-Type: text/plain; charset="UTF-8"

Can anyone help me out with this?

In short, I'm doing a HTTP POST with a handler along the lines of:
```
fun ((resp : Cohttp_async.Response.t)
    , (body : Cohttp_async.Body.t)) : unit Or_error.t ->
     let r : string Async.Pipe.Reader.t = Cohttp_async.Body.to_pipe body in
     let _ =
      Async.Pipe.iter
        r
        ~continue_on_error:true
        ~f:(fun s -> Async.return (printf "%s" s)) in
      (Ok () : unit Or_error.t)

```

Each time I invoke the program I get, more or less output (very
occasionally none) but never all of it. The response header says it's
"fixed  2700816" and indeed, if I replace the code above with
```
fun ((resp : Cohttp_async.Response.t)
    , (body : Cohttp_async.Body.t)) : unit Or_error.t ->
  let r : string Async.Pipe.Reader.t = Cohttp_async.Body.to_pipe body in
  let n : int Deferred.t =
    Async.Pipe.fold
      r
      ~init:0
      ~f:(fun acc s ->
            printf "acc : %d\n" acc; Async.return (acc + String.length s)
          ) in
  let _ : unit Deferred.t = n  >>| fun n -> printf "Chars read : %d" n in
  (Ok () : unit Or_error.t)

 ```
then (for example), on the first run I might see
```
acc : 0
acc : 1118
acc : 7503
acc : 8780

```

and then on the second run I might see
```
acc : 0
acc : 1118
acc : 4949

```
but never have I seen "Chars read : 2700816".

I've tried a bunch of different things:

  - `Pipe.read_all`:
     ```
       let _ =
         Async.Pipe.read_all r >>|
         fun q -> Queue.iter q ~f:(fun s -> printf "%s" s) in
       ...

     ```
     No output.

  - `Pipe.drain_and_count`:
    ```
      let _ =
        Async.Pipe.drain_and_count r >>|
        fun n -> printf "Count %d\n" n in
      ...

    ```
    No output.

  - `Pipe.to_list`:
     ```
     let _ =
       Async.Pipe.to_list r >>|
       fun l -> printf "%s" (String.concat ~sep:"" l) in
     ...

     ```
     No output.

Also tried the obvious:

  - `Cohttp_async.Body.to_string`:
    ```
      let s = Cohttp_async.Body.to_string body in
      let _ = s >>| fun  s -> printf "%s" s in
      ...

    ```
    No output.

I'm new to this and obviously missing something fundamental :) Is there a
kind soul out there who can give me a hint on how to proceed please?

Thanks!

-- 
Shayne Fletcher

--001a11478efc03bf03055399e7b2
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_default"><div class=3D"gmail_default">=
<font face=3D"tahoma, sans-serif">Can anyone help me out with this?</font><=
/div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif"><br></f=
ont></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">In=
 short, I&#39;m doing a HTTP POST with a handler along the lines of:</font>=
</div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">```</f=
ont></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">fu=
n ((resp : Cohttp_async.Response.t)</font></div><div class=3D"gmail_default=
"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 , (body : Cohttp_async.Bo=
dy.t)) : unit Or_error.t -&gt;</font></div><div class=3D"gmail_default"><fo=
nt face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0let r : string Async.Pip=
e.Reader.t =3D Cohttp_async.Body.to_pipe body in</font></div><div class=3D"=
gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0let _ =
=3D</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-ser=
if">=C2=A0 =C2=A0 =C2=A0 Async.Pipe.iter</font></div><div class=3D"gmail_de=
fault"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0 =C2=A0 r</fon=
t></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=
=A0 =C2=A0 =C2=A0 =C2=A0 ~continue_on_error:true</font></div><div class=3D"=
gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0 =C2=
=A0 ~f:(fun s -&gt; Async.return (printf &quot;%s&quot; s)) in</font></div>=
<div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=
=A0 =C2=A0 (Ok () : unit Or_error.t)</font></div><div class=3D"gmail_defaul=
t"><font face=3D"tahoma, sans-serif"><br>```</font></div><div class=3D"gmai=
l_default"><font face=3D"tahoma, sans-serif"><br></font></div><div class=3D=
"gmail_default"><font face=3D"tahoma, sans-serif">Each time I invoke the pr=
ogram I get, more or less output (very occasionally none) but never all of =
it.=C2=A0</font><span style=3D"font-family:tahoma,sans-serif">The response =
header says it&#39;s &quot;fixed =C2=A02700816&quot; and indeed, if I repla=
ce the code above with</span></div><div class=3D"gmail_default"><font face=
=3D"tahoma, sans-serif">```</font></div><div class=3D"gmail_default"><font =
face=3D"tahoma, sans-serif">fun ((resp : Cohttp_async.Response.t)</font></d=
iv><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =
=C2=A0 , (body : Cohttp_async.Body.t)) : unit Or_error.t -&gt;</font></div>=
<div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 let r=
 : string Async.Pipe.Reader.t =3D Cohttp_async.Body.to_pipe body in</font><=
/div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =
let n : int Deferred.t =3D</font></div><div class=3D"gmail_default"><font f=
ace=3D"tahoma, sans-serif">=C2=A0 =C2=A0 Async.Pipe.fold</font></div><div c=
lass=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=
=A0 r</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-s=
erif">=C2=A0 =C2=A0 =C2=A0 ~init:0</font></div><div class=3D"gmail_default"=
><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0 ~f:(fun acc s -&gt;=
</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif"=
>=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 printf &quot;acc : %d\n&quot; ac=
c; Async.return (acc + String.length s)</font></div><div class=3D"gmail_def=
ault"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0 =
) in</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-se=
rif">=C2=A0 let _ : unit Deferred.t =3D n =C2=A0&gt;&gt;| fun n -&gt; print=
f &quot;Chars read : %d&quot; n in</font></div><div class=3D"gmail_default"=
><font face=3D"tahoma, sans-serif">=C2=A0 (Ok () : unit Or_error.t)</font><=
/div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif"><br>=C2=
=A0```</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-=
serif">then (for example), on the first run I might see</font></div><div cl=
ass=3D"gmail_default"><font face=3D"tahoma, sans-serif">```</font></div><di=
v class=3D"gmail_default"><font face=3D"tahoma, sans-serif">acc : 0</font><=
/div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">acc : 1=
118</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-ser=
if">acc : 7503</font></div><div class=3D"gmail_default"><font face=3D"tahom=
a, sans-serif">acc : 8780</font></div><div class=3D"gmail_default"><font fa=
ce=3D"tahoma, sans-serif"><br>```</font></div><div class=3D"gmail_default">=
<font face=3D"tahoma, sans-serif"><br></font></div><div class=3D"gmail_defa=
ult"><font face=3D"tahoma, sans-serif">and then on the second run I might s=
ee</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-seri=
f">```</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-=
serif">acc : 0</font></div><div class=3D"gmail_default"><font face=3D"tahom=
a, sans-serif">acc : 1118</font></div><div class=3D"gmail_default"><font fa=
ce=3D"tahoma, sans-serif">acc : 4949</font></div><div class=3D"gmail_defaul=
t"><font face=3D"tahoma, sans-serif"><br>```</font></div><div class=3D"gmai=
l_default"><font face=3D"tahoma, sans-serif">but never have I seen &quot;Ch=
ars read : 2700816&quot;.</font></div><div class=3D"gmail_default"><font fa=
ce=3D"tahoma, sans-serif"><br></font></div><div class=3D"gmail_default"><fo=
nt face=3D"tahoma, sans-serif">I&#39;ve tried a bunch of different things:<=
/font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=
<br></font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-se=
rif">=C2=A0 - `Pipe.read_all`:</font></div><div class=3D"gmail_default"><fo=
nt face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0```</font></div><div cla=
ss=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0=
 =C2=A0let _ =3D</font></div><div class=3D"gmail_default"><font face=3D"tah=
oma, sans-serif">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0Async.Pipe.read_all r &g=
t;&gt;|</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans=
-serif">=C2=A0 =C2=A0 =C2=A0 =C2=A0 =C2=A0fun q -&gt; Queue.iter q ~f:(fun =
s -&gt; printf &quot;%s&quot; s) in</font></div><div class=3D"gmail_default=
"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0 =C2=A0...</font></=
div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif"><br>=C2=
=A0 =C2=A0 =C2=A0```</font></div><div class=3D"gmail_default"><font face=3D=
"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0No output.</font></div><div class=
=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0</=
font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=
=C2=A0 - `Pipe.drain_and_count`:</font></div><div class=3D"gmail_default"><=
font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 ```</font></div><div class=
=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0 l=
et _ =3D</font></div><div class=3D"gmail_default"><font face=3D"tahoma, san=
s-serif">=C2=A0 =C2=A0 =C2=A0 =C2=A0 Async.Pipe.drain_and_count r &gt;&gt;|=
</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif"=
>=C2=A0 =C2=A0 =C2=A0 =C2=A0 fun n -&gt; printf &quot;Count %d\n&quot; n in=
</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif"=
>=C2=A0 =C2=A0 =C2=A0 ...</font></div><div class=3D"gmail_default"><font fa=
ce=3D"tahoma, sans-serif"><br>=C2=A0 =C2=A0 ```</font></div><div class=3D"g=
mail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 No output.</f=
ont></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=
=C2=A0=C2=A0</font></div><div class=3D"gmail_default"><font face=3D"tahoma,=
 sans-serif">=C2=A0 - `Pipe.to_list`:</font></div><div class=3D"gmail_defau=
lt"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0```</font></div><=
div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0=
 =C2=A0let _ =3D</font></div><div class=3D"gmail_default"><font face=3D"tah=
oma, sans-serif">=C2=A0 =C2=A0 =C2=A0 =C2=A0Async.Pipe.to_list r &gt;&gt;|<=
/font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=
=C2=A0 =C2=A0 =C2=A0 =C2=A0fun l -&gt; printf &quot;%s&quot; (String.concat=
 ~sep:&quot;&quot; l) in</font></div><div class=3D"gmail_default"><font fac=
e=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0...</font></div><div class=3D"=
gmail_default"><font face=3D"tahoma, sans-serif"><br>=C2=A0 =C2=A0 =C2=A0``=
`</font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif=
">=C2=A0 =C2=A0 =C2=A0No output.</font></div><div class=3D"gmail_default"><=
font face=3D"tahoma, sans-serif">=C2=A0=C2=A0<br>Also tried the obvious:</f=
ont></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif"><b=
r></font></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-seri=
f">=C2=A0 - `Cohttp_async.Body.to_string`:</font></div><div class=3D"gmail_=
default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 ```</font></div><d=
iv class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =
=C2=A0 let s =3D Cohttp_async.Body.to_string body in</font></div><div class=
=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 =C2=A0 l=
et _ =3D s &gt;&gt;| fun =C2=A0s -&gt; printf &quot;%s&quot; s in</font></d=
iv><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">=C2=A0 =
=C2=A0 =C2=A0 ...</font></div><div class=3D"gmail_default"><font face=3D"ta=
homa, sans-serif"><br>=C2=A0 =C2=A0 ```</font></div><div class=3D"gmail_def=
ault"><font face=3D"tahoma, sans-serif">=C2=A0 =C2=A0 No output.</font></di=
v><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif"><br></font=
></div><div class=3D"gmail_default"><font face=3D"tahoma, sans-serif">I&#39=
;m new to this and obviously missing something fundamental :) Is there a ki=
nd soul out there who can give me a hint on how to proceed please?</font></=
div><div class=3D"gmail_default"><span style=3D"font-family:tahoma,sans-ser=
if"><br>Thanks!</span><br></div></div><div><br></div>-- <br><div class=3D"g=
mail-m_-4684300201294283595gmail_signature">Shayne Fletcher</div>
<img src=3D"http://t.sidekickopen68.com/e1t/o/5/f18dQhb0S7ks8dDMPbW2n0x6l2B=
9gXrN7sKj6v5dw9-W1qMxhd5v_N4lMRzzqPd3_yKW7Fq_jz1k1H6H0?si=3D538478591868928=
0&amp;pi=3D10975d16-aca0-46a2-b88d-818a256d8dff" style=3D"display:none!impo=
rtant" height=3D"1" width=3D"1"></div>

--001a11478efc03bf03055399e7b2--
