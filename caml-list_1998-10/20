Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA16774 for caml-redistribution; Mon, 12 Oct 1998 18:51:43 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA15127 for <caml-list@pauillac.inria.fr>; Mon, 12 Oct 1998 13:39:11 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id NAA18607;
	Mon, 12 Oct 1998 13:39:03 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA03683; Mon, 12 Oct 1998 13:39:03 +0200 (MET DST)
Message-ID: <19981012133903.58898@pauillac.inria.fr>
Date: Mon, 12 Oct 1998 13:39:03 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Anton Moscal <msk@post.tepkom.ru>, caml-list@inria.fr
Subject: Re: Local definitions
References: <199809280951.LAA27562@pauillac.inria.fr> <Pine.LNX.4.03.9810051823001.28401-100000@post.tepkom.ru>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.89.1
In-Reply-To: <Pine.LNX.4.03.9810051823001.28401-100000@post.tepkom.ru>; from Anton Moscal on Mon, Oct 05, 1998 at 06:27:18PM +0400
Sender: weis

> Why CaML doesn't not allow the following style of local definitions:
> [...]
> or, the second variant: simply allow declaration of
> types, exceptions, open statements and others in "let-in"
> expressions with the same translation:

I think types and exceptions are best handled at the level of
modules, if necessary by creating a sub-structure to restrict their scope.

I've never found a convincing example of a type or exception
declaration local to an expression.

It is true that "let module ... in <expr>" lets you achieve the same
effect, but that's really not the intended use of "let module", which
is to allow functor applications to structures whose value components
may depend on function parameters.

> This syntax allow more convenient notation for local types,
> classes, exceptions and others definitions, than explicit usage of 
> local modules.

This is true, but I'd still recommend that you don't use types,
classes and exceptions local to an expression.  The module system
handles this just fine.

Best regards,

- Xavier Leroy




