Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA14764 for caml-redistribution; Wed, 26 Mar 1997 09:24:27 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA11567 for <caml-list@pauillac.inria.fr>; Tue, 25 Mar 1997 17:45:15 +0100 (MET)
Received: from simon.cs.cornell.edu (SIMON.CS.CORNELL.EDU [128.84.154.10]) by concorde.inria.fr (8.7.6/8.7.3) with ESMTP id RAA20378 for <caml-list@pauillac.inria.fr>; Tue, 25 Mar 1997 17:45:09 +0100 (MET)
Received: from cloyd.cs.cornell.edu (CLOYD.CS.CORNELL.EDU [128.84.227.15])
	by simon.cs.cornell.edu (8.8.5/8.8.5/R-1.7) with ESMTP id KAA10993
	for <caml-list@pauillac.inria.fr>; Tue, 25 Mar 1997 10:35:11 -0500 (EST)
Received: from gulag.cs.cornell.edu (GULAG.CS.CORNELL.EDU [128.84.211.142])
	by cloyd.cs.cornell.edu (8.8.5/8.8.5/M-1.8) with ESMTP id KAA03674
	for <caml-list@pauillac.inria.fr>; Tue, 25 Mar 1997 10:35:09 -0500 (EST)
Received: (from hayden@localhost) by gulag.cs.cornell.edu (8.7.4/8.7.3/C-1.1) id KAA12012; Tue, 25 Mar 1997 10:36:15 -0500
Date: Tue, 25 Mar 1997 10:36:15 -0500
Message-Id: <199703251536.KAA12012@gulag.cs.cornell.edu>
From: Mark Hayden <hayden@cs.cornell.edu>
To: caml-list@pauillac.inria.fr
Subject: ocaml inlining
Sender: weis


In the recent versions of Ocaml, are functions inlined
across modules?  Across files?  If so, what is the effect of
compiling several files with different levels of inlining?

The Ocaml documentation describes the inlining option as follows:

-inline n
     Set aggressiveness of inlining to n, where n is a positive integer. Specifying -inline 0
     prevents all functions from being inlined, except those whose body is smaller than the call
     site. Thus, inlining causes no expansion in code size. The default aggressiveness,
     -inline 1, allows slightly larger functions to be inlined, resulting in a slight expansion in
     code size. Higher values for the -inline option cause larger and larger functions to
     become candidate for inlining, but can result in a serious increase in code size.

thanks, Mark




