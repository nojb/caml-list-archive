Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA18731 for caml-redistribution; Wed, 26 Mar 1997 14:07:20 +0100 (MET)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA16326; Wed, 26 Mar 1997 11:20:34 +0100 (MET)
From: Xavier Leroy <xleroy@pauillac.inria.fr>
Message-Id: <199703261020.LAA16326@pauillac.inria.fr>
Subject: Re: ocaml inlining
In-Reply-To: <199703251536.KAA12012@gulag.cs.cornell.edu> from Mark Hayden at "Mar 25, 97 10:36:15 am"
To: hayden@cs.cornell.edu (Mark Hayden)
Date: Wed, 26 Mar 1997 11:20:34 +0100 (MET)
Cc: caml-list@pauillac.inria.fr
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: weis

> In the recent versions of Ocaml, are functions inlined
> across modules? Across files?

Yes to both. (Remember: this applies only to the native-code compiler.)
The body of an inlinable function is stored in the .cmx file for its
defining module, thus it can be inlined from other modules.

> If so, what is the effect of
> compiling several files with different levels of inlining?

The inlining level (-inline n) is taken into account when compiling a
function definition, but not when compiling a call to this function.
If the function is small enough (w.r.t. the inlining level at that
time), it is marked inlinable, and all uses of this function will
inline its body, regardless of the value of -inline at the time of use.

- Xavier Leroy




