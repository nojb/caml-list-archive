Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA26659 for caml-redistribution; Mon, 17 Mar 1997 19:02:37 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA15243 for <caml-list@pauillac.inria.fr>; Mon, 17 Mar 1997 10:12:45 +0100 (MET)
Received: from www.nextsolution.co.jp (www.nextsolution.co.jp [202.33.245.114]) by concorde.inria.fr (8.7.6/8.7.3) with SMTP id KAA20746 for <caml-list@pauillac.inria.fr>; Mon, 17 Mar 1997 10:12:41 +0100 (MET)
Received: from sparc3.co.jp (sparc3 [202.235.80.3]) by www.nextsolution.co.jp (SMI-8.6/) with ESMTP id SAA24229 for <caml-list@pauillac.inria.fr>; Mon, 17 Mar 1997 18:11:23 +0900
Received: by sparc3.co.jp (SMI-8.6/SMI-SVR4)
	id SAA03884; Mon, 17 Mar 1997 18:13:43 +0900
Date: Mon, 17 Mar 1997 18:13:43 +0900
Message-Id: <199703170913.SAA03884@sparc3.co.jp>
From: Frank Christoph <christo@nextsolution.co.jp>
To: caml-list@pauillac.inria.fr
Subject: Re: Weak pointers
In-Reply-To: <199703140840.RAA00341@sparc3.co.jp>
References: <199703111328.OAA20795@pauillac.inria.fr>
	<199703140840.RAA00341@sparc3.co.jp>
Sender: weis

(I wrote:)

>>>>> "Xavier" == Xavier Leroy <Xavier.Leroy@inria.fr> writes:
>> Release 1.04 of Objective Caml is now available.  The main novelty in this
>> release is the port of the Caml Light replay debugger. Also, the
>> native-code compiler now works on Silicon Graphics, weak pointers are
>> supported, and the foreign interface was enriched to make calling Caml from
>> C easier.

>   What is a "weak pointer"?  Is it described in the manual?

  My apologies.  I just discovered module Weak in the standard library.
However, I still don't understand the concept.  The manual says:

  "A weak pointer is an object that the garbage collector may erase at any
time.  A weak pointer is said to be full if it points to an object, empty if
the object was erased by the GC."

  Does this mean that even a full weak pointer can be erased?  What does "at
any time" mean --- even if the pointer is still accessible from the root set,
its contents can be erased?  Is this intended to contrast with a usual
reference, which must always be initialized?  Are weak pointers intended to
model C pointers?

  Could someone post an example of their use?

-- 
Frank Christoph                 Next Solution Co.      Tel: 0424-98-1811
christo@nextsolution.co.jp                             Fax: 0424-98-1500




