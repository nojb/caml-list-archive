Return-Path: <steph@glondu.net>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id 396FB7ED88
	for <caml-list@sympa.inria.fr>; Tue,  4 Sep 2012 11:42:28 +0200 (CEST)
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  steph@glondu.net) identity=pra; client-ip=138.231.136.39;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="steph@glondu.net";
  x-sender="steph@glondu.net"; x-conformance=sidf_compatible
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  steph@glondu.net) identity=mailfrom;
  client-ip=138.231.136.39;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="steph@glondu.net";
  x-sender="steph@glondu.net"; x-conformance=sidf_compatible
Received-SPF: Pass (mail1-smtp-roc.national.inria.fr: domain of
  postmaster@redisdead.crans.org designates 138.231.136.39 as
  permitted sender) identity=helo; client-ip=138.231.136.39;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="steph@glondu.net";
  x-sender="postmaster@redisdead.crans.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlwFACbMRVCK54gn/2dsb2JhbABFt26DOoEHgiEBBTIBRQEQCyEWDwkDAgECAUUGDQEHAogJukKLDYcyA5VZhV+KO4Jl
X-IronPort-AV: E=Sophos;i="4.80,366,1344204000"; 
   d="scan'208";a="171789130"
Received: from redisdead.crans.org ([138.231.136.39])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/ADH-AES256-SHA; 04 Sep 2012 11:42:27 +0200
Received: from [152.81.3.42] (wencory.loria.fr [152.81.3.42])
	(using TLSv1 with cipher AES256-SHA (256/256 bits))
	(No client certificate requested)
	by redisdead.crans.org (Postfix) with ESMTPSA id 8340F2152;
	Tue,  4 Sep 2012 11:42:27 +0200 (CEST)
Message-ID: <5045CD03.1020405@glondu.net>
Date: Tue, 04 Sep 2012 11:42:27 +0200
From: =?ISO-8859-1?Q?St=E9phane_Glondu?= <steph@glondu.net>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:10.0.6esrpre) Gecko/20120817 Icedove/10.0.6
MIME-Version: 1.0
To: bob zhang <bobzhang1988@gmail.com>
CC: Caml List <caml-list@inria.fr>
References: <CANcqPu5DO4ftYaaqDkGwddKhGrnRf9j=BEq8=SfX8+OpBOfx8w@mail.gmail.com>
In-Reply-To: <CANcqPu5DO4ftYaaqDkGwddKhGrnRf9j=BEq8=SfX8+OpBOfx8w@mail.gmail.com>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
Subject: Re: [Caml-list] bootstrapping for ocaml's compiler

Le 03/09/2012 21:41, bob zhang a écrit :
>    Can anyone tell me that ocaml's native code bootstrapping system can
> reach a fixpoint or not?
> I am doing my own compiler using ocaml as backend,*/I found something
> weird: the byte-code /*
> */compiler can always reach a fix-point, the native-code can reach a
> fix-point sometimes, sometimes not./*
> */Is this expected behavior or not? Is there any randomized algorithm
> used in ocamlopt?/*

What are you comparing?

The underlying toolchain might use randomized algorithms. For example,
GCC can be configured to embed a freshly generated UUID in each
executable it produces. What should be compared is the assembly output
(-S output).


Cheers,

-- 
Stéphane
