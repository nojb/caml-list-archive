Return-Path: <will@exomi.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 2C8CFBB81
	for <caml-list@yquem.inria.fr>; Tue, 21 Dec 2004 09:25:58 +0100 (CET)
Received: from will.iki.fi (will.iki.fi [217.169.64.20])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iBL8PvKX030131
	for <caml-list@yquem.inria.fr>; Tue, 21 Dec 2004 09:25:58 +0100
Received: from acerf.exomi.com (fa-3-0-0.fw.exomi.com [217.169.64.99])
	by will.iki.fi (Postfix) with ESMTP id 26B8B161;
	Tue, 21 Dec 2004 10:25:55 +0200 (EET)
Subject: Re: [Caml-list] ocamlopt for ppc64
From: Ville-Pertti Keinonen <will@exomi.com>
To: lafitte@cui.unige.ch
Cc: Sven Luther <sven.luther@wanadoo.fr>, caml-list@yquem.inria.fr
In-Reply-To: <Pine.LNX.4.60.0412202358460.6373@beavertp>
References: <Pine.LNX.4.60.0412191331090.17804@beavertp>
	 <20041220144921.GA9522@pegasos> <Pine.LNX.4.60.0412202358460.6373@beavertp>
Content-Type: text/plain
Date: Tue, 21 Dec 2004 10:25:39 +0200
Message-Id: <1103617539.649.23.camel@localhost>
Mime-Version: 1.0
X-Mailer: Evolution 2.0.3 FreeBSD GNOME Team Port 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 41C7DE15.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocamlopt:01 wrote:01 userland:01 gcc:01 ocamlopt:01 integers:01 bytecode:01 ocaml:01 bignums:01 bug:01 cui:98 ...:98 ...:98 integer:01 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

On Tue, 2004-12-21 at 01:17 +0100, lafitte@cui.unige.ch wrote:
> I do have a true ppc64 userland... (64bit kernel, gcc, linker, libraries;
> "configure" rightly sees a 64-bit architecture...)
> I'd like to have a 64bit ocamlopt to run my programs that would greatly
> benefit from fast large integer arithmetic.

For large enough integers, you may well see considerable improvements
even when running bytecode just by adding a few simple CPU-specific
operations to the num library.

Note that currently OCaml bignums need a small fix to work correctly on
64-bit architectures (see bug 3299).


