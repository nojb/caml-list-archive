Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 04ECBBB81
	for <caml-list@yquem.inria.fr>; Fri, 17 Dec 2004 18:07:57 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iBHH7uVe024996
	for <caml-list@yquem.inria.fr>; Fri, 17 Dec 2004 18:07:56 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA05750 for <caml-list@pauillac.inria.fr>; Fri, 17 Dec 2004 18:07:56 +0100 (MET)
Received: from alex.barettalocal.com (h213-255-109-130.albacom.net [213.255.109.130] (may be forged))
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iBHH7tRd019701
	for <caml-list@inria.fr>; Fri, 17 Dec 2004 18:07:55 +0100
Received: from [127.0.0.1] (localhost.localdomain [127.0.0.1])
	by alex.barettalocal.com (Postfix) with ESMTP id 268B02BAA94
	for <caml-list@inria.fr>; Fri, 17 Dec 2004 18:07:56 +0100 (CET)
Message-ID: <41C3126A.3060101@barettadeit.com>
Date: Fri, 17 Dec 2004 18:07:54 +0100
From: Alex Baretta <alex@barettadeit.com>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.7.3) Gecko/20041007 Debian/1.7.3-5
X-Accept-Language: it, en-us, en
MIME-Version: 1.0
To: Ocaml <caml-list@inria.fr>
Subject: [OT] Rant about VCS
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 41C3126C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 41C3126B.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; baretta:01 kloc:01 ocaml:01 ocaml:01 cvs:01 cvs:01 model:01 haskell:01 lacks:01 compiler:01 ocamlrun:01 compiler:01 riders:01 baretta:01 sick:98 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.0
X-Spam-Level: 

Please forgive me for ranting about source code Version Control Systems 
on the list, but I can't help it. Besides, I would like to know what the 
gurus on the list use to manage their own projects.

My company handles close to 100kloc of Ocaml and ocaml related files 
under CVS. We have gotten sick and tired of having to reconstruct CVS 
repositories from scratch every once in a while because we need to move 
files or delete directories.

It appeared to us that Darcs might solve the problem: it seems based on 
a reasonably sound algebraic model and is written in Haskell, which 
supposedly should be a bonus compared to other VCSs written in C.

Yet, darcs lacks some of the most basic features of a VCS, such as 
handling metadata (the executable bit, essentially). The darcs 
developers say that this is a "planned feature" but nothing really 
urgent. Actually, we think this is a critical feature in a big project 
which relies on scripts and other executables distributed together with 
the source for bootstrapping purposes. Ocaml itself ships with a full 
compiler to be able to bootstrap, albeit this does not depend on the 
executable bit being set anywhere since ocamlrun is generated by the C 
compiler.

Other VCSs such as subversion seem to be so unstable as to severely 
discourage their use in an industrial project.

***

What is the Ocaml way to solve this problem? What VCS do caml breeders 
and riders use?

I definitely hope I must not write YAVCS in Ocaml...

Alex

-- 
*********************************************************************
http://www.barettadeit.com/
Baretta DE&IT
A division of Baretta SRL

tel. +39 02 370 111 55
fax. +39 02 370 111 54

Our technology:

The Application System/Xcaml (AS/Xcaml)
<http://www.asxcaml.org/>

The FreerP Project
<http://www.freerp.org/>

