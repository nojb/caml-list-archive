Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id F2C37BB81
	for <caml-list@yquem.inria.fr>; Mon, 13 Dec 2004 14:34:33 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iBDDYXqN017116
	for <caml-list@yquem.inria.fr>; Mon, 13 Dec 2004 14:34:33 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA31740 for <caml-list@pauillac.inria.fr>; Mon, 13 Dec 2004 14:34:33 +0100 (MET)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iBDDYV36013730
	for <caml-list@inria.fr>; Mon, 13 Dec 2004 14:34:32 +0100
Received: from [192.168.1.200] (ppp209-112.lns2.syd3.internode.on.net [203.122.209.112])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id iBDDXu7D048385;
	Tue, 14 Dec 2004 00:04:12 +1030 (CST)
Subject: Re: [Caml-list] environment idiom
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Martin Berger <martinb@dcs.qmul.ac.uk>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <41BD7F27.1080407@dcs.qmul.ac.uk>
References: 
	 <9410EC84C0872141B27A2726613EF45D02A52E08@psmrdcex01.psm.pin.safeco.com>
	 <41B97FD7.50309@andrej.com> <1102732237.2611.580.camel@pelican.wigram>
	 <41BB04D8.60405@andrej.com> <20041211181313.GA9656@fichte.ai.univie.ac.at>
	 <1102809398.2611.637.camel@pelican.wigram>
	 <Pine.LNX.4.58.0412130002080.1921@eiger.cip.physik.uni-muenchen.de>
	 <1102901206.2768.127.camel@pelican.wigram>
	 <Pine.LNX.4.58.0412130931340.13773@eiger.cip.physik.uni-muenchen.de>
	 <1102935187.2578.85.camel@pelican.wigram> <41BD7F27.1080407@dcs.qmul.ac.uk>
Content-Type: text/plain
Message-Id: <1102944835.2578.246.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 14 Dec 2004 00:33:56 +1100
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 41BD9A69.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 41BD9A67.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 sourceforge:01 wrote:01 monadic:01 monadic:01 typable:01 typable:01 glebe:01 ...:98 ...:98 061:98 idiom:01 nsw:01 typing:01 meaningless:01 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

On Mon, 2004-12-13 at 22:38, Martin Berger wrote:
> it is quite simple: of course the monadic IO that has been discussed
> has side-effects. hence it is not funcitonal. but -- and that's a big
> but -- what the monadic types do is: LIMIT composability in a way that
> no typable context can OBSERVE the statefulness of the monadic code.
> an external observer, not bound to the typing discipline, can observe
> the stateful behaviour.

AH! Thank you. No *typable* context can *observe*...

Now we're getting closer to a more general characterisation...

> more generally: the question of whether a code fragment is  functional
> or not is meaningless without specifying the class of admissable
> observations,

Yay! Yes! Spot on! <lol>


-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



