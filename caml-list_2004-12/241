Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 67320BB81
	for <caml-list@yquem.inria.fr>; Sat, 18 Dec 2004 00:12:52 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iBHNCql3024209
	for <caml-list@yquem.inria.fr>; Sat, 18 Dec 2004 00:12:52 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA17638 for <caml-list@pauillac.inria.fr>; Sat, 18 Dec 2004 00:12:51 +0100 (MET)
Received: from [IPv6:::1] (yquem.inria.fr [128.93.8.37])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iBHNCojc024206
	for <caml-list@inria.fr>; Sat, 18 Dec 2004 00:12:51 +0100
Mime-Version: 1.0 (Apple Message framework v619)
In-Reply-To: <20041217013905.L29074@bowser.eecs.harvard.edu>
References: <20041217013905.L29074@bowser.eecs.harvard.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Message-Id: <2BD7548E-5081-11D9-B92D-000D9345235C@inria.fr>
Content-Transfer-Encoding: quoted-printable
From: Damien Doligez <damien.doligez@inria.fr>
Subject: Re: [Caml-list] Out_of_memory
Date: Sat, 18 Dec 2004 00:12:50 +0100
To: caml users <caml-list@inria.fr>
X-Mailer: Apple Mail (2.619)
X-Miltered: at nez-perce with ID 41C367F4.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 41C367F2.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; damien:01 damien:01 caml-list:01 wrote:01 garbage:01 heap:01 garbage:01 debugger:01 exception:01 exception:01 doligez:01 doligez:01 computation:01 alexander:02 dump:03 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

On 17 d=E9c. 2004, at 07:44, Christopher Alexander Stein wrote:

> Hi, I am getting an exception Out_of_memory. The manual tells me
> this is raised by the garbage collector when there is
> insufficient memory to complete the computation. Is there any way
> to find out what is causing this; what is gobbling up memory too
> fast for the GC? Perhaps there is a way to get and analyze a core
> file or a way to catch the exception and dump the heap and
> garbage collector state. Any suggestions?

Have you tried using the debugger?

-- Damien

