Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id CAF4EBB91
	for <caml-list@yquem.inria.fr>; Sun, 26 Dec 2004 03:42:23 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iBQ2gNeI007544
	for <caml-list@yquem.inria.fr>; Sun, 26 Dec 2004 03:42:23 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA00123 for <caml-list@pauillac.inria.fr>; Sun, 26 Dec 2004 03:42:22 +0100 (MET)
From: romildo@uber.com.br
Received: from gentoo.malaquias.no-ip.org (233-139-125.xdsl-dinamico.ctbcnetsuper.com.br [200.233.139.125])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iBQ2gKm0007539
	for <caml-list@inria.fr>; Sun, 26 Dec 2004 03:42:22 +0100
Received: by gentoo.malaquias.no-ip.org (Postfix, from userid 500)
	id 233B2814E24; Sun, 26 Dec 2004 00:47:13 -0200 (BRST)
Date: Sun, 26 Dec 2004 00:47:12 -0200
To: caml-list@inria.fr
Subject: Unread a char from in_channel
Message-ID: <20041226024712.GA15767@gentoo.malaquias.no-ip.org>
Mail-Followup-To: caml-list@inria.fr
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde with ID 41CE250F.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 41CE250C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; romildo:01 char:01 char:01 romildo:01 character:03 character:03 channel:06 channel:06 function:08 function:08 consuming:89 but:12 there:17 there:17 would:17 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=1.3 required=5.0 tests=FORGED_RCVD_HELO,NO_REAL_NAME,
	RCVD_IN_NJABL_PROXY autolearn=disabled version=3.0.0
X-Spam-Level: *

Hi.

Is there a function to unread a character from an
input channel. The character would be put back into
the channel, and reread in the next read operation.

Is there a function to look at the next available
character in an input channel without consuming
the character? It would be like input_char, but
the character would not be removed from the channel.
The next input operation on the channel would
still see the character.

Romildo

