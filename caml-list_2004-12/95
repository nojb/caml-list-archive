Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 71BBBBB81
	for <caml-list@yquem.inria.fr>; Thu,  9 Dec 2004 11:37:18 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iB9AbHo6015157
	for <caml-list@yquem.inria.fr>; Thu, 9 Dec 2004 11:37:18 +0100
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA23395 for <caml-list@pauillac.inria.fr>; Thu, 9 Dec 2004 11:37:17 +0100 (MET)
Received: from bernache.ens-lyon.fr (bernache.ens-lyon.fr [140.77.167.10])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iB9AbH9x015149
	for <caml-list@inria.fr>; Thu, 9 Dec 2004 11:37:17 +0100
Received: by bernache.ens-lyon.fr (Postfix, from userid 103)
	id 92C167ABD45; Thu,  9 Dec 2004 11:37:13 +0100 (CET)
Received: from [192.168.2.69] (unknown [84.97.241.83])
	(using TLSv1 with cipher RC4-MD5 (128/128 bits))
	(Client did not present a certificate)
	by bernache.ens-lyon.fr (Postfix) with ESMTP id EE8F27ABD44
	for <caml-list@inria.fr>; Thu,  9 Dec 2004 11:37:12 +0100 (CET)
Message-ID: <41B829A6.7040201@ens-lyon.fr>
Date: Thu, 09 Dec 2004 11:32:06 +0100
From: David Baelde <david.baelde@ens-lyon.fr>
Reply-To: david.baelde@ens-lyon.org
User-Agent: Mozilla Thunderbird 0.8 (X11/20041012)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: [Caml-list] mmap() and strings
References: <20041208202428.GA9878@ours.starynkevitch.net>	<20041208205042.GD1840@ens-lyon.fr>	<20041209.100901.75479815.garrigue@math.nagoya-u.ac.jp> <20041209.104204.95951378.garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <20041209.104204.95951378.garrigue@math.nagoya-u.ac.jp>
X-Enigmail-Version: 0.86.0.0
X-Enigmail-Supports: pgp-inline, pgp-mime
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 41B82ADE.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at nez-perce with ID 41B82ADD.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ens-lyon:01 caml-list:01 bigarray:01 bigarray:01 avoiding:01 mmaped:01 suck:98 strings:01 strings:01 caml:02 black:96 seems:03 string:03 string:03 let:03 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 


Hello and thank you for this precise (and impressive) answer,
(I'm working together with Julien)

But actually, we need also to get a bigarray from string. So the writer 
could get a string as usual, copy it once in a shared bigarray, and then 
let the readers read it, without any more copies.

Anyway, I'm also quite afraid of including suck black magic in our 
project ;) We're OK for writing some C, we already did. Maybe it would 
be easier than Obj.Magic stuff.

Avoiding copies is our goal, but it seems impossible to get a string of 
which Caml doesn't own the blocks, in order to make a mmaped mem area 
corresponding to many strings in the writer/readers processes.

--
David

