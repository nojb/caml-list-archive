Return-Path: <pierre.weis@inria.fr>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 80392BB81
	for <caml-list@yquem.inria.fr>; Tue,  7 Dec 2004 20:38:24 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iB7JcOvJ018057
	for <caml-list@yquem.inria.fr>; Tue, 7 Dec 2004 20:38:24 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA09017; Tue, 7 Dec 2004 20:38:23 +0100 (MET)
Received: from galaxy.systems.pipex.net (galaxy.systems.pipex.net [62.241.162.31])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iB7JcNDZ018054;
	Tue, 7 Dec 2004 20:38:23 +0100
Received: from draco.dyndns.org (81-178-106-202.dsl.pipex.com [81.178.106.202])
	by galaxy.systems.pipex.net (Postfix) with ESMTP id 200E3E00038F;
	Tue,  7 Dec 2004 19:38:22 +0000 (GMT)
Received: from jim by draco.dyndns.org with local (Exim 4.42)
	id 1CblAE-0000lr-EL; Tue, 07 Dec 2004 19:38:22 +0000
Date: Tue, 7 Dec 2004 19:38:22 +0000
From: Jim Farrand <jim@farrand.net>
To: Alain Frisch <Alain.Frisch@inria.fr>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Type constraints
Message-ID: <20041207193822.GB32094@draco.skynet>
References: <20041206195527.GA32094@draco.skynet> <41B557D4.2000306@inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
In-Reply-To: <41B557D4.2000306@inria.fr>
X-Mail-Key: JimbosMagicMailKey
X-Miltered: at concorde with ID 41B606B0.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 41B606AF.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 frisch:01 wrote:01 sig:01 val:01 struct:01 structures:01 signatures:01 constraints:01 alain:02 hints:03 module:03 let:03 let:03 dec:03 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.0
X-Spam-Level: 

On Tue, Dec 07, 2004 at 08:12:20AM +0100, Alain Frisch wrote:

> Maybe you can use local structures and signatures:
> (e :: s)  ==>
> let module M : sig val v : s end = struct let v = e end in M.v;;

Thanks for this, I haven't had chance to code it up yet but suspect it
is exactly the solution I was looking for.

Thanks also to those who replied off list with similar hints.

REgards,
Jim

-- 
Jim Farrand

