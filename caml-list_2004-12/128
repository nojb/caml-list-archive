Return-Path: <bhurt@spnz.org>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 2947EBB81
	for <caml-list@yquem.inria.fr>; Sun, 12 Dec 2004 04:07:40 +0100 (CET)
Received: from herd.plethora.net (herd.plethora.net [205.166.146.1])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id iBC37cLB025375
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@yquem.inria.fr>; Sun, 12 Dec 2004 04:07:39 +0100
Received: from bhurt.plethora.net (bhurt.plethora.net [205.166.146.49])
	by herd.plethora.net (8.13.1/8.12.11) with ESMTP id iBC37Gps012363
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Sat, 11 Dec 2004 21:07:19 -0600 (CST)
Date: Sat, 11 Dec 2004 21:09:53 -0600 (CST)
From: Brian Hurt <bhurt@spnz.org>
X-X-Sender: bhurt@localhost.localdomain
To: skaller <skaller@users.sourceforge.net>
Cc: Micha <micha-1@fantasymail.de>, <caml-list@yquem.inria.fr>
Subject: Re: [Caml-list] How to use Set Datatype
In-Reply-To: <1102809942.2611.647.camel@pelican.wigram>
Message-ID: <Pine.LNX.4.44.0412112106090.28854-100000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Miltered: at nez-perce with ID 41BBB5FA.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 datatype:01 wrote:01 wrote:01 ocaml:01 implicitly:01 functor:01 syntax:01 inlining:01 inline:01 tend:02 newbie:02 binding:02 brian:03 brian:03 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.0
X-Spam-Level: 

On 12 Dec 2004, skaller wrote:

> On Sun, 2004-12-12 at 08:12, Brian Hurt wrote:
> > On Fri, 10 Dec 2004, Micha wrote:
> 
> > Another thing- longtime Ocaml programmers tend to inline their structure 
> > definitions.  
> 
> Why? Because binding implicitly by name is basically bogus?

Yes.  But it makes the functor application look complicated and clunky to 
a newbie, when it really isn't.  Once you're familiar with the syntax, 
inlining becomes a better option.

Brian


