Return-Path: <rich@furbychan.annexia.org>
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 921B5BB81
	for <caml-list@yquem.inria.fr>; Thu, 30 Dec 2004 23:41:27 +0100 (CET)
Received: from furbychan.cocan.org (use.the.admin.shell.to.set.your.reverse.dns.for.this.ip [80.68.91.176] (may be forged))
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id iBUMfRpI031355
	for <caml-list@yquem.inria.fr>; Thu, 30 Dec 2004 23:41:27 +0100
Received: from rich by furbychan.cocan.org with local (Exim 3.35 #1 (Debian))
	id 1Ck8yl-0002bM-00; Thu, 30 Dec 2004 22:41:11 +0000
Date: Thu, 30 Dec 2004 22:41:11 +0000
To: Jon Harrop <jdh30@hermes.cam.ac.uk>
Cc: caml-list <caml-list@yquem.inria.fr>
Subject: Re: [Caml-list] caml_oldify_local_roots crashes
Message-ID: <20041230224111.GA9369@furbychan.cocan.org>
References: <I9A4MV$2E43D0D72D79CE0EEAF42771D086A320@laposte.net> <Pine.LNX.4.60.0412260428100.23835@hermes-1.csi.cam.ac.uk>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.60.0412260428100.23835@hermes-1.csi.cam.ac.uk>
User-Agent: Mutt/1.3.28i
From: Richard Jones <rich@furbychan.annexia.org>
X-Miltered: at concorde with ID 41D48417.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 oldify:01 wrote:01 wrote:01 interfacing:01 ocaml:01 heap:01 26,:98 int:01 caml:02 roots:02 dec:03 dec:03 crashes:04 implies:04 
X-Spam-Checker-Version: SpamAssassin 3.0.0 (2004-09-13) on yquem.inria.fr
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.0
X-Spam-Level: 

On Sun, Dec 26, 2004 at 04:35:53AM +0000, Jon Harrop wrote:
> On Sat, 25 Dec 2004, haiku.issa wrote:
> >Everything worked fine until I added a subfunction that simply
> >merges two int lists.
> I am no expert on this but I believe this implies that your interfacing 
> between C and OCaml was already broken. Almost certainly something to do 
> with the GC.

It often helps to add lots of calls to Gc.full_major () to your code.
One of these will crash, telling you that between that call and the
previous one, you did something bad to the heap.

Rich.

