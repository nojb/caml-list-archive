Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA15675 for caml-red; Sat, 1 Jul 2000 10:40:23 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA19354 for <caml-list@pauillac.inria.fr>; Fri, 30 Jun 2000 19:51:09 +0200 (MET DST)
Received: from dynabook.is.s.u-tokyo.ac.jp (DHCP12-11.CIS.UPENN.EDU [158.130.13.41])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e5UHp8508976
	for <caml-list@inria.fr>; Fri, 30 Jun 2000 19:51:08 +0200 (MET DST)
Received: from localhost ([127.0.0.1])
	by dynabook.is.s.u-tokyo.ac.jp with esmtp (Exim 3.12 #1 (Debian))
	id 1384wT-0004iC-00; Fri, 30 Jun 2000 13:51:05 -0400
To: bpr@best.com
Cc: caml-list@inria.fr, sumii@saul.cis.upenn.edu
Subject: Re: polymorphic equality and overloading
In-Reply-To: <Pine.BSF.4.21.0006300933350.7049-100000@shell5.ba.best.com>
References: <20000629171001Q.sumii@saul.cis.upenn.edu>
	<Pine.BSF.4.21.0006300933350.7049-100000@shell5.ba.best.com>
X-Mailer: Mew version 1.94.1 on Emacs 19.34 / Mule 2.3 (SUETSUMUHANA)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20000630135105Q.sumii@saul.cis.upenn.edu>
Date: Fri, 30 Jun 2000 13:51:05 -0400
From: Eijiro Sumii <sumii@saul.cis.upenn.edu>
X-Dispatcher: imput version 991025(IM133)
Lines: 9
Sender: weis@pauillac.inria.fr

> Equality really is overloaded, but since overloading isn't easily
> integrated into ML style type systems, some other solution is chosen. 

So, I'm wondering why equality is overloaded in Caml, unlike addition
(+ for integers, +. for floats, ^ for strings, etc.) for example.  Or,
why is equality automatically defined for tuples and datatypes, while
addition isn't?  Is that just because it is often useful?

Eijiro


