Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA18611 for caml-red; Fri, 21 Jul 2000 09:58:34 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA06612 for <caml-list@pauillac.inria.fr>; Fri, 21 Jul 2000 09:40:54 +0200 (MET DST)
Received: from faure.inria.fr (faure.inria.fr [128.93.12.23])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e6L7eob10354;
	Fri, 21 Jul 2000 09:40:50 +0200 (MET DST)
Received: (from fleutot@localhost)
	by faure.inria.fr (8.10.0/8.10.0) id e6L7enk29607;
	Fri, 21 Jul 2000 09:40:49 +0200
Date: Fri, 21 Jul 2000 09:40:49 +0200
Message-Id: <200007210740.e6L7enk29607@faure.inria.fr>
X-Authentication-Warning: faure.inria.fr: fleutot set sender to fabien.fleutot@inria.fr using -f
From: Fabien Fleutot <fabien.fleutot@inria.fr>
To: garrigue@kurims.kyoto-u.ac.jp
CC: caml-list@inria.fr
In-reply-to: <20000721094253L.garrigue@kurims.kyoto-u.ac.jp> (message from
	Jacques Garrigue on Fri, 21 Jul 2000 09:42:53 +0900)
Subject: Re: LablTk
References: <3969D4D7.8001219E@inria.fr> <20000721094253L.garrigue@kurims.kyoto-u.ac.jp>
Mime-Version: 1.0 (generated by tm-edit 7.106)
Content-Type: text/plain; charset=US-ASCII
Sender: weis@pauillac.inria.fr

   > - I want to prevent a window from being destroyed by the WM : it's a
   > pretty long to build window, and I'd like to hide it instead of actually
   > destroy it when the user clicks on the delete button of the window
   > manager. It's easy to do in some langages such as Java, but I can't find
   > the way to do it with Labltk.

   I do not see anything to do that in Tcl/Tk. You can iconify a window,
   using Wm.iconify, but not hide it.

One can do it with ``Wm.withdraw''. This function exists in Labltk; the problem
is to say it to use my own function rather than the standard delete function
when the window destruction is requested by the Wm.

   If you really need this kind of power, you may consider switching to
   GTK.

...as soon as it will be included in the standard OCaml distribution: I don't
want people to have to download and install dozens of libs before being able to
compile my soft, esp. on platforms other than linux.


