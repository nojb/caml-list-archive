Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA12387 for caml-red; Mon, 24 Jul 2000 00:24:03 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA21911 for <caml-list@pauillac.inria.fr>; Sun, 23 Jul 2000 23:29:13 +0200 (MET DST)
Received: from suburbia.net (suburbia.net [203.4.184.1])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e6NLTA913078
	for <caml-list@inria.fr>; Sun, 23 Jul 2000 23:29:11 +0200 (MET DST)
Received: by suburbia.net (Postfix, from userid 110)
	id 402D36C4C1; Mon, 24 Jul 2000 07:29:06 +1000 (EST)
To: caml-list@inria.fr
Subject: Big_int a^x mod m
Cc: proff@iq.org
From: Julian Assange <proff@iq.org>
Date: 24 Jul 2000 07:29:06 +1000
Message-ID: <wx66pwh6xp.fsf@suburbia.net>
Lines: 14
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: weis@pauillac.inria.fr


 val (**/) : num -> num -> num 
 val power_num : num -> num -> num
   Exponentiation

The num library documentation doesn't seem to support modular
exponentiation. This is seems to be an unusual oversight, and means
the library isn't useful for real-world cryptographic applications.

Is anyone working on adding mod exp's? Or are there other bigint
ocaml libraries?

Cheers,
Julian.


