Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA24232 for caml-red; Mon, 3 Jul 2000 22:44:09 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA06237 for <caml-list@pauillac.inria.fr>; Mon, 3 Jul 2000 17:06:21 +0200 (MET DST)
Received: from fledge.watson.org (fledge.watson.org [204.156.12.50])
	by nez-perce.inria.fr (8.10.0/8.10.0) with ESMTP id e63F6D510718;
	Mon, 3 Jul 2000 17:06:19 +0200 (MET DST)
Received: from localhost (patrick@localhost)
	by fledge.watson.org (8.9.3/8.9.3) with SMTP id LAA69872;
	Mon, 3 Jul 2000 11:05:55 -0400 (EDT)
	(envelope-from patrick@watson.org)
Date: Mon, 3 Jul 2000 11:05:55 -0400 (EDT)
From: Patrick M Doane <patrick@watson.org>
To: Gerd Stolpmann <gerd@gerd-stolpmann.de>
cc: Xavier Leroy <Xavier.Leroy@inria.fr>,
        Scott McPeak <smcpeak@cs.berkeley.edu>, caml-list@inria.fr
Subject: Re: how to set breakpoint at exception throw?
In-Reply-To: <00070115165309.14914@ice>
Message-ID: <Pine.BSF.3.96.1000703110307.69771A-100000@fledge.watson.org>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: weis@pauillac.inria.fr

On Sat, 1 Jul 2000, Gerd Stolpmann wrote:

> Nevertheless, I have a wish: At least for programs compiled with the bytecode
> compiler, an automatic backtrace of uncaught exceptions would be often helpful
> (i.e I get a list where the last uncaught exception was raised, and all
> locations where it is re-raised in the "with" clause of the "try" statement).
> First, this type of error is very frequent, and it would save much time if the
> location where the problem occurs were output from the failing program itself.
> Second, under some environments it is difficult to run the debugger; not every
> program is run from the command-line (CGI programs, for example). Furthermore,
> such a feature would help bug searching in production environments: on such
> machines, there is usually no debugger installed, and it is sometimes difficult
> to reconstruct the failing data case.

I agree strongly that such a feature is needed for Ocaml development. I
have lost a lot of time to tracking down these problems in the past and
this is one of the few weak points in using the language right now.

Patrick


