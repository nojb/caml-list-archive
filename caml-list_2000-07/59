Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA16564 for caml-red; Wed, 19 Jul 2000 17:48:44 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA11957 for <caml-list@pauillac.inria.fr>; Tue, 18 Jul 2000 22:33:23 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e6IKX3905559;
	Tue, 18 Jul 2000 22:33:03 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA04895; Tue, 18 Jul 2000 22:32:59 +0200 (MET DST)
Message-ID: <20000718223259.01177@pauillac.inria.fr>
Date: Tue, 18 Jul 2000 22:32:59 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Vitaly Lugovsky <vsl@ontil.ihep.su>, caml-list@inria.fr
Subject: Re: Performance
References: <Pine.LNX.4.10.10007091656230.22814-100000@ontil.ihep.su>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.89.1
In-Reply-To: <Pine.LNX.4.10.10007091656230.22814-100000@ontil.ihep.su>; from Vitaly Lugovsky on Sun, Jul 09, 2000 at 05:00:40PM +0400
Sender: weis@pauillac.inria.fr

>  What about some special platform-dependent tuning in native compilers?
> There is a great difference for 386/586/686/686MMX, and the same for
> sparc/ssparc/usparc...

The ocaml native compiler is a bit too simple-minded to schedule
optimally for e.g. the 586 or the latest Sparcs, which requires quite
a lot of processor-specific knowledge indeed.

Concerning the x86 family, I modified some of the compiler idioms over
time to adapt to the "dominant" processor of the time.  (E.g. avoid
AGI stalls for the 486; avoid movzbl for the Pentium; etc.)  The 686
family (Pentium Pro/II/III), which is dominant nowadays, does so much
work "behind the scene" that those tweaks are no longer needed and
ocamlopt generates pretty much the most straightforward instruction
sequences.

As for the Sparc code generator, it is maintained but not actively
developed.  The Sparc is a dying platform, at least here at INRIA
(the last we bought in our group was in 1993...), so we're not
investing big efforts in it.

>  And, can anybody do a benchmark for bytecode performance on Itanium
> and Alpha? I think, it'll be a good test for a new architecture...

I could do it, but then Intel would have to kill me :-)  Like all
happy fews that have access to a prototype Itanium machine, I had to
agree not to do any benchmarking on this machine.  Apparently, the
prototype Itaniums don't implement all the performance tricks of the final
Itanium processor, and Intel doesn't want to get bad press because of
this.

- Xavier Leroy


