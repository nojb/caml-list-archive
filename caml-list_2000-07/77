Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA21146 for caml-red; Fri, 21 Jul 2000 23:19:29 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA08859 for <caml-list@pauillac.inria.fr>; Fri, 21 Jul 2000 14:15:37 +0200 (MET DST)
Received: from nenuphar.saclay.cea.fr (nenuphar.saclay.cea.fr [132.166.192.7])
	by nez-perce.inria.fr (8.10.0/8.10.0) with ESMTP id e6LCFaf20263;
	Fri, 21 Jul 2000 14:15:36 +0200 (MET DST)
Received: from harpie.saclay.cea.fr (harpie.saclay.cea.fr [132.166.133.152])
	by nenuphar.saclay.cea.fr (8.9.1a/8.9.1/CEAnet-relay-5.0.D20+Y2K) with ESMTP id OAA23999;
	Fri, 21 Jul 2000 14:15:35 +0200 (MET DST)
Received: by harpie.saclay.cea.fr (8.8.8+Sun/CEANET.2.0.1)
	id OAA27739; Fri, 21 Jul 2000 14:15:53 +0200 (MET DST)
From: STARYNKEVITCH Basile <Basile.Starynkevitch@cea.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Message-ID: <14712.16121.609048.226316@gargle.gargle.HOWL>
Date: Fri, 21 Jul 2000 14:15:53 +0200 (MET DST)
To: Caml Mailing List <caml-list@inria.fr>
CC: xavier.leroy@inria.fr
Subject: C macro name clash in Ocaml 3.00 source
X-Mailer: VM 6.72 under 21.1 (patch 10) "Capitol Reef" XEmacs Lucid
Content-Transfer-Encoding: 8bit
Sender: weis@pauillac.inria.fr

Hello All (and particularily Ocaml developpers),

There are some annoying name clashes in Ocaml public includes
<caml/mlvalues.h> and <caml/misc.h> 

As an example, Atom is a a unary macro in <caml/mlvalues.h> and is
also a type in <X11/X.h>. Also Assert is quite easily used by (other)
applications. etc...

I suggest that all publicly visible macros (i.e. those defined by
<caml/*.h> file included by an application C wrapping code) would have
a common prefix. Therefore Atom in <caml/mlvalues.h> would become
OCAML_Atom, Assert would become OCAML_Assert, etc... and so forth.

I may even volonteer for this boring job (it wont take too much of my
time since I do know quite well the Ocaml implementation) if I am sure
that my patches would be included in the next Ocaml release.

(Compatibility with old C source could be kept with optionaly #define-ing
Atom as OCAML_Atom etc....)

Regards.

N.B. Any opinions expressed here are only mine, and not of my organization.
N.B. Les opinions exprimees ici me sont personnelles et n engagent pas le CEA.

---------------------------------------------------------------------
Basile STARYNKEVITCH   ----  Commissariat à l Energie Atomique 
DTA/LETI/DEIN/SLA * CEA/Saclay b.528 (p111f) * 91191 GIF/YVETTE CEDEX * France
phone: 1,69.08.60.55; fax: 1.69.08.83.95 home: 1,46.65.45.53
email: Basile point Starynkevitch at cea point fr 


