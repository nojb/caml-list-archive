Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA03516 for caml-red; Thu, 27 Jul 2000 19:33:47 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA00658 for <caml-list@pauillac.inria.fr>; Wed, 26 Jul 2000 11:06:54 +0200 (MET DST)
Received: from tobago.inria.fr (tobago.inria.fr [128.93.8.21])
	by concorde.inria.fr (8.10.0/8.10.0) with ESMTP id e6Q96sD07284
	for <caml-list@inria.fr>; Wed, 26 Jul 2000 11:06:54 +0200 (MET DST)
Received: (from doligez@localhost) by tobago.inria.fr (8.6.10/8.6.6) id LAA09879 for caml-list@inria.fr; Wed, 26 Jul 2000 11:06:53 +0200
Date: Wed, 26 Jul 2000 11:06:53 +0200
From: Damien Doligez <Damien.Doligez@inria.fr>
Message-Id: <200007260906.LAA09879@tobago.inria.fr>
To: caml-list@inria.fr
Subject: Re:  overhead of GC in caml runtime?
Sender: weis@pauillac.inria.fr

>From: Norman Ramsey <nr@eecs.harvard.edu>

>Can anyone tell me approximately what fraction of time is
>spent in garbage collection, or even better, combined allocation and
>collection, in typical caml programs?  Or how to get caml to report
>this information for a particular program of mine?

As far as memory management is concerned, there is no typical caml
program, so you really need to get the information for your program.

GC timers have been on my to-do list for some time now but they are
going to involve non-negligible overhead, and I expect they'll have
rather poor accuracy.

In the meantime, you could compile your program with "ocamlopt -p",
guess from the names of the functions which ones belong to memory
management, and add the percentages by hand...

-- Damien


