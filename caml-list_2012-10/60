Return-Path: <5764c029b688c1c0d24a2e97cd764f@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id 5CD257EDE3
	for <caml-list@sympa.inria.fr>; Sun, 14 Oct 2012 15:19:06 +0200 (CEST)
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  5764c029b688c1c0d24a2e97cd764f@gmail.com) identity=pra;
  client-ip=74.125.83.54;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="5764c029b688c1c0d24a2e97cd764f@gmail.com";
  x-sender="5764c029b688c1c0d24a2e97cd764f@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail1-smtp-roc.national.inria.fr: domain of
  5764c029b688c1c0d24a2e97cd764f@gmail.com designates
  74.125.83.54 as permitted sender) identity=mailfrom;
  client-ip=74.125.83.54;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="5764c029b688c1c0d24a2e97cd764f@gmail.com";
  x-sender="5764c029b688c1c0d24a2e97cd764f@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ee0-f54.google.com) identity=helo;
  client-ip=74.125.83.54;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="5764c029b688c1c0d24a2e97cd764f@gmail.com";
  x-sender="postmaster@mail-ee0-f54.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqoFANK6elBKfVM2jWdsb2JhbABEgiUEg2mFX7N4CCMBAQEBCQkLCRIGI4I5Ag8dARscAgMSEBYWCwIEBwMCAQIBEREBBQEWGQgCHodPAQMPBJtpgmQJA4tXT4J2g2YKGScNWYh1AQUMi1KDF4IPgRIDjm6BIIVehWKIbT+EEA
X-IronPort-AV: E=Sophos;i="4.80,583,1344204000"; 
   d="txt'?gz'50?scan'50,208,50";a="177152542"
Received: from mail-ee0-f54.google.com ([74.125.83.54])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 14 Oct 2012 15:19:05 +0200
Received: by mail-ee0-f54.google.com with SMTP id c50so3221366eek.27
        for <caml-list@inria.fr>; Sun, 14 Oct 2012 06:19:05 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=message-id:date:from:user-agent:mime-version:to:subject
         :x-enigmail-version:content-type;
        bh=4UeCk5kkw8jvvwCj/wm+o9J9NJnXEZA/K+g7FU9+szY=;
        b=ifqWa/z9boYFvrYOEJt4gxekQeygU2vnJmjwtKD1kekIEJRnCD+b7m9XE0Y5rYcsNq
         SvUQPznJsbmzbiFnG7sGknKPi469mVis+1AunKTlFEHeiEcqrEHpK2r+SYjEsLFkbVO6
         GS+wRkSwtUKimMVYdv9UoLKr0qa3KmkEPXhN/HyhzfSh8NLseVoF4CYjrhuc915CIXjG
         RAsMG6NOia6M8j4NqblcZLlWX8FB9d4Nt2SEX5W/FlvRLWufIGoRXxRwXVY6cURYKsff
         21MA0EapiapLUuS/6cBxWaChlq5Sj4fPpVsOGI+7GRwRWKXpF32/kndmV930YIhokpU5
         Gp2Q==
Received: by 10.14.194.136 with SMTP id m8mr12344683een.10.1350220745753;
        Sun, 14 Oct 2012 06:19:05 -0700 (PDT)
Received: from [172.27.6.213] ([213.106.240.92])
        by mx.google.com with ESMTPS id d44sm20124326eeo.10.2012.10.14.06.19.04
        (version=SSLv3 cipher=OTHER);
        Sun, 14 Oct 2012 06:19:04 -0700 (PDT)
Message-ID: <507ABBD6.9040405@gmail.com>
Date: Sun, 14 Oct 2012 14:19:18 +0100
From: Matej Kosik <5764c029b688c1c0d24a2e97cd764f@gmail.com>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:10.0.7) Gecko/20120922 Icedove/10.0.7
MIME-Version: 1.0
To: caml-list@inria.fr
X-Enigmail-Version: 1.4.1
Content-Type: multipart/mixed;
 boundary="------------080809090009020005000109"
Subject: [Caml-list] ocamldebug question

This is a multi-part message in MIME format.
--------------080809090009020005000109
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit

Hello,

I have decided to play a little with ocamldebug.
Stepping through programs that rely on the standard library works fine.
I can step into functions defined in stdlib and see the relevant source
code.

I am trying to figure out how to do similar thing with batteries.

This directory:

	/home/me/godi/lib/ocaml/pkg-lib/batteries

contains installed "batteries included" library.

This directory:

	/home/me/godi/build/distfiles/batteries-1.4.1/src

contains its source code.
(Where library was in

I have a small testing program like this:

  open Batteries_uni

  let v = Vect.of_list ["foo"; "bar"; "baz"]

  ;;

  Vect.iter print_string v;
  print_newline ();

I start the debugger:

  $ ocamldebug -I /home/me/godi/build/distfiles/batteries-1.4.1/src \
               -I /home/me/godi/lib/ocaml/pkg-lib/batteries \
               main

I set up a breakpoint at some convenient place:

  (ocd) break @ Main 1
  Loading program... done.
  Breakpoint 1 at 1129200 : file main.ml, line 3, characters 9-43

and try to go on:

  (ocd) run
  Time : 47989 - pc : 1129200 - module Main
  Breakpoint : 1
  3 let v = Vect.of_list ["foo"; "bar"; "baz"]<|a|>

Now, when I try to step into the Vect.of_list function:

  (ocd) step

I get a complaint:

  Time : 47990 - pc : 808516 - module BatVect
  No source file for BatVect.

I can continue with debugging, but I cannot display the corresponding
source-code.

Now, I am not sure what to do. Is there any way how can I use ocamldebug
and, when necessary, step also into modules bundled by batteries.cma?

I have attached listing of the contents of the two corresponding
directories.

Thanks in advance, for any [clues; hints; help].

--------------080809090009020005000109
Content-Type: application/gzip;
 name="listing.txt.gz"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
 filename="listing.txt.gz"

H4sICL66elAAA2xpc3RpbmcudHh0AK1c2XLbRhB8z79YjI9K/CrbkqMq64gk
J48qiFqSKIMADYIuKV8fkDgISbuY7W5W+UFWabD3TE/PMVkUSzep/82Lh3Ry
v0mzh8lDuq5maebWk/ukqlyZuvWbt0cfjt5O1uX0twkqsf3d52RZLOs/ePP7
0cejt0fLjPvMzTTJZ7z0KkueaOnvefpIC1+dJ6taOCWHLh2/6qsyzSv3OOWH
/3vjNo4XPy7L3baT4jfVgyDsKn7jGmFy5M/FcpW5R/4D/7ipMPf9oXMf+Fb/
AT/3k3yzpIc+y6s/PtDS167alLnw1m5PP/LSZ9I7v3azdt81BUc/1Lmw8jx3
5dklPfdPm9nMldLeCYf+eZGU9NS3wldJuVam31oXWs395IUvNst7x6/+U1Fk
/ODfkv+epDt/u6nVrKrjOeEv6dwJM/+SZZKSvVZBgfBgbir+wlzsbIP4Uul5
J9MfglFPpgv+srUvRbRrtFF9/45fePO7u2mRz1LJSNS/nSVTt+a/0WjazwX/
hfNNVqUaIj+vJ7FIhNM831QKOKw3kkcJVf34hUM8/pXdlk5wCK6T/KEQdEB7
GRcuW/HK1/1UfJpPqeRa3DwJD+AiqdJfLhVuQIewWSW6uV93d4jc/ae88wpZ
7yqfbsrS5YL97O2vdAs3eVp/IkvvadwnLKF+yi4RXtKZ5OJ2vAAn/VeyXlT3
vAq9XDWmgDfHydoJjuZ+/uT2bT9QG9Q1PYOvWXGfCBM4U15P769ppBCLAarF
Vyd4+Tv8q1tQ+uamBQ/lTrMiEQ6uExc1jugysQqvJYAPBGNX5MMTyNTzIk8e
BC9gpjFzp2kmwJ7Tolwqd697dhqtSDtvfQziTwE6dTSX7DnwdA1v8tL5nXQC
HWwm343LJUp8iHy1+8+anZS3eN+K+VxhCCWKUiBmn/nsorcr+ouK0ldA+gBq
slBL0Bg7lfOvS34oaLm1fCsJ9+xhl2g+RMDOcs3u8UBOK01dpYIC6O8x+YqK
lXCBB6ybwhgrrG8fYhEpG5rymSeS0/L9EHGiNioshcP5EJXgNww4I3L8S4Hy
lUJM+1C+6KdLMWVR54kRDy1zRX9yrNpS9q4LFqlYW3ZXPh69EzzG9SYTXn2T
FECefpNLoTnK7Mm78leyrt0F3mL2QVIlKE/Irp/yKnmkBSer5G5aq6zSLVy+
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

--------------080809090009020005000109--
