Return-Path: <oliver@first.in-berlin.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id 43AE17F249
	for <caml-list@sympa.inria.fr>; Wed, 31 Oct 2012 22:40:31 +0100 (CET)
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=pra;
  client-ip=192.109.42.8;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=mailfrom;
  client-ip=192.109.42.8;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@einhorn.in-berlin.de) identity=helo;
  client-ip=192.109.42.8;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="postmaster@einhorn.in-berlin.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AsoBAEuakVDAbSoIe2dsb2JhbABEv3uDZCMBARYmBCOCHgEBBAE6PwULC0ZXBhOHdAMGAwYEsV8MiVWLeIVaYQOVdoVpjUk
X-IronPort-AV: E=Sophos;i="4.80,688,1344204000"; 
   d="scan'208";a="179751798"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 31 Oct 2012 22:40:30 +0100
X-Envelope-From: oliver@first.in-berlin.de
Received: from [192.168.1.9] (178-26-88-14-dynip.superkabel.de [178.26.88.14])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id q9VLeSaf009573
	(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=NOT);
	Wed, 31 Oct 2012 22:40:29 +0100
References: <508F22BD.7010103@riken.jp> <50914480.1050408@frisch.fr> <509160B1.90801@free.fr>
In-Reply-To: <509160B1.90801@free.fr>
Mime-Version: 1.0 (1.0)
Content-Transfer-Encoding: 7bit
Content-Type: text/plain;
	charset=us-ascii
Message-Id: <9901374A-C2C6-4939-8E78-65D32C06002F@first.in-berlin.de>
Cc: "caml-list@inria.fr" <caml-list@inria.fr>
X-Mailer: iPad Mail (10A403)
From: Oliver Bandel <oliver@first.in-berlin.de>
Date: Wed, 31 Oct 2012 22:40:46 +0100
To: Tiphaine Turpin <Tiphaine.Turpin@free.fr>
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
Subject: Re: [Caml-list] Why should I use .mli files?



Am 31.10.2012 um 18:32 schrieb Tiphaine Turpin <Tiphaine.Turpin@free.fr>:

> I personally find that the most useful of the missing features that have
> been addressed here is the ability to write type definitions only once,
> when using interfaces (in particular mi files). Type annotations
> (especially with explicit polymorphism) are sufficient for the "value
> declaration" concern, in my opinion.

Not sure if I see the argument.
When should type declarations be written more than once?

I mean.. inside the ml file, there is the detail,
and itncannbe repeated, but that also can be done with 
ocamlc -i
But when an abstractbtype is used, it needs the concrete implementation
( is t an int or string or what else? ) and the abstract declaration.
So they differ.
If they do not differ, ocamlc -i can be used, going from ml to mli.


Ciao,
 Oliver
