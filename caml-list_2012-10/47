Return-Path: <markus.weissmann@in.tum.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by sympa.inria.fr (Postfix) with ESMTPS id 5A5E67EDE7
	for <caml-list@sympa.inria.fr>; Thu, 11 Oct 2012 19:30:40 +0200 (CEST)
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  markus.weissmann@in.tum.de) identity=pra;
  client-ip=131.159.0.8;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="markus.weissmann@in.tum.de";
  x-sender="markus.weissmann@in.tum.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  markus.weissmann@in.tum.de) identity=mailfrom;
  client-ip=131.159.0.8;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="markus.weissmann@in.tum.de";
  x-sender="markus.weissmann@in.tum.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-out1.informatik.tu-muenchen.de)
  identity=helo; client-ip=131.159.0.8;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="markus.weissmann@in.tum.de";
  x-sender="postmaster@mail-out1.informatik.tu-muenchen.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlICANEBd1CDnwAIkWdsb2JhbABEv1cjAQEBARQSFCeCToIQiBeYNKFPkQdgA5cCkgo
X-IronPort-AV: E=Sophos;i="4.80,573,1344204000"; 
   d="scan'208";a="158743052"
Received: from mail-out1.informatik.tu-muenchen.de ([131.159.0.8])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/ADH-AES256-SHA; 11 Oct 2012 19:30:39 +0200
Received: from lapknoll93.informatik.tu-muenchen.de (lapknoll93.informatik.tu-muenchen.de [131.159.61.48])
	(using TLSv1 with cipher AES128-SHA (128/128 bits))
	(No client certificate requested)
	by mail.in.tum.de (Postfix) with ESMTPSA id EED11240906
	for <caml-list@inria.fr>; Thu, 11 Oct 2012 19:30:38 +0200 (CEST)
From: Markus Weissmann <markus.weissmann@in.tum.de>
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable
Date: Thu, 11 Oct 2012 19:30:36 +0200
Message-Id: <800E1F0B-8658-49A2-BA12-88F760F5E083@in.tum.de>
To: OCaml mailing list <caml-list@inria.fr>
Mime-Version: 1.0 (Apple Message framework v1278)
X-Mailer: Apple Mail (2.1278)
Subject: [Caml-list] Exhaustiveness, currying with GADTs

Hello,

while playing around with GADTs, I came across two issues I don't understan=
d: The exhaustiveness check and currying functions.
1.) I get a warning about my match (in function "componentwise") not being =
exhaustive, while imho it obviously is:

--------8<----------
  type d2
  type d3

  type _ t =3D
    | Vector2 : (float * float) -> d2 t
    | Vector3 : (float * float * float) -> d3 t

  let componentwise : type d . (float -> float -> float) -> d t -> d t -> d=
 t =3D fun f v1 v2 ->
    match (v1, v2) with
    | (Vector2 (x1, y1), Vector2 (x2, y2)) -> Vector2 (f x1 x2, f y1  y1)
    | (Vector3 (x1, y1, z1), Vector3 (x2, y2, z2)) -> Vector3 (f x1 x2, f y=
1 y1, f z1 z2)
-------->8----------

2.) When I use "componentwise" for other functions, I cannot do this:

  let add =3D componentwise (+.)

("contains type variables that cannot be generalized")
Fair enough. But I also cannot do this:

  let add : type d . d t -> d t -> d t =3D componentwise (+.)=20

("This definition has type 'd t -> 'd t -> 'd t which is less general than =
'd0. 'd0 t -> 'd0 t -> 'd0 t")
Only the "full" version works:

  let add : type d . d t -> d t -> d t =3D fun v1 v2 -> componentwise (+.) =
v1 v2


I would be very happy if someone could shed some light especially on 1.).


Thanks & regards
-Markus

--=20
Markus Wei=DFmann, M.Sc.
Technische Universit=E4t M=FCnchen
Institut f=FCr Informatik
Boltzmannstr. 3
D-85748 Garching
Germany
http://wwwknoll.in.tum.de/

