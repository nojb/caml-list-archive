Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA22765 for caml-redistribution@pauillac.inria.fr; Thu, 23 Mar 2000 13:56:30 +0100 (MET)
Resent-Message-Id: <200003231256.NAA22765@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA11962 for <caml-list@pauillac.inria.fr>; Thu, 23 Mar 2000 12:14:06 +0100 (MET)
Received: from indigo.recherche.enac.fr (indigo.recherche.enac.fr [195.220.158.66])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id MAA26738
	for <caml-list@inria.fr>; Thu, 23 Mar 2000 12:14:05 +0100 (MET)
Received: from beige.recherche.enac.fr (root@beige.recherche.enac.fr [195.220.158.89]) by indigo.recherche.enac.fr (8.8.6 (PHNE_14041)/8.6.11) with ESMTP id MAA06544 for <caml-list@inria.fr>; Thu, 23 Mar 2000 12:14:05 +0100 (MET)
Received: from recherche.enac.fr (barnier@localhost [127.0.0.1]) by beige.recherche.enac.fr (8.9.3/8.6.11) with ESMTP id MAA09102 for <caml-list@inria.fr>; Thu, 23 Mar 2000 12:14:05 +0100
X-Authentication-Warning: beige.recherche.enac.fr: Host barnier@localhost [127.0.0.1] claimed to be recherche.enac.fr
Sender: barnier@recherche.enac.fr
Message-ID: <38D9FC7C.765BD264@recherche.enac.fr>
Date: Thu, 23 Mar 2000 12:14:04 +0100
From: Nicolas barnier <barnier@recherche.enac.fr>
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.5 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: Re: Syntax for label, NEW PROPOSAL
References: <20000315145830.22463@pauillac.inria.fr>
		<20000316115540L.garrigue@kurims.kyoto-u.ac.jp> <200003211651.RAA05461@sepia.recherche.enac.fr>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Resent-From: weis@pauillac.inria.fr
Resent-Date: Thu, 23 Mar 2000 13:56:30 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

I'm quite tired with all this polemic. I agree
with Pierre Weis: labels are a pain within HO
args (acc:, i:) and fun:(fun ...) is ugly and
verbose (and it contains its own sad smiley :).
So I do not want (arbitrary) labels in my good
old standard library, but I find them very useful
in Labltk. Moreover, two compile modes are not
a very good idea for obvious portability reasons.
So I think we should switch to a single modern
mode because labels in modern mode are useful
and simple (at least in Labltk), and withdraw
labels in the standard library because they're
often a pain (and the lib is small enough to
learn without the need for labels). We would
then keep labels an orthogonal improvment.

Cheers

-- Nicolas

P.S.: I saw in the lib that the *.mli are
written with labels whereas the *.ml do not
contain a single one. Can we conclude on which
side stands Xavier ?


