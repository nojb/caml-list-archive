Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA02350 for caml-redistribution@pauillac.inria.fr; Mon, 6 Mar 2000 15:42:32 +0100 (MET)
Resent-Message-Id: <200003061442.PAA02350@pauillac.inria.fr>
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA16097 for <caml-list@pauillac.inria.fr>; Mon, 6 Mar 2000 14:47:39 +0100 (MET)
Received: from mail5.svr.pol.co.uk (mail5.svr.pol.co.uk [195.92.193.20])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id OAA07225
	for <caml-list@pauillac.inria.fr>; Mon, 6 Mar 2000 14:47:39 +0100 (MET)
Received: from modem-49.claritin.dialup.pol.co.uk ([62.136.85.49] helo=toy.william.bogus)
	by mail5.svr.pol.co.uk with esmtp (Exim 3.13 #0)
	id 12Rxr4-0005PT-00
	for caml-list@pauillac.inria.fr; Mon, 06 Mar 2000 13:47:27 +0000
Received: (from williamc@localhost)
	by toy.william.bogus (8.8.7/8.8.7) id NAA26918;
	Mon, 6 Mar 2000 13:42:34 GMT
Date: Mon, 6 Mar 2000 13:42:34 GMT
Message-Id: <200003061342.NAA26918@toy.william.bogus>
From: William Chesters <williamc@paneris.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
To: "'caml-list@pauillac.inria.fr'" <caml-list@pauillac.inria.fr>
Subject: RE: Interpreter vs hardware threads
In-Reply-To: <81C332E378E8D011BFC900805F19E05A145318DA@WSH-02-MSG>
References: <81C332E378E8D011BFC900805F19E05A145318DA@WSH-02-MSG>
X-Mailer: VM 6.34 under Emacs 20.2.1
Resent-From: weis@pauillac.inria.fr
Resent-Date: Mon, 6 Mar 2000 15:42:32 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

Edwin Young writes:
 > From: William Chesters [mailto:williamc@paneris.org]
 > > Judging by Max's .sig he's doing embedded telecoms boxes,
 > > something like a GSM HLR which juggles many thousands of concurrent
 > > transactions in some ghastly protocol or other.
 > 
 > If that's the case, perhaps he should investigate Erlang. Since it was
 > designed by Ericsson specifically for embedded telephony apps, it would seem
 > an ideal fit. It does indeed support thousands of concurrent threads
 > (internal to the interpreter rather than OS-based).

Absolutely, and Erlang looked great to me, except (ironically) I
couldn't help feeling that the lack of imperative data structures was
going to be a bit of a pain.  However they were apparently going to
fix that.


