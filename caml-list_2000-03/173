Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA04223 for caml-redistribution@pauillac.inria.fr; Fri, 24 Mar 2000 17:07:43 +0100 (MET)
Resent-Message-Id: <200003241607.RAA04223@pauillac.inria.fr>
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA30627 for <caml-list@pauillac.inria.fr>; Fri, 24 Mar 2000 16:59:21 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id QAA00086;
	Fri, 24 Mar 2000 16:59:03 +0100 (MET)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA10046; Fri, 24 Mar 2000 16:59:03 +0100 (MET)
Message-ID: <20000324165903.36262@pauillac.inria.fr>
Date: Fri, 24 Mar 2000 16:59:03 +0100
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>, maxs@in.ot.com.au
Cc: caml-list@inria.fr
Subject: Re: Unsigned integers?
References: <38D97CB6.1465CD8@in.ot.com.au> <20000324115017Y.garrigue@kurims.kyoto-u.ac.jp>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 0.89.1
In-Reply-To: <20000324115017Y.garrigue@kurims.kyoto-u.ac.jp>; from Jacques Garrigue on Fri, Mar 24, 2000 at 11:50:17AM +0900
Resent-From: weis@pauillac.inria.fr
Resent-Date: Fri, 24 Mar 2000 17:07:43 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

> By the way, is there any plan to do for int32 the same kind of
> optimizations as are done for floats (no boxing/unboxing in the middle
> of a computation)? Already done?

Already done!  For int32, nativeint, and even for int64 on 64-bit
processors.

The only difference between boxed integers and floats, as far as
boxing elimination in ocamlopt goes, is that there is a hack to unbox
floats in arrays, but no corresponding hack for arrays of boxed
integers.  As Jacques said, the new Bigarray module does provide
arrays of unboxed int32 / nativeint / int64, although of a different
type than the standard Caml arrays.

- Xavier Leroy


