Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA24641 for caml-redistribution@pauillac.inria.fr; Wed, 29 Mar 2000 19:18:44 +0200 (MET DST)
Resent-Message-Id: <200003291718.TAA24641@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA09984 for <caml-list@pauillac.inria.fr>; Wed, 29 Mar 2000 08:01:10 +0200 (MET DST)
Received: from suburbia.net (suburbia.net [203.4.184.1])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id IAA26406
	for <caml-list@inria.fr>; Wed, 29 Mar 2000 08:01:02 +0200 (MET DST)
Received: by suburbia.net (Postfix, from userid 110)
	id 7CCD96C6F7; Wed, 29 Mar 2000 16:00:58 +1000 (EST)
Sender: proff@suburbia.net
To: "David McClain" <dmcclain@azstarnet.com>
Cc: <caml-list@inria.fr>
Subject: scientific computing with ocaml, gsl api
References: <000501bf95d4$7f544de0$250148bf@vega>
Cc: proff@iq.org
From: Julian Assange <proff@iq.org>
Date: 29 Mar 2000 16:00:58 +1000
In-Reply-To: "David McClain"'s message of "Fri, 24 Mar 2000 14:04:06 -0700"
Message-ID: <wx7leme2n9.fsf@suburbia.net>
User-Agent: Gnus/5.0802 (Gnus v5.8.2) XEmacs/21.1 (Big Bend)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Resent-From: weis@pauillac.inria.fr
Resent-Date: Wed, 29 Mar 2000 19:18:44 +0200
Resent-To: caml-redistribution@pauillac.inria.fr

"David McClain" <dmcclain@azstarnet.com> writes:

> Dear OCaml Enthusiasts,
> 
> It has been stewing for more than a year now, a continuing work in progress,
> but it is high time that I release a matured copy of the code and sources to
> the world. NML (Not ML, Numeric Modeling Language, Numeric ML, Nearly ML,
> ...) is an interactive, dynamically typed, tail pure, compiled (to native
> code closures) functional language, whose syntax closely follows that of
> OCaml, but where all math operations are overloaded and vectorized on real
> and complex data in the form of lists, vectors, multidimensional arrays,
> tuples, etc.

This looks very nice david! Is it possible to use the vectorised, array support
within ocaml? i.e I'm a little leary of using NML for mid-large applications due
to the lack of type checking, but it does seem to be an excellent language for
scientific interrogation.

Have you looked at the GNU scientific library?

        http://sourceware.cygnus.com/gsl

This is a wonderfully eclectic scientific library in C, with strong
control over float properties. An ocaml or MNL binding would be a
killer app.

 > Are there any plans to support euclidian vector algebra in n
 > dimensions? Preferably with user-defined physical field properties?
 > 
 > Specifically I want to be able to do things like define two vectors,
 > v_1, and v_2, have v_1 radiate a force decreasing at 1/distance^2, and
 > calculate the the force vector across all of v_2. This is more complex
 > than simple point sources, but there doesn't even seem to be support
 > for those. It could be argued that a two body case is so trivial it
 > doesn't need supporting, which is probably true, but n body cases and
 > non point sources are hard work and useful in many (even non-physics)
 > applications. i.e the v_1, v2 example I mentioned above forms part of
 > an optimisation solution I have for laying out 2d chemical labels
 > (part-of-molecule number, atomic weight, charge, etc) over a 3d
 > polynucleartide in such a way as to avoid the labels writing accross
 > each other. 
 >
 > Cheers,
 > Julian


