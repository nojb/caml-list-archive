Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA21393 for caml-redistribution@pauillac.inria.fr; Wed, 22 Mar 2000 19:15:12 +0100 (MET)
Resent-Message-Id: <200003221815.TAA21393@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA28098 for <caml-list@pauillac.inria.fr>; Wed, 22 Mar 2000 10:23:07 +0100 (MET)
Received: from cantina.students.cs.unibo.it (cantina.students.cs.unibo.it [130.136.3.110])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id KAA00587
	for <caml-list@inria.fr>; Wed, 22 Mar 2000 10:23:05 +0100 (MET)
Received: from barolo.students.cs.unibo.it (root@barolo.students.cs.unibo.it [130.136.3.207])
	by cantina.students.cs.unibo.it (8.9.3+3.2W/8.9.3/Debian 8.9.3-21) with ESMTP id KAA04774
	for <caml-list@inria.fr>; Wed, 22 Mar 2000 10:23:04 +0100
Received: (from sacerdot@localhost)
	by barolo.students.cs.unibo.it (8.9.3+3.2W/8.9.3/Debian 8.9.3-21) id JAA29058
	for caml-list@inria.fr; Wed, 22 Mar 2000 09:37:01 +0100
Date: Wed, 22 Mar 2000 09:37:01 +0100
From: Claudio Sacerdoti Coen <sacerdot@students.cs.unibo.it>
To: caml-list@inria.fr
Subject: Re: Syntax for label, NEW SOLUTION
Message-ID: <20000322093701.A29004@students.cs.unibo.it>
References: <38D35B51.8EB15DA0@univ-savoie.fr> <20000319112913P.garrigue@kurims.kyoto-u.ac.jp> <38D66D00.7245D221@univ-savoie.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
User-Agent: Mutt/1.0.1i
In-Reply-To: <38D66D00.7245D221@univ-savoie.fr>; from Christophe Raffalli on Mon, Mar 20, 2000 at 19:25:04 +0100
Resent-From: weis@pauillac.inria.fr
Resent-Date: Wed, 22 Mar 2000 19:15:12 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

On Mon, Mar 20, 2000 at 19:25:04 +0100, Christophe Raffalli wrote:
> Ok, and I agree ! What I mean is that it could happend sooner if there
> was a mode that is conservetive over both modern and classic modes. I
> will give a first working answer ...

There could be also another simple, backward compatible (w.r.t. OCaml)
solution that would get rid of the "labels in the library" fight.
Only, I don't know if it is (semantically) feasible. Here it is:

If I write

 Moo.foo x a:y z;;

or

 open Moo;;
 foo x a:y z;;

or

 let module M = Moo in
  M.foo x a:y z;;

than foo is label-checked as in classic mode.

Instead, if I write 

 open Moo in commutating mode;;  (* or something like that *)
 foo x a:y z;;

than foo is label-checked as in modern mode.

So, for example, I could write

open List;;
open Unix as in moder mode.
open Tk as in moder mode.

What am I overlooking?

					C.S.C.

-- 
-----------------------------------------
Real Name: Claudio Sacerdoti Coen
Graduating students at the
 Department of Computer Science,
 university of Bologna
Address: via del Colle n.6
	 S. Lazzaro di Savena (BO)
	 Italy
e-mail:  sacerdot@cs.unibo.it
-----------------------------------------


