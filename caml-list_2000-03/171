Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA18707 for caml-redistribution@pauillac.inria.fr; Fri, 24 Mar 2000 16:52:14 +0100 (MET)
Resent-Message-Id: <200003241552.QAA18707@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA27555 for <caml-list@pauillac.inria.fr>; Fri, 24 Mar 2000 13:19:14 +0100 (MET)
Received: from air.irisa.fr (air.irisa.fr [131.254.60.130])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id NAA14173
	for <caml-list@inria.fr>; Fri, 24 Mar 2000 13:19:13 +0100 (MET)
Received: from parate.irisa.fr (parate.irisa.fr [131.254.12.25])
	by air.irisa.fr (8.9.3/8.9.3) with ESMTP id NAA23363;
	Fri, 24 Mar 2000 13:19:13 +0100 (MET)
Sender: David.Mentre@irisa.fr
To: Nicolas barnier <barnier@recherche.enac.fr>
Cc: caml-list@inria.fr, garrigue@kurims.kyoto-u.ac.jp
Subject: Re: labels & ocaml 3 & co.
References: <20000315145830.22463@pauillac.inria.fr> <20000316115540L.garrigue@kurims.kyoto-u.ac.jp> <200003211651.RAA05461@sepia.recherche.enac.fr> <38D9FC7C.765BD264@recherche.enac.fr> <wd8wvmssngk.fsf_-_@parate.irisa.fr>
From: David.Mentre@irisa.fr (David=?iso-8859-1?q?_Mentr=E9?=)
Date: 24 Mar 2000 13:19:12 +0100
In-Reply-To: David.Mentre@irisa.fr's message of "24 Mar 2000 10:54:03 +0100"
Message-ID: <wd8aejomugv.fsf@parate.irisa.fr>
User-Agent: Gnus/5.0803 (Gnus v5.8.3) Emacs/20.4
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: quoted-printable
Resent-From: weis@pauillac.inria.fr
Resent-Date: Fri, 24 Mar 2000 16:52:13 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

David.Mentre@irisa.fr (David Mentr=E9) writes:

> Agree. But another proposal : why not use *only optional labels* in t=
he
> standard library?

Oops. I think I've confused optionnal *arguments* and optionnal
*labels*. Sorry.

So the best way is probably to avoid using labels in stdlib at all.

BTW, Jacques Garrigue, is it mandatory to have labels to exploit label
commutativity? For example, an application without labels would be
considered as a standard ocaml2 application, whereas application with
labels would be an ocaml3-modern label-commutative application. If this
could be possible, we could combine best of both worlds (ie no labels or
commutative-labels for stdlib).

Best regards,
d.
--=20
 David.Mentre@irisa.fr -- http://www.irisa.fr/prive/dmentre/
 Opinions expressed here are only mine.


