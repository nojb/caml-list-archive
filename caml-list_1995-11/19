Received: (from weis@localhost) by pauillac.inria.fr (8.6.10/8.6.6) id JAA08030 for caml-redistribution; Wed, 15 Nov 1995 09:36:15 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.6.10/8.6.6) with ESMTP id AAA02689 for <caml-list@pauillac.inria.fr>; Wed, 15 Nov 1995 00:46:23 +0100
Received: from margaux.inria.fr (margaux.inria.fr [128.93.8.2]) by concorde.inria.fr (8.7.1/8.6.9) with ESMTP id AAA06173 for <caml-list@pauillac.inria.fr>; Wed, 15 Nov 1995 00:46:23 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by margaux.inria.fr (8.6.10/8.6.6) with ESMTP id AAA06260 for <caml-list@margaux.inria.fr>; Wed, 15 Nov 1995 00:46:22 +0100
Received: from world-net.sct.fr (world-net.sct.fr [194.2.128.2]) by concorde.inria.fr (8.7.1/8.6.9) with SMTP id AAA06169 for <caml-list@margaux.inria.fr>; Wed, 15 Nov 1995 00:46:21 +0100 (MET)
Received: from client57.sct.fr (client57.sct.fr [194.2.128.87]) by world-net.sct.fr (8.6.12/8.6.10) with SMTP id AAA28670 for <caml-list@margaux.inria.fr>; Wed, 15 Nov 1995 00:43:04 +0100
Date: Wed, 15 Nov 1995 00:43:04 +0100
Message-Id: <199511142343.AAA28670@world-net.sct.fr>
X-Sender: tarizzo@world-net.sct.fr
X-Mailer: Windows Eudora Version 1.4.4
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
To: caml-list@margaux.inria.fr
From: tarizzo@world-net.sct.fr (Tarizzo Martial)
Subject: Why no macros in CAML Light ?
Sender: weis
Status: O


*** French translation follows ***
Hello,

Using LISP-Like language (SCHEME to be more precise), I wonder why there is
no macro facility in CAML. This would provide some syntactic sugar which
could answer some problems or suggestions encountered in caml-list (lack or
improvment of control structure, etc...)

I know that the very simple (and uniform) syntactic structure of lisp
programs permits an easy coding of complex macros, but it would be nice to
have at least in caml the equivalent of what can be found in procedural (and
compiled) languages : C for example. 

Perhaps, there are implementation problems related with the type system of
CAML, but I can't figure out what they are : the only job of a
"preprocessor" is to translate a phrase in core CAML, not to deal with types.

*****
Bonjour,

Utilisant un langage Lispien (SCHEME pour etre plus precis), je me demande
pourquoi il n'existe pas en CAML la possibilite de programmer des macros.
Cela pourrait fournir du "sucre syntaxique" afin de resoudre quelques
problemes ou suggestions rencontrees dans la liste CAML (ajout ou
amelioration des structures de controle, etc...)

Il est vrai que la syntaxe tres simple (et uniforme) de Lisp facilite le
codage de macros complexes, mais il serait agreable de disposer au moins de
l'equivalent de ce qu'on peut trouver dans les langages proceduraux (et
compilables) classiques : C par exemple.

Il existe peut-etre des problemes d'implementation lies au systeme de
verification de types de CAML, mais je ne vois pas trop lesquels : le seul
travail d'un "preprocesseur" est de traduire une phrase en CAML de base,
sans s'occuper des types.

Merci d'eclairer ma lanterne.
*********************************
 Tarizzo Martial
 Prof. Sc Physiques
 Classes preparatoires
 Lycee J MOULIN
 57600 FORBACH

 Email: tarizzo@world-net.sct.fr
        74014.3307@compuserve.com
 Compuserve : 74014,3307
*********************************




