Return-Path: <rich@annexia.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 1BDB9BBCA
	for <caml-list@yquem.inria.fr>; Fri, 18 Apr 2008 20:11:12 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ArQBAE6BCEhQRFuwiGdsb2JhbACRYwEBAQ8mmgI
X-IronPort-AV: E=Sophos;i="4.25,678,1199660400"; 
   d="scan'208";a="9747087"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 18 Apr 2008 20:11:11 +0200
Received: from rich by furbychan.cocan.org with local (Exim 4.63)
	(envelope-from <rich@annexia.org>)
	id 1Jmv3G-0007Tj-Et; Fri, 18 Apr 2008 19:11:10 +0100
Date: Fri, 18 Apr 2008 19:11:10 +0100
To: Vladimir Shabanov <vshabanoff@gmail.com>
Cc: Joel Reymont <joelr1@gmail.com>, caml-list@yquem.inria.fr
Subject: Re: [Caml-list] cross-compliation from x86 linux to windows?
Message-ID: <20080418181110.GA28330@annexia.org>
References: <A7864B89-5A00-4B11-9ABB-1FEBED1CA1E3@gmail.com> <8ef825670804180652j7873643aybda7998477b5bb35@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <8ef825670804180652j7873643aybda7998477b5bb35@mail.gmail.com>
User-Agent: Mutt/1.5.13 (2006-08-11)
From: Richard Jones <rich@annexia.org>
X-Spam: no; 0.00; ocamlc:01 ocamlopt:01 -output-obj:01 bytecode:01 cmo:01 ocamlc:01 dynlink:01 wrote:01 unix:01 caml-list:01 cma:01 reuse:01 reuse:01 modules:02 output:02 

On Fri, Apr 18, 2008 at 05:52:35PM +0400, Vladimir Shabanov wrote:
> 2008/4/15, Joel Reymont <joelr1@gmail.com>:
> > Is it possible to reuse on Windows the output
> >  from ocamlc/ocamlopt -output-obj?
> 
> I think you can reuse pure bytecode (.cmo .cma w/o C objects) on
> different platforms using ocamlc for static linking or Dynlink for
> dynamic one.

It used to be the case that this wouldn't work if the modules used the
Unix module (because the implementation of that module is different on
Un*x and non-Un*x-like operating systems).  Haven't tried recently
though.

Rich.

-- 
Richard Jones
Red Hat

