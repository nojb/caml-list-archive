Return-Path: <fw@deneb.enyo.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 33B44BBC1
	for <caml-list@yquem.inria.fr>; Fri, 11 Apr 2008 00:23:26 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjQBAOcv/kfUCb2niGdsb2JhbACRTwEBAQ8mmho
X-IronPort-AV: E=Sophos;i="4.25,637,1199660400"; 
   d="scan'208";a="11321945"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 11 Apr 2008 00:23:25 +0200
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id m3AMNPWF022372
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Fri, 11 Apr 2008 00:23:25 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjQBAOcv/kfUCb2niGdsb2JhbACRTwEBAQ8mmho
X-IronPort-AV: E=Sophos;i="4.25,637,1199660400"; 
   d="scan'208";a="11321944"
Received: from mail.enyo.de ([212.9.189.167])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 11 Apr 2008 00:23:25 +0200
Received: from deneb.vpn.enyo.de ([212.9.189.177] helo=deneb.enyo.de)
	by mail.enyo.de with esmtp id 1Jk5Ab-0007Nc-TO; Fri, 11 Apr 2008 00:23:02 +0200
Received: from fw by deneb.enyo.de with local (Exim 4.69)
	(envelope-from <fw@deneb.enyo.de>)
	id 1Jk5Ab-00071i-Bn; Fri, 11 Apr 2008 00:23:01 +0200
From: Florian Weimer <fw@deneb.enyo.de>
To: Martin Jambon <martin.jambon@ens-lyon.org>
Cc: Richard Jones <rich@annexia.org>, caml-list@inria.fr
Subject: Re: [Caml-list] break and continue for OCaml
References: <5b0248170804091859s75c3f725s2db53f48fba6735c@mail.gmail.com>
	<20080410133956.GA4065@annexia.org>
	<Pine.LNX.4.64.0804101549410.9417@martin.ec.wink.com>
Date: Fri, 11 Apr 2008 00:23:01 +0200
In-Reply-To: <Pine.LNX.4.64.0804101549410.9417@martin.ec.wink.com> (Martin
	Jambon's message of "Thu, 10 Apr 2008 16:05:45 +0200 (CEST)")
Message-ID: <87bq4hnyd6.fsf@mid.deneb.enyo.de>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at concorde with ID 47FE935D.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 struct:01 syntactic:01 caml-list:01 jambon:01 lazy:02 lazy:02 constructs:02 florian:03 module:03 let:03 let:03 perhaps:05 break:08 break:08 

* Martin Jambon:

> I'm OK with the intent, but what should happen in such cases:
>
> module A =
> struct
>   let a = break
>   let b = continue
>   let c = return true
>   let d = lazy (return 123)
>   let e () = Lazy.force d
> end

I think break/continue/return should be syntactic constructs (perhaps
using pseudo-keywords), so that "let a = break" is as legal as say,
"let a = end".

