Return-Path: <David.Teller@univ-orleans.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 80991BBC1
	for <caml-list@yquem.inria.fr>; Tue, 29 Apr 2008 19:59:28 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AiUCAFz+FkjCpx6viGdsb2JhbABBkQ0BAQEPIJpx
X-IronPort-AV: E=Sophos;i="4.25,723,1199660400"; 
   d="scan'208";a="25665928"
Received: from smtpka.univ-orleans.fr (HELO ka.univ-orleans.fr) ([194.167.30.175])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 29 Apr 2008 19:59:28 +0200
Received: from smtps.univ-orleans.fr (localhost [127.0.0.1])
	by ka.univ-orleans.fr (Postfix) with ESMTP id 6A4A912AD49
	for <caml-list@yquem.inria.fr>; Tue, 29 Apr 2008 19:59:28 +0200 (CEST)
Received: from [192.168.0.12] (ras75-4-82-235-58-110.fbx.proxad.net [82.235.58.110])
	by smtps.univ-orleans.fr (Postfix) with ESMTP id 61F5336E5B
	for <caml-list@yquem.inria.fr>; Tue, 29 Apr 2008 19:59:31 +0200 (CEST)
Subject: Invoking the standard library ?
From: David Teller <David.Teller@univ-orleans.fr>
To: Caml <caml-list@yquem.inria.fr>
Content-Type: text/plain
Date: Tue, 29 Apr 2008 16:26:45 +0200
Message-Id: <1209479205.11285.15.camel@Blefuscu>
Mime-Version: 1.0
X-Mailer: Evolution 2.12.1 
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; univ-orleans:01 univ-orleans:01 lifo:01 liquidations:98 modules:02 modules:02 string:02 string:02 module:03 module:03 library:03 library:03 stream:04 distributed:05 i'd:06 

   Dear list,

 I'm currently working in a ExtLib-style context in which I'm extending
modules String, Stream, etc. For this, I need to include the original
module, as provided in the standard library, and add stuff. Now, the
trick is that I'd like to keep the same name as the original module. So,
in string.ml, I'd like to be able to write something along the lines of

 include Inria.String

to access the contents of the usual String. Now, at the moment, to do
that, I need to first create my own module Inria (which imports all the
modules of the standard distribution), which then lets me proceed with
this manipulation. Unfortunately, that's a bit clumsy, not to mention
that I haven't found a nice way to get this all to build in one go with
ocamlbuild.

I'd like to know if there's a better mechanism.

Thanks in advance,
 David

-- 
David Teller
 Security of Distributed Systems
  http://www.univ-orleans.fr/lifo/Members/David.Teller
 Angry researcher: French Universities need reforms, but the LRU act brings liquidations. 

