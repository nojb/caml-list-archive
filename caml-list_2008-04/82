Return-Path: <rich@annexia.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 31B75BBCA
	for <caml-list@yquem.inria.fr>; Fri,  4 Apr 2008 23:07:27 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhwBADk19kdQRFuwiGdsb2JhbACRTwEBAQ8mmXo
X-IronPort-AV: E=Sophos;i="4.25,606,1199660400"; 
   d="scan'208";a="11092676"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 04 Apr 2008 23:07:27 +0200
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id m34L7QLi015453
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Fri, 4 Apr 2008 23:07:26 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhwBADk19kdQRFuwiGdsb2JhbACRTwEBAQ8mmXo
X-IronPort-AV: E=Sophos;i="4.25,606,1199660400"; 
   d="scan'208";a="11092675"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 04 Apr 2008 23:07:26 +0200
Received: from rich by furbychan.cocan.org with local (Exim 4.63)
	(envelope-from <rich@annexia.org>)
	id 1Jht89-0005Dc-8M
	for caml-list@inria.fr; Fri, 04 Apr 2008 22:07:25 +0100
Date: Fri, 4 Apr 2008 22:07:25 +0100
To: caml-list@inria.fr
Subject: Re: [Caml-list] Operators for Int64 and Int32
Message-ID: <20080404210725.GA13391@annexia.org>
References: <906164100804030708p3e2788a0p29b69f4d46600622@mail.gmail.com> <20080404071729.154e130e.mle+ocaml@mega-nerd.com> <20080403221704.GA31402@annexia.org> <20080404124729.460bc323.mle+ocaml@mega-nerd.com> <666572260804041058hdf6e6aclf52cc8a1ee812090@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <666572260804041058hdf6e6aclf52cc8a1ee812090@mail.gmail.com>
User-Agent: Mutt/1.5.13 (2006-08-11)
From: Richard Jones <rich@annexia.org>
X-Miltered: at concorde with ID 47F6988E.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; 0200,:01 translated:01 camlp:01 ocaml:01 wiki:01 wrote:01 caml-list:01 int:01 int:01 binary:02 parse:02 debugging:03 library:03 library:03 guess:04 

On Fri, Apr 04, 2008 at 07:58:00PM +0200, Adrien wrote:
> As for my library (I'm sure someone will ask about it), it is
> basically used like Bitmatch. When I saw the Bitmatch release, I
> translated Richard's examples to my library. I took me a few minutes.
> It would benefit from some sugar but I don't know camlp4 (yet).
> 
> If you want you can have a look at the examples here :
> http://ocaml.yaxm.org/wiki/doku.php?id=binary_parse#examples

I guess the advantage of bitmatch is matching against several cases.
In fact the pa_bitmatch extension generates a really large amount of
code in some cases.  The EXT3 case generates this:

http://www.annexia.org/tmp/ext3.txt

1814 lines of code from just 76 lines of source, ouch :-)  Well, most
of it is optional debugging statements ...

> I'll probably make some release this week-end if I find enough time (I
> already have to get a new ID card as mine has just been stolen).

But our Home Secretary "Wacky" Jacqui Smith assured us that we'll all
be safe with ID cards and all crime will cease!?!

Rich.

-- 
Richard Jones
Red Hat

