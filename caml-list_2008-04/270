Return-Path: <berke.durak@exalead.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 0E0B2BBC1
	for <caml-list@yquem.inria.fr>; Wed, 23 Apr 2008 18:15:00 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnABAMb9DkjAXQIniGdsb2JhbACRUgEBAQ8mm14
X-IronPort-AV: E=Sophos;i="4.25,700,1199660400"; 
   d="scan'208";a="25403364"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 23 Apr 2008 18:14:59 +0200
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id m3NGEx17009538
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Wed, 23 Apr 2008 18:14:59 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnABAOr8DkjBL1AZiGdsb2JhbACRUgEBAQ8mm2M
X-IronPort-AV: E=Sophos;i="4.25,700,1199660400"; 
   d="scan'208";a="9972062"
Received: from gw.exalead.com (HELO exalead.com) ([193.47.80.25])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 23 Apr 2008 18:14:59 +0200
Received: from [192.168.204.148] (madpc064.exalead.com [192.168.204.148])
	(authenticated bits=0)
	by exalead.com (8.14.2/8.14.0) with ESMTP id m3NGEwE5010536;
	Wed, 23 Apr 2008 18:14:59 +0200
Message-ID: <480F6082.6030901@exalead.com>
Date: Wed, 23 Apr 2008 18:14:58 +0200
From: Berke Durak <berke.durak@exalead.com>
User-Agent: Thunderbird 1.5.0.10 (X11/20070221)
MIME-Version: 1.0
To: Christophe Raffalli <christophe.raffalli@univ-savoie.fr>
Cc: Caml-list List <caml-list@inria.fr>
Subject: Re: [Caml-list] How to make a value uncomparable
References: <480F3E52.60300@exalead.com> <480F578F.9040403@univ-savoie.fr>
In-Reply-To: <480F578F.9040403@univ-savoie.fr>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 480F6083.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; berke:01 durak:01 berke:01 durak:01 christophe:01 raffalli:01 sig:01 val:01 val:01 struct:01 structurally:01 sig:01 struct:01 equality:01 wrote:01 

Christophe Raffalli wrote:
>> =20
>> module Uncomparable :
>>   sig
>>     type 'a t
>>     val make : 'a -> 'a t
>>     val get : 'a t -> 'a
>>   end
>>   =3D
>>   struct
>>     type 'a t =3D unit -> 'a
>> =20
>>     let make x =3D fun _ -> x
>> =20
>>     let get x =3D x ()
>>   end
>> =20

Indeed, that's a much simpler solution! :)

But there's one minor difference: physical equality works on Weak.t but not on
functions.  But that can be handled by using a ref to a function.

module Structurally_uncomparable :
   sig
     type 'a t
     val make : 'a -> 'a t
     val get : 'a t -> 'a
   end
   =
   struct
     type 'a t = (unit -> 'a) ref
     let make x = ref (fun _ -> x)
     let get x = (!x)()
   end

-- 
Berke DURAK

