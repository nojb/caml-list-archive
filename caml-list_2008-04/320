Return-Path: <David.Teller@univ-orleans.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 7A019BBC1
	for <caml-list@yquem.inria.fr>; Sun, 27 Apr 2008 19:43:08 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvMAAMZXFEjCpx6wlmdsb2JhbACRWgEBAQEJBQgYln4
X-IronPort-AV: E=Sophos;i="4.25,713,1199660400"; 
   d="scan'208";a="10133243"
Received: from smtpmin.univ-orleans.fr (HELO min.univ-orleans.fr) ([194.167.30.176])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 27 Apr 2008 19:43:08 +0200
Received: from smtps.univ-orleans.fr (localhost [127.0.0.1])
	by min.univ-orleans.fr (Postfix) with ESMTP
	id 9D9C912B3E8; Sun, 27 Apr 2008 19:43:08 +0200 (CEST)
Received: from [192.168.1.108] (APoitiers-256-1-82-157.w90-11.abo.wanadoo.fr [90.11.21.157])
	by smtps.univ-orleans.fr (Postfix) with ESMTP id 7B05F36E5B;
	Sun, 27 Apr 2008 19:43:11 +0200 (CEST)
Subject: Re: [Caml-list] [OSR] Standard syntax extensions ?
From: David Teller <David.Teller@univ-orleans.fr>
To: Till Crueger <crueger@informatik.uni-bonn.de>
Cc: Richard Jones <rich@annexia.org>,
	Arthur Chan <baguasquirrel@gmail.com>,
	Caml <caml-list@yquem.inria.fr>
In-Reply-To: <op.t97j6yp6tayt6l@reitoei.dyndns.info>
References: <1209052182.6180.35.camel@Blefuscu>
	 <74cabd9e0804251337m40811532yb359710630cdbdfd@mail.gmail.com>
	 <20080426074157.GA15640@annexia.org>
	 <op.t97j6yp6tayt6l@reitoei.dyndns.info>
Content-Type: text/plain
Date: Sun, 27 Apr 2008 19:44:25 +0200
Message-Id: <1209318266.6128.16.camel@Blefuscu>
Mime-Version: 1.0
X-Mailer: Evolution 2.12.1 
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; syntax:01 univ-orleans:01 cheers:01 0200,:01 elegantly:01 univ-orleans:01 lifo:01 liquidations:98 wrote:01 caml-list:01 slightly:03 let:03 let:03 complex:05 distributed:05 

I think this would be useful. However, you can already do it in a
slightly more complex fashion.

>From the top of my mind, with

let ( /* ) f g = f g
let ( */ ) f g x = g f x

you can achieve

1 /* mem */ [1;2;3]

with the added bonus that a C programmer will never be able to read your
code :)

Cheers,
 David

On Sat, 2008-04-26 at 09:53 +0200, Till Crueger wrote:
> I am posting this in this thread, because this would allow us to write the  
> above more elegantly as:
> 1 `mem` [1;2;3], which is close to what was originally proposed.
> 
> What do you think of this?
> 
> bye,
>    Till
> 
> 
-- 
David Teller
 Security of Distributed Systems
  http://www.univ-orleans.fr/lifo/Members/David.Teller
 Angry researcher: French Universities need reforms, but the LRU act brings liquidations. 

