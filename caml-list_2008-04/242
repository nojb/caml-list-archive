Return-Path: <rich@annexia.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 20B1DBBC1
	for <caml-list@yquem.inria.fr>; Mon, 21 Apr 2008 22:47:23 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AuMAACKaDEhQRFuwiGdsb2JhbACRUwEBAQ8mmH4
X-IronPort-AV: E=Sophos;i="4.25,691,1199660400"; 
   d="scan'208";a="11737876"
Received: from furbychan.cocan.org ([80.68.91.176])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 21 Apr 2008 22:47:22 +0200
Received: from rich by furbychan.cocan.org with local (Exim 4.63)
	(envelope-from <rich@annexia.org>)
	id 1Jo2v3-00033y-ND; Mon, 21 Apr 2008 21:47:21 +0100
Date: Mon, 21 Apr 2008 21:47:21 +0100
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] The closing gap (warning: long, inflammatory rant)
Message-ID: <20080421204721.GA11434@annexia.org>
References: <b903a8570804210527p1e6170ddicbd9efef41d9768a@mail.gmail.com> <20080421131151.GA16777@annexia.org> <200804211544.08897.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200804211544.08897.jon@ffconsultancy.com>
User-Agent: Mutt/1.5.13 (2006-08-11)
From: Richard Jones <rich@annexia.org>
X-Spam: no; 0.00; 0100,:01 niches:01 ocaml:01 threads:01 garbage:01 garbage:01 wrote:01 wrote:01 typing:01 caml-list:01 lazy:02 lazy:02 data:02 argument:02 deallocate:03 

On Mon, Apr 21, 2008 at 03:44:08PM +0100, Jon Harrop wrote:
> On Monday 21 April 2008 14:11:51 Richard Jones wrote:
> > Your threaded code is going to look really stupid when you have NUMA
> > machines with dozens of cores.  Why are we optimizing for a case (SMP)
> > which will only be around for a few years.  Arguably SMP isn't even
> > around now ... the AMD machine on which I'm typing this is firmly NUMA
> > with a good 10% penalty for accessing memory owned by the other
> > socket.
> 
> 10% is nothing compared to the orders of magnitude cost of message passing.

Or you could use shared memory (as I said below).  How do you think
shared memory works in a NUMA machine anyway?

> > > A concurrent GC should be developed.  But I think you can compete in
> > > some "niches" without a concurrent GC.
> >
> > Why should a concurrent GC be developed?  Threaded code is a nightmare
> > to write & debug, and it's only convenient for lazy programmers who
> > can't be bothered to think in advance about how they want to share
> > data.  OCaml supports fork, event channels & shared memory right now
> > (and has done for years) so there is no penalty to writing it
> > properly.
> 
> Ten years ago that was:
> 
>   "Why should we use gargage collection? Garbage collectors are a nightmare to 
> implement and debug and are only useful for lazy programmers who cannot be 
> bothered to deallocate values themselves. C++ has reference counting right 
> now and there is no penalty for using it properly."

Thanks for the straw man argument there.  Garbage collectors and _not_
using threads both improve the safety of the language.

Rich.

-- 
Richard Jones
Red Hat

