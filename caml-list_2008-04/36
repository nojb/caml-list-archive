Return-Path: <tews@cs.ru.nl>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 31756BBCA
	for <caml-list@yquem.inria.fr>; Thu,  3 Apr 2008 01:14:04 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAKSw80fAXQIn/2dsb2JhbACsLQ
X-IronPort-AV: E=Sophos;i="4.25,595,1199660400"; 
   d="scan'208";a="10999745"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 03 Apr 2008 01:13:43 +0200
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id m32NDgl6013887
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Thu, 3 Apr 2008 01:13:43 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvQBAFOw80eDrhCRiGdsb2JhbACRUAEBAQ8mmiU
X-IronPort-AV: E=Sophos;i="4.25,595,1199660400"; 
   d="scan'208";a="24525622"
Received: from smeltpunt.science.ru.nl ([131.174.16.145])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 03 Apr 2008 01:13:42 +0200
Received: from tandem.cs.ru.nl (tandem.cs.ru.nl [131.174.142.18])
	by smeltpunt.science.ru.nl (8.13.7/5.23) with ESMTP id m32NDfNX021893
	for <caml-list@inria.fr>; Thu, 3 Apr 2008 01:13:41 +0200 (MEST)
Received: from tews by tandem.cs.ru.nl with local (Exim 4.63)
	(envelope-from <tews@tandem.cs.ru.nl>)
	id 1JhC9F-0002no-IS
	for caml-list@inria.fr; Thu, 03 Apr 2008 01:13:41 +0200
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <18420.4901.506029.744640@tandem.cs.ru.nl>
Date: Thu, 3 Apr 2008 01:13:41 +0200
To: caml-list@inria.fr
Subject: Camlp4: example/parse_files.ml
X-Mailer: VM 7.19 under Emacs 21.4.1
From: Hendrik Tews <tews@cs.ru.nl>
X-Scanned-By: MIMEDefang 2.63 on 131.174.16.145
X-Miltered: at concorde with ID 47F41326.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; camlp:01 hendrik:01 tews:01 tews:01 parser:01 functor:01 camlp:01 ocaml:01 functor:01 syntax:01 syntax:01 functors:01 callbacks:01 iter:01 callbacks:01 

Hi,

I have a few questions to the parse_files example.

The example starts with building the parser and printer via the
following functor application

    module Caml =
      Camlp4.Printers.OCaml.Make
	(Camlp4OCamlParser.Make
	  (Camlp4OCamlRevisedParser.Make
	    (Camlp4.OCamlInitSyntax.Make(Ast)(Gram)(Quotation))));;


1. Can I omit the printer functor if I am only interested in
   parsing files (and not printing) and simplify to

    module Caml =
       Camlp4OCamlParser.Make
	(Camlp4OCamlRevisedParser.Make
	  (Camlp4.OCamlInitSyntax.Make(Ast)(Gram)(Quotation)))

2. Ast, Gram, Quotation come from Camlp4.PreCast. Do I miss
   something if I simplify further to

    module Caml =
       Camlp4OCamlParser.Make
	(Camlp4OCamlRevisedParser.Make(Camlp4.PreCast.Syntax))

3. I looked into the registration of syntax extentions (Register
   functors) and how the syntax extention callbacks are called
   in Register.iter_and_take_callbacks. I have the impression
   that in camlp4 not the above nested functor application is
   performed but the Make functors are sequentially applied to
   the same Syntax functor. Therefore, can I further simplify to 

    module Caml = Camlp4.PreCast.Syntax
    let () = 
      let module M1 = Camlp4OCamlRevisedParser.Make(Caml) in
      let module M2 = Camlp4OCamlParser.Make(Caml)
      in
	()

   ?

Bye,

Hendrik

