Return-Path: <berke.durak@exalead.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id D8876BBC1
	for <caml-list@yquem.inria.fr>; Mon, 21 Apr 2008 17:57:25 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEACpWDEjAXQIm/2dsb2JhbACqVQ
X-IronPort-AV: E=Sophos;i="4.25,690,1199660400"; 
   d="scan'208";a="9848540"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 21 Apr 2008 17:57:25 +0200
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id m3LFvKai015698
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Mon, 21 Apr 2008 17:57:25 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: At8BAGZWDEjBL1AZiGdsb2JhbACRWAEBAQ8mmEY
X-IronPort-AV: E=Sophos;i="4.25,690,1199660400"; 
   d="scan'208";a="11204654"
Received: from gw.exalead.com (HELO exalead.com) ([193.47.80.25])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 21 Apr 2008 17:57:25 +0200
Received: from [192.168.204.148] (madpc064.exalead.com [192.168.204.148])
	(authenticated bits=0)
	by exalead.com (8.14.2/8.14.0) with ESMTP id m3LFvPmg006578
	for <caml-list@inria.fr>; Mon, 21 Apr 2008 17:57:25 +0200
Message-ID: <480CB965.40708@exalead.com>
Date: Mon, 21 Apr 2008 17:57:25 +0200
From: Berke Durak <berke.durak@exalead.com>
User-Agent: Thunderbird 1.5.0.10 (X11/20070221)
MIME-Version: 1.0
To: Caml-list List <caml-list@inria.fr>
Subject: Re: [Caml-list] The closing gap (warning: long, inflammatory rant)
References: <142199.28761.qm@web54607.mail.re2.yahoo.com>
In-Reply-To: <142199.28761.qm@web54607.mail.re2.yahoo.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at discorde with ID 480CB960.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; berke:01 durak:01 berke:01 durak:01 malloc:01 haskell:01 seq:01 ocaml:01 bytecode:01 tops:98 imho:01 wrote:01 caml-list:01 alain:01 data:02 

Dario Teixeira wrote:
> Hi,
> 
>> Now data center owners love Ruby-based apps, since you need 60 servers to do
>> 300 requests/second.
> 
> Is this hyperbole or hard numbers?  Since I finally managed to use natdynlink
> on an AMD64 machine (see Alain Frisch's today's message to this list), I ran
> some simple benchmarks on a dummy Ocsigen application generating dynamic pages.
> 

Hello,

Well I'll say that it's hyperbole to be on the safe side, but you might want to
look at this:

   http://highscalability.com/friends-sale-architecture-300-million-page-view-month-facebook-ror-app

Some people say that it's a Rails problem but why has Ruby the place it has
on the shootout?  Can't they indulge in some malloc+pointer-arithmetic tricks
like our Haskell brothers :) ?

> The results were more than good enough for my purposes, though I can't really
> compare them with other languages/frameworks:
>
> http://nleyten.com/2008/04/21/simple-benchmarks-on-the-ocsigen-server.aspx

Well these are pretty good numbers IMHO.  My own monadically threaded homegrown
"framework" tops at about 300 reqs/seq at ronchonneuse.com (native code,
a Dedibox on a VIA Esther at 2GHz), and it goes thru Lighttpd via SCGI
(FastCGI should improve it but it's not worth the hassle for now.)

> Could Ocsigen be a killer app for Ocaml?  Should we think of setting up
> a simple "web framework shootout"?  (Though personally I think the
> advantages of Ocsigen go way beyond speed).

Could be, but not in bytecode.  Let's place our hopes in natdynlink!

-- 
Berke DURAK

