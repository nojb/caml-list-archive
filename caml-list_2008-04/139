Return-Path: <micha-1@fantasymail.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 90A22BBC1
	for <caml-list@yquem.inria.fr>; Thu, 10 Apr 2008 16:25:15 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmcAAJLA/UfVpUAUjmdsb2JhbACRTQEBAQEJAwsHFJlu
X-IronPort-AV: E=Sophos;i="4.25,636,1199660400"; 
   d="scan'208";a="11305587"
Received: from mail.gmx.net ([213.165.64.20])
  by mail3-smtp-sop.national.inria.fr with SMTP; 10 Apr 2008 16:25:14 +0200
Received: (qmail invoked by alias); 10 Apr 2008 14:25:11 -0000
Received: from p57B1E39E.dip.t-dialin.net (EHLO pc21b.local) [87.177.227.158]
  by mail.gmx.net (mp014) with SMTP; 10 Apr 2008 16:25:11 +0200
X-Authenticated: #20477425
X-Provags-ID: V01U2FsdGVkX19G/eRdEj1G6TiZ0t4b5+ZZisFSza1d4dQE5Pq/Hm
	RX9hRimFQyBjhN
From: Michael Wohlwend <micha-1@fantasymail.de>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] break and continue for OCaml
Date: Thu, 10 Apr 2008 16:24:08 +0200
User-Agent: KMail/1.9.7
References: <5b0248170804091859s75c3f725s2db53f48fba6735c@mail.gmail.com> <20080410133956.GA4065@annexia.org> <Pine.LNX.4.64.0804101549410.9417@martin.ec.wink.com>
In-Reply-To: <Pine.LNX.4.64.0804101549410.9417@martin.ec.wink.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200804101624.08376.micha-1@fantasymail.de>
X-Y-GMX-Trusted: 0
X-Spam: no; 0.00; ocaml:01 donnerstag:01 struct:01 10.:98 caml-list:01 jambon:01 loops:02 module:03 let:03 let:03 michael:07 michael:07 schrieb:08 break:08 break:08 

Am Donnerstag, 10. April 2008 16:05:45 schrieb Martin Jambon:

> I'm OK with the intent, but what should happen in such cases:
>
> module A =
> struct
>    let a = break
>    let b = continue

I think break and continue should be restricted to inside of loops, which 
isn't hard to do.

 Michael

