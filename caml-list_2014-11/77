Return-Path: <kennethadammiller@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id C4D4A7FADE
	for <caml-list@sympa.inria.fr>; Wed, 19 Nov 2014 17:50:09 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  kennethadammiller@gmail.com) identity=pra;
  client-ip=209.85.214.175;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="kennethadammiller@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  kennethadammiller@gmail.com designates 209.85.214.175 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.214.175;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="kennethadammiller@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ob0-f175.google.com) identity=helo;
  client-ip=209.85.214.175;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="postmaster@mail-ob0-f175.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ap0BABPJbFTRVdavlGdsb2JhbABahDwEgwLRWwcWAQEBAQERAQEBAQcLCwkSMIN5IhEdARseAxIIAQc3AiQBEQEFASI1iAkBAxKtbYMiPTGLO4FygxGKRAoZJw1ohg8BBQ6TNw8yEoFCBYwbkkaVABgphVMfMIJLAQEB
X-IPAS-Result: Ap0BABPJbFTRVdavlGdsb2JhbABahDwEgwLRWwcWAQEBAQERAQEBAQcLCwkSMIN5IhEdARseAxIIAQc3AiQBEQEFASI1iAkBAxKtbYMiPTGLO4FygxGKRAoZJw1ohg8BBQ6TNw8yEoFCBYwbkkaVABgphVMfMIJLAQEB
X-IronPort-AV: E=Sophos;i="5.07,418,1413237600"; 
   d="scan'208";a="108240712"
Received: from mail-ob0-f175.google.com ([209.85.214.175])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 19 Nov 2014 17:50:09 +0100
Received: by mail-ob0-f175.google.com with SMTP id wp4so747941obc.34
        for <caml-list@inria.fr>; Wed, 19 Nov 2014 08:50:08 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:date:message-id:subject:from:to:content-type;
        bh=hSD6E6QdGIp6na3qTduZqdr/WW9v/VKQDH99ZusuZN0=;
        b=D9+Bvufa2uBjp79yjICZFxoUrIGBouCwwcFpWl56dabiWI+loen6LWPI9imo03mKzI
         rh1ZpHDEvfdqTl+Nzr8qMELjUjZocX4/cMmx0p+VtetR07ejPgRc2knWk4/lPBVXD1K1
         BKZGUeSEdPI7PJHtTV6oUqkqW3nW2iGNQAy+rGkbqlct4nRbFcI++2ajU7BqoT+VxzEw
         lHUlO+SRDgW2GnQGUQQnIUBb7VcDI5nGav8g79K7EzLg2nU4ZNc/qFWxv99MTq4BZ9uR
         EP3RAbwAZ9uOWqBjEOi//z+gnKIG5pti8KU3ODwVD8cFhczagzepsO2Gv93FHCpJgFph
         Hb6A==
MIME-Version: 1.0
X-Received: by 10.202.137.70 with SMTP id l67mr1313295oid.82.1416415807998;
 Wed, 19 Nov 2014 08:50:07 -0800 (PST)
Received: by 10.182.197.1 with HTTP; Wed, 19 Nov 2014 08:50:07 -0800 (PST)
Date: Wed, 19 Nov 2014 11:50:07 -0500
Message-ID: <CAK7rcp8OjeCFoofj6_9fogXgX_zz-yf+r17Q+Cmg+8iWgV8chA@mail.gmail.com>
From: Kenneth Adam Miller <kennethadammiller@gmail.com>
To: caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a113f01581713bc050839011a
Subject: [Caml-list] Recursive dependency issues

--001a113f01581713bc050839011a
Content-Type: text/plain; charset=UTF-8

I have a library that I'm building against. I only consume an interface
from 2 specific directories; there are no other usages throughout my code.
I would like to be able to link against the library, and have the compiler
admit my code so long as it uses the interfaces of the other libraries
correctly. Instead, I'm having to recursively specify all the dependencies
of the library I consume!

I specify the location of my library with -ccopt -L location/to/it and then
afterward, have the cma or the cmxa before I specify my source that is
being compiled.

Should I statically link? What do I do to avoid the dependency hell?

--001a113f01581713bc050839011a
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">I have a library that I&#39;m building against. I only con=
sume an interface from 2 specific directories; there are no other usages th=
roughout my code. I would like to be able to link against the library, and =
have the compiler admit my code so long as it uses the interfaces of the ot=
her libraries correctly. Instead, I&#39;m having to recursively specify all=
 the dependencies of the library I consume!=C2=A0<div><br></div><div>I spec=
ify the location of my library with -ccopt -L location/to/it and then after=
ward, have the cma or the cmxa before I specify my source that is being com=
piled.=C2=A0</div><div><br></div><div>Should I statically link? What do I d=
o to avoid the dependency hell?</div></div>

--001a113f01581713bc050839011a--
