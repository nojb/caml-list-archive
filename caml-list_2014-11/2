Return-Path: <stedolan@stedolan.net>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 4F0F17EFCD
	for <caml-list@sympa.inria.fr>; Sat,  1 Nov 2014 14:10:39 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  stedolan@stedolan.net) identity=pra;
  client-ip=209.85.213.175;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="stedolan@stedolan.net";
  x-sender="stedolan@stedolan.net";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  stedolan@stedolan.net) identity=mailfrom;
  client-ip=209.85.213.175;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="stedolan@stedolan.net";
  x-sender="stedolan@stedolan.net";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ig0-f175.google.com) identity=helo;
  client-ip=209.85.213.175;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="stedolan@stedolan.net";
  x-sender="postmaster@mail-ig0-f175.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AiwBAIXaVFTRVdWvlGdsb2JhbABchDoEgwLTFAcWAQEBAQERAQEBAQcLCwkSMIQDAQEEEhFWEAEKCwMKAgImAgIiEgEFARwGEyKIH6hOPTGLM45lhhQKgSOSYYFUBZMjilqBMYNNj1QYKYNugURsgUiBAwEBAQ
X-IPAS-Result: AiwBAIXaVFTRVdWvlGdsb2JhbABchDoEgwLTFAcWAQEBAQERAQEBAQcLCwkSMIQDAQEEEhFWEAEKCwMKAgImAgIiEgEFARwGEyKIH6hOPTGLM45lhhQKgSOSYYFUBZMjilqBMYNNj1QYKYNugURsgUiBAwEBAQ
X-IronPort-AV: E=Sophos;i="5.07,295,1413237600"; 
   d="scan'208";a="104113337"
Received: from mail-ig0-f175.google.com ([209.85.213.175])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 01 Nov 2014 14:10:38 +0100
Received: by mail-ig0-f175.google.com with SMTP id h3so2433029igd.14
        for <caml-list@inria.fr>; Sat, 01 Nov 2014 06:10:37 -0700 (PDT)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:sender:in-reply-to:references:date
         :message-id:subject:from:to:cc:content-type;
        bh=hJXHuSt+FcLD1ikv9KkWndeFwZJ8ZIIhAR3xwzEF3QQ=;
        b=cPCjG4SEjcPGdlzCy6olQ82e7gU2EClU6DMItV2GiJzaPutCCqD+c3GQWIVYq3hZz8
         kMpz7F7TeSnM9BD99AcV9O3yzI9/2S0f+qQLM+WiD8S7oQlx9rVlKtjlXJgSmDbw6+IY
         hKsryUDOVl0UzegUOq4FGPSHEqV33xvkdKNTGWoZLu+GDlyVWDVR5UpC8qm2LDnw+0Cj
         wLYkGue7WX/8gy4BWl/nY5k7LhVN06340TBJU3KhZzK/jPExKDdIvb5+xJnLtJHIlzDX
         io/QDQIgBPwHhEzNb+9n9D+WCkOSpY0V/l1QzEHjwcU10DVuz6m0flrU4Uz+0m/+RBmm
         kf+w==
X-Gm-Message-State: ALoCoQmL6vnYLHOKhnI6vr10Q95pq3BeSpeveV5dvGJMVn/BILobRxrS2DARRv749J36oUOGRrnp
MIME-Version: 1.0
X-Received: by 10.50.85.101 with SMTP id g5mr3908009igz.40.1414847437492; Sat,
 01 Nov 2014 06:10:37 -0700 (PDT)
Sender: stedolan@stedolan.net
Received: by 10.107.137.160 with HTTP; Sat, 1 Nov 2014 06:10:37 -0700 (PDT)
X-Originating-IP: [131.111.184.13]
In-Reply-To: <ac203386300caa1bc9701bb91418f685@whitequark.org>
References: <54539FD9.1050709@tu-berlin.de>
	<ac203386300caa1bc9701bb91418f685@whitequark.org>
Date: Sat, 1 Nov 2014 13:10:37 +0000
X-Google-Sender-Auth: utREUlxLqEtOVo9Iynn1KMA2PGg
Message-ID: <CA+mHimPwkTCuKKW4AnRpMVVhu29a0xw+yfcFzPQHDn6kUzy8xA@mail.gmail.com>
From: Stephen Dolan <stephen.dolan@cl.cam.ac.uk>
To: Peter Zotov <whitequark@whitequark.org>
Cc: =?UTF-8?Q?Christoph_H=C3=B6ger?= <christoph.hoeger@tu-berlin.de>, 
	caml users <caml-list@inria.fr>, caml-list-request@inria.fr
Content-Type: text/plain; charset=UTF-8
Subject: Re: [Caml-list] is it possible to embed an OCaml interpreter into
 an OCaml Module?

On Fri, Oct 31, 2014 at 3:03 PM, Peter Zotov <whitequark@whitequark.org> wrote:
> Incidentally, can someone explain how the runtime manages to be
> multithreaded while it has so much global data? Please don't
> tell me the answer is "every thread copies it back and forth
> on context switch".

In current OCaml, there is a global lock. The global data can only be
accessed holding this lock, so only one thread can run OCaml code at a
time.

In the multicore branch, the data is thread-local.

Stephen
