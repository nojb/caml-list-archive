Return-Path: <kennethadammiller@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 27C0E7FADE
	for <caml-list@sympa.inria.fr>; Tue, 18 Nov 2014 21:30:26 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  kennethadammiller@gmail.com) identity=pra;
  client-ip=209.85.214.177;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="kennethadammiller@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  kennethadammiller@gmail.com designates 209.85.214.177 as
  permitted sender) identity=mailfrom;
  client-ip=209.85.214.177;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="kennethadammiller@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ob0-f177.google.com) identity=helo;
  client-ip=209.85.214.177;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="postmaster@mail-ob0-f177.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AocBACSra1TRVdaxlGdsb2JhbABbg2NZBIMCxzWBaodHAoEKBxYBAQEBAREBAQEBBwsLCRIwhAIBAQEDARIRHQEbFggDAQsGBQsNKgICIQEBEQEFARwGEwgaiAkBAwkJDa4MPTGLO4FzgxGKVgoZJw1ohWkBAQEBAQUBAQEBAQEBARQBBQ6OPx2BPBEBTAuCd4FUBYwWixaCS4JLghSBMz2GTIdIhHoYKYVTHzCBD4E8AQEB
X-IPAS-Result: AocBACSra1TRVdaxlGdsb2JhbABbg2NZBIMCxzWBaodHAoEKBxYBAQEBAREBAQEBBwsLCRIwhAIBAQEDARIRHQEbFggDAQsGBQsNKgICIQEBEQEFARwGEwgaiAkBAwkJDa4MPTGLO4FzgxGKVgoZJw1ohWkBAQEBAQUBAQEBAQEBARQBBQ6OPx2BPBEBTAuCd4FUBYwWixaCS4JLghSBMz2GTIdIhHoYKYVTHzCBD4E8AQEB
X-IronPort-AV: E=Sophos;i="5.07,412,1413237600"; 
   d="scan'208";a="108000716"
Received: from mail-ob0-f177.google.com ([209.85.214.177])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 18 Nov 2014 21:30:25 +0100
Received: by mail-ob0-f177.google.com with SMTP id va2so2910002obc.22
        for <caml-list@inria.fr>; Tue, 18 Nov 2014 12:30:24 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type;
        bh=pmuIqK83Fq/vzPhQaMHmVNPCSckOuZTOJFyCsj5vBts=;
        b=UdhAwgpLruDI2BpETCwJWh6ymGIGSBPxMgeOs3LaP1nlVh+FPHxsLLOIIuUaflwmbB
         z4iK+7Prb1DuJD+zVVWdxSzCyRKS0JCkPc5BIrC6j9yraGb8QYlFakmj8h+J85HFGaSW
         Mgn1lGf5kr/k459IdqbYAmtE/DexoTf3elL1H+BgZOAXlUD5LlPMoz6hcaHN3Flo2Hy+
         tFQYdo/xw80h8BstpNPmwRBDqhbsEV08oV6QI05eFvRlDlrwb96aiZPHkPI5i/ti5vEO
         se0JfXdP3rHGYB3fkpwtMoFR+UgLhVMogMuE5QeKFE651fZHBeQombb8lDoL0OTbu8Al
         Iepg==
MIME-Version: 1.0
X-Received: by 10.182.63.17 with SMTP id c17mr3535288obs.65.1416342624060;
 Tue, 18 Nov 2014 12:30:24 -0800 (PST)
Received: by 10.182.197.1 with HTTP; Tue, 18 Nov 2014 12:30:24 -0800 (PST)
In-Reply-To: <CALdWJ+xUjaGCLdoPe=dTq=6o3zsQ_1HGz7B7Ov+3QC0iahZyGQ@mail.gmail.com>
References: <CAK7rcp9vi=i-TH=RxyL9aWZFkqTxjkaKdzMwiM5+jbeP4rj-PA@mail.gmail.com>
	<CAK7rcp_+x5iVXzP6yszf5de-NTG9m0+ZrmRh80F6vD+32h42GA@mail.gmail.com>
	<CALdWJ+xUjaGCLdoPe=dTq=6o3zsQ_1HGz7B7Ov+3QC0iahZyGQ@mail.gmail.com>
Date: Tue, 18 Nov 2014 15:30:24 -0500
Message-ID: <CAK7rcp9X7b5Ycyriq3TPjOEzO3ETCqppuO1LwpoCDSkLda35Yg@mail.gmail.com>
From: Kenneth Adam Miller <kennethadammiller@gmail.com>
To: caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=e89a8f647009fccd09050827f62f
Subject: Re: [Caml-list] Using binary analysis platform library

--e89a8f647009fccd09050827f62f
Content-Type: text/plain; charset=UTF-8

Yeah, I tried to email them, but I couldn't get through to them. If you can
explain how I can get through to be approved that would be helpful. I
thought the bap list was better, but  I can't email to it.

At the current moment, I got the tidbit about stmt lists in  piqi, I
figured that out. Now I just need to get the piqi compiler to produce
equivalent types to what bap is compiled with by importing the module
instead of copying the piqi files and including them; ocaml compiler is
producing equivalent type definitions that are masked under different
module names. My whole compilation has bap-0.8/ and BAP-Service under the
same parent directory; when I try to import in piqi, I can't do ../

On Tue, Nov 18, 2014 at 3:22 PM, Ivan Gotovchits <ivg@ieee.org> wrote:

> Actually is is a good idea to look at the examples in a new BAP repository
>
>
> https://github.com/BinaryAnalysisPlatform/bap/blob/master/lib/bap_types/stmt.piqi
>
>
> In general, list can be declared as:
>
> .list [
>   .name stmt-list
>   .type stmt
> ]
>
> Also, there is a BAP-specific list that is more suited for this kind of
> questions.
>
>
> On Tue, Nov 18, 2014 at 3:15 PM, Kenneth Adam Miller <
> kennethadammiller@gmail.com> wrote:
>
>> Actually, I already discovered the function that I was looking for.
>>
>> Can anybody tell me how you declare a list of a certain type in piqi?
>>
>> On Tue, Nov 18, 2014 at 3:01 PM, Kenneth Adam Miller <
>> kennethadammiller@gmail.com> wrote:
>>
>>> I have a single use case, and its complicated by my clumsiness and new
>>> relationship with ocaml. I'm not sure how to query libraries for various
>>> restrictions:
>>>
>>> Basically, I'm writing a piqi based rpc service; the toil utility (utils/
>>> toil.ml) can be used to parse some string arguments, read a file from
>>> the name given on the command line, and then output the BIL to stdout. I
>>> want to link with it as though it were a library in order that the returned
>>> data structured can be reasoned about in other languages.
>>>
>>> I have all the other parts-piqi build environment, compilation, setup;
>>> all I need is a good way to find a transform that accepts a string filename
>>> and returns a type of stmt. I'm not sure who all is familiar with BAP, but
>>> I think it's worth a try to ask if anybody knows exactly what I'm looking
>>> for, or the utility to find out.
>>>
>>>
>>> BAP: https://github.com/argp/bap
>>>
>>
>>
>

--e89a8f647009fccd09050827f62f
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Yeah, I tried to email them, but I couldn&#39;t get throug=
h to them. If you can explain how I can get through to be approved that wou=
ld be helpful. I thought the bap list was better, but =C2=A0I can&#39;t ema=
il to it.<div><br></div><div>At the current moment, I got the tidbit about =
stmt lists in =C2=A0piqi, I figured that out. Now I just need to get the pi=
qi compiler to produce equivalent types to what bap is compiled with by imp=
orting the module instead of copying the piqi files and including them; oca=
ml compiler is producing equivalent type definitions that are masked under =
different module names. My whole compilation has bap-0.8/ and BAP-Service u=
nder the same parent directory; when I try to import in piqi, I can&#39;t d=
o ../</div></div><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">=
On Tue, Nov 18, 2014 at 3:22 PM, Ivan Gotovchits <span dir=3D"ltr">&lt;<a h=
ref=3D"mailto:ivg@ieee.org" target=3D"_blank">ivg@ieee.org</a>&gt;</span> w=
rote:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;borde=
r-left:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Actually is is a g=
ood idea to look at the examples in a new BAP repository<div><br></div><div=
><a href=3D"https://github.com/BinaryAnalysisPlatform/bap/blob/master/lib/b=
ap_types/stmt.piqi" target=3D"_blank">https://github.com/BinaryAnalysisPlat=
form/bap/blob/master/lib/bap_types/stmt.piqi</a><br></div><div><br></div><d=
iv><br></div><div>In general, list can be declared as:</div><div><br></div>=
<div><div>.list [</div><div>=C2=A0 .name stmt-list</div><div>=C2=A0 .type s=
tmt</div><div>]</div></div><div><br></div><div>Also, there is a BAP-specifi=
c list that is more suited for this kind of questions.=C2=A0</div><div><br>=
</div></div><div class=3D"HOEnZb"><div class=3D"h5"><div class=3D"gmail_ext=
ra"><br><div class=3D"gmail_quote">On Tue, Nov 18, 2014 at 3:15 PM, Kenneth=
 Adam Miller <span dir=3D"ltr">&lt;<a href=3D"mailto:kennethadammiller@gmai=
l.com" target=3D"_blank">kennethadammiller@gmail.com</a>&gt;</span> wrote:<=
br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left=
:1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">Actually, I already disc=
overed the function that I was looking for.=C2=A0<div><br></div><div>Can an=
ybody tell me how you declare a list of a certain type in piqi?</div></div>=
<div><div><div class=3D"gmail_extra"><br><div class=3D"gmail_quote">On Tue,=
 Nov 18, 2014 at 3:01 PM, Kenneth Adam Miller <span dir=3D"ltr">&lt;<a href=
=3D"mailto:kennethadammiller@gmail.com" target=3D"_blank">kennethadammiller=
@gmail.com</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=
=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><div dir=
=3D"ltr"><p dir=3D"ltr">I have a single use case, and its complicated by my=
 clumsiness and new relationship with ocaml. I&#39;m not sure how to query =
libraries for various restrictions:</p><p>Basically, I&#39;m writing a piqi=
 based rpc service; the toil utility (utils/<a href=3D"http://toil.ml" targ=
et=3D"_blank">toil.ml</a>) can be used to parse some string arguments, read=
 a file from the name given on the command line, and then output the BIL to=
 stdout. I want to link with it as though it were a library in order that t=
he returned data structured can be reasoned about in other languages.=C2=A0=
</p><p>I have all the other parts-piqi build environment, compilation, setu=
p; all I need is a good way to find a transform that accepts a string filen=
ame and returns a type of stmt. I&#39;m not sure who all is familiar with B=
AP, but I think it&#39;s worth a try to ask if anybody knows exactly what I=
&#39;m looking for, or the utility to find out.</p><p><br></p><p>BAP:=C2=A0=
<a href=3D"https://github.com/argp/bap" target=3D"_blank">https://github.co=
m/argp/bap</a></p>
</div>
</blockquote></div><br></div>
</div></div></blockquote></div><br></div>
</div></div></blockquote></div><br></div>

--e89a8f647009fccd09050827f62f--
