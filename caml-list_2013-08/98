Return-Path: <oliver@first.in-berlin.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 3EE05820A1
	for <caml-list@sympa.inria.fr>; Sun, 18 Aug 2013 22:42:16 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=pra;
  client-ip=192.109.42.8;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=mailfrom;
  client-ip=192.109.42.8;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@einhorn.in-berlin.de) identity=helo;
  client-ip=192.109.42.8;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="postmaster@einhorn.in-berlin.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhICAD0xEVLAbSoIlGdsb2JhbABahya2VoZbFg4BAQEBCQsJCRQEJIJOehECBSECEQUYFYg/BJVljn+QTxaBE49UglIzdwOPH4hElHQ
X-IPAS-Result: AhICAD0xEVLAbSoIlGdsb2JhbABahya2VoZbFg4BAQEBCQsJCRQEJIJOehECBSECEQUYFYg/BJVljn+QTxaBE49UglIzdwOPH4hElHQ
X-IronPort-AV: E=Sophos;i="4.89,908,1367964000"; 
   d="scan'208";a="29669990"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 18 Aug 2013 22:42:15 +0200
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: <caml-list@inria.fr>
Received: from first (e178029176.adsl.alicedsl.de [85.178.29.176])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id r7IKgExZ016875
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <caml-list@inria.fr>; Sun, 18 Aug 2013 22:42:14 +0200
Received: by first (Postfix, from userid 1000)
	id 9919E1540135; Sun, 18 Aug 2013 22:42:13 +0200 (CEST)
Date: Sun, 18 Aug 2013 22:42:13 +0200
From: oliver <oliver@first.in-berlin.de>
To: caml-list@inria.fr
Message-ID: <20130818204213.GA7482@siouxsie>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
Subject: [Caml-list] Early GC'ing

Hello,

in a loop I read in a lot of files,
from which I just need to collect
a small portion of the data.

Right after reading and selecting what I needed,
I don't need any of the read file data.
The most stuff can just be thrown away.

What GC functions need to be called to throw away
the garbage soon?

Thats the first time I really need the GC-functions to
trigger by myself, because it's much data, of which
I need only a small portion.

So far I normally needed most of the data I read in
and the defaults of the GC were pretty fine for my tasks and taste.

This time a lot of mem is used...
...so GC functionality seems to be the way to go.


Are there general rules of thumb how to trigger GC
for a given kind of mem-handling (in my case: read data,
pick some parts of it and throw away the rest soon),
or is this something, where exploring the GC-statistics
is the common case (no rules of thumb?)?


Ciao,
   Oliver
