Return-Path: <armael.gueneau@ens-lyon.fr>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 5DF2D820A1
	for <caml-list@sympa.inria.fr>; Fri, 16 Aug 2013 13:45:39 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  armael.gueneau@ens-lyon.fr) identity=pra;
  client-ip=140.77.51.2;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="armael.gueneau@ens-lyon.fr";
  x-sender="armael.gueneau@ens-lyon.fr";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  armael.gueneau@ens-lyon.fr designates 140.77.51.2 as
  permitted sender) identity=mailfrom; client-ip=140.77.51.2;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="armael.gueneau@ens-lyon.fr";
  x-sender="armael.gueneau@ens-lyon.fr";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@jabiru.ens-lyon.fr) identity=helo;
  client-ip=140.77.51.2;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="armael.gueneau@ens-lyon.fr";
  x-sender="postmaster@jabiru.ens-lyon.fr";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnEAAJsPDlKMTTMCmWdsb2JhbABbhya8AoEmFg4BAQEBAQgLCwcUKIIkAQEEASMVQAYLCxoCBRYLAgIJAwIBAgFFEwgBAYgGBgSoTJEqgSmPLhaCUoEqA54Njko
X-IPAS-Result: AnEAAJsPDlKMTTMCmWdsb2JhbABbhya8AoEmFg4BAQEBAQgLCwcUKIIkAQEEASMVQAYLCxoCBRYLAgIJAwIBAgFFEwgBAYgGBgSoTJEqgSmPLhaCUoEqA54Njko
X-IronPort-AV: E=Sophos;i="4.89,894,1367964000"; 
   d="scan'208";a="29503004"
Received: from jabiru.ens-lyon.fr ([140.77.51.2])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 16 Aug 2013 13:45:38 +0200
Received: from localhost (localhost [127.0.0.1])
	by jabiru.ens-lyon.fr (Postfix) with ESMTP id E3F5D1EB0DB
	for <caml-list@inria.fr>; Fri, 16 Aug 2013 13:45:38 +0200 (CEST)
X-Virus-Scanned: by amavisd-new-2.6.4 (20090625) (Debian) at ens-lyon.fr
Received: from jabiru.ens-lyon.fr ([127.0.0.1])
	by localhost (jabiru.ens-lyon.fr [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id 8PZQasBx1u75 for <caml-list@inria.fr>;
	Fri, 16 Aug 2013 13:45:38 +0200 (CEST)
Received: from [192.168.1.16] (AToulouse-754-1-14-138.w90-55.abo.wanadoo.fr [90.55.53.138])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(Client did not present a certificate)
	by jabiru.ens-lyon.fr (Postfix) with ESMTPSA id 834521EB0CC
	for <caml-list@inria.fr>; Fri, 16 Aug 2013 13:45:38 +0200 (CEST)
Message-ID: <520E10E1.5020701@ens-lyon.fr>
Date: Fri, 16 Aug 2013 13:45:37 +0200
From: =?UTF-8?B?QXJtYcOrbCBHdcOpbmVhdQ==?= <armael.gueneau@ens-lyon.fr>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:17.0) Gecko/20130806 Thunderbird/17.0.8
MIME-Version: 1.0
To: caml-list@inria.fr
References: <520CB9C8.7010108@coherentgraphics.co.uk> <520E049C.5020502@ens-lyon.fr> <520E07AD.9010509@coherentgraphics.co.uk>
In-Reply-To: <520E07AD.9010509@coherentgraphics.co.uk>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 7bit
Subject: Re: [Caml-list] ANN: CamlPDF 1.7

> So 0o019 looks like a floating acute in that encoding, followed by a kern of 
> 486/1000 of a point to shift leftward, followed by an 'e'. So, this is an 
> accented character built by composition of glyphs.
>
>> For "efficient", with "ffi" being ligated, I get
>>
>> Pdfops_TJ (Pdf.Array [Pdf.String "e\014cient"])
>
> In the font in use here, character 0o014 appears to be a single glyph for the 
> ffi ligature.
Yes, ok. How do you know that? I mean, without knowing the displayed text.
Is there a way, knowing the glyph code (here, 0o019 or 0o014), to convert
it to something more "readable"? Like, hum, ['] for the floating acute, and [ffi]
for the ligature.

I tried to copy paste the text from the pdf using evince, and the floating acute
is indeed rendered separately, but the ligature is properly converted to "ffi".

I guess the interpretation of the glyph code depends on the font, but I don't
find how to do that with CamlPDF - using glyphnames_of_text just returned
only "/.notdef"...
