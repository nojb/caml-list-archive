Return-Path: <ygrek@autistici.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 449737ED99
	for <caml-list@sympa.inria.fr>; Tue, 26 May 2015 19:21:58 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  ygrek@autistici.org) identity=pra; client-ip=82.94.249.234;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ygrek@autistici.org";
  x-sender="ygrek@autistici.org"; x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  ygrek@autistici.org designates 82.94.249.234 as permitted
  sender) identity=mailfrom; client-ip=82.94.249.234;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ygrek@autistici.org";
  x-sender="ygrek@autistici.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  postmaster@latitanza.investici.org designates 82.94.249.234
  as permitted sender) identity=helo; client-ip=82.94.249.234;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="ygrek@autistici.org";
  x-sender="postmaster@latitanza.investici.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0CXBgCwqmRVh+r5XlJchELLAwIogR87EQEBAQEBAQERAQEBCgsJByMuQQEDAYNUCQEBAwE6BgEBNwEECwsJGCUPSBmFcYIzDK8xhVQBBZ5/AQEBAQEBBAEBAQEBFwaLOoQzAQFQB4J3gTaMRodoiW0BgSmGTyGPFoIJgjJPgQyBOwEBBQ
X-IPAS-Result: A0CXBgCwqmRVh+r5XlJchELLAwIogR87EQEBAQEBAQERAQEBCgsJByMuQQEDAYNUCQEBAwE6BgEBNwEECwsJGCUPSBmFcYIzDK8xhVQBBZ5/AQEBAQEBBAEBAQEBFwaLOoQzAQFQB4J3gTaMRodoiW0BgSmGTyGPFoIJgjJPgQyBOwEBBQ
X-IronPort-AV: E=Sophos;i="5.13,499,1427752800"; 
   d="scan'208";a="127876291"
Received: from latitanza.investici.org ([82.94.249.234])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 26 May 2015 19:21:57 +0200
Received: from [82.94.249.234] (latitanza [82.94.249.234]) (Authenticated sender: ygrek@autistici.org) by localhost (Postfix) with ESMTPSA id 6F11A120F8A
	for <caml-list@inria.fr>; Tue, 26 May 2015 17:21:54 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=autistici.org;
	s=stigmate; t=1432660914;
	bh=Y0cQ9R7ji/9yPc1BXMfFA8P6iHrcjepMggDUDKy4pdM=;
	h=Date:From:Cc:Subject:In-Reply-To:References;
	b=Pf+RLWehHD/0wX/a1mijX//0shurwg96xblRu/wSDUQoxeZEnnUclAtYDvTW4gFrB
	 CctqC3I6vOnP2c1uLscCmWKuhv7CUTbisRc/375kkXj5n3M5UvXxgRhANvfuXV8Ouj
	 28MALxG0OS0VpXlroko8j6c2yIKNFqsVzIDx6s04=
Date: Tue, 26 May 2015 10:21:46 -0700
From: ygrek <ygrek@autistici.org>
Cc: <caml-list@inria.fr>
Message-ID: <20150526102146.721d236c@kiwi.local.tld>
In-Reply-To: <CAM3Ki774wFiGHY2k2JBmhbXeVOC41jo23BXWq86em2uKnfJw8Q@mail.gmail.com>
References: <CABVpgLXPre+Q62RasDgjUPS_f2+7mPYSsvn+wBxvWTwnh2SrZQ@mail.gmail.com>
	<CAHvkLrPehoTDNn6qS-iM-6gQupr3GheOiNgqErZTW_XLF8707A@mail.gmail.com>
	<CAM3Ki774wFiGHY2k2JBmhbXeVOC41jo23BXWq86em2uKnfJw8Q@mail.gmail.com>
X-Mailer: Claws Mail 3.11.1 (GTK+ 2.24.25; x86_64-pc-linux-gnu)
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Subject: Re: [Caml-list] When to (not) use -no-naked-pointers?

On Tue, 26 May 2015 16:42:23 +0100
Mark Shinwell <mshinwell@janestreet.com> wrote:

> A bit more detail following on from Fabrice's mail.  A "naked pointer"
> is traditionally used to describe a non-immediate value that is
> scanned by the GC and points outside the OCaml heap.  However, in the
> context of the "-no-naked-pointers" configuration option, there is a
> more specific meaning.  When the system is configured in this mode any
> naked pointer (an undesirable thing in any case) must be
> dereferenceable without a fault and point at a block that has the
> basic structure of an OCaml value.  In particular, there must be a
> valid header one word prior.  Such headers should be coloured black;
> if they are in read-only memory, they must be coloured black.

Hi,

 I wonder if there is a C define in caml runtime headers to test for this configuration feature?
 Because naturally the bindings author knows whether his code is compatible with this mode or not
 and could assert that during the build.. 

-- 
