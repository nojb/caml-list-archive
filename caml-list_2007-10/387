Return-Path: <ecc@cmu.edu>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 3B249BC69
	for <caml-list@yquem.inria.fr>; Thu, 18 Oct 2007 17:04:13 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aq4HAE4TF0eAArkpbWdsb2JhbACBWoxzCwQGCQcZ
X-IronPort-AV: E=Sophos;i="4.21,295,1188770400"; 
   d="scan'208";a="4729810"
Received: from chokecherry.srv.cs.cmu.edu ([128.2.185.41])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 18 Oct 2007 17:04:12 +0200
Received: from stratocaster.home (c-71-206-252-35.hsd1.pa.comcast.net [71.206.252.35])
	(authenticated bits=0)
	by chokecherry.srv.cs.cmu.edu (8.13.6/8.13.6) with ESMTP id l9IF4Ax3023697
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Thu, 18 Oct 2007 11:04:10 -0400 (EDT)
Received: from ecc by stratocaster.home with local (Exim 4.67)
	(envelope-from <ecc@cmu.edu>)
	id 1IiWuu-0000r1-J0
	for caml-list@yquem.inria.fr; Thu, 18 Oct 2007 11:04:08 -0400
Date: Thu, 18 Oct 2007 11:04:08 -0400
From: Eric Cooper <ecc@cmu.edu>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Help me find this pdf
Message-ID: <20071018150408.GA3046@stratocaster.home>
Mail-Followup-To: caml-list@yquem.inria.fr
References: <c1490a380710180252u37034212l9d9ee28a22dca9cc@mail.gmail.com> <200710181325.30668.jon@ffconsultancy.com> <20071018.214610.22513172.garrigue@math.nagoya-u.ac.jp> <200710181457.58077.jon@ffconsultancy.com> <47176C28.1090509@janestcapital.com> <47177326.6060202@fischerventure.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <47177326.6060202@fischerventure.com>
User-Agent: Mutt/1.5.16 (2007-06-11)
X-Spam: no; 0.00; haskell:01 haskell:01 foo:01 psychic:98 wrote:01 caml-list:01 lazy:02 lazy:02 explicitly:02 match:02 match:02 languages:03 programming:03 programming:03 pattern:04 

On Thu, Oct 18, 2007 at 09:52:22AM -0500, Robert Fischer wrote:
>> You have to explicitly force the lazy value first- but other than it being 
>> explicit, this is no different from other languages that implicitly force 
>> the value for you.  Well, Haskell has an option where a pattern match can 
>> always succeed that doesn't necessarily force the lazy value (I forget 
>> what it's called at the moment), but baring that, even standard Haskell 
>> pattern matching forces the value for the match.
> ...which is pretty much how it is going to have to work until someone 
> builds a programming language with psychic precognition.

Whose reference manual would have to be called
    The Minority Report on the Programming Language Foo :-)

-- 
Eric Cooper             e c c @ c m u . e d u

