Return-Path: <skaller@users.sourceforge.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 8079FBC6B
	for <caml-list@yquem.inria.fr>; Tue,  9 Oct 2007 01:05:40 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAPJUCkfLENaMnmdsb2JhbACORQEBAQEHBAYRGA
X-IronPort-AV: E=Sophos;i="4.21,244,1188770400"; 
   d="scan'208";a="17607447"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 09 Oct 2007 01:05:40 +0200
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id l98N5dLh014823
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Tue, 9 Oct 2007 01:05:40 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAPJUCkfLENaMnmdsb2JhbACORQEBAQEHBAYRGA
X-IronPort-AV: E=Sophos;i="4.21,244,1188770400"; 
   d="scan'208";a="17607446"
Received: from ipmail01.adl2.internode.on.net ([203.16.214.140])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 09 Oct 2007 01:05:37 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAANdSCkd5LCRsVWdsb2JhbAAMji8BIA
X-IronPort-AV: E=Sophos;i="4.21,244,1188743400"; 
   d="scan'208";a="206582714"
Received: from ppp121-44-36-108.lns10.syd7.internode.on.net (HELO [192.168.1.201]) ([121.44.36.108])
  by ipmail01.adl2.internode.on.net with ESMTP; 09 Oct 2007 08:35:04 +0930
Subject: Re: [Caml-list] Correct way of programming a CGI script
From: skaller <skaller@users.sourceforge.net>
To: caml-list@inria.fr
In-Reply-To: <20071009082147.657017dc.mle+ocaml@mega-nerd.com>
References: <c1490a380710080808h521f88b0p340dcc761d71fd06@mail.gmail.com>
	 <1191859489.10162.16.camel@localhost.localdomain>
	 <1191879429.28011.27.camel@rosella.wigram>
	 <20071009082147.657017dc.mle+ocaml@mega-nerd.com>
Content-Type: text/plain
Date: Tue, 09 Oct 2007 09:05:03 +1000
Message-Id: <1191884703.26491.9.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.10.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 470AB7C3.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 endline:01 ocaml's:01 4.5:98 sourceforge:01 wrote:01 wrote:01 caml-list:01 strings:01 strings:01 binary:02 idiomatic:02 string:02 python:03 

On Tue, 2007-10-09 at 08:21 +1000, Erik de Castro Lopo wrote:
> skaller wrote:

> While I agree that yes, it is possible to write slow code in Ocaml
> (or any other language), I suspect that idiomatic Ocaml string handling
> compiled to a binary is just as fast if not faster than Java/Perl/Python/
> Ruby/PHP/whatever.

Fraid not. Python eats Ocaml alive. Python:

s= "a"
x = ""
for i in xrange(0,10000000):
  x = x+s
print "done"

Time: 6 seconds. Without optimisation switched on.

Ocaml:
let x = ref "";;
let  s = "a";;
for i = 0 to 100000 do
  x:= !x ^ s
done;;
print_endline "done";;

Time: 4.5 seconds.

Notice one TINY difference ... Ocaml is processing only 100K strings.
Python is processing 10 MILLION strings in about the same time.

I cannot measure Ocaml's performance when the number is increased
to even 1 million because I have run out of coffee.


-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

