Return-Path: <Sebastien.Hinderer@ens-lyon.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 17504BC6B
	for <caml-list@yquem.inria.fr>; Tue, 30 Oct 2007 16:58:44 +0100 (CET)
X-IronPort-AV: E=Sophos;i="4.21,347,1188770400"; 
   d="scan'208";a="18771468"
Received: from zen.loria.fr (HELO localhost.localdomain) ([152.81.6.135])
  by mail4-relais-sop.national.inria.fr with ESMTP/TLS/AES256-SHA; 30 Oct 2007 16:58:43 +0100
Received: from seb by localhost.localdomain with local (Exim 4.68)
	(envelope-from <Sebastien.Hinderer@ens-lyon.org>)
	id 1ImtUJ-0001cc-Js; Tue, 30 Oct 2007 16:58:43 +0100
Date: Tue, 30 Oct 2007 16:58:43 +0100
From: =?iso-8859-1?Q?S=E9bastien?= Hinderer <Sebastien.Hinderer@ens-lyon.org>
To: caml-list@yquem.inria.fr, Caml List <caml-list@inria.fr>
Subject: Re: Re: Patch to 3.10.0 compiler enabling simple spell-checking
Message-ID: <20071030155843.GA6227@zen>
Mail-Followup-To: caml-list@yquem.inria.fr,
	Caml List <caml-list@inria.fr>
References: <47264C70.5050100@gmail.com> <20071030081524.GC3818@galois> <472752AE.7050600@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <472752AE.7050600@gmail.com>
X-Spam: no; 0.00; ens-lyon:01 compiler:01 traversing:01 edgar:98 wrote:01 typing:01 corrections:01 tree:02 tree:02 restrict:02 identifier:04 identifier:04 identifiers:04 proposals:05 fails:05 

Edgar Friendly :
> Sébastien Hinderer wrote:
> > Sounds great! Just out of curiosity: does the patch take into account
> > typing information to restrict the proposals to identifiers with a
> > compatible type ?
> > If it does not, is it because it would be too difficult to gather all the
> > necessary information ?
> It does.  It works by wrapping the tree lookup for an identifier
> (separate trees are kept for each "compatible type" of identifier), and
> if that fails, traversing the tree once more to find corrections.

Wow... Definitely great.
Sébastien.

