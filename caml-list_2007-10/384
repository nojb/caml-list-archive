Return-Path: <robert@fischerventure.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 58F45BC69
	for <caml-list@yquem.inria.fr>; Thu, 18 Oct 2007 16:52:27 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAGIQF0fQccgFfWdsb2JhbACOTQIJBAYCDxEH
X-IronPort-AV: E=Sophos;i="4.21,295,1188770400"; 
   d="scan'208";a="18219006"
Received: from lax-green-bigip-5.dreamhost.com (HELO looneymail-a4.g.dreamhost.com) ([208.113.200.5])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 18 Oct 2007 16:52:26 +0200
Received: from carols-computer-3.local (unknown [74.202.102.226])
	by looneymail-a4.g.dreamhost.com (Postfix) with ESMTP id 1B79812606F;
	Thu, 18 Oct 2007 07:52:22 -0700 (PDT)
Message-ID: <47177326.6060202@fischerventure.com>
Date: Thu, 18 Oct 2007 09:52:22 -0500
From: Robert Fischer <robert@fischerventure.com>
User-Agent: Thunderbird 2.0.0.6 (Macintosh/20070728)
MIME-Version: 1.0
To: Brian Hurt <bhurt@janestcapital.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Help me find this pdf
References: <c1490a380710180252u37034212l9d9ee28a22dca9cc@mail.gmail.com>	<200710181325.30668.jon@ffconsultancy.com>	<20071018.214610.22513172.garrigue@math.nagoya-u.ac.jp>	<200710181457.58077.jon@ffconsultancy.com> <47176C28.1090509@janestcapital.com>
In-Reply-To: <47176C28.1090509@janestcapital.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; haskell:01 haskell:01 psychic:98 caml-list:01 lazy:02 lazy:02 explicitly:02 match:02 match:02 languages:03 programming:03 pattern:04 pattern:04 explicit:04 implicitly:05 


> You have to explicitly force the lazy value first- but other than it 
> being explicit, this is no different from other languages that 
> implicitly force the value for you.  Well, Haskell has an option where 
> a pattern match can always succeed that doesn't necessarily force the 
> lazy value (I forget what it's called at the moment), but baring that, 
> even standard Haskell pattern matching forces the value for the match.
...which is pretty much how it is going to have to work until someone 
builds a programming language with psychic precognition.

~~ Robert.

