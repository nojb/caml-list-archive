Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 0BEC1BC6B
	for <caml-list@yquem.inria.fr>; Sat, 13 Oct 2007 16:51:40 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ao8CALp3EEfUnw7XiGdsb2JhbACCOIwQAQEBCAQGCCGBJw
X-IronPort-AV: E=Sophos;i="4.21,270,1188770400"; 
   d="scan'208";a="2966947"
Received: from fhw-relay07.plus.net ([212.159.14.215])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 13 Oct 2007 16:51:39 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by fhw-relay07.plus.net with esmtp (Exim) id 1IgiL4-000866-G0
	for caml-list@yquem.inria.fr; Sat, 13 Oct 2007 15:51:39 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] A labltk book?
Date: Sat, 13 Oct 2007 15:43:04 +0100
User-Agent: KMail/1.9.7
References: <348721.45512.qm@web54604.mail.re2.yahoo.com>
In-Reply-To: <348721.45512.qm@web54604.mail.re2.yahoo.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200710131543.04954.jon@ffconsultancy.com>
X-Spam: no; 0.00; labltk:01 swig:01 lib:01 bindings:01 bindings:01 lablgtk:01 gtk:01 wwwfun:01 olabl:01 lablgtk:01 compiler:01 ocaml:01 ocaml:01 kde:01 saner:01 

On Friday 12 October 2007 22:58:42 Dario Teixeira wrote:
> > you have to go via C so it's much work and the available tools to do the
> > automagically aren't good enaugh to do it  (ok, there is swig, but I
> > don't like  the way the binding is generated).
> > There exists the smoke project, it a lib to interface qt and python or
> > ruby use it to bind to qt (and the next perl qt will also you smoke).
> > Maybe that'a
>
> I reckon that native bindings might therefore prove nearly impossible!
> Two alternate routes have occurred to me though.  The first involves
> the Ocaml-Java project and Qt-Jambi bindings (basically Qt on the JVM):

The LablGTK2 bindings to GTK2 by Jacques Garrigue et al. are simply superb 
(robust, efficient and easy to use):

  http://wwwfun.kurims.kyoto-u.ac.jp/soft/olabl/lablgtk.html

SooHyoung Oh has kindly written an awesome tutorial about LablGTK2:

  http://compiler.kaist.ac.kr/~shoh/ocaml/lablgtk2/lablgtk2-tutorial/

> The second route involves the OCamIL project (OCaml on .NET) and
> the Qyoto/Kimono bindings (Qt/KDE bindings for .NET):

Might I suggest that using Microsoft's F# and Microsoft's Windows Forms 
from .NET is an infinitely saner way to approach GUI programming on 
Microsoft's platforms. :-)

Only now that I'm working on Java and Scala code in Eclipse have I come to 
appreciate the awesome combo that F#'s VS mode and Windows Forms provide. 
Although the final GUI code is similar in size between LablGTK/OCaml and 
F#/Windows Forms, developing code in Visual Studio is vastly easier because 
Intellisense lets you explore APIs graphically with no effort.

I would dearly love to see a GUI IDE for OCaml written in OCaml that combined 
simplicity with such a rich form of information throwback.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

