Return-Path: <vincent.aravantinos@yahoo.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.4 required=5.0 tests=AWL,DNS_FROM_RFC_ABUSE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 07736BC6B
	for <caml-list@yquem.inria.fr>; Tue, 30 Oct 2007 20:03:01 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAMgcJ0fAXQImh2dsb2JhbACOYQIBCAop
X-IronPort-AV: E=Sophos;i="4.21,348,1188770400"; 
   d="scan'208";a="18778243"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 30 Oct 2007 20:03:00 +0100
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l9UJ2xDe001934
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Tue, 30 Oct 2007 20:03:00 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAA4cJ0fZDAs+g2dsb2JhbACOYQIBCAQGEREH
X-IronPort-AV: E=Sophos;i="4.21,348,1188770400"; 
   d="scan'208";a="5293774"
Received: from smtp008.mail.ukl.yahoo.com ([217.12.11.62])
  by mail3-smtp-sop.national.inria.fr with SMTP; 30 Oct 2007 20:02:59 +0100
Received: (qmail 43524 invoked from network); 30 Oct 2007 19:02:58 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.fr;
  h=Received:X-YMail-OSG:In-Reply-To:References:Mime-Version:Content-Type:Message-Id:Cc:Content-Transfer-Encoding:From:Subject:Date:To:X-Mailer;
  b=vUrAugdxFv0B2/dsV35Qrl3MkUpaz9z7h2c0gHOj9WYSS4T4i1xsqNtBqQNpktfRE6Nv+97zHLCZNd6iLaYqz8kHq6+u4pJNwxcAbii3yErwM3Vr1EMiu0BPaGuAGiRdtCgf31AM/ddEI4qTF/utk4/YgcSSCtASgGl7dXnMLi4=  ;
Received: from unknown (HELO ?192.168.0.11?) (vincent.aravantinos@82.229.199.66 with plain)
  by smtp008.mail.ukl.yahoo.com with SMTP; 30 Oct 2007 19:02:58 -0000
X-YMail-OSG: i7AA4qgVM1nzAQko6DLJQSBjovwb_jUgzpIL1Fss3CJoS1B5i6LTccz0TgHgdFX9k6r1SIfqag--
In-Reply-To: <1193766983.7594.15.camel@rosella.wigram>
References: <1193225773.3612.27.camel@Blefuscu> <471F7F7B.9040905@fmf.uni-lj.si> <666572260710241205x19edbd4ar840811b1d7a7315f@mail.gmail.com> <5i2kv4-hmj.ln1@mantle.rutgers.edu> <47275E10.4070705@janestcapital.com> <47276500.3050501@gmail.com> <1193766983.7594.15.camel@rosella.wigram>
Mime-Version: 1.0 (Apple Message framework v752.2)
Content-Type: text/plain; charset=ISO-8859-1; delsp=yes; format=flowed
Message-Id: <27F204A8-D45A-4CBF-84BB-BB0A23A261CA@yahoo.fr>
Cc: Gurus Ocaml <caml-list@inria.fr>
Content-Transfer-Encoding: quoted-printable
From: Vincent Aravantinos <vincent.aravantinos@yahoo.fr>
Subject: Re: [Caml-list] Re: Which syntax to teach ?
Date: Tue, 30 Oct 2007 20:02:56 +0100
To: skaller <skaller@users.sourceforge.net>
X-Mailer: Apple Mail (2.752.2)
X-Miltered: at discorde with ID 47277FE3.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; syntax:01 functors:01 functors:01 functor:01 ocaml:01 functor:01 ocaml:01 edgar:98 wrote:01 wrote:01 caml-list:01 functions:01 structures:02 parameter:02 objects:02 


Le 30 oct. 07 =E0 18:56, skaller a =E9crit :

> On Tue, 2007-10-30 at 12:08 -0500, Edgar Friendly wrote:
>> Brian Hurt wrote:
>>> Chung-chieh Shan wrote:
>>>
>>>> Any tips on how (and perhaps how not) to teach functors?
>
> The problem teaching functors is that the essential feature
> of functors is missing -- a functor is a structure preserving
> map but there's no way to specify any structure other than
> in comments.

Indeed, I don't really see the link between Ocaml functors and =20
Category ones (???). Could someone explain this ?

Classically, types would be the objects and functions would be the =20
arrows. But then a functor does not map a type to each original type =20
neither a function to each original function. So what ?

Maybe we could see all the module structures associated to a module =20
signature form a category ? And then a (ocaml) functor would indeed =20
be a (category) functor from the category associated to the signature =20=

of the parameter to the category of its returned module type. (?)

Is this the way to go ? I thing I've read once that it was linked =20
with "institutions" theory (of Goguen), is this right ?

Thanks for answers,
Vincent=

