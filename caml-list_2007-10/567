Return-Path: <yitzhakm@CS.Princeton.EDU>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL,HTML_MESSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 29E40BC6B
	for <caml-list@yquem.inria.fr>; Tue, 30 Oct 2007 01:17:38 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAABYVJkeAcIhIh2dsb2JhbACCcottAQEBCAopgRM
X-IronPort-AV: E=Sophos;i="4.21,345,1188770400"; 
   d="scan'208,217";a="3810110"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 30 Oct 2007 01:17:36 +0100
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id l9U0HYLc025299
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Tue, 30 Oct 2007 01:17:35 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAABYVJkeAcIhIh2dsb2JhbACCcottAQEBCAopgRM
X-IronPort-AV: E=Sophos;i="4.21,345,1188770400"; 
   d="scan'208,217";a="3810107"
Received: from redflag.cs.princeton.edu ([128.112.136.72])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 30 Oct 2007 01:17:34 +0100
Received: from [192.168.0.100] (H-135-207-240-26.research.att.com [135.207.240.26])
	(authenticated bits=0)
	by redflag.CS.Princeton.EDU (8.13.8/8.13.8) with ESMTP id l9U0HEXi012375
	(version=TLSv1/SSLv3 cipher=AES128-SHA bits=128 verify=NOT)
	for <caml-list@inria.fr>; Mon, 29 Oct 2007 20:17:17 -0400 (EDT)
Mime-Version: 1.0 (Apple Message framework v752.3)
In-Reply-To: <47264C70.5050100@gmail.com>
References: <47264C70.5050100@gmail.com>
Content-Type: multipart/alternative; boundary=Apple-Mail-52-647866041
Message-Id: <45E766F6-29C7-4710-8E32-9C6007A516FF@cs.princeton.edu>
From: Yitzhak Mandelbaum <yitzhakm@CS.Princeton.EDU>
Subject: Re: [Caml-list] Patch to 3.10.0 compiler enabling simple spell-checking
Date: Mon, 29 Oct 2007 20:17:10 -0400
To: Caml List <caml-list@inria.fr>
X-Mailer: Apple Mail (2.752.3)
X-Proofpoint-Virus-Version: vendor=nai engine=5.2.00 definitions=5151 signatures=335511
X-Proofpoint-Spam-Details: rule=notspam policy=default score=0 classifier= adjust=0 reason=safe engine=3.1.0-0708230000 definitions=main-0710290155
X-Proofpoint-Spam-Level: 
X-Miltered: at discorde with ID 4726781E.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; yitzhak:01 mandelbaum:01 compiler:01 compiler:01 ocamlc:01 parses:01 cheers:01 yitzhak:01 ocamlc:01 lablgtk:01 lablgtk:01 gtkinit:01 cmo:01 compilation:01 spellings:01 


--Apple-Mail-52-647866041
Content-Transfer-Encoding: 7bit
Content-Type: text/plain;
	charset=US-ASCII;
	delsp=yes;
	format=flowed

Very cool! Do you think there's any way you could separate it from  
the compiler, like Learner et al.'s SEMINAL work, which separates  
type error messages from the compiler?. Separation could help ensure  
this (and any other, similar) ideas don't accidentally introduce bugs  
into the compiler, and make it much easier for you to maintain. A  
very simple hack might be tod wrap ocamlc in a script that parses  
such error messages and then tokenizes the source file, looking for  
similar strings?

Cheers,
Yitzhak

On Oct 29, 2007, at 5:11 PM, Edgar Friendly wrote:

> One random little feature of GNAT that comes in handy for me is its
> habit of, when I misspell an identifier, giving me a possible  
> correction
> in its compile error message.  Spending some time with the 3.10.0
> sources, I have created a "second draft" patch creating this
> functionality in my favored language.
>
> Example:
> ========
>
> # /home/thelema/Projects/ocaml-custom/bin/ocamlc -o coml -I +lablgtk2
> lablgtk.cma gtkInit.cmo coml.ml
> File "coml.ml", line 61, characters 16-25:
> Unbound value is_arcive, possible misspelling of is_archive
>
> Impacts:
> ========
>
> Efficiency in the case of finding a mistake should be quite good,
> although this shouldn't matter too much since the compiler quits  
> pretty
> early in compilation when it finds an unbound identifier.
>
> In the case of no unbound identifiers, the cost is an extra try/with
> block around the standard lookup.  I haven't made any benchmarks,  
> though.
>
> I expect this code to have little long term maintenance issues - the
> major source of code changes was adding a "* string list" to a  
> number of
> exceptions to carry the list of possible correct spellings to the  
> point
> they get output by the compiler.  These exceptions are still usable as
> before with an empty list in this spot.
>
> It's possible the code has created opportunities for uncaught  
> exceptions
> in the compiler as I only checked for instances of "Not_found" in a  
> few
> files -- those which dealt with the Unbound_* exceptions.  Someone who
> knows the internals better might find places the "Found_nearly"
> exception that carries possible corrections might escape into.
>
>
> Dedicated to:
> Yaron Minsky and the team at Jane Street
>
> E.

-----------------------------
Yitzhak Mandelbaum




--Apple-Mail-52-647866041
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=ISO-8859-1

<HTML><BODY style=3D"word-wrap: break-word; -khtml-nbsp-mode: space; =
-khtml-line-break: after-white-space; "><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">Very cool! Do =
you think there's any way you could separate it from the compiler, like =
Learner et al.'s SEMINAL work, which separates type error messages from =
the compiler?. Separation could help ensure this (and any other, =
similar) ideas don't accidentally introduce bugs into the compiler, and =
make it much easier for you to maintain. A very simple hack might be tod =
wrap ocamlc in a script that parses such error messages and then =
tokenizes the source file, looking for similar strings?</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; font: normal normal normal 12px/normal Helvetica; =
min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =
">Cheers,</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">Yitzhak</DIV><BR><DIV><DIV>On =
Oct 29, 2007, at 5:11 PM, Edgar Friendly wrote:</DIV><BR =
class=3D"Apple-interchange-newline"><BLOCKQUOTE type=3D"cite"><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; ">One random little feature of GNAT that comes in =
handy for me is its</DIV><DIV style=3D"margin-top: 0px; margin-right: =
0px; margin-bottom: 0px; margin-left: 0px; ">habit of, when I misspell =
an identifier, giving me a possible correction</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; ">in its compile error message.<SPAN =
class=3D"Apple-converted-space">=A0 </SPAN>Spending some time with the =
3.10.0</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">sources, I have created a =
"second draft" patch creating this</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">functionality =
in my favored language.</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; min-height: =
14px; "><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">Example:</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; ">=3D=3D=3D=3D=3D=3D=3D=3D</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: =
0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; "># =
/home/thelema/Projects/ocaml-custom/bin/ocamlc -o coml -I =
+lablgtk2</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">lablgtk.cma gtkInit.cmo =
coml.ml</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">File "coml.ml", line 61, =
characters 16-25:</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">Unbound value is_arcive, =
possible misspelling of is_archive</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; min-height: =
14px; "><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">Impacts:</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; ">=3D=3D=3D=3D=3D=3D=3D=3D</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: =
0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =
">Efficiency in the case of finding a mistake should be quite =
good,</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">although this shouldn't matter =
too much since the compiler quits pretty</DIV><DIV style=3D"margin-top: =
0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">early in =
compilation when it finds an unbound identifier.</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: =
0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">In the =
case of no unbound identifiers, the cost is an extra try/with</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; ">block around the standard lookup.<SPAN =
class=3D"Apple-converted-space">=A0 </SPAN>I haven't made any =
benchmarks, though.</DIV><DIV style=3D"margin-top: 0px; margin-right: =
0px; margin-bottom: 0px; margin-left: 0px; min-height: 14px; =
"><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">I expect this code to have =
little long term maintenance issues - the</DIV><DIV style=3D"margin-top: =
0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">major =
source of code changes was adding a "* string list" to a number =
of</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: =
0px; margin-left: 0px; ">exceptions to carry the list of possible =
correct spellings to the point</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">they get =
output by the compiler.<SPAN class=3D"Apple-converted-space">=A0 =
</SPAN>These exceptions are still usable as</DIV><DIV style=3D"margin-top:=
 0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">before =
with an empty list in this spot.</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; min-height: =
14px; "><BR></DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">It's possible the code has =
created opportunities for uncaught exceptions</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; ">in the compiler as I only checked for instances of =
"Not_found" in a few</DIV><DIV style=3D"margin-top: 0px; margin-right: =
0px; margin-bottom: 0px; margin-left: 0px; ">files -- those which dealt =
with the Unbound_* exceptions.<SPAN class=3D"Apple-converted-space">=A0 =
</SPAN>Someone who</DIV><DIV style=3D"margin-top: 0px; margin-right: =
0px; margin-bottom: 0px; margin-left: 0px; ">knows the internals better =
might find places the "Found_nearly"</DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">exception =
that carries possible corrections might escape into.</DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: =
0px; margin-right: 0px; margin-bottom: 0px; margin-left: 0px; =
min-height: 14px; "><BR></DIV><DIV style=3D"margin-top: 0px; =
margin-right: 0px; margin-bottom: 0px; margin-left: 0px; ">Dedicated =
to:</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; ">Yaron Minsky and the team at =
Jane Street</DIV><DIV style=3D"margin-top: 0px; margin-right: 0px; =
margin-bottom: 0px; margin-left: 0px; min-height: 14px; "><BR></DIV><DIV =
style=3D"margin-top: 0px; margin-right: 0px; margin-bottom: 0px; =
margin-left: 0px; ">E.</DIV></BLOCKQUOTE></DIV><BR><DIV> <SPAN =
class=3D"Apple-style-span" style=3D"border-collapse: separate; =
border-spacing: 0px 0px; color: rgb(0, 0, 0); font-family: Helvetica; =
font-size: 12px; font-style: normal; font-variant: normal; font-weight: =
normal; letter-spacing: normal; line-height: normal; text-align: auto; =
-khtml-text-decorations-in-effect: none; text-indent: 0px; =
-apple-text-size-adjust: auto; text-transform: none; orphans: 2; =
white-space: normal; widows: 2; word-spacing: 0px; =
"><DIV>-----------------------------</DIV><DIV>Yitzhak =
Mandelbaum</DIV><DIV><BR class=3D"khtml-block-placeholder"></DIV><BR =
class=3D"Apple-interchange-newline"></SPAN> </DIV><BR></BODY></HTML>=

--Apple-Mail-52-647866041--

