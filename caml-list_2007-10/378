Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 5ECCDBC69
	for <caml-list@yquem.inria.fr>; Thu, 18 Oct 2007 16:06:38 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ao8CADQFF0fUnw7VhWdsb2JhbACCOIwWAgEIBAYPEwc
X-IronPort-AV: E=Sophos;i="4.21,295,1188770400"; 
   d="scan'208";a="4722099"
Received: from ptb-relay02.plus.net ([212.159.14.213])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 18 Oct 2007 16:06:37 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay02.plus.net with esmtp (Exim) id 1IiW1E-0007LX-GG
	for caml-list@yquem.inria.fr; Thu, 18 Oct 2007 15:06:36 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Help me find this pdf
Date: Thu, 18 Oct 2007 14:57:57 +0100
User-Agent: KMail/1.9.7
References: <c1490a380710180252u37034212l9d9ee28a22dca9cc@mail.gmail.com> <200710181325.30668.jon@ffconsultancy.com> <20071018.214610.22513172.garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <20071018.214610.22513172.garrigue@math.nagoya-u.ac.jp>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200710181457.58077.jon@ffconsultancy.com>
X-Spam: no; 0.00; haskell:01 fpls:01 iirc:01 ocaml:01 verbose:01 ocaml:01 3.1:98 frog:98 prolog:01 wrote:01 caml-list:01 lazy:02 lazy:02 caml:02 match:02 

On Thursday 18 October 2007 13:46:10 you wrote:
> From: Jon Harrop <jon@ffconsultancy.com>
> > Scala can do something similar by controlling evaluation simply by
> > altering the signature. However, I've reviewed Haskell recently and I
> > think complete laziness is more of a hindrance than a benefit. The only
> > think I'd like to see added to eager FPLs is the ability to pattern match
> > over lazy values, forcing them only when necessary.
>
> What! You want Caml V3.1 (released in 1991 IIRC)!
> I remember writing a lazy prolog interpreter using this feature.
>
> Lazyness in ocaml works too, but it's more verbose.

How do you pattern match over lazy values in OCaml? If I've missed that, it 
would be really cool to find out! :-)

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

