Return-Path: <robert@fischerventure.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL,HTML_MESSAGE,
	MIME_HTML_ONLY autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 85EE4BC6B
	for <caml-list@yquem.inria.fr>; Tue, 30 Oct 2007 14:20:23 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ao8CANnMJkfQccgFfWdsb2JhbACCPTWKSYEkAgkEBgIPEQc
X-IronPort-AV: E=Sophos;i="4.21,347,1188770400"; 
   d="scan'208,217";a="3734326"
Received: from lax-green-bigip-5.dreamhost.com (HELO looneymail-a1.g.dreamhost.com) ([208.113.200.5])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 30 Oct 2007 14:20:22 +0100
Received: from carols-computer-3.local (unknown [74.202.102.226])
	by looneymail-a1.g.dreamhost.com (Postfix) with ESMTP id 011B015F43A
	for <caml-list@yquem.inria.fr>; Tue, 30 Oct 2007 06:20:21 -0700 (PDT)
Message-ID: <47272F94.1030707@fischerventure.com>
Date: Tue, 30 Oct 2007 08:20:20 -0500
From: Robert Fischer <robert@fischerventure.com>
User-Agent: Thunderbird 2.0.0.6 (Macintosh/20070728)
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Preferred Way to Split a List
References: <47266DB7.1020009@SmokejumperIT.com> <200710300750.26912.jon@ffconsultancy.com>
In-Reply-To: <200710300750.26912.jon@ffconsultancy.com>
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; combinator:01 val:01 val:01 wrote:01 wrote:01 rec:01 caml-list:01 int:01 int:01 arbitrary:02 arbitrary:02 arg:03 tend:03 element:03 let:03 

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html;charset=ISO-8859-1" http-equiv="Content-Type">
</head>
<body bgcolor="#ffffff" text="#000000">
Thanks for the sane response.<br>
<br>
~~ Robert.<br>
<br>
Jon Harrop wrote:
<blockquote cite="mid:200710300750.26912.jon@ffconsultancy.com"
 type="cite">
  <pre wrap="">On Monday 29 October 2007 23:33, Robert Fischer wrote:
  </pre>
  <blockquote type="cite">
    <pre wrap="">What is the preferred way to split a list into two, at an arbitrary
point?  There's lots of ways you could do it, but I'm not sure if
there's a standard best practice for this.
    </pre>
  </blockquote>
  <pre wrap=""><!---->
I tend to write a combinator that nests an arbitrary number of function 
applications:

# let rec nest n f x =
    if n=0 then x else nest (n-1) f (f x);;
val nest : int -&gt; ('a -&gt; 'a) -&gt; 'a -&gt; 'a = &lt;fun&gt;

and then apply this to a function that moves head elements:

# let aux = function
    | front, h::back -&gt; h::front, back
    | _ -&gt; invalid_arg "aux";;
val aux : 'a list * 'a list -&gt; 'a list * 'a list = &lt;fun&gt;

Then I write a "chop" function in terms of those two:

# let chop n list =
    nest n aux ([], list);;
val chop : int -&gt; 'a list -&gt; 'a list * 'a list = &lt;fun&gt;

For example, splitting after the fourth element:

# chop 4 [1;2;3;4;5;6;7;8;9];;
- : int list * int list = ([4; 3; 2; 1], [5; 6; 7; 8; 9])

Note that the front list is reversed.

PS: Ignore any responses that even mention Obj.
  </pre>
</blockquote>
</body>
</html>

