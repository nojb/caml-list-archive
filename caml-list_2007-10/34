Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id B8341BC69
	for <caml-list@yquem.inria.fr>; Tue,  2 Oct 2007 23:17:38 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAMxRAkfUnw6Elmdsb2JhbACCN4t/AQEBAQcEBg8RBw
X-IronPort-AV: E=Sophos;i="4.21,221,1188770400"; 
   d="scan'208";a="3671127"
Received: from pih-relay05.plus.net ([212.159.14.132])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 02 Oct 2007 23:17:38 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay05.plus.net with esmtp (Exim) id 1Icp7Z-0002uC-F0
	for caml-list@yquem.inria.fr; Tue, 02 Oct 2007 22:17:37 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] best and fastest way to read lines from a file?
Date: Tue, 2 Oct 2007 22:07:56 +0100
User-Agent: KMail/1.9.7
References: <779bf2730710011427g5983da4cw6ad8b715a9e38771@mail.gmail.com> <1191353751.6668.47.camel@rosella.wigram> <e2d02be30710021405k177f1afpa9c25463ba7a885a@mail.gmail.com>
In-Reply-To: <e2d02be30710021405k177f1afpa9c25463ba7a885a@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200710022207.56972.jon@ffconsultancy.com>
X-Spam: no; 0.00; ocaml:01 exn:01 frog:98 polymorphic:01 wrote:01 signatures:01 caml-list:01 exceptions:01 undefined:01 constraint:01 parameters:03 parameters:03 function:08 suppose:09 file:11 

On Tuesday 02 October 2007 22:05:07 kirillkh wrote:
> Is it a deficiency in the language?

A constraint of the type system by design.

> I suppose OCaml could support 
> polymorphic exceptions, if they were checked, like in Java, and appeared in
> function signatures in a similar way to parameters and return values.

The exn type would need an undefined number of type parameters.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

