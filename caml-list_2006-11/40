Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id E4013BC69
	for <caml-list@yquem.inria.fr>; Thu,  9 Nov 2006 06:20:59 +0100 (CET)
Received: from ptb-relay02.plus.net (ptb-relay02.plus.net [212.159.14.213])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id kA95KxAo029302
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Thu, 9 Nov 2006 06:20:59 +0100
Received: from [80.229.56.224] (helo=[10.0.0.5])
	 by ptb-relay02.plus.net with esmtp (Exim) id 1Gi2LR-00046d-1C
	for caml-list@yquem.inria.fr; Thu, 09 Nov 2006 05:20:57 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] parameterized pattern
Date: Thu, 9 Nov 2006 05:19:45 +0000
User-Agent: KMail/1.9.5
References: <454FA5F8.5030106@hq.idt.net> <4a708d20611081555i1f860911rfb7a29d31a34ce7a@mail.gmail.com> <Pine.LNX.4.58.0611081737140.16269@shell3.speakeasy.net>
In-Reply-To: <Pine.LNX.4.58.0611081737140.16269@shell3.speakeasy.net>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200611090519.45998.jon@ffconsultancy.com>
X-Miltered: at concorde with ID 4552BABB.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 extensional:01 polymorphism:01 gcaml:01 ocaml:01 extensional:01 polymorphism:01 frog:98 wrote:01 caml-list:01 supported:01 caml:02 objective:02 pattern:04 i'm:09 

On Thursday 09 November 2006 01:45, brogoff wrote:
> It's a pity, as I've often wished that OCaml supported the extensional
> polymorphism that GCaml has, but I don't think that's going to happen.
> It would probaby make more sense to create a separate language at this
> point, since OCaml is complicated enough.

I think F# provides some form of extensional polymorphism. I'm not convinced 
that it is a good idea yet...

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Objective CAML for Scientists
http://www.ffconsultancy.com/products/ocaml_for_scientists

