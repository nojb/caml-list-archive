Return-Path: <jhwoodyatt@mac.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from discorde.inria.fr (discorde.inria.fr [192.93.2.38])
	by yquem.inria.fr (Postfix) with ESMTP id 10AA6BC0A
	for <caml-list@yquem.inria.fr>; Thu, 30 Nov 2006 04:07:53 +0100 (CET)
Received: from smtpout.mac.com (smtpout.mac.com [17.250.248.183])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id kAU37orj007149
	for <caml-list@inria.fr>; Thu, 30 Nov 2006 04:07:51 +0100
Received: from mac.com (smtpin03-en2 [10.13.10.148])
	by smtpout.mac.com (Xserve/8.12.11/smtpout13/MantshX 4.0) with ESMTP id kAU37ovR028115
	for <caml-list@inria.fr>; Wed, 29 Nov 2006 19:07:50 -0800 (PST)
Received: from [10.0.1.200] ([17.255.149.157])
	(authenticated bits=0)
	by mac.com (Xserve/smtpin03/MantshX 4.0) with ESMTP id kAU37m2R008440
	for <caml-list@inria.fr>; Wed, 29 Nov 2006 19:07:49 -0800 (PST)
In-Reply-To: <1965df800611291633q4f615df5qaa43dc967ba87d56@mail.gmail.com>
References: <1965df800611291633q4f615df5qaa43dc967ba87d56@mail.gmail.com>
Mime-Version: 1.0 (Apple Message framework v752.2)
Content-Type: text/plain; charset=WINDOWS-1252; delsp=yes; format=flowed
Message-Id: <1FB91514-18D1-4502-AF67-C1003EB8636B@mac.com>
Reply-To: j h woodyatt <jhw@conjury.org>
Content-Transfer-Encoding: quoted-printable
From: James Woodyatt <jhwoodyatt@mac.com>
Subject: Re: [Caml-list] Can GC be BLOCKed?
Date: Wed, 29 Nov 2006 19:07:47 -0800
To: The Caml Trade <caml-list@inria.fr>
X-Mailer: Apple Mail (2.752.2)
X-Brightmail-Tracker: AAAAAA==
X-Brightmail-scanned: yes
X-Spam: no; 0.00; woodyatt:01 ocaml:01 verbose:01 woodyatt:01 jhw:01 jhw:01 larson:98 winning:98 heap:01 wrote:01 wrote:01 workaround:01 caml-list:01 explicitly:01 modifying:02 

On Nov 29, 2006, at 4:33 PM, Neal Wang wrote:
>
> I have a function which cannot be interrupted by GC?  Is there a =20
> way to BLOCK GC when the function is called.  Thanks

We're getting some interesting spam on the OCaml list now.  Just =20
after the message above appeared in my inbox, there came the =20
following...

On Nov 29, 2006, at 5:22 PM, Rosendo Larson wrote:
>
> The lot is cast into the heap, but the whole disposing there of is =20
> of the Lord. There never was a great soul that did not have some =20
> divine inspiration.

At first, I thought this was intended to be a serious response to the =20=

question.

I don't think you can stop collection from happening by explicitly =20
blocking it in the GC, but if you know how much memory your function =20
will allocate, you might be able to get a winning workaround by =20
modifying the GC control parameters for space_overhead and =20
major_head_increment.  Use the verbose flag to see if your function =20
is triggering the collection phase.


=97
j h woodyatt <jhw@conjury.org>
http://jhw.vox.com/

