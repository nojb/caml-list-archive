Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA08367 for caml-redistribution; Wed, 16 Apr 1997 13:57:56 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id FAA09114 for <caml-list@pauillac.inria.fr>; Tue, 15 Apr 1997 05:50:42 +0200 (MET DST)
Received: from www.nextsolution.co.jp (news.nextsolution.co.jp [202.33.245.114]) by nez-perce.inria.fr (8.7.6/8.7.3) with SMTP id FAA23306 for <caml-list@inria.fr>; Tue, 15 Apr 1997 05:50:39 +0200 (MET DST)
Received: from sparc3.co.jp (sparc3 [202.235.80.3]) by www.nextsolution.co.jp (SMI-8.6/) with ESMTP id MAA08567 for <caml-list@inria.fr>; Tue, 15 Apr 1997 12:49:16 +0900
Received: by sparc3.co.jp (SMI-8.6/SMI-SVR4)
	id MAA00453; Tue, 15 Apr 1997 12:51:38 +0900
Date: Tue, 15 Apr 1997 12:51:38 +0900
Message-Id: <199704150351.MAA00453@sparc3.co.jp>
From: Frank Christoph <christo@nextsolution.co.jp>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
To: caml-list@inria.fr
Subject: threads library in Objective Caml
In-Reply-To: <E0wGiAL-0003qE-00@heaton.cl.cam.ac.uk>
References: <E0wGiAL-0003qE-00@heaton.cl.cam.ac.uk>
X-Mailer: VM 6.22 under 19.15 XEmacs Lucid
Sender: weis

>>>>> "Pawel" == Pawel Wojciechowski <Pawel.Wojciechowski@cl.cam.ac.uk> writes:
> The potential advantage of threads is that on a multiprocessor shared memory
> machine, each thread can run on a different processor. However, in the
> (O)Caml documentation is written as follows: "The `threads' library is
> implemented by time-sharing on a single processor. It will not take
> advantage of multi- -processor machines. Using this library will therefore
> never make programs run faster".

You make it sound like the only point of threads is to take advantage of
parallelism when the program is running on a multiprocessor machine.  A lot of
people use threads for reasons that have nothing to do with (objective notions
of) performance, for example in GUI programming.  By your logic, there
would seem to be no point in emulating concurrency on a sequential machine at
all.

-- 
Frank Christoph                 Next Solution Co.      Tel: 0424-98-1811
christo@nextsolution.co.jp                             Fax: 0424-98-1500




