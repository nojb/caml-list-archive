Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA25566 for caml-redistribution; Mon, 14 Apr 1997 15:42:52 +0200 (MET DST)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA01159 for <caml-list@pauillac.inria.fr>; Fri, 11 Apr 1997 14:18:00 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35]) by concorde.inria.fr (8.7.6/8.7.3) with ESMTP id OAA00776 for <caml-list@inria.fr>; Fri, 11 Apr 1997 14:17:59 +0200 (MET DST)
Received: from localhost (localhost [127.0.0.1]) by pauillac.inria.fr (8.7.6/8.7.3) with SMTP id OAA01155 for <caml-list@inria.fr>; Fri, 11 Apr 1997 14:17:59 +0200 (MET DST)
Message-Id: <199704111217.OAA01155@pauillac.inria.fr>
X-Authentication-Warning: pauillac.inria.fr: Host localhost [127.0.0.1] didn't use HELO protocol
To: caml-list@inria.fr
Subject: Re: [English only, sorry] O'Labl hands off the standard library? 
In-reply-to: Your message of Fri, 11 Apr 1997 00:28:16 -0700.
             <199704110728.AAA02160@kronstadt.rahul.net> 
Date: Fri, 11 Apr 1997 14:17:58 +0200
From: "Jun P. Furuse" <Jun.Furuse@inria.fr>
Sender: weis

> Hi.  I'm quite intrigued by the polymorphic variant type system
> extension in O'Labl and I would like to try it; but I thoroughly
> dislike the other parts of O'Labl (labels and optionals).  Is there a
> way to apply just parts of the Ocaml -> O'Labl patch to get just the
> polymorphic variants and nothing else?  I realize that nothing forces
> me to actually _use_ labels and optionals, except --- the standard
> library gets labelized!  So, I'd be willing to have the entire compiler
> patch applied, if only the library is left alone.  Please?

O'Labl without labels ... It is no longer O'Labl ... Anyway, use olabl
or olablc with the -nolabels command line option. With this option,
you do not need to put labels. 

	% olabl -nolabels

	# let x = String.sub;;
	val x : string -> pos:int -> len:int -> string = <fun>

	# x "aiu" pos: 0 len: 1;;
	- : string = "a"

	# x "aiu" 0 1;;
	- : string = "a"

	# x we: "aiu" are: 0 ignored: 1;;
	- : string = "a"
	
Still the types are with labels , but O'Labl ignores them. Of course,
you lose the free order applications and the optional arguments.

-----------------------------------------------------------------------
Jun P. Furuse 					 Jun.Furuse@inria.fr
  INRIA
    Institut National de Recherche en Informatique et en Automatique




