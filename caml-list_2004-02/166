Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA19719; Wed, 25 Feb 2004 08:13:16 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA20972 for <caml-list@pauillac.inria.fr>; Wed, 25 Feb 2004 08:13:14 +0100 (MET)
Received: from mwinf0401.wanadoo.fr (smtp4.wanadoo.fr [193.252.22.27])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i1P7DFIq028202
	for <caml-list@inria.fr>; Wed, 25 Feb 2004 08:13:15 +0100
Received: from vanicat.homelinux.org (ca-bordeaux-30-7.w80-8.abo.wanadoo.fr [80.8.200.7])
	by mwinf0401.wanadoo.fr (SMTP Server) with ESMTP id A91E55800103
	for <caml-list@inria.fr>; Wed, 25 Feb 2004 08:13:13 +0100 (CET)
Received: from moi by vanicat.homelinux.org with local (Exim 4.30)
	id 1AvtEH-00019N-FL
	for caml-list@inria.fr; Wed, 25 Feb 2004 08:13:13 +0100
To: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml internal pretty-printing
References: <1077660121.403bc9d936dfb@imp5-q.free.fr>
From: Remi Vanicat <remi.vanicat@laposte.net>
Mail-Copy-To: never
Date: Wed, 25 Feb 2004 08:13:13 +0100
In-Reply-To: <1077660121.403bc9d936dfb@imp5-q.free.fr> (J. B. Domelevo's
 message of "Tue, 24 Feb 2004 23:02:01 +0100")
Message-ID: <87brnnws1i.dlv@vanicat.homelinux.org>
User-Agent: Gnus/5.1006 (Gnus v5.10.6) Emacs/21.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-15
Content-Transfer-Encoding: 8bit
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 stdlib:01 arrays:01 ocaml:01 ocaml:01 rec:01 handles:01 writes:01 remi:01 remi:01 vanicat:01 vanicat:01 module:03 let:04 infinite:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

"J.B. Domelevo" <j.domelevo@free.fr> writes:

> I can't get any information about how Ocaml handles the pretty-printing of basic
> values as lists or arrays. For instance :
>
> let rec l = 0 :: l ;;
>
> which builds an infinite list of zeros, is print until a certain point, and then
> the interactive OCaml ends with "..."
> The same occurs, of course, when Ocaml is given 'l;;'
> Anyone knowing how the internal pretty-printer can be tuned or even turned on
> and off ?

You should look to the Format module of the stdlib. Pretty printing is
done with it.

-- 
Rémi Vanicat

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

