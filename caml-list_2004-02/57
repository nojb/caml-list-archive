Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA28955; Wed, 4 Feb 2004 20:26:41 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA29741 for <caml-list@pauillac.inria.fr>; Wed, 4 Feb 2004 20:26:39 +0100 (MET)
Received: from demos.bsdclusters.com (demos.bsdclusters.com [69.55.225.36])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id i14JQcv02080
	for <caml-list@inria.fr>; Wed, 4 Feb 2004 20:26:39 +0100 (MET)
Received: from demos.bsdclusters.com (demos [69.55.225.36])
	by demos.bsdclusters.com (8.12.8p1/8.12.8) with ESMTP id i14JQb08081943;
	Wed, 4 Feb 2004 11:26:37 -0800 (PST)
	(envelope-from kmacy@fsmware.com)
Received: from localhost (kmacy@localhost)
	by demos.bsdclusters.com (8.12.8p1/8.12.8/Submit) with ESMTP id i14JQbK5081939;
	Wed, 4 Feb 2004 11:26:37 -0800 (PST)
X-Authentication-Warning: demos.bsdclusters.com: kmacy owned process doing -bs
Date: Wed, 4 Feb 2004 11:26:37 -0800 (PST)
From: Kip Macy <kmacy@fsmware.com>
X-X-Sender: kmacy@demos.bsdclusters.com
To: Christophe Raffalli <Christophe.Raffalli@univ-savoie.fr>
cc: caml-list@inria.fr
Subject: Re: [Caml-list] How useful do you find the OCaml debugger?
In-Reply-To: <402109F3.8060900@univ-savoie.fr>
Message-ID: <20040204112038.K78667@demos.bsdclusters.com>
References: <!~!AAAAAJOwVq2HeURFjPF/cT+K05uE3isA@cs.cmu.edu>
 <20040204101550.GA32187@redhat.com> <4020C9D2.6080803@lifl.fr>
 <402109F3.8060900@univ-savoie.fr>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=X-UNKNOWN
Content-Transfer-Encoding: QUOTED-PRINTABLE
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; kip:99 caml-list:01 debugger:01 checkpoint:01 superset:01 implemented:01 debuggers:01 gdb:01 debuggers:01 crashes:01 backtraking:99 fork:01 fork:01 disallow:01 forks:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
Content-Length: 2213
Lines: 56


Speaking of backtracking, not too long ago I wrote a process
checkpoint/restore facility for DragonFly BSD. I believe that it
was ported to FreeBSD and I know that a superset of its functionality
was implemented for Linux by LLNL. It seems, at least on the surface of
things, that this could be tied into ordinary debuggers like GDB to
provide simple backtracking by checkpointing a process every n seconds,
where n is a function of the size of the process and how recently one
wants to roll back to. This would be nice to have for many languages not
just ocaml - plus many people would like to use native code.

=09=09=09=09-Kip


> I have use a lot the debuggers, but veru often without succes because:
>
> - my program was to complex to debug it without backtracking
> - backtracking often crashes (but it is hard to reproduce) and moreover
> is not usable when performing IO (at least the last time I used it)
>
> If would be nice to have two ml functions (to use inside your code to
> debug):
>
> allow_debugback (): backtraking is allowed after this function is
> executed (create the first fork for backtracking there). This function
> could recieve the maximum number of fork in argument instead of unit.
>
> disallow_debugback (): no more backtracking possible (kills all the
> previous forks)
>
> I think this is simple to implement and not very hard to use (for
> instance it is easy to put such a function in the treatment part of a
> parser to solve the IO problems).
>
>
> --
> Christophe Raffalli
> Universit=E9 de Savoie
> Batiment Le Chablais, bureau 21
> 73376 Le Bourget-du-Lac Cedex
>
> t=E9l: (33) 4 79 75 81 03
> fax: (33) 4 79 75 87 42
> mail: Christophe.Raffalli@univ-savoie.fr
> www: http://www.lama.univ-savoie.fr/~RAFFALLI
> ---------------------------------------------
> IMPORTANT: this mail is signed using PGP/MIME
> At least Enigmail/Mozilla, mutt or evolution
> can check this signature
> ---------------------------------------------
>

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

