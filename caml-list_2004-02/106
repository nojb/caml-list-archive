Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA09083; Wed, 11 Feb 2004 13:37:58 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA07226 for <caml-list@pauillac.inria.fr>; Wed, 11 Feb 2004 13:37:57 +0100 (MET)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id i1BCbtv06896
	for <caml-list@inria.fr>; Wed, 11 Feb 2004 13:37:56 +0100 (MET)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3p2-20030924/3.7W) with ESMTP id VAA18286;
	Wed, 11 Feb 2004 21:37:53 +0900 (JST)
To: yoriyuki@mbg.ocn.ne.jp
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] linking order of C libraries.
In-Reply-To: <20040211.182115.77398924.yoriyuki@mbg.ocn.ne.jp>
References: <20040211.182115.77398924.yoriyuki@mbg.ocn.ne.jp>
X-Mailer: Mew version 1.94.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20040211213752C.garrigue@kurims.kyoto-u.ac.jp>
Date: Wed, 11 Feb 2004 21:37:52 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 jacques:01 yamagata:01 yoriyuki:01 yoriyuki:01 ocamlc:01 ocamlc:01 camlp:01 gramlib:01 swig:01 stub:01 stub:01 camlp:01 gramlib:01 swig:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
Content-Length: 1836
Lines: 37

From: Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp>
> It would be dumb to ask, but what is the effect of order in which C
> libraries are given to ocamlc?  I ask because when I gave the command
> line something like
> 
>  ocamlc -custom -I +camlp4 -I .. -I ../lib gramlib.cma -o mana\
>  swig.cmo stub_helpers.o stub_wrap.o stub.cmo mana.cmo parse.cmo\
>  ../lib/libchasen.a -cclib -lstdc++
> 
> then it succeeded, but if I gave
> 
> ocamlc -custom -I +camlp4 -I .. -I ../lib gramlib.cma -o mana\
> ../lib/libchasen.a swig.cmo stub_helpers.o stub_wrap.o stub.cmo\
> mana.cmo parse.cmo -cclib -lstdc++
> 
> then it emits a lot of "undefined reference" errors.  (Only difference
> is the location of ../lib/libchasen.a)

The order of the C libraries only changes their order on the
command-line passed to the system linker.
IIRC, the order in which they are passed to the linker is the
same order as on the command-line, but the rule is more subtle for C
libraries specified by a .cma, as some C linkers only resolve
references in libraries occuring after an object on the command-line,
while ocaml expects (ocaml) libraries to appear before they are
referenced. (The exact behaviour is specified somewhere in the
manual.) 

The problem you describe is system dependent: most linkers accept
libraries in any order, but some have the above described restriction.
I believe this was the case on Solaris until 2.6 or 7 for instance.
On such systems you must be careful about linking order, and ocaml can
do very little about it, except providing a way to specify this order.

Cheers,

Jacques Garrigue

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

