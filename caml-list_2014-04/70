Return-Path: <bmillwood@janestreet.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 14D1C7F8A0
	for <caml-list@sympa.inria.fr>; Tue,  8 Apr 2014 07:47:05 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  bmillwood@janestreet.com) identity=pra;
  client-ip=38.105.200.229;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="bmillwood@janestreet.com";
  x-sender="bmillwood@janestreet.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  bmillwood@janestreet.com designates 38.105.200.229 as
  permitted sender) identity=mailfrom;
  client-ip=38.105.200.229;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="bmillwood@janestreet.com";
  x-sender="bmillwood@janestreet.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mxout3.mail.janestreet.com) identity=helo;
  client-ip=38.105.200.229;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="bmillwood@janestreet.com";
  x-sender="postmaster@mxout3.mail.janestreet.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlgBAKeMQ1MmacjlnGdsb2JhbABZg0FXvHCHN4EXHg4BAQEBAQYWCTyCUxkBATglXRIBBQEjiAsDAgicMYsYhFUBBZ5BEQIEjig+gjkPgXuYYJBRGCmEX4Fq
X-IPAS-Result: AlgBAKeMQ1MmacjlnGdsb2JhbABZg0FXvHCHN4EXHg4BAQEBAQYWCTyCUxkBATglXRIBBQEjiAsDAgicMYsYhFUBBZ5BEQIEjig+gjkPgXuYYJBRGCmEX4Fq
X-IronPort-AV: E=Sophos;i="4.97,815,1389740400"; 
   d="scan'208";a="67005799"
Received: from mx5.janestreet.com (HELO mxout3.mail.janestreet.com) ([38.105.200.229])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 08 Apr 2014 07:47:03 +0200
Received: from tot-oib-smtp1.delacy.com ([172.27.22.15] helo=tot-smtp)
	by mx5.mail.janestreet.com with esmtp (Exim 4.76)
	(envelope-from <bmillwood@janestreet.com>)
	id 1WXOsA-0003RU-AO
	for caml-list@inria.fr; Tue, 08 Apr 2014 01:47:02 -0400
Received: from tot-dmz-mxgoog1.delacy.com ([172.27.224.14] helo=mxgoog2.janestreet.com)
	by tot-smtp with esmtps (TLSv1:AES256-SHA:256)
	(Exim 4.72)
	(envelope-from <bmillwood@janestreet.com>)
	id 1WXOsA-0005sb-9J
	for caml-list@inria.fr; Tue, 08 Apr 2014 01:47:02 -0400
Received: from mail-qg0-f41.google.com ([209.85.192.41])
	by mxgoog2.janestreet.com with esmtp (Exim 4.76)
	(envelope-from <bmillwood@janestreet.com>)
	id 1WXOsA-00060Z-7d
	for caml-list@inria.fr; Tue, 08 Apr 2014 01:47:02 -0400
Received: by mail-qg0-f41.google.com with SMTP id z60so448716qgd.28
        for <caml-list@inria.fr>; Mon, 07 Apr 2014 22:47:02 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=janestreet.com; s=google;
        h=mime-version:date:message-id:subject:from:to:content-type;
        bh=QwHGC3knH8iYbfxrVCJYrjo3JuGf9TS6iR+mZOizmVs=;
        b=Qk1dKiY89UHcrNvsI+Syw6mv+aFk8Hl4HlHSfp5EoCCjEKR39aRBPA1qIit6bIJZsi
         pf5z3WW+AvuaNwXbKQVKPqPj6rkE00XJp8WqG1L+rywM92Mj5KZxAekNtdJv9aTVj1gJ
         0BcIeHLcEmeTGSRQiC10tYdujH4Mar7GfGUzw=
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20130820;
        h=x-gm-message-state:mime-version:date:message-id:subject:from:to
         :content-type;
        bh=QwHGC3knH8iYbfxrVCJYrjo3JuGf9TS6iR+mZOizmVs=;
        b=V5PFfNvC5EDfvJPkW+M8aFqWYfMrHjZ/uVD8G2LcL4kNK5UCSLjJ56kLmBZUh6rZCG
         ELoSGag2tHI7FXgxD8VbNjH/9vfQVxpuhNIlR3wuBxJrf2a88k0mHmEcmQZ7SV7eUzPo
         yJMBfzF0iuOzwnY1KdCR2f5yD5N3+ASC3Vclbjg5tyQ+AuSsbkRajB90LubTi68kSZQd
         IO4ZWfAR/ssiFCM2R45uAHJfE2gmIqf4J6kSPUy00F7WzBAUEbQa6/TQe88+98GFtLZ5
         aEDQ6omqjWWL58XLnAOxqSbx/qyoR09B+W6N/DFAV86mRZ7vS7Y2iQhrPyARRkcAefpJ
         QW/Q==
X-Gm-Message-State: ALoCoQlrcvwlU927PCKFIAqJMqxhmkjRYoNDuS/YZIQE0nEY1RYJOGf81mKw+I/Bx4IEpOwK9OdCu6hr6gh0dJpz/H5gatln2HiNy9QjzmrGIK9qKBD550J7yIqxejwWd7Vn4Kmn2l/r
X-Received: by 10.224.160.142 with SMTP id n14mr1845350qax.17.1396936022101;
        Mon, 07 Apr 2014 22:47:02 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.224.160.142 with SMTP id n14mr1845344qax.17.1396936022036;
 Mon, 07 Apr 2014 22:47:02 -0700 (PDT)
Received: by 10.140.108.182 with HTTP; Mon, 7 Apr 2014 22:47:01 -0700 (PDT)
Date: Tue, 8 Apr 2014 06:47:01 +0100
Message-ID: <CA+MHO5257cfUgeHTsOgdczc_k1c=7TqmjJ+jaGsnQAZf5hazyQ@mail.gmail.com>
From: Ben Millwood <bmillwood@janestreet.com>
To: ocaml-core@googlegroups.com, caml-list@inria.fr
Content-Type: multipart/alternative; boundary=047d7b5db0665e284904f681834b
Subject: [Caml-list] [ANN] Core Suite 111.08.00

--047d7b5db0665e284904f681834b
Content-Type: text/plain; charset=ISO-8859-1

I am delighted to announce the 111.08.00 release of the Core suite.

The following packages were upgraded:

- async_extra
- async_kernel
- async_ssl
- async_unix
- core
- core_kernel
- enumerate
- jenga
- ocaml_plugin
- pa_test
- re2

This time we are including another new package:

- bignum, a Core-flavoured wrapper around arbitrary-precision rational
numbers provided by the zarith library.

Heads up, though: in preparation for the public release of bignum, we made
a few changes and improvements to the library, but they weren't completed
in time and weren't essential enough to hold up the release for them. Next
public release, bignum will have an improved rounding API, fewer
dependencies, and a better bin_prot encoding.

Files and documentation for this release are available on our website and
all packages are in opam:

  https://ocaml.janestreet.com/ocaml-core/111.03.00/individual/
  https://ocaml.janestreet.com/ocaml-core/111.03.00/doc/

Here is the list of changes for this version:

## async_extra

- Added `Log.Message.add_tags`, which extends a message with a list of
  key-value pairs.

        val add_tags : t -> (string * string) list -> t

## async_kernel

- Changed low-level error messages to use `Sexp.to_string_hum` rather
  than `to_string_mach`.

## async_ssl

- Improved the propagation of SSL errors to the caller.

## async_unix

- Added `Sys.when_file_changes : string -> Time.t Pipe.Reader.t`.
- Added `Time.now ()` to some error messages.

## core

- Improved `Command` to print a good error message if command-line
  parsing raises.

    `Command`'s `Exn.handle_uncaught` now protects the phase of parsing
    command-line arguments in addition to protecting the phase of
    running the `main` function as it did already.

## core_kernel

- Added `Hashtbl.for_all` and `for_alli`.
- Added `Float.to_padded_compact_string` for converting a floating point
  number to a lossy, compact, human-readable representation.

    E.g., `1_000_001.00` becomes `"1m "`.

- Tweaked the form of the definition of `Blang.Stable.V1`.

    Removed a `type t_` that is not necessary now that we can use `nonrec`
    without triggering spurious warnings.

## enumerate

- Restricted the signature of the `all` value generated by
  `with enumerate`.

    Now, in:

        type t = [ `Foo | ... ] with enumerate

    the type of `all` will be `t list`, instead of `[> t] list`.

    When taking unions of polymorphic variant types, inserted the
    appropriate coercions.

## jenga

- Fix a hang.

    Jenga could reach a state with a non-zero todo-count, but have no
    jobs actually running, and then hang in this state forever. The hang
    would be evident from a progress line with not all targets built and
    with `j=0+0` such as:

        todo: 17 (100406 / 100423) j=0+0 con=149956 act=3303, finish at:
16:20

## ocaml_plugin

- Use `ocamldep` to generate the dependencies of an `.ml` file, if
  requested.

    Added a function to find the dependencies of a module, but did not
    change the existing behavior and interface of the library if one
    does not choose to use this functionality.

## pa_test

- Made it possible to use `<:test_eq< >>` and friends in `Core_kernel`.

    Removed the dependency of the code generated by `pa_test` on
    `Core_kernel`, so `pa_test` can be used there.

## re2

- Upgraded to upstream library version 20140304.

    Added options `Dot_nl` and `Never_capture`.

---

We hope you enjoy it!

-- Ben Millwood, on behalf of the Core team

--047d7b5db0665e284904f681834b
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">I am delighted to announce the 111.08.00 release of the Co=
re suite.<div><br></div><div>The following packages were upgraded:</div><di=
v><br></div><div><div>- async_extra</div><div>- async_kernel</div><div>- as=
ync_ssl</div>


<div>- async_unix</div><div>- core</div><div>- core_kernel</div><div>- enum=
erate</div><div>- jenga</div><div>- ocaml_plugin</div><div>- pa_test</div><=
div>- re2</div></div><div><br></div><div>This time we are including another=
 new package:</div>


<div><br></div><div>- bignum, a Core-flavoured wrapper around arbitrary-pre=
cision rational numbers provided by the zarith library.</div><div><br></div=
><div>Heads up, though: in preparation for the public release of bignum, we=
 made a few changes and improvements to the library, but they weren&#39;t c=
ompleted in time and weren&#39;t essential enough to hold up the release fo=
r them. Next public release, bignum will have an improved rounding API, few=
er dependencies, and a better bin_prot encoding.</div>


<div><br></div><div><div>Files and documentation for this release are avail=
able on our website and all packages are in opam:</div><div><br></div><div>=
=A0 <a href=3D"https://ocaml.janestreet.com/ocaml-core/111.03.00/individual=
/" target=3D"_blank">https://ocaml.janestreet.com/ocaml-core/111.03.00/indi=
vidual/</a></div>


<div>=A0 <a href=3D"https://ocaml.janestreet.com/ocaml-core/111.03.00/doc/"=
 target=3D"_blank">https://ocaml.janestreet.com/ocaml-core/111.03.00/doc/</=
a></div><div><br></div><div>Here is the list of changes for this version:</=
div>

</div><div><br>
</div><div><div>## async_extra</div><div><br></div><div>- Added `Log.Messag=
e.add_tags`, which extends a message with a list of</div><div>=A0 key-value=
 pairs.</div><div><br></div><div>=A0 =A0 =A0 =A0 val add_tags : t -&gt; (st=
ring * string) list -&gt; t</div>


<div><br></div><div>## async_kernel</div><div><br></div><div>- Changed low-=
level error messages to use `Sexp.to_string_hum` rather</div><div>=A0 than =
`to_string_mach`.</div><div><br></div><div>## async_ssl</div><div><br></div>


<div>- Improved the propagation of SSL errors to the caller.</div><div><br>=
</div><div>## async_unix</div><div><br></div><div>- Added `Sys.when_file_ch=
anges : string -&gt; Time.t Pipe.Reader.t`.</div><div>- Added `Time.now ()`=
 to some error messages.</div>


<div><br></div><div>## core</div><div><br></div><div>- Improved `Command` t=
o print a good error message if command-line</div><div>=A0 parsing raises.<=
/div><div><br></div><div>=A0 =A0 `Command`&#39;s `Exn.handle_uncaught` now =
protects the phase of parsing</div>


<div>=A0 =A0 command-line arguments in addition to protecting the phase of<=
/div><div>=A0 =A0 running the `main` function as it did already.</div><div>=
<br></div><div>## core_kernel</div><div><br></div><div>- Added `Hashtbl.for=
_all` and `for_alli`.</div>


<div>- Added `Float.to_padded_compact_string` for converting a floating poi=
nt</div><div>=A0 number to a lossy, compact, human-readable representation.=
</div><div><br></div><div>=A0 =A0 E.g., `1_000_001.00` becomes `&quot;1m &q=
uot;`.</div>


<div><br></div><div>- Tweaked the form of the definition of `Blang.Stable.V=
1`.</div><div><br></div><div>=A0 =A0 Removed a `type t_` that is not necess=
ary now that we can use `nonrec`</div><div>=A0 =A0 without triggering spuri=
ous warnings.</div>


<div><br></div><div>## enumerate</div><div><br></div><div>- Restricted the =
signature of the `all` value generated by</div><div>=A0 `with enumerate`.</=
div><div><br></div><div>=A0 =A0 Now, in:</div><div><br></div><div>=A0 =A0 =
=A0 =A0 type t =3D [ `Foo | ... ] with enumerate</div>


<div><br></div><div>=A0 =A0 the type of `all` will be `t list`, instead of =
`[&gt; t] list`.</div><div><br></div><div>=A0 =A0 When taking unions of pol=
ymorphic variant types, inserted the</div><div>=A0 =A0 appropriate coercion=
s.</div>
<div><br></div><div>## jenga</div><div><br></div><div>- Fix a hang.</div><d=
iv><br></div><div>=A0 =A0 Jenga could reach a state with a non-zero todo-co=
unt, but have no</div><div>=A0 =A0 jobs actually running, and then hang in =
this state forever. The hang</div>


<div>=A0 =A0 would be evident from a progress line with not all targets bui=
lt and</div><div>=A0 =A0 with `j=3D0+0` such as:</div><div><br></div><div>=
=A0 =A0 =A0 =A0 todo: 17 (100406 / 100423) j=3D0+0 con=3D149956 act=3D3303,=
 finish at: 16:20</div>


<div><br></div><div>## ocaml_plugin</div><div><br></div><div>- Use `ocamlde=
p` to generate the dependencies of an `.ml` file, if</div><div>=A0 requeste=
d.</div><div><br></div><div>=A0 =A0 Added a function to find the dependenci=
es of a module, but did not</div>


<div>=A0 =A0 change the existing behavior and interface of the library if o=
ne</div><div>=A0 =A0 does not choose to use this functionality.</div><div><=
br></div><div>## pa_test</div><div><br></div><div>- Made it possible to use=
 `&lt;:test_eq&lt; &gt;&gt;` and friends in `Core_kernel`.</div>


<div><br></div><div>=A0 =A0 Removed the dependency of the code generated by=
 `pa_test` on</div><div>=A0 =A0 `Core_kernel`, so `pa_test` can be used the=
re.</div><div><br></div><div>## re2</div><div><br></div><div>- Upgraded to =
upstream library version 20140304.=A0</div>


<div><br></div><div>=A0 =A0 Added options `Dot_nl` and `Never_capture`.</di=
v></div><div><br></div><div>---</div><div><br></div><div>We hope you enjoy =
it!</div><div><br></div><div>-- Ben Millwood, on behalf of the Core team</d=
iv>

</div>

--047d7b5db0665e284904f681834b--
