Return-Path: <adrien@notk.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 321867F71A
	for <caml-list@sympa.inria.fr>; Sat, 12 Apr 2014 13:41:47 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  adrien@notk.org) identity=pra; client-ip=91.121.71.147;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="adrien@notk.org"; x-sender="adrien@notk.org";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  adrien@notk.org designates 91.121.71.147 as permitted sender)
  identity=mailfrom; client-ip=91.121.71.147;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="adrien@notk.org"; x-sender="adrien@notk.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@nautica.notk.org) identity=helo;
  client-ip=91.121.71.147;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="adrien@notk.org";
  x-sender="postmaster@nautica.notk.org";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhQFAKolSVNbeUeT/2dsb2JhbABZgwaDUFLAGYEZFnSCJQEBAQQjDwFGEAsYAgIFEw4CAg8FGB0BE4gTqQeiUxeBKY1FB4JvNYEUBJhgAZJDgzM7
X-IPAS-Result: AhQFAKolSVNbeUeT/2dsb2JhbABZgwaDUFLAGYEZFnSCJQEBAQQjDwFGEAsYAgIFEw4CAg8FGB0BE4gTqQeiUxeBKY1FB4JvNYEUBJhgAZJDgzM7
X-IronPort-AV: E=Sophos;i="4.97,847,1389740400"; 
   d="scan'208";a="56796160"
Received: from nautica.notk.org ([91.121.71.147])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/ADH-AES256-SHA; 12 Apr 2014 13:41:46 +0200
Received: by nautica.notk.org (Postfix, from userid 1003)
	id 3F4C5C01D; Sat, 12 Apr 2014 13:41:45 +0200 (CEST)
Date: Sat, 12 Apr 2014 13:41:45 +0200
From: Adrien Nader <adrien@notk.org>
To: Daniel =?utf-8?Q?B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
Cc: David Allsopp <dra-news@metastack.com>,
	"caml-list@inria.fr" <caml-list@inria.fr>
Message-ID: <20140412114145.GA18285@notk.org>
References: <B1A86BC9A6EC4A89B69882E524A25CD5@erratique.ch>
 <53c5ec5fa458ca0ae78f13ff79d9abf5@in.tum.de>
 <B2E1915A8884481FB1F2890D2A11F5FD@erratique.ch>
 <C9E01997-4B5E-428B-BD68-99AD769D0ADD@recoil.org>
 <9636C678CAA541CCB505CE8771722A68@erratique.ch>
 <063FC564F6B44EA5AB1CF1D5589996D0@erratique.ch>
 <E51C5B015DBD1348A1D85763337FB6D9E4EF5FAC@Remus.metastack.local>
 <20140412073949.GA31995@notk.org>
 <20140412074401.GA803@notk.org>
 <CB34F8DD4D554EBBA9159DFF6E611B27@erratique.ch>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <CB34F8DD4D554EBBA9159DFF6E611B27@erratique.ch>
User-Agent: Mutt/1.5.21 (2010-09-15)
Subject: Re: [Caml-list] OCaml script on windows (was Re: [ANN] React 1.0.0)

On Sat, Apr 12, 2014, Daniel Bünzli wrote:
> 
> 
> Le samedi, 12 avril 2014 à 09:44, Adrien Nader a écrit :
> 
> > Sorry, forgot to mention that this included building software through
> > oasis and ocamlbuild. From configure of libraries to build the final
> > executable. And that has been the case for 3 years at least.
> 
> Does that change his answer (i.e. that a shell interpreter will be available) ?

The requirements for ocamlbuild on windows _right_ _now_ include
bash.exe (not "sh" iirc) because of Sys.command (!) and a few tools like
cp, mv, find, mkdir.

This is far from enough for typical shell scripting and probably barely
enough for shell scripts which are carefully crafted to rely as little
as possible on anything that isn't a shell builtin. This looks like a
dead-end to me.

Moreover, the reliance on mv, cp and friends in ocamlbuild is probably
only justified by the need to have a (ba)sh.exe anyway. If this
requirement goes away, I expect the other shell-outs to go away too.

This isn't very high in the todo list for ocamlbuild and  but it would
simplify some OCaml installations on Windows and would make builds much
much faster (spawning processes in Cygwin/Msys is very slow since they
emulate fork without kernel support).

In a few words, today you can expect a posix shell but this isn't very
future-proof. However I'd probably not change much the current build
system: process management in OCaml is more work than in shell and a
arewrite would take time for little benefit, all while the environment
is evolving rapidly.

-- 
Adrien Nader
