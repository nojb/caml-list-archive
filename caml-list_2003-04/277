Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA14464; Tue, 22 Apr 2003 19:17:26 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA12873 for <caml-list@pauillac.inria.fr>; Tue, 22 Apr 2003 19:17:25 +0200 (MET DST)
Received: from hosting.commandprompt.com ([207.173.200.138])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h3KCWI922983
	for <caml-list@inria.fr>; Sun, 20 Apr 2003 14:32:18 +0200 (MET DST)
Received: from respighi.local. (pool-68-160-27-4.bos.east.verizon.net [68.160.27.4])
	(authenticated)
	by hosting.commandprompt.com (8.11.6/8.11.6) with ESMTP id h3KCMQ603385
	for <caml-list@inria.fr>; Sun, 20 Apr 2003 05:22:27 -0700
Date: Sun, 20 Apr 2003 08:32:54 -0400
Mime-Version: 1.0 (Apple Message framework v543)
Content-Type: text/plain; charset=US-ASCII; format=flowed
Subject: [Caml-list] jserv vs fastcgi
From: Jeff Henrikson <jehenrik@yahoo.com>
To: caml-list@inria.fr
Content-Transfer-Encoding: 7bit
Message-Id: <35BDFDB4-732C-11D7-A75A-00039375801A@yahoo.com>
X-Mailer: Apple Mail (2.543)
X-Spam: no; 0.00; henrikson:01 jehenrik:01 jserv:01 commotion:99 ocamlnet:01 chock:01 whistles:01 neglected:01 hacks:01 writes:01 configure:02 interface:03 anybody:03 data:03 seems:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I periodically hear commotion on this list about Jserv.  Ocamlnet has a 
Jserv interface now I see.  Can somebody explain to me what the 
advantages of Jserv are over FastCGI?  FastCGI I know is old ('96), but 
it seems to serve my main goal, which is to keep my process alive so 
that I can pool ODBC connections.  The specification is something that 
I can sit down and read in 30 minutes and understand:

http://www.fastcgi.com/devkit/doc/fcgi-spec.html#S1

I haven't seen a specification for just Jserv.  Apparently it's 
superseded by the Java Servelet spec, which in version 2.4 is a 309 
page PDF file, chock full of bells and whistles which I haven't taken 
the time to taxonomize, specified in notation which I don't understand. 
  It writes everything based on Java method calls, which doesn't give me 
a sense of what the actual data being passed along the channel is at 
all.

I guess I also don't have a good sense of why FastCGI has been 
neglected enough to, for example, not be updated for HTTP 1.1 keepalive 
and etc.  Though it sounds like there have been hacks to do this from 
time to time.  The fastcgi mailing list seems to be fairly active.

Would anybody with an understanding of this be so kind as to explain 
the big picture in a couple of paragraphs, if that's at all a 
reasonable request?  My inclination right now is to sit down and write 
a fastcgi interface and configure Apache with mod_fastcgi, but I don't 
want to do that and find out I'm using a senselessly obsolete interface.


Jeff Henrikson


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

