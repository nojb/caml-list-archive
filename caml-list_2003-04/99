Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA03692; Tue, 8 Apr 2003 12:23:35 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA03819 for <caml-list@pauillac.inria.fr>; Tue, 8 Apr 2003 12:23:34 +0200 (MET DST)
Received: from isis.lip6.fr (isis.lip6.fr [132.227.60.2])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h38ANXX01627
	for <caml-list@inria.fr>; Tue, 8 Apr 2003 12:23:33 +0200 (MET DST)
Received: from spi.lip6.fr (IDENT:root@spi.lip6.fr [132.227.83.55])
          by isis.lip6.fr (8.12.9/jtpda-5.4+victor) with ESMTP id h38ANRqp031650
          ; Tue, 8 Apr 2003 12:23:27 +0200
X-pt: isis.lip6.fr
Received: from inria.fr ([132.227.83.193])
          by spi.lip6.fr (8.8.7/jtpda-5.2) with ESMTP id MAA01168
          ; Tue, 8 Apr 2003 12:23:26 +0200
Date: Tue, 8 Apr 2003 12:23:46 +0200
Subject: Re: [Caml-list] Slow GC problem
Content-Type: text/plain; charset=US-ASCII; format=flowed
Mime-Version: 1.0 (Apple Message framework v551)
Cc: caml-list@inria.fr
To: Shivkumar Chandrasekaran <shiv@ece.ucsb.edu>
From: Damien Doligez <Damien.Doligez@inria.fr>
In-Reply-To: <3C821F52-66D5-11D7-A265-000393942C76@ece.ucsb.edu>
Message-Id: <2E57564C-69AC-11D7-B7DE-0003930FCE12@inria.fr>
Content-Transfer-Encoding: 7bit
X-Mailer: Apple Mail (2.551)
X-Scanned-By: isis.lip6.fr
X-Spam: no; 0.00; damien:01 caml-list:01 solver:01 chunks:01 847:99 allocating:01 compactor:01 bigarray:01 descriptors:01 fragments:01 doligez:01 heap:03 data:03 efficiency:05 slow:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> I have a gc efficiency problem for which I require some advice. I have 
> read both the O'Reilly book and the manual on gc.
[...]
>  Below I give the gc stats just before and after the solver routine is 
> called in the in-core solver:
>
> 				"Just before"	"Just after"
> minor_words:		46243376	139259767
> promoted_words:	928267		2595523
> major_words:		2883087		39489766
> minor_collections:	1412		4591
> major_collections:	18			52
> heap_words:		2150400		1044480
> heap_chunks:		35			17
> top_heap_words:	2150400		5038080
> live_words:		1842373		840037
> live_blocks:		253926		116816
> free_words:		307180		204440
> free_blocks:		47368		17
> largest_free:		10928		61440
> fragments:		847			3
> compactions:		0			2

As others have said, this is not really enough information to tell
what is going on.  What we can say from the above is:

1. You are allocating lots and lots of data structures in the major
    heap (maybe finalized bigarray descriptors)
2. The compactor was called twice, which may indicate that you have
    a fragmentation problem.
3. The compactor was called near the end of the solver routine,
    which must have erased most of the evidence...

-- Damien

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

