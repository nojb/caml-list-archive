Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA25281; Tue, 8 Apr 2003 21:53:20 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA25277 for <caml-list@pauillac.inria.fr>; Tue, 8 Apr 2003 21:53:18 +0200 (MET DST)
Received: from hosting.commandprompt.com ([207.173.200.138])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h38JrHX07064
	for <caml-list@inria.fr>; Tue, 8 Apr 2003 21:53:17 +0200 (MET DST)
Received: from respighi.local. (pool-68-160-158-217.bos.east.verizon.net [68.160.158.217])
	(authenticated)
	by hosting.commandprompt.com (8.11.6/8.11.6) with ESMTP id h38JT8J16307;
	Tue, 8 Apr 2003 12:29:08 -0700
Date: Tue, 8 Apr 2003 15:53:38 -0400
Subject: Re: [Caml-list] single-line comment request
Content-Type: text/plain; charset=US-ASCII; format=flowed
Mime-Version: 1.0 (Apple Message framework v543)
Cc: Nickolay Semyonov-Kolchin <snob@snob.spb.ru>
To: caml-list@inria.fr
From: Jeff Henrikson <jehenrik@yahoo.com>
In-Reply-To: <4.3.2.7.2.20030408110617.0389bde8@localhost>
Message-Id: <CA533CFA-69FB-11D7-81FD-00039375801A@yahoo.com>
Content-Transfer-Encoding: 7bit
X-Mailer: Apple Mail (2.543)
X-Spam: no; 0.00; henrikson:01 jehenrik:01 caml-list:01 chunks:01 printfs:01 gui:01 char:01 ocaml:01 substituting:98 trivial:01 unix:02 backward:02 interface:03 btw:03 arguments:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Though I favor the addition of the single line comments, most of the 
comments thus far seem to be very subjective.  I find the "80+ percent 
of comments in the existing sources are single line comment" fairly 
weighty.  I also find the following unmentioned idea significant: 
single line comments save large number of keystrokes when substituting 
different chunks of code during testing.  Also adding printfs.  And any 
comment-compile-uncomment-compile situation.  It's a fairly specific 
task, but also a pronounced difference when it happens.

I find a lot of the "no-single-comment" arguments to be sounding 
remarkably reductionist in the way the "we don't need GUI" arguments 
that certain die hard UNIX users purvey.  The comment character is a 
user interface for a programming language.  Let's make it a nice one.  
OCaml already breaks backward compatibility often.  And for whatever 
branches of OCaml are out there, any backport would be trivial.

BTW, I kind of don't like ##, because it's a shift key.  There are no 
single char symbols left, okay.  But that's true for C(++) as well, 
hence the "//".  What's wrong with //?  I see that it's an "operator 
char" in the language definition lexical conventions.  I'm not sure if 
that's a big deal.  I'd like "--" also.  Same op-ch issue.


Jeff Henrikson

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

