Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA28725; Mon, 28 Apr 2003 19:44:38 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA28754 for <caml-list@pauillac.inria.fr>; Mon, 28 Apr 2003 19:44:17 +0200 (MET DST)
Received: from comtv.ru (comtv.ru [217.10.32.4])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h3SHiGH12863
	for <caml-list@inria.fr>; Mon, 28 Apr 2003 19:44:16 +0200 (MET DST)
Received: from [10.0.66.9] ([10.0.66.9] verified)
  by comtv.ru (CommuniGate Pro SMTP 4.0.6)
  with ESMTP id 8715963; Mon, 28 Apr 2003 21:43:13 +0400
Date: Mon, 28 Apr 2003 21:45:32 +0400 (MSD)
From: malc <malc@pulsesoft.com>
X-X-Sender: malc@home.oyster.ru
To: Siegfried Gonzi <siegfried.gonzi@stud.uni-graz.at>
cc: caml-list@inria.fr
Subject: Re: [Caml-list] Easy solution in OCaml?
In-Reply-To: <3EA8D012.8040700@stud.uni-graz.at>
Message-ID: <Pine.LNX.4.55.0304282143540.588@home.oyster.ru>
References: <3EA8D012.8040700@stud.uni-graz.at>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Spam: no; 0.00; malc:01 pulsesoft:01 caml-list:01 siegfried:01 gonzi:01 bigloo:01 matlab:01 dependencies:01 quarterly:99 failwith:01 compiler:01 ocaml:01 rec:01 wrote:03 scheme:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 25 Apr 2003, Siegfried Gonzi wrote:

> Hi:
>
> First off: It is not homework. I am 29 and writing my PhD in physics.
> Often I am contemplating whether it would be possible to use OCaml in
> combination with my beloved Bigloo to perform statistical evaluations. I
> am not sure whether there are any out there who /can/ do this
> evaluations with OCaml what you normally would do with Matlab. The
> problem what arises: type system and working against the compiler. In
> Scheme changing a solution from lets say integer-array to double-array
> is easy, but in Clean for example you would have to change all your
> dependencies.
> I often skim over the libraries and came to the conclusion: C, C++,
> OCaml impossible for me to see any elegance; Clean a bit better;
> Bigloo/Scheme: I am not sure here, because everything looks the same
> maybe this is cheating, but I think it looks the most elegant and less
> intimitating from all.
>
>
> Rationale: given a list of 12 month.  I would like to calculate the
> quarterly means and skip any nan. Easy? Yes it is but only on paper and
> in Scheme:
>
> e.g: [1,2,4,-1,45,56,45,56,8]
>
> nan=-1.0
>
> result: [(1+2+3)/3, (45+56)/2, (45+56+8)/3]

let nan = -1

let mean a b c = (a + b + c) / 3

let rec qmean = function
    a :: b :: c :: rest -> mean a b c :: qmean rest
  | [] -> []
  | otherwise -> failwith "malformed list"

let _ =
  let months = [1; 2; 4; -1; 45; 56; 45; 56; 8] in
  let denan = List.map (fun x -> if x = nan then 0 else x) months in
  qmean denan


-- 
mailto:malc@pulsesoft.com

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

