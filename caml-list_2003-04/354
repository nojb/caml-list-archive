Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA28482; Mon, 28 Apr 2003 19:53:08 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA28793 for <caml-list@pauillac.inria.fr>; Mon, 28 Apr 2003 19:53:07 +0200 (MET DST)
Received: from lcavsun1.epfl.ch (lcavsun1.epfl.ch [128.178.8.3])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h3SHr6T27993
	for <caml-list@inria.fr>; Mon, 28 Apr 2003 19:53:06 +0200 (MET DST)
Received: from lcavsun10.epfl.ch (lcavsun10.epfl.ch [128.178.8.18])
	by lcavsun1.epfl.ch (8.8.8+Sun/8.8.8) with ESMTP id TAA04208
	for <caml-list@inria.fr>; Mon, 28 Apr 2003 19:53:05 +0200 (MET DST)
Date: Mon, 28 Apr 2003 19:53:05 +0200 (MEST)
From: henridf@lcavsun1.epfl.ch
X-X-Sender: henridf@lcavsun10.epfl.ch
Reply-To: Henri DF <henri.dubois-ferriere@epfl.ch>
To: caml-list@inria.fr
Subject: [Caml-list] caml in kernel? (fwd)
Message-ID: <Pine.GSO.4.44.0304281952380.4372-100000@lcavsun10.epfl.ch>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Spam: no; 0.00; henridf:01 lcavsun:01 caml-list:01 high-level:01 bug:01 faq:01 beginner's:01 beginners:01 bin:01 kernel:01 caml-bugs:01 ocaml:01 caml:01 groups:01 forwarded:97 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

sorry, forgot the url:
http://www.abstractnonsense.com/schemix/


---------- Forwarded message ----------
Date: Mon, 28 Apr 2003 11:58:03 +0200 (CEST)
From: henridf@lcavsun1.epfl.ch
Reply-To: Henri DF <henri.dubois-ferriere@epfl.ch>
To: caml-list@inria.fr
Subject: [Caml-list] caml in kernel?

Hi,
I chanced upon this in /. today:

"Schemix is a Scheme running in the Linux kernel. It
presents /dev/schemix to send Scheme forms to, and has extensions to read
and set (C) kernel variables, call kernel functions, and make devices. If
you've wanted to prototype your drivers in a high-level language that's
100% in the kernel, here you go."


Haven't looked in deep detail, but it sounds pretty nifty if it works
well. Does anyone know if there would be any fundamental obstacles for
doing something similar with ocaml?


thanks
henri

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

