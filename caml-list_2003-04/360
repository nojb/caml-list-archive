Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA31567; Mon, 28 Apr 2003 20:35:47 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA31578 for <caml-list@pauillac.inria.fr>; Mon, 28 Apr 2003 20:35:46 +0200 (MET DST)
Received: from epexch01.qlogic.org ([63.170.40.3])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h3SIZiH15648
	for <caml-list@inria.fr>; Mon, 28 Apr 2003 20:35:45 +0200 (MET DST)
Received: from epmailtmp.qlogic.org ([10.20.33.254]) by epexch01.qlogic.org with Microsoft SMTPSVC(5.0.2195.5329);
	 Mon, 28 Apr 2003 13:35:01 -0500
Received: from [10.20.33.146] ([10.20.33.146]) by epmailtmp.qlogic.org with Microsoft SMTPSVC(5.0.2195.4905);
	 Mon, 28 Apr 2003 13:35:01 -0500
Date: Mon, 28 Apr 2003 13:43:58 -0500 (CDT)
From: Brian Hurt <brian.hurt@qlogic.com>
X-X-Sender:  <brianh@eagle.ancor.com>
Reply-To: Brian Hurt <brian.hurt@qlogic.com>
To: <erayo@cs.bilkent.edu.tr>
cc: Brian Hurt <brian.hurt@qlogic.com>, OCaml List <caml-list@inria.fr>
Subject: Re: [Caml-list] Looking for a real array
In-Reply-To: <200304282129.27582.exa@kablonet.com.tr>
Message-ID: <Pine.LNX.4.33.0304281341120.3160-100000@eagle.ancor.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-OriginalArrivalTime: 28 Apr 2003 18:35:01.0123 (UTC) FILETIME=[E0AD3D30:01C30DB4]
X-Spam: no; 0.00; qlogic:01 caml-list:01 eray:01 ozkural:01 amiga:01 86.:01 pointers:01 advisor:99 unboxed:01 bigarrays:01 gurr:01 arrays:01 compilers:01 hierarchy:02 worse:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 28 Apr 2003, Eray Ozkural wrote:
> 
> Yes, I'm coming from the land of evil optimizers. :) I spent a large portion 
> of my youth hand-optimizing 68k assembly! I was really shocked when I found 
> out about 2 years ago that some FORTRAN compilers could do the tricks I spent 
> hours on the Amiga to perform!

Wow.  I was stuck on the x86.  I've never quite gotten over Amiga envy. 
 Not that I haven't spent some time hand-optimizing x86 code, now and
again. :-)

> 
> To be serious, I was concerned about this fact because I have, if you recall, 
> started writing a graph library. Unfortunately, it makes a big deal of space 
> and time difference when I use pointers to integers rather than simply 
> integers! In fact, my advisor would shoot me if I did the former. Space loss 
> is evident. But the worse case comes from losing "cache coherence", a fine 
> point that can change the speed 5 fold sometimes!!!!! Memory hierarchy is 
> like magic!

I may be confused, but I thought integers were unboxed in arrays (not 
BigArrays, just arrays).  Unless you mean references to integers?

> Thanks to Brian Hurt and David Gurr who wrote off-the list that
> bigarrays would work for me. It looks like Bigarrays can do unboxed
> arrays of integers.

Different Brian, I think.

Brian


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

