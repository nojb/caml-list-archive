Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA25273; Mon, 14 Apr 2003 02:26:33 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA24955 for <caml-list@pauillac.inria.fr>; Mon, 14 Apr 2003 02:26:32 +0200 (MET DST)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h3E0QU900515
	for <caml-list@inria.fr>; Mon, 14 Apr 2003 02:26:30 +0200 (MET DST)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3p2/3.7W) with ESMTP id JAA17215;
	Mon, 14 Apr 2003 09:26:21 +0900 (JST)
To: henri.dubois-ferriere@epfl.ch
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] marshaling polymorphic variants
In-Reply-To: <Pine.LNX.4.44.0304131558530.1750-100000@lcmpc4.epfl.ch>
References: <Pine.LNX.4.44.0304131558530.1750-100000@lcmpc4.epfl.ch>
X-Mailer: Mew version 1.94.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20030414092635D.garrigue@kurims.kyoto-u.ac.jp>
Date: Mon, 14 Apr 2003 09:26:35 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 14
X-Spam: no; 0.00; jacques:01 caml-list:01 marshaling:01 henridf:01 lcavsun:01 marshalling:01 varcc:01 lablgtk:01 variants:01 garrigue:01 behaviour:01 polymorphic:01 henri:03 explicit:03 typing:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Henri Dubois-Ferriere <henridf@lcavsun1.epfl.ch>

> Is the typing behavior of {un,}marshaling polymorphic variants specified 
> anywhere? I didn't find any explicit mention of it in the docs.

What do you mean by "typing behaviour"?
The type should be just the same...
The internal representation itself is described in section 18.3.6 of
the reference manual.
If you are talking about marshalling to and from C, and you have lots
of them, it may be easier (and more efficient) to use the varcc tool
included in lablgtk, which generates headers to easily convert tags.

        Jacques Garrigue

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

