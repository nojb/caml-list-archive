Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA09145; Wed, 23 Apr 2003 17:26:53 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA09107 for <caml-list@pauillac.inria.fr>; Wed, 23 Apr 2003 17:26:52 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from h00045a4799d6.ne.client2.attbi.com (h00045a4799d6.ne.client2.attbi.com [65.96.179.155])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h3NFQpH17567
	for <caml-list@inria.fr>; Wed, 23 Apr 2003 17:26:51 +0200 (MET DST)
Received: by h00045a4799d6.ne.client2.attbi.com (Postfix, from userid 500)
	id E37C92BB77; Wed, 23 Apr 2003 11:31:22 -0400 (EDT)
From: Neel Krishnaswami <neelk@alum.mit.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <16038.45514.773388.957505@h00045a4799d6.ne.client2.attbi.com>
Date: Wed, 23 Apr 2003 11:31:22 -0400
To: caml-list@inria.fr
Subject: Re: [Caml-list] Yelling
In-Reply-To: <3EA6AB00.7020305@post.tepkom.ru>
References: <200304231716.23923.exa@kablonet.com.tr>
	<16038.43443.192953.705022@h00045a4799d6.ne.client2.attbi.com>
	<3EA6AB00.7020305@post.tepkom.ru>
X-Mailer: VM 7.04 under 21.4 (patch 8) "Honest Recruiter" XEmacs Lucid
X-Spam: no; 0.00; neel:01 krishnaswami:01 neelk:01 caml-list:01 foo:01 val:01 functorizing:01 haskell's:01 afaik:01 sig:01 permanent:98 interfaces:01 subtype:01 writes:01 moscal:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Anton Moscal writes:
>
> This isn't true: you can abbrevaite the later declaration as:
>    module type BAR = (* This is a subtype of FOO *)
>      sig
>        include FOO
>        val v' : t
>      end
> 
> AFAIK this is not documented and relatively new feature, but its
> works.

I just tried this out, and it's really cool!

Are there any plans to document this feature and make it permanent?
If so, I might try functorizing Haskell's Edison data structure
libraries (the endless copying of interfaces was the reason I gave up
the last time I tried this).

-- 
Neel Krishnaswami
neelk@alum.mit.edu

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

