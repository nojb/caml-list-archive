Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA05421; Wed, 9 Apr 2003 08:37:23 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA05384 for <caml-list@pauillac.inria.fr>; Wed, 9 Apr 2003 08:37:21 +0200 (MET DST)
Received: from lri.lri.fr (lri.lri.fr [129.175.15.1])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h396bK916727
	for <caml-list@inria.fr>; Wed, 9 Apr 2003 08:37:20 +0200 (MET DST)
Received: from pc8-123 (mail@pc8-123 [129.175.8.123])
          by lri.lri.fr (8.11.6p2/jtpda-5.3.2) with ESMTP id h396War25647
          ; Wed, 9 Apr 2003 08:32:36 +0200 (MEST)
Received: from filliatr by pc8-123 with local (Exim 3.35 #1 (Debian))
	id 19398N-0003wg-00; Wed, 09 Apr 2003 08:32:35 +0200
From: Jean-Christophe Filliatre <Jean-Christophe.Filliatre@lri.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Message-ID: <16019.48771.767140.795030@gargle.gargle.HOWL>
Date: Wed, 9 Apr 2003 08:32:35 +0200
To: Lukasz Lew <ll189417@zodiac.mimuw.edu.pl>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Feature request.
In-Reply-To: <Pine.LNX.4.44.0304081318010.16256-100000@zodiac.mimuw.edu.pl>
References: <Pine.LNX.4.44.0304081318010.16256-100000@zodiac.mimuw.edu.pl>
X-Mailer: VM 7.03 under Emacs 20.7.2
Reply-To: Jean-Christophe.Filliatre@lri.fr (Jean-Christophe Filliatre)
X-MailScanner: Found to be clean
X-Spam: no; 0.00; filliatre:01 lri:01 caml-list:01 lukasz:01 lew:01 soundness:01 filliatr:01 compiler:01 feasible:01 sml:01 writes:01 parser:02 exception:02 module:03 types:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Lukasz Lew writes:
 > 
 >   I found that it would be usefull if some of the language constructions 
 >   could be made localy. For example "open ... in" or "type ... in".
 >   Why "open in" isn't in standard parser?
 > 
 >   Why some constructions are restricted to global (module) use?

Be aware that it may easily lead to scope issues.

In SML, there used to be  local exceptions (exception E in ...) and it
was breaking type soundness, since an exception could obviously escape
the scope  of its declaration (unless  the compiler is  doing a static
analysis over exceptions possibly  raised, difficult yet feasible, but
SML was not).

I guess  that with a  "type ... in"  construct, a type  could probably
escape its scope the same  way, leading to serious issues in assigning
legal types to expressions.

Just a guess...	

-- 
Jean-Christophe Filliâtre (http://www.lri.fr/~filliatr)

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

