Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA17463; Fri, 4 Apr 2003 19:27:59 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA17247 for <caml-list@pauillac.inria.fr>; Fri, 4 Apr 2003 19:27:58 +0200 (MET DST)
Received: from mx01.uni-tuebingen.de (mx01.uni-tuebingen.de [134.2.3.11])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h34HRv922283
	for <caml-list@inria.fr>; Fri, 4 Apr 2003 19:27:57 +0200 (MET DST)
Received: from juist (semeai.Informatik.Uni-Tuebingen.De [134.2.15.66])
	by mx01.uni-tuebingen.de (8.12.3/8.12.3) with ESMTP id h34HRtHU029443
	for <caml-list@inria.fr>; Fri, 4 Apr 2003 19:27:56 +0200
Received: from falk by juist with local (Exim 3.36 #1 (Debian))
	id 191Uyo-0005CU-00
	for <caml-list@inria.fr>; Fri, 04 Apr 2003 19:27:54 +0200
X-Face: "iUeUu$b*W_"w?tV83Y3*r:`rh&dRv}$YnZ3,LVeCZSYVuf[Gpo*5%_=/\_!gc_,SS}[~xZ
 wY77I-M)xHIx:2f56g%/`SOw"Dx%4Xq0&f\Tj~>|QR|vGlU}TBYhiG(K:2<T^
To: <caml-list@inria.fr>
Subject: Re: [Caml-list] Bug?  Printf, %X and negative numbers
References: <Pine.LNX.4.33.0304040959570.2225-100000@eagle.ancor.com>
From: Falk Hueffner <falk.hueffner@student.uni-tuebingen.de>
Date: 04 Apr 2003 19:27:54 +0200
In-Reply-To: <Pine.LNX.4.33.0304040959570.2225-100000@eagle.ancor.com>
Message-ID: <878yuqfa05.fsf@student.uni-tuebingen.de>
Lines: 15
User-Agent: Gnus/5.0808 (Gnus v5.8.8) XEmacs/21.5 (cabbage)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-AntiVirus: checked by AntiVir Milter 1.0.0.8; AVE 6.19.0.3; VDF 6.19.0.5
X-Spam: no; 0.00; falk:01 hueffner:01 caml-list:01 bug:01 printf:01 qlogic:01 foo:01 locality:01 arrays:01 compiler:01 writes:01 identical:03 inline:03 badly:03 parameter:04 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Brian Hurt <brian.hurt@qlogic.com> writes:

> So now you a dozen different specializations of foo<>.  All almost
> identical.  Say bye bye to any code locality.  And this isn't even
> mentioning badly designed templates, like the one I found (no
> kidding!)  for an array template that took it's length as a
> parameter.  The compiler had to produce different specializations of
> the code for arrays length 3 and arrays length 4.

You didn't choose a very good example. The compiler will certainly
inline both operator[] and .size(), which will result in probably
smaller and certainly faster code.

-- 
	Falk

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

