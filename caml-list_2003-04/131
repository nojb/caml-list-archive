Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA22572; Tue, 8 Apr 2003 20:28:12 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA22587 for <caml-list@pauillac.inria.fr>; Tue, 8 Apr 2003 20:28:10 +0200 (MET DST)
Received: from relay.pair.com (relay.pair.com [209.68.1.20])
	by nez-perce.inria.fr (8.11.1/8.11.1) with SMTP id h38IS8929705
	for <caml-list@inria.fr>; Tue, 8 Apr 2003 20:28:09 +0200 (MET DST)
Received: (qmail 2855 invoked from network); 8 Apr 2003 18:28:06 -0000
Received: from arda.pair.com (HELO compaqreview.d6.com) (209.68.1.133)
  by relay.pair.com with SMTP; 8 Apr 2003 18:28:06 -0000
X-pair-Authenticated: 209.68.1.133
Message-Id: <4.3.2.7.2.20030408110617.0389bde8@localhost>
X-Sender: checker@localhost
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Tue, 08 Apr 2003 11:23:12 -0800
To: Brian Hurt <brian.hurt@qlogic.com>
From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] single-line comment request
Cc: Nickolay Semyonov-Kolchin <snob@snob.spb.ru>,
        Brian Hurt <brian.hurt@qlogic.com>, <caml-list@inria.fr>
In-Reply-To: <Pine.LNX.4.33.0304081154300.2225-100000@eagle.ancor.com>
References: <4.3.2.7.2.20030408091635.037a29b0@localhost>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
X-Spam: no; 0.00; hecker:01 checker:01 caml-list:01 noticeably:01 multiline:01 nontrivial:01 avoiding:01 chris:01 caml:01 token:01 complexity:02 nested:02 macros:03 fire:96 library:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


> > Actually, just to fuel the fire, it's not just stylish.  Single-line
> > comments are sometimes easier to work with programmatically
>Not noticeably in my experience.

Hmm, well I guess I have different experiences from you on this front.

This is starting to become a "you don't need that" argument.  The backwards 
compatibility argument is the only one you've given that has any actual 
technical objectivity behind it, and it's pretty weak because almost every 
iteration of caml isn't backwards compatible (if not in core language, then 
library functions, etc.) and I want it that way and think they should 
accelerate that.  Much better to get changes out of the way now than later 
when caml is more popular.

As for editor macros and parsing, I'm familiar with my editor, thanks.  The 
point is you need to write no macros when doing a lot of operations with 
single line comments, versus having to write macros to handle things as 
easily with multiline.  That indicates a complexity for operations that you 
don't seem to acknowledge.  If you're at a different editor and don't have 
your macros, who's better off?  And, the macros are nontrivial in the cases 
of mixed length code and nested comments and whatnot.  A lot of operations 
are just more complicated with bracketed comments since you have to keep 
state [that standard regexs can't handle].  I don't see how you can argue 
the contrary.

There's really no downside that I can see to supporting them besides minor 
backwards compatibility (but hey, if you want to port back, just write an 
editor macro to convert them since you argue they're so easy! :), using 
another token, and somebody has to go implement them.  There are many minor 
upsides, including a bunch that haven't been listed like avoiding questions 
about this topic on the list, and matching people's intuition from C++, 
etc.  It seems like a clear win to me.

Chris


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

