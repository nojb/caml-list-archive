Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA05483; Thu, 3 Apr 2003 18:29:33 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA08984 for caml-list@pauillac.inria.fr; Thu, 3 Apr 2003 18:29:32 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA12881 for <caml-list@pauillac.inria.fr>; Wed, 2 Apr 2003 23:47:04 +0200 (MET DST)
Received: from post.it.helsinki.fi (post.it.helsinki.fi [128.214.205.24])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h32Ll4902334
	for <caml-list@inria.fr>; Wed, 2 Apr 2003 23:47:04 +0200 (MET DST)
Received: from la.iki.fi (root@kruuna.helsinki.fi [128.214.205.14])
	by post.it.helsinki.fi (8.12.9/8.12.2-SPAMmers-sod-off) with ESMTP id h32Ll35X010590;
	Thu, 3 Apr 2003 00:47:03 +0300 (EEST)
Received: from la by la.iki.fi with local (Exim 3.36 #1 (Debian))
	id 190q4Q-0003Wt-00; Thu, 03 Apr 2003 00:46:58 +0300
Date: Thu, 3 Apr 2003 00:46:56 +0300
From: Lauri Alanko <la@iki.fi>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Bug?  Printf, %X and negative numbers
Message-ID: <20030402214655.GA10752@la.iki.fi>
References: <FB4F95390166B14C90E4DD950D69D6E216305D@EXCHVS2.cs.cornell.edu> <C15E9724-654F-11D7-B5BF-000393863F70@exomi.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <C15E9724-654F-11D7-B5BF-000393863F70@exomi.com>
User-Agent: Mutt/1.5.3i
X-Spam: no; 0.00; lauri:01 alanko:01 caml-list:01 bug:01 printf:01 unboxed:01 datatype:01 ints:01 ought:01 stack:02 types:03 trick:03 parameter:04 integers:05 equivalent:05 
X-Spam: no; 0.00; lauri:01 alanko:01 caml-list:01 bug:01 printf:01 unboxed:01 datatype:01 ints:01 ought:01 stack:02 types:03 trick:03 parameter:04 integers:05 equivalent:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> I don't feel strongly about the need for naked integers, so on my part 
> this is just speculation and general curiosity.

For occasional hotspots where naked integers are essential for
performance, wouldn't the easiest solution be to use the equivalent of
GHC's unboxed ints: a special _non-polymorphic_ datatype that doesn't
have tags. This type would be given a kind different from other types to
prevent it from being used as a type parameter. Of course the GC still
needs to be prevented from following such values, but a separate stack
for them ought to do the trick.


Lauri Alanko
la@iki.fi

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

