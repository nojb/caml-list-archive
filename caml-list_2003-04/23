Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA25498; Wed, 2 Apr 2003 11:20:38 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA25809 for <caml-list@pauillac.inria.fr>; Wed, 2 Apr 2003 11:20:37 +0200 (MET DST)
Received: from mail.exomi.com (mail.exomi.com [217.169.64.72])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h329Ka502733
	for <caml-list@inria.fr>; Wed, 2 Apr 2003 11:20:36 +0200 (MET DST)
Received: from exomi.com (oxy.exomi.com [10.0.20.56])
	by mail.exomi.com (Postfix) with ESMTP
	id B2E965D03; Wed,  2 Apr 2003 12:20:35 +0300 (EEST)
Date: Wed, 2 Apr 2003 12:20:35 +0300
Subject: Re: [Caml-list] Bug?  Printf, %X and negative numbers
Content-Type: text/plain; charset=US-ASCII; format=flowed
Mime-Version: 1.0 (Apple Message framework v551)
Cc: caml-list@inria.fr
To: Andreas Rossberg <rossberg@ps.uni-sb.de>
From: Ville-Pertti Keinonen <will@exomi.com>
In-Reply-To: <3E8AA59B.6040008@ps.uni-sb.de>
Message-Id: <5C1B1782-64EC-11D7-8D42-000393863F70@exomi.com>
Content-Transfer-Encoding: 7bit
X-Mailer: Apple Mail (2.551)
X-Spam: no; 0.00; caml-list:01 bug:01 printf:01 rossberg:01 incompatible:01 generic:01 boxing:01 shuffling:01 approaches:01 polymorphic:01 fewer:02 initialize:02 pointer:03 wrote:03 optimizing:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


On Wednesday, Apr 2, 2003, at 11:55 Europe/Helsinki, Andreas Rossberg 
wrote:

> I'm afraid such a scheme is incompatible with polymorphism, where a 
> slot may or may not be a pointer, depending on the actual 
> instantiation. Still, polymorphic code must be able to operate 
> uniformingly in both cases, i.e. the slot may not be shuffled around.

For generic code, it obviously requires either boxing or specialized 
versions of the code, as I suggested in a different message.

I don't particularly like the pointer-count/shuffling idea, it was just 
an example of something that would require far fewer instructions to 
initialize compared to the bitmap.

The main difference between the approaches I've been thinking of and 
what Brian Hurt has been suggesting is that he's thinking of 
externalizing the tag bit while I'm thinking about taking a basically 
boxed approach and optimizing away boxing in as many cases as possible.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

