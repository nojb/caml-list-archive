Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA08885; Tue, 1 Apr 2003 21:55:46 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA08060 for <caml-list@pauillac.inria.fr>; Tue, 1 Apr 2003 21:55:45 +0200 (MET DST)
Received: from relay.pair.com (relay.pair.com [209.68.1.20])
	by concorde.inria.fr (8.11.1/8.11.1) with SMTP id h31Jti501676
	for <caml-list@inria.fr>; Tue, 1 Apr 2003 21:55:44 +0200 (MET DST)
Received: (qmail 46221 invoked from network); 1 Apr 2003 19:55:42 -0000
Received: from arda.pair.com (HELO compaqreview.d6.com) (209.68.1.133)
  by relay.pair.com with SMTP; 1 Apr 2003 19:55:42 -0000
X-pair-Authenticated: 209.68.1.133
Message-Id: <4.3.2.7.2.20030401114643.01cdd9d8@localhost>
X-Sender: checker@localhost
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Tue, 01 Apr 2003 11:51:05 -0800
To: Damien Doligez <Damien.Doligez@inria.fr>, caml-list@inria.fr
From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] naming conflicts (was: camlimages vs. labltk)
In-Reply-To: <45804206-644C-11D7-9F5C-0003930FCE12@inria.fr>
References: <20030330103824.GA1884@iliana>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
X-Spam: no; 0.00; hecker:01 checker:01 caml-list:01 camlimages:01 labltk:01 functor:01 -pack:01 submodules:01 chris:01 cmo:01 semantics:01 simpler:01 linking:02 modules:02 module:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


>First example:
>Second example (somewhat artificial):

Right, both of those jibe with what I thought you were saying.  I don't 
know enough to understand your functor solution, but -pack could also be 
used to solve both of these problems, if it did a real partial-link.  In 
other words, if I -pack B and A, and B uses a module A, then B's imports 
should be resolved to the A that it got packed with.  I don't know if this 
is simpler or more complex than your functor solution, but this one at 
least could still be handled by current partial linking tools (which is 
what -pack uses right now).  In fact, this might already happen with pack, 
since you can -pack modules that refer to other modules, and since they're 
now in a super-module, the semantics are that they should still refer to 
the submodules at the same scope.  So, this should already work with -pack, 
no?  If so, then the cmo/cma partial linking thing is the only thing wrong 
with -pack from both a package and namespace manager perspective.

Or am I missing something obvious?

Chris

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

