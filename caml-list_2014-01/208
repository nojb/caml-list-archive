Return-Path: <yotambarnoy@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id BC6207F719
	for <caml-list@sympa.inria.fr>; Fri, 24 Jan 2014 00:29:02 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  yotambarnoy@gmail.com) identity=pra;
  client-ip=209.85.216.174;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="yotambarnoy@gmail.com";
  x-sender="yotambarnoy@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  yotambarnoy@gmail.com designates 209.85.216.174 as permitted
  sender) identity=mailfrom; client-ip=209.85.216.174;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="yotambarnoy@gmail.com";
  x-sender="yotambarnoy@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qc0-f174.google.com) identity=helo;
  client-ip=209.85.216.174;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="yotambarnoy@gmail.com";
  x-sender="postmaster@mail-qc0-f174.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqgEAIWk4VLRVdiulGdsb2JhbABag0RWqHuKaohSgQkIFg4BAQEBBwsLCRIqgiUBAQEDAUABGxILAQMBBwQGBQsGBAEBAQ0aByIBEQEFAQoBCQgGExKHXgEDCQgNnj6MXIMJkjgKGScDCmSEchEBBQyOcAQHBoQyBIlIjluBMo55GCmEdx4
X-IPAS-Result: AqgEAIWk4VLRVdiulGdsb2JhbABag0RWqHuKaohSgQkIFg4BAQEBBwsLCRIqgiUBAQEDAUABGxILAQMBBwQGBQsGBAEBAQ0aByIBEQEFAQoBCQgGExKHXgEDCQgNnj6MXIMJkjgKGScDCmSEchEBBQyOcAQHBoQyBIlIjluBMo55GCmEdx4
X-IronPort-AV: E=Sophos;i="4.95,709,1384297200"; 
   d="scan'208";a="54615286"
Received: from mail-qc0-f174.google.com ([209.85.216.174])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 24 Jan 2014 00:29:01 +0100
Received: by mail-qc0-f174.google.com with SMTP id x13so3394644qcv.5
        for <caml-list@inria.fr>; Thu, 23 Jan 2014 15:29:01 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        bh=T0xKTVAGuVHAWbAhsLIuFA6t/fdqon0eOx/mMUeenM4=;
        b=UyTxiYa9W9SuJef01FjagmTPMI8ghFZS6caflJGzeyloHd7ZQ/y9HQmax9RduglIbk
         4C3eSpoD4ueKXFAGKmMjXb7cwgtQ99xngOSpEhg3wELbosZoGO7HhiC4jEx+eTLs8YDI
         JkIs9tUtRHKcHlpwFqWqzC8+KEZRX1EVwuOMNRv3pweDAOtm9hxNUYQqw6PEa4r18XLP
         FxfLNmO1JFJQ/7WZ2iDhnFWj/zBFRwGIOBKfsier99lNwfl+J9ziUPbQJiDE9p/suLLb
         yvbQ7fgvsrrOGRCRyxcOg75owz7SiE6AQQLjEiao+OXybehUMsbt4DLdk7H+vZb1GKQ4
         kIog==
X-Received: by 10.140.20.17 with SMTP id 17mr15244631qgi.28.1390519741163;
 Thu, 23 Jan 2014 15:29:01 -0800 (PST)
MIME-Version: 1.0
Received: by 10.224.95.8 with HTTP; Thu, 23 Jan 2014 15:28:40 -0800 (PST)
In-Reply-To: <01c401cf1891$b1fb1360$15f13a20$@ffconsultancy.com>
References: <CAK=fH+iHt+LvgQnTQ700z+dXKx4tyrA+NQdK9obKs++mk+g3OA@mail.gmail.com>
 <sympa.1389956970.13214.762@inria.fr> <20140120101654.GI26447@frosties>
 <08bc01cf17b8$9263d070$b72b7150$@ffconsultancy.com> <20140123092925.GB20624@frosties>
 <01c401cf1891$b1fb1360$15f13a20$@ffconsultancy.com>
From: Yotam Barnoy <yotambarnoy@gmail.com>
Date: Thu, 23 Jan 2014 18:28:40 -0500
Message-ID: <CAN6ygO=4xFdK692LXZmtSB-aQTgVqGuxARHgi3UvD1XOV2Bseg@mail.gmail.com>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: Goswin von Brederlow <goswin-v-b@web.de>, Ocaml Mailing List <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a11c124f639ca3c04f0ab9b33
Subject: Re: [Caml-list] How much optimized is the 'a option type ?

--001a11c124f639ca3c04f0ab9b33
Content-Type: text/plain; charset=ISO-8859-1

Just to clarify, by value types you mean stuff allocated on the stack,
right?

-Yotam


On Thu, Jan 23, 2014 at 6:20 PM, Jon Harrop <jon@ffconsultancy.com> wrote:

> Goswin wrote:
> > So Some x is the value x unless x is an option type?
>
> No, Some x is always a reference to a heap-allocated object that contains
> the value "x".
>
> In fact, I think it is essentially the same as OCaml's representation for
> the 'a option type (except for the run-time "type" information required by
> the GC).
>
> > You can't encode 'a option differently depending on 'a unless you have a
> flag for which encoding it used as well.
>
> Yes. I think it is a bad data representation though. Option types should
> never allocate anything at all. They should be a value type containing a
> boolean "HasValue" and the value itself which has a default in the event
> that it is None. So None=(false, _), Some 3=(true, 3), Some None=(true,
> (false, _)) and Some(Some 3)=(true, (true, 3)). You could even store the
> Booleans and bytes as pack them so Some(Some 3) would take the same amount
> of space (16 bytes) as Some 3.
>
> Cheers,
> Jon.
>
> -----Original Message-----
> From: caml-list-request@inria.fr [mailto:caml-list-request@inria.fr] On
> Behalf Of Goswin von Brederlow
> Sent: 23 January 2014 09:29
> To: caml-list@inria.fr
> Subject: Re: [Caml-list] How much optimized is the 'a option type ?
>
> On Wed, Jan 22, 2014 at 09:26:09PM -0000, Jon Harrop wrote:
> > Goswin wrote:
> > > In F#, with nil pointer, that will be a problem. But I guess nobody
> > > ever
> > has 'a option option types there
> >
> > I believe the representation of Some None in F# is a heap allocated
> > block containing a NULL pointer.
> >
> > Cheers,
> > Jon.
>
> So Some x is the value x unless x is an option type? That wouldn't work for
> polymorphic functions, those taking 'a option. You can't encode 'a option
> differently depending on 'a unless you have a flag for which encoding it
> used as well.
>
> I think you can only have one: option types using nil or 'a option option.
>
> Which doesn't mean you can't have nil too, just not to represent the None
> part of 'a option. In ocaml you would need a new type syntax like
>
> type 'a ptr_option = NIL | PTR of 'a constraint type b . 'a != b ptr_option
>
> MfG
>         Goswin
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>

--001a11c124f639ca3c04f0ab9b33
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div>Just to clarify, by value types you mean stuff alloca=
ted on the stack, right?<br><br></div>-Yotam<br></div><div class=3D"gmail_e=
xtra"><br><br><div class=3D"gmail_quote">On Thu, Jan 23, 2014 at 6:20 PM, J=
on Harrop <span dir=3D"ltr">&lt;<a href=3D"mailto:jon@ffconsultancy.com" ta=
rget=3D"_blank">jon@ffconsultancy.com</a>&gt;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex"><div class=3D"im">Goswin wrote:<br>
&gt; So Some x is the value x unless x is an option type?<br>
<br>
</div>No, Some x is always a reference to a heap-allocated object that cont=
ains<br>
the value &quot;x&quot;.<br>
<br>
In fact, I think it is essentially the same as OCaml&#39;s representation f=
or<br>
the &#39;a option type (except for the run-time &quot;type&quot; informatio=
n required by<br>
the GC).<br>
<div class=3D"im"><br>
&gt; You can&#39;t encode &#39;a option differently depending on &#39;a unl=
ess you have a<br>
flag for which encoding it used as well.<br>
<br>
</div>Yes. I think it is a bad data representation though. Option types sho=
uld<br>
never allocate anything at all. They should be a value type containing a<br>
boolean &quot;HasValue&quot; and the value itself which has a default in th=
e event<br>
that it is None. So None=3D(false, _), Some 3=3D(true, 3), Some None=3D(tru=
e,<br>
(false, _)) and Some(Some 3)=3D(true, (true, 3)). You could even store the<=
br>
Booleans and bytes as pack them so Some(Some 3) would take the same amount<=
br>
of space (16 bytes) as Some 3.<br>
<div class=3D"im HOEnZb"><br>
Cheers,<br>
Jon.<br>
<br>
-----Original Message-----<br>
From: <a href=3D"mailto:caml-list-request@inria.fr">caml-list-request@inria=
.fr</a> [mailto:<a href=3D"mailto:caml-list-request@inria.fr">caml-list-req=
uest@inria.fr</a>] On<br>
Behalf Of Goswin von Brederlow<br>
</div><div class=3D"im HOEnZb">Sent: 23 January 2014 09:29<br>
To: <a href=3D"mailto:caml-list@inria.fr">caml-list@inria.fr</a><br>
Subject: Re: [Caml-list] How much optimized is the &#39;a option type ?<br>
<br>
</div><div class=3D"HOEnZb"><div class=3D"h5">On Wed, Jan 22, 2014 at 09:26=
:09PM -0000, Jon Harrop wrote:<br>
&gt; Goswin wrote:<br>
&gt; &gt; In F#, with nil pointer, that will be a problem. But I guess nobo=
dy<br>
&gt; &gt; ever<br>
&gt; has &#39;a option option types there<br>
&gt;<br>
&gt; I believe the representation of Some None in F# is a heap allocated<br>
&gt; block containing a NULL pointer.<br>
&gt;<br>
&gt; Cheers,<br>
&gt; Jon.<br>
<br>
So Some x is the value x unless x is an option type? That wouldn&#39;t work=
 for<br>
polymorphic functions, those taking &#39;a option. You can&#39;t encode &#3=
9;a option<br>
differently depending on &#39;a unless you have a flag for which encoding i=
t<br>
used as well.<br>
<br>
I think you can only have one: option types using nil or &#39;a option opti=
on.<br>
<br>
Which doesn&#39;t mean you can&#39;t have nil too, just not to represent th=
e None<br>
part of &#39;a option. In ocaml you would need a new type syntax like<br>
<br>
type &#39;a ptr_option =3D NIL | PTR of &#39;a constraint type b . &#39;a !=
=3D b ptr_option<br>
<br>
MfG<br>
=A0 =A0 =A0 =A0 Goswin<br>
<br>
--<br>
Caml-list mailing list. =A0Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" target=3D"_blank">ht=
tps://sympa.inria.fr/sympa/arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
<br>
<br>
--<br>
Caml-list mailing list. =A0Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" target=3D"_blank">ht=
tps://sympa.inria.fr/sympa/arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
</div></div></blockquote></div><br></div>

--001a11c124f639ca3c04f0ab9b33--
