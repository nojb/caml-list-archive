Return-Path: <shmibs@airen-no-jikken.icu>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id C25DD822B8
	for <caml-list@sympa.inria.fr>; Tue, 25 Dec 2018 10:50:50 +0100 (CET)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=shmibs@airen-no-jikken.icu; spf=Pass smtp.mailfrom=shmibs@airen-no-jikken.icu; spf=Pass smtp.helo=postmaster@airen-no-jikken.icu
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  shmibs@airen-no-jikken.icu) identity=pra;
  client-ip=159.203.210.17;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="shmibs@airen-no-jikken.icu";
  x-sender="shmibs@airen-no-jikken.icu";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  shmibs@airen-no-jikken.icu designates 159.203.210.17 as
  permitted sender) identity=mailfrom;
  client-ip=159.203.210.17;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="shmibs@airen-no-jikken.icu";
  x-sender="shmibs@airen-no-jikken.icu";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  postmaster@airen-no-jikken.icu designates 159.203.210.17 as
  permitted sender) identity=helo; client-ip=159.203.210.17;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="shmibs@airen-no-jikken.icu";
  x-sender="postmaster@airen-no-jikken.icu";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
IronPort-PHdr: =?us-ascii?q?9a23=3AfEDKoBRJB6iPe2sHxrT/J6sqFdpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa6yYBeN2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRPDI28?=
 =?us-ascii?q?cYUBEukPPehXoIbhulQBrxWxCBKwBO/z0DJEmmP60Lc43uknDArI3BYgH9ULsH?=
 =?us-ascii?q?nMr9X6LrsSUeCrw6nSzDXDae1Z0ir65YjTchAhpPCMUqlrccfK00YvFhnFgUuW?=
 =?us-ascii?q?qYD8OTOV0f0Bs2qa7+pjVuKglWgnpxtwojez28chk4/EjZ8bxFDD8CV22oc1Jd?=
 =?us-ascii?q?ugRU58fdGrCp5QtyWAO4txWMMiTHlkuCc8yr0cuJ60ZjIGyJo9xxPZdveJcJCI?=
 =?us-ascii?q?7wr+WOuRJTp0nmxpdK6xihqo70Ss1/HwWtOp3FtIqCdOj8PCuWoX1xPJ78iKUv?=
 =?us-ascii?q?t98Vml2TaIzw3c8OBEIVoqmqrdMpIhxLkwmoMRsUTCHS/2m1v5jKmMekUl5ueo?=
 =?us-ascii?q?9vzrYrTgppCCK495khzyP6Qql8ClH+g0LgYDU3KF9eihyLHv51D1TbdSgv0ziK?=
 =?us-ascii?q?bZsZTaJcoBpq6+Bg9Yyp0j6xa6Dzeny9sYhmIKI0hEeBKdkYfpPUjCIPb/Dfum?=
 =?us-ascii?q?gVSskTRrx/PYMb3nGJnNL2TMkKr5cbZn90Fc0BYzzcxY559MFr4OOvfzWkvouN?=
 =?us-ascii?q?zcDx85KBC0zv38CNR904MeQXiADrWYMKPUq1+I5/ggL/OCZI8P637BLK0G6vjo?=
 =?us-ascii?q?gGM50XYRdKzh+JoTbH2iVqBlLkOfbGbsi9sIFGILug4zVsTljVSDVXhYYHPkDI?=
 =?us-ascii?q?wm4TRuC4u6DYrZR4agyOia3CK6FIZ+b2FcB1bJF3CtdYSHWPoKLiOZP5kywXQ/?=
 =?us-ascii?q?SbG9Rtp5hlmVvwjgxu8id7KMo3xKhdfYzNFwotbru1Q3/D1wAd6a1jvUHWh1hG?=
 =?us-ascii?q?4OAjkxmaJ+ok9wzBGC2rUq2qUER+wW3OtAV0IBDbCZ1/ZzUYmgUwPbc9HMTlHj?=
 =?us-ascii?q?QNSlAjw3CNM63o1WOhsvK5CZlhnGmhGSLfoVmriMXsVm+6PG0n60IcE4yXfF16?=
 =?us-ascii?q?QnyVgtX5kWOA=3D=3D?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0BpDwBA/CFc/xHSy59jHAECFwECBQQBg?=
 =?us-ascii?q?VaBWSlmgQIng36UXQEBAQEBB4E1mV4NIwgBhEACTAmCIRsGAQQ0EgEDAQECAQE?=
 =?us-ascii?q?BAQFsHAyCOikBgmcBBSMdAQEsCwEPCxgCAgUEHQICDwUYMYM2gXQND6YScIEvg?=
 =?us-ascii?q?nYBAQWCQ4RUCIELihiBHBd4gQeEI4EoGQGDF4MwMYImiX6XTwmDFIN+hjyEDyS?=
 =?us-ascii?q?BYE2POYpfg3uLT4FdIYFWgQU7gmwJgh4MC38BCYN/gQuCS4U/QjCBAwGLHII+A?=
 =?us-ascii?q?QE?=
X-IPAS-Result: =?us-ascii?q?A0BpDwBA/CFc/xHSy59jHAECFwECBQQBgVaBWSlmgQIng36?=
 =?us-ascii?q?UXQEBAQEBB4E1mV4NIwgBhEACTAmCIRsGAQQ0EgEDAQECAQEBAQFsHAyCOikBg?=
 =?us-ascii?q?mcBBSMdAQEsCwEPCxgCAgUEHQICDwUYMYM2gXQND6YScIEvgnYBAQWCQ4RUCIE?=
 =?us-ascii?q?LihiBHBd4gQeEI4EoGQGDF4MwMYImiX6XTwmDFIN+hjyEDySBYE2POYpfg3uLT?=
 =?us-ascii?q?4FdIYFWgQU7gmwJgh4MC38BCYN/gQuCS4U/QjCBAwGLHII+AQE?=
X-IronPort-AV: E=Sophos;i="5.56,395,1539640800"; 
   d="scan'208";a="290128232"
Received: from airen-no-jikken.icu ([159.203.210.17])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 25 Dec 2018 10:50:49 +0100
Received: by airen-no-jikken.icu (Postfix, from userid 1002)
	id 2AAD2187FB8; Tue, 25 Dec 2018 09:50:46 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=airen-no-jikken.icu;
	s=mail; t=1545731446;
	bh=KYa+5kQukCVyyiagX4KsscuVkGGB6+l9u+PDWRihjCc=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To;
	b=q8GkJ0uvJxDBRZPj3dMEohQ3N6lEB9H+QXdQoMUoILmE7jKCooroH7rrmakmyVXWv
	 CHBBvWGqDMDE3wNWajF/axlQZG3dcjDZp38ho/P1gWZPVdcOjnjbzrc6IWIHnsuF1/
	 G2zM6gwHHvfjmxWsSvYhEzdSzdage+LkY3CgHyzU=
Date: Tue, 25 Dec 2018 09:50:46 +0000
From: katherine <shmibs@airen-no-jikken.icu>
To: Kenneth Adam Miller <kennethadammiller@gmail.com>
Cc: caml-list@inria.fr
Message-ID: <20181225095046.GA19776@airen-no-jikken.icu>
References: <CAK7rcp-JHkjq8fEaz=KdM+hbCwC_TLhu6cSXmWA+uzsjiSLsUg@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
In-Reply-To: <CAK7rcp-JHkjq8fEaz=KdM+hbCwC_TLhu6cSXmWA+uzsjiSLsUg@mail.gmail.com>
User-Agent: Mutt/1.10.1 (2018-07-13)
Subject: Re: [Caml-list] Opam improvement request

i'm pretty new to opam here, but do know that many OS package managers,
like pacman or freebsd's pkg, will generally keep a package cache, so
that, if something goes wrong, it's possible to check the package
manager log for which packages have changed and then reinstall the
(already on disk) previous versions. is that something like you mean?

obviously that could be automated in a couple of ways while still
keeping things simple, like having the package manager write a file for
the most recent action, with before and after state (statefulness oh no
D=), and having something like a revert command that tries to reinstate
that most previous version.

add also some configuration for how many versions of a package should be
kept at a time (2 or 3 or something), with the older versions deleted
automatically, and the cache size could also be kept fairly low.

On Mon, Dec 24, 2018 at 04:10:44PM -0500, Kenneth Adam Miller wrote:
> I'm not sure if opam already does this, and I'm not unhappy with opam at
> all about it, but I'd like to be able to have installation or upgrade
> commands have fast rollback/forward capability. Let me explain what I mean.
> 
> So far as I've seen or know about, if an install fails then opam will give
> a file that describes the state it had and which you can execute using a
> command it also gives. I'm too lazy to look that up, but that's a different
> functionality than what I'm describing - and more importantly, it
> represents part of the problem because it requires building all of the
> packages from source and because it itself suffers from the fragility that
> I'm trying to get around.
> 
> What I'd like is, if opam could quickly snap back and forth between
> combinations of package versions. I don't want to manage specification
> files, I'd kind of like a docker like interface where I could just put
> notes by dated, named package selection options and have a command manage
> it for me. I don't want to track files manually.
> 
> I've had some scenarios where opam tells me how to restore my state, after
> attempting to do an install or upgrade but in the process had an error.
> What has actually happened then was, I had had a working version of
> packages, which then broke or went away on the possibility of some version
> change. opam packages can change rather quickly too, so I remember I once
> just had to quit and come back, and doing an opam update got the changes to
> take successfully because someone pushed a change that fixed it. It would
> nice if, if there are any errors, I could keep my old state without even
> having to re-install that. And that's because I don't care if I have even
> 20 times as much space consumed by opam because opam is keeping old states.
> I just want to always have some working system.
> 
> I hope it doesn't sound like I'm complaining or being negative. All I'm
> saying is I don't want to have some dependency version mismatch cause the
> current system to become inoperable, and I know that opam can maintain
> multiple compilers and all of that, and that there are other levels where I
> could apply this, even using docker I can entirely get rid of it. But if
> opam were to use snapshotting as the default behavior and exchanging
> snapshots merely meant swapping out folder names within the opam directory,
> that would be really fantastic.
> 
> Often, doing an update or upgrade means that all the packages that depend
> on it have to get rebuilt. OCaml is fantastic for having such a fast build
> time, but this still takes hours if you have large dependencies. Again,
> opam packages change all the time, and if you don't regularly stay up to
> date, it's really easy to get downwind of drastic changes; leaping many
> versions for a given package can trigger the kinds of unexpected breaks
> that I'm talking about.
> 
> It makes sense to me to think of opam package installs as being in a kind
> of git staging area, where I can consider them tentatively and test it
> against a particular package, but easily and quickly revert back to other
> built packages (without needing to rebuild something again unnecessarily)
> that I know are working.
> 
> -- 
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list https://inbox.ocaml.org/caml-list
> Forum: https://discuss.ocaml.org/
> Bug reports: http://caml.inria.fr/bin/caml-bugs
