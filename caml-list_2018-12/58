Return-Path: <stedolan@stedolan.net>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 8285A824CF
	for <caml-list@sympa.inria.fr>; Thu, 20 Dec 2018 10:46:40 +0100 (CET)
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=stephen.dolan@cl.cam.ac.uk; spf=None smtp.mailfrom=stedolan@stedolan.net; spf=None smtp.helo=postmaster@mail-wr1-f53.google.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  stephen.dolan@cl.cam.ac.uk) identity=pra;
  client-ip=209.85.221.53;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="stedolan@stedolan.net";
  x-sender="stephen.dolan@cl.cam.ac.uk";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  stedolan@stedolan.net) identity=mailfrom;
  client-ip=209.85.221.53;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="stedolan@stedolan.net";
  x-sender="stedolan@stedolan.net";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-wr1-f53.google.com) identity=helo;
  client-ip=209.85.221.53;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="stedolan@stedolan.net";
  x-sender="postmaster@mail-wr1-f53.google.com";
  x-conformance=sidf_compatible
IronPort-PHdr: =?us-ascii?q?9a23=3A1b6ZohTH0RTsCa02ehwimLvqTNpsv+yvbD5Q0YIu?=
 =?us-ascii?q?jvd0So/mwa69bB2N2/xhgRfzUJnB7Loc0qyK6/CmATRIyK3CmUhKSIZLWR4BhJ?=
 =?us-ascii?q?detC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TW94jEIBxrwKxd+?=
 =?us-ascii?q?KPjrFY7OlcS30P2594HObwlSizexfbB/IA+qoQnNq8IbnZZsJqEtxxXTv3BGYf?=
 =?us-ascii?q?5WxWRmJVKSmxbz+MK994N9/ipTpvws6ddOXb31cKokQ7NYCi8mM30u683wqRbD?=
 =?us-ascii?q?VwqP6WACXWgQjxFFHhLK7BD+Xpf2ryv6qu9w0zSUMMHqUbw5Xymp4rx1QxH0li?=
 =?us-ascii?q?gIKz858HnWisNuiqJbvAmhrAF7z4LNfY2ZKOZycqbbcNgHR2ROQ9xRWjRODYOy?=
 =?us-ascii?q?bYQBD+QPM+VFoYfju1QDtgGxCRW2Ce711jNEmn370Ksn2OohCwHG2wkgEsoTvn?=
 =?us-ascii?q?TIstr1LKcSXv6zzKLVwzvDaPdW1i376IPVdR0huu2MUqxoccrR10YvERnJgUiX?=
 =?us-ascii?q?qYzhJTyV0P8AvHSf7+Z6Se2gkWsnpxtrrTez3Mssl4rJi5sTx1vZ9it52J44Kc?=
 =?us-ascii?q?OkREN/e9KpE5tduzuEO4doX88uWWFltSg8x7Ybo5C0ZjIKx44ixxPHa/yIbYyI?=
 =?us-ascii?q?4hX7WeaUOzh4hXZldKuxhhao7ESs0+P8W8m63VpQoSpFld7Mtn8J1xPN8MSIVv?=
 =?us-ascii?q?x9/kK51TaO0QDc9P1ELFgqmabHL5Mt2L09m5oJvUjdACP6hV/6ga+Ye0k8/+in?=
 =?us-ascii?q?8eXnYrHopp+GMI90jxnzMr8ymsOhHOs4NQwOUHKd+emnz73j4VP2T6hNjv0yiK?=
 =?us-ascii?q?bZtorWJcIFqa6lGwNVyJos6w6jDze619QVhWUII0hAeBKDloTpP1DOIOvkDfqk?=
 =?us-ascii?q?mFStkDJrx+jcMbH7A5XNKGLDkLb7crpn5U5c0ll78dcKw5NSBqoIMbreQFXwst?=
 =?us-ascii?q?PECRlxZwi1xer8AcQ725kEWGSAHqifGKzXuF6MoOkoJr/fSpUSvWPGN/U95/Po?=
 =?us-ascii?q?xVM+nVYbNf2ywZYPaH2+WPhhJ0yfSXHoxNwIFCEDtUwjT7q52xW5TTdPaiPqDO?=
 =?us-ascii?q?oH7TYhBdfjVN+bH9H/sPm6xC6+W6ZuSCVDA1GIH23vctzYCewQZS6VJsZn1DoJ?=
 =?us-ascii?q?Ser5EtNz5VSVrAb/joFfAK/M4CRB6cDo0J5+7uiVnBp06D8mV53AgVHIdHl9my?=
 =?us-ascii?q?YzfxFz3K17phYgmFKK0Kw9nOYBUNIOvLVGVQA1MZOaxOt/WYj/?=
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: =?us-ascii?q?A0DXAQBJZBtcgDXdVdFjHgEGBwaBZYNsJ?=
 =?us-ascii?q?4N9gR2SeIINiRWIbYdXDIdZGgYGNBIBAwEBAgEBAQEBEwEBCQ0JCCcxgjYkAYJ?=
 =?us-ascii?q?iAQQBI1YFCwkCBAc3AgIhARIBBQEcBhOFDAMNCIwRkAg8ixmBL4gCDSsfgVMSj?=
 =?us-ascii?q?C2BVz+EI4JXhTKCVwKJJ4Y1kS4zBwKCJQSMCoMyGJFcj1mKIw8hgTyBdzMaND8?=
 =?us-ascii?q?xBoI1kFtCMI5nAQE?=
X-IPAS-Result: =?us-ascii?q?A0DXAQBJZBtcgDXdVdFjHgEGBwaBZYNsJ4N9gR2SeIINiRW?=
 =?us-ascii?q?IbYdXDIdZGgYGNBIBAwEBAgEBAQEBEwEBCQ0JCCcxgjYkAYJiAQQBI1YFCwkCB?=
 =?us-ascii?q?Ac3AgIhARIBBQEcBhOFDAMNCIwRkAg8ixmBL4gCDSsfgVMSjC2BVz+EI4JXhTK?=
 =?us-ascii?q?CVwKJJ4Y1kS4zBwKCJQSMCoMyGJFcj1mKIw8hgTyBdzMaND8xBoI1kFtCMI5nA?=
 =?us-ascii?q?QE?=
X-IronPort-AV: E=Sophos;i="5.56,376,1539640800"; 
   d="scan'208,217";a="361193811"
Received: from mail-wr1-f53.google.com ([209.85.221.53])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 20 Dec 2018 10:46:39 +0100
Received: by mail-wr1-f53.google.com with SMTP id t27so1011509wra.6
        for <caml-list@inria.fr>; Thu, 20 Dec 2018 01:46:39 -0800 (PST)
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20161025;
        h=x-gm-message-state:mime-version:references:in-reply-to:from:date
         :message-id:subject:to:cc;
        bh=0HiUVQ2iMVU2BD/K9R9GEbB/Wm53UUju436dBfeim5E=;
        b=W3ncLR7djI99d6oN9q/vFGUIauBum3ivMR1/6364R2WTBRG5XS87mlKwYuo16JETl8
         /Kt/oWBgTULsGZfaqIY15oui0vvKF6kiskf1neR+/cpAORxobpD3CwYAmAAY8onxp6LW
         qp4hhXqqvw+CAvBvB38DrmYpXGEO8NZs6FrBlc7AVIrh9ZhNSnVqh2eJiuOsWc8IOuA5
         Qs3bj50cKBtHz7RYUHyQQRotmZY0kveKTXP/rXGyHdzEH6Tpt1e9QEQPYrmQNjWGY1HA
         6EF5nSL7S+5kPkOrAUlFH/QCg0cEME9qnwY2C1VuNF1mXMvl4ht47Gxcbvu8U0GRCRHM
         53iA==
X-Gm-Message-State: AA+aEWb+NLWB62YwIKtJfEViwt17Yfqn+Kv1+8WG8CPYxXtbntQVQ2wU
	gpK9BrFa0BtQY0iAFkO3K2aJFyAg1GyK6XcLn3QG6D9IMv1zJw==
X-Google-Smtp-Source: AFSGD/Uj4mLPNnCVqD06Su1fkkxL17yHeEr0dt0POASdEQnQns1YZiQWHimrfVZsE6TEq8PC9ER+QrRNq8oNphzeq9U=
X-Received: by 2002:adf:c846:: with SMTP id e6mr21067893wrh.243.1545299198829;
 Thu, 20 Dec 2018 01:46:38 -0800 (PST)
MIME-Version: 1.0
References: <CAPeKkNi9P2_vGxeYgybpffz7W2S5tMV2oeTsPHv5jOes=_gbGA@mail.gmail.com>
In-Reply-To: <CAPeKkNi9P2_vGxeYgybpffz7W2S5tMV2oeTsPHv5jOes=_gbGA@mail.gmail.com>
From: Stephen Dolan <stephen.dolan@cl.cam.ac.uk>
Date: Thu, 20 Dec 2018 09:46:27 +0000
Message-ID: <CA+mHimNHxZOAc8kUuZ1oB1RxWZ6NLWW9n=OV4rkitUt9cELw=A@mail.gmail.com>
To: Lindsay Errington <lindsay.errington@gmail.com>
Cc: Ocaml Mailing List <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary="000000000000d17ab6057d71017c"
Subject: Re: [Caml-list] Possible ephemeron bug?

--000000000000d17ab6057d71017c
Content-Type: text/plain; charset="UTF-8"

On Thu, 20 Dec 2018 at 00:30, Lindsay Errington <lindsay.errington@gmail.com>
wrote:

> If however, I use the standalone bytecode compiler or the native compiler
> (4.07.1), then the entries are not nullified. Is this a bug or is there
> another way to persuade the garbage collector to clobber the entries?
>

Thanks for the detailed example!

The issue is with the test code at the end:

    let (root,map) =
      let map = [] in
      let (k0,map) = intern 0 (str 1) map in
      let (k1,map) = intern 1 (Link k0) map in
      let (k2,map) = intern 2 (Link k1) map in
      (k2,map);;

    Fmt.printf "root=%a, map=@[<v>%a@]@." pp_key root pp_map map;;

    let map = upd root (str 2) map;;

    Fmt.printf "root=%a map1=@[<v>%a@]@." pp_key root pp_map map;;

Both the bytecode and native code compilers take any value bound to a
global to be reachable forever, even if that global is later shadowed by
another global of the same name. The ephemerons don't get cleared, because
the original map is still alive.

You can change the code to avoid putting the original map in a global
constant:

    let (root, map) =
      let map = [] in
      let (k0,map) = intern 0 (str 1) map in
      let (k1,map) = intern 1 (Link k0) map in
      let (k2,map) = intern 2 (Link k1) map in
      Fmt.printf "root=%a, map=@[<v>%a@]@." pp_key k2 pp_map map;
      let map = upd k2 (str 2) map in
      (k2, map);;

    Fmt.printf "root=%a map1=@[<v>%a@]@." pp_key root pp_map map;;

With this version, the original map becomes unreachable, so the GC can
clear the ephemerons.

Stephen

--000000000000d17ab6057d71017c
Content-Type: text/html; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div dir=3D"ltr"><div dir=3D"ltr"><div dir=3D"ltr">On Thu,=
 20 Dec 2018 at 00:30, Lindsay Errington &lt;<a href=3D"mailto:lindsay.erri=
ngton@gmail.com">lindsay.errington@gmail.com</a>&gt; wrote:<br></div><div c=
lass=3D"gmail_quote"><blockquote class=3D"gmail_quote" style=3D"margin:0px =
0px 0px 0.8ex;border-left:1px solid rgb(204,204,204);padding-left:1ex"><div=
 dir=3D"ltr"><div>If however, I use the standalone bytecode compiler or the=
 native compiler (4.07.1), then the entries are not nullified. Is this a bu=
g or is there another way to persuade the garbage collector to clobber the =
entries?</div></div></blockquote><div><br></div><div>Thanks for the detaile=
d example!</div><div><br></div><div>The issue is with the test code at the =
end:</div><div><br></div><div><div>=C2=A0 =C2=A0 let (root,map) =3D</div><d=
iv>=C2=A0 =C2=A0 =C2=A0 let map =3D [] in</div><div>=C2=A0 =C2=A0 =C2=A0 le=
t (k0,map) =3D intern 0 (str 1) map in</div><div>=C2=A0 =C2=A0 =C2=A0 let (=
k1,map) =3D intern 1 (Link k0) map in</div><div>=C2=A0 =C2=A0 =C2=A0 let (k=
2,map) =3D intern 2 (Link k1) map in</div><div>=C2=A0 =C2=A0 =C2=A0 (k2,map=
);;</div><div>=C2=A0 =C2=A0=C2=A0</div><div>=C2=A0 =C2=A0 Fmt.printf &quot;=
root=3D%a, map=3D@[&lt;v&gt;%a@]@.&quot; pp_key root pp_map map;;</div><div=
>=C2=A0 =C2=A0=C2=A0</div><div>=C2=A0 =C2=A0 let map =3D upd root (str 2) m=
ap;;</div><div>=C2=A0 =C2=A0=C2=A0</div><div>=C2=A0 =C2=A0 Fmt.printf &quot=
;root=3D%a map1=3D@[&lt;v&gt;%a@]@.&quot; pp_key root pp_map map;;</div></d=
iv><div><br></div><div>Both the bytecode and native code compilers take any=
 value bound to a global to be reachable forever, even if that global is la=
ter shadowed by another global of the same name. The ephemerons don&#39;t g=
et cleared, because the original map is still alive.</div><div><br></div><d=
iv>You can change the code to avoid putting the original map in a global co=
nstant:</div><div><br></div><div><div>=C2=A0 =C2=A0 let (root, map) =3D</di=
v><div>=C2=A0 =C2=A0 =C2=A0 let map =3D [] in</div><div>=C2=A0 =C2=A0 =C2=
=A0 let (k0,map) =3D intern 0 (str 1) map in</div><div>=C2=A0 =C2=A0 =C2=A0=
 let (k1,map) =3D intern 1 (Link k0) map in</div><div>=C2=A0 =C2=A0 =C2=A0 =
let (k2,map) =3D intern 2 (Link k1) map in</div><div>=C2=A0 =C2=A0 =C2=A0 F=
mt.printf &quot;root=3D%a, map=3D@[&lt;v&gt;%a@]@.&quot; pp_key k2 pp_map m=
ap;</div><div>=C2=A0 =C2=A0 =C2=A0 let map =3D upd k2 (str 2) map in</div><=
div>=C2=A0 =C2=A0 =C2=A0 (k2, map);;</div><div>=C2=A0 =C2=A0 =C2=A0 =C2=A0=
=C2=A0</div><div>=C2=A0 =C2=A0 Fmt.printf &quot;root=3D%a map1=3D@[&lt;v&gt=
;%a@]@.&quot; pp_key root pp_map map;;</div></div><div><br></div><div>With =
this version, the original map becomes unreachable, so the GC can clear the=
 ephemerons.</div><div><br></div><div>Stephen</div></div></div></div></div>

--000000000000d17ab6057d71017c--
