Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA01214; Sun, 23 Feb 2003 18:53:26 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA01448 for <caml-list@pauillac.inria.fr>; Sun, 23 Feb 2003 18:53:26 +0100 (MET)
Received: from mailhost.ens-lyon.fr (pluvier.ens-lyon.fr [140.77.167.5])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h1NHrPH07908
	for <caml-list@inria.fr>; Sun, 23 Feb 2003 18:53:25 +0100 (MET)
Received: from babasse.residence.ens-lyon.fr ([140.77.128.220] helo=Babasse)
	by mailhost.ens-lyon.fr with smtp (Exim 3.35 #1 (Debian))
	id 18n0JV-0007mN-00; Sun, 23 Feb 2003 18:53:21 +0100
Date: Sun, 23 Feb 2003 18:49:31 +0100
From: Samuel Mimram <Samuel.Mimram@ens-lyon.fr>
To: "Alexander S. Usov" <A.S.Usov@KVI.nl>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] One question
Message-Id: <20030223184931.39701d61.Samuel.Mimram@ens-lyon.fr>
In-Reply-To: <1046021311.12770.12.camel@kvip88.KVI.nl>
References: <1046017748.12274.14.camel@kvip88.KVI.nl>
	<20030223181203.6cf41436.Samuel.Mimram@ens-lyon.fr>
	<1046021311.12770.12.camel@kvip88.KVI.nl>
X-Mailer: Sylpheed version 0.8.10claws13 (GTK+ 1.2.10; i386-debian-linux-gnu)
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Sorry, I think I answered too quickly. The exception is effectively raised...

Samuel.

On Sun, 23 Feb 2003 18:28:31 +0100
"Alexander S. Usov" <A.S.Usov@KVI.nl> wrote:

> On Sun, 2003-02-23 at 18:12, Samuel Mimram wrote:
> > Hello.
> > 
> > I think you are confusing the operators = and ==. = is used to check
> > if two objects have the same "logical" contents whether == checks if 
> > two objects are exactly the same in memory.
> > When you type a = insert a "word", the function insert returns a new
> > lex_tree which has the same contents as the variable a but is another
> > object in memory. That is why I think you wanted to write :
> > 
> > let a = insert [] "word"
> > in
> > a = insert a "word" ;;
> > 
> > which effectively returns true. It is important to understand that the
> > variable a and the result returned by the function insert are logically 
> > the same but not physically.
> 
> Yes, I understand that == checks for a physical equality.
> But in case the word is already present in tree I return the same
> dictionary (note "raise Already" in insert). 
> The idea was to make shure that the dictionary won't be modified if we
> do not change anything in it.
> 
> -- 
> Best regards,
>   Alexander.
> 
> -------------------
> To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
> Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners


-- 
Samuel Mimram

Samuel.Mimram@ens-lyon.fr
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

