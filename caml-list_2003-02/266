Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA06163; Sun, 23 Feb 2003 21:21:56 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA05947 for <caml-list@pauillac.inria.fr>; Sun, 23 Feb 2003 21:21:55 +0100 (MET)
Received: from relay.pair.com (relay.pair.com [209.68.1.20])
	by concorde.inria.fr (8.11.1/8.11.1) with SMTP id h1NKLsT08711
	for <caml-list@inria.fr>; Sun, 23 Feb 2003 21:21:54 +0100 (MET)
Received: (qmail 31793 invoked from network); 23 Feb 2003 20:21:52 -0000
Received: from arda.pair.com (HELO compaqreview.d6.com) (209.68.1.133)
  by relay.pair.com with SMTP; 23 Feb 2003 20:21:52 -0000
X-pair-Authenticated: 209.68.1.133
Message-Id: <4.3.2.7.2.20030223121117.02c6ae80@localhost>
X-Sender: checker@localhost
X-Mailer: QUALCOMM Windows Eudora Version 4.3.2
Date: Sun, 23 Feb 2003 12:17:53 -0800
To: Alessandro Baretta <alex@baretta.com>, Ocaml <caml-list@inria.fr>
From: Chris Hecker <checker@d6.com>
Subject: Re: [Caml-list] Linear programming
In-Reply-To: <3E592928.7000405@baretta.com>
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"; format=flowed
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


>Does anyone know if and where I could find a prepackaged LP library 
>written in Ocaml or linkable with Ocaml? I have found the GNU Linear 
>Programming Kit. Has anybody written a stubs library for it?

Is this for large scale production work with big sparse matrices, or small 
dense problems?  I have an implementation of Lemke's algorithm I wrote for 
solving dense Linear Complementarity Problems.  You can easily transform an 
LP into and LCP and solve it, but this isn't the most efficient way.  So, 
if this is for "toy" problems (n < 100) then it'd work fine on modern 
machines, but it won't work for you if you want something totally optimal 
for huge systems, etc.  You're welcome to use the code if you'd like.  Most 
paths are pretty well tested (it's called every frame in my game).  It 
depends on my crappy linear algebra library as well.

Let me know,
Chris


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

