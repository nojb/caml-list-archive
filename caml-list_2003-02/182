Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA10158; Wed, 19 Feb 2003 18:14:22 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA10155 for <caml-list@pauillac.inria.fr>; Wed, 19 Feb 2003 18:14:21 +0100 (MET)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from web13808.mail.yahoo.com (web13808.mail.yahoo.com [216.136.175.18])
	by nez-perce.inria.fr (8.11.1/8.11.1) with SMTP id h1JHEKP24252
	for <caml-list@inria.fr>; Wed, 19 Feb 2003 18:14:20 +0100 (MET)
Message-ID: <20030219171419.95167.qmail@web13808.mail.yahoo.com>
Received: from [162.93.253.79] by web13808.mail.yahoo.com via HTTP; Wed, 19 Feb 2003 09:14:19 PST
Date: Wed, 19 Feb 2003 09:14:19 -0800 (PST)
From: Ranjan Bagchi <ranjan_bagchi@yahoo.com>
Reply-To: ranjan.bagchi@frotz.com
Subject: Re: [Caml-list] Re: feature priorities (multithreading)
To: caml-list@inria.fr
In-Reply-To: <87fzqk5icy.fsf@uga.edu>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I've been reading LtU lately (lambda.weblogs.com) and
came across this paper:
http://www.sics.se/~joe/apachevsyaws.html detailing a
high-performance web-server written in Erlang.

One point here is that the threads in Erlang uses a
ton of "microthreads" which don't use OS Threads at
all (and don't incur the overhead).  Stackless python
(www.stackless.com) does this too, and is able to
support massive concurrency.

Ranjan

--- cashin@cs.uga.edu wrote:
> James Leifer <James.Leifer@inria.fr> writes:
> 
> ...
> > What kind of multithreading features do you need? 
> It would be
> > interesting to understand what would be useful in
> Ocaml, especially
> > from people who have worked with Erlang, for
> example.
> 
> Personally, I try to avoid threads because they
> usually make my
> programs less portable and sometimes more complex. 
> But many people
> who do parallelizable computation, like scientific
> computations
> involving matrices, like to increase performance by
> taking advantage
> of SMP architectures.
> 
> If the threads in a program only run on one
> processor, then all you
> have is the overhead.  If they run on different
> processors at the same
> time, with access to the same main memory but with
> independent caches,
> then the performance benefits start to compensate
> for the extra
> complexity of multithreading.
> 
> -- 
> --Ed L Cashin            |   PGP public key:
>   ecashin@uga.edu        |  
> http://noserose.net/e/pgp/
> 
> -------------------
> To unsubscribe, mail caml-list-request@inria.fr
> Archives: http://caml.inria.fr
> Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ:
> http://caml.inria.fr/FAQ/
> Beginner's list:
> http://groups.yahoo.com/group/ocaml_beginners
> 
> 
> 


__________________________________________________
Do you Yahoo!?
Yahoo! Shopping - Send Flowers for Valentine's Day
http://shopping.yahoo.com
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

