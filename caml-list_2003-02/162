Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA14560; Tue, 18 Feb 2003 22:25:06 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA14450 for <caml-list@pauillac.inria.fr>; Tue, 18 Feb 2003 22:25:06 +0100 (MET)
Received: from pat.uio.no (pat.uio.no [129.240.130.16])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h1ILP5T04208
	for <caml-list@pauillac.inria.fr>; Tue, 18 Feb 2003 22:25:05 +0100 (MET)
Received: from itherther.simula.no ([129.240.228.187])
	by pat.uio.no with esmtp (Exim 2.12 #7)
	id 18lFEd-0003mO-00; Tue, 18 Feb 2003 22:25:03 +0100
Received: from hans by itherther.simula.no with local (Exim 3.36 #1)
	id 18lFEd-0001Ar-00; Tue, 18 Feb 2003 22:25:03 +0100
To: Vincent Barichard <barichar@info.univ-angers.fr>
Cc: CAML-LIST <caml-list@pauillac.inria.fr>
Subject: Re: [Caml-list] Ocaml efficiency
References: <Pine.GSO.4.53.0302171848100.2793@helios.info-ua>
From: Hans Ole Rafaelsen <hans@simula.no>
Date: 18 Feb 2003 22:25:03 +0100
In-Reply-To: <Pine.GSO.4.53.0302171848100.2793@helios.info-ua>
Message-ID: <3azvfzhs2mo.fsf@itherther.simula.no>
Lines: 54
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.2
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello,

are you using some data-structures which you hold references to?  I
had a similar problem some time back.  Used a list, which I kept a
"global" reference to, I order to hold some of my data-structures.
Forgot to clear this reference between each run, and thus the list
kept growing between each run, thus making operations on it taking
longer and longer.

Just a guess.  If the problem is related to the GC and other memory
management issues, then I really don't know.

Kindest regards,

Hans Ole Rafaelsen


Vincent Barichard <barichar@info.univ-angers.fr> writes:

> Hi,
> 
> I've made a caml algorithm for solving some combinatorial problems.
> I've made a little user interface with camltk in order to launch many
> times the solving procedure.
> 
> I ran it, and I clicked on the start button one time, the computing
> time was about 30s. When I clicked a second time, the computing time
> exceeded 60s !!
> 
> The programm doesn't store in any data structure the results of the run,
> and all the variables values remain the same as before the run.
> The outputs of the two runs are identical, just the running time is
> different.
> 
> I guessed that it was a problem about memory management, garbage
> collector, so I tried Gc.full_major and Gc.compact, but it didn't work.
> 
> Is anyone has any ideas or suggestions to help me ?
> 
> 
> Thanks,
> 
> Vincent
> 
> 
> 
> Vincent Barichard
> Métaheuristiques et Optimisation Combinatoire
> Faculté des Sciences d'Angers
> Tel : 02 41 73 52 06
> -------------------
> To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
> Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

