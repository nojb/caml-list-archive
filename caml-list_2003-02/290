Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA30677; Mon, 24 Feb 2003 14:13:29 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA30505 for <caml-list@pauillac.inria.fr>; Mon, 24 Feb 2003 14:13:28 +0100 (MET)
Received: from shiva.jussieu.fr (shiva.jussieu.fr [134.157.0.129])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h1ODDRH05919
	for <Caml-list@inria.fr>; Mon, 24 Feb 2003 14:13:27 +0100 (MET)
Received: from ibm3.cicrp.jussieu.fr (ibm3.cicrp.jussieu.fr [134.157.15.3])
          by shiva.jussieu.fr (8.12.5/jtpda-5.4) with ESMTP id h1ODDOYY064707
          ; Mon, 24 Feb 2003 14:13:24 +0100 (CET)
Received: from ibm1.cicrp.jussieu.fr (ibm1.cicrp.jussieu.fr [134.157.15.1])
          by ibm3.cicrp.jussieu.fr (8.8.8/jtpda/mob-V8) with ESMTP id OAA24202
          ; Mon, 24 Feb 2003 14:12:20 +0100
Received: from localhost (fernande@localhost)
          by ibm1.cicrp.jussieu.fr (8.8.8/jtpda/mob-v8) with ESMTP id OAA2695312
          ; Mon, 24 Feb 2003 14:12:20 +0100
Date: Mon, 24 Feb 2003 14:12:20 +0100 (NFT)
From: Diego Olivier Fernandez Pons <Diego-Olivier.FERNANDEZ-PONS@cicrp.jussieu.fr>
To: Caml-list@inria.fr
cc: Oliver Bandel <oliver@first.in-berlin.de>
Subject: Re: [Caml-list] R-Trees in OCaml?
In-Reply-To: <3E59157E.5070303@baretta.com>
Message-ID: <Pine.A41.4.44.0302241351160.1318912-100000@ibm1.cicrp.jussieu.fr>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Antivirus: scanned by sophie at shiva.jussieu.fr
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

    Bonjour,

> Oliver Bandel wrote:
> > I'm interested in using R-Trees (and R+ -Trees).
> > If there is no implementation, I would write one.

I found in ACM Computing Surveys june 1998 Volume 30 number 2
'Multidimensional Acces Methods' V. Gaede and O. Gunther p 170-231

The survey covers :
- B trees
- k-d trees
- bsp trees
- bd trees
- Grid files
- LSD trees
- Buddy trees
- Bang files
- hB trees
- R* trees
- P trees
- SKD trees
- GDB trees
- R+ trees
- Cell trees
- Files

I am only familiar in all this list with k-d trees and B-trees.

The actually avaible version of Baire does not implement any of these,
it only contains some 2d range trees (unbalanced or AVL) and cartesian
trees (which can handle 2d data structure).

The current sources implement B-trees by binary search trees. There
aren't any multiway trees (tries are implemented by ternary AVL trees,
following Huet's Zen library, and JCF tries, not by multiway trees).

Then I am not sure Baire will be of much help for the moment.
I will try to give you as much support as I can. Do not hesitate to
ask for new features/implementations.


        Diego Olivier

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

