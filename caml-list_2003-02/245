Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA12237; Sat, 22 Feb 2003 19:20:03 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA12096 for caml-list@pauillac.inria.fr; Sat, 22 Feb 2003 19:20:02 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA08065 for <caml-list@pauillac.inria.fr>; Sat, 22 Feb 2003 15:09:54 +0100 (MET)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from smtp4.cp.tin.it (vsmtp4.tin.it [212.216.176.224])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h1ME9qH01268
	for <caml-list@inria.fr>; Sat, 22 Feb 2003 15:09:53 +0100 (MET)
Received: from dalamar.takhisis.org (80.180.77.192) by smtp4.cp.tin.it (6.5.033)
        id 3E4A68A90041B0E8 for caml-list@inria.fr; Sat, 22 Feb 2003 15:09:51 +0100
Received: from lordsoth.takhisis.org (lordsoth.takhisis.org [192.168.1.119])
	by dalamar.takhisis.org (Postfix) with ESMTP id 87DE4B777
	for <caml-list@inria.fr>; Sat, 22 Feb 2003 15:09:52 +0100 (CET)
Received: by lordsoth.takhisis.org (Postfix, from userid 3148)
	id 94E0E7074; Sat, 22 Feb 2003 15:09:26 +0100 (CET)
Date: Sat, 22 Feb 2003 15:09:26 +0100
From: Stefano Zacchiroli <zack@bononia.it>
To: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml standard library improvement
Message-ID: <20030222140926.GC6274@lordsoth.takhisis.org>
Mail-Followup-To: caml-list@inria.fr
References: <20030218180341.GA267@first.in-berlin.de> <20030220104343.B27056@pauillac.inria.fr> <20030220165448.GD5717@lordsoth.takhisis.org> <20030221134735.GA6188@clipper.ens.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20030221134735.GA6188@clipper.ens.fr>
User-Agent: Mutt/1.5.3i
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, Feb 21, 2003 at 02:47:35PM +0100, Nicolas George wrote:
> (used as namespace units) and compilation units. Supose you have a large
> set of string functions, tu split, search for words, replace, and so on.

Well, my idea was not to collect a new library nor a big-scale one as
someone proposed.

Indeed I would not begin a new sourceforge project, I want simply to
collect _simple_ functions that are missing from the ocaml standard
library and that, I'm sure, every ocaml programmer have written at least
once in his life!
Just to clarify a bit more this point, these are some functions
prototype I've in my "OCAML-whishlist.txt" file (please don't start now
discussing on them, I report some of them only for passing you my idea):

  - val Hashtbl.keys: ('a, 'b) Hashtbl.t -> 'a list
  - val Hashtbl.values: ('a, 'b) Hashtbl.t -> 'b list
  - val String.explode: string -> char list
  - val String.implode: char list -> string
  - val non: ('a -> bool) -> ('a -> bool)
  - val Dbm.fold_left: ...
  - val Sys.copy: ...
  - val List.assoc_all: ...
  - ... and so on ...

The reason I don't want to start a sourceforge project (or a savannah
one, that should be better! :-) is that these functions shoulnd't be
separated from the ocaml distribution, they should be implemented, shown
to the ocaml team for review and integrated in the ocaml standard
distribution. That's all.

We all know that the OCaml team as a lot to do and doing this work could
probably help them in making OCaml standard library more complete.

Regarding license I suppose we should ask the ocaml team what they like
to embed this functions in the standard library, I suppose LGPL could be
fine.

Regarding the "dirty" work I suppose that the better we can do is to set
up a web page with some CGI on which ocaml programmer could post
prototype of functions they would like to see in standard library
next-generation and also implementation of functions they are proposing
or proposed by someone else.
 From this page members of the ocaml team could benefit as they like,
they can only see what ocaml programmers feel is missing in the stdlib
and don't care about implementation reimplementing them or take also
implementations.

I volunteer to set up this kind of web page if we manage to reach an
agreement on this.

Cheers.

-- 
Stefano Zacchiroli  -  Undergraduate Student of CS @ Uni. Bologna, Italy
zack@{cs.unibo.it,debian.org,bononia.it}  -  http://www.bononia.it/zack/
"  I know you believe you understood what you think I said, but I am not
sure you realize that what you heard is not what I meant!  " -- G.Romney
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

