Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA07689; Thu, 20 Feb 2003 17:35:07 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA07588 for <caml-list@pauillac.inria.fr>; Thu, 20 Feb 2003 17:35:06 +0100 (MET)
Received: from hirsch.in-berlin.de (hirsch.in-berlin.de [192.109.42.6])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h1KGZ5T13550
	for <caml-list@inria.fr>; Thu, 20 Feb 2003 17:35:05 +0100 (MET)
Received: from hirsch.in-berlin.de (localhost [127.0.0.1])
	by hirsch.in-berlin.de (8.12.1/8.12.1/Debian -2) with ESMTP id h1KGZ3if023005
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NOT)
	for <caml-list@inria.fr>; Thu, 20 Feb 2003 17:35:04 +0100
Received: from first.UUCP (uucp@localhost)
	by hirsch.in-berlin.de (8.12.1/8.12.1/Debian -2) with UUCP id h1KGZ2te023002
	for inria.fr!caml-list; Thu, 20 Feb 2003 17:35:02 +0100
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: inria.fr!caml-list
Received: by first.in-berlin.de
	via sendmail from stdin
	id <m18ltkg-0005hMC@first.in-berlin.de> (Debian Smail3.2.0.114)
	Thu, 20 Feb 2003 17:40:50 +0100 (CET) 
From: oliver@first.in-berlin.de (Oliver Bandel)
Date: Thu, 20 Feb 2003 17:40:49 +0100
To: caml-list@inria.fr
Subject: [Caml-list] graphical notation/representation of functional programs?
Message-ID: <20030220164049.GA762@first.in-berlin.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.3.28i
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello,


when using graphical representations like in
"The Craft of Functional Programming", so that
a function is a box with in- and output, then
it's a convenient way of looking at functional
programs.

Is that technique of overview more elaborated
used by other people?

Shouldn't it possible to have a graphical notation
for FP, like a functional aequivalent of the notation,
that is used in the OO-programmers world, where
classes and methods and attributes and so on
are presentated in a graphical manner?

Are there papers on that topic?
Or is functional programming in higher spheres
done comepletely an algebraic form 8lambda calculus)?

Ciao,
   Oliver
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

