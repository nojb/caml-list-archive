Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA04615; Sun, 23 Feb 2003 20:42:22 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA04628 for <caml-list@pauillac.inria.fr>; Sun, 23 Feb 2003 20:42:21 +0100 (MET)
Received: from epexch01.qlogic.org ([63.170.40.3])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h1NJgKH10419
	for <caml-list@inria.fr>; Sun, 23 Feb 2003 20:42:21 +0100 (MET)
Received: from epmailtmp.qlogic.org ([10.20.33.254]) by epexch01.qlogic.org with Microsoft SMTPSVC(5.0.2195.5329);
	 Sun, 23 Feb 2003 13:44:23 -0600
Received: from [10.20.33.146] ([10.20.33.146]) by epmailtmp.qlogic.org with Microsoft SMTPSVC(5.0.2195.4905);
	 Sun, 23 Feb 2003 13:44:22 -0600
Date: Sun, 23 Feb 2003 13:52:20 -0600 (CST)
From: Brian Hurt <brian.hurt@qlogic.com>
X-X-Sender:  <brianh@eagle.ancor.com>
Reply-To: Brian Hurt <brian.hurt@qlogic.com>
To: Anonymous via the Cypherpunks Tonga Remailer <nobody@cypherpunks.to>
cc: <caml-list@inria.fr>
Subject: Re: [Caml-list] User library license
In-Reply-To: <dc14ed605f867256cf0f9eb7ee329a35@cypherpunks.to>
Message-ID: <Pine.LNX.4.33.0302231317590.2037-100000@eagle.ancor.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-OriginalArrivalTime: 23 Feb 2003 19:44:22.0505 (UTC) FILETIME=[F69DBD90:01C2DB73]
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sun, 23 Feb 2003, Anonymous via the Cypherpunks Tonga Remailer wrote:

> 
> 
> > Regarding license ... I suppose LGPL could be fine.
> 
> The new "user code library" is a good idea, but GPL
> and LGPL are both bad ideas.
> 
> GPL eliminates commercial usage.  

No, but it does severely restict it.  I agree that the GPL is the wrong 
license for this project.

> LGPL is currently
> deprecated even by the Free Software Foundation.  It's
> too murky -- what constitutes a 'derivative work' or
> 'library linkage' is highly debatable.  Many projects
> use a modified LGPL for this reason; wxWindows and
> FLTK are two examples.

The GPL has the same problems.  But these problems show up in languages 
like Java or Python, where the concept of linking has been blurred or 
changed.  Ocaml has a much more "normal" view of linking.

I have a friend whose an IP lawyer, and he tells me that 'derivative work'
is (in effect) a precise technical term to lawyers, whose meaning has been
hammered out over several centuries of jurisprudence.  For the 
precise definition, read <long list of judicial opinions>.  Rather like
'LALR(1) parser' is precise technical term to computer programmers.  For 
the precise definition read <first six chapters of the dragon book>.  Note 
that in practice, the legal definition of 'derivative work' and what you'd 
think it to be are pretty much identical.

I am about as inclined to trust legal documents written by programmers as 
I am to trust software written by lawyers- to wit, not at all.  Both the 
LGPL and GPL were rewritten by lawyers for version 2.0.  The MPL was 
drafted by Netscape's lawyers.  Not sure about the APL.

> 
> The best choices would be either the Academic Free
> License or the Mozilla Public License.  The Academic
> Free License is modern 'best practice' and was drafted
> by OSI lawyers.  The MPL came about through extensive
> user discussions over a long period of time (as did
> wxWindows which is also OSI-approved).

I thought the MPL had a loophole which allowed the original copyright 
owner to use contributed code in a proprietary manner.  In other words, 
Netscape could use and extend Mozilla for it's browser, including using 
other people's code, but no one else could.  Correct if I'm wrong.  I 
haven't looked at the APL yet.

I like the *idea* of the LGPL for this use- that you can use (unmodified) 
libraries in any way you want.  But improvements to the libraries are 
common property.

> 
> See also the "Fallacy of GNU" -
> http://www.osopinion.com/perl/story/13420.html
> 

The fact that the GPL has never been defended in court doesn't necessarily 
mean that it's weak.  Quite the opposite, in fact.  The GPL has been in 
several adviserial conflicts, where someone took GPL code and violated the 
licenses.  Generally, once lawyers get involved, they generally tell the 
offending party "surrender now, and get out cheap.  You will lose."  In 
effect, the GPL is strong enough to win without having to go to court.

And the question of how much code qualifies as "fair use" is moot.  If 
you're using enough GPL'd code in your proprietary product that a) it's 
detectable, and b) it's worthwhile for someone to bring you to court over 
it, then you're using enough code to not be covered by fair use, by quite 
a long margin.

If you are using little enough code that you might be covered by fair use, 
it's probably easier and cheaper to simply throw that code out and rewrite 
it if someone wants to make a fuss, than it is to litigate it.

Most of the rest of fair use is explicitly allowed for by the GPL.  For
example, it'd be perfectly legal for Microsoft to download a copy of
Linux, read the source to figure out all of it's interfaces, and
algorithms and datastructure it uses, and write a binary-compatible
operating system.  And distribute this new operating system under any
terms they desire.  So long as they didn't use the *source code*, the
ideas are free for the taking.

And finally, yes, I am big advocate of copyrights for software.  It's 
software patents which are the spawn of satan.

Brian

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

