Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA18638; Fri, 21 Feb 2003 18:23:21 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA18933 for <caml-list@pauillac.inria.fr>; Fri, 21 Feb 2003 18:23:14 +0100 (MET)
Received: from nef.ens.fr (nef.ens.fr [129.199.96.32])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h1LHNET04584
	for <caml-list@inria.fr>; Fri, 21 Feb 2003 18:23:14 +0100 (MET)
Received: from clipper.ens.fr (clipper-gw.ens.fr [129.199.1.22])
          by nef.ens.fr (8.10.1/1.01.28121999) with ESMTP id h1LHNDM05637
          for <caml-list@inria.fr>; Fri, 21 Feb 2003 18:23:13 +0100 (CET)
Received: from (george@localhost) by clipper.ens.fr (8.12.3/jb-1.1)
Date: Fri, 21 Feb 2003 18:23:13 +0100
From: Nicolas George <nicolas.george@ens.fr>
To: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml standard library improvement
Message-ID: <20030221172313.GA7908@clipper.ens.fr>
References: <200302211618.RAA10481@gnome.at.coli.uni-sb.de> <Pine.LNX.4.33.0302211046340.2037-100000@eagle.ancor.com>
Mime-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha1;
	protocol="application/pgp-signature"; boundary="u3/rZRmxL6MmkK24"
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.33.0302211046340.2037-100000@eagle.ancor.com>
User-Agent: Mutt/1.4
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


--u3/rZRmxL6MmkK24
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

Le tridi 3 vent=F4se, an CCXI, Brian Hurt a =E9crit=A0:
> - We shouldn't be afraid to add functions/functionality to libraries. =20
> There should never be a string2 library, let alone a string17 library.
[...]
> So the string library would be a collection of simple routines.  None of
> the routines in string call each other, or any common 'infrastructure'
> routines.

I think you misunderstoud the problem I was mentionning. A string
library should be one module, we agree. Let's say it is "String". Then
as soon as you use one function of the String module, the resulting
binary will hold _all_ the code in the String module. If you have a lot
of functions in the module (and this is what we want), you have a huge
binary. Berk.

As far as I know, there is no hack to avoid it. It would be necessary to
rethink the format of the .cmo or .cma files to allow that.

--u3/rZRmxL6MmkK24
Content-Type: application/pgp-signature
Content-Disposition: inline

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.0 (SunOS)

iD8DBQE+VmCAsGPZlzblTJMRAuy0AKCcX5im03ezoVDn+jUCO3XKskHhaACg05dq
HEXU8ys9WhgEw7eC/pXeqkA=
=wxAB
-----END PGP SIGNATURE-----

--u3/rZRmxL6MmkK24--
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

