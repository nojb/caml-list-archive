Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA16919; Fri, 12 Dec 2003 22:58:21 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA16898 for <caml-list@pauillac.inria.fr>; Fri, 12 Dec 2003 22:58:20 +0100 (MET)
Received: from nef.ens.fr (nef.ens.fr [129.199.96.32])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hBCLwJ112820
	for <caml-list@inria.fr>; Fri, 12 Dec 2003 22:58:20 +0100 (MET)
Received: from clipper.ens.fr (clipper-gw.ens.fr [129.199.1.22])
          by nef.ens.fr (8.12.10/1.01.28121999) with ESMTP id hBCLwJaW002979
          ; Fri, 12 Dec 2003 22:58:19 +0100 (CET)
Received: from localhost (frisch@localhost) by clipper.ens.fr (8.12.3/jb-1.1)
	id hBCLwIYb012500 ; Fri, 12 Dec 2003 22:58:18 +0100 (MET)
X-Authentication-Warning: clipper.ens.fr: frisch owned process doing -bs
Date: Fri, 12 Dec 2003 22:58:18 +0100 (MET)
From: Alain.Frisch@ens.fr
X-X-Sender: frisch@clipper.ens.fr
Reply-To: Alain.Frisch@ens.fr
To: Nuutti Kotivuori <naked+caml@naked.iki.fi>
cc: Caml list <caml-list@inria.fr>
Subject: Re: [Caml-list] Co-existence of byterun and asmrun impossible?
In-Reply-To: <87zndx7mfq.fsf@naked.iki.fi>
Message-ID: <Pine.SOL.4.44.0312122248100.7951-100000@clipper.ens.fr>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: by amavisd-milter (http://amavis.org/)
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; alain:01 frisch:01 caml-list:01 byterun:01 asmrun:01 ocamlrun:01 ocamlrun:01 runtime:01 dynlink:01 camlp:01 camlp:01 statically:01 cmx:01 asmdynlink:01 wrappers:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 12 Dec 2003, Nuutti Kotivuori wrote:

> That is, a native compiled version of ocamlrun could never exist -
> eg. no ocamlrun.opt nor ocaml.opt (native toplevel)?

ocamlrun is written in C (no Caml at all), so the question does not make
sense.

As for ocaml.opt, indeed, it cannot exist currently. AFAIK, there are some
small differences between native and bytecode GC, that makes it impossible
to have both at runtime in parallel. Another consequence is that it is not
possible to dynlink bytecode into a native compiled program (without the
issue above, it would be enough to include the bytecode interpreter in the
main program). In particular, no camlp4.opt, which is sad since it could
greatly improve compile times (well, it is possible to build a custom
camlp4.opt linked statically with .cmx syntax extensions, but this is not
the usual way to use camlp4).

Fabrice Le Fessant wrote the AsmDynlink library to load .cmo modules
from a native program (including wrappers to make the values of the two
world compatible). Fabrice: any news about an updated release?

-- Alain

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

