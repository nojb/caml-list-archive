Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA04917; Tue, 16 Dec 2003 19:36:42 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA05600 for <caml-list@pauillac.inria.fr>; Tue, 16 Dec 2003 19:36:41 +0100 (MET)
Received: from oxy.exomi.com (ua199d87hel.dial.kolumbus.fi [212.54.23.199])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hBGIaeX24090
	for <caml-list@inria.fr>; Tue, 16 Dec 2003 19:36:40 +0100 (MET)
Received: from [127.0.0.1] (localhost [127.0.0.1])
	by oxy.exomi.com (Postfix) with ESMTP
	id 22AAFCF4B4; Tue, 16 Dec 2003 20:36:54 +0200 (EET)
In-Reply-To: <20031216164528.GA20396@redhat.com>
References: <87n09sucr9.fsf@naked.iki.fi> <7CE71DB5-2FCE-11D8-90E3-000393863F70@exomi.com> <20031216154139.GA28283@tallman.kefka.frap.net> <20031216164528.GA20396@redhat.com>
Mime-Version: 1.0 (Apple Message framework v606)
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <D19B0DF4-2FF6-11D8-BCC1-000393863F70@exomi.com>
Content-Transfer-Encoding: 7bit
Cc: caml-list@inria.fr
From: Ville-Pertti Keinonen <will@exomi.com>
Subject: Re: [Caml-list] Python's yield, Lisp's call-cc or C's setjmp/longjmp in OCaml
Date: Tue, 16 Dec 2003 20:36:53 +0200
To: Richard Jones <rich@annexia.org>
X-Mailer: Apple Mail (2.606)
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 python's:01 lisp's:01 c's:01 stupid:01 anyhow:01 unsafe:01 bindings:01 ocaml:01 ocaml:01 wrote:03 implement:05 functions:05 cares:06 solaris:07 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


On Dec 16, 2003, at 6:45 PM, Richard Jones wrote:

> Perhaps I'm being stupid here, but isn't it possible to get a similar
> effect (some would say a more comprehensible effect) by writing your
> own OCaml bindings for the makecontext/setcontext/getcontext family of
> functions?

They are unsafe and rather limited.  If you'd be willing to go to the 
trouble to make them safe, you might as well implement continuations 
which are more capable anyhow.

> Granted this would not be portable beyond Linux and Solaris, but who
> cares too much about that?

Lots of people.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

