Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA24415; Mon, 8 Dec 2003 19:20:12 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA25929 for <caml-list@pauillac.inria.fr>; Mon, 8 Dec 2003 19:20:10 +0100 (MET)
Received: from mail3.speakeasy.net (mail3.speakeasy.net [216.254.0.203])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hB8IK9r16381
	for <caml-list@inria.fr>; Mon, 8 Dec 2003 19:20:09 +0100 (MET)
Received: (qmail 9417 invoked from network); 8 Dec 2003 18:20:07 -0000
Received: from unknown (HELO grace.speakeasy.net) ([216.254.0.22])
          (envelope-sender <brogoff@speakeasy.net>)
          by mail3.speakeasy.net (qmail-ldap-1.03) with AES256-SHA encrypted SMTP
          for <bhurt@spnz.org>; 8 Dec 2003 18:20:07 -0000
Date: Mon, 8 Dec 2003 10:19:59 -0800 (PST)
From: brogoff@speakeasy.net
To: Brian Hurt <bhurt@spnz.org>
cc: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>,
        Ocaml Mailing List <caml-list@inria.fr>
Subject: Re: [Caml-list] Object-oriented access bottleneck
In-Reply-To: <Pine.LNX.4.44.0312081136040.5009-100000@localhost.localdomain>
Message-ID: <Pine.LNX.4.44.0312081002070.1423-100000@grace.speakeasy.net>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; brogoff:01 caml-list:01 bottleneck:01 admittedly:01 bias:01 apis:01 python:01 bindings:01 ocaml:01 ocaml:01 speakeasy:01 writting:01 objects:02 objects:02 address:96 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 8 Dec 2003, Brian Hurt wrote:
> I'm writting a place and route program in Ocaml, and hitting a lot of
> places where I'd like to express things as objects.

Now there's an interesting discussion! Where in your design do you
want objects, if you don't mind my asking? What design style (custom,
standard cell,  FPGA, ...) is your P&R program intended to address?

My admittedly narrow minded bias based EDA tasks is that I'd rather have
a more powerful system of records than what OCaml currently has, instead
of classes, and that when I do write code with classes, it's not really using
late-binding/open-recursion.

If you're into EDA though, there are quite a few APIs based on C++ and now
Java and Python (I'm thinking of OpenAccess here) which may pressure anyone
writing OCaml bindings into a "me tOO" design.

-- Brian


-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

