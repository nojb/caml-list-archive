Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA00881; Tue, 16 Dec 2003 17:45:41 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA00866 for <caml-list@pauillac.inria.fr>; Tue, 16 Dec 2003 17:45:40 +0100 (MET)
Received: from aomori.annexia.org (annexia.force9.co.uk [212.56.101.183])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hBGGjaH14579
	for <caml-list@inria.fr>; Tue, 16 Dec 2003 17:45:38 +0100 (MET)
Received: from rich by aomori.annexia.org with local (Exim 3.36 #1 (Debian))
	id 1AWIK8-0005JE-00
	for <caml-list@inria.fr>; Tue, 16 Dec 2003 16:45:28 +0000
Date: Tue, 16 Dec 2003 16:45:28 +0000
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Python's yield, Lisp's call-cc or C's setjmp/longjmp in OCaml
Message-ID: <20031216164528.GA20396@redhat.com>
References: <87n09sucr9.fsf@naked.iki.fi> <7CE71DB5-2FCE-11D8-90E3-000393863F70@exomi.com> <20031216154139.GA28283@tallman.kefka.frap.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20031216154139.GA28283@tallman.kefka.frap.net>
User-Agent: Mutt/1.5.4i
From: Richard Jones <rich@annexia.org>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 python's:01 lisp's:01 c's:01 stupid:01 freshmeat:01 type-safe:01 ltd:98 bindings:01 ocaml:01 ocaml:01 caml:01 caml:01 functions:05 investment:94 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Perhaps I'm being stupid here, but isn't it possible to get a similar
effect (some would say a more comprehensible effect) by writing your
own OCaml bindings for the makecontext/setcontext/getcontext family of
functions?

Granted this would not be portable beyond Linux and Solaris, but who
cares too much about that?

Rich.

-- 
Richard Jones. http://www.annexia.org/ http://freshmeat.net/users/rwmj
Merjis Ltd. http://www.merjis.com/ - improving website return on investment
MOD_CAML lets you run type-safe Objective CAML programs inside the Apache
webserver. http://www.merjis.com/developers/mod_caml/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

