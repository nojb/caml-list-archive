Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA29271; Mon, 8 Dec 2003 11:18:02 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA00890 for <caml-list@pauillac.inria.fr>; Mon, 8 Dec 2003 11:18:01 +0100 (MET)
Received: from smtp2.pp.htv.fi (smtp2.pp.htv.fi [213.243.153.14])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hB8AI0101718
	for <caml-list@inria.fr>; Mon, 8 Dec 2003 11:18:00 +0100 (MET)
Received: from posti.pp.htv.fi (posti.pp.htv.fi [212.90.64.50])
	by smtp2.pp.htv.fi (Postfix) with ESMTP
	id 286F02972C2; Mon,  8 Dec 2003 12:17:58 +0200 (EET)
Received: from oro (aka.pp.htv.fi [213.243.183.115])
	by posti.pp.htv.fi (8.11.1 (Revision 1.5+JAGae91741+JAGae92668) /8.11.1) with ESMTP id hB8AHvT02163;
	Mon, 8 Dec 2003 12:17:57 +0200 (EET)
Received: from naked by oro with local (Exim 3.36 #1 (Debian))
	id 1ATISj-0005wn-00; Mon, 08 Dec 2003 12:17:57 +0200
To: Brian Hurt <bhurt@spnz.org>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Object-oriented access bottleneck
References: <Pine.LNX.4.44.0312071318110.5009-100000@localhost.localdomain>
From: Nuutti Kotivuori <naked+caml@naked.iki.fi>
Date: Mon, 08 Dec 2003 12:17:55 +0200
In-Reply-To: <Pine.LNX.4.44.0312071318110.5009-100000@localhost.localdomain> (Brian
 Hurt's message of "Sun, 7 Dec 2003 13:30:45 -0600 (CST)")
Message-ID: <871xrfd358.fsf@naked.iki.fi>
User-Agent: Gnus/5.1002 (Gnus v5.10.2) XEmacs/21.4 (Portable Code, linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 bottleneck:01 inlining:01 inlining:01 compiler:01 caml:01 wrote:03 inline:03 indeed:06 brian:06 iki:07 i'm:07 i'm:07 language:10 wish:89 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Brian Hurt wrote:
> I actually question the value of inlining as a performance
> improvement, unless it leads to other signifigant optimizations.

I'm sorry but I do not wish to discuss the relative merits or unmerits
of inlining.

But I'm sure you must agree that there are indeed atleast specific
cases where inlining does help. It would be nice if the language would
be flexible enough to allow the compiler the choice to inline, in
cases where it will result in better performance.

-- Naked

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

