Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA28594; Tue, 23 Dec 2003 21:29:52 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA29238 for <caml-list@pauillac.inria.fr>; Tue, 23 Dec 2003 21:29:50 +0100 (MET)
Received: from bob.west.spy.net (mail.west.spy.net [66.149.231.226])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hBNKTlv11193
	for <caml-list@inria.fr>; Tue, 23 Dec 2003 21:29:47 +0100 (MET)
Received: from [192.168.1.50] (dustinti.west.spy.net [192.168.1.50])
	(using TLSv1 with cipher RC4-SHA (128/128 bits))
	(Client did not present a certificate)
	by bob.west.spy.net (Postfix) with ESMTP
	id 693C25B07; Tue, 23 Dec 2003 12:23:20 -0800 (PST)
In-Reply-To: <20031223121657.GB29933@redhat.com>
References: <1072152186.59938.30.camel@tylere> <29911.24.6.3.124.1072153159.squirrel@www.cs.fiu.edu> <1072152186.59938.30.camel@tylere> <20031223053451.GB1145@swordfish> <CC63B16D-350E-11D8-AD5E-000A9584A16E@ml1.net> <20031223012223.W47896@bowser.eecs.harvard.edu> <20031223121657.GB29933@redhat.com>
Mime-Version: 1.0 (Apple Message framework v609)
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <D6A1DD04-3585-11D8-9A95-000393CB0F1E@spy.net>
Content-Transfer-Encoding: 7bit
Cc: Tyler Eaves <tyler@ml1.net>, caml-list@inria.fr
From: Dustin Sallings <dustin@spy.net>
Subject: Re: [Caml-list] Frustrated Beginner
Date: Tue, 23 Dec 2003 12:23:15 -0800
To: Richard Jones <rich@annexia.org>
X-Mailer: Apple Mail (2.609)
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 pointers:01 scalars:01 enforces:01 cae:99 compiler:01 null:01 null:01 her:97 option':96 wrote:03 variable:03 variable:03 perl:03 fingerprint:04 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


On Dec 23, 2003, at 4:16, Richard Jones wrote:

> I like to think of the 'string option' type as being a bit like
> two concepts in more familiar languages:
>
> (1) NULL pointers in C, or
> (2) Scalars in Perl, which can be 'undef'.

	I think of it more like SQL.  Any given variable may be defined to be 
nullable or not, but a variable that is not nullable an never be null.  
The main difference is that the compiler enforces that you check for 
null on nullable fields.

--
SPY                      My girlfriend asked me which one I like better.
pub  1024/3CAE01D5 1994/11/03 Dustin Sallings <dustin@spy.net>
|    Key fingerprint =  87 02 57 08 02 D0 DA D6  C8 0F 3E 65 51 98 D8 BE
L_______________________ I hope the answer won't upset her. ____________

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

