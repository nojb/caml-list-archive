Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id HAA26102; Fri, 26 Dec 2003 07:06:51 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA26635 for <caml-list@pauillac.inria.fr>; Fri, 26 Dec 2003 07:06:50 +0100 (MET)
Received: from out2.smtp.messagingengine.com (out2.smtp.messagingengine.com [66.111.4.26])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hBQ5fYb03008
	for <caml-list@inria.fr>; Fri, 26 Dec 2003 06:41:43 +0100 (MET)
Received: from server2.messagingengine.com (server2.internal [10.202.2.133])
	by mail.messagingengine.com (Postfix) with ESMTP id 5E03E48D0D4
	for <caml-list@inria.fr>; Fri, 26 Dec 2003 00:41:32 -0500 (EST)
Received: by server2.messagingengine.com (Postfix, from userid 99)
	id 53C8780176; Fri, 26 Dec 2003 00:41:32 -0500 (EST)
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain; charset="ISO-8859-1"
MIME-Version: 1.0
X-Mailer: MIME::Lite 1.2  (F2.71; T1.001; A1.51; B2.12; Q2.03)
From: "=?ISO-8859-1?Q?Gr=E9gory=20Guyomarc?='h" <gregory@guyomarch.org>
To: caml-list@inria.fr
Date: Thu, 25 Dec 2003 21:41:32 -0800
X-Sasl-Enc: TsimsMs7NkpbdX5l/3zZwA 1072417292
Subject: [Caml-list] Fortran-like array indexing / PDE numerical code with boundary cells in OCAML
Message-Id: <20031226054132.53C8780176@server2.messagingengine.com>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; bigarrays:01 bigarray:01 ocaml:01 ocaml:01 fortran:03 array:04 integers:05 numerical:05 numerical:05 noel:07 implementing:07 email:92 index:91 index:91 wish:89 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello,

Does anyone know how to index bigarrays with negative integers as in
fortran (either through a modified version of Bigarray or some
pre-Processing macro with caml-p4)? For those who wonder, it is for a pde
numerical code, i wish i could index boundary cells naturally as u.{-1}
u.{-2}, ... and u.{n+1}, u.{n+2}, ... Or if you have any experience in
implementing such numerical code in OCaml and want to suggest better
options, i am also interested :o).

Merry XMas!!! Joyeux Noel!!!


---------------------------------------------------------------------
Gr=E9gory Guyomarc'h
Email: gregory@guyomarch.org
Phone: (+82) (0)16-9355-3799

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

