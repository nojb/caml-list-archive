Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id HAA27315; Tue, 23 Dec 2003 07:20:47 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id HAA26716 for <caml-list@pauillac.inria.fr>; Tue, 23 Dec 2003 07:20:46 +0100 (MET)
Received: from pintail.mail.pas.earthlink.net (pintail.mail.pas.earthlink.net [207.217.120.122])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id hBN6Kjv16666
	for <caml-list@inria.fr>; Tue, 23 Dec 2003 07:20:45 +0100 (MET)
Received: from h-68-164-238-121.lsanca54.dynamic.covad.net ([68.164.238.121] helo=computer.org)
	by pintail.mail.pas.earthlink.net with esmtp (Exim 3.33 #1)
	id 1AYfuN-0003Y2-00; Mon, 22 Dec 2003 22:20:43 -0800
Date: Mon, 22 Dec 2003 22:20:40 -0800
Subject: Re: [Caml-list] Frustrated Beginner
Content-Type: text/plain; charset=US-ASCII; format=flowed
Mime-Version: 1.0 (Apple Message framework v552)
Cc: caml-list@inria.fr
To: Tyler Eaves <tyler@ml1.net>
From: Tom Murray <yozhik@computer.org>
In-Reply-To: <1072152186.59938.30.camel@tylere>
Message-Id: <2175FAAB-3510-11D8-BA54-000A9577557E@computer.org>
Content-Transfer-Encoding: 7bit
X-Mailer: Apple Mail (2.552)
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 python:01 tuareg:01 familiarity:01 ocaml:01 ocaml:01 caml:01 emacs:01 emacs:01 syntax:02 btw:03 imperative:04 imperative:04 switched:04 seems:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

As a programmer who did imperative and OO for 15+ years, and then 
switched to OCaml this year, I encourage you to stick with it. I think 
it will improve how you write in other languages, too (and Python has 
many functional features, btw).

I agree that the syntax can be frightful, but it seems to be a 
requirement of functional languages.

Some things that helped me:

* Do lots of experimenting in the interactive top-level. If you're an 
Emacs user, get the Tuareg mode. The nice thing about working in Emacs 
is that you can evaluate an expression or two in your file, see what 
happens, make some changes to the expression, repeat.

* I found the O'Reilly book very helpful. It doesn't assume familiarity 
with the functional way of doing things, like many other write-ups do. 
It's very application-oriented, which will make the examples familiar 
to you. And it has separate chapters for functional, imperative, and 
OO, so you get a feel for the different ways of writing OCaml code. You 
can download the book from http://caml.inria.fr/oreilly-book/.

Good luck,

tm

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

