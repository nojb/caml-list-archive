Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA16209; Mon, 15 Dec 2003 08:57:37 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA16191 for <caml-list@pauillac.inria.fr>; Mon, 15 Dec 2003 08:57:36 +0100 (MET)
Received: from miritek.com (miritek.com [210.107.136.75])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id hBF7vYr26691
	for <caml-list@inria.fr>; Mon, 15 Dec 2003 08:57:34 +0100 (MET)
Received: from hama (v36-99.icu.ac.kr [210.107.136.99])
	by miritek.com (8.9.3/8.9.3) with SMTP id RAA05233
	for <caml-list@inria.fr>; Mon, 15 Dec 2003 17:09:11 +0900
Message-ID: <008e01c3c2e1$153d39b0$63886bd2@hama>
From: "SooHyoung Oh" <shoh@miritek.com>
To: "Caml-List" <caml-list@inria.fr>
Subject: [Caml-list] Is it impossible to use Ocaml thread and system thread simultaneously?
Date: Mon, 15 Dec 2003 16:57:02 +0900
MIME-Version: 1.0
Content-Type: text/plain;
	charset="ks_c_5601-1987"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1106
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1106
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; 3.07:01 callback:01 arrival:99 callback:01 ocaml's:01 ocaml:01 ocaml:01 thread:02 thread:02 shoh:03 library:03 library:03 soohyoung:03 soohyoung:03 implement:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Actuall, I'm developing some ocaml applications on linux (Redhat 9.0, ocaml
3.07-2).
It needs c library from the other comany
which includes some code using system thread.

(Q1)
I heard from annan@hushmail.com
that it is impossible to use ocaml thread and system thread simultaneously.
Is it true?

(Q2)
What I'm doing is
(1) main is coded with ocaml.
(2) register c_callback (c code) to the library
(3) (On packet arrival) a thread in the libraray calls the registered
c_callback function
(4) c_callback (c code) function calls ocaml's callback () function

Is it impossible to implement this?

(Q3)
Although the company which developed the library can't give us the source,
it MAY BE POSSIBLE to change their code for us.

Is there any method to implement our application with minor fix of the
library?

Thanks in advance

---
SooHyoung Oh

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

