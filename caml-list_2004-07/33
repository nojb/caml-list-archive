Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id FAA15253; Mon, 5 Jul 2004 05:42:55 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id FAA15248 for <caml-list@pauillac.inria.fr>; Mon, 5 Jul 2004 05:42:53 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i653goEV008194
	for <caml-list@inria.fr>; Mon, 5 Jul 2004 05:42:51 +0200
Received: from [192.168.1.200] (ppp216-173.lns1.syd3.internode.on.net [203.122.216.173])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i653gWHY056127;
	Mon, 5 Jul 2004 13:12:33 +0930 (CST)
Subject: Re: [Caml-list] Exceptions considered harmful
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Michael Hicks <mwh@cs.umd.edu>
Cc: Lauri Alanko <la@iki.fi>, caml-list <caml-list@inria.fr>
In-Reply-To: <21A5580B-CDF8-11D8-B2E6-000D93C1F22A@cs.umd.edu>
References: <20040628143917.GA21847@fichte.ai.univie.ac.at>
	 <Pine.LNX.4.44.0406290056580.1229-100000@localhost>
	 <20040628173400.GB26193@fichte.ai.univie.ac.at>
	 <1088470968.18587.123.camel@pelican.wigram>
	 <20040704073050.GA907@la.iki.fi>
	 <21A5580B-CDF8-11D8-B2E6-000D93C1F22A@cs.umd.edu>
Content-Type: text/plain
Message-Id: <1088998952.16469.13.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 05 Jul 2004 13:42:32 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 40E8CE3A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 foo:01 foo:01 statically:01 insecure:01 9660:01 glebe:01 handler:01 nsw:01 snail:02 exception:02 exception:02 checkout:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 2004-07-05 at 06:24, Michael Hicks wrote:
> > try
> >   x <- foo ()
> > in
> >   bar ()
> > unless
> >   E1 -> handle1 ()
> >   E2 -> handle2 ()
> 
> The key part to this approach is that bar() is not covered by the 
> exception handler. 

Yeah, this is just an extension of let/in:

let x = foo () in bar () unless ...

however it is still dynamic = statically insecure =
unable to reason about the code locally = bad,
however increased localisation is obtained:
you have more idea where the exception came from
so this does seem better.

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

