Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA02049; Sun, 11 Jul 2004 20:58:05 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA02192 for <caml-list@pauillac.inria.fr>; Sun, 11 Jul 2004 20:58:04 +0200 (MET DST)
Received: from web53203.mail.yahoo.com (web53203.mail.yahoo.com [206.190.39.219])
	by nez-perce.inria.fr (8.12.10/8.12.10) with SMTP id i6BIw2EV008142
	for <caml-list@inria.fr>; Sun, 11 Jul 2004 20:58:03 +0200
Message-ID: <20040711185802.8039.qmail@web53203.mail.yahoo.com>
Received: from [155.97.235.24] by web53203.mail.yahoo.com via HTTP; Sun, 11 Jul 2004 11:58:02 PDT
Date: Sun, 11 Jul 2004 11:58:02 -0700 (PDT)
From: Andy Yang <yyu08@yahoo.com>
Subject: Re: [Caml-list] Toplevel crashes when trying to call external functions
To: art yerkes <ayerkes@speakeasy.net>
Cc: caml-list@inria.fr
In-Reply-To: <20040711131442.4557bb6e.ayerkes@speakeasy.net>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at nez-perce with ID 40F18DBA.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 crashes:01 pointers:01 camlparam:01 camllocal:01 val:01 solver:01 val:01 solver:01 endl:01 camlreturn:01 mng:99 camlparam:01 mng:99 endl:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi, 

Since at this point, I am not concerning much about
codes' portability, so I just assume the program run 
on x86 machines, on which 32 bits pointers are
allowed.I modified code as follows:

value zchaff_InitManager(void)
{
  CAMLparam0();  
  CAMLlocal1(val);
  void* solver = SAT_InitManager();
  val = copy_int32((int)solver);
  cout<<"solver = "<<hex<<solver<<endl;
  CAMLreturn ( val );
}

void zchaff_ReadCnf(value mng, value filename)
{
  CAMLparam2(mng, filename);
  SAT_Manager solver = (void*)Int32_val(mng);
  cout<<"solver = "<<hex <<solver <<endl;
  assert(solver != NULL);  
  char * fn = String_val(filename);  
  cout<<"file = "<<fn <<endl;
  read_cnf(solver, fn);
  CAMLreturn0;
}


Thus I should follows ocaml's Tag rules. However, the
problem still exists. Tracing with gdb, I noticed that
the toplevel still crashes in function obj_tag.
However, I cannot find the obj_tag 's sourcecode in
Ocaml's source. There is only a mapping table in
ocaml_dir/byterun/prims.c, in which obj_tag is one of
the primitives.

Thanks a lot!

Andy

> 
> > Hi, all
> > 
> > I am relatively new to Ocaml. Sorry about the spam
> if
> > this is a trivial problem. I am trying to give
> call
> > some external functions. 
> > 
> > Some codes are as follows:
> > 
> > value zchaff_InitManager(void)
> > {
> >   CAMLparam0();  
> >   void * solver = SAT_InitManager();
> >   value val = alloc(1, Custom_tag);
> >   Int32_val(val) = (int) solver;
> >   CAMLreturn ( val );
> > }
> > 
> > }
> > 
> 
> These may not solve this specific problem but I
> think they are good
> advice:
> 
> First:
> 17.9.2. Custom blocks must be allocated via the
> alloc_custom function.
> (And remember that the custom block size argument is
> in bytes).
> 
> Second:
> Passing 1 as the block size to alloc allocates a
> block with one word
> as a tail (at offset 0), but Data_custom_val
> accesses a value in the
> tail at offset 1.  This is probably the error you're
> looking for.
> 
> Third:
> I don't understand why you're going through
> Int32_val and Val_int32
> to get and set your pointer.  You probably want to
> write a new macro
> that will access the custom area as a pointer-sized
> chunk on every
> architecture.  Assuming pointers to be 32-bits
> really is a bad idea.
> -- 
> Hey, Adam Smith, keep your invisible hands to
> yourself!
> 





		
__________________________________
Do you Yahoo!?
Yahoo! Mail is new and improved - Check it out!
http://promotions.yahoo.com/new_mail

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

