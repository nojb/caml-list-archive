Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA26866; Thu, 8 Jul 2004 17:03:26 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA25070 for <caml-list@pauillac.inria.fr>; Thu, 8 Jul 2004 17:03:25 +0200 (MET DST)
Received: from yquem.inria.fr (yquem.inria.fr [128.93.8.37])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i68F3OSH004978;
	Thu, 8 Jul 2004 17:03:24 +0200
Received: by yquem.inria.fr (Postfix, from userid 18180)
	id 7CC49BBD8; Thu,  8 Jul 2004 17:03:24 +0200 (CEST)
Date: Thu, 8 Jul 2004 17:03:24 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Christophe Raffalli <christophe.raffalli@univ-savoie.fr>
Cc: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Thread and kernel 2.6 pb still there in CVS
Message-ID: <20040708150324.GA3977@yquem.inria.fr>
References: <1088166608.1941.120.camel@pelican.wigram> <40DC38D3.4010009@univ-savoie.fr> <20040628150805.GC7353@yquem.inria.fr> <40E0D34C.2040808@univ-savoie.fr> <7AFB5F64-C944-11D8-975C-00039310CAE8@inria.fr> <40E11621.3050709@univ-savoie.fr> <40E97058.5060503@univ-savoie.fr> <20040705163421.GA12344@yquem.inria.fr> <40EA71ED.9040005@baretta.com> <40ED5144.8050903@univ-savoie.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <40ED5144.8050903@univ-savoie.fr>
User-Agent: Mutt/1.3.28i
X-Miltered: at concorde with ID 40ED623C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 threads:01 kernel:01 caml:01 float:02 thread:02 thread:02 trick:03 seems:05 cvs:05 suggestion:06 leroy:12 leroy:12 xavier:13 xavier:13 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> I did again some testing, with a Caml program with 2 thread, one doing 
> only float computation for a long time with no allocation. The nanosleep 
> suggestion seems much better than the actual version doing nothing:

I tried the nanosleep() trick on a different workload (several
compute-bound threads).  Scheduling was less fair than with the "do
nothing" implementation.

- Xavier Leroy

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

