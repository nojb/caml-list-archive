Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA12587; Sat, 10 Jul 2004 12:56:09 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA11981 for <caml-list@pauillac.inria.fr>; Sat, 10 Jul 2004 12:56:08 +0200 (MET DST)
Received: from [192.168.0.2] (planar.net0.nerim.net [213.41.168.102])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i6AAu5EV021216
	for <caml-list@inria.fr>; Sat, 10 Jul 2004 12:56:06 +0200
Mime-Version: 1.0 (Apple Message framework v618)
In-Reply-To: <cfc41b1c040709162130ba0875@mail.gmail.com>
References: <20040624194603.2A91010EF06@clark.cs.brown.edu> <1088158825.1941.113.camel@pelican.wigram> <20040625110748.GB2707@bourg.inria.fr> <1088166608.1941.120.camel@pelican.wigram> <40DC38D3.4010009@univ-savoie.fr> <20040628150805.GC7353@yquem.inria.fr> <cfc41b1c040709162130ba0875@mail.gmail.com>
Content-Type: text/plain; charset=US-ASCII; format=flowed
Message-Id: <BF455808-D25F-11D8-8B5A-00039310CAE8@inria.fr>
Content-Transfer-Encoding: 7bit
From: Damien Doligez <damien.doligez@inria.fr>
Subject: Re: [Caml-list] Thread and kernel 2.6 pb still there in CVS
Date: Sat, 10 Jul 2004 12:56:08 +0200
To: caml-list Caml <caml-list@inria.fr>
X-Mailer: Apple Mail (2.618)
X-Miltered: at nez-perce with ID 40EFCB45.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; damien:01 damien:01 caml-list:01 wakefield:99 sched:01 quantum:99 bug:01 sched:01 bug:01 kernel:01 ocaml:01 primitives:01 doligez:01 doligez:01 thread:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Jul 10, 2004, at 01:21, Donald Wakefield wrote:

> I know this comes a bit late in this 'thread', but there's been
> discussion on Slashdot on a new scheduler framework called Bossa. I
> posted a quote from Xavier's discussion of sched_yield, and another
> poster replied. In brief:

I read that post and I don't think it makes any sense at all.

> "...OpenOffice.org and Ocaml have to wait too long for their next CPU
> quantum, but that's because they are CPU bound tasks and it's their
> own fault.

In other words, a CPU-bound task should not expect to get CPU time.
Duh.

> "The bug was in past versions of Linux where, although it was
> pre-emptive, sched_yield was allowed some power - it should have been
> ignored in user-space and the scheduler decided what gets CPU and
> when. Depending on that bug is also a bug and the mis-users deserve
> everything they get."

This implies that the new scheduler is just as buggy as the old one,
since it doesn't ignore sched_yield either.

The real problem, IMO, is that there are two "yield" primitives
needed: one for yielding to another thread, and one for yielding
to another process.  They (basically) changed sched_yield from
one to the other, but the right solution would be to provide both.

-- Damien

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

