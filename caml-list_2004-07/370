Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA01601; Mon, 26 Jul 2004 15:31:52 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA00512 for <caml-list@pauillac.inria.fr>; Mon, 26 Jul 2004 15:31:51 +0200 (MET DST)
Received: from relay.felk.cvut.cz (relay.felk.cvut.cz [147.32.80.7])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i6QDVoSH026154
	for <caml-list@pauillac.inria.fr>; Mon, 26 Jul 2004 15:31:50 +0200
Received: from k333.felk.cvut.cz (k333.felk.cvut.cz [147.32.87.5])
	by relay.felk.cvut.cz (8.12.11/8.12.11) with ESMTP id i6QDSrft082264
	for <caml-list@pauillac.inria.fr>; Mon, 26 Jul 2004 15:28:53 +0200 (CEST)
	(envelope-from kybic@fel.cvut.cz)
Received: from K333/SpoolDir by k333.felk.cvut.cz (Mercury 1.48);
    26 Jul 04 15:28:53 +0100
Received: from SpoolDir by K333 (Mercury 1.48); 26 Jul 04 15:28:43 +0100
Received: from biogw-i-06.felk.cvut.cz (147.32.84.19) by k333.felk.cvut.cz (Mercury 1.48) with ESMTP;
    26 Jul 04 15:28:35 +0100
To: caml-list@pauillac.inria.fr
Subject: [Caml-list] Bug?: Module Size causes Segmentation fault
From: Jan Kybic <kybic@fel.cvut.cz>
Date: 26 Jul 2004 15:28:34 +0200
Message-ID: <m2u0vuaoe5.fsf@biogw-i-06.felk.cvut.cz>
Lines: 24
User-Agent: Gnus/5.09 (Gnus v5.9.0) Emacs/21.2.93
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-MailScanner-felk: Found to be clean
X-MailScanner-SpamCheck-felk: not spam, SpamAssassin (score=-4.9, required 5,
	BAYES_00 -4.90)
X-Miltered: at concorde with ID 410507C6.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; bug:01 filliatre:01 3.07:01 natively:01 inserting:01 closures:01 420:99 ocaml:01 segmentation:01 segmentation:01 mistakenly:96 module:03 module:03 let:04 let:04 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello,
        I have a problem with the Size module of Jean-Christophe
Filliatre. In ocaml 3.07+2 on Linux, the following code 

        let _ = Size.size_b (fun x y -> 3. ) 

causes "Segmentation fault" in top-level, byte-compiled and natively
compiled code. The code is obviously wrong, it resulted
from a mistakenly inserting 'x', but I still hope there should be a
way for Size.size_b to either fail gracefully or not fail at all. 

For one parameter closures, such as

        let _ = Size.size_b (fun x -> 3. ) 

it works well. Yours,

Jan


-- 
-------------------------------------------------------------------------
Jan Kybic <kybic@ieee.org>                  tel. +420 2 2435 7264
       or <kybic@fel.cvut.cz>,     http://cmp.felk.cvut.cz/~kybic

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

