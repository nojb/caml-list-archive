Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA17153; Fri, 23 Jul 2004 23:05:37 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA27642 for <caml-list@pauillac.inria.fr>; Fri, 23 Jul 2004 23:05:36 +0200 (MET DST)
Received: from kraid.nerim.net (smtp-105-friday.nerim.net [62.4.16.105])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i6NL5ZEV017176
	for <caml-list@inria.fr>; Fri, 23 Jul 2004 23:05:35 +0200
Received: from localhost (karryall.dnsalias.org [62.4.18.180])
	by kraid.nerim.net (Postfix) with ESMTP
	id B5A0F418DE; Fri, 23 Jul 2004 23:05:32 +0200 (CEST)
Date: Fri, 23 Jul 2004 23:05:33 +0200 (CEST)
Message-Id: <20040723.230533.104027451.oandrieu@nerim.net>
To: vanevery@indiegamedesign.com
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Bigarray is a pig
From: Olivier Andrieu <andrieu@ijm.jussieu.fr>
In-Reply-To: <OOEALCJCKEBJBIJHCNJDIEIOHFAB.vanevery@indiegamedesign.com>
References: <OOEALCJCKEBJBIJHCNJDIEIOHFAB.vanevery@indiegamedesign.com>
X-Mailer: Mew version 4.0.64 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 41017D9F.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 andrieu:01 andrieu:01 brandon:99 2004:99 ocamlopt:01 generic:01 compiler:01 bigarray:01 bigarray:01 olivier:02 olivier:02 accessed:04 array:04 array:04 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

 "Brandon J. Van Every" [Fri, 23 Jul 2004]:
 > I have been looking at the sources of the Bigarray implementation.
 > I am chagrined to discover that not only does Bigarray cost a
 > function call per array element access, 

No. Not always: when the type of the array is completely known to the
compiler at the point the element is accessed, ocamlopt will access
the element directly, without using the generic C function.

-- 
   Olivier

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

