Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA22120; Sat, 31 Jul 2004 20:14:35 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA22389 for <caml-list@pauillac.inria.fr>; Sat, 31 Jul 2004 20:14:34 +0200 (MET DST)
Received: from asmtp-a063f29.pas.sa.earthlink.net (asmtp-a063f29.pas.sa.earthlink.net [207.217.120.131])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i6VIEWEV006945
	for <caml-list@inria.fr>; Sat, 31 Jul 2004 20:14:33 +0200
Received: from 168-103-58-16.tcsn.qwest.net ([168.103.58.16] helo=dylan)
	by asmtp-a063f29.pas.sa.earthlink.net with asmtp (Exim 4.34)
	id 1BqyNL-00068C-V9
	for caml-list@inria.fr; Sat, 31 Jul 2004 11:14:32 -0700
Message-ID: <001b01c4772a$636aec60$0201a8c0@dylan>
From: "David McClain" <dmcclain1@mindspring.com>
To: "caml" <caml-list@inria.fr>
Subject: [Caml-list] BigArray's Implementation
Date: Sat, 31 Jul 2004 11:15:35 -0700
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1437
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
X-ELNK-Trace: 7a0ab3eafc8cf994b22988ad1c62733440683398e744b8a413096d62c456a695d015c8aabfc055bf2601a10902912494350badd9bab72f9c350badd9bab72f9c
X-Originating-IP: 168.103.58.16
X-Miltered: at nez-perce with ID 410BE188.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; mcclain:01 dmcclain:01 assuring:99 mcclain:01 bigarray:01 bigarray:01 ocaml:01 ocaml:01 underlying:01 checking:01 bounds:03 library:03 array:04 seems:05 structure:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Why is it necessary to do so much of the BigArray management in C? You have
a perfectly good language for assuring that things go correctly, in OCaml. I
see no declaration of BigArray structure in the OCaml Library code (the ML
part), and huge reliance on C subroutines for mundane things like array
bounds checking, accessing dimensions, and so on. The only part that seems
reasonable as a candidate for C code is the underlying Get and Set with
mutation of representation, e.g., single-float to OCaml double-float
representation and back...

David McClain
Senior Corporate Scientist
Avisere, Inc.

+1.520.390.7738 (USA)
david.mcclain@avisere.com



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

