Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id FAA02489; Thu, 8 Jul 2004 05:41:04 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id FAA02693 for <caml-list@pauillac.inria.fr>; Thu, 8 Jul 2004 05:41:03 +0200 (MET DST)
Received: from mail.davidb.org (adsl-64-172-240-129.dsl.sndg02.pacbell.net [64.172.240.129])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i683f1EV020652
	for <caml-list@inria.fr>; Thu, 8 Jul 2004 05:41:02 +0200
Received: from davidb by mail.davidb.org with local (Exim 3.36 #1 (Debian))
	id 1BiPmN-0007nd-00; Wed, 07 Jul 2004 20:40:59 -0700
Date: Wed, 7 Jul 2004 20:40:59 -0700
From: David Brown <caml-list@davidb.org>
To: Olivier P?r?s <olivier.peres@laposte.net>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Does Caml have slow arithmetics ?
Message-ID: <20040708034059.GA29942@davidb.org>
References: <20040707130016.GA27591@bourg.inria.fr> <40EC122C.3040300@laposte.net> <20040707170611.GA24565@davidb.org> <40EC3631.5010905@laposte.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <40EC3631.5010905@laposte.net>
User-Agent: Mutt/1.5.4i
X-Miltered: at nez-perce with ID 40ECC24D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 caml-list:01 arithmetics:01 2004:99 pointers:01 pointers:01 aligned:01 aligned:01 ocaml:01 ocaml:01 caml:01 distinguish:01 0200,:01 polymorphic:01 olivier:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wed, Jul 07, 2004 at 07:43:13PM +0200, Olivier P?r?s wrote:
> David Brown wrote:
> >
> >The only pointers that ocaml "cares" about (in the sense of the GC or
> >polymorphic compare) are those that are allocated on the ocaml heap.
> 
>    Sure, but the reason given above to zero-tag integers was to have C 
> pointers "look" like integers to the GC. However, C pointers are not 
> necessarily aligned and thus may mislead the GC into trying to 
> garbage-collect them.

No.  Aligned C pointers look like pointers to the GC.  It uses a bitmap
to distinguish between C pointers and ocaml heap managed pointers.
Misaligned pointers are the ones that will look like integers to the GC.

Dave

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

