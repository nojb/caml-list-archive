Return-Path: <SRS0=/XmI=WH=polytechnique.org=alan.schmitt@bounces.m4x.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id BF8DBE0235
	for <caml-list@sympa.inria.fr>; Tue, 31 May 2022 14:29:43 +0200 (CEST)
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=Pass smtp.pra=alan.schmitt@polytechnique.org; spf=Pass smtp.mailfrom=SRS0=/XmI=WH=polytechnique.org=alan.schmitt@bounces.m4x.org; spf=Pass smtp.helo=postmaster@mx1.polytechnique.org
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  alan.schmitt@polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=pra; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=/XmI=WH=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="alan.schmitt@polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  SRS0=/XmI=WH=polytechnique.org=alan.schmitt@bounces.m4x.org
  designates 129.104.30.34 as permitted sender)
  identity=mailfrom; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=/XmI=WH=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="SRS0=/XmI=WH=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-conformance=sidf_compatible; x-record-type="spf2.0";
  x-record-text="spf2.0/pra,mfrom +a:mx1.polytechnique.org
  +a:mx2.polytechnique.org +a:mx3.polytechnique.org
  +ip6:2001:41d0:1:94de::736d:7470 -all"
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  postmaster@mx1.polytechnique.org designates 129.104.30.34 as
  permitted sender) identity=helo; client-ip=129.104.30.34;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="SRS0=/XmI=WH=polytechnique.org=alan.schmitt@bounces.m4x.org";
  x-sender="postmaster@mx1.polytechnique.org";
  x-conformance=sidf_compatible; x-record-type="v=spf1";
  x-record-text="v=spf1 a -all"
IronPort-SDR: 70iONeeW5E9qEJFV9LGCwfFw3jEZWpICYSK0JTc1d/mM8anHq7iWvLptZ4aAlZPB3dkWfdjb/r
 RoSxtTOgiLX69aRFcUBe5X3UD+IdYY59QzJrgMomTgrGqPIxA6XPDy2FrI5rzA33f7MueSXoGU
 hVc0CqL9d0nZ4iniCXC/Pe0uWi7luJVeurTRVRknz8+/Arl3j6kDKhZGeK1bftrn+mKtl3MV+K
 kKiHjxpOxhHEPVHnE+YnSrIOAGK9VsQLxirQaL2gGwh6oeQocug+3RdVncXMNMa6M5AgMeQ9ta
 AzAlPMN7gIENJVmOItoIPJm3
X-IPAS-Result: =?us-ascii?q?A0AtAgCmCZZimCIeaIFag3mBAxkBZlYtBwhEhE6JAIgNb?=
 =?us-ascii?q?IhllSABAwENLAEMBgECBAEBhQIChUQCHgYBBTMTAQIEAQEBAQMCAwEBAQEBA?=
 =?us-ascii?q?QMBAQUBAQECAQECBAQBEwEBAQEBAQEBCQsJBwYMBRAOBTxkZASBSwSBdAs0D?=
 =?us-ascii?q?YI1DBmDcAEhCmUjAxsDAhEBFwEeFwESGoJjAYMYBQqQJpwSgTGBAYNPAQMFh?=
 =?us-ascii?q?EGBZSSBGYYaWUqDC4MgeQInEIFVRIQPboJLFwECAQGBFSYBAVaDIIJlBI0ki?=
 =?us-ascii?q?SsHOgNONRKBIXEBCAYGBwoFMgYCDBgUBAITEU0GHQITDAoGFg5CEhkMDwMSA?=
 =?us-ascii?q?xEBBwILEggVLAgDAgMIAwIDLgIDGAkHCgMdCAocEhAUAgQTHwsIAxofLQkCB?=
 =?us-ascii?q?A4DQwgLCgMRBAMTGAsWCBAEBgMJLw0oCwMFDw8BBgMGAgUFAQMgAxQDBScHA?=
 =?us-ascii?q?yEHCyYNDQQjHQMDBSYDAgIbBwICAwIGFwYCAhlYCigNCAQIBBgEHiUTBQIHM?=
 =?us-ascii?q?QUELwIeBAUGEQkCFgIGBAUCBAQWAgISCAIIJxsHFjYZAQVdBgsJIRYGKREFB?=
 =?us-ascii?q?hYDI1EnBUgPKTsGIpNAgxeBPw4fHzJYGRYBAVg4WB0BByUWAi2SIAMnmEmVL?=
 =?us-ascii?q?jQHg1GBPQYMiCyBII0BiCODdYFPkU+RRyGWRyCJKYEbggNGlEshhRqBTiqBa?=
 =?us-ascii?q?wwHMxowgysJRQEDAg0BAgIDAQIBAgkBAQJUjSEBhBmCZIF1O4VMPzQCAQE3A?=
 =?us-ascii?q?gYBCgEBAwmFYwEBBRMLAYZKgjcBAQ?=
IronPort-PHdr: A9a23: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
IronPort-Data: A9a23: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
 28Rm/+//rSsuEZp
IronPort-HdrOrdr: A9a23:RVx37aO125Oy9cBcTsajsMiBIKoaSvp037BL7SBMoHNuHfBw+/
 rFoB15737JYVQqNk3I8OroUMK9qBjnmaKdj7N9AZ6SGCHY/EGoIIth4YaK+UyCJwTOsshH2+
 NFe6h6YeeAaGSSYPyKgjWFLw==
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-AV: E=Sophos;i="5.91,265,1647298800"; 
   d="scan'208,217";a="15515583"
X-MGA-submission: =?us-ascii?q?MDHR8xp9+ApvN2g4+5Cq+mckHsoxfU/TrCvc4t?=
 =?us-ascii?q?rKGCt1jeHvGNavSnLXdigdlYMB4YKENSFSfil8WfJUlq/BodyZuIru1C?=
 =?us-ascii?q?246mJ6J/5SWiifKjuX3yGG2B45BJbd+W3yr6GTVUB/e9tWtZpNk716E0?=
 =?us-ascii?q?MXAUhwEawDNkl9eACYHRO2QA=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 31 May 2022 14:29:42 +0200
Received: from set (set.irisa.fr [131.254.10.170])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id C48645648ED;
	Tue, 31 May 2022 14:29:41 +0200 (CEST)
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, "cwn"  <cwn@lists.idyll.org>, caml-list@inria.fr
Date: Tue, 31 May 2022 14:29:41 +0200
Message-ID: <87czftsx56.fsf@m4x.org>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue May 31 14:29:42 2022 +0200 (CEST))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.402576, queueID=0B3FC5648F4
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Hello

Here is the latest OCaml Weekly News, for the week of May 24 to 31,
2022.

Table of Contents
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

carray.0.0.1
OCaml Users and Developers Workshop 2022
Old CWN


carray.0.0.1
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ann-carray-0-0-1/9938/1>


Danny Willems announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I'm glad to announce the first (experimental) release of ocaml-carray,
  a library mocking the Array interface to work with contiguous C array.
  *Disclaimer*: this first version is experimental and must be used with
  caution. A restricted set of values are supported at the moment
  (custom block with no out-of-heap values). Depending on the demand,
  more values might be supported.  Feel free to use this thread to
  suggest ideas, make opinions, etc.

  Repository
        <https://gitlab.com/dannywillems/ocaml-carray>
  License
        [MIT]
  Release
        [0.0.1]
  Documentation
        <https://dannywillems.gitlab.io/ocaml-carray/carray/index.html>
  Nomadic Labs website
        <https://nomadic-labs.com>
  Tezos ZK-rollups repository
        <https://gitlab.com/nomadic-labs/privacy-team>


[MIT]
<https://gitlab.com/dannywillems/ocaml-carray/-/blob/0.0.1/LICENSE>

[0.0.1] <https://gitlab.com/dannywillems/ocaml-carray/-/tags/0.0.1>

Motivation
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C

  OCaml arrays are not always contiguous piece of memory, requiring
  accessing different chunks of memory when accessing individual
  elements. When requiring a value in memory, the CPU will fetch the RAM
  and load not only the particular value but a memory page (a contiguous
  piece of memory) and add it to its cache. The CPU will use its cache
  to load the values in its registers. It is not efficient with large
  OCaml arrays as the CPU will constantly fetch the RAM to load
  different memory pages in its cache.  Also, when using the C FFI, the
  user must know the memory representation of an array and use the non
  user-friendly low-level interface macro `Field'.


This work
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C

  This library provides a polymorphic interface mocking a subset of the
  `Array' interface to work with contiguous piece of memory. Using the
  library should be as easy as adding `module Array =3D Carray'.  A C
  macro `Carray_val' is also provided for developers writing bindings
  and requires to simply cast in the underlying C type.  It has also
  been observed sub arrays are sometimes used for read-only
  operations. However, `Array.sub' allocates a fresh copy of the
  requested sub part. `Carray' leverages this memory cost by providing
  noalloc variants, like `sub_noalloc'.


Performances
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  The concept has been tested and used in real world applications like
  the polynomial library used by Nomadic Labs to implement zk-rollups. A
  speed up of around 50% has been observed when using contiguous arrays
  compared to OCaml arrays to compute NTT/FFT.


Usage
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  This library is *experimental*. Use this library with caution. The
  interface might change in the future.

  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam install carray.0.0.1
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80


OCaml Users and Developers Workshop 2022
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ocaml-users-and-developers-workshop-2022/972=
6/2>


Continuing this thread, Matija Pretnar announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  This is a reminder for anyone interested in contributing to OCaml
  Workshop 2022. The deadline has been slightly extended to Friday, June
  3 (anywhere on Earth), which means you have roughly *four days left*
  to prepare your submissions.


Old CWN
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  [online].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <https://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <https://alan.petitepomme.net/cwn/cwn.rss>

[online] <http://lists.idyll.org/listinfo/caml-news-weekly/>

[Alan Schmitt] <https://alan.petitepomme.net/>


--=-=-=
Content-Type: text/html
Content-Disposition: inline

<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2022-05-31 Tue 14:28 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>OCaml Weekly News</title>
<meta name="generator" content="Org Mode" />
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
</style>
<style type="text/css">#table-of-contents h2 { display: none } .title { display: none } .authorname { text-align: right }</style>
<style type="text/css">.outline-2 {border-top: 1px solid black;}</style>
</head>
<body>
<div id="content" class="content">
<h1 class="title">OCaml Weekly News</h1>
<p>
<a href="https://alan.petitepomme.net/cwn/2022.05.24.html">Previous Week</a> <a href="https://alan.petitepomme.net/cwn/index.html">Up</a> <a href="https://alan.petitepomme.net/cwn/2022.06.07.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of May 24 to 31, 2022.
</p>

<div id="table-of-contents" role="doc-toc">
<h2>Table of Contents</h2>
<div id="text-table-of-contents" role="doc-toc">
<ul>
<li><a href="#1">carray.0.0.1</a></li>
<li><a href="#2">OCaml Users and Developers Workshop 2022</a></li>
<li><a href="#orgc7830ec">Old CWN</a></li>
</ul>
</div>
</div>


<div id="outline-container-1" class="outline-2">
<h2 id="1">carray.0.0.1</h2>
<div class="outline-text-2" id="text-1">
<p>
Archive: <a href="https://discuss.ocaml.org/t/ann-carray-0-0-1/9938/1">https://discuss.ocaml.org/t/ann-carray-0-0-1/9938/1</a>
</p>
</div>

<div id="outline-container-org0d11212" class="outline-3">
<h3 id="org0d11212">Danny Willems announced</h3>
<div class="outline-text-3" id="text-org0d11212">
<p>
I'm glad to announce the first (experimental) release of ocaml-carray, a library mocking the Array interface to work
with contiguous C array.
<b>Disclaimer</b>: this first version is experimental and must be used with caution. A restricted set of values are
supported at the moment (custom block with no out-of-heap values). Depending on the demand, more values might be
supported.
Feel free to use this thread to suggest ideas, make opinions, etc.
</p>

<dl class="org-dl">
<dt>Repository</dt><dd><a href="https://gitlab.com/dannywillems/ocaml-carray">https://gitlab.com/dannywillems/ocaml-carray</a></dd>
<dt>License</dt><dd><a href="https://gitlab.com/dannywillems/ocaml-carray/-/blob/0.0.1/LICENSE">MIT</a></dd>
<dt>Release</dt><dd><a href="https://gitlab.com/dannywillems/ocaml-carray/-/tags/0.0.1">0.0.1</a></dd>
<dt>Documentation</dt><dd><a href="https://dannywillems.gitlab.io/ocaml-carray/carray/index.html">https://dannywillems.gitlab.io/ocaml-carray/carray/index.html</a></dd>
<dt>Nomadic Labs website</dt><dd><a href="https://nomadic-labs.com">https://nomadic-labs.com</a></dd>
<dt>Tezos ZK-rollups repository</dt><dd><a href="https://gitlab.com/nomadic-labs/privacy-team">https://gitlab.com/nomadic-labs/privacy-team</a></dd>
</dl>
</div>

<div id="outline-container-org5ac1e65" class="outline-4">
<h4 id="org5ac1e65">Motivation</h4>
<div class="outline-text-4" id="text-org5ac1e65">
<p>
OCaml arrays are not always contiguous piece of memory, requiring accessing different chunks of memory when accessing
individual elements. When requiring a value in memory, the CPU will fetch the RAM and load not only the particular
value but a memory page (a contiguous piece of memory) and add it to its cache. The CPU will use its cache to load
the values in its registers. It is not efficient with large OCaml arrays as the CPU will constantly fetch the RAM to
load different memory pages in its cache.
Also, when using the C FFI, the user must know the memory representation of an array and use the non user-friendly
low-level interface macro <code>Field</code>.
</p>
</div>
</div>

<div id="outline-container-org186ed22" class="outline-4">
<h4 id="org186ed22">This work</h4>
<div class="outline-text-4" id="text-org186ed22">
<p>
This library provides a polymorphic interface mocking a subset of the <code>Array</code> interface to work with contiguous piece
of memory. Using the library should be as easy as adding <code>module Array = Carray</code>.
A C macro <code>Carray_val</code> is also provided for developers writing bindings and requires to simply cast in the underlying
C type.
It has also been observed sub arrays are sometimes used for read-only operations. However, <code>Array.sub</code> allocates a
fresh copy of the requested sub part. <code>Carray</code> leverages this memory cost by providing noalloc variants, like
<code>sub_noalloc</code>.
</p>
</div>
</div>

<div id="outline-container-org117bd11" class="outline-4">
<h4 id="org117bd11">Performances</h4>
<div class="outline-text-4" id="text-org117bd11">
<p>
The concept has been tested and used in real world applications like the polynomial library used by Nomadic Labs to
implement zk-rollups. A speed up of around 50% has been observed when using contiguous arrays compared to OCaml
arrays to compute NTT/FFT.
</p>
</div>
</div>

<div id="outline-container-org1312828" class="outline-4">
<h4 id="org1312828">Usage</h4>
<div class="outline-text-4" id="text-org1312828">
<p>
This library is <b>experimental</b>. Use this library with caution. The interface might change in the future.
</p>

<pre class="example" id="org9a5db7c">
opam install carray.0.0.1
</pre>
</div>
</div>
</div>
</div>




<div id="outline-container-2" class="outline-2">
<h2 id="2">OCaml Users and Developers Workshop 2022</h2>
<div class="outline-text-2" id="text-2">
<p>
Archive: <a href="https://discuss.ocaml.org/t/ocaml-users-and-developers-workshop-2022/9726/2">https://discuss.ocaml.org/t/ocaml-users-and-developers-workshop-2022/9726/2</a>
</p>
</div>

<div id="outline-container-org22ddcc4" class="outline-3">
<h3 id="org22ddcc4">Continuing this thread, Matija Pretnar announced</h3>
<div class="outline-text-3" id="text-org22ddcc4">
<p>
This is a reminder for anyone interested in contributing to OCaml Workshop 2022. The deadline has been slightly
extended to Friday, June 3 (anywhere on Earth), which means you have roughly <b>four days left</b> to prepare your
submissions.
</p>
</div>
</div>
</div>




<div id="outline-container-orgc7830ec" class="outline-2">
<h2 id="orgc7830ec">Old CWN</h2>
<div class="outline-text-2" id="text-orgc7830ec">
<p>
If you happen to miss a CWN, you can <a href="mailto:alan.schmitt@polytechnique.org">send me a message</a> and I'll mail it to you, or go take a look at <a href="https://alan.petitepomme.net/cwn/">the archive</a> or the <a href="https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archives</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe <a href="http://lists.idyll.org/listinfo/caml-news-weekly/">online</a>.
</p>

<div class="authorname" id="org0962ee0">
<p>
<a href="https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

