Return-Path: <gava@univ-paris12.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 4BF55BB81
	for <caml-list@yquem.inria.fr>; Fri, 24 Feb 2006 00:04:10 +0100 (CET)
Received: from smtp6.wanadoo.fr (smtp6.wanadoo.fr [193.252.22.25])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k1NN49uP026082
	for <caml-list@yquem.inria.fr>; Fri, 24 Feb 2006 00:04:10 +0100
Received: from me-wanadoo.net (localhost [127.0.0.1])
	by mwinf0602.wanadoo.fr (SMTP Server) with ESMTP id CD66E1C00099
	for <caml-list@yquem.inria.fr>; Fri, 24 Feb 2006 00:04:09 +0100 (CET)
Received: from nono (ARouen-106-1-3-31.w80-11.abo.wanadoo.fr [80.11.87.31])
	by mwinf0602.wanadoo.fr (SMTP Server) with SMTP id 731681C00093;
	Fri, 24 Feb 2006 00:04:09 +0100 (CET)
X-ME-UUID: 20060223230409471.731681C00093@mwinf0602.wanadoo.fr
Message-ID: <013501c638cd$f647f580$1f570b50@mshome.net>
From: =?iso-8859-1?Q?Fr=E9d=E9ric_Gava?= <gava@univ-paris12.fr>
To: "Brian Hurt" <bhurt@spnz.org>
Cc: <caml-list@yquem.inria.fr>
References: <006101c6389e$9bbbc440$1f570b50@mshome.net> <20060223183306.GA17390@localhost> <009b01c638ac$6a57b0e0$1f570b50@mshome.net> <Pine.LNX.4.63.0602231410420.9569@localhost.localdomain> <00e301c638c0$5368ef20$1f570b50@mshome.net> <Pine.LNX.4.63.0602231546080.9569@localhost.localdomain> <012001c638c8$b10139a0$1f570b50@mshome.net> <Pine.LNX.4.63.0602231644050.9569@localhost.localdomain>
Subject: Re: [Caml-list] (int * int) <> int*int ?
Date: Fri, 24 Feb 2006 00:07:47 +0100
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.50.4133.2400
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
X-Miltered: at nez-perce with ID 43FE3F69.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; gava:01 gava:01 caml-list:01 constructors:01 transforming:01 12.:98 work-:98 int:01 int:01 seems:03 frederic:03 let:03 let:03 hack:04 problem:05 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.0 required=5.0 tests=RCVD_IN_NJABL_PROXY 
	autolearn=disabled version=3.0.3

>I understand you're arguing that type constructors should work the same
way.
It is just i think: the difference with int*int and (int*int) seems (to me)
a hack (but i am peraps an extremist ;-) )

>Well, maybe they should have.
I also do not know. Peraps another solution would be that
#type t= A of int*int
#let a=(1,2) in (A a)
works by automatically transforming "a": tag*(int*int) to tag*int*int...but
peraps it is too hard for just some little cases and it takes many memory
for the copy (ok, I can write let (a1,a2)=(1,2) in (A (a1,a2)) but it takes
much times...;-) )

>I'm not sure I'd like it if that was changed now, however.  Working code
wouldn't cease to work- it'd just be
>less memory efficient.  But you'd always have the extra reference, even if
>you didn't need it.

I understand your problem and i have no good solution :-(

Good night !
FG


