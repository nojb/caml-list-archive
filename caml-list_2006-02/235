Return-Path: <jonathan.roewen@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id BED02BB81
	for <caml-list@yquem.inria.fr>; Fri, 24 Feb 2006 13:09:36 +0100 (CET)
Received: from wproxy.gmail.com (wproxy.gmail.com [64.233.184.201])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k1OC9ZnE004051
	for <caml-list@yquem.inria.fr>; Fri, 24 Feb 2006 13:09:36 +0100
Received: by wproxy.gmail.com with SMTP id i3so587981wra
        for <caml-list@yquem.inria.fr>; Fri, 24 Feb 2006 04:09:35 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:mime-version:content-type:content-transfer-encoding:content-disposition;
        b=mzgf1hVTPyWSCWow+BlFtawwWVIhMfcaNvZ0wA6bZk1ufC0r1GPemhQaawG30N+4Wna5rljXddNhy2UmMLGV59+nSnFaJZ/L4jQ2+t0sqBZLi1LyRe/feNhzwBiOcSfdrNzaVX46sZJUogDiPulacbDDg/3mC2h8+6WJHpDk+7A=
Received: by 10.65.212.4 with SMTP id o4mr1856413qbq;
        Fri, 24 Feb 2006 04:09:35 -0800 (PST)
Received: by 10.65.23.20 with HTTP; Fri, 24 Feb 2006 04:09:34 -0800 (PST)
Message-ID: <ad8cfe7e0602240409h2cac1c08r4bad782a10d36f02@mail.gmail.com>
Date: Sat, 25 Feb 2006 01:09:35 +1300
From: "Jonathan Roewen" <jonathan.roewen@gmail.com>
To: OCaml <caml-list@yquem.inria.fr>
Subject: [Caml-list] signals & threading
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
X-Miltered: at nez-perce with ID 43FEF77F.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 threading:01 stdout:01 threads:01 unix:01 unix:01 exception:01 exception:01 behaviour:01 thread:02 string:02 float:03 raise:03 sys:03 sys:03 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=RCVD_BY_IP autolearn=disabled 
	version=3.0.3

Here's some example code once posted on the list to have a timeout.

let set_timer tsecs =3D
  ignore (Unix.setitimer Unix.ITIMER_REAL
                         { Unix.it_interval =3D 0.0; Unix.it_value =3D tsec=
s })

exception Timeout

let handle_sigalrm signo =3D
  print_string "Continue for how long? "; flush stdout;
  let f =3D read_float() in
  if f <=3D 0.0
  then raise Timeout
  else set_timer f

let continueq f arg tsecs defaultval =3D
  let oldsig =3D Sys.signal Sys.sigalrm (Sys.Signal_handle handle_sigalrm) =
in
  try
    set_timer tsecs;
    let res =3D f arg in
    set_timer 0.0;
    Sys.set_signal Sys.sigalrm oldsig;
    res
  with Timeout ->
    Sys.set_signal Sys.sigalrm oldsig;
    defaultval

Now, my question is: what happens with multiple threads? The exception
is raised in whatever thread is currently running? Is there also no
control over such behaviour?

Jonathan

