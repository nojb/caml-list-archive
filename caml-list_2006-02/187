Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 5EEE3BB81
	for <caml-list@yquem.inria.fr>; Tue, 21 Feb 2006 16:37:54 +0100 (CET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id k1LFbrKI015330
	for <caml-list@yquem.inria.fr>; Tue, 21 Feb 2006 16:37:54 +0100
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA07113 for <caml-list@pauillac.inria.fr>; Tue, 21 Feb 2006 16:37:53 +0100 (MET)
Received: from nef2.ens.fr (nef2.ens.fr [129.199.96.40])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id k1LFbr9p015327
	for <caml-list@inria.fr>; Tue, 21 Feb 2006 16:37:53 +0100
Received: from clipper.ens.fr (clipper-gw.ens.fr [129.199.1.22])
          by nef2.ens.fr (8.13.2/1.01.28121999) with ESMTP id k1LFbqLk038014
          for <caml-list@inria.fr>; Tue, 21 Feb 2006 16:37:52 +0100 (CET)
X-Envelope-To: <caml-list@inria.fr>
Received: from (primet@localhost) by clipper.ens.fr (8.13.1/jb-1.1)
Date: Tue, 21 Feb 2006 16:37:52 +0100
From: =?iso-8859-1?Q?Ma=EBl?= Primet <mael.primet@ens.fr>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Modules ocaml
Message-ID: <20060221153752.GA7986@clipper.ens.fr>
References: <20060221150832.GA4130@clipper.ens.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20060221150832.GA4130@clipper.ens.fr>
User-Agent: Mutt/1.5.9i
X-Greylist: Sender IP whitelisted, not delayed by milter-greylist-1.5.10 (nef2.ens.fr [129.199.96.32]); Tue, 21 Feb 2006 16:37:53 +0100 (CET)
X-Miltered: at concorde with ID 43FB33D1.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 43FB33D1.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; mael:01 mael:01 caml-list:01 ocaml:01 struct:01 forcer:01 memes:01 d'utiliser:01 modules:01 modules:01 caml:02 caml:02 semble:02 ens:02 d'ailleurs:02 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

Désolé de flooder...
en fait  ma question n'avait pas trop de sens a priori, parceque caml n'a
pas moyen à partir du type d'être sûr que l'implémentation va être la
même (ce qui est d'ailleurs l'intérêt des modules), il me semble que je
suis plus ou moins obligé d'utiliser des trucs genre :

module Trans ... = struct
type IdMap = SSADef.IdMap ;
...
end;

et que c'est le plus propre.
Ceci dit, il n'y a vraiment pas moyen de dire à caml que deux modules
sont les mêmes ? (lui forcer un peu la patte ?)

