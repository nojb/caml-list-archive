Return-Path: <ogasawara@itpl.co.jp>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.6 required=5.0 tests=AWL,DATE_IN_PAST_24_48,
	SPF_SOFTFAIL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id B5E0EBBAF
	for <caml-list@yquem.inria.fr>; Mon,  6 Jul 2009 03:06:32 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AsADANfqUErY5v4vmWdsb2JhbABGmFQBAQEBAQgLCgcTsBGEEgWBOg
X-IronPort-AV: E=Sophos;i="4.42,353,1243807200"; 
   d="scan'208";a="42958873"
Received: from amout07.alpha-mail.net ([216.230.254.47])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 06 Jul 2009 03:06:32 +0200
Received: from webarc04.alpha-mail.jp (webarc04.alpha-mail.jp [216.230.254.84])
	by amout07.alpha-mail.net  with ESMTP id n6616SxD010118;
	Mon, 6 Jul 2009 10:06:29 +0900
X-Virus-Scanned: amavisd-new at Alpha-Mail Out
Received: from ltsub.alpha-mail.net (ltsub.alpha-mail.net [216.230.254.26])
	by webarc04.alpha-mail.jp (Postfix) with ESMTP id CEF5F1C08083;
	Mon,  6 Jul 2009 10:06:25 +0900 (JST)
Received: from [192.168.0.104] (196.62.205.61.west.global.alpha-net.ne.jp [61.205.62.196])
	by ltsub.alpha-mail.net (Alpha-mail) with ESMTP id 4FF673B80B1;
	Mon,  6 Jul 2009 10:06:28 +0900 (JST)
Message-Id: <AC895CB5-7ABD-4276-8156-4D0ED4D8ADB0@itpl.co.jp>
From: Satoshi Ogasawara <ogasawara@itpl.co.jp>
To: caml-list@inria.fr
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Subject: [ANN]Concurrent Cell Version 2.0.0
Mime-Version: 1.0 (Apple Message framework v935.3)
Date: Sat, 4 Jul 2009 11:48:38 +0900
X-Mailer: Apple Mail (2.935.3)
X-Spam: no; 0.00; bool:01 val:01 val:01 signatures:01 dependency:01 dependency:01 functional:02 variables:02 string:02 string:02 unit:03 unit:03 programming:03 concurrent:04 concurrent:04 

Dear list,
I'm please to announce a new release of Concurrent Cell version 2.0.0 which
supports new variable 'Dvar'. This variable is a kind of Mvar that can hold
dependency between variables, and resolve thease dependency automatically
when the value of the variable is changed. This system is similar to Functional 
Reactive Programming style.

the main signatures are:

type 'a t
type 'a eq = 'a -> 'a -> bool
val make : ?name:string -> ?eq:'a eq -> ?event:'a Mbox.t -> 'a -> 'a t
val depend : ?name:string -> ?eq:'b eq -> 'a t -> ('a -> 'b) -> 'b t
val read : 'a t -> 'a Event.event
val set : 'a t -> ('a option -> 'a) -> unit Event.event
val filter : ?name:string -> ?eq:'b eq -> 'a t -> ('a -> 'b option) -> 'b t
val connect : 'a t -> ('a -> 'b -> 'b) -> 'b t -> unit
val disconnect : src:'a t -> dst:'b t -> unit
val depend2 : ?name:string -> ?eq:'c eq -> 'a t -> 'b t -> ('a -> 'b -> 'c) -> 'c t

Best regards,
 ogasawara

