Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA05072; Thu, 15 Feb 2001 10:33:50 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA05080 for <caml-list@pauillac.inria.fr>; Thu, 15 Feb 2001 10:33:49 +0100 (MET)
Received: from cremant.inria.fr (cremant.inria.fr [128.93.8.143])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f1F9Xnj07009
	for <caml-list@inria.fr>; Thu, 15 Feb 2001 10:33:49 +0100 (MET)
Received: (from lefessan@localhost)
	by cremant.inria.fr (8.11.0/8.11.0) id f1F9Xms09157;
	Thu, 15 Feb 2001 10:33:48 +0100
X-Authentication-Warning: cremant.inria.fr: lefessan set sender to fabrice.le_fessant@inria.fr using -f
From: Fabrice Le Fessant <fabrice.le_fessant@inria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <14987.41596.904886.588474@cremant.inria.fr>
Date: Thu, 15 Feb 2001 10:33:48 +0100 (CET)
To: caml-list@inria.fr
Subject: [Caml-list] RE: OCaml on CLR/JVM?
X-Mailer: VM 6.75 under Emacs 20.7.1
Reply-To: fabrice.le_fessant@inria.fr
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk



Hi Don, 

  Thanks for your replies. Here are some more comments ...

>  > Is the .NET VM open source ? Which part is Microsoft-independent ?
>  
>  The MS implementation of the Common Language Runtime is not open source.
>  The Common Language Runtime, C# and aspects of the .NET Frameworks are being
>  standardized by ECMA.  If the standardization committees do their job, the
>  standards will be sufficient to allow others to implement a compatible CLR.

There is an HUGE difference between open source and standards. The
first one can always freely evolve, while being used freely by many
users. Standardized ones cannot evolve anymore, or need the company
agreement to be modified. Compatible software will always have to
follow the company new developments, and thus will never be truely
achieved. This is one of the -many- drawbacks of Java.

>  You'll be glad to know that MS and Microsoft Research has been doing what
>  you say for the last two years and has been porting difficult research
>  languages (e.g. ML and Haskell) to the CLR, and working with other academic
>  groups to help this kind of effort move beyond the "hack it up and get it
>  working" phase that characterises efforts to target langauges at new
>  platforms.  This has led to many improvements to the CLR, including a
>  proposal for the CLR to support polymorphism in the next release in order to
>  better support languages such as OCaml.

The problem is that .NET is a commercial product. So, the question is:
should we spend our time porting Ocaml to all new commercial VMs (not
only MS ones, of course) ? Even if we can find some way to share the
work, to standardize the interfaces, etc ... There will always be
someone who doesn't want to follow the standard, and wants to have its
own proprietary one. This was done by MS several times (COM vs CORBA,
CLR vs JVM, etc...)

Moreover, CLR was only designed as a concurrent of the Java
VM. Otherwise, why didn't Microsoft choose to port all his languages
to the Java VM (other languages did that) or modify the Java VM for
their needs ? (of course, you can't use the argument that Java was not
free, since this is not a problem, from your first point...)

One time again, commercial issues have dominated scientific
reasons. CLR has been released too early, and will be standardized too
early, while big problems are still remaining: no polymorphism,
object-oriented approach in the bytecode, ... This should have been
discussed first, not in the next version !

>  I hope this answers your questions (though I'm sure it won't change your
>  mind!)

Of course, it won't change my mind. I will always think that public
research and commercial research have different goals...

Regards,

- Fabrice

PS: Xavier, Pierre, please, don't vote me out !
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

