Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA19669 for caml-red; Sat, 10 Feb 2001 22:15:37 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA14376 for <caml-list@pauillac.inria.fr>; Fri, 9 Feb 2001 18:54:50 +0100 (MET)
Received: from localhost.localdomain (kenny11.zip.com.au [61.8.18.139])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f19HslP19330
	for <caml-list@inria.fr>; Fri, 9 Feb 2001 18:54:48 +0100 (MET)
Received: from ozemail.com.au (IDENT:root@localhost [127.0.0.1])
	by localhost.localdomain (8.9.3/8.8.7) with ESMTP id EAA08098;
	Sat, 10 Feb 2001 04:50:03 +1100
Message-ID: <3A842DCB.1A32D8DF@ozemail.com.au>
Date: Sat, 10 Feb 2001 04:50:03 +1100
From: John Max Skaller <skaller@ozemail.com.au>
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12-20 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: frouaix@liquidmarket.com
CC: caml-list@inria.fr
Subject: Re: OCaml's long range graphical direction?
References: <200102082001.f18K1VH08374@nez-perce.inria.fr>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: weis@pauillac.inria.fr

Francois Rouaix wrote:

> I actually think that none of CamlTk/LablTK/LabelGTK fit the most common need
> in GUI development. In many cases, it still strikes me as utterly boring and
> time consuming to write *code* to put up menus, buttons, dialogs and such. Of
> course, from time to time, when you need some form of widget that is a bit
> original, programming will be useful. But that doesn't happen a lot, unless
> you write something that needs complex rendering or interaction.
> Back in 1985, Apple started using resources to define interfaces. More
> recently, Palm used resources again to define interfaces. More recently,
> Mozilla folks used XML based representation (XUL) to define interfaces, with a
> GUI level scripting language (JavaScript/ECMAScript).

	Ah, but the specification of the resources is nothing more
than yet another programming language, and a seriously deficient one
usually (for example, not Turing complete).

	Furthermore, it is evident that this second programming language
must be _bound_ to the algorithmic one, and that binding is invariably
fragile and a serious problem.  That is, I think there is a downside
to separating functionality and appearance. As any serious game player
knows, the two are intimately connected.

-- 
John (Max) Skaller, mailto:skaller@maxtal.com.au
10/1 Toxteth Rd Glebe NSW 2037 Australia voice: 61-2-9660-0850
checkout Vyper http://Vyper.sourceforge.net
download Interscript http://Interscript.sourceforge.net


