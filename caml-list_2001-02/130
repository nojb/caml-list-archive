Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA24657 for caml-red; Sat, 10 Feb 2001 22:40:05 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA06893 for <caml-list@pauillac.inria.fr>; Sat, 10 Feb 2001 08:40:02 +0100 (MET)
Received: from mx0.wanadoo.nl (mx0.wanadoo.nl [194.134.193.5])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f1A7e1D03078
	for <caml-list@inria.fr>; Sat, 10 Feb 2001 08:40:02 +0100 (MET)
Received: from beertje.william.bogus (p640.vcu.wanadoo.nl [194.134.201.168])
	by mx0.wanadoo.nl (8.9.3/8.9.3) with ESMTP id IAA06164
	for <caml-list@inria.fr>; Sat, 10 Feb 2001 08:40:00 +0100 (MET)
Received: (from williamc@localhost)
	by beertje.william.bogus (8.9.3/8.8.7) id WAA02798;
	Fri, 9 Feb 2001 22:45:36 +0100
X-Authentication-Warning: beertje.william.bogus: williamc set sender to williamc@paneris.org using -f
From: William Chesters <williamc@paneris.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Date: Fri,  9 Feb 2001 22:45:36 +0100 (CET)
To: caml-list@inria.fr
Subject: RE: first class, recursive, mixin modules (was: RE: first class m
   odules) 
In-Reply-To: <112C6E8A1B25D34BB27D48D2FD2E96CFC942C0@TVP-MSG-02.europe.corp.microsoft.com>
References: <112C6E8A1B25D34BB27D48D2FD2E96CFC942C0@TVP-MSG-02.europe.corp.microsoft.com>
X-Mailer: VM 6.43 under 20.4 "Emerald" XEmacs  Lucid
Message-ID: <14980.25762.184960.213741@beertje.william.bogus>
Sender: weis@pauillac.inria.fr

Claudio Russo writes:
 > I'm not really sure it bites that many, but I'd like to be told
 > otherwise. It does really hit you when trying to 
 > implement Chris Okasakis elegant bootstrapped data structures, or
 > emulate object oriented things with modules.  (Together with first-class
 > and recursive structure, you can model quite a bit of object oriented
 > stuff, but I'm not sure how natural or efficient this appproach is.) 

I've always been interested by this; you get an intriguing cross
between (in C++ terms) templates and classes.


