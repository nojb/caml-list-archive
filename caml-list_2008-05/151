Return-Path: <tab@snarc.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 9EC68BBCA
	for <caml-list@yquem.inria.fr>; Sat, 10 May 2008 01:03:56 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAAN1JEjUVZsV/2dsb2JhbACrVw
X-IronPort-AV: E=Sophos;i="4.27,462,1204498800"; 
   d="scan'208";a="26015701"
Received: from cerberus.snarc.org ([212.85.155.21])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 10 May 2008 01:03:56 +0200
Received: by cerberus.snarc.org (Postfix, from userid 1000)
	id 3552B129DD; Fri,  9 May 2008 23:57:20 +0100 (BST)
Date: Fri, 9 May 2008 23:57:21 +0100
From: Vincent Hanquez <tab@snarc.org>
To: David Teller <David.Teller@univ-orleans.fr>
Cc: Jon Harrop <jon@ffconsultancy.com>,
	Gerd Stolpmann <info@gerd-stolpmann.de>, caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Re: Why OCaml rocks
Message-ID: <20080509225721.GA17366@snarc.org>
References: <200805090139.54870.jon@ffconsultancy.com> <200805090609.36123.jon@ffconsultancy.com> <1210331526.17578.32.camel@flake.lan.gerd-stolpmann.de> <200805091910.41381.jon@ffconsultancy.com> <1210371949.6399.62.camel@Blefuscu>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <1210371949.6399.62.camel@Blefuscu>
X-Warning: Email may contain unsmilyfied humor and/or satire.
User-Agent: Mutt/1.5.17+20080114 (2008-01-14)
X-Spam: no; 0.00; ocaml:01 0200,:01 10,:98 wrote:01 caml-list:01 theoretical:03 algorithms:03 concurrent:04 parallel:05 thread:06 vincent:07 vincent:07 examples:07 crux:13 statement:13 

On Sat, May 10, 2008 at 12:25:49AM +0200, David Teller wrote:
> > On the contrary, that is not a theoretical statement at all: it
> > already 
> > happened. F# already makes it much easier to write high performance
> > parallel 
> > algorithms and its concurrent GC is the crux of that capability.
> 
> Examples ? Pretty please ?

and please stop throwing him bones to carry on this _stupid_ troll thread.

-- 
Vincent

