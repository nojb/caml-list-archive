Return-Path: <M.Berger@doc.ic.ac.uk>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 50563BBAF;
	Wed, 28 May 2008 19:42:57 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Av4AAPo2PUjAXQImiGdsb2JhbACBVZBRAQEBDyCcUg
X-IronPort-AV: E=Sophos;i="4.27,556,1204498800"; 
   d="scan'208";a="13161290"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 28 May 2008 19:42:42 +0200
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id m4SHggNw011093
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK);
	Wed, 28 May 2008 19:42:42 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlQBAFY2PUiKJV+LgWdsb2JhbACBVZBRAQEQIAWcUQ
X-IronPort-AV: E=Sophos;i="4.27,556,1204498800"; 
   d="scan'208";a="12849767"
Received: from tart.dcs.qmul.ac.uk (HELO mail.dcs.qmul.ac.uk) ([138.37.95.139])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 28 May 2008 19:42:41 +0200
Received: from host86-136-80-11.range86-136.btcentralplus.com ([86.136.80.11] helo=xila.local)
	by mail.dcs.qmul.ac.uk with esmtpsa (TLSv1:DHE-RSA-AES256-SHA:256)
	(Exim 4.68)
	(envelope-from <M.Berger@doc.ic.ac.uk>)
	id 1K1Pfb-0002Rm-RD; Wed, 28 May 2008 18:42:41 +0100
Message-ID: <483D9961.9040302@doc.ic.ac.uk>
Date: Wed, 28 May 2008 18:41:53 +0100
From: Martin Berger <M.Berger@doc.ic.ac.uk>
User-Agent: Thunderbird 2.0.0.14 (Macintosh/20080421)
MIME-Version: 1.0
To: Damien Doligez <damien.doligez@inria.fr>,
	caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Re: Where's my non-classical	shared	memory	concurrency
 technology?
References: <b903a8570805180139i7dfe7526u799e82d5126c9f3@mail.gmail.com>		<200805181735.50621.jon@ffconsultancy.com>	<4831686F.8010903@doc.ic.ac.uk>	<1211206144.11053.15.camel@flake.lan.gerd-stolpmann.de>	<4833D7E8.8060502@doc.ic.ac.uk>	<4EDC5A3B-DFD2-47EA-9C22-F0B355D7BBC7@inria.fr>	<483BD594.7050504@doc.ic.ac.uk> <CF949D11-6284-4416-ADFE-80A3B4685BB8@inria.fr>
In-Reply-To: <CF949D11-6284-4416-ADFE-80A3B4685BB8@inria.fr>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-DCS-Interface-Port: 465
X-DCS-Auth-User: martinb (person)
X-Miltered: at discorde with ID 483D9992.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; abstraction:01 model:01 abstraction:01 broadcasting:98 caml-list:01 concurrency:04 passing:05 barrier:05 shared:06 shared:06 channel:06 memory:09 memory:09 doesn't:12 moreover:13 

>> But broadcasting is a form of message-passing too!
> 
> That wasn't my point.  My point was that there is no return channel.
> If you want to know when your write is done, you have to use a lock
> or a memory barrier.  Both are very expensive.

As I said, it's a matter of abstraction level. My point is:
you can model both abstraction levels with message passing.

Moreover, using shared memory doesn't magically make these
synchronisation issues go away. They remain.

Martin

