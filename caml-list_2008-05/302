Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id BDC25BBAF
	for <caml-list@yquem.inria.fr>; Mon, 26 May 2008 14:38:41 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AqgCAH9MOkjUnw7Vb2dsb2JhbACCM5AIAQwFAgQHEwOZMg
X-IronPort-AV: E=Sophos;i="4.27,542,1204498800"; 
   d="scan'208";a="13043488"
Received: from ptb-relay02.plus.net ([212.159.14.213])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 26 May 2008 14:38:41 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay02.plus.net with esmtp (Exim) id 1K0byK-0001UL-Dz
	for caml-list@yquem.inria.fr; Mon, 26 May 2008 13:38:40 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Question about type unification
Date: Mon, 26 May 2008 13:33:30 +0100
User-Agent: KMail/1.9.9
References: <20080526122204.GA6727@annexia.org>
In-Reply-To: <20080526122204.GA6727@annexia.org>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200805261333.30858.jon@ffconsultancy.com>
X-Plusnet-Relay: bfac17180f1dfd5e5c7acc0c21fb85ea
X-Spam: no; 0.00; unification:01 unification:01 unify:01 3.0:98 frog:98 wrote:01 opaque:01 caml-list:01 string:02 string:02 module:03 float:03 float:03 unit:03 types:05 

On Monday 26 May 2008 13:22:04 Richard Jones wrote:
> With this definition:
>
>   type 'a t = float
>
> Why is this allowed?
>
>   # ((3.0 : unit t) : string t) ;;
>   - : string t = 3.
>
> Note that unification is prevented if t is opaque, eg, hidden behind a
> module signature.

Because your accessible definition allows you to replace 'a t with float for 
any 'a, which allows you to replace both of your types with float and, 
therefore, they must unify.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

