Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 7BA39BBCA
	for <caml-list@yquem.inria.fr>; Mon, 12 May 2008 20:23:17 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AuIBAB8oKEjUnw7Wb2dsb2JhbACCMY9cAQwFAgQHEwOZdg
X-IronPort-AV: E=Sophos;i="4.27,474,1204498800"; 
   d="scan'208";a="12503859"
Received: from ptb-relay03.plus.net ([212.159.14.214])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 12 May 2008 20:23:17 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay03.plus.net with esmtp (Exim) id 1Jvcg7-0002qI-VZ
	for caml-list@yquem.inria.fr; Mon, 12 May 2008 19:23:16 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Re: Why OCaml sucks
Date: Mon, 12 May 2008 19:18:19 +0100
User-Agent: KMail/1.9.9
References: <200805090139.54870.jon@ffconsultancy.com> <4824953A.4000207@ericsson.com> <200805120931.04704.ober.14@osu.edu>
In-Reply-To: <200805120931.04704.ober.14@osu.edu>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200805121918.19726.jon@ffconsultancy.com>
X-Plusnet-Relay: 6f3f0020c792eb39e3820bfb12ec120c
X-Spam: no; 0.00; ocaml:01 ocaml:01 sells:98 frog:98 wrote:01 caml-list:01 fem:01 overly:02 numerical:03 numerical:03 benchmark:04 raises:05 multiply:06 packaged:08 i'm:09 

On Monday 12 May 2008 14:31:04 Kuba Ober wrote:
> I'm no F# fanboy; I use Ocaml exclusively for most of my numerical work
> (some FEM, all numerical methods courses I take), but as a language for
> packaged application development (bread-and-butter stuff that sells in
> boxes or via downloads) it's simply not there yet for me. F# would be more
> like it, if I weren't wary of .net platform lock-in. Give Mono a few more
> years and it won't be an issue anymore...

This raises the question of whether or not the Mono backend for OCaml might 
pay off? My impression is that Mono is going nowhere but I have been known to 
be overly skeptical in the past. ;-)

Speaking of which, it would also be interesting to compare the performance of 
OCaml with F#/Mono on that matrix-matrix multiply benchmark...

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

