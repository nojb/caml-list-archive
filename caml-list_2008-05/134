Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id ECC17BBCA
	for <caml-list@yquem.inria.fr>; Fri,  9 May 2008 19:51:39 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmgDAKYrJEjUnw6Eb2dsb2JhbACCMY9WAQwFAgQHEwOZMw
X-IronPort-AV: E=Sophos;i="4.27,461,1204498800"; 
   d="scan'208";a="12045821"
Received: from pih-relay05.plus.net ([212.159.14.132])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 09 May 2008 19:51:39 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay05.plus.net with esmtp (Exim) id 1JuWks-00061t-GS; Fri, 09 May 2008 18:51:38 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: "Ulf Wiger (TN/EAB)" <ulf.wiger@ericsson.com>
Subject: Re: [Caml-list] Re: Why OCaml sucks
Date: Fri, 9 May 2008 18:46:31 +0100
User-Agent: KMail/1.9.9
References: <200805090139.54870.jon@ffconsultancy.com> <200805090609.36123.jon@ffconsultancy.com> <48244B04.8020205@ericsson.com>
In-Reply-To: <48244B04.8020205@ericsson.com>
Cc: caml-list@yquem.inria.fr
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200805091846.32238.jon@ffconsultancy.com>
X-Plusnet-Relay: 368403f8c8397ce4aedef91ace3972af
X-Spam: no; 0.00; ocaml:01 parallelism:01 mutable:01 erlang:01 mutable:01 achieves:01 erlang:01 uniformly:01 frog:98 wrote:01 caml-list:01 data:02 data:02 structures:02 structures:02 

On Friday 09 May 2008 14:00:52 you wrote:
> Jon Harrop skrev:
> > . Parallelism is for performance and performance
> >
>  >   requires mutable data structures.
>
> I disagree. SMP Erlang has no mutable data structures,
> but achieves very good scalability anyway.

Scalability != performance. For CPU intensive tasks, Erlang is uniformly slow.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

