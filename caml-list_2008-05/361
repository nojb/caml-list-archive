Return-Path: <luca@dealfaro.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.3 required=5.0 tests=AWL,HTML_MESSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 4799DBBAF
	for <caml-list@yquem.inria.fr>; Sat, 31 May 2008 19:24:14 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AtIBAFQmQUjAXQImiGdsb2JhbACCODWPRQEBAQ8gml8
X-IronPort-AV: E=Sophos;i="4.27,571,1204498800"; 
   d="scan'208";a="13018129"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 31 May 2008 19:24:13 +0200
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id m4VHOD0m007808
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Sat, 31 May 2008 19:24:13 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AsMDAFQmQUjRVciuaWdsb2JhbACCODWPRQ0EAwQJDwWaXA
X-IronPort-AV: E=Sophos;i="4.27,571,1204498800"; 
   d="scan'208";a="11379688"
Received: from wf-out-1314.google.com ([209.85.200.174])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 31 May 2008 19:24:12 +0200
Received: by wf-out-1314.google.com with SMTP id 25so331465wfa.0
        for <caml-list@inria.fr>; Sat, 31 May 2008 10:24:10 -0700 (PDT)
Received: by 10.142.133.8 with SMTP id g8mr728177wfd.253.1212254650837;
        Sat, 31 May 2008 10:24:10 -0700 (PDT)
Received: by 10.143.165.3 with HTTP; Sat, 31 May 2008 10:24:10 -0700 (PDT)
Message-ID: <28fa90930805311024g282b232fyb99f253e437f69e8@mail.gmail.com>
Date: Sat, 31 May 2008 10:24:10 -0700
From: "Luca de Alfaro" <luca@dealfaro.org>
To: "Robert Fischer" <robert@fischerventure.com>
Subject: Re: [Caml-list] picking / marshaling to strings in ocaml-revision-stable way
Cc: caml-list@inria.fr
In-Reply-To: <48418421.5090601@fischerventure.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_2481_13145114.1212254650835"
References: <28fa90930805302343n18b98b17t72a22ea82539fc6f@mail.gmail.com>
	 <20080531.174314.107716495.garrigue@math.nagoya-u.ac.jp>
	 <b903a8570805310238u239c60c9sf85d2475e6635ad4@mail.gmail.com>
	 <28fa90930805310954w3089478bqfd8c3f821fff207e@mail.gmail.com>
	 <48418421.5090601@fischerventure.com>
X-Miltered: at discorde with ID 484189BD.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; marshaling:01 marshaling:01 wikipedia:01 ocaml:01 datatypes:01 ocamldebug:01 berke:01 durak:01 berke:01 durak:01 type-safe:01 segfault:01 segfault:01 hand-write:01 dependencies:01 

------=_Part_2481_13145114.1212254650835
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Is there a standard way to represent variant types in Json?
As in:
type edit = Ins of int * int | Del of int * int | Mov of int * int * int

Using a list of two elements the first the name of the variant, the second
the encoding of the variant itself?
Is this the standard way?

Luca

On Sat, May 31, 2008 at 10:00 AM, Robert Fischer <robert@fischerventure.com>
wrote:

> How far is the reach from the Jane St S-exp library from producing JSON?
>  I've not actually looked
> at it, but that'd be super nifty in the interoperation world.
>
> ~~ Robert.
>
> Luca de Alfaro wrote:
> > Thanks for this insight... I imagined the lack of robustness of
> Marshaling,
> > but without all the details you mentioned!... actually, I DO desperately
> > need speed, as I am processing TB's of Wikipedia data, but precisely
> because
> > the datasets are so large, I cannot afford having to recompute / convert
> > them often, and so I want a robust format. Furthermore, I think the
> > bottleneck for me is anyway the speed of mysql and the disk, not really
> the
> > small amount of time that natively compiled Ocaml would take for the
> > conversion (I have anyway to do more complex computation that converting
> a
> > few lists and datatypes to ascii, unfortunately).  Moreover, a plaintext
> > format greatly helps debugging; it also helps that I can read the same
> data
> > with other programming languages.
> >
> > Speaking of debugging, and said in passing, I cannot say enough how much
> I
> > LOVE the ability of ocamldebug of executing code backwards.  It is such a
> > revelation.  You simply go to the error, then back off a bit to see how
> you
> > got there.  But, this is a topic for another thread.
> >
> > Many thanks,
> >
> > Luca
> >
> >
> > On Sat, May 31, 2008 at 2:38 AM, Berke Durak <berke.durak@gmail.com>
> wrote:
> >
> >> I second Luca's suggestion to use Sexplib.  At the very least, use a
> >> plaintext format.
> >> Don't use Marshal for long-term storage of values.  Avoid it if you
> >> can.  Been there, done that.
> >> Why?
> >>
> >> (1) Not type-safe.  Translation: your program *wil segfault* and you
> >> won't know why.
> >> (2) Not human-readable nor editable.
> >> (3) Not future-proof.  What happens if you change your type
> >> definition?  Your program
> >> will segfault.  So you'll have to migrate your data.  But how?  You'll
> >> have to find
> >> the exact revision used to generate the binary data.  Good luck with
> >> that.  Did you put
> >> a revision number in your data?  Are you sure it was up-to-date?  Then
> >> you'll have to hand-write a converter that uses type declarations from
> >> the old and the new modules.
> >> I hope your dependencies are not too complex.  Not fun *at all*.
> >>
> >> However, there are some situations where Marshal is appropriate :
> >>
> >> (1) Your data is not acyclic, contains closures, or needs sharing to
> >> be compact enough.  Sexplib doesn't handle these.
> >> (2) The data won't live long anyway.  As in: you're doing IPC between
> >> known versions of Ocaml programs.
> >> (3) You desperately need speed.  As in: you're processing 200GB of
> >> Wikipedia data.
> >> Then I can understand.
> >> --
> >> Berke Durak
> >>
> >
> >
> > ------------------------------------------------------------------------
> >
> > _______________________________________________
> > Caml-list mailing list. Subscription management:
> > http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> > Archives: http://caml.inria.fr
> > Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> > Bug reports: http://caml.inria.fr/bin/caml-bugs
>
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>

------=_Part_2481_13145114.1212254650835
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Is there a standard way to represent variant types in Json? <br>As in: <br>type edit = Ins of int * int | Del of int * int | Mov of int * int * int<br><br>Using a list of two elements the first the name of the variant, the second the encoding of the variant itself? <br>
Is this the standard way?<br><br>Luca<br><br><div class="gmail_quote">On Sat, May 31, 2008 at 10:00 AM, Robert Fischer &lt;<a href="mailto:robert@fischerventure.com">robert@fischerventure.com</a>&gt; wrote:<br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
How far is the reach from the Jane St S-exp library from producing JSON? &nbsp;I&#39;ve not actually looked<br>
at it, but that&#39;d be super nifty in the interoperation world.<br>
<br>
~~ Robert.<br>
<div><div></div><div class="Wj3C7c"><br>
Luca de Alfaro wrote:<br>
&gt; Thanks for this insight... I imagined the lack of robustness of Marshaling,<br>
&gt; but without all the details you mentioned!... actually, I DO desperately<br>
&gt; need speed, as I am processing TB&#39;s of Wikipedia data, but precisely because<br>
&gt; the datasets are so large, I cannot afford having to recompute / convert<br>
&gt; them often, and so I want a robust format. Furthermore, I think the<br>
&gt; bottleneck for me is anyway the speed of mysql and the disk, not really the<br>
&gt; small amount of time that natively compiled Ocaml would take for the<br>
&gt; conversion (I have anyway to do more complex computation that converting a<br>
&gt; few lists and datatypes to ascii, unfortunately). &nbsp;Moreover, a plaintext<br>
&gt; format greatly helps debugging; it also helps that I can read the same data<br>
&gt; with other programming languages.<br>
&gt;<br>
&gt; Speaking of debugging, and said in passing, I cannot say enough how much I<br>
&gt; LOVE the ability of ocamldebug of executing code backwards. &nbsp;It is such a<br>
&gt; revelation. &nbsp;You simply go to the error, then back off a bit to see how you<br>
&gt; got there. &nbsp;But, this is a topic for another thread.<br>
&gt;<br>
&gt; Many thanks,<br>
&gt;<br>
&gt; Luca<br>
&gt;<br>
&gt;<br>
&gt; On Sat, May 31, 2008 at 2:38 AM, Berke Durak &lt;<a href="mailto:berke.durak@gmail.com">berke.durak@gmail.com</a>&gt; wrote:<br>
&gt;<br>
&gt;&gt; I second Luca&#39;s suggestion to use Sexplib. &nbsp;At the very least, use a<br>
&gt;&gt; plaintext format.<br>
&gt;&gt; Don&#39;t use Marshal for long-term storage of values. &nbsp;Avoid it if you<br>
&gt;&gt; can. &nbsp;Been there, done that.<br>
&gt;&gt; Why?<br>
&gt;&gt;<br>
&gt;&gt; (1) Not type-safe. &nbsp;Translation: your program *wil segfault* and you<br>
&gt;&gt; won&#39;t know why.<br>
&gt;&gt; (2) Not human-readable nor editable.<br>
&gt;&gt; (3) Not future-proof. &nbsp;What happens if you change your type<br>
&gt;&gt; definition? &nbsp;Your program<br>
&gt;&gt; will segfault. &nbsp;So you&#39;ll have to migrate your data. &nbsp;But how? &nbsp;You&#39;ll<br>
&gt;&gt; have to find<br>
&gt;&gt; the exact revision used to generate the binary data. &nbsp;Good luck with<br>
&gt;&gt; that. &nbsp;Did you put<br>
&gt;&gt; a revision number in your data? &nbsp;Are you sure it was up-to-date? &nbsp;Then<br>
&gt;&gt; you&#39;ll have to hand-write a converter that uses type declarations from<br>
&gt;&gt; the old and the new modules.<br>
&gt;&gt; I hope your dependencies are not too complex. &nbsp;Not fun *at all*.<br>
&gt;&gt;<br>
&gt;&gt; However, there are some situations where Marshal is appropriate :<br>
&gt;&gt;<br>
&gt;&gt; (1) Your data is not acyclic, contains closures, or needs sharing to<br>
&gt;&gt; be compact enough. &nbsp;Sexplib doesn&#39;t handle these.<br>
&gt;&gt; (2) The data won&#39;t live long anyway. &nbsp;As in: you&#39;re doing IPC between<br>
&gt;&gt; known versions of Ocaml programs.<br>
&gt;&gt; (3) You desperately need speed. &nbsp;As in: you&#39;re processing 200GB of<br>
&gt;&gt; Wikipedia data.<br>
&gt;&gt; Then I can understand.<br>
&gt;&gt; --<br>
&gt;&gt; Berke Durak<br>
&gt;&gt;<br>
&gt;<br>
&gt;<br>
</div></div>&gt; ------------------------------------------------------------------------<br>
&gt;<br>
&gt; _______________________________________________<br>
&gt; Caml-list mailing list. Subscription management:<br>
&gt; <a href="http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list" target="_blank">http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list</a><br>
&gt; Archives: <a href="http://caml.inria.fr" target="_blank">http://caml.inria.fr</a><br>
&gt; Beginner&#39;s list: <a href="http://groups.yahoo.com/group/ocaml_beginners" target="_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
&gt; Bug reports: <a href="http://caml.inria.fr/bin/caml-bugs" target="_blank">http://caml.inria.fr/bin/caml-bugs</a><br>
<br>
_______________________________________________<br>
Caml-list mailing list. Subscription management:<br>
<a href="http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list" target="_blank">http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list</a><br>
Archives: <a href="http://caml.inria.fr" target="_blank">http://caml.inria.fr</a><br>
Beginner&#39;s list: <a href="http://groups.yahoo.com/group/ocaml_beginners" target="_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href="http://caml.inria.fr/bin/caml-bugs" target="_blank">http://caml.inria.fr/bin/caml-bugs</a><br>
</blockquote></div><br>

------=_Part_2481_13145114.1212254650835--

