Return-Path: <bhurt@janestcapital.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL,HTML_MESSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 9BB40BBCA
	for <caml-list@yquem.inria.fr>; Wed,  7 May 2008 21:29:30 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjYCABagIUjAXQIniGdsb2JhbACCNzQoiyCDTwEBAQ8gm0o
X-IronPort-AV: E=Sophos;i="4.27,450,1204498800"; 
   d="scan'208,217";a="11967984"
Received: from concorde.inria.fr ([192.93.2.39])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 07 May 2008 21:29:30 +0200
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by concorde.inria.fr (8.13.6/8.13.6) with ESMTP id m47JTTrm002213
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Wed, 7 May 2008 21:29:30 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aq0AANufIUhCm3xro2dsb2JhbACCNzQoiyCDTwEBAQEBAQcFCAcRm0c
X-IronPort-AV: E=Sophos;i="4.27,450,1204498800"; 
   d="scan'208,217";a="12362627"
Received: from www.janestcapital.com (HELO smtp.janestcapital.com) ([66.155.124.107])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 07 May 2008 21:29:28 +0200
Received: from [172.25.129.161] [38.105.200.250] by janestcapital.com with ESMTP
  (SMTPD-9.10) id A31603C4; Wed, 07 May 2008 15:29:26 -0400
Message-ID: <48220316.7070000@janestcapital.com>
Date: Wed, 07 May 2008 15:29:26 -0400
From: Brian Hurt <bhurt@janestcapital.com>
User-Agent: Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7.2) Gecko/20040804 Netscape/7.2 (ax)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: Markus Mottl <markus.mottl@gmail.com>
Cc: Richard Jones <rich@annexia.org>, caml-list@inria.fr
Subject: Re: [Caml-list] ocamlc.opt tries to allocate 34 GB of RAM ... and
 fails
References: <20080507170149.GA21077@annexia.org>	<04bfd9a7e0fb697f30fc7376d28b8fa5@localhost>	<20080507183424.GA24624@annexia.org>	<f8560b80805071146w524c21c3n4a6f3732b2d8fc09@mail.gmail.com>	<20080507184957.GA25416@annexia.org> <f8560b80805071224v84b3a46ka9fa42071f0d9dd0@mail.gmail.com>
In-Reply-To: <f8560b80805071224v84b3a46ka9fa42071f0d9dd0@mail.gmail.com>
Content-Type: multipart/alternative;
 boundary="------------040705090000010707070001"
X-Miltered: at concorde with ID 48220319.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; ocamlc:01 markus:01 mottl:01 ocamlc:01 markus:01 ocaml:01 mottl:01 ocaml:01 wrote:01 wrote:01 heap:01 heap:01 caml-list:01 overly:02 overly:02 

This is a multi-part message in MIME format.
--------------040705090000010707070001
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit

Markus Mottl wrote:

>On Wed, May 7, 2008 at 2:49 PM, Richard Jones <rich@annexia.org> wrote:
>  
>
>> OK, but is there any case where ocamlc.opt should try to allocate
>> 34 _gigabytes_ (in the 2nd [length] param of mmap(2)).
>>    
>>
>
>Hm, this seems overly excessive.  I haven't been able to reproduce the
>problem on our Fedora 5 boxes (32 and 64bit) using any (including
>older) OCaml-compiler.
>
>Regards,
>Markus
>
>  
>
This is possible- if the ocaml heap was spread out over 2^48 bytes, then 
the old implementation would want to allocate 32G or more.  I'd be 
surprised, but this is possible...

Brian


--------------040705090000010707070001
Content-Type: text/html; charset=us-ascii
Content-Transfer-Encoding: 7bit

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
  <meta content="text/html;charset=ISO-8859-1" http-equiv="Content-Type">
  <title></title>
</head>
<body bgcolor="#ffffff" text="#000000">
Markus Mottl wrote:<br>
<blockquote
 cite="midf8560b80805071224v84b3a46ka9fa42071f0d9dd0@mail.gmail.com"
 type="cite">
  <pre wrap="">On Wed, May 7, 2008 at 2:49 PM, Richard Jones <a class="moz-txt-link-rfc2396E" href="mailto:rich@annexia.org">&lt;rich@annexia.org&gt;</a> wrote:
  </pre>
  <blockquote type="cite">
    <pre wrap=""> OK, but is there any case where ocamlc.opt should try to allocate
 34 _gigabytes_ (in the 2nd [length] param of mmap(2)).
    </pre>
  </blockquote>
  <pre wrap=""><!---->
Hm, this seems overly excessive.  I haven't been able to reproduce the
problem on our Fedora 5 boxes (32 and 64bit) using any (including
older) OCaml-compiler.

Regards,
Markus

  </pre>
</blockquote>
This is possible- if the ocaml heap was spread out over 2^48 bytes,
then the old implementation would want to allocate 32G or more.&nbsp; I'd be
surprised, but this is possible...<br>
<br>
Brian<br>
<br>
</body>
</html>

--------------040705090000010707070001--

