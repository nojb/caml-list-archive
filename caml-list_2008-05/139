Return-Path: <ulf.wiger@ericsson.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.3 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 86A28BBCA
	for <caml-list@yquem.inria.fr>; Fri,  9 May 2008 22:26:11 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhgBAK9QJEjBtPs+mmdsb2JhbACSBwEBAQEBBgcIBxEFmR8
X-IronPort-AV: E=Sophos;i="4.27,462,1204498800"; 
   d="scan'208";a="26012175"
Received: from mailgw4.ericsson.se ([193.180.251.62])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 09 May 2008 22:26:05 +0200
Received: from mailgw4.ericsson.se (unknown [127.0.0.1])
	by mailgw4.ericsson.se (Symantec Mail Security) with ESMTP id DD7DF204B6;
	Fri,  9 May 2008 22:26:04 +0200 (CEST)
X-AuditID: c1b4fb3e-ac194bb000004ec0-f4-4824b35c2f4c
Received: from esealmw126.eemea.ericsson.se (unknown [153.88.254.123])
	by mailgw4.ericsson.se (Symantec Mail Security) with ESMTP id C25B42042A;
	Fri,  9 May 2008 22:26:04 +0200 (CEST)
Received: from esealmw128.eemea.ericsson.se ([153.88.254.172]) by esealmw126.eemea.ericsson.se with Microsoft SMTPSVC(6.0.3790.1830);
	 Fri, 9 May 2008 22:26:04 +0200
Received: from ws73032.uab.ericsson.se ([130.100.73.32]) by esealmw128.eemea.ericsson.se with Microsoft SMTPSVC(6.0.3790.1830);
	 Fri, 9 May 2008 22:26:04 +0200
Received: from [153.88.16.56] by ws73032.uab.ericsson.se (8.11.7p2+Sun/client-1.3uab4)
	id m49KQ3a05912; Fri, 9 May 2008 22:26:03 +0200 (MEST)
Message-ID: <4824B35A.9070403@ericsson.com>
Date: Fri, 09 May 2008 22:26:02 +0200
From: "Ulf Wiger (TN/EAB)" <ulf.wiger@ericsson.com>
User-Agent: Thunderbird 2.0.0.14 (Windows/20080421)
MIME-Version: 1.0
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: not all functional languages lack parallelism
References: <200805090139.54870.jon@ffconsultancy.com> <4824448C.9030102@ericsson.com> <200805091910.08348.jon@ffconsultancy.com>
In-Reply-To: <200805091910.08348.jon@ffconsultancy.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-OriginalArrivalTime: 09 May 2008 20:26:04.0342 (UTC) FILETIME=[E7844560:01C8B212]
X-Brightmail-Tracker: AAAAAA==
X-Spam: no; 0.00; parallelism:01 parallelism:01 scalable:01 jocaml:01 erlang:01 statically:01 erlang:01 ocaml:01 ocaml:01 mutable:01 haskell:01 wrote:01 computation:01 data:02 structures:02 

Jon Harrop skrev:
> On Friday 09 May 2008 13:33:16 Ulf Wiger wrote:
>> Jon Harrop skrev:
>>> 1. Lack of Parallelism: Yes, this is already a complete show
>>>
>>  >    stopper. Exploiting multicores requires a scalable concurrent
>>  >    GC and message passing (like JoCaml) is not a substitute.
>>  >    Unfortunately, this is now true of all functional languages
>>  >    available for Linux, which is why we have now migrated
>>>    entirely to Windows and F#.
>> Dear Jon,
>>
>> I will keep reminding you that Erlang is a functional language
>> (just not a statically typed one). It has very lightweight
>> processes, concurrent schedulers on multicore, and per-process
>> GC. It scales very well on multicore.
> 
> I will keep reminding you at Erlang is not competitively 
 > performance for CPU-bound computation like number crunching.

There is a vast number of applications where performance
is not about number crunching. OCaml stands a good chance
of expanding into some of them, e.g. if it can grow into
providing better support for concurrency.

> The fact that it scales well on 
> distributed clusters for massively concurrent applications
 > is irrelevant: that has nothing to do with multicore
 > computing.

Who's been talking about distributed clusters?

Erlang does scale on distributed clusters, but the
link I provided was about scaling on multicore.
OCaml could too, but I don't think that insisting on
the use of mutable data structures is the way to go.

This may surprise you, but I don't subscribe to this list
in order to try to convert OCaml programmers to Erlang.
I think Erlang, OCaml and Haskell can benefit from
an exchange of ideas. I will continue to believe that at
least some members of the OCaml community share this view.

BR,
Ulf W

