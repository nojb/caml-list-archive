Return-Path: <berke.durak@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.7 required=5.0 tests=AWL,HTML_10_20,HTML_MESSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 7D36FBBCA
	for <caml-list@yquem.inria.fr>; Mon,  5 May 2008 11:55:10 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ag4EACF2HkjAXQImiGdsb2JhbACCNDePCgEBAQ8gk3+DYg
X-IronPort-AV: E=Sophos;i="4.27,437,1204498800"; 
   d="scan'208";a="10390207"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 05 May 2008 11:55:10 +0200
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id m459t6ee004586
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Mon, 5 May 2008 11:55:10 +0200
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjsEACF2HkjRVcbqdWdsb2JhbACCNDePCgEMAwQECQ+UAYNi
X-IronPort-AV: E=Sophos;i="4.27,437,1204498800"; 
   d="scan'208";a="11845550"
Received: from rv-out-0506.google.com ([209.85.198.234])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 05 May 2008 11:55:09 +0200
Received: by rv-out-0506.google.com with SMTP id k40so829957rvb.57
        for <caml-list@inria.fr>; Mon, 05 May 2008 02:55:08 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:mime-version:content-type;
        bh=k8pOeZdhTLbXR3QZTalWsz2zavpttzYw+Cev196Dvmk=;
        b=NUXXq0ZVHP7CzoGm+HZcN9NsZrzYw8g3oVfzfrRNNvPkCxo3Hk3I5+wqX11q4ISUFV9nGo07G+9auC/VBccYHYt6T8S0RSagRiSGMBq7lhGI6JUIEN9hJu0S7AURulrTAroUD1yuXw4apM3w9nnijLaQcsCrPfGjBkjQ0anboQU=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:cc:mime-version:content-type;
        b=AGg4neAeGxMHeKLcUzY8nLR/g32GSotC0KgUs59NA0pOX2uaEnJx3HFO7MSBEYfc5AigGYNhAyptbiNA8tfHkjMgpcA5/mP8l/9UMGzw3C0w+eUxrCD0CF/Vp7QAqr/CMq0pV7i4i3IDPVaYthIeUAFVx2UceziMHQ7JpIWMBwM=
Received: by 10.140.133.9 with SMTP id g9mr2706924rvd.235.1209981308348;
        Mon, 05 May 2008 02:55:08 -0700 (PDT)
Received: by 10.140.193.3 with HTTP; Mon, 5 May 2008 02:55:08 -0700 (PDT)
Message-ID: <b903a8570805050255q2534a6c8l4bcc4de38e050cba@mail.gmail.com>
Date: Mon, 5 May 2008 11:55:08 +0200
From: "Berke Durak" <berke.durak@gmail.com>
To: "Yoriyuki Yamagata" <yoriyuki.y@gmail.com>
Subject: ExtLib/Camomile UTF8
Cc: ocaml-lib-devel@lists.sourceforge.net,
	caml-list <caml-list@inria.fr>, "Richard Jones" <rich@annexia.org>
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_12771_23590364.1209981308341"
X-Miltered: at discorde with ID 481ED97A.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; berke:01 durak:01 berke:01 durak:01 camomile:01 uchar:01 camomile:01 uchar:01 functions:01 functions:01 diff:02 diff:02 output:02 output:02 module:03 
X-Attachments: cset="UTF-8" cset="UTF-8" type="application/octet-stream" name="extlib-patch" name="extlib-patch" 

------=_Part_12771_23590364.1209981308341
Content-Type: multipart/alternative; 
	boundary="----=_Part_12772_16372138.1209981308341"

------=_Part_12772_16372138.1209981308341
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hello,

A few months ago I submitted a small patch to ExtLib to the UTF8 module,
adding three small but important functions

  - substring
  - output_uchar
  - eof

The patch hasn't been integrated in the ExtLib SVN (I've checked the trunk
and tags on the SVN at code.google.com).
As it's actually a patch against Camomile, (at the time I didn't know at the
time that UTF8 was taken from Camomile),
Richard Jones suggested that this is where the patch should go.

Could you provide a substring function or integrate the patch into
Camomile?  Also maybe you could host Camomile at
forge.ocamlcore.org...

Attached is the diff against ExtLib 1.5.
-- 
Berke Durak

------=_Part_12772_16372138.1209981308341
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

Hello,<br><br>A few months ago I submitted a small patch to ExtLib to the UTF8 module, adding three small but important functions<br><br>&nbsp; - substring<br>&nbsp; - output_uchar<br>&nbsp; - eof<br><br>The patch hasn&#39;t been integrated in the ExtLib SVN (I&#39;ve checked the trunk and tags on the SVN at <a href="http://code.google.com" target="_blank">code.google.com</a>).<br>
As it&#39;s actually a patch against Camomile, (at the time I didn&#39;t know at the time that UTF8 was taken from Camomile),<br>Richard Jones suggested that this is where the patch should go.<br><br>Could you provide a substring function or integrate the patch into Camomile?&nbsp; Also maybe you could host Camomile at<br>
forge.ocamlcore.org...<br><br>Attached is the diff against ExtLib 1.5.<br>-- <br>Berke Durak<br><br>

------=_Part_12772_16372138.1209981308341--

------=_Part_12771_23590364.1209981308341
Content-Type: application/octet-stream; name=extlib-patch
Content-Transfer-Encoding: base64
X-Attachment-Id: f_ffuv52gm0
Content-Disposition: attachment; filename=extlib-patch

SW5kZXg6IHRlc3QvdGVzdF9iZF9VVEY4XzAwMS5tbAo9PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ci0tLSB0ZXN0L3Rlc3Rf
YmRfVVRGOF8wMDEubWwJKHJldmlzaW9uIDApCisrKyB0ZXN0L3Rlc3RfYmRfVVRGOF8wMDEubWwJ
KHJldmlzaW9uIDApCkBAIC0wLDAgKzEsMTE1IEBACitsZXQgc3Vic3RyaW5nX2lucHV0cyA9Citb
CisgIFt8CisgICAgIiI7CisgICAgIuKfvyI7CisgICAgIuKfv+GJhCI7CisgICAgIuKfv+GJhMWf
IjsKKyAgICAi4p+/4YmExZ/pvp8iOworICAgICLin7/hiYTFn+m+n8KvIjsKKyAgfF07CisgIFt8
CisgICAgIiI7CisgICAgIsOnIjsKKyAgICAiw6dlIjsKKyAgICAiw6dlayI7CisgICAgIsOnZWtv
IjsKKyAgICAiw6dla29zIjsKKyAgICAiw6dla29zbCI7CisgICAgIsOnZWtvc2xvIjsKKyAgICAi
w6dla29zbG92IjsKKyAgICAiw6dla29zbG92YSI7CisgICAgIsOnZWtvc2xvdmFrIjsKKyAgICAi
w6dla29zbG92YWt5IjsKKyAgICAiw6dla29zbG92YWt5YSI7CisgICAgIsOnZWtvc2xvdmFreWFs
IjsKKyAgICAiw6dla29zbG92YWt5YWxhIjsKKyAgICAiw6dla29zbG92YWt5YWxhxZ8iOworICAg
ICLDp2Vrb3Nsb3Zha3lhbGHFn3QiOworICAgICLDp2Vrb3Nsb3Zha3lhbGHFn3TEsSI7CisgICAg
IsOnZWtvc2xvdmFreWFsYcWfdMSxciI7CisgICAgIsOnZWtvc2xvdmFreWFsYcWfdMSxcmEiOwor
ICAgICLDp2Vrb3Nsb3Zha3lhbGHFn3TEsXJhbSI7CisgICAgIsOnZWtvc2xvdmFreWFsYcWfdMSx
cmFtYSI7CisgICAgIsOnZWtvc2xvdmFreWFsYcWfdMSxcmFtYWQiOworICAgICLDp2Vrb3Nsb3Zh
a3lhbGHFn3TEsXJhbWFkxLEiOworICAgICLDp2Vrb3Nsb3Zha3lhbGHFn3TEsXJhbWFkxLFrIjsK
KyAgICAiw6dla29zbG92YWt5YWxhxZ90xLFyYW1hZMSxa2wiOworICAgICLDp2Vrb3Nsb3Zha3lh
bGHFn3TEsXJhbWFkxLFrbGEiOworICAgICLDp2Vrb3Nsb3Zha3lhbGHFn3TEsXJhbWFkxLFrbGFy
IjsKKyAgICAiw6dla29zbG92YWt5YWxhxZ90xLFyYW1hZMSxa2xhcsSxIjsKKyAgICAiw6dla29z
bG92YWt5YWxhxZ90xLFyYW1hZMSxa2xhcsSxbSI7CisgICAgIsOnZWtvc2xvdmFreWFsYcWfdMSx
cmFtYWTEsWtsYXLEsW3EsSI7CisgICAgIsOnZWtvc2xvdmFreWFsYcWfdMSxcmFtYWTEsWtsYXLE
sW3EsXoiOworICAgICLDp2Vrb3Nsb3Zha3lhbGHFn3TEsXJhbWFkxLFrbGFyxLFtxLF6ZCI7Cisg
ICAgIsOnZWtvc2xvdmFreWFsYcWfdMSxcmFtYWTEsWtsYXLEsW3EsXpkYSI7CisgICAgIsOnZWtv
c2xvdmFreWFsYcWfdMSxcmFtYWTEsWtsYXLEsW3EsXpkYW4iOworICAgICLDp2Vrb3Nsb3Zha3lh
bGHFn3TEsXJhbWFkxLFrbGFyxLFtxLF6ZGFubSI7CisgICAgIsOnZWtvc2xvdmFreWFsYcWfdMSx
cmFtYWTEsWtsYXLEsW3EsXpkYW5txLEiOworICAgICLDp2Vrb3Nsb3Zha3lhbGHFn3TEsXJhbWFk
xLFrbGFyxLFtxLF6ZGFubcSxcyI7CisgICAgIsOnZWtvc2xvdmFreWFsYcWfdMSxcmFtYWTEsWts
YXLEsW3EsXpkYW5txLFzxLEiOworICAgICLDp2Vrb3Nsb3Zha3lhbGHFn3TEsXJhbWFkxLFrbGFy
xLFtxLF6ZGFubcSxc8SxbiI7CisgICAgIsOnZWtvc2xvdmFreWFsYcWfdMSxcmFtYWTEsWtsYXLE
sW3EsXpkYW5txLFzxLFuxLEiOworICAgICLDp2Vrb3Nsb3Zha3lhbGHFn3TEsXJhbWFkxLFrbGFy
xLFtxLF6ZGFubcSxc8SxbsSxeiI7CisgIHxdCitdCisKK2xldCB0ZXN0X3N1YnN0cmluZyAoKSA9
CisgIGxldCB0ZXN0IGEgPQorICAgIGxldCBtID0gQXJyYXkubGVuZ3RoIGEgLSAxIGluCisgICAg
bGV0IHYgPSBhLihtKSBpbgorICAgIGFzc2VydChVVEY4Lmxlbmd0aCB2ID0gbSk7CisgICAgZm9y
IGkgPSAwIHRvIG0gZG8KKyAgICAgIGFzc2VydChhLihpKSA9IFVURjguc3Vic3RyaW5nIHYgMCBp
KTsKKyAgICBkb25lOworICAgIGZvciBpID0gMCB0byBtIC0gMSBkbworICAgICAgZm9yIGogPSBp
IHRvIG0gLSAxIGRvCisgICAgICAgIGxldCB1ID0gVVRGOC5zdWJzdHJpbmcgdiBpIChqIC0gaSAr
IDEpIGluCisgICAgICAgIFVURjgudmFsaWRhdGUgdQorICAgICAgZG9uZQorICAgIGRvbmUKKyAg
aW4KKyAgTGlzdC5pdGVyIHRlc3Qgc3Vic3RyaW5nX2lucHV0cworCitsZXQgc3BsaXRfaW5wdXRz
ID0gWworICAiIiwgW107CisgICJkZSBuZSBtZSIsIFsiZGUiOyJuZSI7Im1lIl07CisgICJ5b8Sf
dXJ0dW4gdGFkxLEgxLFsxLFrIGlrZW4gcGVrIGfDvHplbCBvbG1heiIsIFsieW/En3VydHVuIjsi
dGFkxLEiOyLEsWzEsWsiOyJpa2VuIjsicGVrIjsiZ8O8emVsIjsib2xtYXoiXQorXQorCitsZXQg
c3BsaXRfYXQgZiB1ID0KKyAgbGV0IG0gPSBVVEY4LmVvZiB1IGluCisgIGxldCBiID0gVVRGOC5C
dWYuY3JlYXRlIG0gaW4KKyAgbGV0IHJlYyBsb29wMCByIGkgPQorICAgIGlmIGkgPj0gbSB0aGVu
CisgICAgICBMaXN0LnJldiByCisgICAgZWxzZQorICAgICAgaWYgZiAoVVRGOC5sb29rIHUgaSkg
dGhlbgorICAgICAgICBsb29wMCByIChVVEY4Lm5leHQgdSBpKQorICAgICAgZWxzZQorICAgICAg
ICBsb29wMSByIGkKKyAgYW5kIGxvb3AxIHIgaSA9CisgICAgaWYgaSA9IG0gfHwgZiAoVVRGOC5s
b29rIHUgaSkgdGhlbgorICAgICAgYmVnaW4KKyAgICAgICAgbGV0IHggPSBVVEY4LkJ1Zi5jb250
ZW50cyBiIGluCisgICAgICAgIFVURjguQnVmLmNsZWFyIGI7CisgICAgICAgIGxvb3AwICh4Ojpy
KSAoVVRGOC5uZXh0IHUgaSkKKyAgICAgIGVuZAorICAgIGVsc2UKKyAgICAgIGJlZ2luCisgICAg
ICAgIFVURjguQnVmLmFkZF9jaGFyIGIgKFVURjgubG9vayB1IGkpOworICAgICAgICBsb29wMSBy
IChVVEY4Lm5leHQgdSBpKQorICAgICAgZW5kCisgIGluCisgIGxvb3AwIFtdIDAKKworbGV0IHRl
c3Rfc3BsaXQgKCkgPQorICBMaXN0Lml0ZXIKKyAgICAoZnVuICh1LCB1bCkgLT4KKyAgICAgIGxl
dCBzcGFjZSA9IFVDaGFyLm9mX2NoYXIgJyAnIGluCisgICAgICBhc3NlcnQodWwgPSBzcGxpdF9h
dCAoKD0pIHNwYWNlKSB1KSkKKyAgICBzcGxpdF9pbnB1dHMKKworbGV0IHRlc3QgKCkgPQorICBV
dGlsLnJ1bl90ZXN0IH50ZXN0X25hbWU6ImJkX1VURi5zdWJzdHJpbmciIHRlc3Rfc3Vic3RyaW5n
OworICBVdGlsLnJ1bl90ZXN0IH50ZXN0X25hbWU6ImJkX1VURi5zcGxpdCIgdGVzdF9zcGxpdApJ
bmRleDogZXh0bGliL3VURjgubWxpCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGV4dGxpYi91VEY4Lm1saQkocmV2
aXNpb24gMzgxKQorKysgZXh0bGliL3VURjgubWxpCSh3b3JraW5nIGNvcHkpCkBAIC02MiwxMCAr
NjIsMTggQEAKICgqKiBUaGUgcG9zaXRpb24gb2YgdGhlIGhlYWQgb2YgdGhlIGxhc3QgVW5pY29k
ZSBjaGFyYWN0ZXIuICopCiB2YWwgbGFzdCA6IHQgLT4gaW5kZXgKIAorKCoqIFRoZSAoaW52YWxp
ZCkgcG9zaXRpb24gb2YgdGhlIGhlYWQgYWZ0ZXIgdGhlIGxhc3QgVW5pY29kZSBjaGFyYWN0ZXIu
CisgICAgW25leHQgKGxhc3QgdSBpKSA9IGVvZiBpXSAqKQordmFsIGVvZiA6IHQgLT4gaW5kZXgK
KwogKCoqIFtsb29rIHMgaV0KICAgIHJldHVybnMgdGhlIFVuaWNvZGUgY2hhcmFjdGVyIG9mIHRo
ZSBsb2NhdGlvbiBbaV0gaW4gdGhlIHN0cmluZyBbc10uICopCiB2YWwgbG9vayA6IHQgLT4gaW5k
ZXggLT4gdWNoYXIKIAorKCoqIFtzdWJzdHJpbmcgcyBpIG1dIHJldHVybnMgdGhlIHN1YnN0cmlu
ZyBtYWRlIG9mIHRoZSBVbmljb2RlIGxvY2F0aW9ucyBbaV0gdG8gW2kgKyBtIC0gMV0gaW5jbHVz
aXZlLgorICAgVGhlIHN0cmluZyBpcyBhbHdheXMgY29waWVkICopCit2YWwgc3Vic3RyaW5nIDog
dCAtPiBpbnQgLT4gaW50IC0+IHQKKwogKCoqIFtvdXRfb2ZfcmFuZ2UgcyBpXQogICAgdGVzdHMg
d2hldGhlciBbaV0gaXMgYSBwb3NpdGlvbiBpbnNpZGUgb2YgW3NdLiAqKQogdmFsIG91dF9vZl9y
YW5nZSA6IHQgLT4gaW5kZXggLT4gYm9vbApAQCAtMTEzLDYgKzEyMSw5IEBACiAgICBhIG5lZ2F0
aXZlIGludGVnZXIgaWYgW3MxXSA8IFtzMl0uICopCiB2YWwgY29tcGFyZSA6IHQgLT4gdCAtPiBp
bnQKIAorKCoqIE91dHB1dCB0aGUgZ2l2ZW4gY2hhciBpbiBVVEY4IGZvcm1hdCBvdmVyIGEgYmlu
YXJ5IGNoYW5uZWwgKikKK3ZhbCBvdXRwdXRfdWNoYXIgOiBvdXRfY2hhbm5lbCAtPiB1Y2hhciAt
PiB1bml0CisKICgqKiBCdWZmZXIgbW9kdWxlIGZvciBVVEYtOCBzdHJpbmdzICopCiBtb2R1bGUg
QnVmIDogc2lnCiAgICgqKiBCdWZmZXJzIGZvciBVVEYtOCBzdHJpbmdzLiAqKSAKSW5kZXg6IGV4
dGxpYi91VEY4Lm1sCj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT0KLS0tIGV4dGxpYi91VEY4Lm1sCShyZXZpc2lvbiAzODEp
CisrKyBleHRsaWIvdVRGOC5tbAkod29ya2luZyBjb3B5KQpAQCAtNzYsNiArNzYsNyBAQAogICBz
ZWFyY2hfaGVhZCBzIChpICsgMSkKIAogbGV0IG5leHQgcyBpID0gCisgIGlmIGkgPj0gU3RyaW5n
Lmxlbmd0aCBzIHRoZW4gaSBlbHNlCiAgIGxldCBuID0gQ2hhci5jb2RlIHMuW2ldIGluCiAgIGlm
IG4gPCAweDgwIHRoZW4gaSArIDEgZWxzZQogICBpZiBuIDwgMHhjMCB0aGVuIHNlYXJjaF9oZWFk
IHMgKGkgKyAxKSBlbHNlCkBAIC0xMDgsMTQgKzEwOSw1NiBAQAogCiBsZXQgbnRoIHMgbiA9IG50
aF9hdXggcyAwIG4KIAorbGV0IHN1YnN0cmluZyBzIGkgbiA9CisgIGxldCBqID0gbnRoIHMgaSBp
bgorICBsZXQgaicgPSAobnRoX2F1eCBzIGogbikgLSAxIGluCisgIFN0cmluZy5zdWIgcyBqIChq
JyAtIGogKyAxKQorCiBsZXQgbGFzdCBzID0gc2VhcmNoX2hlYWRfYmFja3dhcmQgcyAoU3RyaW5n
Lmxlbmd0aCBzIC0gMSkKIAorbGV0IGVvZiBzID0gU3RyaW5nLmxlbmd0aCBzCisKIGxldCBvdXRf
b2ZfcmFuZ2UgcyBpID0gaSA8IDAgfHwgaSA+PSBTdHJpbmcubGVuZ3RoIHMKIAogbGV0IGNvbXBh
cmVfaW5kZXggXyBpIGogPSBpIC0gagogCiBsZXQgZ2V0IHMgbiA9IGxvb2sgcyAobnRoIHMgbikK
IAorbGV0IGdlbmVyaWNfb3V0cHV0X3VjaGFyIGYgb2MgdSA9CisgIGxldCBtYXNxID0gMGIxMTEx
MTEgaW4KKyAgbGV0IGYgPSBmIG9jIGluCisgIGxldCBrID0gaW50X29mX3VjaGFyIHUgaW4KKyAg
aWYgayA8IDAgfHwgayA+PSAweDQwMDAwMDAgdGhlbiBiZWdpbgorICAgIGYgKDB4ZmMgKyAoayBs
c3IgMzApKTsKKyAgICBmICgweDgwIGxvciAoKGsgbHNyIDI0KSBsYW5kIG1hc3EpKTsgCisgICAg
ZiAoMHg4MCBsb3IgKChrIGxzciAxOCkgbGFuZCBtYXNxKSk7CisgICAgZiAoMHg4MCBsb3IgKChr
IGxzciAxMikgbGFuZCBtYXNxKSk7CisgICAgZiAoMHg4MCBsb3IgKChrIGxzciA2KSBsYW5kIG1h
c3EpKTsKKyAgICBmICgweDgwIGxvciAoayBsYW5kIG1hc3EpKQorICBlbmQgZWxzZSBpZiBrIDw9
IDB4N2YgdGhlbgorICAgIGYgaworICBlbHNlIGlmIGsgPD0gMHg3ZmYgdGhlbiBiZWdpbgorICAg
IGYgKDB4YzAgbG9yIChrIGxzciA2KSk7CisgICAgZiAoMHg4MCBsb3IgKGsgbGFuZCBtYXNxKSkK
KyAgZW5kIGVsc2UgaWYgayA8PSAweGZmZmYgdGhlbiBiZWdpbgorICAgIGYgKDB4ZTAgbG9yIChr
IGxzciAxMikpOworICAgIGYgKDB4ODAgbG9yICgoayBsc3IgNikgbGFuZCBtYXNxKSk7CisgICAg
ZiAoMHg4MCBsb3IgKGsgbGFuZCBtYXNxKSkKKyAgZW5kIGVsc2UgaWYgayA8PSAweDFmZmZmZiB0
aGVuIGJlZ2luCisgICAgZiAoMHhmMCArIChrIGxzciAxOCkpOworICAgIGYgKDB4ODAgbG9yICgo
ayBsc3IgMTIpIGxhbmQgbWFzcSkpOworICAgIGYgKDB4ODAgbG9yICgoayBsc3IgNikgbGFuZCBt
YXNxKSk7CisgICAgZiAoMHg4MCBsb3IgKGsgbGFuZCBtYXNxKSkKKyAgZW5kIGVsc2UgYmVnaW4K
KyAgICBmICgweGY4ICsgKGsgbHNyIDI0KSk7CisgICAgZiAoMHg4MCBsb3IgKChrIGxzciAxOCkg
bGFuZCBtYXNxKSk7CisgICAgZiAoMHg4MCBsb3IgKChrIGxzciAxMikgbGFuZCBtYXNxKSk7Cisg
ICAgZiAoMHg4MCBsb3IgKChrIGxzciA2KSBsYW5kIG1hc3EpKTsKKyAgICBmICgweDgwIGxvciAo
ayBsYW5kIG1hc3EpKQorICBlbmQgCisKK2xldCBvdXRwdXRfdWNoYXIgb2MgdSA9IGdlbmVyaWNf
b3V0cHV0X3VjaGFyIG91dHB1dF9ieXRlIG9jIHUKKwogbGV0IGFkZF91Y2hhciBidWYgdSA9CiAg
IGxldCBtYXNxID0gMGIxMTExMTEgaW4KICAgbGV0IGsgPSBpbnRfb2ZfdWNoYXIgdSBpbgo=
------=_Part_12771_23590364.1209981308341--

