Return-Path: <David.Teller@univ-orleans.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id DEC13BBCA
	for <caml-list@yquem.inria.fr>; Fri,  9 May 2008 15:00:21 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgsBAE7nI0jCpx6womdsb2JhbACSBgEBAQEBAQcFBgkRmHQ
X-IronPort-AV: E=Sophos;i="4.27,460,1204498800"; 
   d="scan'208";a="25999651"
Received: from smtpmin.univ-orleans.fr (HELO min.univ-orleans.fr) ([194.167.30.176])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 09 May 2008 15:00:21 +0200
Received: from smtps.univ-orleans.fr (localhost [127.0.0.1])
	by min.univ-orleans.fr (Postfix) with ESMTP
	id 89D5212B402; Fri,  9 May 2008 15:00:21 +0200 (CEST)
Received: from [192.168.0.12] (ras75-4-82-235-58-110.fbx.proxad.net [82.235.58.110])
	by smtps.univ-orleans.fr (Postfix) with ESMTP id F395A36E5B;
	Fri,  9 May 2008 15:00:22 +0200 (CEST)
Subject: Re: [Caml-list] Re: Why OCaml rocks
From: David Teller <David.Teller@univ-orleans.fr>
To: Ralph Douglass <ralph@grayskies.net>
Cc: Vincent Hanquez <tab@snarc.org>, caml-list@yquem.inria.fr
In-Reply-To: <71767b800805090437t3893e0c0w2d966054ac4f2a95@mail.gmail.com>
References: <200805090139.54870.jon@ffconsultancy.com>
	 <20080509094516.GA12893@snarc.org>
	 <71767b800805090437t3893e0c0w2d966054ac4f2a95@mail.gmail.com>
Content-Type: text/plain
Date: Fri, 09 May 2008 15:02:03 +0200
Message-Id: <1210338123.6399.30.camel@Blefuscu>
Mime-Version: 1.0
X-Mailer: Evolution 2.12.1 
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; ocaml:01 univ-orleans:01 submodule:01 redefines:01 monadic:01 cheers:01 exn:01 univ-orleans:01 lifo:01 liquidations:98 wrote:01 exception:01 caml-list:01 functions:01 functions:01 

For information, Batteries Included offers for each module an
ExceptionLess submodule, which redefines exception-throwing functions as
returning either an 'a option or, for more details, an ('a, 'b) result.

A Result module complements this with monadic operations for whoever is
interested.

Cheers,
 David


On Fri, 2008-05-09 at 07:37 -0400, Ralph Douglass wrote:
> Not_found and Failure _ can be a bit annoying to watch for, so I
> suggest using Core.  The default behavior for most functions is to
> return an option instead of raising an exception.  There are _exn
> versions of the functions if you want exceptions.

-- 
David Teller
 Security of Distributed Systems
  http://www.univ-orleans.fr/lifo/Members/David.Teller
 Angry researcher: French Universities need reforms, but the LRU act brings liquidations. 

