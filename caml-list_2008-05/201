Return-Path: <baguasquirrel@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=HTML_MESSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 73B4DBBCA
	for <caml-list@yquem.inria.fr>; Mon, 12 May 2008 21:18:58 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AjQDAMc0KEjRVYa7d2dsb2JhbACCNzSPIgEMAwQECREDlTyEQg
X-IronPort-AV: E=Sophos;i="4.27,475,1204498800"; 
   d="scan'208";a="26088185"
Received: from mu-out-0910.google.com ([209.85.134.187])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 12 May 2008 21:18:58 +0200
Received: by mu-out-0910.google.com with SMTP id i2so1654443mue.3
        for <caml-list@yquem.inria.fr>; Mon, 12 May 2008 12:18:57 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        bh=+YIGp3bIlf4A7TA3y6ROj8k7ZeBToKlp+A49jISbaVU=;
        b=kmyE6L2kBuyzm0bm2fNt1wQIiYVXDjOA+KKMQJ2TV8/wluJyU/6k6FjWdHPxiDGvUMO0puDNHLBQL0iH4Fg6vkOhpjGJGdAUbfO0jIQC84PJKYMLlZRks18/1wOAHcMG3+iG4/uFlvotbTIrWJ59tPWhCgUM3C7wS8MJfZXykrM=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=DIuovraqRKtUfdXo9tBjOw9lbV42RSwoWj30NbyLaMY27j8s62JcsaCGQT0W5priV+n2KKgBoxX0tom6hI/FT76HdVKD9hjW2e1zX7p7ZZAPqo6ONwnDr8YIrdR84Qq4o2ci7/q/8Su5C1Mto37ezdTf4rWUwaf0B89jcm3GXAs=
Received: by 10.150.78.41 with SMTP id a41mr8672676ybb.182.1210619935363;
        Mon, 12 May 2008 12:18:55 -0700 (PDT)
Received: by 10.150.190.7 with HTTP; Mon, 12 May 2008 12:18:55 -0700 (PDT)
Message-ID: <74cabd9e0805121218r75725b23g906282a09dfd00d3@mail.gmail.com>
Date: Mon, 12 May 2008 12:18:55 -0700
From: "Arthur Chan" <baguasquirrel@gmail.com>
To: "Kuba Ober" <ober.14@osu.edu>
Subject: Re: [Caml-list] Re: Why OCaml sucks
Cc: caml-list@yquem.inria.fr
In-Reply-To: <200805120901.54129.ober.14@osu.edu>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_2362_10009456.1210619935233"
References: <200805090139.54870.jon@ffconsultancy.com>
	 <200805120901.54129.ober.14@osu.edu>
X-Spam: no; 0.00; ocaml:01 ocaml:01 cheers:01 beginner's:01 bug:01 cheers:01 beginner's:01 bug:01 pet:98 domination:98 pet:98 domination:98 beginners:01 beginners:01 caml-list:01 
X-Attachments: cset="UTF-8" cset="UTF-8" 

------=_Part_2362_10009456.1210619935233
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

> Yet, if you look at things in the light of "optimization is
> depessimization",
> you'd much rather have easier to read code, than code which is ugly
> because
> you preoptimized it by hand. This is why, for me, Ocaml has a long way to
> go
> to make it useful for run-of-the-mill production code. My pet peev is
> performance penalty paid for writing in functional style where it actually
> makes sense -- say passing an arithmetic operator to a map-style function.
>

What do you mean by this?  What language would not incur this kind of
performance hit?  Is F# able to optimize this out or were you referring to
something else?



>
> Cheers, Kuba
>
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>



-- 
-----------------------------------------------------------------------
(\__/)
(='.'=)This is Bunny. Copy and paste Bunny into your
(")_(")signature to help him gain world domination.
------------------------------------------------------------------------

------=_Part_2362_10009456.1210619935233
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

<br><div class="gmail_quote"><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">Yet, if you look at things in the light of &quot;optimization is depessimization&quot;,<br>

you&#39;d much rather have easier to read code, than code which is ugly because<br>
you preoptimized it by hand. This is why, for me, Ocaml has a long way to go<br>
to make it useful for run-of-the-mill production code. My pet peev is<br>
performance penalty paid for writing in functional style where it actually<br>
makes sense -- say passing an arithmetic operator to a map-style function.<br>
</blockquote><div><br>What do you mean by this?&nbsp; What language would not incur this kind of performance hit?&nbsp; Is F# able to optimize this out or were you referring to something else?<br><br>&nbsp;</div><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<br>
Cheers, Kuba<br>
<div><div></div><div class="Wj3C7c"><br>
_______________________________________________<br>
Caml-list mailing list. Subscription management:<br>
<a href="http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list" target="_blank">http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list</a><br>
Archives: <a href="http://caml.inria.fr" target="_blank">http://caml.inria.fr</a><br>
Beginner&#39;s list: <a href="http://groups.yahoo.com/group/ocaml_beginners" target="_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href="http://caml.inria.fr/bin/caml-bugs" target="_blank">http://caml.inria.fr/bin/caml-bugs</a><br>
</div></div></blockquote></div><br><br clear="all"><br>-- <br>-----------------------------------------------------------------------<br> (\__/)<br> (=&#39;.&#39;=)This is Bunny. Copy and paste Bunny into your<br> (&quot;)_(&quot;)signature to help him gain world domination.<br>
------------------------------------------------------------------------

------=_Part_2362_10009456.1210619935233--

