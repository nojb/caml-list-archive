Return-Path: <tab@snarc.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 5F72CBBCA
	for <caml-list@yquem.inria.fr>; Fri,  9 May 2008 11:51:54 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAOq6I0jUVZsV/2dsb2JhbACrLA
X-IronPort-AV: E=Sophos;i="4.27,460,1204498800"; 
   d="scan'208";a="10543188"
Received: from cerberus.snarc.org ([212.85.155.21])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 09 May 2008 11:51:54 +0200
Received: by cerberus.snarc.org (Postfix, from userid 1000)
	id 40916129DD; Fri,  9 May 2008 10:45:15 +0100 (BST)
Date: Fri, 9 May 2008 10:45:16 +0100
From: Vincent Hanquez <tab@snarc.org>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Re: Why OCaml sucks
Message-ID: <20080509094516.GA12893@snarc.org>
References: <200805090139.54870.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <200805090139.54870.jon@ffconsultancy.com>
X-Warning: Email may contain unsmilyfied humor and/or satire.
User-Agent: Mutt/1.5.17+20080114 (2008-01-14)
X-Spam: no; 0.00; ocaml:01 0100,:01 ocaml:01 parallelism:01 parallelism:01 hashtbl:01 ocaml's:01 advocates:01 haskell:01 haskell:01 blog:98 blog:98 turf:98 cave:98 imho:01 

On Fri, May 09, 2008 at 01:39:54AM +0100, Jon Harrop wrote:
> 
> Brian Hurt recently published the following blog post "Why OCaml sucks":
> 
>   http://enfranchisedmind.com/blog/2008/05/07/why-ocaml-sucks/
> 
> I think it is interesting to discuss which aspects of OCaml can be improved 
> upon and how but I disagree with some of his points. I'll address each of the 
> original points in turn:

yeah, a new troll post (!)

> 1. Lack of Parallelism: Yes, this is already a complete show stopper. 

no it's not. it's in your fantasy world. lots of applications doesn't
(or marginally) benefits from parallelism, and that your specific turf
would benefit from them, is not a good reason to impose their drawbacks
on everybody else.

> 5. Strings: pushing unicode throughout a general purpose language is a 
> mistake, IMHO. This is why languages like Java and C# are so slow.

unicode string should not be the default string, but unicode string need
to be available as a first class citizen. again, ocaml is not about doing
raytracer in opengl only.

> 7. Not_found: I like this, and Exit and Invalid_argument. Brian's point that 
> the name of this exception does not convey its source is fallacious: that's 
> what exception traces are for.

exception traces are *not* available in long running program (daemon).
and having a Not_found crippling somewhere is just plain annoying.

even having something like a List.Not_found/Hashtbl.Not_found would make
thing a bit easier.

> 8. Exceptions: I love OCaml's extremely fast exception handling (6x faster 
> than C++, 30x faster than Java and 600x faster than C#/F#!). I hate 
> the "exceptions are for exceptional circumstances" line promoted by the 
> advocates of any language implementation with cripplingly-slow exception 
> handlers.

exceptions are for exceptional circumstances. using them as a fancy goto
mechanism is just plain stupid and really bad programming style.

> 9. Deforestation: Brian says "Haskell has introduced a very interesting and 
> (to my knowledge) unique layer of optimization, called deforrestation". True, 
> of course, but useless theoretical piffle because we know that Haskell is 
> slow in practice and prohibitively difficult to optimize to-boot. Deforesting 
> is really easy to do by hand.

have you been hiding in a cave lately ?
haskell has improve its performance lately; not on everything, but still
can beat ocaml on some micro benchmarks.

> I have other wish-list items of my own to add:
> 
> . No 16Mb limit.

use 64 bits.

-- 
Vincent

