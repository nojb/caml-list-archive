Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 78C4FBBCA
	for <caml-list@yquem.inria.fr>; Fri,  9 May 2008 12:29:20 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AroCAJvEI0jUnw6Eb2dsb2JhbACCMY9WAQwFAgQHE5hx
X-IronPort-AV: E=Sophos;i="4.27,460,1204498800"; 
   d="scan'208";a="12030539"
Received: from pih-relay05.plus.net ([212.159.14.132])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 09 May 2008 12:29:16 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by pih-relay05.plus.net with esmtp (Exim) id 1JuPqZ-0003Xg-TM; Fri, 09 May 2008 11:29:04 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: Vincent Hanquez <tab@snarc.org>
Subject: Re: [Caml-list] Re: Why OCaml **cks
Date: Fri, 9 May 2008 11:23:50 +0100
User-Agent: KMail/1.9.9
References: <200805090139.54870.jon@ffconsultancy.com> <20080509094516.GA12893@snarc.org>
In-Reply-To: <20080509094516.GA12893@snarc.org>
Cc: caml-list@yquem.inria.fr
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200805091123.51264.jon@ffconsultancy.com>
X-Plusnet-Relay: 9833d4670df2b6d03d6e0f0d1754144c
X-Spam: no; 0.00; ocaml:01 0100,:01 parallelism:01 parallelism:01 ocaml's:01 advocates:01 extensively:01 ocaml:01 haskell:01 haskell:01 turf:98 cave:98 frog:98 imho:01 wrote:01 

On Friday 09 May 2008 10:45:16 you wrote:
> On Fri, May 09, 2008 at 01:39:54AM +0100, Jon Harrop wrote:
> > 1. Lack of Parallelism: Yes, this is already a complete show stopper.
>
> no it's not. it's in your fantasy world. lots of applications doesn't
> (or marginally) benefits from parallelism, and that your specific turf
> would benefit from them,

That's just crazy talk. Nobody can afford to ignore the multicore era that we 
have been in for some time now.

> is not a good reason to impose their drawbacks on everybody else.

What drawbacks?

> > 5. Strings: pushing unicode throughout a general purpose language is a
> > mistake, IMHO. This is why languages like Java and C# are so slow.
>
> unicode string should not be the default string, but unicode string need
> to be available as a first class citizen.

Agreed.

> > 7. Not_found: I like this, and Exit and Invalid_argument. Brian's point
> > that the name of this exception does not convey its source is fallacious:
> > that's what exception traces are for.
>
> exception traces are *not* available in long running program (daemon).

Because you compiled it wrongly or because you lost the output?

> > 8. Exceptions: I love OCaml's extremely fast exception handling (6x
> > faster than C++, 30x faster than Java and 600x faster than C#/F#!). I
> > hate the "exceptions are for exceptional circumstances" line promoted by
> > the advocates of any language implementation with cripplingly-slow
> > exception handlers.
>
> exceptions are for exceptional circumstances.

Bah, nonsense. Exceptions are used extensively for non-exceptional 
circumstances in idiomatic OCaml and it works beautifully.

> > 9. Deforestation: Brian says "Haskell has introduced a very interesting
> > and (to my knowledge) unique layer of optimization, called
> > deforrestation". True, of course, but useless theoretical piffle because
> > we know that Haskell is slow in practice and prohibitively difficult to
> > optimize to-boot. Deforesting is really easy to do by hand.
>
> have you been hiding in a cave lately?

With yo mamma.

> haskell has improve its performance lately; not on everything, but still
> can beat ocaml on some micro benchmarks.

Look at the objective and quantitative results using the latest GHC on a 
modern machine. Haskell can't even touch OCaml, let alone F#. ;-)

> > I have other wish-list items of my own to add:
> >
> > . No 16Mb limit.
>
> use 64 bits.

You aren't customer facing are you?

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

