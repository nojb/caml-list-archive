Return-Path: <forsyth@terzarima.net>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 510EABBCA
	for <caml-list@yquem.inria.fr>; Sat, 10 May 2008 23:34:32 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApoEAGuxJUhQRF4M/2dsb2JhbACqNA
X-IronPort-AV: E=Sophos;i="4.27,466,1204498800"; 
   d="scan'208";a="26036131"
Received: from verso.terzarima.net ([80.68.94.12])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 10 May 2008 23:34:31 +0200
Message-ID: <84fa750ef0446e7c0473286ec5fc7e8b@terzarima.net>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Re: Why OCaml rocks
From: Charles Forsyth <forsyth@terzarima.net>
Date: Sat, 10 May 2008 22:39:33 +0100
In-Reply-To: <200805102059.54856.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain; charset="US-ASCII"
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; ocaml:01 forsyth:01 forsyth:01 caml-list:01 data:02 data:02 seems:03 concurrent:04 perhaps:05 distributed:05 passing:05 passing:05 parallel:05 computing:05 implies:06 

> Message 
> passing is fine for concurrent applications that are not CPU bound or for 
> distributed computing but it is not competitive on today's multicore machines 
> and will not become competitive in the next decade.

i don't understand any of this.

>2. How do we avoid excessive copying? What if each parallel thread only 
>requires part of a data structure, should we dissect the data structure to 
>alleviate message passing?

this seems to suggest that message passing implies serialising the data structure.
perhaps i missed something, though.

