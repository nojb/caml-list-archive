Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 0348BBB84
	for <caml-list@yquem.inria.fr>; Mon, 19 May 2008 23:51:27 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgUBACKTMUjUnw7Ub2dsb2JhbACCNI99AQwFAgQHEwOcOg
X-IronPort-AV: E=Sophos;i="4.27,511,1204498800"; 
   d="scan'208";a="12458734"
Received: from ptb-relay01.plus.net ([212.159.14.212])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 19 May 2008 23:51:26 +0200
Received: from [80.229.56.224] (helo=beast.local)
	 by ptb-relay01.plus.net with esmtp (Exim) id 1JyDGP-0005Br-9z
	for caml-list@yquem.inria.fr; Mon, 19 May 2008 22:51:26 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Re: Where's my non-classical shared memory concurrency technology?
Date: Mon, 19 May 2008 22:47:09 +0100
User-Agent: KMail/1.9.9
References: <b903a8570805180139i7dfe7526u799e82d5126c9f3@mail.gmail.com> <4831686F.8010903@doc.ic.ac.uk> <b903a8570805190524y64154ce0x758571764813bf79@mail.gmail.com>
In-Reply-To: <b903a8570805190524y64154ce0x758571764813bf79@mail.gmail.com>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-15"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200805192247.09949.jon@ffconsultancy.com>
X-Plusnet-Relay: acd3df8886549f1136d5d0f73a244b24
X-Spam: no; 0.00; berke:01 durak:01 parallelism:01 parallelism:01 eliminates:98 frog:98 threads:01 threads:01 wrote:01 wrote:01 caml-list:01 bugs:03 bugs:03 concurrency:04 concurrency:04 

On Monday 19 May 2008 13:24:26 Berke Durak wrote:
> > > > Similarly, avoiding threads removes concurrency bugs...
>
> Avoiding threads means to me
> ...
> Avoiding threads almost eliminates consistency bugs
> ...
> If you avoid threads
> ...

There are two problems with what you wrote in this context:

1. You are replying to a thread about shared-memory parallelism with a 
discussion of sequential concurrency, which is completely different.

2. You keep saying "avoiding threads" but what you mean is "avoiding 
parallelism".

In essence, your solution to bugs that arise due to parallelism is to avoid 
parallelism. While true, that is not going to help anyone exploit multicores.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

