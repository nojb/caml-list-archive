Return-Path: <berke.durak@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.5 required=5.0 tests=AWL,HTML_00_10,HTML_MESSAGE 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id B35C1BBCA
	for <caml-list@yquem.inria.fr>; Fri,  9 May 2008 22:55:31 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AhYDAJ1WJEjRVcbidWdsb2JhbACCMziPHAEMAwQECQ+TXIVC
X-IronPort-AV: E=Sophos;i="4.27,462,1204498800"; 
   d="scan'208";a="26012883"
Received: from rv-out-0506.google.com ([209.85.198.226])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 09 May 2008 22:55:30 +0200
Received: by rv-out-0506.google.com with SMTP id f6so1525322rvb.3
        for <caml-list@yquem.inria.fr>; Fri, 09 May 2008 13:55:27 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        bh=xyqzfzmiM/1oQ3vjoYh0aB8BYOanwzXK7XmVFr109MI=;
        b=A1odZ5y+nVytSVLNlFHy4eTSqbiqSCpCaH0catvSZzr+hO2Xv8ueYV29S87KYxwtny7pzMGEFyWscsx+jlhGdAMHq0lmjTKGSHCr/Sb9V6Wl2sqXK20fK8/fUtqZHhihPmT/GjJOOQzlz2bF0wjDC1LCHZxw97fvhW+qlXBwPYM=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=pHaWQDej3ZRDedW/mwmtVUYX8iF5dVLUuhlii+reyXgxdhkoYqRK1S6+cj/9AbjdHrSLbXc+Su1gnOUarowzIpHU31hprw12RL655VywtbdzYhgwDvQ75xJuDSjhj4zvK0Wrtuq7IzH6N0UJmZ4BODFQk0RM+LeNJJqpC3nY9tM=
Received: by 10.140.157.1 with SMTP id f1mr2365225rve.220.1210366527037;
        Fri, 09 May 2008 13:55:27 -0700 (PDT)
Received: by 10.140.193.3 with HTTP; Fri, 9 May 2008 13:55:26 -0700 (PDT)
Message-ID: <b903a8570805091355g47602066oa056dae82fc52a4b@mail.gmail.com>
Date: Fri, 9 May 2008 22:55:26 +0200
From: "Berke Durak" <berke.durak@gmail.com>
To: "Gerd Stolpmann" <info@gerd-stolpmann.de>
Subject: Re: [Caml-list] Re: Why OCaml rocks
Cc: caml-list@yquem.inria.fr
In-Reply-To: <1210365645.17578.88.camel@flake.lan.gerd-stolpmann.de>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_5317_25644265.1210366527025"
References: <200805090139.54870.jon@ffconsultancy.com>
	 <200805090609.36123.jon@ffconsultancy.com>
	 <1210331526.17578.32.camel@flake.lan.gerd-stolpmann.de>
	 <200805091910.41381.jon@ffconsultancy.com>
	 <1210365645.17578.88.camel@flake.lan.gerd-stolpmann.de>
X-Spam: no; 0.00; berke:01 durak:01 berke:01 durak:01 ocaml:01 gerd:01 ocaml:01 gerd:01 hydro:98 hydro:98 abstract:01 abstract:01 caml-list:01 short:01 short:01 
X-Attachments: cset="UTF-8" cset="UTF-8" 

------=_Part_5317_25644265.1210366527025
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

BTW Gerd, Martin, what about writing a small post or paper about how you're
doing
what it is it that you do for Wink with Ocaml?  The Hydro article on Gerd's
site
is interesting but too short and abstract.

I'm thinking of a more detailed practical use-case with more contextual
detail ("we're indexing people"), numbers ("we have 1,234,567 persons in our
database, distribued over X machines with Y processors"), performance
figures (each CPU runs x Ocaml processes compiled in native code, those eat
95% of CPU and spend 5% of their time in IO with a RSS of 80MB; profiling
shows that most of their time is spent there; we figured that if you do this
and that, it goes faster, etc.).

That kind of information would be very welcome and could do much good to
Ocaml, instead of flamewar-provoking posts.
-- 
Berke

------=_Part_5317_25644265.1210366527025
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

BTW Gerd, Martin, what about writing a small post or paper about how you&#39;re doing<br>what it is it that you do for Wink with Ocaml?&nbsp; The Hydro article on Gerd&#39;s site<br>is interesting but too short and abstract.<br>
<br>I&#39;m thinking of a more detailed practical use-case with more contextual detail (&quot;we&#39;re indexing people&quot;), numbers (&quot;we have 1,234,567 persons in our database, distribued over X machines with Y processors&quot;), performance figures (each CPU runs x Ocaml processes compiled in native code, those eat 95% of CPU and spend 5% of their time in IO with a RSS of 80MB; profiling shows that most of their time is spent there; we figured that if you do this and that, it goes faster, etc.).<br>
<br>That kind of information would be very welcome and could do much good to Ocaml, instead of flamewar-provoking posts.<br>-- <br>Berke<br><br>

------=_Part_5317_25644265.1210366527025--

