Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA16295 for caml-redistribution; Mon, 22 Nov 1999 18:33:24 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA04080 for <caml-list@pauillac.inria.fr>; Mon, 22 Nov 1999 14:45:29 +0100 (MET)
Received: from sarg.Ryerson.CA (sarg.Ryerson.CA [141.117.18.117])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id OAA06289
	for <caml-list@inria.fr>; Mon, 22 Nov 1999 14:45:26 +0100 (MET)
Received: from sarg.Ryerson.CA (dmason@localhost [127.0.0.1])
	by sarg.Ryerson.CA (8.8.7/8.8.7) with ESMTP id IAA08967
	for <caml-list@inria.fr>; Mon, 22 Nov 1999 08:45:18 -0500
Message-Id: <199911221345.IAA08967@sarg.Ryerson.CA>
To: caml-list@inria.fr
Subject: Re: Saving the state of the program ? 
In-reply-to: Your message of "Sun, 21 Nov 1999 14:47:56 +0100."
             <Pine.GSO.4.02.9911211316360.16713-100000@pascal.enst.fr> 
Mime-Version: 1.0 (generated by tm-edit 7.108)
Content-Type: text/plain; charset=US-ASCII
Date: Mon, 22 Nov 1999 08:45:18 -0500
From: Dave Mason <dmason@sarg.Ryerson.CA>
Sender: weis

>>>>> On Sun, 21 Nov 1999 14:47:56 +0100 (MET), Benoit de Boursetty <debourse@email.enst.fr> said:

> On Fri, 19 Nov 1999, Dave Mason wrote:
>> > Hi, Does anyone know how to core-dump a running program, reboot,
>> > and then restart the program from where it was ?
>> 
>> Emacs does that.  Basically they do a core dump and then have a
>> (somewhat system dependent) unexec routine that turns the core file
>> into an executable.
>> 
>> The scm scheme system uses this, too.  That's probably the best
>> place to look.

> Thanks for the info. However, my question was about executables in
> the general case...

That's what I was trying to point you to.  In scm you can say something like:
	(if (dump "new-executable")
	    (begin
		(display "\"new-executable\" successfully made\n")
		(exit 0)))
	...rest of the program...

It wouldn't be too hard to pull the code out of scm and add it to the
ocaml library.  But it would rewuire some C coding experience.

../Dave



