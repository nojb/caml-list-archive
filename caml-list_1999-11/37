Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA30918 for caml-redistribution@pauillac.inria.fr; Fri, 12 Nov 1999 17:48:01 +0100 (MET)
Resent-Message-Id: <199911121648.RAA30918@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA16988 for <caml-list@pauillac.inria.fr>; Fri, 12 Nov 1999 13:49:12 +0100 (MET)
Received: from hugo.int-evry.fr (hugo.int-evry.fr [157.159.100.81])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id NAA21955
	for <caml-list@inria.fr>; Fri, 12 Nov 1999 13:49:10 +0100 (MET)
Received: from jones.int-evry.fr (jones [157.159.100.35])
          by hugo.int-evry.fr (8.8.8/jtpda-5.3) with ESMTP id NAA24083
          ; Fri, 12 Nov 1999 13:49:04 +0100 (MET)
Received: (rinderkn@localhost) by jones.int-evry.fr (8.8.8/8.6.4) id NAA00723; Fri, 12 Nov 1999 13:47:11 +0100 (MET)
Date: Fri, 12 Nov 1999 13:47:11 +0100
From: Christian RINDERKNECHT <rinderkn@hugo.int-evry.fr>
To: skaller <skaller@maxtal.com.au>
Cc: caml-list@inria.fr
Subject: Re: Undefined labels
Message-ID: <19991112134711.B645@jones.int-evry.fr>
References: <199910132358.BAA09027@miss.wu-wien.ac.at> <382AAB06.F3DF8CC0@maxtal.com.au>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Mailer: Mutt 0.95.5i
In-Reply-To: <382AAB06.F3DF8CC0@maxtal.com.au>; from skaller on Thu, Nov 11, 1999 at 10:39:50PM +1100
Resent-From: weis@pauillac.inria.fr
Resent-Date: Fri, 12 Nov 1999 17:48:01 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

Hello,

> 	(Unix.fstat argument).st_kind
> 
> Here, the function returns a structure, st_kind
> is a label of that structure, but it is not known
> in the calling module. Is there a syntax for this?

Yes:

        (Unix.fstat argument).Unix.st_kind
                              ^^^^
because the compiler doesn't know in what module to look-up for label
[st_kind]. 


> Using 'open Unix' is unacceptable.

I also never use the "open" feature, but the consequence is, when using
nested records, I must qualify all the labels (as in your example),
and the code becomes unreadable.

I recently started using classes in order to avoid this practical
problem, since methods are in the scope of their object, not of the
module embedding their class.

But this doesn't work if the library you are using is not
object-oriented, of course:)

Best regards,

-- 

Christian

-----------------------------------------------------------------------
Christian Rinderknecht                     Phone +33 (0)1 60 76 44 43
Institut National des Télécommunications   Fax   +33 (0)1 60 76 47 11
Département Logiciels Réseaux (LOR)        WWW
9, Rue Charles Fourier, F-91011 Évry Cedex


