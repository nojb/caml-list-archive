Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA12593 for caml-redistribution; Wed, 24 Nov 1999 23:19:07 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA00074 for <caml-list@pauillac.inria.fr>; Wed, 24 Nov 1999 19:39:41 +0100 (MET)
Received: from mail.nap.com.ar (mail-in.nap.com.ar [200.49.40.90])
	by nez-perce.inria.fr (8.8.7/8.8.7) with SMTP id TAA16316;
	Wed, 24 Nov 1999 19:39:28 +0100 (MET)
Received: from [200.41.180.75] (HELO k-bell.com) by mail.nap.com.ar (Stalker SMTP Server 1.8b3) with ESMTP id S.0004048424; Wed, 24 Nov 1999 15:40:08 -0300
Message-ID: <383C30BE.F102C6CB@k-bell.com>
Date: Wed, 24 Nov 1999 15:39:22 -0300
From: =?iso-8859-1?Q?Mat=EDas?= Giovannini <matias@k-bell.com>
Reply-To: matias@k-bell.com
Organization: Script S.A.
X-Mailer: Mozilla 4.7 (Macintosh; I; PPC)
X-Accept-Language: en,es-AR,es,pdf
MIME-Version: 1.0
To: caml-list@inria.fr
CC: Damien Doligez <Damien.Doligez@inria.fr>, David.Mentre@irisa.fr
Subject: Re: [GC] Evaluate memory use
References: <199911241612.RAA05304@tobago.inria.fr>
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
Sender: weis

Damien Doligez wrote:
> 
> >From: David.Mentre@irisa.fr (David =?iso-8859-1?q?Mentré?=)
> 
> >If I've understood the 2.02 doc, the compaction mechanism is disabled by
> >default. Right? So the below method is safe. Right?
> 
> Yes.
> 
> >Oh no. I've managed to use it. :) That's only because I must use the
> >Unix module solely on this purpose. It was just to avoid such use.
> 
> Maybe some day, we'll have date and time functions in the standard
> library.
> 
> -- Damien

Hm, I can see a new debate coming about the vagaries of calendrical
calculations around the world...

ObOCaml, it would be *extremely* useful if it only were

1- A system-independent time service, together with:
2- A system-independent time-base value (say, microseconds), and
3- A system-independent date-zero value (say, the datetime of release of
CamlLight 0.7).

What I'm thinking about is a sub-second TOD clock that could serve both
as a timer and as a clock. If the OS doesn't provide it, it's relatively
easy to sinthesize such a clock with a wall clock and a sub-second
timer. The critical point in doing it inside the language and not in the
library would be thread synchronization, but maybe I'm mistaken.

Best regards,
Matías

PS.: I just realized that the hypotetical Clock.t type would have to be
64 bits wide at least, that makes it unwieldly to manipulate inside OCaml.

-- 
I was seized by the hallucination. I don't remember much, except for
being caught in an infinite recursion: I was myself feverishly
writing how I was seized by the hallucination.  I don't remember
much, except for being caught in an infinite recursion.



