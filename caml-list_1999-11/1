Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA22020 for caml-redistribution@pauillac.inria.fr; Wed, 3 Nov 1999 21:43:05 +0100 (MET)
Resent-Message-Id: <199911032043.VAA22020@pauillac.inria.fr>
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA22436 for <caml-list@pauillac.inria.fr>; Fri, 29 Oct 1999 23:28:47 +0200 (MET DST)
Received: from sunstroke.informatik.uni-tuebingen.de (sunstroke.Informatik.Uni-Tuebingen.De [134.2.11.25])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id XAA20774
	for <caml-list@inria.fr>; Fri, 29 Oct 1999 23:28:45 +0200 (MET DST)
Received: (from pfitzen@localhost)
	by sunstroke.informatik.uni-tuebingen.de (8.9.1a/8.9.1) id XAA00690
	for caml-list@inria.fr; Fri, 29 Oct 1999 23:28:34 +0200 (MET DST)
Date: Fri, 29 Oct 1999 23:28:34 +0200 (MET DST)
From: Juergen Pfitzenmaier <pfitzen@informatik.uni-tuebingen.de>
Message-Id: <199910292128.XAA00690@sunstroke.informatik.uni-tuebingen.de>
To: caml-list@inria.fr
Subject: RE: 32 bit integers
Resent-From: weis@pauillac.inria.fr
Resent-Date: Wed, 3 Nov 1999 21:43:05 +0100
Resent-To: caml-redistribution@pauillac.inria.fr

Xavier Leroy wrote:
> ........................... and calling a C function from Caml is
> expensive -- more expensive than calling a Caml function, and much
> more expensive than open-coding the operations.
>
> > (This second was my guess.)  Is there any way
> > to make this kind of extension work better?
>
> There is a way, but it involves modifying the compiler itself
> to add special code generation rules for the primitive operations on
> the new integer type.

I'm very much interested in adding this kind of special rules to
the compiler. Not for Int32 but for long integer and long floats.
Could you give me a pointer where to start work ?

ciao
pfitzen@informatik.uni-tuebingen


