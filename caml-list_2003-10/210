Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id BAA04268; Sat, 18 Oct 2003 01:56:05 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA26517 for <caml-list@pauillac.inria.fr>; Sat, 18 Oct 2003 01:56:04 +0200 (MET DST)
Received: from mclean.mail.mindspring.net (mclean.mail.mindspring.net [207.69.200.57])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h9HNtl114388
	for <caml-list@inria.fr>; Sat, 18 Oct 2003 01:55:51 +0200 (MET DST)
Received: from user-0ccekej.cable.mindspring.com ([24.199.81.211] helo=[192.168.0.3])
	by mclean.mail.mindspring.net with esmtp (Exim 3.33 #1)
	id 1AAeRc-0004n6-00
	for caml-list@inria.fr; Fri, 17 Oct 2003 19:55:44 -0400
Subject: Re: [Caml-list] Weird behavior with nan's and min/max
From: "Yaron M. Minsky" <yminsky@cs.cornell.edu>
To: Caml List <caml-list@inria.fr>
In-Reply-To: <1066402553.4570.65.camel@pelican>
References: 
	 <51792.141.155.88.179.1066142234.squirrel@minsky-primus.homeip.net>
	 <20031016151658.A5633@pauillac.inria.fr> <1066402553.4570.65.camel@pelican>
Content-Type: text/plain
Organization: Cornell University
Message-Id: <1066434942.2933.70.camel@dragonfly.localdomain>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-5) 
Date: 17 Oct 2003 19:55:43 -0400
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 yaron:01 minsky:01 yminsky:01 cornell:01 floats:01 floats:01 nans:01 yaron:01 minsky:01 cornell:01 yminsky:01 keyid:01 equality:01 equality:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 2003-10-17 at 10:55, skaller wrote:
> On Thu, 2003-10-16 at 23:16, Xavier Leroy wrote:
> 
> > 1- Fix polymorphic equality so that it behaves like IEEE equality on floats,
> 
> > 2- As J M Skaller proposed, change the behavior of polymorphic
> > equality 
> 
> Doesn't the polymorphic comparison have to be a total order?

This kind of wigs me out too.  For example, do the set and map data
structures depend on this total order property?  What happens when I
stick in a data structure which contains some floats somewhere in it,
and some of those floats are nan's?  Does the data structure continue to
work at all?  It totally wigs me out.

I wish there was some sensible way around it.  Probably the thing I
would like best is for calculations that produce nans to throw
exceptions.  But from what I've heard so far, this doesn't appear to be
possible.  Oh well.

y

-- 
|--------/            Yaron M. Minsky              \--------|
|--------\ http://www.cs.cornell.edu/home/yminsky/ /--------|

Open PGP --- KeyID B1FFD916 (new key as of Dec 4th)
Fingerprint: 5BF6 83E1 0CE3 1043 95D8 F8D5 9F12 B3A9 B1FF D916



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

