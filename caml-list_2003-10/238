Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA07343; Tue, 21 Oct 2003 19:17:16 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA12224 for <caml-list@pauillac.inria.fr>; Tue, 21 Oct 2003 19:17:15 +0200 (MET DST)
Received: from aomori.annexia.org (annexia.force9.co.uk [212.56.101.183])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h9LHH1113798
	for <caml-list@inria.fr>; Tue, 21 Oct 2003 19:17:04 +0200 (MET DST)
Received: from rich by aomori.annexia.org with local (Exim 3.36 #1 (Debian))
	id 1AByy9-00023d-00
	for <caml-list@inria.fr>; Tue, 21 Oct 2003 17:02:49 +0100
Date: Tue, 21 Oct 2003 17:02:49 +0100
To: caml-list@inria.fr
Subject: Re: [Caml-list] OCaml wishlist
Message-ID: <20031021160249.GD7461@redhat.com>
References: <20031021142921.GA6736@redhat.com> <20031021145531.GA14086@roke.freak>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20031021145531.GA14086@roke.freak>
User-Agent: Mutt/1.5.4i
From: Richard Jones <rich@annexia.org>
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 wishlist:01 michal:01 moskal:01 infer:01 freshmeat:01 ltd:98 ocaml:01 0200,:01 syntax:02 essentially:02 business:96 binding:03 wrote:03 obj:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, Oct 21, 2003 at 04:55:31PM +0200, Michal Moskal wrote:
> This is however religious issue.

It wasn't meant to be (honest!). I just want to write code in whatever
paradigm is best for the moment, be that OO, functional or imperative.
My point is actually just that if you're writing user interface code,
then what you're doing is essentially going to be imperative most of
the time.

> > 2. abstract data type syntactic sugar:
> >    obj#call		      [	or:   obj->call ]
> > 
> >    is exactly equivalent to:
> > 
> >    M.call obj
> 
> let f a b c = a->add b c
> 
> What type does f have? 

Several correspondents asked the same question, and I understand that
you can't infer the type in this case. So the answer would be that
it's an error.

This makes sense because the -> syntax isn't meant to be a substitute
for object oriented programming / late binding :-)

Rich.

-- 
Richard Jones. http://www.annexia.org/ http://freshmeat.net/users/rwmj
Merjis Ltd. http://www.merjis.com/ - all your business data are belong to you.
NET::FTPSERVER is a full-featured, secure, configurable, database-backed
FTP server written in Perl: http://www.annexia.org/freeware/netftpserver/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

