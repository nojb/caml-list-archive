Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA03603; Mon, 6 Oct 2003 00:07:09 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA22434 for <caml-list@pauillac.inria.fr>; Mon, 6 Oct 2003 00:07:08 +0200 (MET DST)
Received: from mwinf0202.wanadoo.fr (smtp7.wanadoo.fr [193.252.22.29])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h95M77123639
	for <caml-list@inria.fr>; Mon, 6 Oct 2003 00:07:07 +0200 (MET DST)
Received: from debian (ca-bordeaux-21-27.w80-8.abo.wanadoo.fr [80.8.93.27])
	by mwinf0202.wanadoo.fr (SMTP Server) with ESMTP id 491DAA40016A
	for <caml-list@inria.fr>; Mon,  6 Oct 2003 00:07:07 +0200 (CEST)
Received: from moi by debian with local (Exim 3.36 #1 (Debian))
	id 1A6H2A-00020L-00
	for <caml-list@inria.fr>; Mon, 06 Oct 2003 00:07:22 +0200
To: caml-list@inria.fr
Subject: Re: [Caml-list] RealWorld-Examples for OcamlLex/OcamlYacc?
References: <20031005201503.GA284@first.in-berlin.de>
From: Remi Vanicat <vanicat@labri.u-bordeaux.fr>
Mail-Copy-To: never
Date: Mon, 06 Oct 2003 00:07:22 +0200
In-Reply-To: <20031005201503.GA284@first.in-berlin.de> (Oliver Bandel's
 message of "Sun, 5 Oct 2003 22:15:03 +0200")
Message-ID: <87vfr3pcdh.dlv@wanadoo.fr>
User-Agent: Gnus/5.090024 (Oort Gnus v0.24) Emacs/21.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-15
Content-Transfer-Encoding: 8bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 oliver:01 in-berlin:01 oliver:01 bandel:01 littlebid:01 ocaml:01 labri:01 u-bordeaux:01 writes:01 remi:01 remi:01 vanicat:01 vanicat:01 parser:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

oliver@first.in-berlin.de (Oliver Bandel) writes:

> Hello Hackers,
>

[...]

> The example in the Refman seems a littlebid confusing to me:
> There is a function Parser.main called, but in the Refman there only
> is a module Parsing, not a module Parser described.
>
> And in the ocmallex/Ocamlyacc-chapter I didn't find something about
> a call to Parser.main.
>

May I remind you that each ocaml source file is a module, so if you
have a parser.mly it will produce a parser.ml, and so a Parser module?  

Then in the given example, the main rules is named "main", so the
Parser.main must be the call to the main rule of the parser your are
definning... 

[...]

-- 
Rémi Vanicat
remi.vanicat@laposte.net

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

