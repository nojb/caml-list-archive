Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id BAA31377; Fri, 31 Oct 2003 01:18:33 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA31366 for <caml-list@pauillac.inria.fr>; Fri, 31 Oct 2003 01:18:32 +0100 (MET)
Received: from kurims.kurims.kyoto-u.ac.jp (kurims.kurims.kyoto-u.ac.jp [130.54.16.1])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id h9V0IQ117403
	for <caml-list@inria.fr>; Fri, 31 Oct 2003 01:18:26 +0100 (MET)
Received: from localhost (suiren.kurims.kyoto-u.ac.jp [130.54.16.25])
	by kurims.kurims.kyoto-u.ac.jp (8.9.3p2-20030924/3.7W) with ESMTP id JAA24377;
	Fri, 31 Oct 2003 09:18:19 +0900 (JST)
To: kknowles@uclink.berkeley.edu
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Int overflow in literals
In-Reply-To: <20031030212646.GA14401@tallman.kefka.frap.net>
References: <20031030200519.GA19324@ucdavis.edu>
	<200310301614.02646.oleg_trott@columbia.edu>
	<20031030212646.GA14401@tallman.kefka.frap.net>
X-Mailer: Mew version 1.94.2 on Emacs 21.2 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20031031091839N.garrigue@kurims.kyoto-u.ac.jp>
Date: Fri, 31 Oct 2003 09:18:39 +0900
From: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>
X-Dispatcher: imput version 20000228(IM140)
Lines: 23
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 jacques:01 knowles:99 oleg:01 incompatible:01 bignum:01 bignum:01 jacques:01 regexp:01 compiler:01 -bit:01 -bit:01 ocaml:01 ocaml:01 int:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Kenneth Knowles <kknowles@uclink.berkeley.edu>
> On Thu, Oct 30, 2003 at 04:14:02PM -0500, Oleg Trott wrote:
> > Or, better yet, use Big_int:
> 
> But one should note that the Num library, and thus Big_int, is under
> a different license than the ocaml distribution, and may be
> incompatible with your project.

If this is the only thing that bothers you, get the CVS version of
ocaml: bignum has just be rewritten from scratch, and is now available
under the same license as other libraries.

Funny how Xavier had to rewrite both regexp and bignum just for
questions of license...  the BSD ideal of freely reusable software is
really far away (and ocaml itself is not 100% free either).
(IIRC improving efficiency was another reason in both cases.)

Concerning the discussion 63-bit vs 31-bit, this is not directly
relevant as the ocaml compiler on 32-bit platforms does not put
63-bit integers in the code. At least there could be a warning for
constant overflow.

Jacques Garrigue

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

