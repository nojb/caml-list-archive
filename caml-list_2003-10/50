Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA17859; Sun, 5 Oct 2003 22:20:06 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA26548 for <caml-list@pauillac.inria.fr>; Sun, 5 Oct 2003 22:20:05 +0200 (MET DST)
Received: from hirsch.in-berlin.de (hirsch.in-berlin.de [192.109.42.6])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id h95KK4111023
	for <caml-list@inria.fr>; Sun, 5 Oct 2003 22:20:04 +0200 (MET DST)
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: <caml-list@inria.fr>
Received: from hirsch.in-berlin.de (localhost [127.0.0.1])
	by hirsch.in-berlin.de (8.12.10/8.12.10/Debian-4) with ESMTP id h95KK3Of008540
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <caml-list@inria.fr>; Sun, 5 Oct 2003 22:20:03 +0200
Received: from first.UUCP (uucp@localhost)
	by hirsch.in-berlin.de (8.12.10/8.12.10/Debian-4) with UUCP id h95KK3Tl008530
	for inria.fr!caml-list; Sun, 5 Oct 2003 22:20:03 +0200
Received: by first.in-berlin.de
	via sendmail from stdin
	id <m1A6FHT-000536C@first.in-berlin.de> (Debian Smail3.2.0.114)
	Sun, 5 Oct 2003 22:15:03 +0200 (CEST) 
From: oliver@first.in-berlin.de (Oliver Bandel)
Date: Sun, 5 Oct 2003 22:15:03 +0200
To: caml-list@inria.fr
Subject: [Caml-list] RealWorld-Examples for OcamlLex/OcamlYacc?
Message-ID: <20031005201503.GA284@first.in-berlin.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
User-Agent: Mutt/1.3.28i
X-Scanned-By: MIMEDefang 2.35
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; oliver:01 in-berlin:01 oliver:01 bandel:01 real-world:01 littlebid:01 blind:99 evry:01 ocaml:01 ocaml:01 parser:02 parser:02 module:03 module:03 annoying:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello Hackers,

after pausing with OCaml and programming at all,
coming back to an interesting problem to solve,
I tried to solve it in C, with flex and yacc.

Even if find C nice, it was annoying how much
code to write... so it seems to be true, that
OCaml is a drug.

Back to it now, I ask the other addicts here for
real-world programs, that use ocamllex and ocamlyacc
and if available, a good tutorial.

The example in the Refman seems a littlebid confusing to me:
There is a function Parser.main called, but in the Refman there only
is a module Parsing, not a module Parser described.

And in the ocmallex/Ocamlyacc-chapter I didn't find something about
a call to Parser.main.

Or maybe I'm short-time blind, evry time, when I look into that manual?


Any help and hint is welcome... please help this OCaml-addict
programmer who I am now.


TIA,
   Oliver

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

