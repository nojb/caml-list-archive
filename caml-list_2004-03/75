Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA11720; Mon, 8 Mar 2004 17:24:12 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA11522 for <caml-list@pauillac.inria.fr>; Mon, 8 Mar 2004 17:24:11 +0100 (MET)
Received: from moby.atcorp.com (moby.atcorp.com [204.72.172.2])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i28GO9V7011156
	for <caml-list@inria.fr>; Mon, 8 Mar 2004 17:24:10 +0100
Received: from [192.168.0.36] (conger.atcorp.com [204.72.172.102])
	by moby.atcorp.com (8.11.6/8.11.2) with ESMTP id i28GPdZ21282
	for <caml-list@inria.fr>; Mon, 8 Mar 2004 10:25:39 -0600
Mime-Version: 1.0 (Apple Message framework v612)
Content-Transfer-Encoding: 7bit
Message-Id: <0A0E269A-711D-11D8-8BF5-000393914EAA@atcorp.com>
Content-Type: text/plain; charset=US-ASCII; format=flowed
To: caml-list@inria.fr
From: Eric Dahlman <edahlman@atcorp.com>
Subject: [Caml-list] Differences between interpreted/compiled code
Date: Mon, 8 Mar 2004 10:24:14 -0600
X-Mailer: Apple Mail (2.612)
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; howdy:01 bug:01 hypothesis:01 compiler:01 ocaml:01 byte:01 tco:97 parser:02 enlighten:02 stack:02 stack:02 string:03 parsers:03 interpreter:03 library:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 75

Howdy,

I am trying to track down a bug and I wonder if someone could enlighten 
me as to the difference between the execution of compiled code and byte 
code.  I remember someone on this list mention that there should not be 
any detectable difference between the two but my test is busting the 
stack in one case but no the other.  My first guess is that the 
interpreter may not be performing tail call optimization where the 
compiler is but I am not clear as to whether that counts as an 
"observable" difference.

I the code which breaks is in a library which uses an ocaml lexer and 
parser to interpret a string so as support for my running hypothesis do 
the generated parsers assume that TCO will be properly performed?

What are the differences between the two execution models and could 
that be contributing to my stack problems?

Thanks,
-Eric

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

