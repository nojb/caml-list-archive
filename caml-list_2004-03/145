Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA13178; Tue, 16 Mar 2004 23:24:27 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA12551 for <caml-list@pauillac.inria.fr>; Tue, 16 Mar 2004 23:24:26 +0100 (MET)
Received: from feline (63-228-144-98.phnx.qwest.net [63.228.144.98])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i2GMOOHd026159
	for <caml-list@inria.fr>; Tue, 16 Mar 2004 23:24:25 +0100
Received: from awwaiid by feline with local (Exim 3.36 #1 (Debian))
	id 1B3MwM-0008Gr-00
	for <caml-list@inria.fr>; Tue, 16 Mar 2004 15:21:38 -0700
Date: Tue, 16 Mar 2004 15:21:37 -0700
From: Brock <rbw3@cse.nau.edu>
To: caml-list@inria.fr
Subject: [Caml-list] OCaml Genetic Programming Framework (OGPF)
Message-ID: <20040316222137.GS3969@thelackthereof.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.5.1+cvs20040105i
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; functors:01 functor:01 functors:01 wiki:01 --brock:01 ocaml:01 ocaml:01 folks:01 modular:02 modular:02 elegant:04 efficient:05 i'd:06 source:07 programming:07 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 145


Hi all. I've been working on a modular genetic programming framework and
it works a bit so I thought I'd mention it here so that interested
parties would be informed of its existence. Of note to non-gp folks is
that I am trying to make this very modular through use of functors, so
it might be a good (or bad!) example of functor usage.

>From the website:

    The goal of OGPF is to create a modular framework for building
    genetic programming systems in OCaml. It is also an experiment in
    modular framework design in OCaml, making heavy use of Functors.
    OGPF seeks to be a clean, elegant, and efficient solution to the
    question "How do I do genetic programming in OCaml?"

See http://thelackthereof.org/wiki.pl/OGPF
Raw Source at http://thelackthereof.org/projects/ocaml/ogpf/

I'm happy to discuss any aspect of this project (GP or functors or
anything) here or elsewhere.

Good Day,
--Brock

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

