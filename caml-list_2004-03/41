Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA16421; Thu, 4 Mar 2004 00:06:24 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA16263 for <caml-list@pauillac.inria.fr>; Thu, 4 Mar 2004 00:06:23 +0100 (MET)
Received: from localhost (adsl-64-162-212-212.dsl.snfc21.pacbell.net [64.162.212.212])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i23N6LUM003252
	for <caml-list@inria.fr>; Thu, 4 Mar 2004 00:06:22 +0100
Received: by localhost (Postfix, from userid 1000)
	id 4A2886A4B39; Wed,  3 Mar 2004 15:06:21 -0800 (PST)
Date: Wed, 3 Mar 2004 15:06:21 -0800
From: Kenneth Knowles <kknowles@uclink.berkeley.edu>
To: caml-list@inria.fr
Subject: Re: [Caml-list] [ANNOUNCE] Development versions: ocamlconf, ASPCC
Message-ID: <20040303230621.GB15359@tallman.kefka.frap.net>
References: <20040303051611.GA1204@manzanita> <20040303062539.GA27167@tallman.kefka.frap.net> <20040303195326.GA991@manzanita>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20040303195326.GA991@manzanita>
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; knowles:99 caml-list:01 python's:01 distutils:01 python:01 fixpoints:01 python's:01 distutils:01 digests:01 fixpoint:01 install':01 'make:01 install':01 findlib:01 findlib:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 41

> That's good but I would prefer to use OCaml and avoid makefiles
> altogether, similar to how Python's distutils just uses Python.  Then we
> could have more sophisticated build rules with fixed points etc. (as
> John Max Skaller described in a post a while back.)

Ok, well I totally agree with this, and if anyone has any fixpoint-based
building code, a grand build system could really be in the works... 

Does ocaml ever really need fixpoints (except for the compiler itself)?  If this
is to be ocaml-centric (like I assume python's distutils are) then it seems like
digests of files like Cook uses would be sufficient...  TeX is the only thing I
know that needs fixpoint computations.

Besides that I see a lot of value in the semantic separation of configuration -
determine what requirements and options a site has - and building.  I even like
the user interface of 'configure && make && make install'

If the make and the make install steps were written in ocaml, great.  In
particular I think almost all of 'make install' should be handled by findlib, so
it really just needs (1) improvements to ocamlconf (2) build tool (3) probably
some more flexibility to findlib.

Kenn

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

