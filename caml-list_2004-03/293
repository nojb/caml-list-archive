Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id EAA09982; Mon, 22 Mar 2004 04:26:33 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id EAA10121 for <caml-list@pauillac.inria.fr>; Mon, 22 Mar 2004 04:26:32 +0100 (MET)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by nez-perce.inria.fr (8.12.10/8.12.10) with ESMTP id i2M3R2KW004947
	for <caml-list@inria.fr>; Mon, 22 Mar 2004 04:27:03 +0100
Received: from [192.168.1.200] (ppp114-118.lns1.syd3.internode.on.net [150.101.114.118])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i2M3QKwn063911;
	Mon, 22 Mar 2004 13:56:21 +1030 (CST)
Subject: Re: [Caml-list] extensible records again
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Michael Vanier <mvanier@cs.caltech.edu>
Cc: oleg_trott@columbia.edu, caml-list <caml-list@inria.fr>
In-Reply-To: <20040321223401.392519BBA2@orchestra.cs.caltech.edu>
References: <20040321062143.BE7D29BBA2@orchestra.cs.caltech.edu>
	 <405D4D77.2030403@columbia.edu>
	 <20040321084008.429279BBA2@orchestra.cs.caltech.edu>
	 <405DBE78.5020609@columbia.edu>
	 <20040321223401.392519BBA2@orchestra.cs.caltech.edu>
Content-Type: text/plain
Message-Id: <1079926276.3165.49.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 22 Mar 2004 14:31:16 +1100
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 extensible:01 sourceforge:01 2004:99 vanier:01 implemented:01 covariant:01 subtyping:01 fixpoints:01 camlp:01 9660:01 glebe:01 variants:01 variants:01 nsw:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 293

On Mon, 2004-03-22 at 09:34, Michael Vanier wrote:

> If I understand you correctly, then you're arguing that *all* my "core
> types" should be implemented using polymorphic variants.

I use Polymorphic Variants almost exclusively in Felix.
They're more flexible but also give nastier error messages.

The main downside is that to make covariant subtyping
you need to use fixpoints, which is fine for a single
parameter but unworkable for a more complex term
structure.

It would be interesting if Camlp4 could solve this problem
somehow.

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

