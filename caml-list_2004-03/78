Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id FAA13744; Tue, 9 Mar 2004 05:53:38 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id FAA13577 for <caml-list@pauillac.inria.fr>; Tue, 9 Mar 2004 05:53:37 +0100 (MET)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i294rYHd015164
	for <caml-list@inria.fr>; Tue, 9 Mar 2004 05:53:35 +0100
Received: from [192.168.1.200] (ppp118-217.lns1.syd2.internode.on.net [150.101.118.217])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i294rRUK052873;
	Tue, 9 Mar 2004 15:23:29 +1030 (CST)
Subject: Re: [Caml-list] Differences between interpreted/compiled code
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Eric Dahlman <edahlman@atcorp.com>
Cc: caml-list <caml-list@inria.fr>
In-Reply-To: <0A0E269A-711D-11D8-8BF5-000393914EAA@atcorp.com>
References: <0A0E269A-711D-11D8-8BF5-000393914EAA@atcorp.com>
Content-Type: text/plain
Message-Id: <1078808247.2452.3.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 09 Mar 2004 15:57:27 +1100
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 runtime:01 ulimit:01 9660:01 glebe:01 bytecode:01 bytecode:01 behaviour:01 nsw:01 snail:02 native:02 native:02 checkout:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 78

On Tue, 2004-03-09 at 03:24, Eric Dahlman wrote:

> What are the differences between the two execution models and could 
> that be contributing to my stack problems?

The bytecode runtime uses a small (setable) stack.
It's possible your native code uses a very much larger 
hardware stack: on Linux you can find or set this value with
ulimit -s (in Kb). Try reducing the stack size on the native code 
to see if you can duplicate the bytecode behaviour.

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

