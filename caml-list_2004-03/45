Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id JAA08723; Thu, 4 Mar 2004 09:48:13 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id JAA08688 for <caml-list@pauillac.inria.fr>; Thu, 4 Mar 2004 09:48:12 +0100 (MET)
Received: from lri.lri.fr (lri.lri.fr [129.175.15.1])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i248mBUM028784
	for <caml-list@inria.fr>; Thu, 4 Mar 2004 09:48:11 +0100
Received: from pc8-123 (pc8-123 [129.175.8.123])
          by lri.lri.fr (8.12.10/jtpda-5.4) with ESMTP id i248ABO7015268
          ; Thu, 4 Mar 2004 09:10:12 +0100 (MET)
Received: from filliatr by pc8-123 with local (Exim 3.35 #1 (Debian))
	id 1Aynvn-0006hT-00; Thu, 04 Mar 2004 09:10:11 +0100
From: Jean-Christophe Filliatre <Jean-Christophe.Filliatre@lri.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <16454.58467.587275.600546@gargle.gargle.HOWL>
Date: Thu, 4 Mar 2004 09:10:11 +0100
To: Olivier Grisel <olivier.grisel@ensta.org>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Computational Logic in OCaml
In-Reply-To: <404612C3.9020603@ensta.org>
References: <404612C3.9020603@ensta.org>
X-Mailer: VM 7.03 under Emacs 20.7.2
Reply-To: Jean-Christophe.Filliatre@lri.fr (Jean-Christophe Filliatre)
X-MailScanner: Found to be clean
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; filliatre:01 filliatre:01 lri:01 caml-list:01 horn:99 functors:01 atp:99 bindings:01 ocaml:01 ocaml:01 exists:01 writes:01 olivier:02 theorem:02 objects:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 45

Olivier Grisel writes:
> I plan to write some implementation of classical Inductive Logic
> Programming strategies in OCaml and I would like to know if there exists
> ocaml libraries for computational logic (first order logic) available
> under a free software license.
> 
> I would also welcome thanksfully any advice or design guideline on data
> structures for objects such as Horn clauses (datalog or with functors),
> variable bindings and ideas to efficiently implement opertations such as
> resolution and theta-subsumption test.

You may be interested in John Harrison's Theorem Proving Examples:

  http://www.cl.cam.ac.uk/users/jrh/atp/index.html

Regards,
-- 
Jean-Christophe

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

