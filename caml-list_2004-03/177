Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA12054; Thu, 18 Mar 2004 19:21:06 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA12198 for <caml-list@pauillac.inria.fr>; Thu, 18 Mar 2004 19:21:05 +0100 (MET)
Received: from hirsch.in-berlin.de (hirsch.in-berlin.de [192.109.42.6])
	by concorde.inria.fr (8.12.10/8.12.10) with ESMTP id i2IIL4Hd031708
	for <caml-list@inria.fr>; Thu, 18 Mar 2004 19:21:04 +0100
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: <caml-list@inria.fr>
Received: from hirsch.in-berlin.de (localhost [127.0.0.1])
	by hirsch.in-berlin.de (8.12.11/8.12.11/Debian-3) with ESMTP id i2IIK2pT001704
	for <caml-list@inria.fr>; Thu, 18 Mar 2004 19:21:03 +0100
Received: from first.UUCP (uucp@localhost)
	by hirsch.in-berlin.de (8.12.11/8.12.11/Debian-3) with UUCP id i2II512Q031785
	for inria.fr!caml-list; Thu, 18 Mar 2004 19:05:01 +0100
Received: by first.in-berlin.de
	via sendmail from stdin
	id <m1B41pj-0005ArC@first.in-berlin.de> (Debian Smail3.2.0.114)
	Thu, 18 Mar 2004 19:01:31 +0100 (CET) 
From: oliver@first.in-berlin.de (Oliver Bandel)
Date: Thu, 18 Mar 2004 19:01:31 +0100
To: caml-list@inria.fr
Subject: [oliver: [oliver: Re: OCaml's Cathedral & Bazaar (was Re: [Caml-list] Completeness of "Unix" run-time library)]]
Message-ID: <20040318180131.GA702@first.in-berlin.de>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
User-Agent: Mutt/1.3.28i
X-Miltered: at concorde by Joe's j-chkmail ("http://j-chkmail.ensmp.fr")!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; oliver:01 in-berlin:01 oliver:01 bandel:01 ocaml's:01 caml-list:01 run-time:01 in-berlin:01 cannasse:01 warplayer:01 ocaml's:01 caml-list:01 run-time:01 2004:99 cannasse:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk
Status: O
X-Status: 
X-Keywords:                  
X-UID: 177

Sorry,

I had intended to post that answer to the list...

...now here it is... forwarded.


Ciao,
   Oliver


----- Forwarded message from oliver@first.in-berlin.de -----

To: Nicolas Cannasse <warplayer@free.fr>
Subject: Re: OCaml's Cathedral & Bazaar (was Re: [Caml-list] Completeness of "Unix" run-time library)

On Thu, Mar 18, 2004 at 12:22:12PM +0100, Nicolas Cannasse wrote:
[...]
> 
> A programming language need either a very good community support (so the
> whole community is helping developping it) or a very good businness backup
> ( Sun and Java ). OCaml doesn't have any : the community is mainly academic
> folks that are using OCaml as a (very useful) tool for their research, the
> INRIA is a centralized system with only small openness to user's
> contributions - through the wish list for example, neither having a whole
> team of people working 24/7 at improving the language (they're academics
> people, they need time to write papers, attend conferences, etc.). Industry
> adoption of ocaml is in earlier stages, and is not enough wide to push the
> language as fast as expected from the community.
[...]


IMHO only some individuals in that academic society are able and
interested in developping Ocaml further.
IMHO the knowledge to do so is highly complicated stuff, and to
open the inner circle of OCaml development to the community will
yield to more bugs / lower code quality and to lower language
quality.

Yes, there are a lot of hackers around, and not many, but nevertheless
enough to do big projects are out there.
But IMHO writing stuff like OCaml needs special people.
It's IMHO to uncommon, what they are developping, because there are
not many programmers working on such a high level.

I'm glad that Ocaml is - even if it has sometimes bugs -
very good and reliable.


I'm really a friend of the Bazaar's method, but on the other hand,
when looking at the many exploits that even in the Linux community
are there, shows me, that people often are doing work, that is
noit really of good quality (e.g. such simple thinks like array-
boundary checking, or using strcpy(3) instead of the better
strncpy() always leads to buggy and exploitable code).
Well, OCaml is rigid in that case and you can enhance code
quality because it insists on the right type and so on...
... but... you will find those programmers in such projects,
who not only see OCaml as a cool language... they also will
think it's cool to switch off safe operating mode of Arrays
and such....


...so IMHO the better way should be:

First let "the community" (who?) start with such projects,
and when they have arrived a certain code quality and
size, only THEN let's talk about taking such stuff over
into the standard library.

IMHO the cathedral has not only disadvantages.
Checking code quality and looking at the libraries
and to decide if they are of high/acceptable quality
is necessary!

There are to much idiots out there, and even the fact
that OCaml reduces probability of idiotic and unreliable
stuff, the language and it's learning curve itself is
no guarantee for that.


So, if there ARE projects, which could be mentioned to
be of such quality that the OCaml team can say: "Yes,
if we had been written it, we would put it into the
Ocaml-distribution", then we can ask the team, if they
may do it.

As long as there are only ideas and code snippets,
the better are developped outside the OCaml team
and will not be included in the OCaml distribution.
I mean: The OCaml team has better things to do than
look at simple and stupid beginners stuff, or buggy
code... they are only some developers and they must
not waste their time in stupid things!


But an Ocaml-aequivalent of the CPAN (COAN? well, 
sounds like Zen... ;-) OCaml/COAN: The Zen of programming ;-))
will be a very good idea and for code snippets and
even larger project may be the right place.

But to introduce libraries, where the so much
unreliable-code hackers are throwing in their
stupid code will not be good for Ocaml.

Wide speading alone is not a good idea.
It should have good quality too!

If I want 2wide spreaded things", I open my (snail-)mailbox
or my email-infolder, and look at the spam I got.
It's widespreaded, but it is not what I (we) want to have.

So, before we are risking the fall of a good language
(IMHO Ocaml is such a good language, because only certain
acadamians has developped it!), we should prove our ideas
and prove our resulting code as worth enough (quality level)
to be mentioned in the same sentence we mention OCaml.

So, IMHO, nobody from the INRIA team will say you don't
have to write a library or a program and put it onto
a server, for publicly availability.

So, why does the community (let's better talk about individuals here)
wait for answers from the INRIA team?

If there is someone outside who starts such a CPAN-aequivalent
for OCaml, and set up a cvs there, many people would be happy and
who should have a problem with this? I don't think the INRIA/OCaml-team
will have.


!!!
  But before there is any working code, it doesn't make sense
  to talk about the INRIA/OCaml-team politics that they
  would be too uninterested in using such code for the
  OCaml distribution!
!!!


We have to start such projects, and when there are such projects,
only THEN we can talk about using it in the distribution of Ocaml.

Until now there is only "hot air" (as we would say in german, maybe
you have that in english too). (Or another one from germany translated:)
"We need some more flesh at the bones..."

(Hope the direct translation of these german words is not
 senseless or of opposite meaning when translated into englisch.)




> 
> The language itself is still evolving, there is people doing great work on
> OCaml itself or other librairies, but a lot of OCaml hackers here are
> feeling quite quickly frustrated with the social interactions, the void of
> official answers when some important questions are raised, and the unability
> to simply discuss about what should be added/modified in the standard
> library.

A CPAN-like Ocaml-server would solving a lot of these problems.

At this moment it is even hard to find programs that were
written in OCaml. You have to browse a lot of personel
webpages. Having a server would help a lot.
BTW: In the Debian distribution, pcre_ocaml is included.
At least on that systems it is more-or-less easy to
use such stuff.

And maybe other libraries (which libraries are useful?)
can follow this way.

If the OCaml-team is not willed to use those libraries or
programs inside their distribution, a OS-maintainer may help
here additionally to a possible CPAN-like OCaml-stuff server.


So, why to wait for answers we don't get, when it is possible
to find solutions independently?

Maybe one day the Ocaml-team will think differently than today.
And the it will be a good idea to have such server.

If they (OCaml-team/INRIA) don't see the needs (because they
don't see that their research language will climb out of the
cathedral and will be used more and more), then they will
not see that it is worth thinking about it!

So, instead of arguing about INRIA/Ocaml-team politics we should
create facts, and that means: upset a server and maintain it.

If that then works, mabe the opinion of the researchers will
change.



Ciao,
   Oliver

----- End forwarded message -----

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

