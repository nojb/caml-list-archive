Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA20281 for caml-redistribution; Fri, 3 Dec 1999 14:01:52 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA18826 for <caml-list@pauillac.inria.fr>; Thu, 2 Dec 1999 19:08:33 +0100 (MET)
Received: from dpt-info.u-strasbg.fr (dpt-info.u-strasbg.fr [130.79.75.2])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id TAA28835;
	Thu, 2 Dec 1999 19:08:31 +0100 (MET)
Received: from lambda.u-strasbg.fr (lambda [130.79.75.49]) by dpt-info.u-strasbg.fr (8.7.5/8.6.9) with ESMTP id TAA21357; Thu, 2 Dec 1999 19:08:30 +0100 (MET)
Received: from luther by lambda.u-strasbg.fr with local (Exim 3.03 #1 (Debian))
	id 11taez-0000Fk-00; Thu, 02 Dec 1999 19:08:53 +0100
Date: Thu, 2 Dec 1999 19:08:53 +0100
From: Sven LUTHER <luther@dpt-info.u-strasbg.fr>
To: Luc Maranget <Luc.Maranget@inria.fr>
Cc: Jacques.Garrigue@inria.fr, caml-list@inria.fr
Subject: Re: LGPL et fichiers de configuration.
Message-ID: <19991202190853.A956@dpt-info.u-strasbg.fr>
Reply-To: luther@dpt-info.u-strasbg.fr
Mail-Followup-To: Luc Maranget <Luc.Maranget@inria.fr>,
	Jacques.Garrigue@inria.fr, caml-list@inria.fr
References: <19991202154137M.garrigue@pauillac.inria.fr> <199912021623.RAA01753@margaux.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
User-Agent: Mutt/1.0i
In-Reply-To: <199912021623.RAA01753@margaux.inria.fr>; from Luc.Maranget@inria.fr on Thu, Dec 02, 1999 at 05:23:45PM +0100
Sender: weis

On Thu, Dec 02, 1999 at 05:23:45PM +0100, Luc Maranget wrote:
> > > Il semblerait que la QPL est incompatible avec la GPL, qu'en est-il
> > > exactement de la LGPL ?
> > 
> > > si il y a incompatibilite avec la LGPL egalement, cela veut dire
> > > qu'il n'est pas possible de distribuer des sources qui sont couvert
> > > a la fois par la QPL et la LGPL.
> > 
> > C"est bien l'interet de la LGPL sur la GPL, de ne rien presumer le la
> > license de ce avec quoi on la lie. La LGPL ne protege que le code
> > lui-meme, elle ne parle pas des programmes qui vont l'utiliser. Donc
> > il n'y a pas de probleme.
> > Dieu merci.
> > 
> > Jacques
> > ------------------------------------------------------
> > Jacques Garrigue, visiting INRIA from Kyoto University
> > 		          Jacques.Garrigue at inria.fr
> > 
> 
> Retour aux sources... Lisons les licenses.
> 
> Quand on linke pas de pb (encore heureux !). Mais quand on distribue
> du binaire, on emporte avec soit une petite partie d'OCaml, et quand
> on distribue du source on emporte avec soit l'obligation d'autoriser
> l'utilisateur a le compiler (ce qui tombe sous le sens, mais aussi sous
> le coup de la loi).
> 
> 
> Petite lecture de la Section 6 de la LGPL.
> 
> 
> Ya pas de problème pour la license adoptée par le soft qui utilise les
> librairies.
> Ça peut être (à peu près) n'importe quoi, quoique...
> 
> ``provided that the terms permit
> modification of the work for the customer's own use and reverse
> engineering for debugging such modifications.''
> (on va voir plus loin ce que ça implique en cas de distrib uniquement
> binaire...)
> 
> Bon, ça continue.
> 
> 
>   You must give prominent notice with each copy of the work that the
> Library is used in it and that the Library and its use are covered by
> this License.  You must supply a copy of this License.  If the work
> during execution displays copyright notices, you must include the
> copyright notice for the Library among them, as well as a reference
> directing the user to the copy of this License.  Also, you must do one
> of these things:
>   Mon interprétation de ces quatre points
>   qui entraînent des conséquences techniques :
> 
> a/ Faire un tas de son travail avec les sources de la ``librairie'' et
> autoriser (techniquement) le relink après modification de la librairie.
> 
> b/ Garantir a/ par ecrit sur demande de l'utilisateur et pour une
> durée d'au moins trois ans.
> 
> c/ Donner la possibilité de a/ comme un tas de fichiers séparés.
> 
> d/ Verifier que l'utilisateur a déjà a/
> 
> En cas de distribution binaire sans les sources d'un programme en
> ocaml ou ocamlopt. Le point principal a/ devient tordu, car il faut
> que l'utlisateur
> puisse changer la librairie (rapellons ay passage que c'est par
> exemple le code du GC (ocamlopt) ou l'interpréteur de bytecode
> (ocamlc), ou List.map (tout le monde)) et relinker.
> 
> En plus l'utlisateur doit pouvoir le faire lui-même, soit :
> 
>   For an executable, the required form of the "work that uses the
> Library" must include any data and utility programs needed for
> reproducing the executable from it. 
> 
> A bon ? Dois-je inclure tout Ocaml dans mon .rpm ???  ! Cependant...
> 
> However, as a special exception,
> the source code distributed need not include anything that is normally
> distributed (in either source or binary form) with the major
> components (compiler, kernel, and so on) of the operating system on
> which the executable runs, unless that component itself accompanies
> the executable.
> 
> Comprends pas tout mais bon.
> 
> En pratique, en cas de distrib web avec les sources, donner un
> pointeur vers l'Inria + inclure une copie de la LGPL dans son travail
> me semble suffire moralement. Mais c'est limite comme interprétation.
> 
> Une copie des sources Caml sur le site web distribuant serait sans
> doute une arme absolue (par c/)
> 
> Pour les distribs binaires, le matériel d'accompagnement (minimal) me semple
> donc :
>   - Tous les .o .cmx (?) .cmax ou .cma .cmo ... du travail
>   - les .o etc du runtime Caml.
>   - De quoi refaire l'exécutable, j'ai peur que le linker de bytecode soit en
> License Q, je ne sais rien du linker ocamlopt,
> mais je ne sais pas si ça gène et ce que ça implique.

remarque que la LGPL permet de ne pas distribuer le code des librairies liees
dynamiquement avec le 'travail', en utilisant un vocabulaire du genre :

il est permit de ne pas distribuer le source des executable ne necessitant
"qu'un petit nombre d'information binaire" pour etre linker. ceci afin que
ld.so puisse effectuer le link dynamique.

Jusqu'a quel point peut-on supposer que les .cmi ou la partie des .cmo
contenant l'interface du module correspond a ce 'petit nombre d'information'
demander par la licence LGPL. Est-ce que quelqu'un de l'equipe caml pourrait
nous eclaires sur la taille relative de cette information ?

Et rappelons, que seul l'auteur d'un programme (dans ce cas l'INRIA, ou meme
les auteurs de ocaml seul) peuvent decider de poursuivre en justice quelqu'un
pour non respect de la licence. Une petite notice de leur part disant qu'il ne
considerent pas la distribution d'un executable ocaml sans les sources ocaml
comme conflictive avec la licence devrait largement suffire. Et je doute que
l'INRIA te fasse un proces car tu a distribue un programme ocaml sans les
sources de ocaml.

Dans l'ensemble, soyons content de la nouvelle license libre de ocaml, et
profitons en, ...

Amicalement,

Sven LUTHER



