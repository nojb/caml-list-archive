Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA10980 for caml-redistribution; Fri, 10 Dec 1999 08:38:19 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA29993 for <caml-list@pauillac.inria.fr>; Thu, 9 Dec 1999 23:27:23 +0100 (MET)
Received: from spog.gaertner.de (spog.gaertner.de [194.45.135.2])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id XAA10725
	for <caml-list@inria.fr>; Thu, 9 Dec 1999 23:27:21 +0100 (MET)
Received: from cumulus.is.gaertner.de (postfix@cumulus.is.gaertner.de [194.45.135.209])
	by spog.gaertner.de (8.8.8/8.8.8/Nase) with ESMTP id XAA04782
	for <caml-list@inria.fr>; Thu, 9 Dec 1999 23:27:19 +0100
Received: by cumulus.is.gaertner.de (Postfix, from userid 1000)
	id AC87C977C; Thu,  9 Dec 1999 23:17:19 +0100 (CET)
Date: Thu, 9 Dec 1999 23:17:19 +0100
From: Christian Lindig <lindig@is.gaertner.de>
To: caml-list@inria.fr
Subject: Re: Module hierarchy revisited
Message-ID: <19991209231719.C1832@cumulus>
Reply-To: Christian Lindig <lindig@gaertner.de>
Mail-Followup-To: caml-list@inria.fr
References: <87bt876w6f.fsf@isil.maya.com> <99120701504200.13076@ice> <19991209100944.A31727@dpt-info.u-strasbg.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <19991209100944.A31727@dpt-info.u-strasbg.fr>; from luther@dpt-info.u-strasbg.fr on Thu, Dec 09, 1999 at 10:09:44AM +0100
Sender: weis


> With directory as modules support we use the cleaner first aproach,
> as well as avoiding any name clashes.
> 
> This will become more and more a concern as ocaml support grows
> larger.

I would like to support the proposed mapping of module hierarchies to
directory hierarchies.  It allows for a nice integration of many of
the existing caml code (like pcre, Chris Okasaki's data structures,
XLib to name just a few) into a contrib hierarchy. 

Let's learn from the Perl, Java, and Python communities which managed
to build a very large code base for their respective system. 
Maintenance of such a code base could (and probably would) be
independent from the OCaml compiler and its standard library once the
top level modules are fixed. 

To summarize: I'd like to see such a feature in OCaml 3.

-- Christian

-- 
 Christian Lindig       Gaertner Datensysteme GbR, Braunschweig,  Germany 
                        http://www.gaertner.de/~lindig lindig@gaertner.de
                        phone: +49 531 233 55 55   fax: +49 531 233 55 56 



