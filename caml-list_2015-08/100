Return-Path: <daniel.buenzli@erratique.ch>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 832AA7EF53
	for <caml-list@sympa.inria.fr>; Fri, 14 Aug 2015 18:55:27 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  daniel.buenzli@erratique.ch) identity=pra;
  client-ip=74.55.86.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="daniel.buenzli@erratique.ch";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  daniel.buenzli@erratique.ch) identity=mailfrom;
  client-ip=74.55.86.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="daniel.buenzli@erratique.ch";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@smtp.webfaction.com) identity=helo;
  client-ip=74.55.86.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="postmaster@smtp.webfaction.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0BvAQAIHc5VnEpWN0pdg29pAYMjvGWCQYM2ghgBAQEBAQESAQEBAQEICwkJIS6ETVY1AiYCSRYbiCYNuU+WMgwggSKNHoIcgnAvgRQFlRuFBIl4hk0PhS+MCYIxH4FUcAEBgkoBAQE
X-IPAS-Result: A0BvAQAIHc5VnEpWN0pdg29pAYMjvGWCQYM2ghgBAQEBAQESAQEBAQEICwkJIS6ETVY1AiYCSRYbiCYNuU+WMgwggSKNHoIcgnAvgRQFlRuFBIl4hk0PhS+MCYIxH4FUcAEBgkoBAQE
X-IronPort-AV: E=Sophos;i="5.15,678,1432591200"; 
   d="scan'208";a="173633768"
Received: from mail6.webfaction.com (HELO smtp.webfaction.com) ([74.55.86.74])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 14 Aug 2015 18:55:26 +0200
Received: from [172.17.159.152] (global-1-26.nat.csx.cam.ac.uk [131.111.184.26])
	by smtp.webfaction.com (Postfix) with ESMTP id 286E8210E275;
	Fri, 14 Aug 2015 16:55:24 +0000 (UTC)
Date: Fri, 14 Aug 2015 17:55:48 +0100
From: =?utf-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: Caml-list <caml-list@inria.fr>
Cc: Arthur Wendling <art.wendling@gmail.com>
Message-ID: <9FA674AE74EF4E818051704D5416A0B0@erratique.ch>
X-Mailer: sparrow 1.6.4 (build 1178)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Subject: [Caml-list] [ANN] Vg 0.8.2

Hello,

Vg 0.8.2 has been released and will soon be available in opam.

Thanks to Arthur Wendling's work (and patience with me to merge), this rele=
ase brings us an initial Cairo [1] backend via the cairo2 bindings [2].

It allows to use Vg with gtk applications or any cairo context you are able=
 to get a handle on. This notably brings rendering to raster memory buffers=
 and offline PNG and PS file generation to Vg. It also provide redundant PD=
F and SVG file generation but Vg's own pure OCaml renderers are much faster=
 for that.

Vg's online image database [3] has eventually been fixed so that the many p=
eople that are on Linux using Firefox should no longer witness obscure (au =
propre comme au figur=C3=A9) stack overflows.

The full release notes are here:

  https://github.com/dbuenzli/vg/blob/v0.8.2/CHANGES.md#v082-2015-08-14-cam=
bridge-uk

Vg brings declarative 2D vector graphics to OCaml. It is distributed under =
a BSD3 license.=20=20

Homepage: http://erratique.ch/software/vg
API documentation: http://erratique.ch/software/vg/doc/

Best,

Daniel

P.S. The Cairo backend glyph API is a bit underpowered at the moment. If yo=
u are interested in improving this, get in touch on https://github.com/dbue=
nzli/vg/issues/9

P.P.S. `-safe-string` support means that Vg 0.8.2 is > OCaml 4.02.0 only. I=
t turns out that the bytes compatibility package is not really sufficient f=
or basic use cases, e.g. you don't get the bytes related functions in the `=
Buffer` module.

[1] http://cairographics.org/=20=20
[2] http://cairo.forge.ocamlcore.org/tutorial/
[3] http://erratique.ch/software/vg/demos/rhtmlc

