Return-Path: <kennethadammiller@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 12BA27F0A6
	for <caml-list@sympa.inria.fr>; Thu, 20 Aug 2015 16:12:02 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  kennethadammiller@gmail.com) identity=pra;
  client-ip=209.85.218.42;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="kennethadammiller@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  kennethadammiller@gmail.com designates 209.85.218.42 as
  permitted sender) identity=mailfrom; client-ip=209.85.218.42;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="kennethadammiller@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-oi0-f42.google.com) identity=helo;
  client-ip=209.85.218.42;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="kennethadammiller@gmail.com";
  x-sender="postmaster@mail-oi0-f42.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0D/AAAO39VVmyraVdFdg29pBoMfvCgBCYV7AoEsB0wBAQEBAQESAQEBAQEGCwsJIS6EIwEBAQMBAQIPEQQZARsdAQMBCwYFCwMKKgICIQEBEQEFARwGExoIh3YBAwoIDawGgS8+MYtAgWyCeYptChknDVeFAAEBAQEBAQEDAQEBAQEBAQEUAQEEDotFgk+CNwQHgmmBQwWVKYUFhX2BbYFKkEB5g0+CHRIjgRcXgh0cgW8iM4JMAQEB
X-IPAS-Result: A0D/AAAO39VVmyraVdFdg29pBoMfvCgBCYV7AoEsB0wBAQEBAQESAQEBAQEGCwsJIS6EIwEBAQMBAQIPEQQZARsdAQMBCwYFCwMKKgICIQEBEQEFARwGExoIh3YBAwoIDawGgS8+MYtAgWyCeYptChknDVeFAAEBAQEBAQEDAQEBAQEBAQEUAQEEDotFgk+CNwQHgmmBQwWVKYUFhX2BbYFKkEB5g0+CHRIjgRcXgh0cgW8iM4JMAQEB
X-IronPort-AV: E=Sophos;i="5.15,714,1432591200"; 
   d="scan'208";a="174316393"
Received: from mail-oi0-f42.google.com ([209.85.218.42])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 20 Aug 2015 16:12:01 +0200
Received: by oiew67 with SMTP id w67so23320814oie.2
        for <caml-list@inria.fr>; Thu, 20 Aug 2015 07:12:00 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        bh=5eeKw2IKkAskOhKx1tjtIvthdhhqU1Xo3E9p0aGLGRg=;
        b=FuuJ6Vk2YrusP/FupYG2vixdISScM9nJEHb2Y2BQ6dqg12vQw8ggHEzoKWXzB2AKYN
         9St8Tg65VmeR9MFFQJReYtRMqm/XXuZCQILXoWwZtqQA7RVU6TJyMpMlCykNJtXbGJNq
         Z8tPQpS2r2owfp/diur8joJQsu6v9oI0HvvIpO5zSHq3R1MIhyOn9OC7Ghc55yYnycOb
         GgxbWfwoRA+pU+M309Z612KxDW1EePxezCPhYN4JOtPopegZTavuDdd6ijxg3/750KEW
         nUbHYIs5uhORxz481NG9p8afePtQX7Bzw8HFBdT7zf0FFRuzcRnGt1M9A1J6d7wg+Txj
         9NPQ==
MIME-Version: 1.0
X-Received: by 10.202.81.12 with SMTP id f12mr2620098oib.130.1440079920004;
 Thu, 20 Aug 2015 07:12:00 -0700 (PDT)
Received: by 10.202.191.8 with HTTP; Thu, 20 Aug 2015 07:11:59 -0700 (PDT)
In-Reply-To: <CAK7rcp9V+XXSJQVNKR_NtnM+Ho6oNZ3g7em+Po_YQ3o-+fdg6w@mail.gmail.com>
References: <CAK7rcp_DfDdW94HWhuPsnKE-eg3ncvLTDfk7vcg9R+toKMkZhg@mail.gmail.com>
	<20150818185751.GC650@topoi.pooq.com>
	<CAK7rcp_zLJPgjb-5JpDdWh5BtJGnsomGvLSaLmMRhwCG1ZbnNA@mail.gmail.com>
	<CAPFanBHjX=VR58EAdzqHQ3ObrwofUmwOf4W8s5e4K3R46HVmCg@mail.gmail.com>
	<20150820091051.GA15458@frosties>
	<CAK7rcp8NGOWj=LbNpB72RCKhW7KG2g0sHE1+1n2ZNtt_njoaUQ@mail.gmail.com>
	<E51C5B015DBD1348A1D85763337FB6D9E9DDC7CD@Remus.metastack.local>
	<CAK7rcp9V+XXSJQVNKR_NtnM+Ho6oNZ3g7em+Po_YQ3o-+fdg6w@mail.gmail.com>
Date: Thu, 20 Aug 2015 10:11:59 -0400
Message-ID: <CAK7rcp-NTZZZ0fwEzQBHwpzS-BioEx4nqGBce0QxUjVjon5m4Q@mail.gmail.com>
From: Kenneth Adam Miller <kennethadammiller@gmail.com>
To: David Allsopp <dra-news@metastack.com>
Cc: Goswin von Brederlow <goswin-v-b@web.de>, caml users <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a113d7f1214846e051dbebc05
Subject: Re: [Caml-list] Type Encoding Format Control

--001a113d7f1214846e051dbebc05
Content-Type: text/plain; charset=UTF-8

One of the things I had also thought about expressing also is about
automatically collapsing such a type instance as part of it's definition
with other annotations, but that's complicated and likely a different topic
so I didn't mention it.

On Thu, Aug 20, 2015 at 10:09 AM, Kenneth Adam Miller <
kennethadammiller@gmail.com> wrote:

> It expresses intuitively, "Something which is exactly a nothing", so
> naturally, I would categorize that as a nothing directly of course. And
> you've just done precisely that with your code; foo = Some None => set that
> field to NULL could only represent saying that field is just exactly
> nothing directly. So, it's just like I said-you have to deal with the
> instance because it comes up in practice, and pragmatically we have to
> represent such cases in machine code as has been discussed. But in
> practicality almost never would an author sensibly keep the expanded form
> of Some None directly, it shows up due to code combinations only to be
> reduced.
>
> On Thu, Aug 20, 2015 at 10:05 AM, David Allsopp <dra-news@metastack.com>
> wrote:
>
>> Kenneth Adam Miller wrote:
>> > In the case of 2), that's interesting because such a type of
>> > Some None is sort of antithetical to describing anything
>> > sensical. Not that it's not pragmatic or doesn't occur-I'm sure
>> > some functions get combined in ways that stuff like this crops
>> > up. But I think of the typing system as being badly exercised
>> > if something like this arises-
>>
>> One example that springs immediately to mind: NULLable field in a
>> database, so 'a option is a sensible type to represent it. Now consider a
>> function intended to generate SQL UPDATE statements for that field:
>>
>> val update_record : ?foo:int option -> ?bar:int option -> id:int ->
>> baz:string -> bool
>>
>> where omitting ~foo or ~bar means "don't change foo/bar in the UPDATE
>> statement". Within the code for update_record:
>>
>> foo = None => don't update that field
>> foo = Some None => set that field to NULL
>> foo = Some (Some i) => set that field's value to i
>>
>> and all three cases will need different code.
>>
>> See also https://github.com/ocaml/ocaml/blob/trunk/typing/env.ml#L391
>>
>> What's (to you) badly exercised or nonsensical in either of those
>> representations?
>>
>>
>> David
>>
>
>

--001a113d7f1214846e051dbebc05
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">One of the things I had also thought about expressing also=
 is about automatically collapsing such a type instance as part of it&#39;s=
 definition with other annotations, but that&#39;s complicated and likely a=
 different topic so I didn&#39;t mention it.</div><div class=3D"gmail_extra=
"><br><div class=3D"gmail_quote">On Thu, Aug 20, 2015 at 10:09 AM, Kenneth =
Adam Miller <span dir=3D"ltr">&lt;<a href=3D"mailto:kennethadammiller@gmail=
.com" target=3D"_blank">kennethadammiller@gmail.com</a>&gt;</span> wrote:<b=
r><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:=
1px #ccc solid;padding-left:1ex"><div dir=3D"ltr">It expresses intuitively,=
 &quot;Something which is exactly a nothing&quot;, so naturally, I would ca=
tegorize that as a nothing directly of course. And you&#39;ve just done pre=
cisely that with your code; foo =3D Some None =3D&gt; set that field to NUL=
L could only represent saying that field is just exactly nothing directly. =
So, it&#39;s just like I said-you have to deal with the instance because it=
 comes up in practice, and pragmatically we have to represent such cases in=
 machine code as has been discussed. But in practicality almost never would=
 an author sensibly keep the expanded form of Some None directly, it shows =
up due to code combinations only to be reduced.=C2=A0</div><div class=3D"HO=
EnZb"><div class=3D"h5"><div class=3D"gmail_extra"><br><div class=3D"gmail_=
quote">On Thu, Aug 20, 2015 at 10:05 AM, David Allsopp <span dir=3D"ltr">&l=
t;<a href=3D"mailto:dra-news@metastack.com" target=3D"_blank">dra-news@meta=
stack.com</a>&gt;</span> wrote:<br><blockquote class=3D"gmail_quote" style=
=3D"margin:0 0 0 .8ex;border-left:1px #ccc solid;padding-left:1ex"><span>Ke=
nneth Adam Miller wrote:<br>
&gt; In the case of 2), that&#39;s interesting because such a type of<br>
&gt; Some None is sort of antithetical to describing anything<br>
&gt; sensical. Not that it&#39;s not pragmatic or doesn&#39;t occur-I&#39;m=
 sure<br>
&gt; some functions get combined in ways that stuff like this crops<br>
&gt; up. But I think of the typing system as being badly exercised<br>
&gt; if something like this arises-<br>
<br>
</span>One example that springs immediately to mind: NULLable field in a da=
tabase, so &#39;a option is a sensible type to represent it. Now consider a=
 function intended to generate SQL UPDATE statements for that field:<br>
<br>
val update_record : ?foo:int option -&gt; ?bar:int option -&gt; id:int -&gt=
; baz:string -&gt; bool<br>
<br>
where omitting ~foo or ~bar means &quot;don&#39;t change foo/bar in the UPD=
ATE statement&quot;. Within the code for update_record:<br>
<br>
foo =3D None =3D&gt; don&#39;t update that field<br>
foo =3D Some None =3D&gt; set that field to NULL<br>
foo =3D Some (Some i) =3D&gt; set that field&#39;s value to i<br>
<br>
and all three cases will need different code.<br>
<br>
See also <a href=3D"https://github.com/ocaml/ocaml/blob/trunk/typing/env.ml=
#L391" rel=3D"noreferrer" target=3D"_blank">https://github.com/ocaml/ocaml/=
blob/trunk/typing/env.ml#L391</a><br>
<br>
What&#39;s (to you) badly exercised or nonsensical in either of those repre=
sentations?<br>
<span><font color=3D"#888888"><br>
<br>
David<br>
</font></span></blockquote></div><br></div>
</div></div></blockquote></div><br></div>

--001a113d7f1214846e051dbebc05--
