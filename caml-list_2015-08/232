Return-Path: <oliver@first.in-berlin.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 597697F168
	for <caml-list@sympa.inria.fr>; Fri, 28 Aug 2015 17:51:26 +0200 (CEST)
IronPort-PHdr: 9a23:5X/3vhbA7A1ugb9I09jWPeL/LSx+4OfEezUN459isYplN5qZpc+9bnLW6fgltlLVR4KTs6sC0LqN9f2xEUU7or+/81k6OKRWUBEEjchE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i760zceF13FOBZvIaytQ8iJ35/xirH60qaQSjsLrQL1Wal1IhSyoFeZnegtqqwmFJwMzADUqGBDYeVcyDAgD1uSmxHh+pX4p8Y7oGwD884mosVJVKG/e6UjUZRZCi4nOiY7/p7Frx7GGCyL52URSC08mxxEDgyNuBb+X4n8qAP0t/BmxG+bO4j8QKowWDLk46o9G0ygszsOKzNsqDKfscd3lq8O+B8=
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=oliver@first.in-berlin.de; spf=None smtp.mailfrom=oliver@first.in-berlin.de; spf=None smtp.helo=postmaster@einhorn.in-berlin.de
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=pra;
  client-ip=192.109.42.8;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  oliver@first.in-berlin.de) identity=mailfrom;
  client-ip=192.109.42.8;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="oliver@first.in-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@einhorn.in-berlin.de) identity=helo;
  client-ip=192.109.42.8;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="oliver@first.in-berlin.de";
  x-sender="postmaster@einhorn.in-berlin.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0BKAQB9guBVnAgqbcBeg29pBoMduWaCdoV/AoE8PBABAQEBAQEBARABAQEBAQgLCQkhLoIdggcBAQMBIw8BBUYLCxoCGA4CAlcZFIgSCAQJsAGUYgwggSKKQIUSF4JSgUMFlT+FBodqB0uBQYZlkDiBOoI1HIFWbwGCTAEBAQ
X-IPAS-Result: A0BKAQB9guBVnAgqbcBeg29pBoMduWaCdoV/AoE8PBABAQEBAQEBARABAQEBAQgLCQkhLoIdggcBAQMBIw8BBUYLCxoCGA4CAlcZFIgSCAQJsAGUYgwggSKKQIUSF4JSgUMFlT+FBodqB0uBQYZlkDiBOoI1HIFWbwGCTAEBAQ
X-IronPort-AV: E=Sophos;i="5.17,425,1437429600"; 
   d="scan'208";a="144089079"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 28 Aug 2015 17:51:25 +0200
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: <caml-list@inria.fr>
Received: from localhost (yak.in-berlin.de [192.109.42.109])
	by einhorn.in-berlin.de (8.14.4/8.14.4/Debian-4) with ESMTP id t7SFpOGK031944
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <caml-list@inria.fr>; Fri, 28 Aug 2015 17:51:24 +0200
Received: from x55b21396.dyn.telefonica.de (x55b21396.dyn.telefonica.de
 [85.178.19.150]) by webmail.in-berlin.de (Horde Framework) with HTTP; Fri,
 28 Aug 2015 17:51:24 +0200
Date: Fri, 28 Aug 2015 17:51:24 +0200
Message-ID: <20150828175124.Horde.txmqupWX-FPVkbm_CM_vLwq@webmail.in-berlin.de>
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@inria.fr
References: <CACLX4jT-WNy8T9QTdVqE9Ryu_bNPjj1T1qenOJX7-RxFVFJYpQ@mail.gmail.com>
 <CA+p0s_cQQLVeXVsUyGV44WxNKGKw33DCo2u6ZEJEk7VT_5js=w@mail.gmail.com>
 <BAD8D5CC-316E-4D79-93F0-DBBB8079BAA5@gmail.com>
 <20150828.140826.2157566405742612169.Christophe.Troestler@umons.ac.be>
In-Reply-To: <20150828.140826.2157566405742612169.Christophe.Troestler@umons.ac.be>
User-Agent: Horde Application Framework 5
Content-Type: text/plain; charset=utf-8; format=flowed; DelSp=Yes
MIME-Version: 1.0
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
Subject: Re: [Caml-list] We need a rich standard library distributed with
 OCaml, really


Zitat von Christophe Troestler <Christophe.Troestler@umons.ac.be>  
(Fri, 28 Aug 2015 14:08:26 +0200)

[...]
> 1. INTEROPERABILITY: While many, possibly overlapping, libraries may  
> be seen as sign of liveliness of the community, they become a  
> problem if a user has to write boiler plate code to use them  
> together.  Thus I would propose that we sit down together and define  
> a minimal set of modules for interoperability purposes.  Since these  
> modules would in general only define some types, I propose to  
> reserve the names type_* for that, possibly with a version number at  
> the end â€” so newer versions can coexist with older ones and provide  
> functions for backward compatibility.  Examples of such modules are:
>     - type_time: define date, time, and calendar types;

Example of existing type:

Ocamlnet:
   Netdate.t

...also used by ocaml-rss.


OCaml-Calendar may also make sense.
It offers a lot of functions to do calculations with dates.

=> http://calendar.forge.ocamlcore.org/

So there already is something available...



>     - type_html: define a common representation for HTML documents (a

Example of existing type:

Ocamlnet:
   Nethtml.document

( works for me;-) )


> library can of course provide its own but should also have a  
> function to export to type_html);
>     - type_xml

Example of existing type:
   Xmlm has some types.


Not sure if I'm happy with them.
For what I did so far, maybe too much.
But for more sophisticated xml-parsing that maybe is fine.

XMLM is recommended for use by other OCaml'ers, so it seems to make  
sense to other people too.



IMHO, the idea to look at types first, is a good starting point.

For some categories there is already stuff, that maybe can be picked up.

But I'm not sure if that all should go into a library shipped with OCaml.

Regarding the standard-lib discussion: I assume a standard-library to  
be shipped with
OCaml itself.

Should Date-/Time and so on really be part of std.-lib?
Maybe yes, maybe no. (I tend into direction of "No".)

If yes: only the signatures, and let implementations/structures be outside?
(This is what some peole seem to have proposed??)
So that different implementations fit into the (extended) stdlib-types  
(which are
there for interoperability only?)?


Ciao,
    Oliver

