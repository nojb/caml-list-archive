Return-Path: <edouardevangelisti@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id C5C5A7F0D9
	for <caml-list@sympa.inria.fr>; Thu, 27 Aug 2015 11:35:29 +0200 (CEST)
IronPort-PHdr: 9a23:LEc10xPaq/K2GKxOP/Ml6mtUPXoX/o7sNwtQ0KIMzox0Kf39rarrMEGX3/hxlliBBdydsKIfzbSK+Pm6EUU7or+/81k6OKRWUBEEjchE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i760zceF13FOBZvIaytQ8iJ35/xibz5osebSj4LrQT+SIs6FA+xowTVu5teqqpZAYF19CH0pGBVcf9d32JiKAHbtR/94sCt4MwrqHwI6LoJvvRNWqTifqk+UacQTHF/azh0t/vQqALbQACTynwZW2QQ2loUUkmWpC39C7v4tCr7sqJX0TWHJ8zwBeQ4UDKj7qNDQhb0lT0GMXg+6m6B2eJqi6cOjR6muhVlz8b5foiTO/d6f7jBfJtOSGZGQ89LW2pMHIq6YIYLDvEdPM5Dq4Lg4VAHqF23Dk+xB7W8mXdzmnbq0PhigKwaGgbc0VllQosD
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=edouardevangelisti@gmail.com; spf=Pass smtp.mailfrom=edouardevangelisti@gmail.com; spf=None smtp.helo=postmaster@mail-qg0-f54.google.com
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  edouardevangelisti@gmail.com) identity=pra;
  client-ip=209.85.192.54;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="edouardevangelisti@gmail.com";
  x-sender="edouardevangelisti@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  edouardevangelisti@gmail.com designates 209.85.192.54 as
  permitted sender) identity=mailfrom; client-ip=209.85.192.54;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="edouardevangelisti@gmail.com";
  x-sender="edouardevangelisti@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-qg0-f54.google.com) identity=helo;
  client-ip=209.85.192.54;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="edouardevangelisti@gmail.com";
  x-sender="postmaster@mail-qg0-f54.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0BhBgCM2d5VlDbAVdFUCYNvaQaDHaoKBpAZgiIBCYV7gSsHOxEBAQEBAQEBARABAQEBBwsLCR8wgh2CBwEBBBIRBBkBLQsBAwwBBQULDQ0dAgIiEgEFAQoSBhMSCQeHdwMSDaVIgS8+MYtAhGWKRCcDCkeEaAEBCAEBAQEYAQUOhFKFfoEDhC9YgjkMLxKBMQWFdAyPPYUGh22CEJcEEiOBFxEGSYFUHYFVPTOCTQEBAQ
X-IPAS-Result: A0BhBgCM2d5VlDbAVdFUCYNvaQaDHaoKBpAZgiIBCYV7gSsHOxEBAQEBAQEBARABAQEBBwsLCR8wgh2CBwEBBBIRBBkBLQsBAwwBBQULDQ0dAgIiEgEFAQoSBhMSCQeHdwMSDaVIgS8+MYtAhGWKRCcDCkeEaAEBCAEBAQEYAQUOhFKFfoEDhC9YgjkMLxKBMQWFdAyPPYUGh22CEJcEEiOBFxEGSYFUHYFVPTOCTQEBAQ
X-IronPort-AV: E=Sophos;i="5.17,421,1437429600"; 
   d="scan'208";a="143935272"
Received: from mail-qg0-f54.google.com ([209.85.192.54])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/AES128-GCM-SHA256; 27 Aug 2015 11:34:52 +0200
Received: by qgeg42 with SMTP id g42so7418621qge.1
        for <caml-list@inria.fr>; Thu, 27 Aug 2015 02:34:51 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=mime-version:sender:in-reply-to:references:date:message-id:subject
         :from:to:cc:content-type;
        bh=jwtSg4j/xLA7z1w1rwFruejaZzwAeywLCeyeR0PShpg=;
        b=B/zjmvxxUC2ZohtLWYpunv5ARSHQ7LODrX/wBasX3Tl9NUCTzyux6S4YuVqnm/vnL/
         IBTwddi3FdYpQnOQp08XM+JBVp+uok3Wt3TsLQ1iW80GVkP65VCL65vYZ6xB01rdwu5n
         q1cpHJcpG6NHtScSoDAGdN4njYY6De7g0Y8Xnp/flvVCsqjuVn0LqhNJCD+2c9/Y7Yj6
         5LF1sSm3lHFWOITSNqABAW3e6ZqhTHrLhqUX6gSclqbuJjSO+om6W9tX4W/FjiJn5h1J
         mTk4zrcAnX0MBqmnEOF1fTcnEH8vEgJAEoXBIBDLB2yoOf+30ZPI2AzMlvAICZ86fS+o
         FkeQ==
MIME-Version: 1.0
X-Received: by 10.140.233.210 with SMTP id e201mr5095223qhc.88.1440668091107;
 Thu, 27 Aug 2015 02:34:51 -0700 (PDT)
Sender: edouardevangelisti@gmail.com
Received: by 10.140.20.103 with HTTP; Thu, 27 Aug 2015 02:34:51 -0700 (PDT)
In-Reply-To: <55DEC853.6080507@baturin.org>
References: <1C02B1E2-D17D-4008-998E-B17048C62DFA@gmail.com>
	<20150827080744.GA1542@pl-59055.rocqadm.inria.fr>
	<55DEC853.6080507@baturin.org>
Date: Thu, 27 Aug 2015 10:34:51 +0100
X-Google-Sender-Auth: 1WhKveTNzkaKsX64EEu443jWSuM
Message-ID: <CAMCFErS+RQLz=dR6is6xOt9Tyy68qOMu=NmVNKLm_iM=SeBH7w@mail.gmail.com>
From: Edouard Evangelisti <edouard.evangelisti@slcu.cam.ac.uk>
To: Daniil Baturin <daniil@baturin.org>
Cc: OCaML Mailing List <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=001a11354520cf51ff051e47adbc
X-Validation-by: edouard.evangelisti@slcu.cam.ac.uk
Subject: Re: [Caml-list] We need a rich standard library distributed with
 OCaml, really

--001a11354520cf51ff051e47adbc
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

Dear all,

Thanks for this inspiring discussion.

The integration of large pieces of code into OCaml standard library is
maybe not the best solution as it will never fulfill everyone's needs. I
like the idea of having a Swiss army knife standard library rather than a
heavy weight set of tools. However, filling existing minor gaps in the
standard library would probably improve programmers day-to-day experience.
Below are some examples:

- Integers, floats and options, for instance, would deserve their own
module for functor application.

- More functions on option type, such as eval, iter, map. Something like
this:
let eval f x =3D try Some (f x) with _ -> None
let iter f =3D function None -> () | Some x -> f x
let map f =3D function None -> None | Some x -> eval f x

- The standard library includes incr and decr on integer references, but
none of the useful C-like operators with assignment such as +=3D that save a
lot of time in situations (there are some) where references are heavily
used.
let ( +=3D ) r n =3D r :=3D !r + n

- An efficient set of string searching functions would help a lot (no
regexp). Something like Boyer-Moore, KMP or even Rabin-Karp algorithms.
- String.explode / implode to convert to/from char list.
- Trivial functions such as read_file or read_text_file.
- The identity function!
- All fold functions should have a foldi counterpart, and the same set of
iterators should occur in all modules.

Then, for more specialized requirements, I think it may be better to
contribute directly to improve third party libraries.

Kind regards,
Edouard


2015-08-27 9:20 GMT+01:00 Daniil Baturin <daniil@baturin.org>:

>
> -----BEGIN PGP SIGNED MESSAGE-----
> Hash: SHA256
>
> It often provokes exact same feelings as OCaml standard library,
> especially the prelude.  There are also reimplementations of it, e.g.
> https://hackage.haskell.org/package/classy-prelude
>
> GHC authors also keep the old stuff for backwards compatibility.
>
> What I think can serve as a source of inspiration is the Haskell
> Platform or the Python distribution. They are distributed with a set of
> more or less self-contained modules that once were or still are
> third-party libraries. This is especially convenient on platforms not
> friendly to automatic package management.
>
> On 08/27/2015 02:07 PM, S=C3=A9bastien Hinderer wrote:
> > Hi,
> >
> > Thanks for having started this thread.
> >
> > I am wondering to which extent the standard library of a language such
> > as Haskell could be a source of inspiration for OCaml?
> >
> > Cheers,
> >
> > S=C3=A9bastien.
> >
>
>
> -----BEGIN PGP SIGNATURE-----
> Version: GnuPG v2
>
> iQIcBAEBCAAGBQJV3shSAAoJEEcm35UR4K8fSmwP+wURGWzi/onbTmr0dltA8aRK
> XB6FKEyiwLarEMHKnLPiT3uZhDVbaSvDolPGzPuU3eq0/kih0z/0R4l2WAUG8QuP
> cbdcVAd0Po+fSfSrgNtl+luH9fpUiE0EtDWcZxviZSerZoObcPcIK68FkgQbBs5T
> vlJ7MjuNguYI26tDrBsSAzDZ+FqFGYj9/ykmUNF42aPUqD7GQXFKY6iBgFoTCpze
> v9zbPnDoPjShe1Guk72GbmHU+b5xwEXe0bFpWj3O6pM5sXOnQ9jbLNRM70wSvGkX
> V17NexWd4HyqVhoSRHy+CnrFUHuzEhBJQARhq1nYoypY6DiYyOSg58uw5EWJC/vH
> YXl0LP60sXrhY4ZJ4YUvv86DFpqGGtNftRThNRTq0o7LULXIt3JRyVp9f+fVhxB4
> FW8dk2xzbyMijKCLMdbrbLJhbQ7znTfCt8PLnyemVFdc+Ficne/j+D0YOoWCyX+b
> vyc7xAQn14ZvywMxS/Ii9SRKZO8jqmjlhnoTa+AiF9Ve9KYbIJ3d9hX/9cw+blmo
> 3EuUbo0K3DbIWUvNYMFsR+03mY5WyfO9UX5zcI/j5hP+DqxqrHEvNeHo/7/8IYiZ
> nI2B0cGwk5JX58+htaaR1rs3FDT7YI3mdoDzmLjVtdnqlRLhUvmHHqraZJQt/QhR
> DOx3brrv1loX0DPvr0SM
> =3DFpx0
> -----END PGP SIGNATURE-----
>
>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>



--=20
Edouard Evangelisti
Post doctoral Research Associate
Sainsbury Laboratory, Cambridge University (SLCU)
Bateman Street
Cambridge CB2 1LR (United Kingdom)

--001a11354520cf51ff051e47adbc
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div class=3D"gmail_default" style=3D"font-family:tahoma,s=
ans-serif;font-size:small;color:rgb(7,55,99)"><span style=3D"color:rgb(0,0,=
0)">Dear all,<br><br>Thanks for this inspiring discussion. <br><br>The inte=
gration of large pieces of code into OCaml standard library is maybe not th=
e best solution as it will never fulfill everyone&#39;s needs. I like the i=
dea of having a Swiss army knife standard library rather than a heavy weigh=
t set of tools. However, filling existing minor gaps in the standard librar=
y would probably improve programmers day-to-day experience. Below are some =
examples:<br><br>- Integers, floats and options, for instance, would deserv=
e their own module for functor application.<br><br>- More functions on <spa=
n style=3D"font-family:monospace,monospace">option</span> type, such as eva=
l, iter, map. Something like this:<br><span style=3D"font-family:monospace,=
monospace">let eval f x =3D try Some (f x) with _ -&gt; None<br>let iter f =
=3D function None -&gt; () | Some x -&gt; f x<br>let map f =3D function Non=
e -&gt; None | Some x -&gt; eval f x</span><br><br>- The standard library i=
ncludes <span style=3D"font-family:monospace,monospace">incr</span> and <sp=
an style=3D"font-family:monospace,monospace">decr</span> on integer referen=
ces, but none of the useful C-like operators with assignment such as <span =
style=3D"font-family:monospace,monospace">+=3D</span> that save a lot of ti=
me in situations (there are some) where references are heavily used.<br><sp=
an style=3D"font-family:monospace,monospace">let ( +=3D ) r n =3D r :=3D !r=
 + n</span><br><br>- An efficient set of string searching functions would h=
elp a lot (no regexp). Something like Boyer-Moore, KMP or even Rabin-Karp a=
lgorithms.<br>- String.explode / implode to convert to/from char list.<br>-=
 Trivial functions such as <span style=3D"font-family:monospace,monospace">=
read_file</span> or <span style=3D"font-family:monospace,monospace">read_te=
xt_file</span>.<br>- The identity function!<br></span></div><div class=3D"g=
mail_default" style=3D"font-family:tahoma,sans-serif;font-size:small;color:=
rgb(7,55,99)"><span style=3D"color:rgb(0,0,0)">- All fold functions should =
have a <span style=3D"font-family:monospace,monospace">foldi</span> counter=
part, and the same set of iterators should occur in all modules.<br></span>=
</div><div class=3D"gmail_default" style=3D"font-family:tahoma,sans-serif;f=
ont-size:small;color:rgb(7,55,99)"><span style=3D"color:rgb(0,0,0)"><br></s=
pan></div><div class=3D"gmail_default" style=3D"font-family:tahoma,sans-ser=
if;font-size:small;color:rgb(7,55,99)"><span style=3D"color:rgb(0,0,0)">The=
n, for more specialized requirements, I think it may be better to contribut=
e directly to improve third party libraries.<br></span></div><div class=3D"=
gmail_default" style=3D"font-family:tahoma,sans-serif;font-size:small;color=
:rgb(7,55,99)"><span style=3D"color:rgb(0,0,0)"><br>Kind regards,<br>Edouar=
d</span><br><br></div></div><div class=3D"gmail_extra"><br><div class=3D"gm=
ail_quote">2015-08-27 9:20 GMT+01:00 Daniil Baturin <span dir=3D"ltr">&lt;<=
a href=3D"mailto:daniil@baturin.org" target=3D"_blank">daniil@baturin.org</=
a>&gt;</span>:<br><blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .=
8ex;border-left:1px #ccc solid;padding-left:1ex"><br>
-----BEGIN PGP SIGNED MESSAGE-----<br>
Hash: SHA256<br>
<br>
It often provokes exact same feelings as OCaml standard library,<br>
especially the prelude.=C2=A0 There are also reimplementations of it, e.g.<=
br>
<a href=3D"https://hackage.haskell.org/package/classy-prelude" rel=3D"noref=
errer" target=3D"_blank">https://hackage.haskell.org/package/classy-prelude=
</a><br>
<br>
GHC authors also keep the old stuff for backwards compatibility.<br>
<br>
What I think can serve as a source of inspiration is the Haskell<br>
Platform or the Python distribution. They are distributed with a set of<br>
more or less self-contained modules that once were or still are<br>
third-party libraries. This is especially convenient on platforms not<br>
friendly to automatic package management.<br>
<span class=3D""><br>
On 08/27/2015 02:07 PM, S=C3=A9bastien Hinderer wrote:<br>
&gt; Hi,<br>
&gt;<br>
&gt; Thanks for having started this thread.<br>
&gt;<br>
&gt; I am wondering to which extent the standard library of a language such=
<br>
&gt; as Haskell could be a source of inspiration for OCaml?<br>
&gt;<br>
&gt; Cheers,<br>
&gt;<br>
&gt; S=C3=A9bastien.<br>
&gt;<br>
<br>
<br>
</span>-----BEGIN PGP SIGNATURE-----<br>
Version: GnuPG v2<br>
<br>
iQIcBAEBCAAGBQJV3shSAAoJEEcm35UR4K8fSmwP+wURGWzi/onbTmr0dltA8aRK<br>
XB6FKEyiwLarEMHKnLPiT3uZhDVbaSvDolPGzPuU3eq0/kih0z/0R4l2WAUG8QuP<br>
cbdcVAd0Po+fSfSrgNtl+luH9fpUiE0EtDWcZxviZSerZoObcPcIK68FkgQbBs5T<br>
vlJ7MjuNguYI26tDrBsSAzDZ+FqFGYj9/ykmUNF42aPUqD7GQXFKY6iBgFoTCpze<br>
v9zbPnDoPjShe1Guk72GbmHU+b5xwEXe0bFpWj3O6pM5sXOnQ9jbLNRM70wSvGkX<br>
V17NexWd4HyqVhoSRHy+CnrFUHuzEhBJQARhq1nYoypY6DiYyOSg58uw5EWJC/vH<br>
YXl0LP60sXrhY4ZJ4YUvv86DFpqGGtNftRThNRTq0o7LULXIt3JRyVp9f+fVhxB4<br>
FW8dk2xzbyMijKCLMdbrbLJhbQ7znTfCt8PLnyemVFdc+Ficne/j+D0YOoWCyX+b<br>
vyc7xAQn14ZvywMxS/Ii9SRKZO8jqmjlhnoTa+AiF9Ve9KYbIJ3d9hX/9cw+blmo<br>
3EuUbo0K3DbIWUvNYMFsR+03mY5WyfO9UX5zcI/j5hP+DqxqrHEvNeHo/7/8IYiZ<br>
nI2B0cGwk5JX58+htaaR1rs3FDT7YI3mdoDzmLjVtdnqlRLhUvmHHqraZJQt/QhR<br>
DOx3brrv1loX0DPvr0SM<br>
=3DFpx0<br>
-----END PGP SIGNATURE-----<br>
<div class=3D"HOEnZb"><div class=3D"h5"><br>
<br>
<br>
--<br>
Caml-list mailing list.=C2=A0 Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" rel=3D"noreferrer" t=
arget=3D"_blank">https://sympa.inria.fr/sympa/arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" rel=3D"noreferrer" target=3D"_blank">http://groups.yahoo.com/group/ocam=
l_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" rel=3D"noreferr=
er" target=3D"_blank">http://caml.inria.fr/bin/caml-bugs</a></div></div></b=
lockquote></div><br><br clear=3D"all"><br>-- <br><div class=3D"gmail_signat=
ure"><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div dir=3D"ltr"><div><div=
><div><div></div><span style=3D"color:rgb(7,55,99)"><span style=3D"font-fam=
ily:tahoma,sans-serif">Edouard Evangelisti<br></span></span></div><span sty=
le=3D"color:rgb(7,55,99)"><span style=3D"font-family:tahoma,sans-serif">Pos=
t doctoral Research Associate<br></span></span></div><span style=3D"color:r=
gb(7,55,99)"><span style=3D"font-family:tahoma,sans-serif">Sainsbury Labora=
tory, Cambridge University (SLCU)<br></span></span></div><span style=3D"col=
or:rgb(11,83,148)"><span style=3D"font-family:tahoma,sans-serif"><span styl=
e=3D"color:rgb(7,55,99)">Bateman Street<br>Cambridge CB2 1LR (United Kingdo=
m)</span><br></span></span></div></div></div></div></div></div>
</div>

--001a11354520cf51ff051e47adbc--
