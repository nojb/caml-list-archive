Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA09631 for caml-redistribution; Wed, 19 Jan 2000 15:25:41 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA07574 for <caml-list@pauillac.inria.fr>; Wed, 19 Jan 2000 15:25:08 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.8.7/8.8.7) with ESMTP id PAA00334;
	Wed, 19 Jan 2000 15:25:04 +0100 (MET)
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA15370; Wed, 19 Jan 2000 15:25:03 +0100 (MET)
From: Pierre Weis <Pierre.Weis@inria.fr>
Message-Id: <200001191425.PAA15370@pauillac.inria.fr>
Subject: Re: Compiler translation of array indexing
To: dmcclain@azstarnet.com (David McClain)
Date: Wed, 19 Jan 2000 15:25:03 +0100 (MET)
Cc: caml-list@inria.fr
In-Reply-To: <007501bf61d1$e956c420$250148bf@vega> from "David McClain" at Jan 18, 0 09:34:35 am
X-Mailer: ELM [version 2.4 PL24 ME8]
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
Sender: weis

> Instead of translating as in OCAML to Array.get and
> Array.set, they could be translated into some equivalent to
> 
> x.(n)  ->  module_of(type_of x).get(x, n)

There are strong theoretical difficulties to obtain a type_of function
embedded into a statically & strongly type checked language such as
Caml. A (limited) form of this type_of facility is the entire subject of
the following reserch paper:

ftp://ftp.inria.fr/INRIA/Projects/cristal/Pierre.Weis/generics.dvi.Z

This is also the subject of Jun Furuse's PHD: he is working since 1996
to implement this type-checking discipline into a working O'Caml
compiler. We also made some progress on the theoretical side, compared
to the above reference, and all these results will be reported in Jun's
thesis (strongly expected before this summer).

This work had also produced a safe value I/O system for Objective
Caml, that is a fully typechecked and safe polymorphic input/output
set of primitives for Objective Caml.
The design and implementation is described into the following
(forcoming) article : http://pauillac.inria.fr/~weis/articles/jfla2000.ps.Z
(Limited to those of you who can read french, since it has not yet
been translated into english, sorry for that.)

We also plan to distribute Jun's implementation in the near future, to
let you play with it.

Best regards,

Pierre Weis

INRIA, Projet Cristal, Pierre.Weis@inria.fr, http://cristal.inria.fr/~weis/




