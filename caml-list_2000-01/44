Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA30858 for caml-redistribution; Fri, 14 Jan 2000 20:17:10 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA14232 for <caml-list@pauillac.inria.fr>; Fri, 14 Jan 2000 19:09:50 +0100 (MET)
Received: from mail1.digital.com (mail1.digital.com [204.123.2.50])
	by nez-perce.inria.fr (8.8.7/8.8.7) with ESMTP id TAA27369
	for <caml-list@inria.fr>; Fri, 14 Jan 2000 19:09:47 +0100 (MET)
Received: from src-mail.pa.dec.com (src-mail.pa.dec.com [16.4.16.35])
	by mail1.digital.com (8.9.2/8.9.2/WV2.0g) with ESMTP id KAA11608
	for <caml-list@inria.fr>; Fri, 14 Jan 2000 10:09:45 -0800 (PST)
Received: by src-mail.pa.dec.com; id KAA04904; Fri, 14 Jan 2000 10:09:45 -0800 (PST)
Message-Id: <200001141809.KAA04904@src-mail.pa.dec.com>
To: caml-list@inria.fr
Subject: Re: Immutable arrays (modest Feature request) 
In-Reply-To: Message from Juergen Pfitzenmaier <pfitzen@informatik.uni-tuebingen.de> 
   of "Thu, 13 Jan 2000 20:45:01 +0100." <200001131945.UAA00907@sunlight.informatik.uni-tuebingen.de> 
Date: Fri, 14 Jan 2000 10:09:44 -0800
From: Mark Hayden <hayden@pa.dec.com>
Sender: weis


You can write your own immutable arrays in Ocaml.
See for instance util/arrayf.{ml,mli} in Ensemble,
which is an implementation of functional arrays.

  http://www.cs.cornell.edu/Info/Projects/Ensemble/

Of course, there is no syntactic sugar for the
constructors and Array.get operation.

--Mark

Date: Thu, 13 Jan 2000 20:45:01 +0100
To:  caml-list@inria.fr
From:  Juergen Pfitzenmaier <pfitzen@informatik.uni-tuebingen.de>
Subject:  Re: Immutable arrays (modest Feature request)
Delivery-Date:  Fri Jan 14 00:00:39 2000
>
>I too would like to see immutable strings/arrays if they are faster than
>their mutable siblings.
>
>pfitzen
>



