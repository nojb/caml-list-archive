Return-Path: <anil@recoil.org>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by sympa.inria.fr (Postfix) with ESMTPS id 8FB557EEE9
	for <caml-list@sympa.inria.fr>; Fri, 18 Jan 2013 12:27:48 +0100 (CET)
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  anil@recoil.org) identity=pra; client-ip=89.16.177.154;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="anil@recoil.org"; x-sender="anil@recoil.org";
  x-conformance=sidf_compatible
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  anil@recoil.org) identity=mailfrom; client-ip=89.16.177.154;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="anil@recoil.org"; x-sender="anil@recoil.org";
  x-conformance=sidf_compatible
Received-SPF: None (mail1-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@dark.recoil.org) identity=helo;
  client-ip=89.16.177.154;
  receiver=mail1-smtp-roc.national.inria.fr;
  envelope-from="anil@recoil.org";
  x-sender="postmaster@dark.recoil.org";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ak0CAJsw+VBZELGagWdsb2JhbABFvkwOAQEWJieCHgEBBAF5BQsLGBUZVwYTiBMKvCeOBIJUYQOSH4Ntkz4
X-IronPort-AV: E=Sophos;i="4.84,491,1355094000"; 
   d="scan'208";a="190546965"
Received: from recoil.dh.bytemark.co.uk (HELO dark.recoil.org) ([89.16.177.154])
  by mail1-smtp-roc.national.inria.fr with SMTP; 18 Jan 2013 12:27:48 +0100
Received: (qmail 24945 invoked by uid 634); 18 Jan 2013 11:27:47 -0000
X-Spam-Level: *
X-Spam-Check-By: dark.recoil.org
Received: from volstagg-0.srg.cl.cam.ac.uk (HELO [10.0.0.83]) (128.232.32.232)
  (smtp-auth username remote@recoil.org, mechanism cram-md5)
  by dark.recoil.org (qpsmtpd/0.84) with ESMTPA; Fri, 18 Jan 2013 11:27:44 +0000
Content-Type: text/plain; charset=iso-8859-1
Mime-Version: 1.0 (Mac OS X Mail 6.2 \(1499\))
From: Anil Madhavapeddy <anil@recoil.org>
In-Reply-To: <50F92FA9.8050707@frisch.fr>
Date: Fri, 18 Jan 2013 11:27:37 +0000
Cc: Thomas Gazagnaire <thomas@ocamlpro.com>,
 OCaml mailing-list <caml-list@inria.fr>,
 Mirage List <cl-mirage@lists.cam.ac.uk>
Content-Transfer-Encoding: quoted-printable
Message-Id: <28252449-E0B3-4A0E-A001-57B72712DD99@recoil.org>
References: <6833F17C-B642-4ED9-8C8F-2665A9742845@ocamlpro.com> <50F831B6.6020404@frisch.fr> <224865B3-055C-4E03-AA42-9F962AD516D7@recoil.org> <50F92486.2020704@frisch.fr> <DF5C351C-2B6D-4AA6-BCE7-3A9F0366CCCB@recoil.org> <50F92FA9.8050707@frisch.fr>
To: Alain Frisch <alain@frisch.fr>
X-Mailer: Apple Mail (2.1499)
X-Virus-Checked: Checked by ClamAV on dark.recoil.org
Subject: Re: [Caml-list] [ANN] beta-release of OPAM

On 18 Jan 2013, at 11:19, Alain Frisch <alain@frisch.fr> wrote:
>=20
> I've sent my first "pull request" for the inclusion of a new package in O=
PAM :-)

Yay!

> Are there plans to provide a more direct way to submit proposals for new =
packages?  If I understand correctly, the current scheme requires to create=
 an account on github, fork the opam-repository, clone the fork locally, cr=
eate and commit the package locally, push it to github, and then create a p=
ull request.  Admittedly, this is not difficult once you're familiar with G=
IT and github, but I can imagine that it will still discourage some people =
from submitting their first package.  What about a simple web interface to =
upload a .tar.gz of the package description, for instance?  It should not b=
e too hard to automate the treatment of uploaded package descriptions.

A certain barrier to entry in the early days isn't a bad thing. Homebrew se=
ems to cope well enough with this workflow (with over 10,000 forks).   We s=
hould probably add a CONTRIBUTING file with clear instructions to `opam-rep=
ository`.

However, I do have ocaml-github [1] bindings now which we're using for comm=
ent reporting in Real World OCaml (so that comments reported via the websit=
e version are converted into Github issues for us to parse). It should be s=
traightforward to support for this to OPAM.=20

Thomas just added (in trunk) a git-like extension mechanism to OPAM which w=
ill be suitable for this purpose.  If you execute an unknown subcommand, sa=
y `opam foo bar`, it will look for the `opam-foo` binary and execute it wit=
h the sub arguments.

This should be sufficient to build an `opam-upload` command that has all th=
e Github dependencies, without making the base OPAM package more complicate=
d to build.  I'm still working on a stable release of Cohttp, which the Git=
hub bindings depend on, so it's important that OPAM remains easy to bootstr=
ap without requiring zillions of bleeding-edge dependencies.

-anil

[1] opam install github=
