Return-Path: <gabriel.scherer@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by sympa.inria.fr (Postfix) with ESMTPS id EA2567EEAF
	for <caml-list@sympa.inria.fr>; Thu, 17 Jan 2013 00:17:46 +0100 (CET)
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  gabriel.scherer@gmail.com) identity=pra;
  client-ip=209.85.214.50;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail4-smtp-sop.national.inria.fr: domain of
  gabriel.scherer@gmail.com designates 209.85.214.50 as
  permitted sender) identity=mailfrom; client-ip=209.85.214.50;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="gabriel.scherer@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail4-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-bk0-f50.google.com) identity=helo;
  client-ip=209.85.214.50;
  receiver=mail4-smtp-sop.national.inria.fr;
  envelope-from="gabriel.scherer@gmail.com";
  x-sender="postmaster@mail-bk0-f50.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnACACo091DRVdYyjmdsb2JhbABEqx6SWggWDgEBAQEJCwkJEgYjgh4BAQMCQAEbEgsBAwwGBQsNDSEiAREBBQEKEgYTEod0AQMPDJwEjDSCe4UCChknAwpZhzMBBQyLfIUwA5YMgRyNTBYphBg
X-IronPort-AV: E=Sophos;i="4.84,481,1355094000"; 
   d="scan'208";a="168718965"
Received: from mail-bk0-f50.google.com ([209.85.214.50])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 17 Jan 2013 00:17:46 +0100
Received: by mail-bk0-f50.google.com with SMTP id jf3so1020495bkc.9
        for <caml-list@inria.fr>; Wed, 16 Jan 2013 15:17:45 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=x-received:mime-version:in-reply-to:references:from:date:message-id
         :subject:to:cc:content-type:content-transfer-encoding;
        bh=0/hBVkv733cqdXuCX+K9Br9ZxUTrkLqBdG2AbhY3MHQ=;
        b=a9VVP9pchGWkyuvI1sxoNe5doR1B94C/8T1d+gf2bS+4DEI4iLmSmYZI5C06Gs+n/j
         atx15BBHdq49t9Hj0AH2p4fecbt5PiQNoFOcvHXjrYkm13XT6VJVqragE6GeXsZu7vJF
         iPStytrUhSpS8Kw0NIe0dyQWeNLmNYqrRfMXDBwOxm3QUaWbrp1P+pbNbu6ESWi2fb14
         uMOIyLG+fvv8qxZ+FMjGyye2Z8PwwrWQeZFzi+Iw3Dp9kAYOzNkz6qJcutS34WpOhwLm
         J7GzFHdK6SMpKYxkIq+EW6XcNZiqKRT9Xhgepv2YhPDQPCu9vM1CmDfKZoRlkwLwzcdi
         ZF9A==
X-Received: by 10.204.147.147 with SMTP id l19mr923515bkv.91.1358378265326;
 Wed, 16 Jan 2013 15:17:45 -0800 (PST)
MIME-Version: 1.0
Received: by 10.204.236.134 with HTTP; Wed, 16 Jan 2013 15:17:04 -0800 (PST)
In-Reply-To: <610FAC34-EFC6-411F-87B7-03CA021E5C8E@gmail.com>
References: <43fbc889-f7fc-4bd6-949b-634d478326f6@googlegroups.com>
 <50F66B57.3070601@riken.jp> <1358326866.28639.13@samsung> <20130116094800.GA9538@ours.starynkevitch.net>
 <610FAC34-EFC6-411F-87B7-03CA021E5C8E@gmail.com>
From: Gabriel Scherer <gabriel.scherer@gmail.com>
Date: Thu, 17 Jan 2013 00:17:04 +0100
Message-ID: <CAPFanBEiWSw5rTiz2CL1SOmwY=06HTsRyKEDMA3ga87RfwcLPQ@mail.gmail.com>
To: Benedikt Meurer <benedikt.meurer@googlemail.com>
Cc: Basile Starynkevitch <basile@starynkevitch.net>, Gerd Stolpmann <info@gerd-stolpmann.de>, 
	Francois Berenger <berenger@riken.jp>, caml-list@inria.fr
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Subject: Re: [Caml-list] ocamlc compiles hello world, ocamlopt not

Benedikt, let me jump on the occasion to provide more pointers you
might be interested in:

- Rapha=EBl Amiard, a student at Paris 6 university, recently worked on
translating OCaml byte into LLVM:
https://github.com/raph-amiard/CamllVM ; I have not seen a definite
comparison with Colin's and Benoit's work, but they appear to hit the
same kind of issues (performance degradation of exceptions, handling
GC roots that are passed in registers)

- VeriML is a research language for writing tactics and proof
assistants; developed at Yale during Antonis Stampoulis recently
finished thesis ( http://www.cs.yale.edu/homes/stampoulis/ ); they
have a HOL-like mode of interaction, where the user-interface to the
prover is directly a toplevel (forked from OCaml's toplevel), and they
use OCamlJIT2 to provide good performances within this model.

On Wed, Jan 16, 2013 at 11:32 PM, Benedikt Meurer
<benedikt.meurer@googlemail.com> wrote:
>
> On Jan 16, 2013, at 10:48 , Basile Starynkevitch <basile@starynkevitch.ne=
t> wrote:
>
>> On Wed, Jan 16, 2013 at 10:01:06AM +0100, Gerd Stolpmann wrote:
>>> Am 16.01.2013 09:56:55 schrieb(en) Francois Berenger:
>>>> On 01/16/2013 05:02 PM, r0ller@freemail.hu wrote:
>>>>> Hi All,
>>>>>
>>>>> By the way, is there any doc available about porting ocaml
>>>>> (google didn't find any) or any hint on how to move forward? I'd
>>>>> really like to have the native compiler on minix too.
>>>>
>>>> I think in the past it was possible to generate C code from OCaml
>>>> code.
>>>
>>> There is no real C backend (and has never been). The only thing you
>>> can do is to embed bytecode in a C-friendly way (what -output-obj
>>> does). But it is still bytecode.
>>
>> Benoit Vaugon & Michel Mauny worked recently on OcamlCC
>> (a translator from Ocaml bytecode to C)
>> http://oud.ocaml.org/2012/abstracts/oud2012-final10.pdf
>> https://github.com/ocaml-bytes/ocamlcc
>
> Very interesting work. I somehow missed that so far. I did something simi=
lar prior to starting with OCamlJIT2, but that turned out to be very slow w=
ith the compilation of the C code. I'd be interested to hear about results =
from generating LLVM code instead of C. Actually I'm still thinking that a =
tracing JIT using LLVM to optimize/generate code could be a viable option f=
or the bytecode runtime (this is one of the results we gathered while worki=
ng on Colin's thesis, the LLVM backend for the native code compiler).
>
> greets,
> Benedikt
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/arc/caml-list
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
