Return-Path: <agarwal1975@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id BDF287EEB4
	for <caml-list@sympa.inria.fr>; Fri,  1 Feb 2013 21:28:02 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  agarwal1975@gmail.com) identity=pra;
  client-ip=209.85.223.175;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="agarwal1975@gmail.com";
  x-sender="agarwal1975@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  agarwal1975@gmail.com designates 209.85.223.175 as permitted
  sender) identity=mailfrom; client-ip=209.85.223.175;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="agarwal1975@gmail.com";
  x-sender="agarwal1975@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-ie0-f175.google.com) identity=helo;
  client-ip=209.85.223.175;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="agarwal1975@gmail.com";
  x-sender="postmaster@mail-ie0-f175.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApsBAJkkDFHRVd+vmGdsb2JhbABFtg4BiRgIFg4BAQEBAQgJDQcUJ4JMGQEbHgMSCQddAREBBQEWDIgRAQMPDKFJgnCMNIJ7hGMKGScNWYh3AQUMkUIDiGaNMYEdjVIWKYQ8
X-IPAS-Result: ApsBAJkkDFHRVd+vmGdsb2JhbABFtg4BiRgIFg4BAQEBAQgJDQcUJ4JMGQEbHgMSCQddAREBBQEWDIgRAQMPDKFJgnCMNIJ7hGMKGScNWYh3AQUMkUIDiGaNMYEdjVIWKYQ8
X-IronPort-AV: E=Sophos;i="4.84,579,1355094000"; 
   d="scan'208";a="1053738"
Received: from mail-ie0-f175.google.com ([209.85.223.175])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 01 Feb 2013 21:28:02 +0100
Received: by mail-ie0-f175.google.com with SMTP id c12so3879025ieb.34
        for <caml-list@inria.fr>; Fri, 01 Feb 2013 12:28:01 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=x-received:mime-version:from:date:message-id:subject:to
         :content-type;
        bh=L6v0cWEjzSw20/BtOQkkEiHlNO8QU0eZv0V/bMQd55g=;
        b=aekBG8lQ+Oy30q1uZKrgY+sElwt0pixxR52Vg6Al6qulCzejgOoxB0xvcPB5z6Pfue
         PS29DhERTOKhDA/xpISPFsV86kcoXlftCLcI27D6w1MKECUK/GSIIeSgQHdAjNKsOYKB
         gSctpM8zncsFNQOnLOooqQWWaqMa2tdi6ZZHf63RSCkulZJFdMdknUlLxElDHlNbCcS3
         DbzcAT8vlwFRYJ8MfRrICO1D7ZH3jjNIF+OLgfa446hvqIHkdmOZw/2d8xp03IPkzdmO
         nKGruSwfOuytGKt4LqdkrkPaTcebwa+U5mYIzk9QxemqtZWMvJNbAaJMiri9RgIA6qsS
         ndLA==
X-Received: by 10.50.151.225 with SMTP id ut1mr2246920igb.110.1359750481059;
 Fri, 01 Feb 2013 12:28:01 -0800 (PST)
MIME-Version: 1.0
Received: by 10.64.47.229 with HTTP; Fri, 1 Feb 2013 12:27:40 -0800 (PST)
From: Ashish Agarwal <agarwal1975@gmail.com>
Date: Fri, 1 Feb 2013 15:27:40 -0500
Message-ID: <CAMu2m2KBig1m=nvG_hf_axVJj64bnrKJFGieaxduCW3z5-VyEQ@mail.gmail.com>
To: Caml List <caml-list@inria.fr>
Content-Type: multipart/alternative; boundary=e89a8f3b9fc9681fd704d4af9446
Subject: [Caml-list] deep coercion does not work for some stdlib types


--e89a8f3b9fc9681fd704d4af9446
Content-Type: text/plain; charset=ISO-8859-1

Section 7.9.2 of the manual gives this example:
http://caml.inria.fr/pub/docs/manual-ocaml-400/manual021.html#toc76

# module N : sig
     type t = private int
     val of_int: int -> t
     val to_int: t -> int
   end
  = struct
       type t = int
       let of_int n = assert (n >= 0); n
       let to_int n = n
    end;;

module N :  sig type t = private int val of_int : int -> t val to_int : t
-> int end

Deep coercion to a list of integers works as expected:

# let l = List.map N.of_int [1;2;3];;
val l : N.t list = [1; 2; 3]

# (l :> int list);;
- : int list = [1; 2; 3]

But for arrays it doesn't work:

# let a = Array.of_list l;;
val a : N.t array = [|1; 2; 3|]

# (a :> int array);;
Error: Type N.t array is not a subtype of int array

Is this because the array type does not have a variance annotation? If so,
why doesn't it?

I can get around this by mapping over the elements:

# Array.map (fun (x : N.t) -> (x :> int)) a;;

But am I right that coercions have no run-time cost, as where the mapping
will?

--e89a8f3b9fc9681fd704d4af9446
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Section 7.9.2 of the manual gives this example:<div><div><a href=3D"http://=
caml.inria.fr/pub/docs/manual-ocaml-400/manual021.html#toc76">http://caml.i=
nria.fr/pub/docs/manual-ocaml-400/manual021.html#toc76</a></div></div><div>

<br></div><div><div># module N : sig</div><div>=A0 =A0 =A0type t =3D privat=
e int</div><div>=A0 =A0 =A0val of_int: int -&gt; t</div><div>=A0 =A0 =A0val=
 to_int: t -&gt; int</div><div>=A0 =A0end</div><div>=A0 =3D struct</div><di=
v>=A0 =A0 =A0 =A0type t =3D int</div>

<div>=A0 =A0 =A0 =A0let of_int n =3D assert (n &gt;=3D 0); n</div><div>=A0 =
=A0 =A0 =A0let to_int n =3D n</div><div>=A0 =A0 end;;</div><div><br></div><=
div>module N : =A0sig type t =3D private int val of_int : int -&gt; t val t=
o_int : t -&gt; int end</div>

</div><div><br></div><div>Deep coercion to a list of integers works as expe=
cted:</div><div><br></div><div><div><div># let l =3D List.map N.of_int [1;2=
;3];;</div><div>val l : N.t list =3D [1; 2; 3]</div></div><div><br></div><d=
iv>

# (l :&gt; int list);;</div><div>- : int list =3D [1; 2; 3]</div></div><div=
><br></div><div>But for arrays it doesn&#39;t work:</div><div><br></div><di=
v><div># let a =3D Array.of_list l;;</div><div>val a : N.t array =3D [|1; 2=
; 3|]</div>

<div><br></div><div># (a :&gt; int array);;</div><div>Error: Type N.t array=
 is not a subtype of int array</div></div><div><br></div><div>Is this becau=
se the array type does not have a variance annotation? If so, why doesn&#39=
;t it?</div>

<div><br></div><div>I can get around this by mapping over the elements:</di=
v><div><br></div><div># Array.map (fun (x : N.t) -&gt; (x :&gt; int)) a;;</=
div><div><br></div><div>But am I right that coercions have no run-time cost=
, as where the mapping will?</div>

<div><br></div>

--e89a8f3b9fc9681fd704d4af9446--
