Return-Path: <edwin+ml-ocaml@etorok.net>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 46CDA7F20B
	for <caml-list@sympa.inria.fr>; Wed, 13 Feb 2013 23:06:46 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  edwin+ml-ocaml@etorok.net) identity=pra;
  client-ip=176.9.138.55;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="edwin+ml-ocaml@etorok.net";
  x-sender="edwin+ml-ocaml@etorok.net";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  edwin+ml-ocaml@etorok.net designates 176.9.138.55 as
  permitted sender) identity=mailfrom; client-ip=176.9.138.55;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="edwin+ml-ocaml@etorok.net";
  x-sender="edwin+ml-ocaml@etorok.net";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  postmaster@mail.etorok.net designates 176.9.138.55 as
  permitted sender) identity=helo; client-ip=176.9.138.55;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="edwin+ml-ocaml@etorok.net";
  x-sender="postmaster@mail.etorok.net";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgIFACQNHFGwCYo3/2dsb2JhbABFgmyDY7ogFnOCHwEBBAEjHQEBNgIECwsYAgIFFgsCAgkDAgECAUUTBgICF4dxBwOsPnGDSgEFjlEGgSOMIRODGoETlieQU4MIgWcCHg
X-IPAS-Result: AgIFACQNHFGwCYo3/2dsb2JhbABFgmyDY7ogFnOCHwEBBAEjHQEBNgIECwsYAgIFFgsCAgkDAgECAUUTBgICF4dxBwOsPnGDSgEFjlEGgSOMIRODGoETlieQU4MIgWcCHg
X-IronPort-AV: E=Sophos;i="4.84,658,1355094000"; 
   d="scan'208";a="2778217"
Received: from mail.etorok.net ([176.9.138.55])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 13 Feb 2013 23:06:45 +0100
Received: from [IPv6:2a02:2f09:4050:167:1e6f:65ff:fe23:db0d] (unknown [IPv6:2a02:2f09:4050:167:1e6f:65ff:fe23:db0d])
	by mail.etorok.net (Postfix) with ESMTPSA id B062B46B5
	for <caml-list@inria.fr>; Wed, 13 Feb 2013 23:06:44 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=etorok.net;
	s=MAILOUT; t=1360793205;
	bh=iuykH+0kv4RUKFsVsm/yLpEWIjdDEfR3eU/7mJbZYPM=;
	h=Message-ID:Date:From:MIME-Version:To:Subject:References:
	 In-Reply-To:Content-Type:Content-Transfer-Encoding;
	b=RL1vO/9rZPVC3dg8/XfevUcBgtnsTxL/VTJtB+IKF0O9/PgyTJtxol3xB7P20syxI
	 x3IZveW+IpR1Iy0amFgxBp+/907LpAjiR5j8SgteNqnGgqk7DbD8Jw7OysWpue3Qut
	 R8E9zADeTPiYg2kXNuJ9VC4YDANdKkNVIFZwsQbA=
Message-ID: <511C0E73.3040808@etorok.net>
Date: Thu, 14 Feb 2013 00:06:43 +0200
From: =?UTF-8?B?VMO2csO2ayBFZHdpbg==?= <edwin+ml-ocaml@etorok.net>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:10.0.12) Gecko/20130116 Icedove/10.0.12
MIME-Version: 1.0
To: caml-list@inria.fr
References: <1360775393.2379.8@samsung> <wf4nhfncc1.fsf@gmail.com>
In-Reply-To: <wf4nhfncc1.fsf@gmail.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-Virus-Scanned: clamav-milter 0.97.6 at mail
X-Virus-Status: Clean
Subject: Re: AW: AW: [Caml-list] geany as an ocaml ide

On 02/13/2013 11:17 PM, Wojciech Meyer wrote:
> Gerd Stolpmann <info@gerd-stolpmann.de> writes:
> 
>> I can well imagine such a toolkit - basically an editor without user
>> interface. It would just consist of the underlying modules, and would
>> solve all difficult tasks - like incremental indentation, or
>> transparent network file access. Other developers can then pick things
>> up - only parts, or everything - and I'm sure we'll see then a couple
>> of GUIs on top of this, some expressive, some minimalistic, some
>> specializing on certain domains (web, GUI, etc.), some cloning emacs.
>> And, as you write, existing editors can be "upgraded" by providing
>> bindings.
> 
> I think the major point we raised here, that we all want the same from the
> editor: syntax highlighting, parsing in the background, invoking tools,
> editing over the network etc. However, each of us, have a completely
> different taste of how we interact with the editor and how we use the
> GUI.

Don't forget that the preferred "GUI" is sometimes just a console application.
I'm using vim to edit files in remote ssh sessions (unless latency makes it impractical), and even
on the desktop I much prefer the console version: mostly because its so easy to put it into the background, do some other tasks (building / debugging), then bring back the editor to fix things, and so
on. For some reason I also find it easier to switch between console tabs in Konsole than between multiple windows.

> For one person this might be Emacs which wins, other prefer
> Code::Blocks. What matters here is not to focus on GUI but the features
> that would be accessible from the different frontends. (which seem to be
> a little hard, given diversity of the solutions on the market, but
> perhaps possible)

I agree that the focus should be on functionality, if I see an IDE with features I like my first thought would be:
 "thats nice, now how do I make that work in Vim?".
If an OCaml library, or even just a command-line tool is provided that implements feature X independently of the full editor,
then its a matter of writing some editor-specific scripts to hook it up.

On the other hand care should be taken when advertising the editor for beginners:
 - if editor lacks feature X, then a beginner might generalize that to "Ocaml is the language without X"
 - will the editor be maintained with new ocaml releases?
 - once the beginner is ready to move to more advanced features, are they required to abandon the editor, or will it be customizable with plugins?
 - once the beginner is ready to move on to using <his favourite editor>, how can the features of the ocaml editor be accomplished there?

Also are we talking about complete beginners to programming, or beginners to OCaml that know other languages already?

I think that having an ocaml-specific editor with all the features people typically want from the IDE
would not necessarily be bad though, in the sense that it shows whats *possible* for an OCaml editor. And it'd be something people can easily try out.
For example Java has an IDE written in Java that people (at least those that I know) like a lot, unfortunately its not the open source one: IntelliJ Idea.
If something that has similar features and ease of use could be implemented in OCaml that'd be a good advertisement for the language itself too.
On the other hand integrating the new features with existing editors *first* would IMHO probably be better.

> 
>> Let's call this "editor" ModelOnly (following the common
>> model/view/controller abstraction).
> 
> Certainly one does not exclude the other option!
> 
> I just drew the border of the simple editor, and design requriments for
> the "ModelOnly".
> 
>> I completely agree that there are totally different requirements if you
>> compare the needs of beginners and professionals. However, this is
>> mostly a matter of presentation, and implementation-wise, there is a
>> lot of overlap, and also an editor for beginners would profit from a
>> good model library.
> 
> One could think about different incarnations of the same editor, did
> anybody think about Emacs, beginner mode, with CUA bindings and limited
> access to the functionality just so to make it easily accessible for the
> beginners?

From what I've seen at beginners in other languages they used: (on Linux) Kate,
Emacs (using the menus, not the shortcuts), mcedit, Code::Blocks, Eclipse/Netbeans; Dev-C++ and the various
Visual* stuff on Win32.

Out of those Kate seems to be the easiest to just start using, as it has a terminal too (and it supports plugins/extensions),
but I don't know if / how well it'd work on Win32.
Unfortunately it is the first time I've heard of Geany, haven't seen anyone use it.

Best regards,
--Edwin
