Return-Path: <alain.frisch@lexifi.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id B588D7F30A
	for <caml-list@sympa.inria.fr>; Mon, 25 Feb 2013 16:45:52 +0100 (CET)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  alain.frisch@lexifi.com) identity=pra;
  client-ip=193.252.23.214;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="alain.frisch@lexifi.com";
  x-sender="alain.frisch@lexifi.com";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  alain.frisch@lexifi.com) identity=mailfrom;
  client-ip=193.252.23.214;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="alain.frisch@lexifi.com";
  x-sender="alain.frisch@lexifi.com";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@msa.smtpout.orange.fr) identity=helo;
  client-ip=193.252.23.214;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="alain.frisch@lexifi.com";
  x-sender="postmaster@msa.smtpout.orange.fr";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlwCAKGFK1HB/BfWYGdsb2JhbABFFoMivhyBGwMgKQMkgh8BAQU4QRALDgoJJQ8CRgYNAQcBARCIAwi+YI8OB4NAA5J8g0GBHYRYjXg
X-IPAS-Result: AlwCAKGFK1HB/BfWYGdsb2JhbABFFoMivhyBGwMgKQMkgh8BAQU4QRALDgoJJQ8CRgYNAQcBARCIAwi+YI8OB4NAA5J8g0GBHYRYjXg
X-IronPort-AV: E=Sophos;i="4.84,735,1355094000"; 
   d="scan'208";a="3394053"
Received: from msa05.smtpout.orange.fr (HELO msa.smtpout.orange.fr) ([193.252.23.214])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 25 Feb 2013 16:45:52 +0100
Received: from [192.168.1.120] ([92.151.93.34])
	by mwinf5d18 with ME
	id 4flp1l00T0kVFFg03flpe2; Mon, 25 Feb 2013 16:45:51 +0100
Message-ID: <512B872B.60809@lexifi.com>
Date: Mon, 25 Feb 2013 16:45:47 +0100
From: Alain Frisch <alain.frisch@lexifi.com>
Organization: LexiFi
User-Agent: Mozilla/5.0 (X11; Linux i686 on x86_64; rv:17.0) Gecko/20130107 Thunderbird/17.0.2
MIME-Version: 1.0
To: Gerd Stolpmann <info@gerd-stolpmann.de>
CC: Francois Berenger <berenger@riken.jp>, caml-list@inria.fr
References: <1361799073.2723.5@samsung>
In-Reply-To: <1361799073.2723.5@samsung>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Validation-by: alain.frisch@lexifi.com
Subject: Re: AW: [Caml-list] What is triggering a lot of GC work?

On 02/25/2013 02:31 PM, Gerd Stolpmann wrote:
> This can have counter-intuitive consequences. Yesterday I sped an
> imperative program up by adding allocations!

This is really an interesting scenario, thanks for sharing!

Two other approaches to addressing the same performance issue could have 
been:

  1. increase the size of the minor heap so that your array stays in it 
long enough;

  2. try to reduce the number of other allocations.

Did you try one of these approaches as well?  (1 in particular is 
particularly easy to test.)



Gabriel Scherer recently called the community to share representative 
"benchmarks", in order to help core developers target optimization 
efforts to where they are useful:

http://gallium.inria.fr/~scherer/gagallium/we-need-a-representative-benchmark-suite/

Gabriel: except from LexiFi's contribution, did you get any code?  Gerd: 
it would be great if you could share the code you mention above; is it 
an option?  There are a number of optimizations which have been proposed 
(related to boxing of floats, compilation strategy for let-binding on 
tuples, etc), which could reduce significantly the allocation rate of 
some programs.  In my experience, this reduction can be observed on 
real-sized programs, but it does not translate to noticeable speedups. 
It might be the case that your program would benefit from such 
optimizations.  Having access to the code would be very useful!


Alain
