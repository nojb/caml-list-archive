Return-Path: <berenger@riken.jp>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id D284F7F30A
	for <caml-list@sympa.inria.fr>; Tue, 26 Feb 2013 04:46:11 +0100 (CET)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  berenger@riken.jp) identity=pra; client-ip=134.160.33.161;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="berenger@riken.jp"; x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  berenger@riken.jp designates 134.160.33.161 as permitted
  sender) identity=mailfrom; client-ip=134.160.33.161;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="berenger@riken.jp"; x-conformance=sidf_compatible;
  x-record-type="v=spf1"
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  postmaster@postman.riken.jp designates 134.160.33.161 as
  permitted sender) identity=helo; client-ip=134.160.33.161;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="berenger@riken.jp";
  x-sender="postmaster@postman.riken.jp";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AkoBAGguLFGGoCGhmWdsb2JhbABFgzi+KIEZDgEBAQEBCAsLBxQngh8BAQU4QBELGAkWDwkDAgECAUUTBgIBAYgPDLABkAGPFRaDKgOIZ4oVg0GBHYRYjgY
X-IPAS-Result: AkoBAGguLFGGoCGhmWdsb2JhbABFgzi+KIEZDgEBAQEBCAsLBxQngh8BAQU4QBELGAkWDwkDAgECAUUTBgIBAYgPDLABkAGPFRaDKgOIZ4oVg0GBHYRYjgY
X-IronPort-AV: E=Sophos;i="4.84,736,1355094000"; 
   d="scan'208";a="4467577"
Received: from postman1.riken.jp (HELO postman.riken.jp) ([134.160.33.161])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 26 Feb 2013 04:46:10 +0100
Received: from postman.riken.jp (postman1.riken.jp [127.0.0.1])
	by postman.riken.jp (Postfix) with SMTP id ABF7332C0331;
	Tue, 26 Feb 2013 12:46:06 +0900 (JST)
Received: from [172.27.98.103] (rikad98.riken.jp [134.160.214.98])
	by postman.riken.jp (Postfix) with ESMTPA id 313B432A0047;
	Tue, 26 Feb 2013 12:46:06 +0900 (JST)
Message-ID: <512C2FFD.9070606@riken.jp>
Date: Tue, 26 Feb 2013 12:46:05 +0900
From: Francois Berenger <berenger@riken.jp>
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:17.0) Gecko/20130106 Thunderbird/17.0.2
MIME-Version: 1.0
To: caml-list@inria.fr
References: <512AC78E.7070908@riken.jp> <CAM3Ki75oGj2Y+55mHzGA5YKZ0bcxAENmMf6qrfM52PecRU82XQ@mail.gmail.com> <20130225183222.8f7eda023079e8ddf31e3f5f@gmail.com>
In-Reply-To: <20130225183222.8f7eda023079e8ddf31e3f5f@gmail.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-PMX-Version: 5.6.0.2009776, Antispam-Engine: 2.7.2.376379, Antispam-Data: 2013.2.26.33616
Subject: Re: [Caml-list] What is triggering a lot of GC work?

On 02/25/2013 07:32 PM, ygrek wrote:
> On Mon, 25 Feb 2013 08:02:54 +0000
> Mark Shinwell <mshinwell@janestreet.com> wrote:
>
>> On 25 February 2013 02:08, Francois Berenger <berenger@riken.jp> wrote:
>>> Is there a way to profile a program in order
>>> to know which places in the source code
>>> trigger a lot of garbage collection work?
>>
>> Well, as of last week, there is!
>>
>> I'm working on a compiler and runtime patch which allows the
>> identification, without excessive overhead, of every location (source
>> file name / line number) which causes a minor or major heap allocation
>> together with the number of words allocated at that point.
>>
>> There should be something available within the next couple of weeks.
>> It only works on native code compiled for x86-64 machines at present.
>> Currently it has only been tested on Linux---although I expect it to
>> work on other Unix-like platforms with little or no modification.
>
> Meanwhile you can use poor man's allocation profiler :
> - http://ygrek.org.ua/p/code/pmpa
> - https://sympa-roc.inria.fr/wws/arc/caml-list/2011-08/msg00050.html

Did the changes reported on mldonkey to do less allocations had a 
significant impact on performances?

