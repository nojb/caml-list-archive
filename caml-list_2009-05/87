Return-Path: <markus.mottl@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=2.0 required=5.0 tests=AWL,DNS_FROM_RFC_POST,
	SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 99E3EBC37
	for <caml-list@yquem.inria.fr>; Mon, 11 May 2009 20:49:17 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlMCAPsPCErRVdyuimdsb2JhbACDAJNPPwEBAQoJDAcPBaY6gRGOJAEDAQODfwWIEw
X-IronPort-AV: E=Sophos;i="4.40,329,1238968800"; 
   d="scan'208";a="25973810"
Received: from mail-fx0-f174.google.com ([209.85.220.174])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 11 May 2009 20:49:17 +0200
Received: by fxm22 with SMTP id 22so2899877fxm.9
        for <caml-list@inria.fr>; Mon, 11 May 2009 11:49:17 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:in-reply-to:references
         :date:message-id:subject:from:to:cc:content-type
         :content-transfer-encoding;
        bh=657mp4kjfZItx4jykmgAaOHP8haoK2qbn89fjiHJPrQ=;
        b=C3CJL8PF7Wn6J9FGLVIcEMVNpYh8ygYibzVbCfnpckyr5FA1bNtDnteL2pTmcFSksf
         K1SzaiMgICAYF0+IyjFrlMgDYZZcPoGMk+9gg/70QCmcU4V/fS5E252jpkDTyUMvhHae
         4tswRKH6bmRVWjucO6FWRXgV/0eDmCXmqb34M=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type:content-transfer-encoding;
        b=VcQw9fX0tTXnnA1UhGKxGKXFGXGiDuZo81fQnSPolBAe83hqJP7VrKnIWrgSyFREGn
         dkPE0WZrqKcW/mrv7xkp//EJrif6MFzK4ELqOsJpXivlmNhQlczdnB1u2FWfRUvJ6A9C
         VQ54Xv0UJT5X7DcB1ceGcRFmkquRuFpbPy0/Q=
MIME-Version: 1.0
Received: by 10.204.55.140 with SMTP id u12mr6856661bkg.98.1242067756969; Mon, 
	11 May 2009 11:49:16 -0700 (PDT)
In-Reply-To: <FCF3D545-5CAA-4290-96EF-395D9160E91D@cs.princeton.edu>
References: <FCF3D545-5CAA-4290-96EF-395D9160E91D@cs.princeton.edu>
Date: Mon, 11 May 2009 14:49:16 -0400
Message-ID: <f8560b80905111149g7acfff67q32a79519b7a96b2c@mail.gmail.com>
Subject: Re: [Caml-list] float array/record unboxing
From: Markus Mottl <markus.mottl@gmail.com>
To: Yitzhak Mandelbaum <yitzhakm@cs.princeton.edu>
Cc: Caml-list List <caml-list@inria.fr>
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
X-Spam: no; 0.00; unboxing:01 markus:01 mottl:01 markus:01 mottl:01 yitzhak:01 mandelbaum:01 arrays:01 unboxed:01 functor:01 inlined:01 functor:01 foo:01 unboxed:01 ocaml:01 

On Mon, May 11, 2009 at 13:49, Yitzhak Mandelbaum
<yitzhakm@cs.princeton.edu> wrote:
> Does anyone know whether float arrays/records are unboxed if float is use=
d
> to instantiate a =A0type parameter? E.g.
[snip]

Since functor applications are currently not inlined, the generated
code for the functor body has no way of seeing that its dealing with
an all-floats record.  Hence the record will contain boxed floats.

> Is M.foo an unboxed array of floats (as per Chapter 18.3.2 in the manual)=
 or
> not? Empirical evidence suggests that the floats *are* boxed. If this is =
the
> case, can anyone point me to where this feature is documented?

I don't think this is documented anywhere, since this is an
implementation detail that (though unlikely) might even change in the
future.

Regards,
Markus

--=20
Markus Mottl        http://www.ocaml.info        markus.mottl@gmail.com

