Return-Path: <christoph.hoeger@tu-berlin.de>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 4FF587EF5E
	for <caml-list@sympa.inria.fr>; Thu, 14 Jul 2016 20:44:25 +0200 (CEST)
IronPort-PHdr: 9a23:Hk8HYBGUWJRypqiUTWA8N51GYnF86YWxBRYc798ds5kLTJ75osSwAkXT6L1XgUPTWs2DsrQf2rKQ7/qrADVRqb+681k6OKRWUBEEjchE1ycBO+WiTXPBEfjxciYhF95DXlI2t1uyMExSBdqsLwaK+i760zceF13FOBZvIaytQ8iJ3pzxi7r5osSCKyxzxxOFKYtoKxu3qQiD/uI3uqBFbpgL9x3Sv3FTcP5Xz247bXianhL7+9vitMU7q3cY6Lod8JtLWKD+N7kjQKZDRGAtOmUxocnqrgXrTA2V53JaXH9AwTRSBA2QxxHgX4zttTP6gcrj1ySAdZn9Tao1Qiil96ctSBjlhyodHyIktWvakMhxiuRXrUTy9FRE34fIbdTNZ7JFdaTHcIZCSA==
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=christoph.hoeger@tu-berlin.de; spf=None smtp.mailfrom=christoph.hoeger@tu-berlin.de; spf=None smtp.helo=postmaster@mail.tu-berlin.de
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  christoph.hoeger@tu-berlin.de) identity=pra;
  client-ip=130.149.7.33;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="christoph.hoeger@tu-berlin.de";
  x-sender="christoph.hoeger@tu-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  christoph.hoeger@tu-berlin.de) identity=mailfrom;
  client-ip=130.149.7.33;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="christoph.hoeger@tu-berlin.de";
  x-sender="christoph.hoeger@tu-berlin.de";
  x-conformance=sidf_compatible
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail.tu-berlin.de) identity=helo;
  client-ip=130.149.7.33;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="christoph.hoeger@tu-berlin.de";
  x-sender="postmaster@mail.tu-berlin.de";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0DWAADT3IdXhyEHlYJchD5SumeGGQKBMzwQAQEBAQEBAQERAQEBCgsJCSEvgjIVghYBBSMPAVYLGgImAgJXBg0GAgEBiCwEsnKOODGBAYchglWHQYJaBZkfiQ2PF4VmgmuNLjWCOYFZbIduAQEB
X-IPAS-Result: A0DWAADT3IdXhyEHlYJchD5SumeGGQKBMzwQAQEBAQEBAQERAQEBCgsJCSEvgjIVghYBBSMPAVYLGgImAgJXBg0GAgEBiCwEsnKOODGBAYchglWHQYJaBZkfiQ2PF4VmgmuNLjWCOYFZbIduAQEB
X-IronPort-AV: E=Sophos;i="5.28,364,1464645600"; 
   d="scan'208";a="184857267"
Received: from mail.tu-berlin.de ([130.149.7.33])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 14 Jul 2016 20:44:24 +0200
X-tubIT-Incoming-IP: 91.66.20.202
Received: from ip5b4214ca.dynamic.kabel-deutschland.de ([91.66.20.202] helo=[192.168.178.42])
	by mail.tu-berlin.de (exim-4.84_2/mailfrontend-5) with esmtpsa [TLSv1.2:DHE-RSA-AES128-SHA:128]
	for <caml-list@inria.fr>
	id 1bNlcU-0002mA-8X; Thu, 14 Jul 2016 20:44:23 +0200
References: <2a4393e2-eea1-1876-f29a-188ed992e5b4@tu-berlin.de>
 <CAGrdgiV_u0GeE4gNqnWcBncO0m9EG=0FV2OakejHa=kgXdg9wg@mail.gmail.com>
To: caml users <caml-list@inria.fr>
From: =?UTF-8?Q?Christoph_H=c3=b6ger?= <christoph.hoeger@tu-berlin.de>
Organization: =?UTF-8?Q?Technische_Universit=c3=a4t_Berlin?=
Message-ID: <b169d93e-84b0-06e8-c9a1-c77d6e1722d6@tu-berlin.de>
Date: Thu, 14 Jul 2016 20:44:22 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101
 Thunderbird/45.1.1
MIME-Version: 1.0
In-Reply-To: <CAGrdgiV_u0GeE4gNqnWcBncO0m9EG=0FV2OakejHa=kgXdg9wg@mail.gmail.com>
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: 8bit
X-PMX-Version: 6.0.0.2142326, Antispam-Engine: 2.7.2.2107409, Antispam-Data: 2016.7.14.183617
X-PMX-Spam: Gauge=IIIIIII, Probability=0%, Report=''
Subject: Re: [Caml-list] Map that maintains insertion-order on keys

Am 14.07.2016 um 20:35 schrieb Jesper Louis Andersen:
> Hi,
> 
> Could you give some small example of what you want or a more precise
> definition? I can think of at least 3 ways to parse meaning out of
> "gives keys in order of insertion", and I don't know which you might want.

What I mean is that a map that is created by consecutive Map.add
applications, yields the keys in the order of the add() applications, i.e.

Map.keys (Map.add k_n v_n (Map.add k_(n-1) v_(n-1) (Map.add ... (Map.add
k_1 v_1 Map.empty))))) =!= [k_1; ...; k_(n-1); k_n]

it could also yield [k_n; k_(n-1); ... ;k_1], that does not matter that
much.





-- 
Christoph Höger

Technische Universität Berlin
Fakultät IV - Elektrotechnik und Informatik
Übersetzerbau und Programmiersprachen

Sekr. TEL12-2, Ernst-Reuter-Platz 7, 10587 Berlin

Tel.: +49 (30) 314-24890
E-Mail: christoph.hoeger@tu-berlin.de
