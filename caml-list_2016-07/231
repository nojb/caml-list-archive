Return-Path: <daniel.buenzli@erratique.ch>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id B26C97EF1E
	for <caml-list@sympa.inria.fr>; Sat, 23 Jul 2016 04:17:39 +0200 (CEST)
IronPort-PHdr: 9a23:ihI9ohSbMKYsOxt5YF200Yc4Qdpsv+yvbD5Q0YIujvd0So/mwa64bBWN2/xhgRfzUJnB7Loc0qyN4vimBDxLvMvJmUtBWaQEbwUCh8QSkl5oK+++Imq/EsTXaTcnFt9JTl5v8iLzG0FUHMHjew+a+SXqvnYsExnyfTB4Ov7yUtaLyZ/mj6bvq9aOPk1hv3mUWftKNhK4rAHc5IE9oLBJDeIP8CbPuWZCYO9MxGlldhq5lhf44dqsrtY4q3wD89pozcNLUL37cqIkVvQYSW1+ayFmrPHs4CLbTBGI/TMxVmQRih1VBw/epEXhU5PwtTP9q8Jy3SCbOYv9SrViChq46KI+ZBbuiSoDABSt9nPTi4QkgKtdoR+l4RZizojGZIC9OeBkd7/cZM4XA2FBCJUCHxddC5+xOtNcR9EKOvxV+syk/wMD
Authentication-Results: mail2-smtp-roc.national.inria.fr; spf=None smtp.pra=daniel.buenzli@erratique.ch; spf=None smtp.mailfrom=daniel.buenzli@erratique.ch; spf=None smtp.helo=postmaster@smtp.webfaction.com
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  daniel.buenzli@erratique.ch) identity=pra;
  client-ip=74.55.86.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="daniel.buenzli@erratique.ch";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  daniel.buenzli@erratique.ch) identity=mailfrom;
  client-ip=74.55.86.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="daniel.buenzli@erratique.ch";
  x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@smtp.webfaction.com) identity=helo;
  client-ip=74.55.86.74;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="daniel.buenzli@erratique.ch";
  x-sender="postmaster@smtp.webfaction.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0D5AAAD05JXgUpWN0pev26GHAKBbBABAQEBAQEBAREBAQkNCQkXMYIyBAESAYITAQQBI1YFCwsODAIZDQICRxAGG4ggCASsNI06AQEIAQEBASOBAYl2hECDASuCLwEEmSaYMg6FaJAhNYQUiV8BAQE
X-IPAS-Result: A0D5AAAD05JXgUpWN0pev26GHAKBbBABAQEBAQEBAREBAQkNCQkXMYIyBAESAYITAQQBI1YFCwsODAIZDQICRxAGG4ggCASsNI06AQEIAQEBASOBAYl2hECDASuCLwEEmSaYMg6FaJAhNYQUiV8BAQE
X-IronPort-AV: E=Sophos;i="5.28,406,1464645600"; 
   d="scan'208";a="227661399"
Received: from mail6.webfaction.com (HELO smtp.webfaction.com) ([74.55.86.74])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 23 Jul 2016 04:17:38 +0200
Received: from [192.168.5.63] (173-12.dsl.iskon.hr [89.164.173.12])
	by smtp.webfaction.com (Postfix) with ESMTP id 59BE8210B724;
	Sat, 23 Jul 2016 02:17:36 +0000 (UTC)
Date: Sat, 23 Jul 2016 04:17:33 +0200
From: =?utf-8?Q?Daniel_B=C3=BCnzli?= <daniel.buenzli@erratique.ch>
To: Spiros Eliopoulos <seliopou@gmail.com>
Cc: OCaml <caml-list@inria.fr>
Message-ID: <8B3345BC17954C9F8DC59E1C0AFBE09D@erratique.ch>
In-Reply-To: <CAEkQQgJrOFD=oe-ZaCgiTA69ZAeZJDa6PJmj-H2FHL5KtGUXGA@mail.gmail.com>
References: <CAEkQQgKO+JnpDw4YDaY19EqU_a9=Hwh8a3+w0+TUnU4vqTn7tA@mail.gmail.com>
 <F989DEB4A94D49D7962B03033C4A3038@erratique.ch>
 <CAEkQQgJrOFD=oe-ZaCgiTA69ZAeZJDa6PJmj-H2FHL5KtGUXGA@mail.gmail.com>
X-Mailer: sparrow 1.6.4 (build 1178)
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline
Subject: Re: [Caml-list] ANN: angstrom

Le vendredi, 22 juillet 2016 =C3=A0 23:46, Spiros Eliopoulos a =C3=A9crit :
> Angstrom's targeting the use case of network protocols and serialization =
formats, a use case where line/column numbers are of dubious value,

Well when you are dealing with large malformed json streams it's nice to kn=
ow where they error=E2=80=A6 But if you target binary data only a byte coun=
t should suffice.
=20=20
> From what I understand, this would require users to modify input rather t=
han putting any correction logic into the parser itself.

No the parser itself is in charge of performing this. A very simple example=
 of this is when you get an UTF-8 decode error. You want to be able to repo=
rt the error and let the client restart the decode which is easy to do by f=
inding a synchronization byte in the input. But again this may not be usefu=
l for binary protocols, it is however useful for decoding text and parsing =
languages.
=20=20
> Doing that would seem to muddle application and library performance measu=
rements within the benchmark. Arguably, constructing a generic in-memory re=
presentation is doing the same in essence.

Not really, it can completely change the outcome of your benchmarks. For ex=
ample jsonm allows you to completely eschew going through a generic in-memo=
ry representation before being able to extract the data.=20=20

Best,=20=20

Daniel
