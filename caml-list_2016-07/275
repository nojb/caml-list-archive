Return-Path: <contact@danny-willems.be>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 707EE7FF37
	for <caml-list@sympa.inria.fr>; Sun, 31 Jul 2016 15:38:53 +0200 (CEST)
IronPort-PHdr: 9a23:rTk0UBHL4Jzw/zWmqzznFZ1GYnF86YWxBRYc798ds5kLTJ75r8qwAkXT6L1XgUPTWs2DsrQf2rKQ7PurBzxIyK3CmUhKSIZLWR4BhJdetC0bK+nBN3fGKuX3ZTcxBsVIWQwt1Xi6NU9IBJS2PAWK8TWM5DIfUi/yKRBybrysXNWD14LojKvsq9X6WEZhvHKFe7R8LRG7/036l/I9ps9cEJs30QbDuXBSeu5blitCLFOXmAvgtI/rpMYwuxJrpuk5+sVcfaL/dqU+BfwEXXV1e1wysejiqQXDQBTH3XISXGgM2k5NKxPM4h/3RNH0v32+/uF03S3fOcztUZg1Xy6j5uFlUkzGkiACYhIw9mfGwvNxiKZWpQnp8xd4xZLda529OPN4eLKYYtIeQWdERYBbWnoSUcuHc4ITAr9Zbq5jpI7nqg5S/BY=
Authentication-Results: mail3-smtp-sop.national.inria.fr; spf=None smtp.pra=contact@danny-willems.be; spf=Pass smtp.mailfrom=contact@danny-willems.be; spf=None smtp.helo=postmaster@6.mo2.mail-out.ovh.net
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  contact@danny-willems.be) identity=pra;
  client-ip=87.98.165.38;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="contact@danny-willems.be";
  x-sender="contact@danny-willems.be";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  contact@danny-willems.be designates 87.98.165.38 as permitted
  sender) identity=mailfrom; client-ip=87.98.165.38;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="contact@danny-willems.be";
  x-sender="contact@danny-willems.be";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@6.mo2.mail-out.ovh.net) identity=helo;
  client-ip=87.98.165.38;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="contact@danny-willems.be";
  x-sender="postmaster@6.mo2.mail-out.ovh.net";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: A0D7AAAZ/51XhyalYlddhBsqUgGnQZNGJIV5AoEkPBABAQEBAQEBAREBAQEKCwkJGS+CMgQDgiYBBSMERxsLDgoNGgMCAkUBEQYBDAYCAQEOiAUDGwqwM4suA4QeAQEBBwEBAQEBIoUygnCCVYRMgnWCWgWGWQySTlWFQ4sghxqFbIwwg3c1gjERC4FObIgDAQEB
X-IPAS-Result: A0D7AAAZ/51XhyalYlddhBsqUgGnQZNGJIV5AoEkPBABAQEBAQEBAREBAQEKCwkJGS+CMgQDgiYBBSMERxsLDgoNGgMCAkUBEQYBDAYCAQEOiAUDGwqwM4suA4QeAQEBBwEBAQEBIoUygnCCVYRMgnWCWgWGWQySTlWFQ4sghxqFbIwwg3c1gjERC4FObIgDAQEB
X-IronPort-AV: E=Sophos;i="5.28,450,1464645600"; 
   d="scan'208,217";a="186478640"
Received: from 6.mo2.mail-out.ovh.net ([87.98.165.38])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-GCM-SHA384; 31 Jul 2016 15:38:51 +0200
Received: from player771.ha.ovh.net (b9.ovh.net [213.186.33.59])
	by mo2.mail-out.ovh.net (Postfix) with ESMTP id 36053FFA523
	for <caml-list@inria.fr>; Sun, 31 Jul 2016 15:38:51 +0200 (CEST)
Received: from [192.168.1.40] (LFbn-1-2789-184.w86-252.abo.wanadoo.fr [86.252.217.184])
	(Authenticated sender: contact@danny-willems.be)
	by player771.ha.ovh.net (Postfix) with ESMTPSA id 09F08840065;
	Sun, 31 Jul 2016 15:38:50 +0200 (CEST)
To: Matthew Saffer <m@saffer.me>, caml-list@inria.fr
References: <b9bde195-ccb3-9371-c423-a7ad39ab7cdb@danny-willems.be>
 <8ce14b7d-32ec-0922-8eb5-8adc1e308835@danny-willems.be>
 <CAAefXT_Q217YGCR9=kmiJWT5U47TfYKvt8TD5B0yo+binE52Cg@mail.gmail.com>
From: Danny Willems <contact@danny-willems.be>
Message-ID: <b5b9a13b-ba68-37d9-4cf8-8e946108fbb2@danny-willems.be>
Date: Sun, 31 Jul 2016 15:38:49 +0200
User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101
 Thunderbird/45.2.0
MIME-Version: 1.0
In-Reply-To: <CAAefXT_Q217YGCR9=kmiJWT5U47TfYKvt8TD5B0yo+binE52Cg@mail.gmail.com>
Content-Type: multipart/alternative;
 boundary="------------F48D81BF7A8AE846400B07EA"
X-Ovh-Tracer-Id: 18404804304201196831
X-VR-SPAMSTATE: OK
X-VR-SPAMSCORE: 49
X-VR-SPAMCAUSE: gggruggvucftvghtrhhoucdtuddrfeeltddrjeefgdeikecutefuodetggdotefrodftvfcurfhrohhfihhlvgemucfqggfjnecuuegrihhlohhuthemuceftddtnecuogfuuhhsphgvtghtffhomhgrihhnucdlgeelmd
Subject: Re: [Caml-list] OCaml-ctypes compilation with library in a
 different directory

This is a multi-part message in MIME format.
--------------F48D81BF7A8AE846400B07EA
Content-Type: text/plain; charset=utf-8; format=flowed
Content-Transfer-Encoding: 7bit

I found this post on GitHub: 
https://github.com/ocamllabs/ocaml-ctypes/issues/236
I added the arguments to pass to ld and the mlx_init error disappear 
(now I've an error about strlcpy used by minilibx which is not defined 
on Linux).

So my command is
```
ocamlfind ocamlopt  \
   -linkpkg -package ctypes.foreign \
   -ccopt -I/usr/local/lib \
   -cclib "-Wl,--whole-archive" \
   -cclib -lmlx  \
   -cclib "-Wl,--no-whole-archive" \
   -cclib "-Wl,-E" \
   -cclib -lX11 \
   -cclib -lXext \
   minilibx.cmx \
   hello.ml \
   -o hello.native
```

On 07/31/2016 03:27 PM, Matthew Saffer wrote:
>
> If ld can't find the library, don't you need to change your LD_LOAD_PATH?
>
> On Sun, Jul 31, 2016, 06:35 Danny Willems <contact@danny-willems.be 
> <mailto:contact@danny-willems.be>> wrote:
>
>     If I use a relative path (for example -cclib -L../minilibx) with
>     ocamlopt, it compiles but I have the same issue when running the
>     binary.
>
>     On 07/31/2016 12:22 PM, Danny Willems wrote:
>     > Hello,
>     >
>     > I'm writing a binding OCaml to the C library "minilibx", here a
>     mirror
>     > of the library https://github.com/dannywillems/minilibx.
>     >
>     > The Makefile installs the library file libmlx.a in
>     /usr/local/lib and
>     > you have to add the flags -lmlx -lX11 and -lXext to compile. So you
>     > have something like that to compile a test file written in C:
>     >
>     > ```
>     > gcc  -I /usr/local/include -L/usr/local/lib test.c -lmlx  -lX11
>     -lXext
>     > ```
>     >
>     > I wrote a simple binding to mlx_init, mlx_new_window and mlx_loop in
>     > minilibx.ml <http://minilibx.ml>:
>     >
>     > ```
>     > open Ctypes
>     > open Foreign
>     >
>     > type mlx_ptr = unit ptr
>     > type mlx_win = unit ptr
>     >
>     > let mlx_ptr : mlx_ptr typ = ptr void
>     > let mlx_win : mlx_win typ = ptr void
>     >
>     > let mlx_init =
>     >   foreign "mlx_init" (void @-> returning mlx_ptr)
>     >
>     > let mlx_new_window =
>     >   foreign "mlx_new_window" (mlx_ptr @-> int @-> int @-> string @->
>     > returning mlx_win)
>     >
>     > let mlx_loop =
>     >   foreign "mlx_loop" (mlx_ptr @-> returning void)
>     > ```
>     > with the corresponding interface in minilibx.mli and compile it with
>     >
>     > ```
>     > ocamlfind ocamlc -c -package ctypes.foreign -linkpkg minilibx.mli
>     >
>     > ocamlfind ocamlc -c -package ctypes.foreign -linkpkg minilibx.ml
>     <http://minilibx.ml>
>     > ```
>     >
>     > Now I wrote a test file named hello.ml <http://hello.ml>
>     > ```
>     > let () =
>     >   let i = Minilibx.mlx_init () in
>     >   let w = Minilibx.mlx_new_window i 640 480 "Hello, World" in
>     >   Minilibx.mlx_loop i
>     > ```
>     >
>     > and compile it with
>     >
>     > ```
>     > ocamlfind ocamlc -o hello -ccopt -L/usr/local/lib -cclib -lmlx
>     -cclib
>     > -lX11 -cclib -lXext minilibx.cmo -package ctypes.foreign -linkpkg
>     > hello.ml <http://hello.ml>
>     > ```
>     > and when I execute hello, I have
>     >
>     > ```
>     > Fatal error: exception
>     >
>     Dl.DL_error("/home/dannywillems/.opam/ctypes/lib/stublibs/dllctypes-foreign-base_stubs.so:
>     > undefined symbol: mlx_init")
>     > ```
>     >
>     > So linking seems not working. But I can't find why.
>     >
>     > If I try to compile in native with ocamlopt (cmo -> cmx), linking is
>     > not done at compile time:
>     > ```
>     > /usr/bin/ld: cannot find -lmlx
>     > collect2: error: ld returned 1 exit status
>     > File "caml_startup", line 1:
>     > Error: Error during linking
>     > ```
>     >
>     > Am I using the right option (-ccopt -L/usr/local/lib)? And why
>     ocamlc
>     > doesn't output the error linking message?
>     >
>     > Thank you for you help.
>     >
>     >
>
>
>     --
>     Caml-list mailing list.  Subscription management and archives:
>     https://sympa.inria.fr/sympa/arc/caml-list
>     Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>     Bug reports: http://caml.inria.fr/bin/caml-bugs
>


--------------F48D81BF7A8AE846400B07EA
Content-Type: text/html; charset=utf-8
Content-Transfer-Encoding: 8bit

<html>
  <head>
    <meta content="text/html; charset=utf-8" http-equiv="Content-Type">
  </head>
  <body bgcolor="#FFFFFF" text="#000000">
    <div class="moz-cite-prefix">I found this post on GitHub:
      <a class="moz-txt-link-freetext" href="https://github.com/ocamllabs/ocaml-ctypes/issues/236">https://github.com/ocamllabs/ocaml-ctypes/issues/236</a><br>
      I added the arguments to pass to ld and the mlx_init error
      disappear (now I've an error about strlcpy used by minilibx which
      is not defined on Linux).<br>
      <br>
      So my command is<br>
      ```<br>
      ocamlfind ocamlopt  \<br>
        -linkpkg -package ctypes.foreign \<br>
        -ccopt -I/usr/local/lib \<br>
        -cclib "-Wl,--whole-archive" \<br>
        -cclib -lmlx  \<br>
        -cclib "-Wl,--no-whole-archive" \<br>
        -cclib "-Wl,-E" \<br>
        -cclib -lX11 \<br>
        -cclib -lXext \<br>
        minilibx.cmx \<br>
        hello.ml \<br>
        -o hello.native<br>
      ```<br>
      <br>
      On 07/31/2016 03:27 PM, Matthew Saffer wrote:<br>
    </div>
    <blockquote
cite="mid:CAAefXT_Q217YGCR9=kmiJWT5U47TfYKvt8TD5B0yo+binE52Cg@mail.gmail.com"
      type="cite"><br>
      If ld can't find the library, don't you need to change your
      LD_LOAD_PATH?
      <div><br>
        <div class="gmail_quote">
          <div dir="ltr">On Sun, Jul 31, 2016, 06:35 Danny Willems &lt;<a
              moz-do-not-send="true"
              href="mailto:contact@danny-willems.be">contact@danny-willems.be</a>&gt;
            wrote:<br>
          </div>
          <blockquote class="gmail_quote" style="margin:0 0 0
            .8ex;border-left:1px #ccc solid;padding-left:1ex">If I use a
            relative path (for example -cclib -L../minilibx) with<br>
            ocamlopt, it compiles but I have the same issue when running
            the binary.<br>
            <br>
            On 07/31/2016 12:22 PM, Danny Willems wrote:<br>
            &gt; Hello,<br>
            &gt;<br>
            &gt; I'm writing a binding OCaml to the C library
            "minilibx", here a mirror<br>
            &gt; of the library <a moz-do-not-send="true"
              href="https://github.com/dannywillems/minilibx"
              rel="noreferrer" target="_blank">https://github.com/dannywillems/minilibx</a>.<br>
            &gt;<br>
            &gt; The Makefile installs the library file libmlx.a in
            /usr/local/lib and<br>
            &gt; you have to add the flags -lmlx -lX11 and -lXext to
            compile. So you<br>
            &gt; have something like that to compile a test file written
            in C:<br>
            &gt;<br>
            &gt; ```<br>
            &gt; gcc  -I /usr/local/include -L/usr/local/lib test.c
            -lmlx  -lX11 -lXext<br>
            &gt; ```<br>
            &gt;<br>
            &gt; I wrote a simple binding to mlx_init, mlx_new_window
            and mlx_loop in<br>
            &gt; <a moz-do-not-send="true" href="http://minilibx.ml"
              rel="noreferrer" target="_blank">minilibx.ml</a>:<br>
            &gt;<br>
            &gt; ```<br>
            &gt; open Ctypes<br>
            &gt; open Foreign<br>
            &gt;<br>
            &gt; type mlx_ptr = unit ptr<br>
            &gt; type mlx_win = unit ptr<br>
            &gt;<br>
            &gt; let mlx_ptr : mlx_ptr typ = ptr void<br>
            &gt; let mlx_win : mlx_win typ = ptr void<br>
            &gt;<br>
            &gt; let mlx_init =<br>
            &gt;   foreign "mlx_init" (void @-&gt; returning mlx_ptr)<br>
            &gt;<br>
            &gt; let mlx_new_window =<br>
            &gt;   foreign "mlx_new_window" (mlx_ptr @-&gt; int @-&gt;
            int @-&gt; string @-&gt;<br>
            &gt; returning mlx_win)<br>
            &gt;<br>
            &gt; let mlx_loop =<br>
            &gt;   foreign "mlx_loop" (mlx_ptr @-&gt; returning void)<br>
            &gt; ```<br>
            &gt; with the corresponding interface in minilibx.mli and
            compile it with<br>
            &gt;<br>
            &gt; ```<br>
            &gt; ocamlfind ocamlc -c -package ctypes.foreign -linkpkg
            minilibx.mli<br>
            &gt;<br>
            &gt; ocamlfind ocamlc -c -package ctypes.foreign -linkpkg <a
              moz-do-not-send="true" href="http://minilibx.ml"
              rel="noreferrer" target="_blank">minilibx.ml</a><br>
            &gt; ```<br>
            &gt;<br>
            &gt; Now I wrote a test file named <a
              moz-do-not-send="true" href="http://hello.ml"
              rel="noreferrer" target="_blank">hello.ml</a><br>
            &gt; ```<br>
            &gt; let () =<br>
            &gt;   let i = Minilibx.mlx_init () in<br>
            &gt;   let w = Minilibx.mlx_new_window i 640 480 "Hello,
            World" in<br>
            &gt;   Minilibx.mlx_loop i<br>
            &gt; ```<br>
            &gt;<br>
            &gt; and compile it with<br>
            &gt;<br>
            &gt; ```<br>
            &gt; ocamlfind ocamlc -o hello -ccopt -L/usr/local/lib
            -cclib -lmlx -cclib<br>
            &gt; -lX11 -cclib -lXext minilibx.cmo -package
            ctypes.foreign -linkpkg<br>
            &gt; <a moz-do-not-send="true" href="http://hello.ml"
              rel="noreferrer" target="_blank">hello.ml</a><br>
            &gt; ```<br>
            &gt; and when I execute hello, I have<br>
            &gt;<br>
            &gt; ```<br>
            &gt; Fatal error: exception<br>
            &gt;
Dl.DL_error("/home/dannywillems/.opam/ctypes/lib/stublibs/dllctypes-foreign-base_stubs.so:<br>
            &gt; undefined symbol: mlx_init")<br>
            &gt; ```<br>
            &gt;<br>
            &gt; So linking seems not working. But I can't find why.<br>
            &gt;<br>
            &gt; If I try to compile in native with ocamlopt (cmo -&gt;
            cmx), linking is<br>
            &gt; not done at compile time:<br>
            &gt; ```<br>
            &gt; /usr/bin/ld: cannot find -lmlx<br>
            &gt; collect2: error: ld returned 1 exit status<br>
            &gt; File "caml_startup", line 1:<br>
            &gt; Error: Error during linking<br>
            &gt; ```<br>
            &gt;<br>
            &gt; Am I using the right option (-ccopt -L/usr/local/lib)?
            And why ocamlc<br>
            &gt; doesn't output the error linking message?<br>
            &gt;<br>
            &gt; Thank you for you help.<br>
            &gt;<br>
            &gt;<br>
            <br>
            <br>
            --<br>
            Caml-list mailing list.  Subscription management and
            archives:<br>
            <a moz-do-not-send="true"
              href="https://sympa.inria.fr/sympa/arc/caml-list"
              rel="noreferrer" target="_blank">https://sympa.inria.fr/sympa/arc/caml-list</a><br>
            Beginner's list: <a moz-do-not-send="true"
              href="http://groups.yahoo.com/group/ocaml_beginners"
              rel="noreferrer" target="_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
            Bug reports: <a moz-do-not-send="true"
              href="http://caml.inria.fr/bin/caml-bugs" rel="noreferrer"
              target="_blank">http://caml.inria.fr/bin/caml-bugs</a><br>
          </blockquote>
        </div>
      </div>
    </blockquote>
    <p><br>
    </p>
  </body>
</html>

--------------F48D81BF7A8AE846400B07EA--
