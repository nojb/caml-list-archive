Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA31048; Mon, 13 Aug 2001 21:18:31 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA31052 for <caml-list@pauillac.inria.fr>; Mon, 13 Aug 2001 21:18:30 +0200 (MET DST)
Received: from ligarius-fe0.ultra.net (ligarius-fe0.ultra.net [146.115.8.189])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f7DJITv04102
	for <caml-list@inria.fr>; Mon, 13 Aug 2001 21:18:29 +0200 (MET DST)
Received: from vaiobambino (d129.dial-8.cmb.ma.ultra.net [209.6.71.129]) by ligarius-fe0.ultra.net (8.8.8/ult/n26500/mtc.v2) with SMTP id PAA27824 for <caml-list@inria.fr>; Mon, 13 Aug 2001 15:18:22 -0400 (EDT)
From: "Jeff Henrikson" <jehenrik@yahoo.com>
To: <caml-list@inria.fr>
Subject: [Caml-list] Confusion about camlidl capabilities? other tools?
Date: Mon, 13 Aug 2001 15:26:46 -0400
Message-ID: <001701c1242d$e44770e0$0b01a8c0@mit.edu>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook 8.5, Build 4.71.2173.0
X-MimeOLE: Produced By Microsoft MimeOLE V5.00.2615.200
Importance: Normal
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hi,

Reading the documentation of camlidl, it says that caml objects can be exported for use in C/C++ programs.  Looking at the source
code, the support for this looks minimal.  I see the camlidldll script, which is just a shell script that links a caml program with
some executable code.  If this is some sort of automatic dispatch interface generator, this is not what I want.  I want real C
header files from just plain unannotated mli.  Preferably a system with ability to map variants into C struct/unions coupled with
utility functions.  I'm not sure which other advanced ocaml datatypes I need beyond variants and the basic ints, strings, arrays
and etc.

Has anybody done something like this?  I ripped out the ocaml parser and started playing with it to build a tool, but I don't want
to be reinventing the wheel.  While I'm at it, I will probably try to export stubs at least these styles: COM, GTK-style C objects,
and SWIG-ready header files for inclusion in Python or TCL or whatever some unenlightened person would want to use.

I can't say how much I aprecate the simplicity of the ocamlc tools.  I would never have standalone compiled the parser for gcc into
any interesting form in 30 minutes.  Damn all the #ifdefs and sizeof(int) and other cruft of C culture.  And the caml language is
nice enough to where I'll actually be able to get a decent amount of the necessary behavior quickly.  A C abstract syntax tree
would be much less pleasant to deal with.


Thanks,


Jeff Henrikson

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

