Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA27482; Mon, 13 Aug 2001 16:51:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA27368 for <caml-list@pauillac.inria.fr>; Mon, 13 Aug 2001 16:51:34 +0200 (MET DST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f7DEpVX03734;
	Mon, 13 Aug 2001 16:51:31 +0200 (MET DST)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA27417; Mon, 13 Aug 2001 16:51:30 +0200 (MET DST)
Date: Mon, 13 Aug 2001 16:51:30 +0200
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Friedman Roy <roy@cs.technion.ac.il>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Question about ocamlidl
Message-ID: <20010813165130.A26750@pauillac.inria.fr>
References: <20010730135810.A18963@pauillac.inria.fr> <Pine.GSO.3.95-heb-2.07.1010812111304.27070D-100000@csa.cs.technion.ac.il>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <Pine.GSO.3.95-heb-2.07.1010812111304.27070D-100000@csa.cs.technion.ac.il>; from roy@cs.technion.ac.il on Sun, Aug 12, 2001 at 11:15:06AM +0300
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> Can the OCaml IDL compiler be used in Unix environments that do not
> support (D)COM? Does it still generate usable stubs and proxies that can
> be used to interface C (or other languages) and OCaml?

Yes.  The stub code generated from CamlIDL input files is independent
of COM and work under Unix just as well as under Windows.

(The only caveat is IDL "interface" declarations: they are mapped
to pseudo-objects that can be used portably from C, but can only be
used from C++ if the layout of these pseudo-objects happen to match
those of C++ objects; CamlIDL ensures this for Windows and for gcc 2
under Unix, but I haven't tested with gcc 3.  But if you don't use
interface declarations, or don't use C++, there should be no problems.)

The only parts of CamlIDL that are really dependent upon the COM
runtime are the functions Com.create_instance and Com.register_factory.
These are available only under Windows.

- Xavier Leroy
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

