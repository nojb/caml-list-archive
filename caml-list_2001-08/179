Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA15912; Thu, 23 Aug 2001 03:19:19 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA15924 for <caml-list@pauillac.inria.fr>; Thu, 23 Aug 2001 03:19:17 +0200 (MET DST)
Received: from smtpout.mac.com (smtpout.mac.com [204.179.120.89])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f7N1JFf06392
	for <caml-list@inria.fr>; Thu, 23 Aug 2001 03:19:16 +0200 (MET DST)
Received: by smtpout.mac.com; Wed, 22 Aug 2001 18:18:02 -0700 (PDT)
Message-Id: <200108230118.SAA22620@smtpout.mac.com>
Received: from asmtp02.mac.com ([10.13.10.66]) by
          smtp-relay01.mac.com (Netscape Messaging Server 4.15 relay01 Jun
          21 2001 23:53:48) with ESMTP id GIHYA200.E86 for
          <caml-list@inria.fr>; Wed, 22 Aug 2001 18:18:02 -0700 
Received: from localhost ([17.206.25.144]) by asmtp02.mac.com
          (Netscape Messaging Server 4.15 asmtp02 Jun 21 2001 23:53:48)
          with ESMTP id GIHYA100.IG8; Wed, 22 Aug 2001 18:18:01 -0700 
Date: Wed, 22 Aug 2001 18:18:01 -0700
From: j h woodyatt <jhwoodyatt@mac.com>
Reply-To: jhw@wetware.com
Content-Type: text/plain;
	format=flowed;
	charset=us-ascii
Subject: Re: [Caml-list] hmm, ocaml with C syntax...
Cc: caml-list@inria.fr
To: Chris Hecker <checker@d6.com>
X-Mailer: Apple Mail (2.388)
In-Reply-To: <4.3.2.7.2.20010822154554.00e023e0@shell16.ba.best.com>
Mime-Version: 1.0 (Apple Message framework v388)
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Wednesday, August 22, 2001, at 03:48 , Chris Hecker wrote:
>
> http://research.microsoft.com/vault/
>
> The only difference seems to be the "key tracking" pre/post-condition 
> thing (and no type inference).  I wonder how well that works in 
> practice.  I also wonder if their generics, which are ML-style 
> polymorphics, not C++ style templates (but that have C++ template 
> syntax), will confuse C++ programmers.

ref<Foo<int>> has the same problem in Vault that it does in C++.

In addition to type inference, Caml has other things that Vault seems to 
be missing:

	+ Garbage collection
	+ Exceptions
	+ Classes (and class types)
	+ Streams (and the parser keyword)
	+ Polymorphic variants
	+ Parameter labels

I'm not sure I want to trade away all of those things to get invariants, 
though... invariants would be Really Qool to have.

The C syntax is *not* a big selling point for me.  Hey, I just got used 
to the idea that I can use "l'haricot" as a name for something 
bean-like, and you want me to give that up so I can worry about whether 
some '['/']' pair is delimiting an invariant signature or an array 
index?  Hmmm.

(Oh and there is the depressing fact that Vault isn't available to the 
public yet.  And when it is, it probably won't run on my platform...)


--
j h woodyatt <jhw@wetware.com>
"You're standing on sacred ground.  Many strange and wonderful
things have transpired right where you're standing."
                                               --unattributable
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

