Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA28883; Sun, 5 Aug 2001 11:20:08 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA28585 for <caml-list@pauillac.inria.fr>; Sun, 5 Aug 2001 11:20:07 +0200 (MET DST)
Received: from gnu.in-berlin.de (gnu.in-berlin.de [192.109.42.4])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f759K6H17796
	for <caml-list@inria.fr>; Sun, 5 Aug 2001 11:20:07 +0200 (MET DST)
Received: from hirsch.in-berlin.de (root@hirsch.colt.in-berlin.de [213.61.118.6])
	by gnu.in-berlin.de (8.10.1/8.10.1) with ESMTP id f759K1p07283
	for <caml-list@inria.fr>; Sun, 5 Aug 2001 11:20:01 +0200 (CEST)
	(envelope-from oliver@first.in-berlin.de)
Received: (from uucp@localhost)
	by hirsch.in-berlin.de (8.11.1/8.11.1/Debian 8.11.0-6) with UUCP id f759K1U25931
	for caml-list@inria.fr; Sun, 5 Aug 2001 11:20:01 +0200
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: caml-list@inria.fr
Received: from localhost (oliver@localhost) by first.in-berlin.de (8.7.6/8.7.3) with SMTP id LAA00192 for <caml-list@inria.fr>; Sun, 5 Aug 2001 11:16:04 +0200
Date: Sun, 5 Aug 2001 11:16:04 +0200 (MET DST)
From: Oliver Bandel <oliver@first.in-berlin.de>
To: caml-list@inria.fr
Subject: [Caml-list] OCaml as fancy calculator...
Message-ID: <Pine.LNX.3.95.1010805110027.163A-100000@first.in-berlin.de>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Hello,

in the examples of the introductional texts to OCaml
is mentioned, that OCaml may be used as a fancy
calculator.
Ok, if I take this idea, I want to have some mathematical
libraries, like histograms (frequencies) and the like.

If I write some often-needed mathematical routines,
so that it can be used with file-based OCaml-programs
for compilation, how can I use such files (or the compiled
byte-code or binaries) for interactive sessions with
ocaml?

Is this the first step to use the module system?
Or can I start with things like "include"-statements
in other calculator-like programs? (Including
source-files like an #include in C or load-commands
of some programs.)

I think about writing some mathematical routines
and maybe some output-routines to postscript
(Or maybe I can use cdk for this?).

Maybe this can acchieve things like gnuplot does,
but in a functional way.

So I'm thinking about implementing some simple
routines for loading data-files, doing mathematical
operations and writing the results as ASCII-output and
maybe as postscript-output (or psTricks-Output for including
the reults in LaTeX-documents).


I think as a beginner of FPLs and OCaml, it's too much effort
to write a complete application like a functional-gnuplot.

I want to use this tool for solving some common problems of the day
and I want to learn OCaml (and FP in general) with it.
So, it's ok, if it is only a small tool. But I want to have the
right design decisions for using it as a tool, but one, which is
expandable in future time, when it - maybe - can become a
complete application.



* Any hints, how to plan/design such a project, which
  tools I can use and so on...?!
* How can I use it in in interactive mode?

* other things to think about?


TIA,
  Oliver

-- 
    Obviously, because programming is a creative activity there is not
    going to be a set of rules which will always lead us mechanically
    to a solution to a problem.
            (Simon Thompson: Haskell - The Craft of Functional Programming)

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

