Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA07386; Fri, 17 Aug 2001 10:16:40 +0200 (MET DST)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA07398 for <caml-list@pauillac.inria.fr>; Fri, 17 Aug 2001 10:16:39 +0200 (MET DST)
Received: from pochi.inria.fr (pochi.inria.fr [128.93.8.128])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f7H89pL13601;
	Fri, 17 Aug 2001 10:09:51 +0200 (MET DST)
Received: (from mentre@localhost)
	by pochi.inria.fr (8.11.1/8.10.0) id f7H89pJ06423;
	Fri, 17 Aug 2001 10:09:51 +0200
X-Authentication-Warning: pochi.inria.fr: mentre set sender to David.Mentre@inria.fr using -f
To: Vitaly Lugovsky <vsl@ontil.ihep.su>
Cc: <caml-list@inria.fr>
Subject: Re: [Caml-list] Segfault in a native code multi-threaded program
References: <Pine.LNX.4.30.0108161642410.27858-100000@ontil.ihep.su>
From: David Mentre <David.Mentre@inria.fr>
Date: 17 Aug 2001 10:09:51 +0200
In-Reply-To: <Pine.LNX.4.30.0108161642410.27858-100000@ontil.ihep.su>
Message-ID: <qtlbslf6rao.fsf@pochi.inria.fr>
Lines: 33
User-Agent: Gnus/5.0808 (Gnus v5.8.8) Emacs/20.4
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Vitaly Lugovsky <vsl@ontil.ihep.su> writes:

>  You can try gdb -c core <progname> after segfault even in multithreaded
> environment.

Oh yes, I've forgotten about that. Thanks.

> And, sure, you can use assertions and debugging output (do not forget to
> flush it) to find out where the shit happens.

True. However I wondered if they were more elaborated debugging
techniques before relying on printf.

My program now produces a segfault even in byte code mode. :( 

Probably a misuse of Marshal. I've typed all of its input/output uses
but I've probably messed things between a marshal and its unmarshal
counter part. 

<hint for next ocaml ;)>

  It would be very nice to be able to rely on Marshal as safely as on
  ocaml typing. Just to be sure that if I expect an int * string, I will
  effectively receive an int * string or raise an exception. It could
  probably be done using the same tricks as used in printf formatters.

</hint for next ocaml ;)>

Best regards,
d.
-- 
 David.Mentre@inria.fr
 Opinions expressed here are only mine.
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

