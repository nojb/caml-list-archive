Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA27824; Fri, 24 Aug 2001 12:20:21 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA28016 for <caml-list@pauillac.inria.fr>; Fri, 24 Aug 2001 12:20:21 +0200 (MET DST)
Received: from chopin.ai.univie.ac.at (chopin.ai.univie.ac.at [131.130.174.170])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f7OAGvj27528;
	Fri, 24 Aug 2001 12:16:58 +0200 (MET DST)
Received: (from markus@localhost)
	by chopin.ai.univie.ac.at (8.9.3/8.9.3/Debian 8.9.3-21) id MAA09584;
	Fri, 24 Aug 2001 12:16:57 +0200
Date: Fri, 24 Aug 2001 12:16:56 +0200
From: Markus Mottl <markus@mail4.ai.univie.ac.at>
To: Xavier Leroy <Xavier.Leroy@inria.fr>
Cc: Miles Egan <miles@caddr.com>, caml-list@inria.fr
Subject: Re: [Caml-list] standard regex package
Message-ID: <20010824121656.A9316@chopin.ai.univie.ac.at>
References: <20010823000625.B4229@aimlin> <Pine.BSF.4.21.0108230948480.17462-100000@shell5.ba.best.com> <20010823110821.B5828@caddr.com> <20010824111331.B25250@pauillac.inria.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <20010824111331.B25250@pauillac.inria.fr>; from Xavier.Leroy@inria.fr on Fri, Aug 24, 2001 at 11:13:31 +0200
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, 24 Aug 2001, Xavier Leroy wrote:
> The last time this topic came up on this list, I said that we aren't
> opposed to put PCRE in the OCaml distribution (provided Markus agrees
> with that, of course).

No objection on my side. That's why I have LGPLed it.

> BUT: in the name of backward compatibility, we must have an
> Str-compatible interface to this library (same functions and same
> regexp syntax as in Str), in addition to the native PCRE interface.

As was mentioned in our last discussion on this topic, backwards
compatibility would require writing a stateful interface around the
PCRE, conversion functions for regular expressions and compatible
implementations of the other functions. Is this really necessary? Why
not just keep the old Str-module and deprecate its use? Of course, if
the strange behaviour of Str wrt. large regexps is severe, somebody would
have to do it if debugging Richard Stallman's code is not an option... ;)

> I think it can be done, but the replies I got to this request were of
> the form "I don't have time to do this".

Ahem, well, what concerns me, this is unfortunately the case right now. I
really need to get on with my actual project (a machine learning system).

What about the many new heros on this list? This would be a good exercise!
:-)

> Also: the PCRE interface is quite heavyweight, with a zillion options
> whose purpose are not always clear to me.  This can be a bit frightening
> and will need a lot of carefully worded documentation to explain that
> most of these options are useless 99% of the time :-)  This is not a
> criticism towards Markus' work, more like a criticism towards Perl's
> and PCRE's "creeping featuritism" syndrom.

I agree. The reasons why I made it rather heavyweight are that hardly
anybody could argue that Perl or the PCRE support features he needs but
are not supported by this library, thus easing the change to OCaml. I
was also practicing writing C-interfaces at this time so I thought I'd
implement all PCRE-functions for practice.

I would certainly not have any objections against making the library more
lightweight: probably many functions could be removed without hesitation
(e.g. information on patterns). It may also be worthwhile to reconsider
the way labels and optional arguments are used, though the latter only
look evil in the interface but are extremely convenient to use once one
gets the scheme behind, which is invariant throughout the library.

Regards,
Markus Mottl

-- 
Markus Mottl                                             markus@oefai.at
Austrian Research Institute
for Artificial Intelligence                  http://www.oefai.at/~markus
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

