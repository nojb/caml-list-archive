Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id IAA04199; Mon, 27 Aug 2001 08:48:36 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA04131 for <caml-list@pauillac.inria.fr>; Mon, 27 Aug 2001 08:48:35 +0200 (MET DST)
Received: from porsta.cs.Helsinki.FI (porsta.cs.Helsinki.FI [128.214.48.124])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f7R6mYP18015
	for <caml-list@inria.fr>; Mon, 27 Aug 2001 08:48:34 +0200 (MET DST)
Received: from harvakari.cs.Helsinki.FI (IDENT:ttkurppa@harvakari.cs.Helsinki.FI [128.214.9.152])
	by porsta.cs.Helsinki.FI (8.11.6/8.11.6) with ESMTP id f7R6mYS18492
	for <caml-list@inria.fr>; Mon, 27 Aug 2001 09:48:34 +0300
Date: Mon, 27 Aug 2001 09:48:37 +0300 (EEST)
From: T Teemu E Kurppa <ttkurppa@cs.Helsinki.FI>
To: <caml-list@inria.fr>
Subject: [Caml-list] CamlIDL: omitting struct fields 
Message-ID: <Pine.LNX.4.33.0108270928120.13703-100000@harvakari.cs.Helsinki.FI>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Last weekend I started working on a hobby project, where I'll use Ocaml to
implement some parts of game AI for a game, which itself is written in
plain C. I'm using CamlIDL to help interfacing between C and Ocaml.

Unfortunately I encountered problems, when I omitted some struct fields
from IDL specification. According the chapter 6 of CamlIDL manual
(http://caml.inria.fr/camlidl/htmlman/main006.html), omitting irrelevant
struct fields should be possible.

However, a following example doesn't work the way I think it should work.
In the C struct, three int fields x,y,z are defined. In IDL definition,
I omit y.

Program prints
x=1, y=3, z=134648512
althought I think it should print (of course y can be any number)
x=1, y=4911232, z=3

Have I misunderstood something ?


- c_impl.c: ---------------------------

#include <stdio.h>

struct bar {
  int x;
  int y;
  int z;
};

void f (struct bar* pbar) {
  printf ("x=%d, y=%d, z=%d\n", pbar->x, pbar->y, pbar->z);
  return;
}



- c_idl.idl: ------------------------------
struct bar {
  int x;
  //int y;
  int z;
};

void f ([in,ref] struct bar* pbar);



- idl_test.ml: ---------------------------
open C_idl

let main () =
  let bar = {x = 1;
           (*y = 2;*)
             z = 3} in
    f(bar)

let _ = main ()


-- 
Teemu Kurppa
Teemu.Kurppa@Helsinki.fi

-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

