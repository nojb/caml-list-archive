Return-Path: <markus.mottl@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id AE254BBC0
	for <caml-list@yquem.inria.fr>; Mon, 13 Mar 2006 19:53:33 +0100 (CET)
Received: from xproxy.gmail.com (xproxy.gmail.com [66.249.82.197])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k2DIrW54029332
	for <caml-list@yquem.inria.fr>; Mon, 13 Mar 2006 19:53:33 +0100
Received: by xproxy.gmail.com with SMTP id i27so851301wxd
        for <caml-list@yquem.inria.fr>; Mon, 13 Mar 2006 10:53:32 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=OFr58L0QiNrp3+YCuNy4t3ZII57G1cAmVyg6WSbsJB7UnGcKWAQw4qI67jCnlSKmvsWTsKgAMlFSi//KSvY5zCHoyZRdipBAiNQpJSr74DPDpiRIHYd2AkoKC/8V69JWqFAQrQV48EXivi5gbD2bzlW8Imjdk4NP/JBl7+ySZdM=
Received: by 10.70.24.18 with SMTP id 18mr6588887wxx;
        Mon, 13 Mar 2006 10:53:32 -0800 (PST)
Received: by 10.70.57.14 with HTTP; Mon, 13 Mar 2006 10:53:32 -0800 (PST)
Message-ID: <f8560b80603131053p3ec30a69hcb4831d1847617d@mail.gmail.com>
Date: Mon, 13 Mar 2006 13:53:32 -0500
From: "Markus Mottl" <markus.mottl@gmail.com>
To: "Xavier Leroy" <Xavier.Leroy@inria.fr>
Subject: Re: [Caml-list] Allocating caml lists from C : possible bug on amd64
Cc: "=?ISO-8859-1?Q?\"Sayan_(S=E9bastien_Li-Thiao-T=E9)\"?=" <sayan@crans.org>,
	caml-list@yquem.inria.fr
In-Reply-To: <4415AF18.5070404@inria.fr>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_4804_7988687.1142276012514"
References: <440F556A.9010209@crans.org> <44158770.6000407@crans.org>
	 <f8560b80603130713v360ebbb8ud69b406816134110@mail.gmail.com>
	 <441595B8.3040203@crans.org> <4415AF18.5070404@inria.fr>
X-Miltered: at nez-perce with ID 4415BFAC.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; markus:01 mottl:01 markus:01 mottl:01 allocating:01 bug:01 alloc:01 alloc:01 compiler:01 pointer:01 silently:01 compiler:01 pointer:01 silently:01 wrote:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=HTML_30_40,HTML_MESSAGE,
	RCVD_BY_IP autolearn=disabled version=3.0.3

------=_Part_4804_7988687.1142276012514
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

On 3/13/06, Xavier Leroy <Xavier.Leroy@inria.fr> wrote:
>
> You haven't declared caml_alloc (include <caml/alloc.h>), so the C
> compiler assumes it returns an int instead of a value, and generates
> wrong code.


Funny that I didn't spot this one.  Good to know that one should look out
for this problem when making sure that code remains portable to 64-bit
machines.

I think C-compilers should by default issue a warning on platforms where th=
e
size of int may be different from the size of a pointer instead of silently
inventing a function prototype that is very likely to crash.

Regards,
Markus

------=_Part_4804_7988687.1142276012514
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

On 3/13/06, <b class=3D"gmail_sendername">Xavier Leroy</b> &lt;<a href=3D"m=
ailto:Xavier.Leroy@inria.fr">Xavier.Leroy@inria.fr</a>&gt; wrote:<div><span=
 class=3D"gmail_quote"></span><blockquote class=3D"gmail_quote" style=3D"bo=
rder-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding=
-left: 1ex;">
You haven't declared caml_alloc (include &lt;caml/alloc.h&gt;), so the C<br=
>compiler assumes it returns an int instead of a value, and generates<br>wr=
ong code.</blockquote><div><br>
Funny that I didn't spot this one.&nbsp; Good to know that one should
look out for this problem when making sure that code remains portable
to 64-bit machines.<br>
<br>
I think C-compilers should by default issue a warning on platforms
where the size of int may be different from the size of a pointer
instead of silently inventing a function prototype that is very likely
to crash.<br>
</div><br></div>Regards,<br>
Markus<br>


------=_Part_4804_7988687.1142276012514--

