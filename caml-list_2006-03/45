Return-Path: <skaller@users.sourceforge.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id BFD21BB81
	for <caml-list@yquem.inria.fr>; Sun,  5 Mar 2006 14:19:31 +0100 (CET)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k25DJTmc022448
	for <caml-list@yquem.inria.fr>; Sun, 5 Mar 2006 14:19:30 +0100
Received: from [192.168.1.200] (ppp9-113.lns1.syd7.internode.on.net [59.167.9.113])
	by smtp3.adl2.internode.on.net (8.13.5/8.13.5) with ESMTP id k25DJNpv019515;
	Sun, 5 Mar 2006 23:49:24 +1030 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] Benchmarks against imperative languages
From: skaller <skaller@users.sourceforge.net>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <200603051154.07774.jon@ffconsultancy.com>
References: <a06ac3670603040604t7c55b692h@mail.gmail.com>
	 <20060304143608.GA16996@ours.starynkevitch.net>
	 <200603051154.07774.jon@ffconsultancy.com>
Content-Type: text/plain
Organization: Async P/L
Date: Mon, 06 Mar 2006 00:20:59 +1100
Message-Id: <1141564859.10188.32.camel@budgie.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.4.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 440AE561.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 basile:01 ocaml:01 ocaml:01 async:01 consultants:98 wrote:01 wrote:01 sourceforge:01 sourceforge:01 imperative:01 realtime:01 algorithms:03 languages:03 context:04 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Sun, 2006-03-05 at 11:54 +0000, Jon Harrop wrote:
> On Saturday 04 March 2006 14:36, Basile STARYNKEVITCH wrote:
> > We all know (by experience) that Ocaml performs quite well. We also
> > know that for most (but not all) of the software we are coding, the
> > cost and time of development does significantly matter, and a 10%
> > decrease in performance is not that important, hence Ocaml brings a
> > real win.
> 
> Yes and no. I think the relative performance of OCaml is quite variable.

The relative performance of many algorithms can be highly sensitive 
to tiny changes in coding. And the significance of small changes in
efficiency are also sensitive to context.

So you think 10% performance isn't significant? Well, I make
that 36.5 DAYS out of the year I am going to take out of your holidays!
What? What do you mean, you only get 28 days a year holidays? :)

-- 
John Skaller <skaller at users dot sourceforge dot net>
Async PL, Realtime software consultants
Checkout Felix: http://felix.sourceforge.net

