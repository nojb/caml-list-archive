Return-Path: <email@asfandyar.cjb.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id DE293BB81
	for <caml-list@yquem.inria.fr>; Wed,  8 Mar 2006 01:35:37 +0100 (CET)
Received: from outmail.freedom2surf.net (outmail1.freedom2surf.net [194.106.33.237])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id k280ZbfW011686
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Wed, 8 Mar 2006 01:35:37 +0100
Received: from [10.0.0.1] (i-195-137-83-147.freedom2surf.net [195.137.83.147])
	by outmail.freedom2surf.net (8.12.10/8.12.10) with ESMTP id k280Za5K013436
	for <caml-list@yquem.inria.fr>; Wed, 8 Mar 2006 00:35:36 GMT
Message-ID: <440E2752.4080809@asfandyar.cjb.net>
Date: Wed, 08 Mar 2006 00:37:38 +0000
From: Asfand Yar Qazi <email@asfandyar.cjb.net>
User-Agent: Mozilla Thunderbird 1.0.7 (X11/20060217)
X-Accept-Language: en-us, en
MIME-Version: 1.0
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] STM support in OCaml
References: <OFFCBEEA81.F894A3C6-ONC125712A.005ACA6C-C125712A.005C9961@philips.com> <81CF6C03-B3F4-4962-9918-E80CDCE8D254@cs.umd.edu>
In-Reply-To: <81CF6C03-B3F4-4962-9918-E80CDCE8D254@cs.umd.edu>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 440E26D9.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 -mike:01 lazy:01 haskell:01 cjb:98 wrote:01 caml-list:01 short:01 missing:06 edu:08 michael:08 useful:08 optional:09 evaluation:09 actually:10 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.5 required=5.0 tests=DNS_FROM_RFC_WHOIS 
	autolearn=disabled version=3.0.3

Michael Hicks wrote:
> There's a longer answer, but one short answer is: check out AtomCaml  at 
> http://www.cs.washington.edu/homes/miker/atomcaml/
> 
> -Mike
> 

That is actually really really useful just on its own!

Now there are 2 things missing:

- Multi-threaded support
- Optional lazy evaluation

and we have a Haskell beater :-)

