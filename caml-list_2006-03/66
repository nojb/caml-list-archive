Return-Path: <micha-1@fantasymail.de>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id D207DBB81
	for <caml-list@yquem.inria.fr>; Mon,  6 Mar 2006 17:42:47 +0100 (CET)
Received: from mail.gmx.net (mail.gmx.de [213.165.64.20])
	by nez-perce.inria.fr (8.13.0/8.13.0) with SMTP id k26Gglei010722
	for <caml-list@yquem.inria.fr>; Mon, 6 Mar 2006 17:42:47 +0100
Received: (qmail invoked by alias); 06 Mar 2006 16:42:47 -0000
Received: from p54A304D7.dip0.t-ipconnect.de (EHLO [192.168.2.136]) [84.163.4.215]
  by mail.gmx.net (mp029) with SMTP; 06 Mar 2006 17:42:47 +0100
X-Authenticated: #20477425
From: Michael Wohlwend <micha-1@fantasymail.de>
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] recursive or loop
Date: Mon, 6 Mar 2006 17:42:32 +0100
User-Agent: KMail/1.9.1
References: <200603061322.k26DMU1E016749@nez-perce.inria.fr> <Pine.LNX.4.63.0603061514490.22496@eiger.cip.physik.uni-muenchen.de>
In-Reply-To: <Pine.LNX.4.63.0603061514490.22496@eiger.cip.physik.uni-muenchen.de>
X-Face: S)[vu%Bha1d&ej9GfwAq~7C}A,y[B.uS}+D6'hb~xPwsxymw$fnCOaMe<=?utf-8?q?*bnUajSBR=5Fm=3FR=0A=09?=@V3;iX8[A}z`.%pEQ1r7iZhN8#ktTCBQ}&mkx>=RH&l|l6\]NZI@
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200603061742.32902.micha-1@fantasymail.de>
X-Y-GMX-Trusted: 0
X-Miltered: at nez-perce with ID 440C6687.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; recursive:01 recursive:01 stack:01 2006:98 15,:98 wrote:01 caml-list:01 argument:01 purely:02 functional:02 programming:03 passing:03 problem:05 problem:05 function:08 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO,SPF_FAIL 
	autolearn=disabled version=3.0.3

On Monday 06 March 2006 15:15, you wrote:
> > If you're doing purely functional programming then you'll be passing the
> > state as an argument to the recursive function.
>
> How do you restore the call stack?

yes the state is not the problem, the callstack is the (my) problem...

 Michael


