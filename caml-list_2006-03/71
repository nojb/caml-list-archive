Return-Path: <andries.hekstra@philips.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id F2961BB81
	for <caml-list@yquem.inria.fr>; Mon,  6 Mar 2006 20:09:22 +0100 (CET)
Received: from gw-eur4.philips.com (gw-eur4.philips.com [161.85.125.10])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k26J9MCl027865
	for <caml-list@yquem.inria.fr>; Mon, 6 Mar 2006 20:09:22 +0100
Received: from smtpscan-eur5.philips.com (smtpscan-eur5.mail.philips.com [130.144.57.168])
	by gw-eur4.philips.com (Postfix) with ESMTP id 2EDEE4970C;
	Mon,  6 Mar 2006 19:09:22 +0000 (UTC)
Received: from smtpscan-eur5.philips.com (localhost [127.0.0.1])
	by localhost.philips.com (Postfix) with ESMTP
	id EC9A43B; Mon,  6 Mar 2006 19:09:21 +0000 (GMT)
Received: from smtprelay-eur2.philips.com (smtprelay-eur2.philips.com [130.144.57.171])
	by smtpscan-eur5.philips.com (Postfix) with ESMTP
	id CDF583A; Mon,  6 Mar 2006 19:09:21 +0000 (GMT)
Received: from ehvrmh02.diamond.philips.com (ehvrmh02-srv.diamond.philips.com [130.139.27.125])
	by smtprelay-eur2.philips.com (Postfix) with ESMTP
	id 9EBA233; Mon,  6 Mar 2006 19:09:21 +0000 (GMT)
In-Reply-To: <20060306111412.GA12323@furbychan.cocan.org>
To: Richard Jones <rich@annexia.org>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Line number for index out of bounds
MIME-Version: 1.0
X-Mailer: Lotus Notes Release 6.0.3 September 26, 2003
From: Andries Hekstra <andries.hekstra@philips.com>
Message-ID: <OFC6075907.4EE9D09A-ONC1257129.0068BB72-C1257129.00693835@philips.com>
Date: Mon, 6 Mar 2006 20:08:02 +0100
X-MIMETrack: Serialize by Router on ehvrmh02/H/SERVER/PHILIPS(Release 6.5.3FP1HF291 | September
 19, 2005) at 06/03/2006 20:08:07,
	Serialize complete at 06/03/2006 20:08:07
Content-Type: multipart/alternative; boundary="=_alternative 00693740C1257129_="
X-Miltered: at nez-perce with ID 440C88E2.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; arrays:01 ocaml:01 bytecode:01 stack:01 stack:01 eindhoven:01 ocaml:01 workarounds:01 bytecode:01 assertion:01 ocamlopt:01 notepad:01 arrays:01 eindhoven:01 workarounds:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=HTML_30_40,HTML_MESSAGE 
	autolearn=disabled version=3.0.3

This is a multipart message in MIME format.
--=_alternative 00693740C1257129_=
Content-Type: text/plain; charset="US-ASCII"

Dear Richard,

Thanks for your email. I indeed use native code as I need the speed. My 
program is 3500 lines, and includes multi-dimensional arrays, to putting 
try's everywhere by hand is out of the question. I would then have to 
write a metaprogram that adds such try commands to an existing OCaml 
program and outputs a longer program with the try's with the asserts. If 
possible I would like to postpone that and try your other option. 

Due to this crashing business I go on a business trip to Asia without any 
ready simulation results for one week.

> * Use bytecode, and before running the program set the environment
> variable OCAMLRUNPARAM=b which will print a stack trace.

If I would use this week of the trip to try this suggestion you made, how 
will the stack trace give me the line number?

Best regards,

Andries

------------------------------------------------------------------------
Dr. Ir. Andries P. Hekstra
Philips Research 
High Tech Campus 27  (WL-1-4.15)
5656 AG Eindhoven
Tel./Fax/Secr. +31 40 27 42048/42566/44051 
   *  Good open source break software for computer users : 
http://www.workrave.org 








Richard Jones <rich@annexia.org> 
06-03-2006 12:14

To
Andries Hekstra/EHV/RESEARCH/PHILIPS@PHILIPS
cc
caml-list@yquem.inria.fr
Subject
Re: [Caml-list] Line number for index out of bounds
Classification







On Mon, Mar 06, 2006 at 11:44:31AM +0100, Andries Hekstra wrote:
> Invalid_argument("index out of bounds")
[...]
> Of course, I am very curious in which line number of the program this 
> exception occurs. 
> Is there any way to get hold of this line number?

This is a real problem with OCaml - it's impossible to get stack
traces of where an exception happens with native code.  I'm assuming
you're using native code.  I commonly have cases where a program dies
with "exception: Not_found" because I forgot to enclose some List.find
with an appropriate try ... with clause, or made some wrong
assumption.  Tracking these down is time-consuming.

Possible workarounds:

* Use bytecode, and before running the program set the environment
variable OCAMLRUNPARAM=b which will print a stack trace.

* Surround every possible array index with a try ... with expression
like this:

  try
    (* code which accesses the array *)
  with
    Invalid_argument "index out of bounds" -> assert false

The "assert false" will print the line and character number of the
assertion.

* Hack ocamlopt to be able to print exceptions properly :-)

Rich.

-- 
Richard Jones, CTO Merjis Ltd.
Merjis - web marketing and technology - http://merjis.com
Team Notepad - intranets and extranets for business - 
http://team-notepad.com


--=_alternative 00693740C1257129_=
Content-Type: text/html; charset="US-ASCII"


<br><font size=2 face="sans-serif">Dear Richard,</font>
<br>
<br><font size=2 face="sans-serif">Thanks for your email. I indeed use
native code as I need the speed. My program is 3500 lines, and includes
multi-dimensional arrays, to putting try's everywhere by hand is out of
the question. I would then have to write a metaprogram that adds such try
commands to an existing OCaml program and outputs a longer program with
the try's with the asserts. If possible I would like to postpone that and
try your other option. </font>
<br>
<br><font size=2 face="sans-serif">Due to this crashing business I go on
a business trip to Asia without any ready simulation results for one week.<br>
</font>
<br><font size=2><tt>&gt; * Use bytecode, and before running the program
set the environment<br>
&gt; variable OCAMLRUNPARAM=b which will print a stack trace.<br>
</tt></font>
<br><font size=2 face="sans-serif">If I would use this week of the trip
to try this suggestion you made, how will the stack trace give me the line
number?</font>
<br>
<br><font size=2 face="sans-serif">Best regards,</font>
<br>
<br><font size=2 face="sans-serif">Andries</font>
<br><font size=2 face="sans-serif"><br>
------------------------------------------------------------------------<br>
Dr. Ir. Andries P. Hekstra<br>
Philips Research <br>
High Tech Campus 27 &nbsp;(WL-1-4.15)<br>
5656 AG Eindhoven<br>
Tel./Fax/Secr. +31 40 27 42048/42566/44051 <br>
 &nbsp; * &nbsp;Good open source break software for computer users : http://www.workrave.org
&nbsp; </font>
<br>
<br>
<br>
<table width=100%>
<tr valign=top>
<td width=33%>
<br>
<br>
<br>
<br>
<br><font size=1 face="sans-serif"><b>Richard Jones &lt;rich@annexia.org&gt;</b>
</font>
<p><font size=1 face="sans-serif">06-03-2006 12:14</font>
<td width=66%>
<table width=100%>
<tr valign=top>
<td>
<div align=right><font size=1 face="sans-serif">To</font></div>
<td><font size=1 face="sans-serif">Andries Hekstra/EHV/RESEARCH/PHILIPS@PHILIPS</font>
<tr valign=top>
<td>
<div align=right><font size=1 face="sans-serif">cc</font></div>
<td><font size=1 face="sans-serif">caml-list@yquem.inria.fr</font>
<tr valign=top>
<td>
<div align=right><font size=1 face="sans-serif">Subject</font></div>
<td><font size=1 face="sans-serif">Re: [Caml-list] Line number for index
out of bounds</font>
<tr>
<td>
<div align=right><font size=1 face="sans-serif">Classification</font></div>
<td></table>
<br>
<table>
<tr valign=top>
<td>
<td></table>
<div align=right>
<br></div></table>
<br>
<br>
<br><font size=2><tt>On Mon, Mar 06, 2006 at 11:44:31AM +0100, Andries
Hekstra wrote:<br>
&gt; Invalid_argument(&quot;index out of bounds&quot;)<br>
[...]<br>
&gt; Of course, I am very curious in which line number of the program this
<br>
&gt; exception occurs. <br>
&gt; Is there any way to get hold of this line number?<br>
<br>
This is a real problem with OCaml - it's impossible to get stack<br>
traces of where an exception happens with native code. &nbsp;I'm assuming<br>
you're using native code. &nbsp;I commonly have cases where a program dies<br>
with &quot;exception: Not_found&quot; because I forgot to enclose some
List.find<br>
with an appropriate try ... with clause, or made some wrong<br>
assumption. &nbsp;Tracking these down is time-consuming.<br>
<br>
Possible workarounds:<br>
<br>
* Use bytecode, and before running the program set the environment<br>
variable OCAMLRUNPARAM=b which will print a stack trace.<br>
<br>
* Surround every possible array index with a try ... with expression<br>
like this:<br>
<br>
 &nbsp;try<br>
 &nbsp; &nbsp;(* code which accesses the array *)<br>
 &nbsp;with<br>
 &nbsp; &nbsp;Invalid_argument &quot;index out of bounds&quot; -&gt; assert
false<br>
<br>
The &quot;assert false&quot; will print the line and character number of
the<br>
assertion.<br>
<br>
* Hack ocamlopt to be able to print exceptions properly :-)<br>
<br>
Rich.<br>
<br>
-- <br>
Richard Jones, CTO Merjis Ltd.<br>
Merjis - web marketing and technology - http://merjis.com<br>
Team Notepad - intranets and extranets for business - http://team-notepad.com<br>
</tt></font>
<br>
--=_alternative 00693740C1257129_=--

