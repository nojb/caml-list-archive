Return-Path: <micha-1@fantasymail.de>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 24D3FBB81
	for <caml-list@yquem.inria.fr>; Mon,  6 Mar 2006 13:08:14 +0100 (CET)
Received: from mxintern.schlund.de (mxintern.kundenserver.de [212.227.126.201])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k26C8Dk6007642
	for <caml-list@yquem.inria.fr>; Mon, 6 Mar 2006 13:08:14 +0100
Received: from [172.17.36.11] (helo=schluck.use.schlund.de)
	by mxintern.kundenserver.de with esmtp (Exim 4.34)
	id 1FGEVZ-00018J-F2
	for caml-list@yquem.inria.fr; Mon, 06 Mar 2006 13:08:13 +0100
From: Michael Wohlwend <micha-1@fantasymail.de>
To: caml-list@yquem.inria.fr
Subject: recursive or loop
Date: Mon, 6 Mar 2006 13:09:06 +0100
User-Agent: KMail/1.9.1
X-Face: S)[vu%Bha1d&ej9GfwAq~7C}A,y[B.uS}+D6'hb~xPwsxymw$fnCOaMe<=?utf-8?q?*bnUajSBR=5Fm=3FR=0A=09?=@V3;iX8[A}z`.%pEQ1r7iZhN8#ktTCBQ}&mkx>=RH&l|l6\]NZI@
MIME-Version: 1.0
Content-Type: text/plain;
  charset="us-ascii"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200603061309.06452.micha-1@fantasymail.de>
X-Virus-Scanned: Symantec AntiVirus Scan Engine
X-Miltered: at nez-perce with ID 440C262D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; recursive:01 recursive:01 cheers:01 imperative:01 algorithm:01 algorithm:01 michael:08 michael:08 jump:08 jumps:08 point:11 loop:13 loop:13 calculation:13 loads:13 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO,SPF_FAIL 
	autolearn=disabled version=3.0.3


A friend of mine changed a recursive algorithm to an imperative one since that 
is (he said) the only way to temporary stop the calculation and save the 
state to disk and be able to continue it later. To continue he just loads the 
saved state and jumps into his loop.

Is that true? How do I jump out of a recursive algorithm and be able to 
continue it at the same point?

cheers
 Michael

