Return-Path: <Thomas.Fischbacher@Physik.Uni-Muenchen.DE>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 304ADBB81
	for <caml-list@yquem.inria.fr>; Mon,  6 Mar 2006 15:15:19 +0100 (CET)
Received: from mail.physik.uni-muenchen.de (mail.physik.uni-muenchen.de [192.54.42.129])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k26EFHXZ023401
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@yquem.inria.fr>; Mon, 6 Mar 2006 15:15:18 +0100
Received: from localhost (unknown [127.0.0.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id 8B94F20026;
	Mon,  6 Mar 2006 15:15:16 +0100 (CET)
Received: from mail.physik.uni-muenchen.de ([127.0.0.1])
 by localhost (mail.physik.uni-muenchen.de [127.0.0.1]) (amavisd-new, port 10024)
 with LMTP id 27643-01-61; Mon,  6 Mar 2006 15:15:16 +0100 (CET)
Received: from mailhost.cip.physik.uni-muenchen.de (kaiser.cip.physik.uni-muenchen.de [141.84.136.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id 6A5E120015;
	Mon,  6 Mar 2006 15:15:16 +0100 (CET)
Received: from aso.cip.physik.uni-muenchen.de (eiger.cip.physik.uni-muenchen.de [141.84.136.54])
	by mailhost.cip.physik.uni-muenchen.de (Postfix) with ESMTP
	id 84A7E26E87; Mon,  6 Mar 2006 15:15:15 +0100 (CET)
Received: by aso.cip.physik.uni-muenchen.de (Postfix, from userid 3092)
	id 9D33AC8671; Mon,  6 Mar 2006 15:15:15 +0100 (CET)
Received: from localhost (localhost [127.0.0.1])
	by aso.cip.physik.uni-muenchen.de (Postfix) with ESMTP id 96615D06B2;
	Mon,  6 Mar 2006 15:15:15 +0100 (CET)
Date: Mon, 6 Mar 2006 15:15:15 +0100 (CET)
From: Thomas Fischbacher <Thomas.Fischbacher@Physik.Uni-Muenchen.DE>
To: Jonathan Harrop <jdh30@jdh30.plus.com>
Cc: caml-list@yquem.inria.fr,
	Michael Wohlwend <micha-1@fantasymail.de>
Subject: Re: [Caml-list] recursive or loop
In-Reply-To: <200603061322.k26DMU1E016749@nez-perce.inria.fr>
Message-ID: <Pine.LNX.4.63.0603061514490.22496@eiger.cip.physik.uni-muenchen.de>
References: <200603061322.k26DMU1E016749@nez-perce.inria.fr>
X-BOFH: Daemons did it
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: amavisd-new at physik.uni-muenchen.de
X-Miltered: at nez-perce with ID 440C43F5.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; recursive:01 recursive:01 stack:01 lambda:01 lambda:01 cip:98 cip:98 wrote:01 caml-list:01 argument:01 algorithm:01 debian:02 purely:02 functional:02 physik:02 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_FAIL autolearn=disabled 
	version=3.0.3


On Mon, 6 Mar 2006, Jonathan Harrop wrote:

> >How do I jump out of a recursive algorithm and be able to 
> >continue it at the same point?
> 
> If you're doing purely functional programming then you'll be passing the state as an argument to the 
> recursive function.

How do you restore the call stack?

-- 
regards,               tf@cip.physik.uni-muenchen.de              (o_
 Thomas Fischbacher -  http://www.cip.physik.uni-muenchen.de/~tf  //\
(lambda (n) ((lambda (p q r) (p p q r)) (lambda (g x y)           V_/_
(if (= x 0) y (g g (- x 1) (* x y)))) n 1))                  (Debian GNU)

