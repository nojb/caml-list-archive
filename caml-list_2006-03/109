Return-Path: <bhurt@spnz.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 55F3FBB81
	for <caml-list@yquem.inria.fr>; Wed,  8 Mar 2006 23:09:59 +0100 (CET)
Received: from cenn.mc.mpls.visi.com (cenn.mc.mpls.visi.com [208.42.156.9])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id k28M9wWC004663
	for <caml-list@yquem.inria.fr>; Wed, 8 Mar 2006 23:09:58 +0100
Received: from [192.168.42.2] (bhurt.dsl.visi.com [208.42.141.66])
	by cenn.mc.mpls.visi.com (Postfix) with ESMTP
	id A178A8209; Wed,  8 Mar 2006 16:09:57 -0600 (CST)
Date: Wed, 8 Mar 2006 16:11:04 -0600 (CST)
From: Brian Hurt <bhurt@spnz.org>
X-X-Sender: bhurt@localhost.localdomain
To: skaller <skaller@users.sourceforge.net>
Cc: William Lovas <wlovas@stwing.upenn.edu>, caml-list@yquem.inria.fr
Subject: Re: [Caml-list] STM support in OCaml
In-Reply-To: <1141855594.23909.63.camel@budgie.wigram>
Message-ID: <Pine.LNX.4.63.0603081555040.9569@localhost.localdomain>
References: <440DB255.1030701@asfandyar.cjb.net>  <1141751708.20944.355.camel@budgie.wigram>
  <440DD982.8080800@asfandyar.cjb.net>  <1141779125.20944.405.camel@budgie.wigram>
  <20060308193633.GA5460@coruscant.stwing.upenn.edu> 
 <Pine.LNX.4.63.0603081438460.9569@localhost.localdomain>
 <1141855594.23909.63.camel@budgie.wigram>
MIME-Version: 1.0
Content-Type: MULTIPART/MIXED; BOUNDARY="8323328-1771605653-1141855046=:9569"
Content-ID: <Pine.LNX.4.63.0603081607320.9569@localhost.localdomain>
X-Miltered: at concorde with ID 440F5636.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 rdtsc:01 afaik:01 interprocess:01 threads:01 roof:98 wrote:01 caml-list:01 slower:01 inline:01 kernel:01 kernel:01 caches:01 caches:01 exists:01 
X-Attachments: type="TEXT/X-CSRC" name="lock.c" name="lock.c" 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

  This message is in MIME format.  The first part should be readable text,
  while the remaining parts are likely unreadable without MIME-aware tools.

--8323328-1771605653-1141855046=:9569
Content-Type: TEXT/PLAIN; CHARSET=US-ASCII; FORMAT=flowed
Content-ID: <Pine.LNX.4.63.0603081607321.9569@localhost.localdomain>



On Thu, 9 Mar 2006, skaller wrote:

> Ahem. Now try that on an AMDx2 (dual core). The cost goes through
> the roof if one process has a thread on each core. Because each
> core has its own cache and both caches have to be flushed/
> synchronised. And those caches are BIG!

Love to.  Wanna buy me the box?  :-}  Seriously- my code is attached, if 
someone wants to run it on other boxes and post the results, feel free. 
It's GNU-C/x86 specific, as I'm using GNU C's inline assembler and the 
rdtsc instruction to get accurate cycle counts.

As to the cache comment: the whole caches don't have to be flushed, just 
the line the mutex is on.  Which makes it approximately the cost of a 
cache miss- that's a good approximation of the cost of getting an 
uncontended lock.

>
> I have no idea if Linux, for example, running SMP kernel,
> is smart enough to know if a mutex is shared between two
> processing units or not: AFAIK Linux doesn't support
> interprocess mutex. Windows does. Be interesting to
> compare.

It doesn't look like the mutex software is even going into the kernel. 
I don't think the Linux kernel even knows the mutex *exists*, let alone 
what threads are competing for it.  On the x86, at least, lock 
instructions are not priveledged.

>
> As mentioned before the only data I have at the moment
> is a two thread counter increment experiment on a dual
> CPU G5 box, where the speed up from 2 CPUs vs 1 was
> a factor of 15 .. times SLOWER.

If you're ping-ponging a cache line between two CPUs (and the AMD dual 
cores count as two CPUs), then I can easily beleive that.

So?

Brian

--8323328-1771605653-1141855046=:9569
Content-Type: TEXT/X-CSRC; CHARSET=US-ASCII; NAME=lock.c
Content-Transfer-Encoding: BASE64
Content-ID: <Pine.LNX.4.63.0603081557260.9569@localhost.localdomain>
Content-Description: 
Content-Disposition: ATTACHMENT; FILENAME=lock.c

I2luY2x1ZGUgPHN0ZGlvLmg+DQojaW5jbHVkZSA8cHRocmVhZC5oPg0KI2lu
Y2x1ZGUgPHNlbWFwaG9yZS5oPg0KDQojaWYgIWRlZmluZWQoX19HTlVDX18p
ICYmICFkZWZpbmVkKF9faTM4Nl9fKQ0KI2Vycm9yIFRoaXMgY29kZSBvbmx5
IHdvcmtzIHdpdGggR0NDL2kzODYuDQojZW5kaWYNCg0KLyogVGhlIHJlYXNv
biB0aGlzIG9ubHkgd29ya3MgdW5kZXIgR05VIEMgYW5kIHRoZSB4ODYgaXMg
d2UncmUgdXNpbmcgdGhlDQogKiByZHRzYyBpbnN0cnVjdGlvbi4NCiAqLw0K
c3RhdGljIGlubGluZSB1bnNpZ25lZCBsb25nIGxvbmcgcmR0c2MoKSB7DQoJ
dW5zaWduZWQgbG9uZyBsb25nIHJ2YWw7DQoNCglhc20gdm9sYXRpbGUgKCJy
ZHRzYyIgOiAiPUEiIChydmFsKSk7DQoJcmV0dXJuIHJ2YWw7DQp9DQoNCnN0
YXRpYyBzZW1fdCB3YWl0aW5nX3RocmVhZF9zZW1hcGhvcmU7DQpzdGF0aWMg
cHRocmVhZF9tdXRleF90IG11dGV4Ow0KDQp2b2lkICogd2FpdGluZ190aHJl
YWRfZnVuYyh2b2lkICogcGFyYW0gX19hdHRyaWJ1dGVfXygodW51c2VkKSkp
IHsNCglzZW1fd2FpdCgmd2FpdGluZ190aHJlYWRfc2VtYXBob3JlKTsNCgly
ZXR1cm4gTlVMTDsNCn0NCg0KaW50IG1haW4odm9pZCkgew0KCWludCBpOw0K
CXB0aHJlYWRfdCB3YWl0aW5nX3RocmVhZDsNCgl2b2lkICogdHJhc2g7DQoJ
dW5zaWduZWQgbG9uZyBsb25nIHN0YXJ0LCBzdG9wLCB0aW1lLCBtaW47DQoN
Cg0KCS8qIENyZWF0ZSBhIHRocmVhZCB0byBmb3JjZSB1cyB0byBhY3R1YWxs
eSBkbyBtdWx0aS10aHJlYWRlZCB3b3JrICovDQoJc2VtX2luaXQoJndhaXRp
bmdfdGhyZWFkX3NlbWFwaG9yZSwgMSwgMCk7DQoJcHRocmVhZF9jcmVhdGUo
JndhaXRpbmdfdGhyZWFkLCBOVUxMLCB3YWl0aW5nX3RocmVhZF9mdW5jLCBO
VUxMKTsNCg0KCXB0aHJlYWRfbXV0ZXhfaW5pdCgmbXV0ZXgsIE5VTEwpOw0K
DQoJLyogVGltZSBob3cgbG9uZyBhIHJkdHNjIHRha2VzLSB3ZSBkbyB0aGlz
IHRlbiB0aW1lcyBhbmQgdGFrZSB0aGUgDQoJICogY2hlYXBlc3QgcnVuLg0K
CSAqLw0KCW1pbiA9IH4wdWxsOw0KCWZvciAoaSA9IDA7IGkgPCAxMDsgKytp
KSB7DQoJCXN0YXJ0ID0gcmR0c2MoKTsNCgkJc3RvcCA9IHJkdHNjKCk7DQoJ
CXRpbWUgPSBzdG9wIC0gc3RhcnQ7DQoJCWlmICh0aW1lIDwgbWluKSB7DQoJ
CQltaW4gPSB0aW1lOw0KCQl9DQoJfQ0KCXByaW50ZigiTWluaW11bSB0aW1l
IGZvciBhIHJkdHNjIGluc3RydWN0aW9uIChpbiBjbG9ja3MpOiAlbGx1XG4i
LCBtaW4pOw0KDQoJLyogTm93IHRpbWUgaG93IGxvbmcgdGhlIHBhaXIgb2Yg
bXV0ZXggbG9jayArIHVubG9jayB0YWtlICovDQoJbWluID0gfjB1bGw7DQoJ
Zm9yIChpID0gMDsgaSA8IDEwOyArK2kpIHsNCgkJc3RhcnQgPSByZHRzYygp
Ow0KCQlwdGhyZWFkX211dGV4X2xvY2soJm11dGV4KTsNCgkJcHRocmVhZF9t
dXRleF91bmxvY2soJm11dGV4KTsNCgkJc3RvcCA9IHJkdHNjKCk7DQoJCXRp
bWUgPSBzdG9wIC0gc3RhcnQ7DQoJCWlmICh0aW1lIDwgbWluKSB7DQoJCQlt
aW4gPSB0aW1lOw0KCQl9DQoJfQ0KCXByaW50ZigiTWluaW11bSB0aW1lIGZv
ciBhIG11dGV4IGxvY2srdW5sb2NrICsgcmR0c2MgKGluIGNsb2Nrcyk6ICVs
bHVcbiIsIG1pbik7DQoNCgkvKiBDbGVhbiB1cCB0aGUgd2FpdGluZyB0aHJl
YWQgd2Ugc3Bhd25lZCBqdXN0IHRvIGJlIG11bHRpdGhyZWFkZWQuICovDQoJ
c2VtX3Bvc3QoJndhaXRpbmdfdGhyZWFkX3NlbWFwaG9yZSk7DQoJcHRocmVh
ZF9qb2luKHdhaXRpbmdfdGhyZWFkLCAmdHJhc2gpOw0KCXNlbV9kZXN0cm95
KCZ3YWl0aW5nX3RocmVhZF9zZW1hcGhvcmUpOw0KCXJldHVybiAwOw0KfQ0K
DQo=

--8323328-1771605653-1141855046=:9569--

