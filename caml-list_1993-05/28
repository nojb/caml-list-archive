Received: by margaux.inria.fr, Thu, 27 May 93 09:45:28 +0200
Received: from concorde.inria.fr by margaux.inria.fr, Thu, 27 May 93 00:23:55 +0200
Received: from Tamuz.Stanford.EDU by concorde.inria.fr; Thu, 27 May 1993 00:24:34 +0200
Received:  by Tamuz.Stanford.EDU (5.61/25-theory-eef) id AA00939; Wed, 26 May 93 15:24:10 -0700
From: Xavier Leroy <xavier@Theory.Stanford.EDU>
Message-Id: <9305262224.AA00939@Tamuz.Stanford.EDU>
Subject: Re: Non-blocking input in caml-light
To: benjamin.pierce@dcs.ed.ac.uk
Date: Wed, 26 May 1993 15:24:09 -0700 (PDT)
Cc: caml-list@margaux
In-Reply-To: <4194.737978909@ed.dcs> from "Benjamin Pierce" at May 21, 93 11:08:29 am
Content-Type: text
Content-Length: 1109      
Sender: weis@margaux
Status: O

> Est-ce qu'on peut faire un "read-char" tel que l'on ne bloque pas si
> il n'y a rien a lire?

Ah, il est bien connu que c'est une des operations les plus difficiles
a faire en Unix! Essentiellement, il faut:

        1- passer le tty driver en mode CBREAK ou RAW, pour que les
           caracteres tapes soient envoyes immediatement au programme
           (et non pas accumules ligne a ligne)
        2- avant de lire, utiliser select avec un timeout de 0 pour tester
           s'il y a des caracteres disponibles.

1- se fait avec les bons ioctl, de preference dans un morceau de code C
(on peut le faire en Caml Light a l'aide de la fonction ioctl de la
bibliotheque Unix, mais c'est du sport, cf. l'annexe de [1]).
2- se fait en C ou en Caml Light avec la bibliotheque Unix [1].

Autres possibilites: RT, la toolkit X Windows de Caml Light, permet
surement de faire ca. Ou bien, tant qu'a ecrire du C, il vaut
peut-etre mieux s'interfacer avec curses.

- Xavier

[1] "Programmation du systeme Unix en Caml Light", INRIA, rapport
technique 147, sur ftp.inria.fr, fichier INRIA/publication/RT0147.ps.Z.



