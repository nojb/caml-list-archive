Received: by margaux.inria.fr, Tue, 4 May 93 11:39:22 +0200
Received: by margaux.inria.fr, Tue, 4 May 93 11:38:06 +0200
Date: Tue, 4 May 93 11:38:06 +0200
Message-Id: <9305040938.AA01419@margaux.inria.fr>
From: Valerie.Menissier@inria.fr (Vale'rie Me'nissier-Morain)
Sender: weis@margaux
To: cousinea@dmi.ens.fr
Cc: caml-list@margaux
In-Reply-To: cousinea@dmi.ens.fr's message of Tue, 4 May 93 11:14:37 +0200 <9305040914.AA08481@arnica.ens.fr>
Subject: new library modules
Status: O

Just a remark about your last point: 

> Rather than using type "int" for comparison, it would be clearer
> to use an explicit type comparison = Smaller | Equiv | Greater.

While implementing arithmetic I have some practice of comparison
and sign functions and at the beginning I think like you that a 3
values boolean type will be a good feature, more precise than type
"int" with bad values to treat, but for several operations we need
arithmetic operations on these objects, and it is easier to use type
"int" than do some boolean operations on these values. So practically
it is not so clear that we always want to use such a type.




