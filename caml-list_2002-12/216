Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA18911; Sat, 21 Dec 2002 00:31:12 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA19095 for <caml-list@pauillac.inria.fr>; Sat, 21 Dec 2002 00:31:10 +0100 (MET)
Received: from dux.ru (dux.ru [193.125.210.65])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id gBKNV9n26332
	for <caml-list@inria.fr>; Sat, 21 Dec 2002 00:31:09 +0100 (MET)
Received: from dux.ru (localhost [127.0.0.1])
	by dux.ru (8.12.6/8.12.6) with ESMTP id gBKNafhW007464
	for <caml-list@inria.fr>; Sat, 21 Dec 2002 02:36:42 +0300 (MSK)
	(envelope-from snob@snob.spb.ru)
Received: (from uucp@localhost)
	by dux.ru (8.12.6/8.12.1/Submit) with UUCP id gBKNafRl007463
	for caml-list@inria.fr; Sat, 21 Dec 2002 02:36:41 +0300 (MSK)
	(envelope-from snob@snob.spb.ru)
Received: (qmail 1288 invoked by uid 0); 20 Dec 2002 23:37:59 -0000
Received: from unknown (HELO athlon.snob.spb.ru) (unknown)
  by unknown with SMTP; 20 Dec 2002 23:37:59 -0000
Content-Type: text/plain;
  charset="iso-8859-1"
From: Nickolay Semyonov-Kolchin <snob@snob.spb.ru>
To: Sven Luther <luther@dpt-info.u-strasbg.fr>
Subject: Re: [Caml-list] Announce: camlgl - OpenGL bindings for OCaml
Date: Sat, 21 Dec 2002 02:19:18 +0500
User-Agent: KMail/1.4.3
References: <200212201546.12363.snob@snob.spb.ru> <20021220152805.GA3522@iliana>
In-Reply-To: <20021220152805.GA3522@iliana>
Cc: caml-list@inria.fr
MIME-Version: 1.0
Content-Transfer-Encoding: quoted-printable
Message-Id: <200212210219.18421.snob@snob.spb.ru>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Friday 20 December 2002 20:28, Sven Luther wrote:
> >
> > http://www.sf.net/projects/camlgl
> >
> > Key Features:
> > - Full OpenGL 1.4 support
> > - All window system independent ARB extensions supported
> > - All published NVidia extensions supported (including NV30)
> > - All ATI extensions supported
> > - Windows and Linux version
> > - GLFW bindings
> > - unsupported Glut and SDL bindings
>
> Would you care to comment about the difference between your bindings an=
d
> the lablgl bindings,=20

Unsorted comparison:
- LablGL is a high level library build on top of the GL.=20
- CamlGL provides direct GL bindings.
---------------------------------------------
/* C code */
glMatrixMode(GL_MODELVIEW);
glPushMatrix();
glRotatef(1.0f,0.0f,2.0f,0.0f);
glVertex3f(1.0f,1.0f,1.0f);

(* LablGL version *)
GlMat.mode `modelview;
GlMat.push ();
GlMat.rotate ~angle:1.0 ~y:2.0 ();
GlDraw.vertex ~x:1.0 ~y:1.0 ~z:1.0 ();

(* CamlGL version *)
open Gl
glMatrixMode cgl_modelview;
glPushMatrix ();
glRotatef 1.0 0.0 2.0 0.0;
glVertex3f 1.0 1.0 1.0;
---------------------------------------------
- LablGL (afaik) support all Ocaml enironments
- CamlGL (at present time) support only Linux and Windows (VC version)

- LablGL implements only a subset of OGL functions.
- CamlGL has full OGL support (with two exceptions)
glGetPointerv and glMultiDrawElements are not supported.

- LablGL has partitial GLU support
- CamlGL has no GLU support (and will never have)

- LablGL is a safe library
- CamlGL may produce "unstable" behaviour
I.e. if glGenLists or glGenTextures return value bigger than Caml max_int=
 ---=20
you are doomed. (Not possible with current NVidia & ATI drivers). You can=
 get=20
a segfault by giving incorrect array bounds for GL data, and so on.=20

- CamlGL uses dynamic function loading which can cause trouble under Wind=
ows=20
enironment. (This is poor theory)

- CamlGL produces very big executable files: ~700K under Linux, ~400K und=
er=20
Windows. (I don't care about that)

- CamlGL programs can be much faster than LablGL (VA, VAR, VAO, VP, etc)

- CamlGL can be integrated with existing C libraries without any trouble.=
=20
(Bigarrays)

- CamlGL can be used for modern 3d graphics. (Vertex shaders, Pixel shade=
rs,=20
Multitexturing, VAR/VAO)

> the reason which made you implement a new
> alternative=20

LablGL has no support for GL extensions and uses syntax very different fr=
om=20
normal GL.=20

>and the problems there would be in unifying both
> implementations ?

LablGL can be implemented on top of my library.=20

> Would it also be possible to use it with lablgtk, do you think ?
>

Yes, I'am using it with lablgtk. I can send you description (cryptic) how=
 this=20
can be done.=20

Comments, suggestions are always welcome.

Nickolay
-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

