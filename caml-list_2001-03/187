Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA15089; Fri, 23 Mar 2001 18:30:42 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA14958 for <caml-list@pauillac.inria.fr>; Fri, 23 Mar 2001 18:30:40 +0100 (MET)
Received: from mumnunah.cs.mu.OZ.AU (mail-gate.cs.mu.oz.au [198.142.254.221])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f2NHUaX13366
	for <caml-list@inria.fr>; Fri, 23 Mar 2001 18:30:36 +0100 (MET)
Received: from hg.cs.mu.oz.au (root@hg.cs.mu.OZ.AU [128.250.25.19]) by mumnunah.cs.mu.OZ.AU with ESMTP
        id EAA04708; Sat, 24 Mar 2001 04:30:26 +1100 (EST)
Received: (from fjh@localhost)
	by hg.cs.mu.oz.au (8.9.3/8.9.3/SuSE Linux 8.9.3-0.1) id EAA24772;
	Sat, 24 Mar 2001 04:30:23 +1100
Date: Sat, 24 Mar 2001 04:30:22 +1100
From: Fergus Henderson <fjh@cs.mu.OZ.AU>
To: Brian Rogoff <bpr@best.com>
Cc: Markus Mottl <mottl@miss.wu-wien.ac.at>,
        Hendrik Tews <tews@tcs.inf.tu-dresden.de>, OCAML <caml-list@inria.fr>
Subject: Re: [Caml-list] recursive modules redux, & interface files
Message-ID: <20010324043022.A19742@hg.cs.mu.oz.au>
References: <20010322140157.A7070@miss.wu-wien.ac.at> <Pine.BSF.4.21.0103220834270.28285-100000@shell5.ba.best.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0pre3i
In-Reply-To: <Pine.BSF.4.21.0103220834270.28285-100000@shell5.ba.best.com>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On 22-Mar-2001, Brian Rogoff <bpr@best.com> wrote:
> 
> I haven't found in
> my own programming a compelling case where module spanning mutually
> recursive function definitions were an issue. Is it possible to produce a 
> reasonably sized example, Hendrik (or Chris)?

In the Mercury compiler, we have made significant use of module spanning
mutually recursive procedures.  For example, the code generator
is split among several modules, roughly for each language construct
(e.g. ite_gen handles code generation for if-then-elses,
switch_gen handles code generation for switches, etc.),
and since if-then-elses can contain switches (and vice versa),
the procedures in these modules are mutually recursive.

-- 
Fergus Henderson <fjh@cs.mu.oz.au>  |  "I have always known that the pursuit
                                    |  of excellence is a lethal habit"
WWW: <http://www.cs.mu.oz.au/~fjh>  |     -- the last words of T. S. Garp.
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

