Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA17594; Mon, 5 Mar 2001 17:57:20 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA17672 for <caml-list@pauillac.inria.fr>; Mon, 5 Mar 2001 17:57:19 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f25GvG921581;
	Mon, 5 Mar 2001 17:57:16 +0100 (MET)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA17424; Mon, 5 Mar 2001 17:57:15 +0100 (MET)
Date: Mon, 5 Mar 2001 17:57:15 +0100
From: Xavier Leroy <Xavier.Leroy@inria.fr>
To: Chris Hecker <checker@d6.com>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] bigarrays and toplevel on Win32?
Message-ID: <20010305175715.B16895@pauillac.inria.fr>
References: <4.3.2.7.2.20010304234009.00e1e220@shell16.ba.best.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0i
In-Reply-To: <4.3.2.7.2.20010304234009.00e1e220@shell16.ba.best.com>; from checker@d6.com on Sun, Mar 04, 2001 at 11:43:16PM -0800
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> I can not seem to get the bigarray module to work at the toplevel,
> no matter what I do.  I've got both ocamlc and ocamlopt apps
> building and working fine using bigarrays.
> I always get "The external function `bigarray_get_1' is not
> available".  I must be doing something stupid and wrong.  Any ideas?

This is a known bug in OCaml 3.00.  A simple fix is described here:

    http://caml.inria.fr/bin/caml-bugs/fixed?id=94

and of course this will be fixed in OCaml 3.01.

Concerning bounds checks for bigarray accesses: you are correct that
the current implementation always perform them, there is no equivalent
to Array.unsafe_{get,set}, and the -unsafe flag simply doesn't apply
to bigarrays.

The party line on unsafe array accesses is unclear: on the one hand,
we do not want to encourage their use, as it can break type safety and
dramatically reduce the safety of the programs; on the other hand,
they are handy when benchmarking against C or Fortran :-)

I'll keep that in mind for 3.02.

- Xavier Leroy
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

