Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA07037; Wed, 7 Mar 2001 16:54:45 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA07021 for caml-list@pauillac.inria.fr; Wed, 7 Mar 2001 16:54:45 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id IAA02443 for <caml-list@pauillac.inria.fr>; Tue, 6 Mar 2001 08:51:02 +0100 (MET)
Received: from gatesrv.rz.unibw-muenchen.de (gatesrv.RZ.UniBw-Muenchen.de [137.193.10.21])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f267p2D13699
	for <caml-list@inria.fr>; Tue, 6 Mar 2001 08:51:02 +0100 (MET)
Received: from dionysos.informatik.unibw-muenchen.de (dionysos.Informatik.UniBw-Muenchen.de [137.193.60.41])
	by gatesrv.rz.unibw-muenchen.de (8.11.2/8.11.2) with SMTP id f267mFU01212
	for <caml-list@inria.fr>; Tue, 6 Mar 2001 08:48:16 +0100 (MET)
Received: (qmail 11705 invoked by uid 210); 6 Mar 2001 07:46:40 -0000
Date: 6 Mar 2001 07:46:40 -0000
Message-ID: <20010306074640.11704.qmail@dionysos.informatik.unibw-muenchen.de>
From: kahl@heraklit.informatik.unibw-muenchen.de
To: caml-list@inria.fr
In-reply-to: <20010306064655.A3629@verdot.inria.fr> (message from Daniel de
	Rauglaudre on Tue, 6 Mar 2001 06:46:55 +0100)
Subject: Re: [Caml-list] Accessing the nth element in a stream takes time quadratic in n
References: <200103052250.XAA17502@amertume.ufr-info-p7.jussieu.fr> <20010306064655.A3629@verdot.inria.fr>
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Daniel de Rauglaudre <daniel.de_rauglaudre@inria.fr> wrote:

 > The streams and stream parsers in OCaml parser are not optimized.

I am surprised!

So that's why they allow you only
to go faster than nsgmls (C++),
but not faster than sgmls (C)!   ;-)

(I must admit that I usually have ``-inline 25'',
 and that the .o/.ml length ratio is unusually high
 for the stream parser module.

 The experimemnt was, in addition, with a not fully validating parser,
 and without part of the entity replacement complexities of SGML.
)

So I still am inclined to consider stream parsers as a fast
and useful alternative.
(But then I haven't tried to define streams recursively...)

The ocamllex/ocamlyacc implemented XML parser ``tony''
posted here quite a while ago could not compare, neither speed-wise,
nor in the size of files it could digest.
(I have never seen an update announcement of tony --- maybe I missed it.)


Wolfram Kahl
kahl@ist.unibw-muenchen.de
http://ist.unibw-muenchen.de/kahl/
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

