Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA14822; Tue, 27 Mar 2001 21:25:40 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA14818 for <caml-list@pauillac.inria.fr>; Tue, 27 Mar 2001 21:25:39 +0200 (MET DST)
Received: from miss.wu-wien.ac.at (miss.wu-wien.ac.at [137.208.107.17])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f2RJPdT08101
	for <caml-list@inria.fr>; Tue, 27 Mar 2001 21:25:39 +0200 (MET DST)
Received: (from mottl@localhost)
	by miss.wu-wien.ac.at (8.9.0/8.9.0) id VAA27449;
	Tue, 27 Mar 2001 21:25:33 +0200 (MET DST)
Date: Tue, 27 Mar 2001 21:25:33 +0200
From: Markus Mottl <mottl@miss.wu-wien.ac.at>
To: Jan Skibinski <jans@numeric-quest.com>
Cc: wester@ilt.fhg.de, caml-list@inria.fr
Subject: Re: [Caml-list] Complex numbers in OCaml
Message-ID: <20010327212533.A24387@miss.wu-wien.ac.at>
References: <20010327191938.A13345@miss.wu-wien.ac.at> <Pine.LNX.4.21.0103271241170.23430-100000@info.numeric-quest.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <Pine.LNX.4.21.0103271241170.23430-100000@info.numeric-quest.com>; from jans@numeric-quest.com on Tue, Mar 27, 2001 at 12:48:55 -0500
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, 27 Mar 2001, Jan Skibinski wrote:
> Or not. :-)
> 
> One of the articles by William Kahan (www.cs.berkeley.edu/~wkahan/)
> "How JAVA's Floating-Point Hurts Everyone Everywhere" discusses
> (among other things) some traps in complex number implementations,
> including those in Fortran.

Really interesting article! I always believed that doing floating-point
arithmetic correctly was a tricky business - now I am convinced... ;)

Good to know for us that OCaml is at least extremely close to the IEEE
754 standard, though there is still criticism in this article that is
relevant for OCaml, too (e.g. things like non-availability of extended
double-precision; lack of operator overloading; etc.). Luckily, my needs
for numerical computation are not this high...

Regards,
Markus Mottl

-- 
Markus Mottl, mottl@miss.wu-wien.ac.at, http://miss.wu-wien.ac.at/~mottl
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

