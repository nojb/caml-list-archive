Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA14996; Thu, 22 Mar 2001 12:10:48 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: (from weis@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id MAA14340 for caml-list@pauillac.inria.fr; Thu, 22 Mar 2001 12:10:47 +0100 (MET)
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id MAA30883 for <caml-list@pauillac.inria.fr>; Mon, 19 Mar 2001 12:05:15 +0100 (MET)
Received: from localhost.localdomain (ppp48.dyn142.pacific.net.au [210.23.142.48])
	by nez-perce.inria.fr (8.11.1/8.10.0) with ESMTP id f2JB5CP17195
	for <caml-list@inria.fr>; Mon, 19 Mar 2001 12:05:13 +0100 (MET)
Received: from ozemail.com.au (IDENT:root@localhost [127.0.0.1])
	by localhost.localdomain (8.9.3/8.8.7) with ESMTP id WAA24439;
	Mon, 19 Mar 2001 22:04:52 +1100
Message-ID: <3AB5E7D2.8C611747@ozemail.com.au>
Date: Mon, 19 Mar 2001 22:04:50 +1100
From: John Max Skaller <skaller@ozemail.com.au>
X-Mailer: Mozilla 4.7 [en] (X11; I; Linux 2.2.12-20 i686)
X-Accept-Language: en
MIME-Version: 1.0
To: Chris Hecker <checker@d6.com>
CC: caml-list@inria.fr
Subject: Re: [Caml-list] recursive modules redux, & interface files
References: <4.3.2.7.2.20010318142842.00d85300@shell16.ba.best.com>
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Chris Hecker wrote:
> 
> Two questions/problems:
> 
> 1.  So, I understand that doing recursive types across modules is hard (but I'd say very important for decoupling large software), but is it true that I can't even call across modules recursively? 

	Yes. More precisely, you cannot forward reference any symbol,
however you _can_ call forward by passing a function backward as an
argument.
[This sucks though]

> 2. Also, on a related note, why do the interface file and the implementation file (or equivalently, I believe, the signature and structure) both have to have all the concrete types duplicated? 

	Because types in a given implementation may or may not be present
in the interface.

	IF you have a file containing ONLY types, then there is no need
to have an .ml file for it. If you have even one val (function, class),
you need the .ml file.


-- 
John (Max) Skaller, mailto:skaller@maxtal.com.au
10/1 Toxteth Rd Glebe NSW 2037 Australia voice: 61-2-9660-0850
checkout Vyper http://Vyper.sourceforge.net
download Interscript http://Interscript.sourceforge.net
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

