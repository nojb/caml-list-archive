Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id PAA27400; Sat, 17 Mar 2001 15:04:51 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id PAA27439 for <caml-list@pauillac.inria.fr>; Sat, 17 Mar 2001 15:04:50 +0100 (MET)
Received: from dynabook (h132-121.tokyu-net.catv.ne.jp [210.149.132.121])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f2HE4mL29283
	for <caml-list@inria.fr>; Sat, 17 Mar 2001 15:04:49 +0100 (MET)
Received: from dynabook
	([127.0.0.1] helo=localhost ident=sumii)
	by dynabook with esmtp (Exim 3.12 #1 (Debian))
	id 14eHK9-0001p4-00; Sat, 17 Mar 2001 23:04:53 +0900
To: caml-list@inria.fr
From: eijiro_sumii@anet.ne.jp
cc: sumii@venus.is.s.u-tokyo.ac.jp
Subject: [Caml-list] questions about marshalling
X-Mailer: Mew version 1.94.2 on Emacs 20.7 / Mule 4.1 (AOI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-Id: <20010317230450C.sumii@yl.is.s.u-tokyo.ac.jp>
Date: Sat, 17 Mar 2001 23:04:50 +0900
X-Dispatcher: imput version 991025(IM133)
Lines: 44
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

I have questions about marshaling in ocaml-3.0x:

(1) Is it safe to marshal values of a statically polymorphic type, like

      let f x = Marshal.to_channel outchan (x, x) [Marshal.Closures]

    for example, provided that the marshaled values will be unmarshaled as
    values of the right types at runtime?

(2) Is it safe to *un*marshal a value at a statically polymorphic type
    and use it later at a statically monomorphic type, like

      let g x = fst x
      let y : int = g (Marshal.from_channel inchan)

    for example, provided that the value has the right type at runtime?

My guess is that both of these are safe, even though the document says

  The programmer should explicitly give the expected type of the
  returned value, using the following syntax: `(Marshal.from_channel
  chan : type)'.

because the (un)marshaling function itself works on the basis of the
runtime tag rather than the static type of a value -- a catastrophe
may be caused *later* when the value is actually used at a wrong type.
Am I correct?

(3) Yet another question: in a program using marhsaling (via ocamlmpi,
    actually), I get the following error:

      Fatal error: uncaught exception Failure("input_value: ill-formed message")

    What does this mean?  I am quite sure that all the hosts are
    running the same binary, and I am using only ocamlmpi for
    communication.  Does this necessarily mean that I gave a wrong
    type for the unmarshaled value (in Mpi.receive, to be specific),
    or are there other possibilities?  It seems that this assertion
    failure occurs at line 272 in byterun/intern.c, examining the
    runtime tag of the value.

Many thanks in advance,

   Eijiro
-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

