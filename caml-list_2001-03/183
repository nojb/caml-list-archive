Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id NAA09050; Fri, 23 Mar 2001 13:18:46 +0100 (MET)
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id NAA09477 for <caml-list@pauillac.inria.fr>; Fri, 23 Mar 2001 13:18:46 +0100 (MET)
Received: from cremant.inria.fr (cremant.inria.fr [128.93.8.143])
	by concorde.inria.fr (8.11.1/8.10.0) with ESMTP id f2NCIiX02097;
	Fri, 23 Mar 2001 13:18:44 +0100 (MET)
Received: (from lefessan@localhost)
	by cremant.inria.fr (8.11.0/8.11.0) id f2NCIiA03694;
	Fri, 23 Mar 2001 13:18:44 +0100
X-Authentication-Warning: cremant.inria.fr: lefessan set sender to fabrice.le_fessant@inria.fr using -f
From: Fabrice Le Fessant <fabrice.le_fessant@inria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Message-ID: <15035.16163.411299.75452@cremant.inria.fr>
Date: Fri, 23 Mar 2001 13:18:43 +0100 (CET)
To: Tom.Hirschowitz@inria.fr
Cc: Dave Berry <Dave@kal.com>, caml-list@inria.fr
Subject: Re: [Caml-list] recursive modules redux, & interface files
References: <DD7356599083414BA450E3DCC4119B8B04100D@NT.kal.com>
	<3ABB0143.81FB4357@inria.fr>
X-Mailer: VM 6.75 under Emacs 20.7.1
Reply-To: fabrice.le_fessant@inria.fr
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk


Why don't you use classes ? You can define classes with "virtual"
methods for the functions you will not define immediatly, and then
define them in another module. Later, you can create a class which
inherit from both classes, thus binding correctly all variables.

Isn't "late binding" the only interest of objects ? :) 

Of course, this only works for functions. For types, you should use
a separate module. Some time ago, I wrote a patch to ocaml to allow
C-like linking under some conditions. I can update it to 3.01 if you
are interested.

- Fabrice

-------------------
To unsubscribe, mail caml-list-request@inria.fr.  Archives: http://caml.inria.fr

