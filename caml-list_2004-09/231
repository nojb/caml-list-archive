Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id VAA09672; Thu, 9 Sep 2004 21:59:08 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id VAA10152 for <caml-list@pauillac.inria.fr>; Thu, 9 Sep 2004 21:59:07 +0200 (MET DST)
Received: from outbound28-2.lax.untd.com (outbound28-2.lax.untd.com [64.136.28.160])
	by nez-perce.inria.fr (8.13.0/8.13.0) with SMTP id i89Jx6U8001148
	for <caml-list@inria.fr>; Thu, 9 Sep 2004 21:59:06 +0200
Received: from outbound28-2.lax.untd.com (smtp01.lax.untd.com [10.130.24.121])
	by smtpout01.lax.untd.com with SMTP id AABAWBPQMAYAVE3J
	for <caml-list@inria.fr> (sender <vanevery@indiegamedesign.com>);
	Thu,  9 Sep 2004 12:58:03 -0700 (PDT)
Received: (qmail 17420 invoked from network); 9 Sep 2004 19:57:18 -0000
Received: from unknown (HELO vangogh) (66.52.246.69)
  by smtp01.lax.untd.com with SMTP; 9 Sep 2004 19:57:18 -0000
From: "Brandon J. Van Every" <vanevery@indiegamedesign.com>
To: <caml-list@inria.fr>
Subject: [Caml-list] 32-bit is sticking around
Date: Thu, 9 Sep 2004 13:08:21 -0700
Message-ID: <OOEALCJCKEBJBIJHCNJDMEBJHIAB.vanevery@indiegamedesign.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="us-ascii"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.6604 (9.0.2911.0)
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
Importance: Normal
In-Reply-To: <Pine.LNX.4.44.0409090759180.5809-100000@localhost.localdomain>
X-ContentStamp: 15:7:2694632768
X-UNTD-OriginStamp: CI84cOLHFqh7Zd2QWkwvEFvwyO3T/pIsFsCrOjjLH86cl46a4TfSkNZJKVxswdhI
X-Miltered: at nez-perce with ID 4140B60A.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; brandon:99 assuring:99 model:01 caml-list:01 bayesian:01 crap:01 crap:01 unboxed:01 alloc:01 alloc:01 val:01 val:01 bigarray:01 -bit:01 -bit:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Brian Hurt wrote:
>
> Absent the x86, 32-bitters are already out on servers.
> They're on their
> way out on desktops.  But they are still huge in the embedded
> world, and likely to remain so for quite some time.

Saying that 32-bit is "on the way out" on the desktop is tremendous
hyperbole.  What's really happening is soon we'll have a forward path on
the x86 desktop *to* 64-bit.  That ain't here yet in volume, and the
whole point of the AMD architecture is assuring backwards compatibility
for 32-bit.  It's going to be 5 years before 64-bit is happening on the
desktop in any dominant quantity, and 10 years before 32-bit actually
goes away.

To think otherwise is just moooing about what you want to happen rather
than what is actually going to happen and has always happened.  Consider
that only in Longhorn will Microsoft finally kill *16*-bit!

You guys can all dream on about your 64-bit machines.  I mastered 64-bit
on the DEC Alpha in 1996.  Then Compaq and Intel killed it.  I'm still
sad about that, and I hate Intel ASM.  The register poverty *sucks* !
The x87 FPU stack *sucks* !  SSE *sucks* !  Intel has always won by
getting shoddy products to market quickly, never by producing anything
that's any good.  They don't call it "the Wintel hegemony" for nuthin',
it's the hardware equivalent of Microsoft's business model.


Cheers,                         www.indiegamedesign.com
Brand*n Van Every               S*attle, WA

Praise Be to the caml-list Bayesian filter! It blesseth
my postings, it is evil crap!  evil crap!  Bigarray!
Unboxed overhead group!  Wondering!  chant chant chant...

Is my technical content showing?

// return an array of 100 packed tuples
temps
  int $[tvar0][2*100]; // what the c function needs
  value $[tvar1]; // one int
  value $[tvar2]; // one tuple
  int $[tvar3] // loop control var
oncePre
eachPre
  $[cvar0]=&($[tvar0][0]);
eachPost
  $[lvar0] = alloc(2*100, 0 /*NB: zero-tagged block*/ );
  for(int $[tvar3]=0;$[tvar3]<100;$[tvar3]++) {
    $[tvar2] = alloc_tuple(2);
    $[tvar1] = Val_int($[cvar0][0+2*$[tvar3]]);
    Store_field($[tvar2],0,$[tvar1]);
    $[tvar1] = Val_int($[cvar0][1]);
    Store_field($[tvar2],1,$[tvar1+2*$[tvar3]]);
    Array_store($[lvar0],$[tvar3],$[tvar0]);
  }
oncePost

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

