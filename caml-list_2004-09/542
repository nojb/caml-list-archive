Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA15096; Thu, 30 Sep 2004 20:46:59 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA22945 for <caml-list@pauillac.inria.fr>; Thu, 30 Sep 2004 20:46:57 +0200 (MET DST)
Received: from ptb-relay03.plus.net (ptb-relay03.plus.net [212.159.14.214])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i8UIkvON006683
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Thu, 30 Sep 2004 20:46:57 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by ptb-relay03.plus.net with esmtp (Exim) id 1CD5x4-000Mjv-Gf
	for caml-list@inria.fr; Thu, 30 Sep 2004 18:46:50 +0000
From: Jon Harrop <jon@jdh30.plus.com>
To: <caml-list@inria.fr>
Subject: Re: [Caml-list] Formal Methods
Date: Thu, 30 Sep 2004 19:42:41 +0100
User-Agent: KMail/1.6.2
References: <003901c4a713$ea0e4f00$1b447182@cas.mcmaster.ca>
In-Reply-To: <003901c4a713$ea0e4f00$1b447182@cas.mcmaster.ca>
MIME-Version: 1.0
Content-Disposition: inline
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Message-Id: <200409301942.41324.jon@jdh30.plus.com>
X-Miltered: at concorde with ID 415C54A1.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 2004:99 jacques:01 analogy:01 ocaml's:01 inference:01 api:01 generic:01 hofs:01 mli:01 compilers:01 compile:02 compile:02 wrote:03 wrote:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thursday 30 September 2004 18:35, Jacques Carette wrote:
> I also see an analogy with type systems such as Ocaml's: in theory, type
> inference is exponential, while in practice it is very fast.

I'd contest the "very fast".

When writing an API for my vector graphics engine, I wrote a lot of generic 
HOFs. The time taken to compile increased by a factor of ten. This prompted 
me to split my sources into separate compilation units to speed partial 
recompilations.

I believe the slow compile times are due to the complicated types involved 
(often half a page in the .mli) although the functions themselves are often 
very simple. So I think the time taken for compilers to deal with types can 
be very significant and can influence programming. So I don't think type 
handling is not always "very fast" in practice.

Cheers,
Jon.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

