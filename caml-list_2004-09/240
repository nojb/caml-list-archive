Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id BAA01897; Sat, 11 Sep 2004 01:48:17 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id BAA02130 for <caml-list@pauillac.inria.fr>; Sat, 11 Sep 2004 01:48:16 +0200 (MET DST)
Received: from mail4.speakeasy.net (mail4.speakeasy.net [216.254.0.204])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i8ANmElj002489
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Sat, 11 Sep 2004 01:48:16 +0200
Received: (qmail 23789 invoked from network); 10 Sep 2004 23:48:13 -0000
Received: from shell2.speakeasy.net ([69.17.110.71])
          (envelope-sender <brogoff@speakeasy.net>)
          by mail4.speakeasy.net (qmail-ldap-1.03) with AES256-SHA encrypted SMTP
          for <caml-list@inria.fr>; 10 Sep 2004 23:48:13 -0000
Date: Fri, 10 Sep 2004 16:48:13 -0700 (PDT)
From: brogoff <brogoff@speakeasy.net>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Gripes with array
In-Reply-To: <200409090310.29295.jon@jdh30.plus.com>
Message-ID: <Pine.LNX.4.58.0409101643590.32038@shell2.speakeasy.net>
References: <200409090310.29295.jon@jdh30.plus.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Miltered: at concorde with ID 41423D3E.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; brogoff:01 brogoff:01 caml-list:01 floats:01 arrays:01 arrays:01 speakeasy:01 sep:01 polymorphic:01 float:02 module:03 wrote:03 hack:03 array:04 array:04 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Thu, 9 Sep 2004, Jon Harrop wrote:
> I'm increasingly finding the outrageously finite size limit of arrays to be a
> pain. In particular, I'm peeved that the size limit is itself a function of
> the type which, therefore, makes writing polymorphic functions over arrays
> nay-on impossible (e.g. to make an array of maximum-sized arrays).

I'm surprised that there were no comments on this. Since the distinction for
floats is a performance hack, wouldn't it make more sense to just have a
separate module for fast float arrays?

-- Brian

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

