Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA30440; Sun, 26 Sep 2004 00:52:49 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA30984 for <caml-list@pauillac.inria.fr>; Sun, 26 Sep 2004 00:52:48 +0200 (MET DST)
Received: from web53010.mail.yahoo.com (web53010.mail.yahoo.com [206.190.39.200])
	by concorde.inria.fr (8.13.0/8.13.0) with SMTP id i8PMql1J013797
	for <caml-list@inria.fr>; Sun, 26 Sep 2004 00:52:47 +0200
Message-ID: <20040925225246.48566.qmail@web53010.mail.yahoo.com>
Received: from [136.2.1.101] by web53010.mail.yahoo.com via HTTP; Sat, 25 Sep 2004 15:52:46 PDT
Date: Sat, 25 Sep 2004 15:52:46 -0700 (PDT)
From: Vasili Galchin <vasiliocaml@yahoo.com>
Subject: Re: [Caml-list] C++ STL and template features compared with OCaml parametric polymorphism and OO features
To: Vasili Galchin <vasiliocaml@yahoo.com>,
        Nicolas Cannasse <warplayer@free.fr>, caml-list@inria.fr
In-Reply-To: <20040925221508.89462.qmail@web53007.mail.yahoo.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="0-1339999190-1096152766=:48306"
X-Miltered: at concorde with ID 4155F6BF.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 kent:99 pubs:01 cannasse:01 warplayer:01 haskell:01 extlib:01 enum:01 sourceforge:01 cannasse:01 kent:99 pubs:01 warplayer:01 haskell:01 extlib:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

--0-1339999190-1096152766=:48306
Content-Type: text/plain; charset=us-ascii

Hello,
 
   I found this paper that might be useful to Nicolas and others! http://www.cs.kent.ac.uk/pubs/1997/224/index.html
 
Regards, Vasya

Vasili Galchin <vasiliocaml@yahoo.com> wrote:
Thank you, Nicolas!
 
Vasili

Nicolas Cannasse <warplayer@free.fr> wrote:
Hello,
 
    I am reluctantly learning C++ STL (Standard Template Library) and the notion of templates. Templates don't seem to be that great ... just parametric plymorphism done in a somewhat heavy handed way when compared to the same in OCaml, Haskell, etc. However, teh STL notion of containers and available operations allowed on containers does seem to be be very powerful and not available in OCaml. Is the last statement true?
 
Kind regards, Vasili
You might have a look at ExtLib Enum module that is providing an uniform way of accessing  elements of a container and applying functionnal lazy operations (map, filter...) on them.
http://ocaml-lib.sourceforge.net/
 
Regards,
Nicolas Cannasse


---------------------------------
Do you Yahoo!?
Yahoo! Mail - 50x more storage than other providers!
		
---------------------------------
Do you Yahoo!?
Yahoo! Mail - 50x more storage than other providers!
--0-1339999190-1096152766=:48306
Content-Type: text/html; charset=us-ascii

<DIV>Hello,</DIV>
<DIV>&nbsp;</DIV>
<DIV>&nbsp;&nbsp; I found this paper that might be useful to Nicolas and others! <A href="http://www.cs.kent.ac.uk/pubs/1997/224/index.html">http://www.cs.kent.ac.uk/pubs/1997/224/index.html</A></DIV>
<DIV>&nbsp;</DIV>
<DIV>Regards, Vasya<BR><BR><B><I>Vasili Galchin &lt;vasiliocaml@yahoo.com&gt;</I></B> wrote:</DIV>
<BLOCKQUOTE class=replbq style="PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #1010ff 2px solid">
<DIV>Thank you, Nicolas!</DIV>
<DIV>&nbsp;</DIV>
<DIV>Vasili<BR><BR><B><I>Nicolas Cannasse &lt;warplayer@free.fr&gt;</I></B> wrote:</DIV>
<BLOCKQUOTE class=replbq style="PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #1010ff 2px solid">
<META content="MSHTML 6.00.2800.1458" name=GENERATOR>
<STYLE></STYLE>

<BLOCKQUOTE style="PADDING-RIGHT: 0px; PADDING-LEFT: 5px; MARGIN-LEFT: 5px; BORDER-LEFT: #000000 2px solid; MARGIN-RIGHT: 0px">
<DIV>Hello,</DIV>
<DIV><FONT face=Arial size=2></FONT>&nbsp;</DIV>
<DIV>&nbsp;&nbsp;&nbsp; I am reluctantly learning C++ STL (Standard Template Library) and the notion of templates. Templates don't seem to be that great ... just parametric plymorphism done in a somewhat heavy handed way when compared to the same in OCaml, Haskell, etc. However, teh STL notion of containers and available operations allowed on containers does seem to be be very powerful and not available in OCaml. Is the last statement true?</DIV>
<DIV><FONT face=Arial size=2></FONT>&nbsp;</DIV>
<DIV>Kind regards, Vasili</DIV></BLOCKQUOTE>
<DIV>You might have a look at ExtLib Enum module&nbsp;that is providing an uniform way of accessing&nbsp; elements of a container and applying functionnal lazy operations (map, filter...) on them.</DIV>
<DIV><FONT face=Arial size=2><A href="http://ocaml-lib.sourceforge.net/">http://ocaml-lib.sourceforge.net/</A></FONT></DIV>
<DIV><FONT face=Arial size=2></FONT>&nbsp;</DIV>
<DIV><FONT face=Arial size=2>Regards,</FONT></DIV>
<DIV><FONT face=Arial size=2>Nicolas Cannasse</FONT></DIV></BLOCKQUOTE>
<P>
<HR SIZE=1>
Do you Yahoo!?<BR><A href="http://us.rd.yahoo.com/mail_us/taglines/50x/*http://promotions.yahoo.com/new_mail/static/efficiency.html">Yahoo! Mail</A> - 50x more storage than other providers!</BLOCKQUOTE><p>
		<hr size=1>Do you Yahoo!?<br>
<a href="http://us.rd.yahoo.com/mail_us/taglines/50x/*http://promotions.yahoo.com/new_mail/static/efficiency.html">Yahoo! Mail</a> - 50x more storage than other providers!
--0-1339999190-1096152766=:48306--

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

