Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id RAA25251; Sun, 26 Sep 2004 17:03:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id RAA18110 for <caml-list@pauillac.inria.fr>; Sun, 26 Sep 2004 17:03:33 +0200 (MET DST)
Received: from smtp002.mail.ukl.yahoo.com (smtp002.mail.ukl.yahoo.com [217.12.11.33])
	by concorde.inria.fr (8.13.0/8.13.0) with SMTP id i8QF3Xu5015214
	for <caml-list@inria.fr>; Sun, 26 Sep 2004 17:03:33 +0200
Received: from unknown (HELO yahoo.fr) (sejourne?kevin@83.114.104.177 with plain)
  by smtp002.mail.ukl.yahoo.com with SMTP; 26 Sep 2004 15:03:33 -0000
Message-ID: <4156DB56.2020003@yahoo.fr>
Date: Sun, 26 Sep 2004 17:08:06 +0200
From: sejourne_kevin <sejourne_kevin@yahoo.fr>
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.6) Gecko/20040528 Debian/1.6-7
X-Accept-Language: fr-fr
MIME-Version: 1.0
To: skaller@users.sourceforge.net
CC: Jon Harrop <jon@jdh30.plus.com>, caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] C++ STL and template features compared with OCaml
 parametric polymorphism and OO features
References: <20040925225246.48566.qmail@web53010.mail.yahoo.com>	 <200409260234.50929.jon@jdh30.plus.com>	 <7f8e92aa04092522313d47820d@mail.gmail.com>	 <200409261405.37558.jon@jdh30.plus.com> <1096209379.28613.64.camel@pelican.wigram>
In-Reply-To: <1096209379.28613.64.camel@pelican.wigram>
Content-Type: text/plain; charset=us-ascii; format=flowed
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4156DA45.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 inference:01 lacking:01 functors:01 ocaml:01 ocaml:01 garbage:01 variants:01 concise:01 constructs:02 wrote:03 stl:03 functions:05 polymorphism:06 type:07 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

skaller wrote:
> Sure but Ocaml offers other advantages such as type inference
> lacking in C++ that make code more concise -- as well
> as nice scoping constructs, lexical scoping, higher
> order functions, variants, and garbage collection.
> [Did I miss something .. ? :]
Functors?

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

