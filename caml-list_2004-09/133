Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id GAA24261; Mon, 6 Sep 2004 06:47:22 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id GAA25357 for <caml-list@pauillac.inria.fr>; Mon, 6 Sep 2004 06:47:21 +0200 (MET DST)
Received: from herd.plethora.net (herd.plethora.net [205.166.146.1])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i864lKAq023432
	for <caml-list@inria.fr>; Mon, 6 Sep 2004 06:47:21 +0200
Received: from bhurt.plethora.net (bhurt.plethora.net [205.166.146.49])
	by herd.plethora.net (8.11.6/8.10.1) with ESMTP id i864lHK09572;
	Sun, 5 Sep 2004 23:47:17 -0500 (CDT)
Date: Sun, 5 Sep 2004 23:56:35 -0500 (CDT)
From: Brian Hurt <bhurt@spnz.org>
X-X-Sender: bhurt@localhost.localdomain
To: "chris.danx" <chris.danx@ntlworld.com>
cc: caml <caml-list@inria.fr>
Subject: Re: [Caml-list] build tools with critical mass?
In-Reply-To: <413BC51A.1030009@ntlworld.com>
Message-ID: <Pine.LNX.4.44.0409052347330.5809-100000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Miltered: at concorde with ID 413BEBD8.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 segfaults:01 buffer:01 overflows:01 chris:01 ocaml:01 silver:98 sep:01 harder:02 leaks:02 complex:03 wrote:03 redirect:95 marketing:95 anyway:05 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 6 Sep 2004, chris.danx wrote:

A lot of good points I agree with.

> What is the point in marketing a language anyway?  Sun and M$ do it to
> make money.  Other than that I don't get it.  What does it do for you as
> a developer?  (I understand why the language designer would - there are
> many different reasons - but don't get what a language user gets out of
> it).

A better software environment.  Not just to program in, but to use.  
Software quality is degrading, even within my lifetime.  Segfaults, memory 
leaks, buffer overflows, bugs, etc.- all are becoming more common and more 
persistant.  And this affects me even if I just use the program.

I don't think this is (primarily) due to any serious degredation in the
quality of programmers, I just think that programs have gotten a boatload
more complex, and their life expectancy has increased.  The problem domain
has gotten harder.  We programmers need all the help we can get to write
good code.  Ocaml is the best language I've ever seen for application
level work to help you write good code.  Is it a solution in and of
itself?  No.  There are no silver bullets.  But it's a step in the right
direction.

-- 
"Usenet is like a herd of performing elephants with diarrhea -- massive,
difficult to redirect, awe-inspiring, entertaining, and a source of
mind-boggling amounts of excrement when you least expect it."
                                - Gene Spafford 
Brian

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

