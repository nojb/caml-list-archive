Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA19277; Thu, 2 Sep 2004 00:41:51 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA20250 for <caml-list@pauillac.inria.fr>; Thu, 2 Sep 2004 00:41:50 +0200 (MET DST)
Received: from outbound28-2.lax.untd.com (outbound28-2.lax.untd.com [64.136.28.160])
	by concorde.inria.fr (8.13.0/8.13.0) with SMTP id i81MfmuE004282
	for <caml-list@inria.fr>; Thu, 2 Sep 2004 00:41:49 +0200
Received: from outbound28-2.lax.untd.com (smtp01.lax.untd.com [10.130.24.121])
	by smtpout01.lax.untd.com with SMTP id AABAVNWASAJC4T92
	for <caml-list@inria.fr> (sender <vanevery@indiegamedesign.com>);
	Wed,  1 Sep 2004 15:41:20 -0700 (PDT)
Received: (qmail 4878 invoked from network); 1 Sep 2004 22:40:21 -0000
Received: from unknown (HELO vangogh) (66.52.203.154)
  by smtp01.lax.untd.com with SMTP; 1 Sep 2004 22:40:21 -0000
From: "Brandon J. Van Every" <vanevery@indiegamedesign.com>
To: "caml" <caml-list@inria.fr>
Subject: [Caml-list] ML S*attle meets Thursday, Sept. 9th
Date: Wed, 1 Sep 2004 15:51:17 -0700
Message-ID: <OOEALCJCKEBJBIJHCNJDGEJEHHAB.vanevery@indiegamedesign.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.6604 (9.0.2911.0)
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
Importance: Normal
X-ContentStamp: 16:8:1802572950
X-MAIL-INFO: 1def033e839b63433f875eafa75abb076a9bbe9fea77d35edaab9ed3d33a2a9f4acadbd36bdfb78a6a736a1b1edb8af34f6fcaea8b2b6aa30b6e8e43a3a3cec78be7b3eea302277ffe6f7b6fef0eeefe232f9fb32b0383dadbaadfdf4a1a4acadb638a6363a7373f07ef733737be9b3bf75e7e379aae0f1e8e8eeba3eb7a0fced7ce
X-UNTD-OriginStamp: CI84cOLHFqh7Zd2QWkwvEFvwyO3T/pIsFsCrOjjLH85KHevroRLqUL6RkSUOgPEf
X-Miltered: at concorde with ID 4136502C.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; brandon:99 meets:99 sept:99 stumbling:01 stumbling:01 caml-list:01 bayesian:01 crap:01 crap:01 unboxed:01 alloc:01 alloc:01 val:01 val:01 bigarray:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

ML S*attle is for people interested in face-to-face discussion of the ML
family of programming languages, including Standard ML, OCaml, and
others. Meetings are held every 3 weeks at The Stumbling Monk, a pub in
Capit*l Hill with exceedingly good Belgian beer.  We have a mailing
list:
http://groups.yahoo.com/group/mlseattle/

We will meet Thursday, September 9th, at 7:00 pm at

The Stumbling Monk
1 6 3 5   E. Olive Way
at corner of Olive and Belmont
kitty corner from the B&O Restaur*nt
(206)-860-0916

Beware that the advertizement as seen from the street is extremely low
key.  The sign in the window is hardly noticeable and the awning above
the front door still says "TYPING" on it.  Due to the popularity of
the rotating spec*alty brews offered, the owner really has no need for
additional salesmanship. I imagine if you ask the locals, they can
point you at it.  Especially local shopkeepers.

Things to know about The Monk:

- it serves yummy Belgian beers!
- the bier menu rotates constantly
- spec*alty 'aged' beers are available
- it is non-smoking
- it isn't very big
- it's low-lit
- they have chips, feel free to order a pizza from elsewhere
- park*ng is typical Capit*l Hill park*ng, i.e. bad


Cheers,                         www.indiegamedesign.com
Brand*n Van Every               S*attle, WA

Praise Be to the caml-list Bayesian filter! It blesseth
my postings, it is evil crap!  evil crap!  Bigarray!
Unboxed overhead group!  Wondering!  chant chant chant...

Count the asterisks to win a filtering prize.

// return an array of 100 packed tuples
temps
  int $[tvar0][2*100]; // what the c function needs
  value $[tvar1]; // one int
  value $[tvar2]; // one tuple
  int $[tvar3] // loop control var
oncePre
eachPre
  $[cvar0]=&($[tvar0][0]);
eachPost
  $[lvar0] = alloc(2*100, 0 /*NB: zero-tagged block*/ );
  for(int $[tvar3]=0;$[tvar3]<100;$[tvar3]++) {
    $[tvar2] = alloc_tuple(2);
    $[tvar1] = Val_int($[cvar0][0+2*$[tvar3]]);
    Store_field($[tvar2],0,$[tvar1]);
    $[tvar1] = Val_int($[cvar0][1]);
    Store_field($[tvar2],1,$[tvar1+2*$[tvar3]]);
    Array_store($[lvar0],$[tvar3],$[tvar0]);
  }
oncePost

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

