Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA27090; Wed, 29 Sep 2004 16:15:52 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA28682 for <caml-list@pauillac.inria.fr>; Wed, 29 Sep 2004 16:15:50 +0200 (MET DST)
Received: from herd.plethora.net (herd.plethora.net [205.166.146.1])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i8TEFm18030757
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@inria.fr>; Wed, 29 Sep 2004 16:15:50 +0200
Received: from bhurt.plethora.net (bhurt.plethora.net [205.166.146.49])
	by herd.plethora.net (8.13.1/8.12.11) with ESMTP id i8TEFdJM014653
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO);
	Wed, 29 Sep 2004 09:15:46 -0500 (CDT)
Date: Wed, 29 Sep 2004 09:26:24 -0500 (CDT)
From: Brian Hurt <bhurt@spnz.org>
X-X-Sender: bhurt@localhost.localdomain
To: Jon Harrop <jon@jdh30.plus.com>
cc: caml-list@inria.fr
Subject: Re: [Caml-list] Observations on OCaml vs. Haskell
In-Reply-To: <200409281902.02687.jon@jdh30.plus.com>
Message-ID: <Pine.LNX.4.44.0409290925010.5809-100000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Miltered: at nez-perce with ID 415AC394.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 observations:01 haskell:01 2004:99 run-time:01 run-time:01 ocaml:01 sep:01 polymorphic:01 polymorphic:01 wrote:03 wrote:03 arguments:03 types:03 usefull:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, 28 Sep 2004, Jon Harrop wrote:

> On Tuesday 28 September 2004 08:22, Ville-Pertti Keinonen wrote:
> > I'm fairly certain that type safety is a significant part of the reason;
> > if they were polymorphic, they'd accept any kind of arguments, not just
> > numbers.  What's the product of two strings?  A run-time type error?
> 
> It seems odd then, that the polymorphic comparisons do raise run-time type 
> errors (on functions). I guess that's just the way the cookie crumbled...
> 
> I think a static analysis program to pick up on such problems could be very 
> useful...

This gets tricky, I would think.  One thing I don't want to lose is the 
ability to make ('a -> 'b) list types.  Comparing two functions is 
obviously bogus, but in most other places being able to handle both 
functions and data is a usefull thing.

-- 
"Usenet is like a herd of performing elephants with diarrhea -- massive,
difficult to redirect, awe-inspiring, entertaining, and a source of
mind-boggling amounts of excrement when you least expect it."
                                - Gene Spafford 
Brian

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

