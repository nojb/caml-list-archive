Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA25474; Wed, 15 Sep 2004 14:38:08 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA24995 for <caml-list@pauillac.inria.fr>; Wed, 15 Sep 2004 14:38:07 +0200 (MET DST)
Received: from smtp.mbg.ocn.ne.jp (mbg.ocn.ne.jp [210.190.142.181])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i8FCbuTq019932
	for <caml-list@inria.fr>; Wed, 15 Sep 2004 14:37:57 +0200
Received: from localhost (p44232-adsau08doujib4-acca.osaka.ocn.ne.jp [222.145.244.232])
	by smtp.mbg.ocn.ne.jp (Postfix) with ESMTP
	id 38A165ABD; Wed, 15 Sep 2004 21:37:55 +0900 (JST)
Date: Wed, 15 Sep 2004 21:37:41 +0900 (JST)
Message-Id: <20040915.213741.123996448.yoriyuki@mbg.ocn.ne.jp>
To: mattias.waldau@abc.se
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] How do I create files with UTF-8 file names?
From: Yamagata Yoriyuki <yoriyuki@mbg.ocn.ne.jp>
In-Reply-To: <4142BED1.7050604@abc.se>
References: <4142BED1.7050604@abc.se>
X-Mailer: Mew version 3.3 on Emacs 21.3 / Mule 5.0 (SAKAKI)
Mime-Version: 1.0
Content-Type: Text/Plain; charset=iso-2022-jp
Content-Transfer-Encoding: 7bit
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 yamagata:01 yoriyuki:01 yoriyuki:01 mattias:01 waldau:01 mattias:01 waldau:01 caml-list:01 2004:99 val:01 abstr:01 yamagata:01 sep:01 encoded:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

From: Mattias Waldau <mattias.waldau@abc.se>
Subject: [Caml-list] How do I create files with UTF-8 file names?
Date: Sat, 11 Sep 2004 11:01:05 +0200

> I have a filename as an UTF-8 encoded string. I need to be able to 
> handle strange chars like accents, Asian chars etc.
> 
> Is there any way to create a file with that name? I only need it on Win32.

On my Debian/Linux machine, I can make a file with a Japanese (EUC-JP)
name just like an ASCII named file.

# let c = open_out "\164\198\164\185\164\200";;
val c : out_channel = <abstr>
# output_string;;
- : out_channel -> string -> unit = <fun>
# output_string c "\164\198\164\185\164\200";;
- : unit = ()
# close_out c;;
- : unit = ()

$ ls
てすと

Or am I missing something?

--
Yamagata Yoriyuki

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

