Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id UAA23704; Tue, 28 Sep 2004 20:06:36 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id UAA24794 for <caml-list@pauillac.inria.fr>; Tue, 28 Sep 2004 20:06:29 +0200 (MET DST)
Received: from ptb-relay03.plus.net (ptb-relay03.plus.net [212.159.14.214])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i8SI6Sxc004832
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Tue, 28 Sep 2004 20:06:29 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by ptb-relay03.plus.net with esmtp (Exim) id 1CCMMZ-0000Li-Av
	for caml-list@inria.fr; Tue, 28 Sep 2004 18:06:07 +0000
From: Jon Harrop <jon@jdh30.plus.com>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Observations on OCaml vs. Haskell
Date: Tue, 28 Sep 2004 19:02:02 +0100
User-Agent: KMail/1.6.2
References: <Pine.LNX.4.44.0409271417390.20651-100000@hkn.eecs.berkeley.edu> <4159114B.7030200@exomi.com>
In-Reply-To: <4159114B.7030200@exomi.com>
MIME-Version: 1.0
Content-Disposition: inline
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Message-Id: <200409281902.02687.jon@jdh30.plus.com>
X-Miltered: at nez-perce with ID 4159A824.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 observations:01 haskell:01 2004:99 run-time:01 run-time:01 ocaml:01 polymorphic:01 polymorphic:01 wrote:03 arguments:03 raise:05 functions:05 seems:05 cheers:06 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tuesday 28 September 2004 08:22, Ville-Pertti Keinonen wrote:
> I'm fairly certain that type safety is a significant part of the reason;
> if they were polymorphic, they'd accept any kind of arguments, not just
> numbers.  What's the product of two strings?  A run-time type error?

It seems odd then, that the polymorphic comparisons do raise run-time type 
errors (on functions). I guess that's just the way the cookie crumbled...

I think a static analysis program to pick up on such problems could be very 
useful...

Cheers,
Jon.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

