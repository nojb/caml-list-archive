Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id FAA22402; Mon, 6 Sep 2004 05:45:00 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id FAA22136 for <caml-list@pauillac.inria.fr>; Mon, 6 Sep 2004 05:44:58 +0200 (MET DST)
Received: from herd.plethora.net (herd.plethora.net [205.166.146.1])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i863islL017801
	for <caml-list@inria.fr>; Mon, 6 Sep 2004 05:44:56 +0200
Received: from bhurt.plethora.net (bhurt.plethora.net [205.166.146.49])
	by herd.plethora.net (8.11.6/8.10.1) with ESMTP id i863ioK07316;
	Sun, 5 Sep 2004 22:44:51 -0500 (CDT)
Date: Sun, 5 Sep 2004 22:54:09 -0500 (CDT)
From: Brian Hurt <bhurt@spnz.org>
X-X-Sender: bhurt@localhost.localdomain
To: james woodyatt <jhw@wetware.com>, Caml List <caml-list@inria.fr>,
        <omake@metaprl.org>
Subject: Re: [Omake] Re: [Caml-list] Announcing the OMake build system version
 0.9.1
In-Reply-To: <413BB044.3000007@cs.caltech.edu>
Message-ID: <Pine.LNX.4.44.0409052228330.5809-100000@localhost.localdomain>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Miltered: at concorde with ID 413BDD36.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 woodyatt:01 non-gpl:01 gpl:01 gpl:01 wether:01 gpl'd:01 gpl'd:01 wether:01 linked:01 compiler:01 compilers:01 ocaml:01 sep:01 compile:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sun, 5 Sep 2004, Aleksey Nogin wrote:

> On 05.09.2004 17:12, james woodyatt wrote:
> 
> > I want to be able to extend the functions so that my build system knows 
> > how to use more toolchains than just C and Ocaml, and I want those 
> > extensions to be bundled with my non-GPL code.  If I were to use Omake, 
> > then I expect my code would link to the functions in the Omake 
> > distribution, and I would then be in violation of the GPL if I didn't 
> > use a GPL-compatible license for my distribution.
> 
> There is no "linking" involved when you use the built-in rules of omake. 
> The way it looks is that in your own OMakeroot file you will have 
> something like:
> 
> #
> # Include the standard configuration
> #
> include $(STDROOT)
> 
> (although I do not really know what would be considered "linking" in a 
> case of an interpreted language).

Having actually had a discussion with an IP lawyer over basically this 
issue, fears of the GPL in this case are (I think) unfounded.

First off, the GPL only covers, can only cover, derived works.  The GPL-
nor any copyright license- can not "infect" anything other than derived
works.  No license can- as a copyright holder, you only have rights over
the original work and derivitive works, you have no more rights than that,
period.  So the question becomes one of what is a derived work.  Wether or
not simply *linking* creates a derived work is one that has not been
answered authoritively.  Simply manipulating a work, the original work
being manipulated is the work the result is derived from, not the
manipulator.

Simply because you write a document in Microsoft Word doesn't give 
Microsoft copyright to your document.  Simply because you compile code 
with Microsoft compilers, and run them on Microsoft run times, doesn't 
give Microsoft any rights to your code.  The "transformations" don't 
matter, the original work is where the copyright springs from.  Likewise, 
compiling your code with the GPL'd Gnu C does not mean- can not mean- that 
your code has to be GPL.  THe license on the compiler is irrelevent- you 
own both the original work (the code) and the derivitive work (the 
executable).

And simply because your interpreted code gets run on a GPL'd interpreter
doesn't mean your code has to be GPL'd.

Note that the fact that there is only one place that the work "makes
sense" is irrelevent.  I.e. it doesn't matter if the script you wrote only
makes sense as an Omake build script.  In fact, what you wrote doesn't
have to make sense at all, anywhere, anytime- you still own the copyright
to it.  You wrote it, not "deriving" it from any other source, you own the 
copyright.  This is why it's an open question as to wether simply linking 
code makes the linked code "derivitive" enough for the GPL to cross the 
threshold.  If this becomes important, hire a lawyer.

> I would guess there would be nothing wrong with using a liberal license 
> (BSD or like) on this "global omake file", in order to allow users to 
> borrow pieces of it and freely modify them as needed, while the main 
> omake engine would still stay GPL... Do people feel that a license 
> change of this sort would be helpful?
> 

Yes.  On the core interpreter, no.  On the global omake file, yes.  For 
two reasons.  First off, reimplementing someone else's code (even in a 
different language) does create a derivitive work.  Just like translating 
a novel into a different language creates a derivitive work.  Making it a 
BSD license or similiar quashes this concern.  Also, it encourages people 
to grab the file in whole and just edit it, making an obvious derivitive 
work.

-- 
"Usenet is like a herd of performing elephants with diarrhea -- massive,
difficult to redirect, awe-inspiring, entertaining, and a source of
mind-boggling amounts of excrement when you least expect it."
                                - Gene Spafford 
Brian

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

