Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id QAA01373; Mon, 27 Sep 2004 16:58:37 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA03466 for <caml-list@pauillac.inria.fr>; Mon, 27 Sep 2004 16:58:36 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i8REwXtv024108
	for <caml-list@inria.fr>; Mon, 27 Sep 2004 16:58:35 +0200
Received: from [192.168.1.200] (ppp202-133.lns1.syd3.internode.on.net [203.122.202.133])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i8REwTOU092501;
	Tue, 28 Sep 2004 00:28:30 +0930 (CST)
Subject: Re: [Caml-list] C++ STL and template features compared with OCaml
	parametric polymorphism and OO features
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Brian Hurt <bhurt@spnz.org>
Cc: Jon Harrop <jon@jdh30.plus.com>, caml-list <caml-list@inria.fr>
In-Reply-To: <Pine.LNX.4.44.0409270858120.5809-100000@localhost.localdomain>
References: <Pine.LNX.4.44.0409270858120.5809-100000@localhost.localdomain>
Content-Type: text/plain
Message-Id: <1096297109.28613.646.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 28 Sep 2004 00:58:29 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 41582A99.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 hofs:01 9660:01 glebe:01 ocaml:01 heh:01 nsw:01 sep:01 snail:02 checkout:02 2037:03 04,:03 wrote:03 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, 2004-09-28 at 00:04, Brian Hurt wrote:
> On Mon, 27 Sep 2004, Jon Harrop wrote:

> Second, you can do fold, map, iter, etc. in C++- it's just a pain.  To 
> emulate HOFs you define a new class with single virtual member function.  
> The virtual member function then becomes your HOF. 

For templates all you need is a class with an operator()() method.

Dynamic dispatch is only needed if you need
run time function variables (first class functions).

Heh .. it isn't a pain doing this in C++, its
quite easy -- just use Felix. 

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

