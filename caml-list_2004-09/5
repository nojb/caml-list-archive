Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id CAA04110; Wed, 1 Sep 2004 02:05:45 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id CAA02697 for <caml-list@pauillac.inria.fr>; Wed, 1 Sep 2004 02:05:43 +0200 (MET DST)
Received: from mproxy.gmail.com (rproxy.gmail.com [64.233.170.197])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i8105geP023247
	for <caml-list@inria.fr>; Wed, 1 Sep 2004 02:05:43 +0200
Received: by mproxy.gmail.com with SMTP id 77so181975rnl
        for <caml-list@inria.fr>; Tue, 31 Aug 2004 17:05:41 -0700 (PDT)
Received: by 10.38.164.76 with SMTP id m76mr1868864rne;
        Tue, 31 Aug 2004 17:05:41 -0700 (PDT)
Received: by 10.38.15.51 with HTTP; Tue, 31 Aug 2004 17:05:41 -0700 (PDT)
Message-ID: <8008871f04083117055b609c87@mail.gmail.com>
Date: Tue, 31 Aug 2004 20:05:41 -0400
From: "Christopher A. Watford" <christopher.watford@gmail.com>
Reply-To: "Christopher A. Watford" <christopher.watford@gmail.com>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Cross-compiling OCaml
Cc: John Goerzen <jgoerzen@complete.org>,
        "Brandon J. Van Every" <vanevery@indiegamedesign.com>
In-Reply-To: <200408310841.18106.jgoerzen@complete.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
References: <OOEALCJCKEBJBIJHCNJDIEGMHHAB.vanevery@indiegamedesign.com> <200408310841.18106.jgoerzen@complete.org>
X-Miltered: at nez-perce with ID 41351256.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 powerpc:01 netbsd:01 netbsd:01 plop:01 api:01 'cause:01 python:01 offtopic:01 api:01 32,:01 posix:01 32,:01 dorm:99 compiler:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Reply within,

>>>SNIP>>>
> Who ever said that cross-compilation support would only involve running
> a compiler on x86 Linux to target x86 Windows?  It could involve
> running a compiler on x86 Linux to target arm Zaurus, or m68k Linux, or
> x86 FreeBSD, or amd64 Linux.  Or running a compiler on PowerPC NetBSD
> to target Alpha NetBSD.  Or whatever else.

I think this point needs to be streesed. Like John is trying to say,
people are asking for CROSS-ARCHITECHTURE compiling, not CROSS-API.
You can't expect to just plop down code and expect the API to be
supported by your machine/compiler, however, you should be able to
retarget the compiler for any architecture that may support it.

>>>SNIP>>>
> I think that offering a simple tarball with the source is just fine.

Its more out of respect for the operating system to include the source
as a zip file for windows users. Just as you might include an rpm for
Red Hat or an ebuild for Gentoo. I would agree that a .tgz file
'should' be the lowest common denominator, but hey, you can't always
get what you want.

> Oh please, tell us what is so wrong with posting the source code easily
> accessible as a tarball.  Is it that Windows people can't figure out
> how to use Winzip?

Nah its 'cause they don't need to have winzip installed anymore. XP/2k
have compressed folder support built in, sort of takes away the need
for WinZip. Though John is right, if you're releasing the source to an
OCaml Library, that implies your users should be damn well smart
enough to open a tarball.

> John Goerzen
> Author, Foundations of Python Network Programming
> http://www.complete.org/pynet

I think this thread has gone horribly offtopic with gripes more about
CROSS-API support rather than CROSS-ARCHITECTURE. Hell, because of the
raw differences in API between Linux and Win32, I think it would be
harder to target Win32 from Linux. But, since Win32 tends to have like
90%-ish support for POSIX/stdlibc/etc, I think it would be easier to
have the Win32 compiler target Linux images.

However, like any good programmer, you must take into account
programming in a cross platform/architecture manner (in C I tend to
use ifdef's, yeah ugly but whatever) in order to even have a glimpse
of a hope with getting it to work across the 3 major regions (win32,
*nix/un*x/bsd, osx; I'm leaving out OpenVMS etc...).

-- 
Christopher A. Watford
christopher.watford@gmail.com
http://dorm.tunkeymicket.com

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

