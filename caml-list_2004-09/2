Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id AAA01623; Wed, 1 Sep 2004 00:55:17 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id AAA32617 for <caml-list@pauillac.inria.fr>; Wed, 1 Sep 2004 00:55:16 +0200 (MET DST)
Received: from ptb-relay01.plus.net (ptb-relay01.plus.net [212.159.14.212])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i7VMtF8F021393
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <caml-list@inria.fr>; Wed, 1 Sep 2004 00:55:16 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by ptb-relay01.plus.net with esmtp (Exim) id 1C2HX1-000Gbo-Kp
	for caml-list@inria.fr; Tue, 31 Aug 2004 22:55:15 +0000
From: Jon Harrop <jon@jdh30.plus.com>
To: caml-list@inria.fr
Subject: Re: [Caml-list] Cross-compiling OCaml
Date: Tue, 31 Aug 2004 23:49:35 +0100
User-Agent: KMail/1.6.2
References: <OOEALCJCKEBJBIJHCNJDIEGIHHAB.vanevery@indiegamedesign.com> <20040901000657.5c6c5fbe.ocaml-erikd@mega-nerd.com> <200408311054.19930.jgoerzen@complete.org>
In-Reply-To: <200408311054.19930.jgoerzen@complete.org>
MIME-Version: 1.0
Content-Disposition: inline
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Message-Id: <200408312349.35724.jon@jdh30.plus.com>
X-Miltered: at concorde with ID 413501D4.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 2004:99 unfeasible:01 clashes:01 ocamlopt:01 encapsulate:01 mylist:01 unambiguous:01 chop:01 jacques:01 ocaml:01 compile:02 modules:02 modules:02 objects:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tuesday 31 August 2004 16:54, John Goerzen wrote:
> ...
> The feeling I got from some at INRIA, though, was that they are not
> really interested in expanding the standard library too much for
> various reasons.

I am under the impression that French Copyright laws make this difficult. 
IIRC, there was a post by Xavier long ago...

Would it be a good idea to have a replacement instead of a supplement? Indeed, 
is this unfeasible because of name clashes with the core library, i.e. would 
you need to provide the functionality of the core library and compile 
ocamlopt against it?

I would certainly be interested in contributing to either INRIA's core or an 
alternative. I'd want to encapsulate things properly though - no good having 
lots of erratically named modules for the same thing, e.g. List, Listutils, 
MyList, MyOtherList, and having to remember which function is where.

My list of unambiguous missing functions currently stands at:

- List.mapi and List.rev_mapi
- Chop a list into two sublists at a given index
- List.sub (equivalent to Array.sub)
- Array.map2, fold_left2, fold_right2, mem, for_all and for_all2
- Random.array (or something) to randomise the order of the elements of an 
array

I think Jacques wrote an OO library which was intended to be used as the basis 
for derived work, such as this. I'm not sure what the implications of using 
objects rather than modules are though (e.g. performance). Maybe I should 
give it a go...

Cheers,
Jon.

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

