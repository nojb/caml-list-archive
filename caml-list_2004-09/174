Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id SAA19010; Mon, 6 Sep 2004 18:42:31 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id SAA21652 for <caml-list@pauillac.inria.fr>; Mon, 6 Sep 2004 18:42:29 +0200 (MET DST)
Received: from mproxy.gmail.com (rproxy.gmail.com [64.233.170.195])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i86GgSEw015440
	for <caml-list@inria.fr>; Mon, 6 Sep 2004 18:42:29 +0200
Received: by mproxy.gmail.com with SMTP id 76so135225rnl
        for <caml-list@inria.fr>; Mon, 06 Sep 2004 09:42:28 -0700 (PDT)
Received: by 10.38.75.73 with SMTP id x73mr1485607rna;
        Mon, 06 Sep 2004 09:42:28 -0700 (PDT)
Received: by 10.38.15.47 with HTTP; Mon, 6 Sep 2004 09:42:28 -0700 (PDT)
Message-ID: <8008871f040906094251340b19@mail.gmail.com>
Date: Mon, 6 Sep 2004 12:42:28 -0400
From: "Christopher A. Watford" <christopher.watford@gmail.com>
Reply-To: "Christopher A. Watford" <christopher.watford@gmail.com>
To: skaller@users.sourceforge.net
Subject: Re: [Caml-list] Announcing the OMake build system version 0.9.1
Cc: Jacques Garrigue <garrigue@kurims.kyoto-u.ac.jp>,
        caml-list <caml-list@inria.fr>
In-Reply-To: <1094488104.3352.1160.camel@pelican.wigram>
Mime-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit
References: <7810902A-FF99-11D8-8747-000A958FF2FE@wetware.com>
	 <20040906.113527.125105732.garrigue@kurims.kyoto-u.ac.jp>
	 <1094463492.3352.1061.camel@pelican.wigram>
	 <20040906.203420.68034706.garrigue@kurims.kyoto-u.ac.jp>
	 <1094488104.3352.1160.camel@pelican.wigram>
X-Miltered: at nez-perce with ID 413C9374.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 lgpl:01 exemption:01 gpl:01 9660:01 glebe:01 enforcement:99 murky:99 end-user:01 library's:01 dorm:99 ocaml:01 nsw:01 snail:02 checkout:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> I have no idea -- that's the point. My guess is the license
> is unenforcible because it depends on terms such as
> 'linkage' which can't be well defined in a unique way.
> 
> The only way acceptable to a court would be 'community
> consensus' about what constitues linkage.
> 
> I believe most people believe that
> at the moment static linkage to even LGPL (without Ocaml
> exemption) infects, but dynamic linkage doesn't.
> 
> Given such an absurd distinction I doubt I have any
> real idea what the GPL actually says for more
> difficult cases.
> 
> --
> John Skaller, mailto:skaller@users.sf.net
> voice: 061-2-9660-0850,
> snail: PO BOX 401 Glebe NSW 2037 Australia
> Checkout the Felix programming language http://felix.sf.net

The whole enforcement of licenses in dynamic linkage would mean that
before using a DLL or SO you'd have to somehow accept an EULA or have
some programatic way of saying your code agrees to their license.
Hell, what about code injection? Would that be illegal if I don't
accept the terms of their license? I'm fairly certain we run into very
murky licensing laws in this regard.

As for what you should do? Static linkage most definately should obey
the license of the library. Dynamic linkage? The end-user has agreed
to follow the library's license/terms, and has pointed an application
to its location. The application shouldn't have to follow any terms,
since its on the insistance of the user (dependency system, physically
downloading it, etc) that the dynamic library be available.

-- 
Christopher A. Watford
christopher.watford@gmail.com
http://dorm.tunkeymicket.com

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

