Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA03787; Mon, 6 Sep 2004 11:52:22 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA03603 for <caml-list@pauillac.inria.fr>; Mon, 6 Sep 2004 11:52:20 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i869qIpd027107
	for <caml-list@inria.fr>; Mon, 6 Sep 2004 11:52:19 +0200
Received: from [192.168.1.200] (ppp210-32.lns2.syd3.internode.on.net [203.122.210.32])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i869qDHY097044;
	Mon, 6 Sep 2004 19:22:16 +0930 (CST)
Subject: Re: [Omake] Re: [Caml-list] Announcing the OMake build system
	version 0.9.1
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: Brian Hurt <bhurt@spnz.org>
Cc: james woodyatt <jhw@wetware.com>, Caml List <caml-list@inria.fr>,
        omake@metaprl.org
In-Reply-To: <Pine.LNX.4.44.0409052228330.5809-100000@localhost.localdomain>
References: <Pine.LNX.4.44.0409052228330.5809-100000@localhost.localdomain>
Content-Type: text/plain
Message-Id: <1094464332.3352.1075.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 06 Sep 2004 19:52:12 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 413C3352.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 sourceforge:01 2004:99 recoding:01 mli:01 mli:01 presto:99 9660:01 glebe:01 compiler:01 ocaml:01 ocaml:01 nsw:01 snail:02 discard:02 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Mon, 2004-09-06 at 13:54, Brian Hurt wrote:

> THe license on the compiler is irrelevent- you 
> own both the original work (the code) and the derivitive work (the 
> executable).

Except the executable is probably *also* derived from
other header files and libraries.

> If this becomes important, hire a lawyer.

Why would you believe a lawyer who can't cite a long
history of case law (decisions made by judges)?

> First off, reimplementing someone else's code (even in a 
> different language) does create a derivitive work. 

Translating it creates a derived work.  Recoding the
original code creates a derived work. But reimplementing
the same algorithm does not.

So .. hehe .. I could take your module and
copy the mli file and implement the functions and
then the interface is a derived work but the 
implementation is not. And in Ocaml I could then
simply discard the mli file, run ocaml -i
to derive a new mli file -- and hey presto,
now the interface isn't a derived work either ..
even if line for line it is totally identical 
to the original :)

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

