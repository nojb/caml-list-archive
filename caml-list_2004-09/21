Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id TAA04441; Wed, 1 Sep 2004 19:08:45 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id TAA07995 for <caml-list@pauillac.inria.fr>; Wed, 1 Sep 2004 19:08:44 +0200 (MET DST)
Received: from outbound28-2.lax.untd.com (outbound28-2.lax.untd.com [64.136.28.160])
	by nez-perce.inria.fr (8.13.0/8.13.0) with SMTP id i81H8g8T003298
	for <caml-list@inria.fr>; Wed, 1 Sep 2004 19:08:43 +0200
Received: from outbound28-2.lax.untd.com (smtp04.lax.untd.com [10.130.24.124])
	by smtpout06.lax.untd.com with SMTP id AABAVNAQ7A7ZSLX2
	for <caml-list@inria.fr> (sender <vanevery@indiegamedesign.com>);
	Wed,  1 Sep 2004 10:07:41 -0700 (PDT)
Received: (qmail 4304 invoked from network); 1 Sep 2004 17:06:59 -0000
Received: from unknown (HELO vangogh) (66.52.249.215)
  by smtp04.lax.untd.com with SMTP; 1 Sep 2004 17:06:59 -0000
From: "Brandon J. Van Every" <vanevery@indiegamedesign.com>
To: "caml" <caml-list@inria.fr>
Subject: RE: [Caml-list] Cross-compiling OCaml
Date: Wed, 1 Sep 2004 10:17:55 -0700
Message-ID: <OOEALCJCKEBJBIJHCNJDAEINHHAB.vanevery@indiegamedesign.com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="Windows-1252"
Content-Transfer-Encoding: 8bit
X-Priority: 3 (Normal)
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook IMO, Build 9.0.6604 (9.0.2911.0)
In-Reply-To: <OOEALCJCKEBJBIJHCNJDIEILHHAB.vanevery@indiegamedesign.com>
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
Importance: Normal
X-ContentStamp: 17:8:489061101
X-UNTD-OriginStamp: CI84cOLHFqh7Zd2QWkwvEFvwyO3T/pIsFsCrOjjLH86rIy7wdr6PduJBp9ivieBT
X-Miltered: at nez-perce with ID 4136021A.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; brandon:99 caml-list:01 brandon:99 priorities:01 flows:01 invention:99 clone:01 innovations:99 caml-list:01 bayesian:01 crap:01 crap:01 unboxed:01 alloc:01 alloc:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Brandon J. Van Every wrote:
> The Caml Trade wrote:
>
> > I think you have your priorities crossed.  Lots of good
> > code migrates
> > out of the Unix culture into the Windows development world, but it
> > historically *never* happens when Unix-centric people push—
> > only when Windows-centric people pull.
>
> Mono
> concept of installation packages
> most commercial digital media editing software
> most games
>
> My stereotype of a UNIX guy is someone who likes to play with text
> editors all day long.

I suppose I missed that you were talking about *code* migration, as
opposed to who's the progenitor of what technology on what platform.
The phenomenon you describe of "which whay the code flows" is largely
true.  After all, Windows people can and do buy commercial apps that get
their jobs done.  A lot of invention of capability happens on Windows,
in proprietary commercial software.  Then UNIX guys clone it, if they
can tear themselves away from their text editors.  Leaving open source
vs. proprietary aside, there are arenas in which UNIX developers are
mostly responsible for the innovations, and arenas where Windows
developers are.  Which OS one gravitates towards is largely a matter of
problem domain.  I think it would be silly to look to UNIX for game or
3D graphics code.


Cheers,                         www.indiegamedesign.com
Brand*n Van Every               S*attle, WA

Praise Be to the caml-list Bayesian filter! It blesseth
my postings, it is evil crap!  evil crap!  Bigarray!
Unboxed overhead group!  Wondering!  chant chant chant...

Is my technical content showing?

// return an array of 100 packed tuples
temps
  int $[tvar0][2*100]; // what the c function needs
  value $[tvar1]; // one int
  value $[tvar2]; // one tuple
  int $[tvar3] // loop control var
oncePre
eachPre
  $[cvar0]=&($[tvar0][0]);
eachPost
  $[lvar0] = alloc(2*100, 0 /*NB: zero-tagged block*/ );
  for(int $[tvar3]=0;$[tvar3]<100;$[tvar3]++) {
    $[tvar2] = alloc_tuple(2);
    $[tvar1] = Val_int($[cvar0][0+2*$[tvar3]]);
    Store_field($[tvar2],0,$[tvar1]);
    $[tvar1] = Val_int($[cvar0][1]);
    Store_field($[tvar2],1,$[tvar1+2*$[tvar3]]);
    Array_store($[lvar0],$[tvar3],$[tvar0]);
  }
oncePost

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

