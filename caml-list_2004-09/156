Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA10001; Mon, 6 Sep 2004 14:20:34 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA06110 for <caml-list@pauillac.inria.fr>; Mon, 6 Sep 2004 14:20:33 +0200 (MET DST)
Received: from qrnik.knm.org.pl (paf87.warszawa.sdi.tpnet.pl [217.96.225.87])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i86CKVLi013489
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@inria.fr>; Mon, 6 Sep 2004 14:20:32 +0200
Received: from qrczak by qrnik.knm.org.pl with local (Exim 3.36 #1)
	id 1C4ITz-0004RS-00; Mon, 06 Sep 2004 14:20:27 +0200
To: Christian Lindig <lindig@cs.uni-sb.de>
Cc: caml-list <caml-list@inria.fr>
Subject: Re: [Caml-list] Announcing the OMake build system version 0.9.1
References: <4139ECD3.1050708@cs.caltech.edu>
	<001e01c492a6$872c7280$19b0e152@warp> <413A0921.7030607@ntlworld.com>
	<413A1E89.10806@libertysurf.fr>
	<1094361655.3352.476.camel@pelican.wigram>
	<87hdqc3kfr.fsf@qrnik.zagroda>
	<08C9709F-FFD4-11D8-97B9-000A95CB833C@cs.uni-sb.de>
From: "Marcin 'Qrczak' Kowalczyk" <qrczak@knm.org.pl>
Mail-Followup-To: Christian Lindig <lindig@cs.uni-sb.de>, caml-list
 <caml-list@inria.fr>
Date: Mon, 06 Sep 2004 14:20:27 +0200
In-Reply-To: <08C9709F-FFD4-11D8-97B9-000A95CB833C@cs.uni-sb.de> (Christian
 Lindig's message of "Mon, 6 Sep 2004 09:11:55 +0200")
Message-ID: <87r7pfh9mc.fsf@qrnik.zagroda>
User-Agent: Gnus/5.1006 (Gnus v5.10.6) Emacs/21.3 (gnu/linux)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Miltered: at concorde with ID 413C560F.002 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 marcin:01 'qrczak':01 kowalczyk:01 qrczak:01 lindig:01 lindig:01 uni-sb:01 abstraction:01 overwrite:01 disadvantage:01 marcin:01 kowalczyk:01 qrczak:01 compiler:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

Christian Lindig <lindig@cs.uni-sb.de> writes:

> 	Jam - like Make, but has procedural abstraction: a program is
> evaluated to build up the dependency tree. Unlike Make, clean
> separation of phases: analyzes the file system, makes a plan, and
> executes it. Hence, no checking the file system while executing the
> plan. Similar tools: Cons, SCons.

If changes to a module didn't result in changing its interface, my
compiler is careful to not overwrite the interface file, so modules
depending on this module will not be recompiled by make.

How does Jam deal with this? Before we compile a module, we don't know
whether modules which use it will need to be recompiled.

Of course it can conservatively assume that they always will be, but
then it's a disadvantage compared to make.

-- 
   __("<         Marcin Kowalczyk
   \__/       qrczak@knm.org.pl
    ^^     http://qrnik.knm.org.pl/~qrczak/

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

