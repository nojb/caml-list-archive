Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id DAA26096; Tue, 28 Sep 2004 03:57:08 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id DAA27485 for <caml-list@pauillac.inria.fr>; Tue, 28 Sep 2004 03:57:07 +0200 (MET DST)
Received: from smtp3.adl2.internode.on.net (smtp3.adl2.internode.on.net [203.16.214.203])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i8S1v40B006968
	for <caml-list@inria.fr>; Tue, 28 Sep 2004 03:57:06 +0200
Received: from [192.168.1.200] (ppp202-133.lns1.syd3.internode.on.net [203.122.202.133])
	by smtp3.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id i8S1upOU001462;
	Tue, 28 Sep 2004 11:26:52 +0930 (CST)
Subject: Re: [Caml-list] Observations on OCaml vs. Haskell
From: skaller <skaller@users.sourceforge.net>
Reply-To: skaller@users.sourceforge.net
To: "Rafael 'Dido' Sevilla" <dido@imperium.ph>
Cc: John Goerzen <jgoerzen@complete.org>, caml-list <caml-list@inria.fr>
In-Reply-To: <20040927202449.GA548@imperium.ph>
References: <200409271408.51872.jgoerzen@complete.org>
	 <20040927202449.GA548@imperium.ph>
Content-Type: text/plain
Message-Id: <1096336610.28613.801.camel@pelican.wigram>
Mime-Version: 1.0
X-Mailer: Ximian Evolution 1.2.2 (1.2.2-4) 
Date: 28 Sep 2004 11:56:51 +1000
Content-Transfer-Encoding: 7bit
X-Miltered: at concorde with ID 4158C4F0.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; caml-list:01 observations:01 haskell:01 sourceforge:01 2004:99 rafael:01 'dido':01 2004:99 constrain:01 operands:01 g'caml:01 generics:01 9660:01 glebe:01 compiler:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, 2004-09-28 at 06:24, Rafael 'Dido' Sevilla wrote:
> On Mon, Sep 27, 2004 at 02:08:51PM -0500, John Goerzen wrote:

> Performance again.  The reason why there are so many numeric types in
> OCaml is performance.  

Also it is related to compatibility with external libraries.

> The compiler could very easily make the arithmetic operators polymorphic,
> and constrain the operands to be of the same (numeric) type

G'Caml generics would handle this easily, without 
need to 'kludge' the Ocaml compiler. 

-- 
John Skaller, mailto:skaller@users.sf.net
voice: 061-2-9660-0850, 
snail: PO BOX 401 Glebe NSW 2037 Australia
Checkout the Felix programming language http://felix.sf.net



-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

