Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA05492; Tue, 28 Sep 2004 11:57:38 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA07717 for <caml-list@pauillac.inria.fr>; Tue, 28 Sep 2004 11:57:37 +0200 (MET DST)
Received: from gateway.imperium.ph ([202.175.240.154])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id i8S9vXYp030164
	for <caml-list@inria.fr>; Tue, 28 Sep 2004 11:57:36 +0200
Received: from morgoth.imperium.ph (morgoth.imperium.ph [192.168.1.224])
	by gateway.imperium.ph (Postfix) with SMTP
	id AB47D46CFD; Tue, 28 Sep 2004 17:46:54 +0800 (PHT)
Received: by morgoth.imperium.ph (sSMTP sendmail emulation); Tue, 28 Sep 2004 17:55:07 +0800
Date: Tue, 28 Sep 2004 17:55:07 +0800
From: "Rafael 'Dido' Sevilla" <dido@imperium.ph>
To: Keith Wansbrough <Keith.Wansbrough@cl.cam.ac.uk>
Cc: John Goerzen <jgoerzen@complete.org>, caml-list@inria.fr
Subject: Re: [Caml-list] Observations on OCaml vs. Haskell
Message-ID: <20040928095507.GB2792@imperium.ph>
References: <20040927202449.GA548@imperium.ph> <E1CCEL8-00012D-00@mta1.cl.cam.ac.uk>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <E1CCEL8-00012D-00@mta1.cl.cam.ac.uk>
X-Operating-System: Linux morgoth 2.4.26-gentoo-r9
User-Agent: Mutt/1.5.6i
X-Miltered: at concorde with ID 4159358D.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; rafael:01 'dido':01 dido:01 caml-list:01 observations:01 haskell:01 2004:99 boxing:01 unboxing:01 idioms:01 idioms:01 shootout:01 dido:01 ocaml:01 ocaml:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Tue, Sep 28, 2004 at 10:31:31AM +0100, Keith Wansbrough wrote:
> But it's true that for text-handling performance in GHC you have to
> use something other than list-of-Char; typically you use PackedString,
> which is basically an array of bytes.  The boxing and unboxing
> certainly has significant cost.
> 

And then you can't use the idioms that the parent poster so desires, and
you revert to using similar, and apparently even slightly more
cumbersome, programming idioms as you would to manage strings in OCaml.
That was the whole point of bringing up the Shootout benchmarks.  From
the code it appears they used strings as list-of-Char, allowing the kind
of pattern matching and other manipulations the parent poster talks
about.

-- 
dido
Te capiam, cuniculus sceleste!

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

