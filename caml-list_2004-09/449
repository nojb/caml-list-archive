Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id XAA18556; Sat, 25 Sep 2004 23:36:57 +0200 (MET DST)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id XAA26103 for <caml-list@pauillac.inria.fr>; Sat, 25 Sep 2004 23:36:56 +0200 (MET DST)
X-SPAM-Warning: Sending machine is listed in blackholes.five-ten-sg.com
Received: from postfix3-2.free.fr (postfix3-2.free.fr [213.228.0.169])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id i8PLauPu013576
	for <caml-list@inria.fr>; Sat, 25 Sep 2004 23:36:56 +0200
Received: from warp (chateaudeau-4-82-225-176-25.fbx.proxad.net [82.225.176.25])
	by postfix3-2.free.fr (Postfix) with SMTP
	id 0904CC8CD; Sat, 25 Sep 2004 23:36:56 +0200 (CEST)
Message-ID: <000b01c4a348$015cfaa0$19b0e152@warp>
From: "Nicolas Cannasse" <warplayer@free.fr>
To: "Vasili Galchin" <vasiliocaml@yahoo.com>, <caml-list@inria.fr>
References: <20040925211203.56341.qmail@web53003.mail.yahoo.com>
Subject: Re: [Caml-list] C++ STL and template features compared with OCaml parametric polymorphism and OO features
Date: Sat, 25 Sep 2004 23:38:32 +0200
MIME-Version: 1.0
Content-Type: multipart/alternative;
	boundary="----=_NextPart_000_0008_01C4A358.C4AC9230"
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 6.00.2800.1437
X-MimeOLE: Produced By Microsoft MimeOLE V6.00.2800.1441
X-Miltered: at nez-perce with ID 4155E4F8.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Loop: caml-list@inria.fr
X-Spam: no; 0.00; cannasse:01 warplayer:01 caml-list:01 haskell:01 extlib:01 enum:01 sourceforge:01 cannasse:01 haskell:01 extlib:01 enum:01 sourceforge:01 ocaml:01 ocaml:01 nicolas:01 
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

This is a multi-part message in MIME format.

------=_NextPart_000_0008_01C4A358.C4AC9230
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

  Hello,

      I am reluctantly learning C++ STL (Standard Template Library) and =
the notion of templates. Templates don't seem to be that great ... just =
parametric plymorphism done in a somewhat heavy handed way when compared =
to the same in OCaml, Haskell, etc. However, teh STL notion of =
containers and available operations allowed on containers does seem to =
be be very powerful and not available in OCaml. Is the last statement =
true?

  Kind regards, Vasili
You might have a look at ExtLib Enum module that is providing an uniform =
way of accessing  elements of a container and applying functionnal lazy =
operations (map, filter...) on them.
http://ocaml-lib.sourceforge.net/

Regards,
Nicolas Cannasse
------=_NextPart_000_0008_01C4A358.C4AC9230
Content-Type: text/html;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML><HEAD>
<META http-equiv=3DContent-Type content=3D"text/html; =
charset=3Diso-8859-1">
<META content=3D"MSHTML 6.00.2800.1458" name=3DGENERATOR>
<STYLE></STYLE>
</HEAD>
<BODY bgColor=3D#ffffff>
<BLOCKQUOTE=20
style=3D"PADDING-RIGHT: 0px; PADDING-LEFT: 5px; MARGIN-LEFT: 5px; =
BORDER-LEFT: #000000 2px solid; MARGIN-RIGHT: 0px">
  <DIV>Hello,</DIV>
  <DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV>
  <DIV>&nbsp;&nbsp;&nbsp; I am reluctantly learning C++ STL (Standard =
Template=20
  Library) and the notion of templates. Templates don't seem to be that =
great=20
  ... just parametric plymorphism done in a somewhat heavy handed way =
when=20
  compared to the same in OCaml, Haskell, etc. However, teh STL notion =
of=20
  containers and available operations allowed on containers does seem to =
be be=20
  very powerful and not available in OCaml. Is the last statement =
true?</DIV>
  <DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV>
  <DIV>Kind regards, Vasili</DIV></BLOCKQUOTE>
<DIV>You might have a look at ExtLib Enum module&nbsp;that is providing =
an=20
uniform way of accessing&nbsp; elements of a container and applying =
functionnal=20
lazy operations (map, filter...) on them.</DIV>
<DIV><FONT face=3DArial size=3D2><A=20
href=3D"http://ocaml-lib.sourceforge.net/">http://ocaml-lib.sourceforge.n=
et/</A></FONT></DIV>
<DIV><FONT face=3DArial size=3D2></FONT>&nbsp;</DIV>
<DIV><FONT face=3DArial size=3D2>Regards,</FONT></DIV>
<DIV><FONT face=3DArial size=3D2>Nicolas =
Cannasse</FONT></DIV></BODY></HTML>

------=_NextPart_000_0008_01C4A358.C4AC9230--

-------------------
To unsubscribe, mail caml-list-request@inria.fr Archives: http://caml.inria.fr
Bug reports: http://caml.inria.fr/bin/caml-bugs FAQ: http://caml.inria.fr/FAQ/
Beginner's list: http://groups.yahoo.com/group/ocaml_beginners

