Return-Path: <dthierbach@gmx.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.1 required=5.0 tests=AWL,SPF_FAIL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 952B7BBCB
	for <caml-list@yquem.inria.fr>; Tue, 26 Feb 2008 16:38:00 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAJ7Bw0fVpUAUmWdsb2JhbACQYwEBAQEBBgQGCQgWnCc
X-IronPort-AV: E=Sophos;i="4.25,407,1199660400"; 
   d="scan'208";a="7725889"
Received: from mail.gmx.net ([213.165.64.20])
  by mail2-smtp-roc.national.inria.fr with SMTP; 26 Feb 2008 16:38:00 +0100
Received: (qmail invoked by alias); 26 Feb 2008 15:37:59 -0000
Received: from dialin-145-254-250-137.pools.arcor-ip.net (EHLO dialin-145-254-250-137.pools.arcor-ip.net) [145.254.250.137]
  by mail.gmx.net (mp001) with SMTP; 26 Feb 2008 16:37:59 +0100
X-Authenticated: #11134691
X-Provags-ID: V01U2FsdGVkX18urqpCYqMujjfPCRjTCRj8/onSEGNv4OBXdYS4YR
	yw4pyxJjAX9JiJ
Received: from dirk by feanor.private-host.de with local (masqmail
 0.2.20) id 1JU1F7-1hM-00 for <caml-list@yquem.inria.fr>; Tue, 26 Feb
 2008 15:57:17 +0100
Date: Tue, 26 Feb 2008 15:57:17 +0100
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Unexpected restriction in "let rec" expressions
Message-ID: <20080226145717.GA6521@feanor>
References: <6f9f8f4a0802260424o5bce2fd9i89fbfa38bb239a6a@mail.gmail.com>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <6f9f8f4a0802260424o5bce2fd9i89fbfa38bb239a6a@mail.gmail.com>
User-Agent: Mutt/1.5.6+20040523i
From: Dirk Thierbach <dthierbach@gmx.de>
X-Y-GMX-Trusted: 0
X-Spam: no; 0.00; 0100,:01 haskell:01 ocaml:01 26,:98 wrote:01 rec:01 caml-list:01 lazy:02 unexpected:03 let:03 expressions:04 translate:04 restriction:05 tue:06 definition:07 

On Tue, Feb 26, 2008 at 01:24:57PM +0100, Loup Vaillant wrote:
> I was trying to translate this simple Haskell definition in Ocaml:
> 
> loop :: ((a,c) -> (b,c)) -> a -> b
> loop f a = b
>   where (b,c) = f (a,c)

How do you expect that to work under strict instead of lazy evaluation? :-)

- Dirk

