Return-Path: <jon@ffconsultancy.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 9962DBC6C
	for <caml-list@yquem.inria.fr>; Thu,  7 Feb 2008 16:26:43 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Aj0KAFSyqkfUnw7XbGdsb2JhbACCN416CwQGBwkZm2A
X-IronPort-AV: E=Sophos;i="4.25,316,1199660400"; 
   d="scan'208";a="22360081"
Received: from fhw-relay07.plus.net ([212.159.14.215])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 07 Feb 2008 16:26:43 +0100
Received: from [80.229.56.224] (helo=beast.local)
	 by fhw-relay07.plus.net with esmtp (Exim) id 1JN8eA-0001Mf-Ss
	for caml-list@yquem.inria.fr; Thu, 07 Feb 2008 15:26:43 +0000
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] [OSR] Exceptionless error management, take 2
Date: Thu, 7 Feb 2008 15:22:28 +0000
User-Agent: KMail/1.9.7
References: <1202396482.6084.5.camel@Blefuscu> <20080208.001729.233402575.garrigue@math.nagoya-u.ac.jp>
In-Reply-To: <20080208.001729.233402575.garrigue@math.nagoya-u.ac.jp>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200802071522.28338.jon@ffconsultancy.com>
X-Plusnet-Relay: ed671d3f90c6c39024dee20a9215e8de
X-Spam: no; 0.00; variants:01 wildcard:01 variants:01 subjective:01 frog:98 polymorphic:01 polymorphic:01 beginners:01 beginners:01 wrote:01 caml-list:01 enumerate:01 define:02 argument:02 garrigue:03 

On Thursday 07 February 2008 15:17:29 Jacques Garrigue wrote:
> However, the comments at the end look just like copied from Vincent
> Hanquez's mail.
> For me, points 2 and 3 make no sense at all.
> Polymorphic variants allow to check exhaustiveness... as long as you
> use exhaustive pattern matching (i.e. no wildcard, exactly like for
> normal variants.)
> And they _cannot_ pollute any namespace, since they define nothing.
> The other points are subjective.

Yes, that's what I thought. I'd also add that the argument that beginners 
might be put off this approach if it uses advanced features like polymorphic 
variants is moot because beginners won't be using this anyway.

Indeed, I think it would be valuable to enumerate exactly who might be using 
this.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
http://www.ffconsultancy.com/products/?e

