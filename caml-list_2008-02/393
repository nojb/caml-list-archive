Return-Path: <dthierbach@gmx.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.4 required=5.0 tests=AWL,DATE_IN_PAST_06_12,
	SPF_FAIL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id C3CC7BBCB
	for <caml-list@yquem.inria.fr>; Tue, 26 Feb 2008 08:15:08 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAAdLw0fVpUAUmWdsb2JhbABCkBwBAQEBAQYEBgkIFoEPmjg
X-IronPort-AV: E=Sophos;i="4.25,405,1199660400"; 
   d="scan'208";a="7705266"
Received: from mail.gmx.net ([213.165.64.20])
  by mail2-smtp-roc.national.inria.fr with SMTP; 26 Feb 2008 08:15:08 +0100
Received: (qmail invoked by alias); 26 Feb 2008 07:15:07 -0000
Received: from dialin-145-254-247-231.pools.arcor-ip.net (EHLO dialin-145-254-247-231.pools.arcor-ip.net) [145.254.247.231]
  by mail.gmx.net (mp044) with SMTP; 26 Feb 2008 08:15:07 +0100
X-Authenticated: #11134691
X-Provags-ID: V01U2FsdGVkX1/hcmk+1r7hqlk+EHjlVbkWcral0IbeVJUhudmusX
	48ovCXmnUnLOVu
Received: from dirk by feanor.private-host.de with local (masqmail
 0.2.20) id 1JTmPh-1nj-00 for <caml-list@yquem.inria.fr>; Tue, 26 Feb
 2008 00:07:13 +0100
Date: Tue, 26 Feb 2008 00:07:13 +0100
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] OO programming
Message-ID: <20080225230713.GA6916@feanor>
References: <47BD44FE.3050001@irisa.fr> <20080224163308.GA3459@feanor> <47C288FD.8070602@free.fr> <20080225201035.GA5414@feanor> <47C337FD.9030001@free.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <47C337FD.9030001@free.fr>
User-Agent: Mutt/1.5.6+20040523i
From: Dirk Thierbach <dthierbach@gmx.de>
X-Y-GMX-Trusted: 0
X-Spam: no; 0.00; 0100,:01 ocaml:01 extensively:01 recursive:01 recursive:01 wrote:01 caml-list:01 objects:02 objects:02 programming:03 gui:03 wether:04 size:95 types:05 problem:05 

On Mon, Feb 25, 2008 at 10:49:49PM +0100, Tiphaine.Turpin wrote:
> The few (2-3) programs of "not-toy" size that I did using objects
> (either in Java or in Ocaml) both extensively used many linked
> objects implementing lots of methods in a mutually recursive way,

Then maybe one should look at one of those as a concrete example, and
it might be possible to decouple those interdependencies.

>>>> Much more annoying is that one also has to give types to arguments in
>>>> methods that are unused (they are present make them compatible with
>>>> another class, which uses them;

>> Mutual recursive classes won't solve this problem at all.

> Yes it does, I think (wether it's a good way of solving it is 
> debatable). If you declare the classes generating events together with 
> classes that handle them, 

I can't. First, they are not necessarily classes. Second, all this
stuff is provided by the GUI framework, which I cannot change.

- Dirk

