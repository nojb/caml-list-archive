Return-Path: <tab@snarc.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 1E300BC6C
	for <caml-list@yquem.inria.fr>; Fri,  8 Feb 2008 10:53:37 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAABC1q0fAXQImh2dsb2JhbACQNQEBAQgKKZsL
X-IronPort-AV: E=Sophos;i="4.25,320,1199660400"; 
   d="scan'208";a="7090986"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 08 Feb 2008 10:53:36 +0100
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id m189raSj028178
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Fri, 8 Feb 2008 10:53:36 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Ao8CAIe1q0fUVZgL/2dsb2JhbACsAQ
X-IronPort-AV: E=Sophos;i="4.25,320,1199660400"; 
   d="scan'208";a="22394192"
Received: from hades.snarc.org ([212.85.152.11])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 08 Feb 2008 10:53:35 +0100
Received: by hades.snarc.org (Postfix, from userid 1000)
	id 005041B482; Fri,  8 Feb 2008 10:53:33 +0100 (CET)
Date: Fri, 8 Feb 2008 10:53:33 +0100
To: Jacques Garrigue <garrigue@math.nagoya-u.ac.jp>
Cc: David.Teller@univ-orleans.fr, caml-list@inria.fr
Subject: Re: [Caml-list] [OSR] Exceptionless error management, take 2
Message-ID: <20080208095333.GA582@snarc.org>
References: <1202396482.6084.5.camel@Blefuscu> <20080208.001729.233402575.garrigue@math.nagoya-u.ac.jp>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20080208.001729.233402575.garrigue@math.nagoya-u.ac.jp>
X-Warning: Email may contain unsmilyfied humor and/or satire.
User-Agent: Mutt/1.5.16 (2007-06-11)
From: tab@snarc.org (Vincent Hanquez)
X-Miltered: at discorde with ID 47AC26A0.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; variants:01 wildcard:01 variants:01 polymorphics:01 polymorphic:01 polymorphic:01 wrote:01 caml-list:01 variant:02 variant:02 define:02 garrigue:03 module:03 exhaustive:03 jacques:03 

On Fri, Feb 08, 2008 at 12:17:29AM +0900, Jacques Garrigue wrote:
> Polymorphic variants allow to check exhaustiveness... as long as you
> use exhaustive pattern matching (i.e. no wildcard, exactly like for
> normal variants.)

well, and "normal" variants allow to check exhaustiveness too in ALL case.
so what's the point in using polymorphics variant then ?

> And they _cannot_ pollute any namespace, since they define nothing.

did you actually read my previous reply ?
they "pollute" since the polymorphic variant namespace is flat, and
don't interact with module (on purpose obviously)

-- 
Vincent Hanquez

