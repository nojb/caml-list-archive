Return-Path: <alain@frisch.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 51D53BC6C
	for <caml-list@yquem.inria.fr>; Mon,  4 Feb 2008 08:08:53 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAHBIpkfUGyodimdsb2JhbACQKQEBAQgEBgcKCAkHmVg
X-IronPort-AV: E=Sophos;i="4.25,300,1199660400"; 
   d="scan'208";a="22134080"
Received: from smtp3-g19.free.fr ([212.27.42.29])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 04 Feb 2008 08:08:53 +0100
Received: from smtp3-g19.free.fr (localhost.localdomain [127.0.0.1])
	by smtp3-g19.free.fr (Postfix) with ESMTP id E2ED317B564;
	Mon,  4 Feb 2008 08:08:22 +0100 (CET)
Received: from [192.168.0.3] (rke75-3-82-229-183-156.fbx.proxad.net [82.229.183.156])
	by smtp3-g19.free.fr (Postfix) with ESMTP id AD4A217B555;
	Mon,  4 Feb 2008 08:08:22 +0100 (CET)
Message-ID: <47A6B8B5.9010907@frisch.fr>
Date: Mon, 04 Feb 2008 08:03:17 +0100
From: Alain Frisch <alain@frisch.fr>
User-Agent: Thunderbird 2.0.0.9 (Windows/20071031)
MIME-Version: 1.0
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list <caml-list@yquem.inria.fr>
Subject: Re: [Caml-list] Using OCaml's run-time from LLVM-generated native
 code
References: <200802012124.56835.jon@ffconsultancy.com>	<47A630FC.9000803@frisch.fr> <200802032319.15846.jon@ffconsultancy.com>
In-Reply-To: <200802032319.15846.jon@ffconsultancy.com>
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; frisch:01 frisch:01 ocaml's:01 run-time:01 ocaml's:01 pointer:01 ocaml:01 runtime:01 ocaml:01 camlparam:01 wrote:01 stack:01 stack:01 heap:01 caml-list:01 

Jon Harrop wrote:
> How does OCaml's stack walker work with C code, for example? In particular, 
> how does it know what is a pointer into the heap from a C stack frame? Must 
> it be explicitly disabled?

The OCaml runtime does not scan the stack frames corresponding to C 
functions.

Jon, it is somewhat weird that you spend so much time writing about 
forking OCaml and do not take a few minutes to read the source code. The 
macros CAMLparam*, CAMLlocal* are not really that mysterious.


-- Alain

