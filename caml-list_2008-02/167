Return-Path: <damien.doligez@inria.fr>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 8E114BC6C
	for <caml-list@yquem.inria.fr>; Thu,  7 Feb 2008 17:13:25 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAC69qkfAXQImh2dsb2JhbACQMQEBAQgKKZty
X-IronPort-AV: E=Sophos;i="4.25,316,1199660400"; 
   d="scan'208";a="8923776"
Received: from discorde.inria.fr ([192.93.2.38])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 07 Feb 2008 17:13:25 +0100
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by discorde.inria.fr (8.13.6/8.13.6) with ESMTP id m17GDOcB029009
	(version=TLSv1/SSLv3 cipher=RC4-SHA bits=128 verify=OK)
	for <caml-list@inria.fr>; Thu, 7 Feb 2008 17:13:25 +0100
X-IronPort-AV: E=Sophos;i="4.25,316,1199660400"; 
   d="scan'208";a="22365007"
Received: from macabane.inria.fr ([128.93.8.160])
  by mail4-relais-sop.national.inria.fr with ESMTP/TLS/AES128-SHA; 07 Feb 2008 17:13:23 +0100
Cc: Oliver Bandel <oliver@first.in-berlin.de>
Message-Id: <CE49CA70-EEE5-4B54-9595-FB41B69E8BFF@inria.fr>
From: Damien Doligez <damien.doligez@inria.fr>
To: caml users <caml-list@inria.fr>
In-Reply-To: <1202218433.47a865c1d3619@webmail.in-berlin.de>
Content-Type: text/plain; charset=US-ASCII; format=flowed; delsp=yes
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (Apple Message framework v915)
Subject: Re: [Caml-list] Performance-question
Date: Thu, 7 Feb 2008 17:13:25 +0100
References: <1202218433.47a865c1d3619@webmail.in-berlin.de>
X-Mailer: Apple Mail (2.915)
X-Miltered: at discorde with ID 47AB2E24.000 by Joe's j-chkmail (http://j-chkmail . ensmp . fr)!
X-Spam: no; 0.00; damien:01 damien:01 bandel:01 pointer:01 compactor:01 compactor:01 0.01:98 cumulative:98 0.01:98 0.40:98 doligez:01 doligez:01 wrote:01 oliver:01 invert:01 


On 2008-02-05, at 14:33, Oliver Bandel wrote:

> Each sample counts as 0.01 seconds.
>  %   cumulative   self              self     total
> time   seconds   seconds    calls   s/call   s/call  name
> 44.45    163.08   163.08    26627     0.01     0.01  mark_slice
> 22.31    244.92    81.84    38447     0.00     0.00  sweep_slice
> 14.40    297.74    52.82      131     0.40     0.61  caml_compact_heap
>  3.49    310.54    12.80 372416920     0.00     0.00   
> invert_pointer_at
>  3.40    323.02    12.48 560604006     0.00     0.00  compact_allocate
>  3.12    334.45    11.43  9725772     0.00     0.00  caml_fl_allocate
>  0.92    337.81     3.36    25607     0.00     0.00  caml_add_to_heap

That's a lot of time spent in the compactor, indicating that your
program has a memory fragmentation problem.

I would be very interested in getting a copy of your program and data,
as I'm currently experimenting with new allocation policies designed
to reduce fragmentation.  This would make a good benchmark for me.

More generally, I'm looking for (small) programs that exhibit this
kind of behaviour: they call the compactor frequently and their memory
usage grows without bound when the compactor is disabled.

-- Damien

