Return-Path: <oliver@first.in-berlin.de>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=AWL autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 84CC9BBC1
	for <caml-list@yquem.inria.fr>; Wed, 20 Feb 2008 15:37:43 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAGPKu0fAbSoIh2dsb2JhbACQUQEBAQgKKZ9q
X-IronPort-AV: E=Sophos;i="4.25,381,1199660400"; 
   d="scan'208";a="7505505"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 20 Feb 2008 15:37:43 +0100
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: <caml-list@yquem.inria.fr>
Received: from einhorn.in-berlin.de (localhost [127.0.0.1])
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id m1KEbg81002638
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NOT)
	for <caml-list@yquem.inria.fr>; Wed, 20 Feb 2008 15:37:42 +0100
Received: (from www-data@localhost)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Submit) id m1KEbgUL002636
	for caml-list@yquem.inria.fr; Wed, 20 Feb 2008 15:37:42 +0100
X-Authentication-Warning: einhorn.in-berlin.de: www-data set sender to oliver@first.in-berlin.de using -f
Received: from dslb-088-073-125-137.pools.arcor-ip.net (dslb-088-073-125-137.pools.arcor-ip.net [88.73.125.137]) 
	by webmail.in-berlin.de (IMP) with HTTP 
	for <first@localhost>; Wed, 20 Feb 2008 15:37:42 +0100
Message-ID: <1203518262.47bc3b361852c@webmail.in-berlin.de>
Date: Wed, 20 Feb 2008 15:37:42 +0100
From: Oliver Bandel <oliver@first.in-berlin.de>
To: Caml Mailing List <caml-list@yquem.inria.fr>
Subject: Re: [Caml-list] Re: large hash tables
References: <fa.XXbywsQknpl7bhlesWN8vFLM58c@ifi.uio.no> <55e81f00-5ef7-4946-9272-05595299e114@41g2000hsc.googlegroups.com> <33d2b3f70802192118p4d887212mcf76e34447c54e52@mail.gmail.com> <300C2AED-0D26-438B-A45E-5635043FEE61@inria.fr>
In-Reply-To: <300C2AED-0D26-438B-A45E-5635043FEE61@inria.fr>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
User-Agent: Internet Messaging Program (IMP) 3.2.6
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
X-Spam: no; 0.00; bandel:01 in-berlin:01 hash:01 damien:01 damien:01 ocaml:01 ocaml:01 threads:01 doligez:01 doligez:01 oliver:01 oliver:01 caml-list:01 pairs:01 data:02 

Zitat von Damien Doligez <damien.doligez@inria.fr>:
[...]
> Here, you have an array of lists of pairs.
[...]

So it's the datastructure, that eats up space.


[...]
> In conclusion OCaml is not really well-suited to tight memory
> situations, but usually you can manage.

So, is it the language, not the used data structures, that eat up space?


Are the used data structures in the C++ library as complex as the above
used? Do we compare things that can be compared? What if the
datastructures in the C++ solution would be as complex as in the OCaml
case, would it then also eat up seom GBs, or are they nevertheless
lighter?

Are more specialized/generic data structures needed to be added as
library for OCaml? What would the Extlib-fans offer as possibilities
here? Are there solutions to this?


Ciao,
   Oliver

P.S.: I do not follow all discussions on that list; I really want,
      but's a lot ongoing here since the developers meeting. There are
      some threads I didn't touched so far. Will there be conclusions/
      digests on those discussions? Possibly one of my questions above
      already is addressed there?

