Return-Path: <watersofmemory@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: *
X-Spam-Status: No, score=1.1 required=5.0 tests=AWL,HTML_MESSAGE,SPF_NEUTRAL 
	autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 8BA9BBC6C
	for <caml-list@yquem.inria.fr>; Fri,  1 Feb 2008 20:00:20 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgAAAIb6okdIDtyZk2dsb2JhbACCOzWNPQEBAQEHBAQLCBaBFpY3hko
X-IronPort-AV: E=Sophos;i="4.25,291,1199660400"; 
   d="scan'208";a="22067183"
Received: from fg-out-1718.google.com ([72.14.220.153])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 01 Feb 2008 20:00:20 +0100
Received: by fg-out-1718.google.com with SMTP id l27so1439194fgb.43
        for <caml-list@yquem.inria.fr>; Fri, 01 Feb 2008 11:00:19 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:received:message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        bh=T6WbY3YGeDWVFkLUsWUya8junGOtTc1Fwc1IXcTgf7U=;
        b=Z3quEc8OdqZitMvp34+yEr4cUigBLjKGWOTIv4Y7XZ3igOMwFFlneNIDpVV0EtylwTeO5x4SBTmRY01XsGambfBIWqqwCwjDBDWzY/qAP2+AOlBVgHz07/npfNGThR3ga5mV44t/JQnrA3QA/2TaWny7AEKU1f03dnlfArtTNDY=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=message-id:date:from:to:subject:cc:in-reply-to:mime-version:content-type:references;
        b=YLAlHlVxcpCD2lPOm+d+3/9fqG9IZ5wwsINWe7rPL9P2cGKu7yFgkWeGDXDhuUlGsRLoiOzGy2PEd7jkb89bhulAtNN1BLHLlBZRSpW/T9XHqSsITpKkNXaqW8FDcVbsA1XxsuPguoPo9x431ERu8KkBMSmQ/a9Qh/3PJ6K2rV8=
Received: by 10.86.27.9 with SMTP id a9mr3458979fga.62.1201892419830;
        Fri, 01 Feb 2008 11:00:19 -0800 (PST)
Received: by 10.86.52.20 with HTTP; Fri, 1 Feb 2008 11:00:19 -0800 (PST)
Message-ID: <b256a4c50802011100m1c4680dej98e9a90d4d75efda@mail.gmail.com>
Date: Fri, 1 Feb 2008 14:00:19 -0500
From: "Jonathan Bryant" <watersofmemory@gmail.com>
To: "Jon Harrop" <jon@ffconsultancy.com>
Subject: Re: [Caml-list] [OSR] Caml Community Code
Cc: caml-list@yquem.inria.fr
In-Reply-To: <200802011807.53876.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="----=_Part_8118_14456785.1201892419834"
References: <b256a4c50801310628oaa44678u7eef8e6e72730008@mail.gmail.com>
	 <200802010914.41643.jon@ffconsultancy.com>
	 <4a051d930802010556n22ad973co1a0f357789dafc4c@mail.gmail.com>
	 <200802011807.53876.jon@ffconsultancy.com>
X-Spam: no; 0.00; ocaml's:01 ocaml:01 bindings:01 stdlib:01 patching:01 camlp:01 compiler:01 ocaml:01 tarball:01 stdlib:01 ocaml's:01 bindings:01 patching:01 camlp:01 compiler:01 

------=_Part_8118_14456785.1201892419834
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

On Fri, Feb 1, 2008 at 1:07 PM, Jon Harrop <jon@ffconsultancy.com> wrote:

[...snip...]

For example, perhaps many (most?) of OCaml's issues can be addressed without
> altering the language by retrofitting an enhanced standard library onto
> OCaml.


I'll be honest and say I usually ignore your pontificating, but for once I
agree totally.


> Perhaps this can be done transparently (i.e. without changing compile
> lines or code) in such a way that we can all share it compatibly (i.e.
> without breaking the brittle bindings) and we are all free to contribute
> to
> it. This would be fantastic!


That would be fantastic, but...


> I believe their effort
> will not implement this transparently, i.e. it will be invasive because
> they
> do not wish to supercede the stdlib (either by patching it or by
> automating
> the inclusion of augmentations).


I think this this is more likely the case.


> I would rather have something transparent
> because it would let users solve their problems more easily.


 I think that backwards-incompatibility, despite what INRIA may say, is not
terribly important.  Let us not forget that they set a precedent when they
released a incompatible and scantily documented, yet significantly improved,
CamlP4 unannounced in 3.10.

I think that if the community wrote a new, significantly improved but
incompatible standard library and handed it to INRIA, INRIA would be hard
pressed to find a reason not to release an backwards-incompatible Caml 4.0,
given there was a configure switch when building the compiler to build it
using a frozen 3.x library, which was not possible 3.9 -> 3.10.  After all,
incompatibilities are what major version numbers are for.

>From then on, the OCaml team could ship a language only tarball (plus
compatability library) and concentrate on exactly what they are good at:
writing a great implementation of OCaml, without us bugging them about
improving the library.  All of the package managers being discussed could
pull the language from INRIA and the "new" stdlib from wherever it is housed
and automagically put the two together.

--Jonathan

[...snip...]

[...(again)...]

[...(and again)...]

[...(yet again)...]

------=_Part_8118_14456785.1201892419834
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit
Content-Disposition: inline

<br><br><div class="gmail_quote">On Fri, Feb 1, 2008 at 1:07 PM, Jon Harrop &lt;<a href="mailto:jon@ffconsultancy.com">jon@ffconsultancy.com</a>&gt; wrote:<br><br>[...snip...]<br><br><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
For example, perhaps many (most?) of OCaml&#39;s issues can be addressed without<br>
altering the language by retrofitting an enhanced standard library onto<br>
OCaml.</blockquote><div><br>I&#39;ll be honest and say I usually ignore your pontificating, but for once I agree totally.<br>&nbsp;</div><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
 Perhaps this can be done transparently (i.e. without changing compile<br>
lines or code) in such a way that we can all share it compatibly (i.e.<br>
without breaking the brittle bindings) and we are all free to contribute to<br>
it. This would be fantastic! </blockquote><div><br>That would be fantastic, but...<br>&nbsp;</div><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
I believe their effort<br>
will not implement this transparently, i.e. it will be invasive because they<br>
do not wish to supercede the stdlib (either by patching it or by automating<br>
the inclusion of augmentations).</blockquote><div><br>I think this this is more likely the case.<br>&nbsp;</div><blockquote class="gmail_quote" style="border-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
 I would rather have something transparent<br>
because it would let users solve their problems more easily.</blockquote><div><br>&nbsp;I think that backwards-incompatibility, despite what INRIA may say, is not terribly important.&nbsp; Let us not forget that they set a precedent when they released a incompatible and scantily documented, yet significantly improved, CamlP4 unannounced in 3.10.<br>
<br>I think that if the community wrote a new, significantly improved but incompatible standard library and handed it to INRIA, INRIA would be hard pressed to find a reason not to release an backwards-incompatible Caml 4.0, given there was a configure switch when building the compiler to build it using a frozen 3.x library, which was not possible 3.9 -&gt; 3.10.&nbsp; After all, incompatibilities are what major version numbers are for.<br>
<br>From then on, the OCaml team could ship a language only tarball (plus compatability library) and concentrate on exactly what they are good at: writing a great implementation of OCaml, without us bugging them about improving the library.&nbsp; All of the package managers being discussed could pull the language from INRIA and the &quot;new&quot; stdlib from wherever it is housed and automagically put the two together.<br>
<br>--Jonathan<br></div><div class="Ih2E3d">&nbsp;<br>[...snip...]<br><br></div><div>[...(again)...]<br>&nbsp;
<br>[...(and again)...]<br>
<br>[...(yet again)...]<br>
<br></div></div>

------=_Part_8118_14456785.1201892419834--

