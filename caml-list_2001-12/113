Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id OAA25011; Sun, 16 Dec 2001 14:18:30 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id OAA27155 for <caml-list@pauillac.inria.fr>; Sun, 16 Dec 2001 14:18:29 +0100 (MET)
Received: from relay-3m.club-internet.fr (relay-3m.club-internet.fr [195.36.216.172])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id fBGDISv03493
	for <caml-list@inria.fr>; Sun, 16 Dec 2001 14:18:29 +0100 (MET)
Received: from warp (lns01m-9-220.w.club-internet.fr [212.194.8.220])
	by relay-3m.club-internet.fr (Postfix) with SMTP id 0075D16CD
	for <caml-list@inria.fr>; Sun, 16 Dec 2001 14:18:26 +0100 (CET)
Message-ID: <003001c18633$6a46e650$af00a8c0@warp>
From: "Warp" <warplayer@free.fr>
To: <caml-list@inria.fr>
References: <000e01c185a7$c6cde720$0b01a8c0@mit.edu>
Subject: Re: [Caml-list] graphical variant editor widget generator
Date: Sun, 16 Dec 2001 14:13:12 +0100
MIME-Version: 1.0
Content-Type: text/plain;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
X-Priority: 3
X-MSMail-Priority: Normal
X-Mailer: Microsoft Outlook Express 5.50.4133.2400
X-MimeOLE: Produced By Microsoft MimeOLE V5.50.4133.2400
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> I am thinking that rather than building a bunch of custom GUI behavior for
my application, it might be nice to have a tool which
> could parse a ocaml datatype of nested variants/records, and generate a
custom graphical tree/graph editor widget for it.  Then I
> could get my app-specific behavior for cheap, with a UI contract that
would make my style self-consistent whether I liked it or
> not.  Has anyone done anything similar?

There is a technology called JXUL which is part of the Mozilla project. You
can get infos @ www.jxul.org
I've also tried to make the same as based on an XML document that will
contains components and some events handlers written in OCaml, but it's
quite a big work.

Bye
Warp


-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

