Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id KAA24219; Sun, 16 Dec 2001 10:07:02 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id KAA24080 for <caml-list@pauillac.inria.fr>; Sun, 16 Dec 2001 10:07:01 +0100 (MET)
Received: from dpt-info.u-strasbg.fr (dpt-info.u-strasbg.fr [130.79.44.193])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id fBG971v01888
	for <caml-list@inria.fr>; Sun, 16 Dec 2001 10:07:01 +0100 (MET)
Received: (from luther@localhost)
	by dpt-info.u-strasbg.fr (8.9.3/8.9.3) id KAA10558;
	Sun, 16 Dec 2001 10:07:49 +0100
Date: Sun, 16 Dec 2001 10:07:49 +0100
From: Sven <luther@dpt-info.u-strasbg.fr>
To: Jeff Henrikson <jehenrik@yahoo.com>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] graphical variant editor widget generator
Message-ID: <20011216100749.A10510@dpt-info.u-strasbg.fr>
References: <000e01c185a7$c6cde720$0b01a8c0@mit.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
X-Mailer: Mutt 1.0.1i
In-Reply-To: <000e01c185a7$c6cde720$0b01a8c0@mit.edu>; from jehenrik@yahoo.com on Sat, Dec 15, 2001 at 03:33:38PM -0500
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Sat, Dec 15, 2001 at 03:33:38PM -0500, Jeff Henrikson wrote:
> I am thinking that rather than building a bunch of custom GUI behavior for my application, it might be nice to have a tool which
> could parse a ocaml datatype of nested variants/records, and generate a custom graphical tree/graph editor widget for it.  Then I
> could get my app-specific behavior for cheap, with a UI contract that would make my style self-consistent whether I liked it or
> not.  Has anyone done anything similar?

I have proposed such a a thing as a maitrise TER project, but it seems none of
the student choose it.

It is a very nice idea, and it could be used, not only for variants/records
datatypes, but one could also use the functional types to drive different kind
of user feedback automatically, i am doing something such in a project i am
working on for my phd, but with a custom lambda-calculus evaluator.

This requires access to the type of an object, something which is not
available in ocaml, so you would need an external tool, which parses your
program and generate the correct interface.

I would gladly participate in any project who aims at producing such a tool,
or even just for discution on this subject.

Friendly,

Sven Luther
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

