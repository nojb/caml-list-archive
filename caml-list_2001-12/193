Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id WAA08662; Sat, 29 Dec 2001 22:17:52 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id WAA08626 for <caml-list@pauillac.inria.fr>; Sat, 29 Dec 2001 22:17:51 +0100 (MET)
Received: from quetelet.bik-gmbh.de (quetelet.bik-gmbh.de [194.233.237.132])
	by nez-perce.inria.fr (8.11.1/8.11.1) with ESMTP id fBTLHpP27810
	for <caml-list@pauillac.inria.fr>; Sat, 29 Dec 2001 22:17:51 +0100 (MET)
Received: from hars by quetelet.bik-gmbh.de with local (Exim 3.12 #1 (Debian))
	id 16KQpN-0001JP-00; Sat, 29 Dec 2001 22:15:37 +0100
Date: Sat, 29 Dec 2001 22:15:37 +0100
From: Florian Hars <florian@hars.de>
To: Will Benton <willb@cs.wisc.edu>
Cc: caml-list@pauillac.inria.fr
Subject: Re: [Caml-list] one more thing
Message-ID: <20011229221537.A4862@hars>
References: <Pine.LNX.4.21.0112280041150.14207-100000@cilantro.cs.wisc.edu>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.2.5i
In-Reply-To: <Pine.LNX.4.21.0112280041150.14207-100000@cilantro.cs.wisc.edu>; from willb@cs.wisc.edu on Fri, Dec 28, 2001 at 12:43:41AM -0600
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

On Fri, Dec 28, 2001 at 12:43:41AM -0600, Will Benton wrote:
> Is there some way to get ocamlyacc to include some code in the parser.mli
> file it generates?  I'm having ocamlyacc generate objects whose type
> constructors are defined in another module, and I have "open Module" in
> the .mly file -- but, since it isn't included in the .mli file, the .mli
> file won't compile.  (Or is my environment screwed-up?)

The last time  somehing like this was discussed (
http://caml.inria.fr/archives/200110/msg00209.html
) the recommended solution was to put all definitions in a separate
module and use fully qualified names in the mly, so they end up
fully qualified in the mli, so don't say "open Module", but 
"Module.some_function x". It is preferrable for reasons of 
maintainability, anyway.

Yours, Florian Hars.
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

