Received: (from majordomo@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA05746; Thu, 20 Dec 2001 11:50:20 +0100 (MET)
X-Authentication-Warning: pauillac.inria.fr: majordomo set sender to owner-caml-list@pauillac.inria.fr using -f
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id LAA06053 for <caml-list@pauillac.inria.fr>; Thu, 20 Dec 2001 11:50:19 +0100 (MET)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by concorde.inria.fr (8.11.1/8.11.1) with ESMTP id fBKAoFn19871;
	Thu, 20 Dec 2001 11:50:15 +0100 (MET)
Received: (from xleroy@localhost) by pauillac.inria.fr (8.7.6/8.7.3) id LAA05820; Thu, 20 Dec 2001 11:50:14 +0100 (MET)
Date: Thu, 20 Dec 2001 11:50:14 +0100
From: Xavier Leroy <xavier.leroy@inria.fr>
To: Christophe Raffalli <Christophe.Raffalli@univ-savoie.fr>
Cc: caml-list@inria.fr
Subject: Re: [Caml-list] Segv while compiling ocaml-3.04
Message-ID: <20011220115014.B5544@pauillac.inria.fr>
References: <3C19BAB4.13372263@univ-savoie.fr>
Mime-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Mailer: Mutt 1.0i
In-Reply-To: <3C19BAB4.13372263@univ-savoie.fr>; from Christophe.Raffalli@univ-savoie.fr on Fri, Dec 14, 2001 at 09:39:16AM +0100
Sender: owner-caml-list@pauillac.inria.fr
Precedence: bulk

> After ./configure, make world crashes for 3.04 in 
> 
> ../boot/ocamlrun ../boot/ocamlc -g -nopervasives -c oo.mli
> make[1]: *** [oo.cmi] Erreur de segmentation
> make[1]: *** Deleting file `oo.cmi'
> make[1]: Quitte le répertoire `/usr/local/src/ocaml-3.04/stdlib'
> make: *** [coldstart] Erreur 2
> 
> But then If I compile the file myself it works:
> 
> [root@boris ocaml-3.04]# cd stdlib
> [root@boris stdlib]# ../boot/ocamlrun ../boot/ocamlc -g -nopervasives -c oo.mli

We've observed similar hard-to-reproduce segmentation faults on a
Linux RedHat 7.2 machine.  After some tracking, it turns out to be a
bug in gcc version 2.96 20000731 -- the "unofficial" gcc that RH 7.2
uses; I don't know which version of gcc your Mandrake has.

For those who are interested, the bug is that gcc forgets to allocate
a stack frame in a leaf function, thus accessing the stack "below" the
stack pointer.  If there are no interrupts during the leaf function,
it still works; but any interrupt wipes the memory area just below the
stack pointer, and the function crashes...

We're trying to figure out a workaround, and will release updated RPMs
and SRPMs.

- Xavier Leroy
-------------------
Bug reports: http://caml.inria.fr/bin/caml-bugs  FAQ: http://caml.inria.fr/FAQ/
To unsubscribe, mail caml-list-request@inria.fr  Archives: http://caml.inria.fr

