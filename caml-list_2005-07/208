Return-Path: <damien.bobillot@m4x.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 40B02BB81
	for <caml-list@yquem.inria.fr>; Fri, 22 Jul 2005 13:22:18 +0200 (CEST)
Received: from postfix4-2.free.fr (postfix4-2.free.fr [213.228.0.176])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j6MBMHlO029084
	for <caml-list@yquem.inria.fr>; Fri, 22 Jul 2005 13:22:18 +0200
Received: from [192.168.0.11] (falcal.net [81.56.73.55])
	by postfix4-2.free.fr (Postfix) with ESMTP id 68D919A26D;
	Fri, 22 Jul 2005 13:22:17 +0200 (CEST)
In-Reply-To: <ad8cfe7e05072121492728e33b@mail.gmail.com>
References: <ad8cfe7e05072121492728e33b@mail.gmail.com>
Mime-Version: 1.0 (Apple Message framework v733)
Content-Type: multipart/signed; micalg=sha1; boundary=Apple-Mail-3--157265477; protocol="application/pkcs7-signature"
Message-Id: <92AD4A03-A3FA-4725-97B7-3355C057401D@m4x.org>
Cc: caml-list@yquem.inria.fr
From: Damien Bobillot <damien.bobillot@m4x.org>
Subject: Re: [Caml-list] Creating nativecode apps
Date: Fri, 22 Jul 2005 13:22:18 +0200
To: Jonathan Roewen <jonathan.roewen@gmail.com>
X-Mailer: Apple Mail (2.733)
X-Miltered: at nez-perce with ID 42E0D6E9.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; damien:01 damien:01 caml-list:01 nativecode:01 flowed:01 ocamlopt:01 compiler:01 ocamlopt:01 compiler:01 ocaml:01 ocamlc:01 ocaml:01 cmx:01 cmx:01 cmxa:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3
Status: O
Content-Length: 4255
Lines: 83


--Apple-Mail-3--157265477
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=ISO-8859-1;
	delsp=yes;
	format=flowed


Le 22 juil. 05 =E0 06:49, Jonathan Roewen a =E9crit :

> Where could I find information about how the ocamlopt compiler
> generates object files?
>
> I'm almost at a point where DST could retrofit the ocamlopt.opt
> compiler to run on it, and it might be an idea to write some tools in
> ocaml to do things like linking and what not so that we don't need a C
> environment to be self-hosting.

ocamlopt work exactly the same way ocamlc does.

"ocamlopt -c file.ml" to compile one ocaml source (you'll get a =20
file.cmx and a file.o files)

"ocamlopt -o test file.cmx alib.cmxa" to link the executable against =20
the alib library.

--=20
Damien alias Schmurtz
aim:goim?screenname=3Dschmuuurtz


--Apple-Mail-3--157265477
Content-Transfer-Encoding: base64
Content-Type: application/pkcs7-signature;
	name=smime.p7s
Content-Disposition: attachment;
	filename=smime.p7s

MIAGCSqGSIb3DQEHAqCAMIACAQExCzAJBgUrDgMCGgUAMIAGCSqGSIb3DQEHAQAAoIIGIjCCAtsw
ggJEoAMCAQICAw54xzANBgkqhkiG9w0BAQQFADBiMQswCQYDVQQGEwJaQTElMCMGA1UEChMcVGhh
d3RlIENvbnN1bHRpbmcgKFB0eSkgTHRkLjEsMCoGA1UEAxMjVGhhd3RlIFBlcnNvbmFsIEZyZWVt
YWlsIElzc3VpbmcgQ0EwHhcNMDUwNDEzMTc1MTAxWhcNMDYwNDEzMTc1MTAxWjBJMR8wHQYDVQQD
ExZUaGF3dGUgRnJlZW1haWwgTWVtYmVyMSYwJAYJKoZIhvcNAQkBFhdkYW1pZW4uYm9iaWxsb3RA
bTR4Lm9yZzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJ1TOYBqwJ42s0Fzz56jY1p0
fplGyikFgoNEUKGnOpqt4vpeoqUppAnORt2yvdQJxfIkhsWkrD/diiPS7MTF73wcxlSJtqYzVzPK
G/2WDm6dBinuWCIyWYFhtGedyxbap3kJW44H7cL7HUVVxZ0JhOIOTsjCoEzaeKnML7bctbIJeXEE
lErfbDv2jA1PDG1ru5dx+Q+AmbexX92ygnntE6aX3QZLSbhrytg4yCRdV8cOyQ9eFruZBI42RJv3
nJXevjUOr4n+y/7bzijAJj4BFyUU+dllvj6bmk5brnUXheCSOD0Ci20dqGNC1MyJ43b6MoIrbW7j
JwYIv12D6KuWoaUCAwEAAaM0MDIwIgYDVR0RBBswGYEXZGFtaWVuLmJvYmlsbG90QG00eC5vcmcw
DAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQQFAAOBgQB0u5b6wgwsbcyzDHJTzshlCn4gshxWtU/1
mH77gBCpsY8L554YV4/Tvm1PzmDzErm++drQf5HMy8sEFjmwLvNfBP0BqtkSqsdRFGR4wHzTjMhS
EW5LgmlaccqBQzqQrANtzglgBVbtmBDAV92qHjQslwHK4FohCRRzGl4DLQmqBDCCAz8wggKooAMC
AQICAQ0wDQYJKoZIhvcNAQEFBQAwgdExCzAJBgNVBAYTAlpBMRUwEwYDVQQIEwxXZXN0ZXJuIENh
cGUxEjAQBgNVBAcTCUNhcGUgVG93bjEaMBgGA1UEChMRVGhhd3RlIENvbnN1bHRpbmcxKDAmBgNV
BAsTH0NlcnRpZmljYXRpb24gU2VydmljZXMgRGl2aXNpb24xJDAiBgNVBAMTG1RoYXd0ZSBQZXJz
b25hbCBGcmVlbWFpbCBDQTErMCkGCSqGSIb3DQEJARYccGVyc29uYWwtZnJlZW1haWxAdGhhd3Rl
LmNvbTAeFw0wMzA3MTcwMDAwMDBaFw0xMzA3MTYyMzU5NTlaMGIxCzAJBgNVBAYTAlpBMSUwIwYD
VQQKExxUaGF3dGUgQ29uc3VsdGluZyAoUHR5KSBMdGQuMSwwKgYDVQQDEyNUaGF3dGUgUGVyc29u
YWwgRnJlZW1haWwgSXNzdWluZyBDQTCBnzANBgkqhkiG9w0BAQEFAAOBjQAwgYkCgYEAxKY8VXNV
+065yplaHmjAdQRwnd/p/6Me7L3N9VvyGna9fww6YfK/Uc4B1OVQCjDXAmNaLIkVcI7dyfArhVqq
P3FWy688Cwfn8R+RNiQqE88r1fOCdz0Dviv+uxg+B79AgAJk16emu59l0cUqVIUPSAR/p7bRPGEE
QB5kGXJgt/sCAwEAAaOBlDCBkTASBgNVHRMBAf8ECDAGAQH/AgEAMEMGA1UdHwQ8MDowOKA2oDSG
Mmh0dHA6Ly9jcmwudGhhd3RlLmNvbS9UaGF3dGVQZXJzb25hbEZyZWVtYWlsQ0EuY3JsMAsGA1Ud
DwQEAwIBBjApBgNVHREEIjAgpB4wHDEaMBgGA1UEAxMRUHJpdmF0ZUxhYmVsMi0xMzgwDQYJKoZI
hvcNAQEFBQADgYEASIzRUIPqCy7MDaNmrGcPf6+svsIXoUOWlJ1/TCG4+DYfqi2fNi/A9BxQIJNw
PP2t4WFiw9k6GX6EsZkbAMUaC4J0niVQlGLH2ydxVyWN3amcOY6MIE9lX5Xa9/eH1sYITq726jTl
EBpbNU1341YheILcIRk13iSx0x1G/11fZU8xggLnMIIC4wIBATBpMGIxCzAJBgNVBAYTAlpBMSUw
IwYDVQQKExxUaGF3dGUgQ29uc3VsdGluZyAoUHR5KSBMdGQuMSwwKgYDVQQDEyNUaGF3dGUgUGVy
c29uYWwgRnJlZW1haWwgSXNzdWluZyBDQQIDDnjHMAkGBSsOAwIaBQCgggFTMBgGCSqGSIb3DQEJ
AzELBgkqhkiG9w0BBwEwHAYJKoZIhvcNAQkFMQ8XDTA1MDcyMjExMjIxOVowIwYJKoZIhvcNAQkE
MRYEFP/KzJKJ5lGzajISn3zb9YpVGDd1MHgGCSsGAQQBgjcQBDFrMGkwYjELMAkGA1UEBhMCWkEx
JTAjBgNVBAoTHFRoYXd0ZSBDb25zdWx0aW5nIChQdHkpIEx0ZC4xLDAqBgNVBAMTI1RoYXd0ZSBQ
ZXJzb25hbCBGcmVlbWFpbCBJc3N1aW5nIENBAgMOeMcwegYLKoZIhvcNAQkQAgsxa6BpMGIxCzAJ
BgNVBAYTAlpBMSUwIwYDVQQKExxUaGF3dGUgQ29uc3VsdGluZyAoUHR5KSBMdGQuMSwwKgYDVQQD
EyNUaGF3dGUgUGVyc29uYWwgRnJlZW1haWwgSXNzdWluZyBDQQIDDnjHMA0GCSqGSIb3DQEBAQUA
BIIBAIHzA5w95lXhZO4EVRgujMXYkScsk3ENWZgfwN7kz4yERGsJD10/6mpXzlUgUvtY2Ji1qvOv
C0KwbWnUKnVxiTpNXQSQqSl/h9q4Lh7PCANTU58h5nOA+cYDF/xIE71CKqQ9bGKtqjghabEanW3t
PfnKA6JFLD7DNPKcfnYLzKDVNFXWs+jTBhQRq5GvV73ihP4ZDrwhwCqqJtfT5XNA/URAd5o6Gwl3
NimczWoykls5l+WtD8eUyBhe4fgm0atEiLOa/mFHhW68TMbzhdVyYg5kA0hHWQmoZPAJ6lbF0YOS
8+nIpAIxkjPuLGEPn2y8VkzIV7PAiXXX7Q2v0vY0TJQAAAAAAAA=

--Apple-Mail-3--157265477--

