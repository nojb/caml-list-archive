Return-Path: <Thomas.Fischbacher@Physik.Uni-Muenchen.DE>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 1E149D55E
	for <caml-list@yquem.inria.fr>; Sun, 31 Jul 2005 01:33:06 +0200 (CEST)
Received: from mail.physik.uni-muenchen.de (mail.physik.uni-muenchen.de [192.54.42.129])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j6UNX5YR011284
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=FAIL)
	for <caml-list@yquem.inria.fr>; Sun, 31 Jul 2005 01:33:05 +0200
Received: from localhost (unknown [127.0.0.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id 703202001B;
	Sun, 31 Jul 2005 01:33:05 +0200 (CEST)
Received: from mail.physik.uni-muenchen.de ([127.0.0.1])
 by localhost (mail.physik.uni-muenchen.de [127.0.0.1]) (amavisd-new, port 10024)
 with LMTP id 30710-02-6; Sun, 31 Jul 2005 01:33:03 +0200 (CEST)
Received: from mailhost.cip.physik.uni-muenchen.de (kaiser.cip.physik.uni-muenchen.de [141.84.136.1])
	by mail.physik.uni-muenchen.de (Postfix) with ESMTP id A90AC20015;
	Sun, 31 Jul 2005 01:33:03 +0200 (CEST)
Received: from gamshag.cip.physik.uni-muenchen.de (gamshag.cip.physik.uni-muenchen.de [141.84.136.22])
	by mailhost.cip.physik.uni-muenchen.de (Postfix) with ESMTP
	id 5F3CC26EDA; Sun, 31 Jul 2005 01:33:03 +0200 (CEST)
Received: by gamshag.cip.physik.uni-muenchen.de (Postfix, from userid 3092)
	id 3DF6016B59; Sun, 31 Jul 2005 01:33:03 +0200 (CEST)
Received: from localhost (localhost [127.0.0.1])
	by gamshag.cip.physik.uni-muenchen.de (Postfix) with ESMTP id 3A62F22144;
	Sun, 31 Jul 2005 01:33:03 +0200 (CEST)
Date: Sun, 31 Jul 2005 01:33:03 +0200 (CEST)
From: Thomas Fischbacher <Thomas.Fischbacher@Physik.Uni-Muenchen.DE>
To: David Thomas <david_hd@yahoo.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] How to do this properly with OCaml?
In-Reply-To: <20050727153558.80900.qmail@web30515.mail.mud.yahoo.com>
Message-ID: <Pine.LNX.4.61.0507310125490.11495@gamshag.cip.physik.uni-muenchen.de>
References: <20050727153558.80900.qmail@web30515.mail.mud.yahoo.com>
X-BOFH: Daemons did it
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII
X-Virus-Scanned: amavisd-new at physik.uni-muenchen.de
X-Miltered: at nez-perce with ID 42EC0E31.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 arrays:01 geometric:01 subset:01 geometric:01 binary:01 heap:01 2005,:98 ...:98 ...:98 cip:98 cip:98 lambda:01 lambda:01 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=SPF_FAIL autolearn=disabled 
	version=3.0.3


On Wed, 27 Jul 2005, David Thomas wrote:

> I'm still curious what numerical algorithm is so
> desperately in need of variable length arrays...

There are quite some geometric algorithms where you want to process a 
subset (of a priori unknown size) of all geometric entities that satisfy a 
certain constraint by decreasing priority. Using a binary heap implemented 
on top of an array often is a reasonable choice there.

I am not an expert on this, but I think that even some algorithms that 
deal with the problem of permuting indices of a sparse matrix to optimize 
cache efficiency of subsequent matrix-vector products may belong to this 
category. Now if the sparse matrix is not known a priori, but assembled at 
run time...

-- 
regards,               tf@cip.physik.uni-muenchen.de              (o_
 Thomas Fischbacher -  http://www.cip.physik.uni-muenchen.de/~tf  //\
(lambda (n) ((lambda (p q r) (p p q r)) (lambda (g x y)           V_/_
(if (= x 0) y (g g (- x 1) (* x y)))) n 1))                  (Debian GNU)

