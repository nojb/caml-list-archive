Return-Path: <jon@ffconsultancy.com>
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 294FCBCAE
	for <caml-list@yquem.inria.fr>; Mon, 18 Jul 2005 21:40:45 +0200 (CEST)
Received: from pih-relay04.plus.net (pih-relay04.plus.net [212.159.14.131])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j6IJeiLO024716
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO)
	for <caml-list@yquem.inria.fr>; Mon, 18 Jul 2005 21:40:45 +0200
Received: from [80.229.56.224] (helo=chetara)
	 by pih-relay04.plus.net with esmtp (Exim) id 1DubTn-0006AA-SH
	for caml-list@yquem.inria.fr; Mon, 18 Jul 2005 20:40:44 +0100
From: Jon Harrop <jon@ffconsultancy.com>
Organization: Flying Frog Consultancy Ltd.
To: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] (Mostly) Functional Design?
Date: Mon, 18 Jul 2005 20:38:44 +0100
User-Agent: KMail/1.7.2
References: <9cc3782b05071411004b27b6a4@mail.gmail.com> <42DB74DC.8030201@barettadeit.com> <42DBF1C6.7080005@cs.utah.edu>
In-Reply-To: <42DBF1C6.7080005@cs.utah.edu>
MIME-Version: 1.0
Content-Type: text/plain;
  charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline
Message-Id: <200507182038.45032.jon@ffconsultancy.com>
X-Miltered: at nez-perce with ID 42DC05BC.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 morelli:01 ocaml:01 ocaml:01 productive:01 haskell:01 statically:01 frog:98 presenta:98 wrote:01 typing:01 suited:01 checking:02 graphics:02 functional:02 
X-Spam-Checker-Version: SpamAssassin 3.0.2 (2004-11-16) on yquem.inria.fr
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.2
X-Spam-Level: 
Status: O
Content-Length: 1583
Lines: 34

On Monday 18 July 2005 19:15, Robert Morelli wrote:
> With all due respect,  claims of order of magnitude productivity
> gains,  that OCaml is a far better language than Java,  etc.  are
> exactly the kind of advocacy that I think is counterproductive.
> Most programmers would regard such dramatic statements as implausible,
> if not preposterous.

Although "preposterous", I agree that OCaml is an order of magnitude more 
productive than C++. I also agree that code maintainance is the main reason 
for this.

> The use of type checking is a point where the FP community
> has not reached consensus,  as there are widely divergent views from
> the Scheme community and the ML and Haskell communities.

I have seen huge improvements in productivity only from statically typed 
languages. More importantly, I can do many things in OCaml which I could not 
have done in C++ because they were practically impossible.

> In general,  I believe that OCaml and its approach to static typing
> are best suited to simple domains,  like language tools and formal
> methods.

Firstly, those domains are not simple (quite the opposite, in fact!). 
Secondly, OCaml has already been applied with great success to many, wildly 
different problem domains. For example, we have found OCaml to be very 
beneficial in the areas of scientific computing and graphics. The fact that 
people like Alex and I are able to run our companies this is a testament to 
this fact.

-- 
Dr Jon D Harrop, Flying Frog Consultancy Ltd.
Technical Presentation Software
http://www.ffconsultancy.com/products/presenta

