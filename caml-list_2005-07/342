Return-Path: <david_hd@yahoo.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 419C2D56D
	for <caml-list@yquem.inria.fr>; Wed, 27 Jul 2005 18:31:26 +0200 (CEST)
Received: from web30513.mail.mud.yahoo.com (web30513.mail.mud.yahoo.com [68.142.201.241])
	by nez-perce.inria.fr (8.13.0/8.13.0) with SMTP id j6RGVPrS032675
	for <caml-list@yquem.inria.fr>; Wed, 27 Jul 2005 18:31:25 +0200
Received: (qmail 57348 invoked by uid 60001); 27 Jul 2005 16:31:23 -0000
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
  s=s1024; d=yahoo.com;
  h=Message-ID:Received:Date:From:Subject:To:In-Reply-To:MIME-Version:Content-Type:Content-Transfer-Encoding;
  b=2RmPjUUthtKVMQfVTawMfiB4U0XpTuYmPTJwKq9cn42oMNALgzT7YQmI2sNigXjkodAvh0mr6khhTGc5Busyu9Edd5fxgB9gHwexWFAZSXEyyIcWEMv9vaR76MJdoaq+V1hGtqHClDSA1G3LUO9pkAX6yOWpK7SyCycvHhtCX50=  ;
Message-ID: <20050727163123.57346.qmail@web30513.mail.mud.yahoo.com>
Received: from [141.213.12.136] by web30513.mail.mud.yahoo.com via HTTP; Wed, 27 Jul 2005 09:31:23 PDT
Date: Wed, 27 Jul 2005 09:31:23 -0700 (PDT)
From: David Thomas <david_hd@yahoo.com>
Subject: Re: [Caml-list] How to do this properly with OCaml?
To: caml-list@yquem.inria.fr
In-Reply-To: <200507271635.28931.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit
X-Miltered: at nez-perce with ID 42E7B6DD.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 stdlib:01 stdlib:01 arrays:01 ocaml:01 ...:98 fuller:98 frog:98 wrote:01 wrote:01 algorithm:01 algorithm:01 caml:02 objective:02 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: **
X-Spam-Status: No, score=2.2 required=5.0 tests=FORGED_YAHOO_RCVD 
	autolearn=disabled version=3.0.3
Status: O
Content-Length: 1188
Lines: 43

Adding to stdlib is silly if no one is going to be
using the addition, particularly when the lack of
availability of the structure will promote better
programming.  I'm not saying that last bit will always
be the case, but in many cases it is.  Again, the list
is:

(1) See if there's a better algorithm.
(2) Write it inefficiently.
(3) If the program is running poorly, profile.  

If the inefficiency added in (2) is the cause, then
(3a) See if there's a better algorithm.
(3b) Talk about fixing the stdlib.

else, 
(4) fix bottleneck, and go back to (3)

Until you've reached (3b), the stdlib isn't deficient.



--- Jon Harrop <jon@ffconsultancy.com> wrote:

> On Wednesday 27 July 2005 16:34, you wrote:
> > I'm still curious what numerical algorithm is so
> > desperately in need of variable length arrays...
> 
> I've no idea. I think he just wants a fuller stdlib.
> :-)
> 
> -- 
> Dr Jon D Harrop, Flying Frog Consultancy Ltd.
> Objective CAML for Scientists
>
http://www.ffconsultancy.com/products/ocaml_for_scientists
> 


__________________________________________________
Do You Yahoo!?
Tired of spam?  Yahoo! Mail has the best spam protection around 
http://mail.yahoo.com 

