Return-Path: <xm@naru1.oldskool.fi>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id 0D5E9D176
	for <caml-list@yquem.inria.fr>; Tue, 26 Jul 2005 02:56:42 +0200 (CEST)
Received: from naru1.oldskool.fi (naru1.oldskool.fi [193.64.190.82])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j6Q0ufmT005408
	for <caml-list@yquem.inria.fr>; Tue, 26 Jul 2005 02:56:41 +0200
Received: by naru1.oldskool.fi (Postfix, from userid 562)
	id DBFB267005A; Tue, 26 Jul 2005 03:56:40 +0300 (EEST)
Date: Tue, 26 Jul 2005 03:56:40 +0300
From: Jere Sanisalo <xm@xmunkki.org>
To: Brian Hurt <bhurt@spnz.org>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] How to do this properly with OCaml?
Message-ID: <20050726005640.GA30583@xmunkki.org>
Reply-To: xm@xmunkki.org
References: <Pine.LNX.4.61.0507221552070.27560@katrin.cip.physik.uni-muenchen.de> <200507241623.13705.Stephane.Glondu@crans.org> <1122251570.9027.362.camel@localhost.localdomain> <200507242345.13152.Stephane.Glondu@crans.org> <1122291335.6766.33.camel@localhost.localdomain> <Pine.LNX.4.63.0507251931540.19547@localhost.localdomain>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <Pine.LNX.4.63.0507251931540.19547@localhost.localdomain>
User-Agent: Mutt/1.4.1i
X-Miltered: at concorde with ID 42E58A49.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 ocaml:01 char:01 char:01 apis:01 api:01 25,:98 wrote:01 ptr:02 ptr:02 library:03 brian:03 driver:04 depends:04 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3
Status: O
Content-Length: 898
Lines: 19

On Mon, Jul 25, 2005 at 07:47:16PM -0500, Brian Hurt wrote:
>>The language requirements with respect to initialisation
>>are the difference: Ocaml requires all store to be
>>initialised, C/C++ does not.
>Yep.  The following C code is really hard to implement in Ocaml:
>    char * ptr = (char *) 0xA00000ul;
>    ptr[315] = 'a';
>I consider this an advantage of Ocaml over C/C++.

Depends on the task.. What if it was a hardware driver? More so, it's not
the language, it's the things you can do with it, coupled with the APIs
possible and already present. I know I'm already favoring .NET as a general
platform for API tools in the gaming world. The games still need to be fast,
so C++ for them for now, but C# (and others) solve the tool problem quite
nicely. And the .NET library is not the least of the reasons; it's easy to
do so.

-- 
Jere Sanisalo [xm@xmunkki.org] - http://www.xmunkki.org/

