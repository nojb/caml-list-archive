Return-Path: <skaller@users.sourceforge.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 6545DD55E
	for <caml-list@yquem.inria.fr>; Wed, 27 Jul 2005 22:00:02 +0200 (CEST)
Received: from smtp1.adl2.internode.on.net (smtp1.adl2.internode.on.net [203.16.214.181])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id j6RK00HX019862
	for <caml-list@yquem.inria.fr>; Wed, 27 Jul 2005 22:00:01 +0200
Received: from rosella (ppp41-136.lns2.syd6.internode.on.net [59.167.41.136])
	by smtp1.adl2.internode.on.net (8.12.9/8.12.9) with ESMTP id j6RJxsjm057925;
	Thu, 28 Jul 2005 05:29:54 +0930 (CST)
Subject: Re: [Caml-list] How to do this properly with OCaml?
From: skaller <skaller@users.sourceforge.net>
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <200507271629.30455.jon@ffconsultancy.com>
References: 
	 <Pine.LNX.4.61.0507221552070.27560@katrin.cip.physik.uni-muenchen.de>
	 <Pine.LNX.4.63.0507251931540.19547@localhost.localdomain>
	 <1122476759.6768.10.camel@localhost.localdomain>
	 <200507271629.30455.jon@ffconsultancy.com>
Content-Type: multipart/signed; micalg=pgp-sha1; protocol="application/pgp-signature"; boundary="=-i/N5cXPx2yJAKxHVoIzI"
Date: Thu, 28 Jul 2005 05:59:54 +1000
Message-Id: <1122494394.6768.268.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.2.1.1 
X-Miltered: at nez-perce with ID 42E7E7C0.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 stl:01 ocaml:01 wrote:01 wrote:01 sourceforge:01 sourceforge:01 sticking:01 structures:01 imperative:01 imperative:01 supported:01 data:02 data:02 
X-Attachments: type="application/pgp-signature" name="signature.asc" 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3
Status: O
Content-Length: 1848
Lines: 57


--=-i/N5cXPx2yJAKxHVoIzI
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable

On Wed, 2005-07-27 at 16:29 +0100, Jon Harrop wrote:
> On Wednesday 27 July 2005 16:05, skaller wrote:
> > Given that there is a simple requirement for a simple
> > efficient data structure (analogous to C++ STL Vector)
> > but it needs magic to do properly, the varray is best
> > supplied by INRIA magicians.
>=20
> At what cost?

I am not the one to judge that. There is a 'working'
implementation in Extlib, I imagine Xavier could
knock one up in a day .. ah no, given the kinds
of things the Ocaml teams do at the Functional
Programming Contest in a week .. nah, he could
knock one up in one hour.=20

There are also costs in maintaining it, and I'm sure=20
INRIA teams has other things to do too. It seems to
me to be a small cost. But only INRIA can make
that judgement (and they have .. they're not=20
supporting it)

All I can say is that if Xavier keeps condemning
people for sticking dirty syringes in their arms,
he should allow he's partly responsible for
not providing a clean one.. if people are going
to use imperative programming style they're going
to want a suitable set of basic data structures
to use to build others.

You can argue the imperative style isn't the best,
but it is provided and supported in Ocaml, Ocaml
even has Objects, so clearly it is expected
people WILL do imperative programming.

--=20
John Skaller <skaller at users dot sourceforge dot net>


--=-i/N5cXPx2yJAKxHVoIzI
Content-Type: application/pgp-signature; name=signature.asc
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iD8DBQBC5+e4sRp8/9aGVGsRAuCtAKCY5kVljJ6RZThK+4aBFjs1XGTK9gCfXOsI
M+JOsaIdtoiDOwb0ToZ5Ou8=
=TkO+
-----END PGP SIGNATURE-----

--=-i/N5cXPx2yJAKxHVoIzI--

