Return-Path: <skaller@users.sourceforge.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39])
	by yquem.inria.fr (Postfix) with ESMTP id D8DAAD560
	for <caml-list@yquem.inria.fr>; Wed, 27 Jul 2005 17:33:49 +0200 (CEST)
Received: from ash25e.internode.on.net (ash25e.internode.on.net [203.16.214.182])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id j6RFXlFt008758
	for <caml-list@yquem.inria.fr>; Wed, 27 Jul 2005 17:33:49 +0200
Received: from rosella (ppp6-113.lns1.syd3.internode.on.net [59.167.6.113])
	by ash25e.internode.on.net (8.12.9/8.12.6) with ESMTP id j6RFXeXf022206;
	Thu, 28 Jul 2005 01:03:40 +0930 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] How to do this properly with OCaml?
From: skaller <skaller@users.sourceforge.net>
To: Stephane Glondu <Stephane.Glondu@crans.org>
Cc: Brian Hurt <bhurt@spnz.org>, caml-list@yquem.inria.fr
In-Reply-To: <42E58B87.9040206@crans.org>
References: 
	 <Pine.LNX.4.61.0507221552070.27560@katrin.cip.physik.uni-muenchen.de>
	 <200507241623.13705.Stephane.Glondu@crans.org>
	 <1122251570.9027.362.camel@localhost.localdomain>
	 <200507242345.13152.Stephane.Glondu@crans.org>
	 <1122291335.6766.33.camel@localhost.localdomain>
	 <Pine.LNX.4.63.0507251931540.19547@localhost.localdomain>
	 <42E58B87.9040206@crans.org>
Content-Type: multipart/signed; micalg=pgp-sha1; protocol="application/pgp-signature"; boundary="=-JSKNkJ+ZLEd0+9TAyQBZ"
Date: Thu, 28 Jul 2005 01:33:39 +1000
Message-Id: <1122478420.6768.36.camel@localhost.localdomain>
Mime-Version: 1.0
X-Mailer: Evolution 2.2.1.1 
X-Miltered: at concorde with ID 42E7A95B.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; caml-list:01 ocaml:01 argued:01 arrays:01 assertion:01 ocaml:01 arrays:01 wrote:01 sourceforge:01 sourceforge:01 data:02 seems:03 imply:03 programming:03 structure:04 
X-Attachments: type="application/pgp-signature" name="signature.asc" 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3
Status: O
Content-Length: 1279
Lines: 40


--=-JSKNkJ+ZLEd0+9TAyQBZ
Content-Type: text/plain
Content-Transfer-Encoding: quoted-printable

On Mon, 2005-07-25 at 18:01 -0700, Stephane Glondu wrote:

> But skaller already argued that he didn't like this approach.

I'm not arguing "I don't like this approach". I already know
of several ways to do variable length arrays, you haven't
shown me anything new: it seems you're simply not accepting
my assertion: it isn't possible to do it efficiently
in Ocaml without magic: either Obj.magic or C code with
an Ocaml interface: both solutions are fragile and
require secret knowledge of ocaml implementation.

Thus, to safely use variable length arrays they
have to be provided by INRIA. That doesn't imply
they *should* be provided by INRIA of course.
I can always use a different data structure,
ignore safety, or use another programming language.

--=20
John Skaller <skaller at users dot sourceforge dot net>


--=-JSKNkJ+ZLEd0+9TAyQBZ
Content-Type: application/pgp-signature; name=signature.asc
Content-Description: This is a digitally signed message part

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iD8DBQBC56lSsRp8/9aGVGsRAkzwAJ4p5Fglkub90Wj0wMs+GOCjbcgvuwCfQI/f
PXl5X+GhtcauHUrLQQ3OMhs=
=RyQu
-----END PGP SIGNATURE-----

--=-JSKNkJ+ZLEd0+9TAyQBZ--

