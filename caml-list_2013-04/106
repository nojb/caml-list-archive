Return-Path: <danweil68@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 9039E7EE51
	for <caml-list@sympa.inria.fr>; Fri, 12 Apr 2013 16:39:07 +0200 (CEST)
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  danweil68@gmail.com) identity=pra; client-ip=74.125.82.182;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="danweil68@gmail.com";
  x-sender="danweil68@gmail.com"; x-conformance=sidf_compatible
Received-SPF: Pass (mail3-smtp-sop.national.inria.fr: domain of
  danweil68@gmail.com designates 74.125.82.182 as permitted
  sender) identity=mailfrom; client-ip=74.125.82.182;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="danweil68@gmail.com";
  x-sender="danweil68@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail3-smtp-sop.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-we0-f182.google.com) identity=helo;
  client-ip=74.125.82.182;
  receiver=mail3-smtp-sop.national.inria.fr;
  envelope-from="danweil68@gmail.com";
  x-sender="postmaster@mail-we0-f182.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Am8KAP8baFFKfVK2k2dsb2JhbAA2GoM8iUOmBYNRhhIBiDUZaggWDgEBAQEHCwsJFAQkgh8BAQQBQAEbEgsBAwELBgULDQ0hIgERAQUBChIZCAqHbwEDCQYML55RjC+Ce4RUChknAwpZiH4BBQyPBwQHg0EDlwKBIYpWgzgWKYJUgVw6
X-IPAS-Result: Am8KAP8baFFKfVK2k2dsb2JhbAA2GoM8iUOmBYNRhhIBiDUZaggWDgEBAQEHCwsJFAQkgh8BAQQBQAEbEgsBAwELBgULDQ0hIgERAQUBChIZCAqHbwEDCQYML55RjC+Ce4RUChknAwpZiH4BBQyPBwQHg0EDlwKBIYpWgzgWKYJUgVw6
X-IronPort-AV: E=Sophos;i="4.87,462,1363129200"; 
   d="scan'208";a="10763387"
Received: from mail-we0-f182.google.com ([74.125.82.182])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/RC4-SHA; 12 Apr 2013 16:39:06 +0200
Received: by mail-we0-f182.google.com with SMTP id k14so2111365wer.41
        for <caml-list@inria.fr>; Fri, 12 Apr 2013 07:39:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=x-received:mime-version:in-reply-to:references:from:date:message-id
         :subject:cc:content-type;
        bh=hjzqTwmYZUm7t8IoHCmoI1bP1aOpE3PuqKQ+cXuVR9Y=;
        b=1Aj7k4R1aKJvDWy5RozNmxZLPSf2fBYKmVLV1NwRZjFddAPDK5CAgDvEO8GN5bezGU
         LBJqZo7XgL1ziw32HXsN31Z7K1z21iLejNxb0Ht5cyvHNkPxSmASTVcry/rpy6v70zGO
         cB0iaXtxRL0mK+9FTuyv9uCf0DWw0Mhdy7pwrhgQkvsV5CXFraJlOCQBXSX1NOu/av10
         7XmXgBpY2Lz31473hoGg42FVBVtovBNwRDKqkuSa9LpHTLe5ailPNNXd+EmLKm0hqtpI
         oyVva3RtroUvKVxAP9kF4P/hNsp5tu+/I059gtwu+O0px8uxl2IeG2i5gztoSnBWsndW
         XdSw==
X-Received: by 10.194.104.137 with SMTP id ge9mr12326564wjb.52.1365777546454;
 Fri, 12 Apr 2013 07:39:06 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.217.106.129 with HTTP; Fri, 12 Apr 2013 07:38:45 -0700 (PDT)
In-Reply-To: <5166B3F9.9040105@lexifi.com>
References: <CAB+Vvvgfrez6qedMwyj4_2fjPy+x_DyGzSOBXKQ4paLNEtk3mg@mail.gmail.com>
 <5166B3F9.9040105@lexifi.com>
From: Daniel Weil <danweil68@gmail.com>
Date: Fri, 12 Apr 2013 16:38:45 +0200
Message-ID: <CA+kyP8DhTtWEq=Jc7+jt8Wf01XshUML7vXEa4mOokHX2MLAcCA@mail.gmail.com>
Cc: caml-list@inria.fr
Content-Type: multipart/alternative; boundary=089e010d83887fb1b804da2add68
Subject: Re: [Caml-list] Build number and date in OCaml?


--089e010d83887fb1b804da2add68
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

If you like ocambuild, an alternative is to add a small rule in your
ocamlbuild plugin.
The ocamlbuild wiki gives an example of ocamlbuild plugin that create a "
version.ml" file in the _build directory at each build. You can then link
your code with this version.ml file.

http://brion.inria.fr/gallium/index.php/Automatic_Version_Generation

Daniel




2013/4/11 Alain Frisch <alain.frisch@lexifi.com>

> On 04/09/2013 01:38 PM, =C9tienne Andr=E9 wrote:
>
>> I quite stupidly used the Unix.gettimeofday() function before realizing
>> that it is of course executed at runtime.
>>
>
> As others suggested, you can tell your build system to generate an ad hoc
> file containing the compile-time information.  Another approach is to use=
 a
> preprocessor to inject such compile-time information into the source code
> "on the fly" during its compilation.  This can be done with a dedicated
> Camlp4 syntax extension or a -ppx preprocessor (available in trunk only,
> with syntactic extension points being designed in the extension_points
> branch of the OCaml SVN).
>
> As an illustration of the -ppx approach, I've created a tiny preprocessor
> which uses the OCaml toplevel to evaluate expressions and inserts the
> result as constants in the compiled code.
>
> The source code for this -ppx preprocessor can be found here:
>
> http://caml.inria.fr/cgi-bin/**viewvc.cgi/ocaml/branches/**
> extension_points/experimental/**frisch/eval.ml?&view=3Dmarkup<http://caml=
.inria.fr/cgi-bin/viewvc.cgi/ocaml/branches/extension_points/experimental/f=
risch/eval.ml?&view=3Dmarkup>
>
> and here is an example of what you can write with it:
>
> http://caml.inria.fr/cgi-bin/**viewvc.cgi/ocaml/branches/**
> extension_points/experimental/**frisch/test_eval.ml?&view=3D**markup<http=
://caml.inria.fr/cgi-bin/viewvc.cgi/ocaml/branches/extension_points/experim=
ental/frisch/test_eval.ml?&view=3Dmarkup>
>
> (To play with it, you need to checkout the extension_points branch and
> after compiling it: cd experimental/frisch && make eval)
>
> -- Alain
>
>
> --
> Caml-list mailing list.  Subscription management and archives:
> https://sympa.inria.fr/sympa/**arc/caml-list<https://sympa.inria.fr/sympa=
/arc/caml-list>
> Beginner's list: http://groups.yahoo.com/group/**ocaml_beginners<http://g=
roups.yahoo.com/group/ocaml_beginners>
> Bug reports: http://caml.inria.fr/bin/caml-**bugs<http://caml.inria.fr/bi=
n/caml-bugs>
>

--089e010d83887fb1b804da2add68
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><div style>If you like ocambuild, an alternative is to add=
 a small rule in your ocamlbuild plugin.=A0</div><div style>The ocamlbuild =
wiki gives an example of ocamlbuild plugin that create a &quot;<a href=3D"h=
ttp://version.ml">version.ml</a>&quot; file in the _build directory at each=
 build. You can then link your code with this <a href=3D"http://version.ml"=
>version.ml</a> file.=A0</div>

<div><br></div><a href=3D"http://brion.inria.fr/gallium/index.php/Automatic=
_Version_Generation">http://brion.inria.fr/gallium/index.php/Automatic_Vers=
ion_Generation</a><div><br></div><div>Daniel<br><div><br></div><div><br>
</div>
</div></div><div class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">2=
013/4/11 Alain Frisch <span dir=3D"ltr">&lt;<a href=3D"mailto:alain.frisch@=
lexifi.com" target=3D"_blank">alain.frisch@lexifi.com</a>&gt;</span><br><bl=
ockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1px #=
ccc solid;padding-left:1ex">

<div class=3D"im">On 04/09/2013 01:38 PM, =C9tienne Andr=E9 wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex">
I quite stupidly used the Unix.gettimeofday() function before realizing<br>
that it is of course executed at runtime.<br>
</blockquote>
<br></div>
As others suggested, you can tell your build system to generate an ad hoc f=
ile containing the compile-time information. =A0Another approach is to use =
a preprocessor to inject such compile-time information into the source code=
 &quot;on the fly&quot; during its compilation. =A0This can be done with a =
dedicated Camlp4 syntax extension or a -ppx preprocessor (available in trun=
k only, with syntactic extension points being designed in the extension_poi=
nts branch of the OCaml SVN).<br>


<br>
As an illustration of the -ppx approach, I&#39;ve created a tiny preprocess=
or which uses the OCaml toplevel to evaluate expressions and inserts the re=
sult as constants in the compiled code.<br>
<br>
The source code for this -ppx preprocessor can be found here:<br>
<br>
<a href=3D"http://caml.inria.fr/cgi-bin/viewvc.cgi/ocaml/branches/extension=
_points/experimental/frisch/eval.ml?&amp;view=3Dmarkup" target=3D"_blank">h=
ttp://caml.inria.fr/cgi-bin/<u></u>viewvc.cgi/ocaml/branches/<u></u>extensi=
on_points/experimental/<u></u>frisch/eval.ml?&amp;view=3Dmarkup</a><br>


<br>
and here is an example of what you can write with it:<br>
<br>
<a href=3D"http://caml.inria.fr/cgi-bin/viewvc.cgi/ocaml/branches/extension=
_points/experimental/frisch/test_eval.ml?&amp;view=3Dmarkup" target=3D"_bla=
nk">http://caml.inria.fr/cgi-bin/<u></u>viewvc.cgi/ocaml/branches/<u></u>ex=
tension_points/experimental/<u></u>frisch/test_eval.ml?&amp;view=3D<u></u>m=
arkup</a><br>


<br>
(To play with it, you need to checkout the extension_points branch and afte=
r compiling it: cd experimental/frisch &amp;&amp; make eval)<span class=3D"=
HOEnZb"><font color=3D"#888888"><br>
<br>
-- Alain</font></span><div class=3D"HOEnZb"><div class=3D"h5"><br>
<br>
-- <br>
Caml-list mailing list. =A0Subscription management and archives:<br>
<a href=3D"https://sympa.inria.fr/sympa/arc/caml-list" target=3D"_blank">ht=
tps://sympa.inria.fr/sympa/<u></u>arc/caml-list</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/<u></u>ocaml_beginners<=
/a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-<u></u>bugs</a><br>
</div></div></blockquote></div><br></div>

--089e010d83887fb1b804da2add68--
