Return-Path: <murthy.chet@gmail.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id C7DFB7EE51
	for <caml-list@sympa.inria.fr>; Thu, 11 Apr 2013 09:18:04 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  murthy.chet@gmail.com) identity=pra; client-ip=209.85.160.49;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="murthy.chet@gmail.com";
  x-sender="murthy.chet@gmail.com";
  x-conformance=sidf_compatible
Received-SPF: Pass (mail2-smtp-roc.national.inria.fr: domain of
  murthy.chet@gmail.com designates 209.85.160.49 as permitted
  sender) identity=mailfrom; client-ip=209.85.160.49;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="murthy.chet@gmail.com";
  x-sender="murthy.chet@gmail.com";
  x-conformance=sidf_compatible; x-record-type="v=spf1"
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@mail-pb0-f49.google.com) identity=helo;
  client-ip=209.85.160.49;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="murthy.chet@gmail.com";
  x-sender="postmaster@mail-pb0-f49.google.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AgQGAOZiZlHRVaAxjWdsb2JhbABQhiOCdrtugQEWDgEBAQEHCwsJEgYkgh8BAQQBOgYBGx0BAwELBgUhFRAPARMRAQUBHIgaAQMJBqA+jC+Ce4R+ChknDVmIfgEFDI8KBxaDKwOJAp0qP4RO
X-IPAS-Result: AgQGAOZiZlHRVaAxjWdsb2JhbABQhiOCdrtugQEWDgEBAQEHCwsJEgYkgh8BAQQBOgYBGx0BAwELBgUhFRAPARMRAQUBHIgaAQMJBqA+jC+Ce4R+ChknDVmIfgEFDI8KBxaDKwOJAp0qP4RO
X-IronPort-AV: E=Sophos;i="4.87,454,1363129200"; 
   d="scan'208";a="12763937"
Received: from mail-pb0-f49.google.com ([209.85.160.49])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/RC4-SHA; 11 Apr 2013 09:18:03 +0200
Received: by mail-pb0-f49.google.com with SMTP id um15so700971pbc.8
        for <caml-list@inria.fr>; Thu, 11 Apr 2013 00:18:02 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20120113;
        h=x-received:from:to:cc:subject:date:message-id:user-agent
         :in-reply-to:references:mime-version:content-transfer-encoding
         :content-type;
        bh=rbEoozOA+D3Omd0bmQZm3HcLC3QNn9IVs8jMXte9x3o=;
        b=Q+yAxFQYHiZ4spxOlrWxlZ7ciDozNTDqZXGz+Aa0h+QoQtl5zLV6Bxu0eXDWKnnBN+
         8QixPYXFIXdE6NK9fFbIV+NYflJttkyGvylz21XH69G3kyX26VJbFyHlqBmHDC2OVE3H
         AgVqjUICCJ6AoJ09+I4obZQk/y+Ae78RGCGj/5urTkn+UGYVgkI+/dcF59VumRD8Zszg
         js3b4ZxqC8MLIvyE2U802qlcMo6/Qin4tswY0GHZl5IwBFTmnA5sPrGp3YeamRu0RYV6
         0GGke7EArwTSO6g9Ve+x2oQXOboU5yRa1we7w4kxFMjmeWAsw39i/G29REfaef+7yBdU
         ZFCQ==
X-Received: by 10.68.237.9 with SMTP id uy9mr7270579pbc.90.1365664682434;
        Thu, 11 Apr 2013 00:18:02 -0700 (PDT)
Received: from groupon.localnet (adsl-76-254-28-19.dsl.pltn13.sbcglobal.net. [76.254.28.19])
        by mx.google.com with ESMTPS id xl10sm3795368pac.15.2013.04.11.00.18.00
        (version=TLSv1.1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Thu, 11 Apr 2013 00:18:01 -0700 (PDT)
From: Chet Murthy <murthy.chet@gmail.com>
To: caml-list@inria.fr
Cc: Francois Berenger <berenger@riken.jp>
Date: Thu, 11 Apr 2013 00:17:51 -0700
Message-ID: <7081577.fIKGGDAHpX@groupon>
User-Agent: KMail/4.8.5 (Linux/3.2.0-38-generic-pae; KDE/4.8.5; i686; ; )
In-Reply-To: <51666227.2040401@riken.jp>
References: <4989654.hHte10Um7f@groupon> <1725573.oORHJHkDHi@groupon> <51666227.2040401@riken.jp>
MIME-Version: 1.0
Content-Transfer-Encoding: 7Bit
Content-Type: text/plain; charset="us-ascii"
Subject: Re: [Caml-list] try...finally , threads, stack-tracebacks .... in
 ocaml


> Isn't there a way to "trace" locking and unlocking of locks?
> 
> So that you can do a post-mortem analysis of what went wrong.

Sure.  But you'd need more locks to manage that, yes?  And
furthermore, the problem (in the case I was debugging, and many times
in my times debugging java apps) is that somebody -didn't- put locking
in plcae (e.g., java.util.NumberFormat isn't thread-safe, and yet
people will create static instances and use 'em from multiple threads,
yielding "interesting" results).

But really that's immaterial.  You can't use tracing to find
timing-related issues, b/c the trace changes the timing.

> What is the ZAM?

Sorry, the original name for the Ocaml VM was the Zinc Abstract
Machine (from Xavier's original paper).

--chet--

