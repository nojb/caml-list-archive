Return-Path: <owre@csl.sri.com>
X-Original-To: caml-list@sympa.inria.fr
Delivered-To: caml-list@sympa.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 9C60D7EE51
	for <caml-list@sympa.inria.fr>; Tue, 16 Apr 2013 09:39:31 +0200 (CEST)
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  owre@csl.sri.com) identity=pra; client-ip=128.18.84.133;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="owre@csl.sri.com";
  x-sender="owre@csl.sri.com"; x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  owre@csl.sri.com) identity=mailfrom; client-ip=128.18.84.133;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="owre@csl.sri.com";
  x-sender="owre@csl.sri.com"; x-conformance=sidf_compatible
Received-SPF: None (mail2-smtp-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@brightmail-internal4.sri.com) identity=helo;
  client-ip=128.18.84.133;
  receiver=mail2-smtp-roc.national.inria.fr;
  envelope-from="owre@csl.sri.com";
  x-sender="postmaster@brightmail-internal4.sri.com";
  x-conformance=sidf_compatible
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AsUCAEL/bFGAElSFnGdsb2JhbABQgzyvGQGRa4EHFg4BAQEBAQgLCQkUJwGCFwgBI1M1AwECCjRAFAEMhXaCHgybA5ESkDcVjTUWBoEmGIM7A4kFijOPRYZugVaBSw
X-IPAS-Result: AsUCAEL/bFGAElSFnGdsb2JhbABQgzyvGQGRa4EHFg4BAQEBAQgLCQkUJwGCFwgBI1M1AwECCjRAFAEMhXaCHgybA5ESkDcVjTUWBoEmGIM7A4kFijOPRYZugVaBSw
X-IronPort-AV: E=Sophos;i="4.87,484,1363129200"; 
   d="scan'208";a="13445985"
Received: from brightmail-internal4.sri.com ([128.18.84.133])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 16 Apr 2013 09:39:30 +0200
X-AuditID: 80125485-b7fe46d000006efa-74-516d002f6144
Received: from mx0.csl.sri.com (mx0.csl.sri.com [130.107.1.30])
	(using TLS with cipher AES256-SHA (AES256-SHA/256 bits))
	(Client did not present a certificate)
	by brightmail-internal4.sri.com (SRI Internal SMTP Gateway) with SMTP id 9B.3D.28410.0300D615; Tue, 16 Apr 2013 00:39:28 -0700 (PDT)
To: undisclosed-recipients:;
Received: from ubi (ubi.csl.sri.com [130.107.15.8])
	by mx0.csl.sri.com (8.14.3/8.14.2) with ESMTP id r3G7dLhp035750
	(version=TLSv1/SSLv3 cipher=AES256-SHA bits=256 verify=NO);
	Tue, 16 Apr 2013 00:39:21 -0700 (PDT)
	(envelope-from owre@csl.sri.com)
Received: from owre (helo=ubi)
	by ubi with local-esmtp (Exim 4.72)
	(envelope-from <owre@ubi>)
	id 1US0U4-0005B7-UQ; Tue, 16 Apr 2013 00:39:20 -0700
Date: Tue, 16 Apr 2013 00:39:20 -0700
Message-ID: <19908.1366097960@ubi>
From: Sam Owre <owre@csl.sri.com>
X-Brightmail-Tracker: H4sIAAAAAAAAA+NgFprMIsWRmVeSWpSXmKPExsXSlM0op2vAkBto0LpX2+LojpWMFnPWnGC1
	uHE+z6Jh60FGi087NrBYfNi0j9Xi14VzrBbPZ65gtlj95QaTRf/NJ0Blfx8yW/Sf+sxu8eri
	bBaLiYsbGS26D3lYfH07jd3iy3E3ixVPfzFbfF5+ldWi+7esxea3K9gtvi6bz2qx684ydovd
	f04Czfn4isni0GQWi4tv9rA5SHv86LrC4tFxosRja+txFo+bE+w8Fhzx8TjVsIDNY8rdJmaP
	H6/Xs3qsmfCd0ePvzgiPf5MXsXgcO9bK7NE1Wdhj0otDLB4zf+xg9Nh1bD97gGQUl01Kak5m
	WWqRvl0CV8a2I4fZCyZZV9x42sPWwNhp1MXIwSEhYCJxYrdNFyMnkCkmceHeerYuRi4OIYFV
	TBJrHpxlB0mICMhIzJ39mBUi8Y9RYuH8PSwQzgxGiRPXXzCBVLEIqEq0N/5lBZnKK6Ak8Wt5
	IUiYTUBRovnWQmYQW1ggWqJ9124mkBImARaJ1j2WExi5FzAyrGKUSSrKTM8oyU3MzNGFRZCJ
	XnFRpl5yfu4mRmBUNQiFtO5gXLHH8BCjAAejEg9voHxOoBBrYllxZe4hRgkOZiURXvXlQCHe
	lMTKqtSi/Pii0pzU4kOM0hwsSuK838z5/YUE0hNLUrNTUwtSi2CyTBycUg2Mh/RPsKRm/qsL
	LNrSsOev/oO+RDmT7sLvKieEhOZGT2FbmnM2+b6ExhOtIJdjD2Q2Oy1x2W8WqOxl0q2+7P0+
	TbFXmi41NqrcKj3dt/Y8cc3a8Ze/k3e1x9ecmWkzZVW7Ky8+qPhcKrZod3reVFdFi3WzZ/Cv
	7c+WYg87Gx+2WDFv5wEdGTklluKMREMt5qLiRAA1wJf2pgIAAA==
Subject: [Caml-list] Third Summer School on Formal Techniques, May 20-24,
 2013 (call for participation)

------- Blind-Carbon-Copy

To: Undisclosed Recipients <owre@csl.sri.com>
Subject: Third Summer School on Formal Techniques, May 20-24, 2013 (call for participation)
X-Mailer: MH-E 8.2; nmh 1.3; GNU Emacs 23.1.1
Date: Tue, 16 Apr 2013 00:39:20 -0700
Message-ID: <19908.1366097960@ubi>
From: Sam Owre <owre@ubi>


Third Summer School on Formal Techniques
May 20 - May 24, 2013
Menlo College, Atherton, CA
http://fm.csl.sri.com/SSFT13

Follows VSTTE May 17-19 in the same location:
https://sites.google.com/site/vstte2013/

Formal verification techniques such as model checking, satisfiability, and
static analysis have matured rapidly in recent years. This school, the
third in the series, will focus on the principles and practice of formal
verification, with a strong emphasis on the hands-on use and development
of this technology. It primarily targets graduate students and young
researchers who are interested in using verification technology in their
own research in computing as well as engineering, biology, and
mathematics. Students at the school will have the opportunity to
experiment with the tools and techniques presented in the lectures.

The first Summer Formal school (SSFT11; http://fm.csl.sri.com/SSFT11) was
held in May 2011 and the second (SSFT12; http://fm.csl.sri.com/SSFT12) was
held in May 2012.

We have NSF support for the travel and accommodation for students from US
universities, but welcome applications from graduate students at non-US
universities as well. Non-US students will have to cover their travel and
lodging expenses (around $500). The deadline for applications is April
30. Non-US students requiring US visas are requested to apply early (by
April 15).  Interested students can submit their application at
         http://fm.csl.sri.com/SSFT13

The lectures at the school include:
==================================================================
Title: Decision Methods for Arithmetic
Lecturer: Leonardo de Moura, Microsoft Research

Abstract: Decision methods for arithmetic are extensively used in the
formal verification and analysis of software and cyber-physical
systems, computer algebra, and formalized mathematics. In these talks,
we will cover several decision methods for fragments of arithmetic
such as the elementary theories of algebra and geometry over the Real
and Complex numbers. We will also describe the general techniques used
in the design of these procedures: saturation, model-based methods,
abstract/refine loop, infinitesimals, etc.  We assume only a basic
grounding in first-order logic.

==================================================================
Title: Advanced Theorem Proving Techniques in PVS with Applications
Lecturer: Cesar Munoz, NASA Langley Research Center Hampton, VA
23681-2199, USA

Abstract: The Prototype Verification System (PVS)
[http://pvs.csl.sri.com] is an interactive environment for the
specification and verification of systems. PVS provides a strongly
typed specification language, which is based on Higher-Order
Logic. The type system of PVS supports: sub-typing, dependent-types,
abstract data types, parametric types, records, unions, and
tuples. The PVS theorem prover includes decision procedures for a
variety of theories such as linear arithmetic, propositional logic,
and temporal logic.  This seminar will provide a gentle introduction
to advanced PVS features, including types for specifications, implicit
induction, iterations, rapid prototyping, strategy writing, and
computational reflection.

==================================================================
Title: Static and Dynamic Verification of Concurrent Programs
Lecturer: Aarti Gupta, NEC Labs

Abstract: The need to harness the computing power of modern multi-core
platforms has driven a resurgence of interest in concurrent
programs. However, it is very challenging to develop correct
concurrent programs, and in practice programs often exhibit bugs
related to subtle synchronization effects. These lectures will
describe various static and dynamic techniques underlying automatic
verification and debugging of concurrent programs. The emphasis will
be on main ideas to reason about synchronizations and interleavings
between interacting threads or processes.

On the static side, we first review some theoretical results on model
checking based on interacting pushdown system (PDS)
models. Decidability results here limit the patterns of
synchronization allowed. Next, we consider the practice of model
checking concurrent programs, where the main challenge is in managing
the explosion in interleavings. We consider both explicit and symbolic
state space exploration, where various techniques are inspired by
successful verification of finite state systems on one hand, and
sequential programs on the other.

Due to scalability limitations of static verification, there has been
increased interest in dynamic techniques for systematically exploring
(parts of) concurrent programs. We discuss preemptive context bounding
techniques that control the scheduler to dynamically explore other
interleavings. We also consider predictive analysis techniques, where
a trace-based model derived from dynamic executions is used to predict
concurrency bugs.

==================================================================
Title: Program verification and synthesis as Horn-like constraint solving
Lecturer: Andrey Rybalchenko, TU Munich

Abstract: First, we review how proving reachability and termination
properties of transition systems, procedural programs, multi-threaded
programs, and higher- order functional programs can be reduced to
constraint solving for Horn-like constraints.  This step will cover
properties over program variables of scalar and array data types.
Second, we show how universal and existential temporal properties can
be proved using contraint-based setting equipped with existential
quantification.  Third, we present a reduction from reactive program
synthesis to existentially quantified Horn-like constraints. Finally,
we discuss adequate solving algorithms and tools.


The material would cover/export syntax and semantics of Horn clauses
over theory literals, basics of temporal proof rules for reasoning
about programs, basics of CTL and synthesis together with deductive
proof rules, bottom-up inference/ resolution of Horn clauses,
Skolemization, abstraction, interpolation.

==================================================================
Title: Verified Programming with VCC
Speaker: Ernie Cohen

Abstract: In the last few years it has become practical to write
real-world code and prove that it meets its specifications. This
course provides an introduction to the joys of verified programming
using VCC, a deductive verifier for concurrent C code.

==================================================================
Title: Speaking Logic
Speaker: Natarajan Shankar, SRI International

Abstract: Formal logic has become the lingua franca of computing. It
is used for specifying digital systems, annotating programs with
assertions, defining the semantics of programming languages, and
proving or refuting claims about software or hardware systems.
Familiarity with the language and methods of logic is a foundation for
research into formal aspects of computing.  This course covers the
basics of logic focusing on the use of logic as a medium for
formalization and proof.

------- End of Blind-Carbon-Copy
