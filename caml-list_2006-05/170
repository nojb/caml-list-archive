Return-Path: <bhurt@spnz.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 35901BB84
	for <caml-list@yquem.inria.fr>; Sat, 20 May 2006 03:05:44 +0200 (CEST)
Received: from luna.vie.lunde.net (at.lunde.net [62.116.13.60])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k4K15hRH006832
	for <caml-list@yquem.inria.fr>; Sat, 20 May 2006 03:05:43 +0200
Received: from h-68-166-100-33.nycmny83.covad.net ([68.166.100.33] helo=localhost.localdomain)
	by luna.vie.lunde.net with asmtp (Exim 3.36 #1 (Debian))
	id 1FhFuX-00033x-00; Sat, 20 May 2006 03:05:41 +0200
Received: from localhost (localhost.localdomain [127.0.0.1])
	by localhost.localdomain (Postfix) with ESMTP id 67B901013E;
	Fri, 19 May 2006 21:06:27 -0400 (EDT)
Date: Fri, 19 May 2006 21:06:27 -0400 (EDT)
From: Brian Hurt <bhurt@spnz.org>
X-X-Sender: bhurt@localhost.localdomain
To: Jon Harrop <jon@ffconsultancy.com>
Cc: caml-list@yquem.inria.fr
Subject: Re: [Caml-list] Array 4 MB size limit
In-Reply-To: <200605192226.34917.jon@ffconsultancy.com>
Message-ID: <Pine.LNX.4.63.0605192103250.10710@localhost.localdomain>
References: <20060515141230.ajyupn2z28k0484s@horde.akalin.cx>
 <446D5E4A.8060005@akalin.cx> <20060519162844.GA32550@osiris.uid0.sk>
 <200605192226.34917.jon@ffconsultancy.com>
MIME-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII; format=flowed
X-Miltered: at nez-perce with ID 446E6B67.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml's:01 arrays:01 arrays:01 ocaml:01 wrote:01 caml-list:01 char:01 extensible:01 strings:01 strings:01 acknowledged:03 manipulate:03 expressions:04 brian:04 brian:04 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.1 required=5.0 tests=FORGED_RCVD_HELO 
	autolearn=disabled version=3.0.3



On Fri, 19 May 2006, Jon Harrop wrote:

> Agreed. Should OCaml's successor have extensible arrays with 64-bit lengths
> and strings as char arrays?

Why not just run Ocaml as a 64-bit app on a 64-bit OS?

We I designing a language today, I'd have 63-bit array lengths- of course, 
I'd do it by not bothering to support 32-bit systems...

As for strings, I'd be inclined to make them immutable- the correct way to 
manipulate strings is with regular expressions.  But I'm widely 
acknowledged to be an extremist.

Brian

