Return-Path: <weis@pauillac.inria.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id 995CBBB83
	for <caml-list@yquem.inria.fr>; Wed, 24 May 2006 16:14:48 +0200 (CEST)
Received: from pauillac.inria.fr (pauillac.inria.fr [128.93.11.35])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k4OEEmYU016197
	for <caml-list@yquem.inria.fr>; Wed, 24 May 2006 16:14:48 +0200
Received: from concorde.inria.fr (concorde.inria.fr [192.93.2.39]) by pauillac.inria.fr (8.7.6/8.7.3) with ESMTP id QAA25104 for <caml-list@pauillac.inria.fr>; Wed, 24 May 2006 16:14:47 +0200 (MET DST)
Received: from furbychan.cocan.org (furbychan.cocan.org [80.68.91.176])
	by concorde.inria.fr (8.13.0/8.13.0) with ESMTP id k4OEEk2B022191
	(version=TLSv1/SSLv3 cipher=EDH-RSA-DES-CBC3-SHA bits=168 verify=NO)
	for <caml-list@inria.fr>; Wed, 24 May 2006 16:14:47 +0200
Received: from rich by furbychan.cocan.org with local (Exim 3.35 #1 (Debian))
	id 1Fiu8M-00039Z-00
	for <caml-list@inria.fr>; Wed, 24 May 2006 15:14:46 +0100
Date: Wed, 24 May 2006 15:14:46 +0100
To: caml-list@inria.fr
Subject: OCaml & large address spaces
Message-ID: <20060524141446.GA12102@furbychan.cocan.org>
Mime-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
User-Agent: Mutt/1.5.9i
From: Richard Jones <rich@annexia.org>
X-Miltered: at nez-perce with ID 44746A58.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Miltered: at concorde with ID 44746A56.000 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; ocaml:01 ocaml:01 notepad:01 structures:01 strings:01 data:02 data:02 spaces:02 spaces:02 marketing:93 mean:07 memory:08 i'm:08 business:90 compute:09 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3


I'm about to spec a compute server and the thought crossed my mind ...

Are there any limits to OCaml process address spaces on AMD64?  I mean
to say, if I want an OCaml program to use 16-32 GB of data structures
in memory, it'll work, right?  The data is either going to be an array
or a list of records containing numbers and strings.

Rich.

-- 
Richard Jones, CTO Merjis Ltd.
Merjis - web marketing and technology - http://merjis.com
Team Notepad - intranets and extranets for business - http://team-notepad.com

