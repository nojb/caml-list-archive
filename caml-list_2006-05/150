Return-Path: <skaller@users.sourceforge.net>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from nez-perce.inria.fr (nez-perce.inria.fr [192.93.2.78])
	by yquem.inria.fr (Postfix) with ESMTP id A4D8EBB84
	for <caml-list@yquem.inria.fr>; Fri, 19 May 2006 03:47:55 +0200 (CEST)
Received: from ash25e.internode.on.net (ash25e.internode.on.net [203.16.214.182])
	by nez-perce.inria.fr (8.13.0/8.13.0) with ESMTP id k4J1lrI1006868
	for <caml-list@yquem.inria.fr>; Fri, 19 May 2006 03:47:54 +0200
Received: from rosella (ppp28-237.lns1.syd6.internode.on.net [59.167.28.237])
	by ash25e.internode.on.net (8.13.6/8.13.5) with ESMTP id k4J1lTx1081171;
	Fri, 19 May 2006 11:17:30 +0930 (CST)
	(envelope-from skaller@users.sourceforge.net)
Subject: Re: [Caml-list] compiler bug?
From: skaller <skaller@users.sourceforge.net>
To: Jacques Carette <carette@mcmaster.ca>
Cc: caml-list@yquem.inria.fr
In-Reply-To: <446CC2C1.5040801@mcmaster.ca>
References: <20060517231426.30289.qmail@web32203.mail.mud.yahoo.com>
	 <446CABCA.8000906@inria.fr> <446CB021.6000009@mcmaster.ca>
	 <1147976357.25630.27.camel@rosella.wigram>  <446CC2C1.5040801@mcmaster.ca>
Content-Type: text/plain
Date: Fri, 19 May 2006 11:47:29 +1000
Message-Id: <1148003249.25630.29.camel@rosella.wigram>
Mime-Version: 1.0
X-Mailer: Evolution 2.4.1 
Content-Transfer-Encoding: 7bit
X-Miltered: at nez-perce with ID 446D23C9.001 by Joe's j-chkmail (http://j-chkmail.ensmp.fr)!
X-Spam: no; 0.00; compiler:01 bug:01 haskell:01 untyped:01 2006:98 wrote:01 wrote:01 sourceforge:01 caml-list:01 syntactic:01 ghc:01 jacques:01 typed:03 thu:05 precise:07 
X-Spam-Checker-Version: SpamAssassin 3.0.3 (2005-04-27) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.0.3

On Thu, 2006-05-18 at 14:53 -0400, Jacques Carette wrote:
> skaller wrote:
> 
> >What about high level optimisations?
> >
> >Felix supports this:
> >
> >	reduce revrev[t] (x:list[t]): rev (rev x) => x;

> Haskell (GHC to be precise) allows that too. But is syntactic 
> term-rewriting, in other words it is *untyped*.

It's well typed. x:list[t] means x is of type list[t].

-- 
John Skaller <skaller at users dot sf dot net>
Felix, successor to C++: http://felix.sf.net

