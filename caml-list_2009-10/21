Return-Path: <yaoconglun@gmail.com>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: **
X-Spam-Status: No, score=2.6 required=5.0 tests=AWL,DNS_FROM_RFC_POST,
	HTML_MESSAGE,SPF_NEUTRAL autolearn=disabled version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 56242BBAF
	for <caml-list@yquem.inria.fr>; Sun,  4 Oct 2009 21:53:52 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmoCADeayErRVdrRkGdsb2JhbACCJS+OZoh9PwEBAQEJCQwHEwOkMIE7jVYBAwMFhCUEgVI
X-IronPort-AV: E=Sophos;i="4.44,503,1249250400"; 
   d="scan'208";a="47903519"
Received: from mail-bw0-f209.google.com ([209.85.218.209])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 04 Oct 2009 21:53:52 +0200
Received: by bwz5 with SMTP id 5so2054075bwz.27
        for <caml-list@yquem.inria.fr>; Sun, 04 Oct 2009 12:53:51 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:in-reply-to:references
         :date:message-id:subject:from:to:cc:content-type;
        bh=a/hUAMvboUc41WLSIP9pciHwgeDwiHiVLGjt+BCLbh4=;
        b=P6AnwtuDSmfy+Tzyr0njivoIb1bkC1bnsZOu2PC/WKrkwxobY7SX8ihpWHNPczM2z7
         FShNorlPPZAHh68QI8/Mdnd+vlKa2/tbL8ql8fnhQ3Yb3Voff0x3q+Ni9huZwr4OdVgb
         X8Vu0M/USgSgscrEFPLq6Omb12WJQZGTy+6t8=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        b=XKhDkHwUqYCt7ZMZVh5tTt0HZVjc2bd9e+8+sZZ28BbLpe28Olpx0Nf/EmJDa5RFID
         Y5JkFwXZGpIbUMxt8fayNkeb/SHo7hLXYn6OCQq1D9ZWApsc2pzy9q/1z5W/kNTLfvqw
         lS5WSkhEtiOCxvDPRtpLugwHURDfASOk1ohyA=
MIME-Version: 1.0
Received: by 10.204.153.220 with SMTP id l28mr3206553bkw.86.1254686030965; 
	Sun, 04 Oct 2009 12:53:50 -0700 (PDT)
In-Reply-To: <20091004193740.GB28561@annexia.org>
References: <f7b50d2a0910040722g1c2e3ec0vda1b438a8db97a40@mail.gmail.com>
	 <20091004190509.GA31372@annexia.org>
	 <f7b50d2a0910041232g17ef1cf4v870996f1c66ebf33@mail.gmail.com>
	 <20091004193740.GB28561@annexia.org>
Date: Sun, 4 Oct 2009 20:53:50 +0100
Message-ID: <f7b50d2a0910041253k4b33e67cvf8190197c2cbc50e@mail.gmail.com>
Subject: Re: [Caml-list] Dynlink and ocamlfind for camlp4 3.11?
From: Conglun Yao <yaoconglun@gmail.com>
To: Richard Jones <rich@annexia.org>
Cc: caml-list@yquem.inria.fr
Content-Type: multipart/mixed; boundary=0015175cdc5e2e2c240475215b14
X-Spam: no; 0.00; dynlink:01 ocamlfind:01 camlp:01 dynlink:01 ocamlfind:01 ocamlc:01 -package:01 ocamlc:01 -package:01 camlp:01 lib:01 ocaml:01 lib:01 ocaml:01 bug:01 
X-Attachments: type="application/octet-stream" name="META" name="META" 
Status: O
Content-Length: 9294
Lines: 163

--0015175cdc5e2e2c240475215b14
Content-Type: multipart/alternative; boundary=0015175cdc5e2e2c0c0475215b12

--0015175cdc5e2e2c0c0475215b12
Content-Type: text/plain; charset=ISO-8859-1

>
>
> In that case, try listing dynlink explicitly, like:
>
>  ocamlfind ocamlc dynlink.cma -package json-static [etc]
>

$ ocamlfind ocamlc dynlink.cma -package json-static -syntax camlp4o -c
test.ml

$ ocamlfind ocamlc -I /home/conglun/godi/lib/ocaml/pkg-lib/camlp4
dynlink.cma -package json-static -syntax camlp4o -c t.ml


Error: Error while linking
/home/conglun/godi/lib/ocaml/std-lib/camlp4/camlp4lib.cma(Camlp4):
Reference to undefined global `Dynlink'


>
> Anyhow, it sounds like a bug in the META files that are supplied with
> your cygwin OCaml distribution.
>
>
I think you are right, the problem happens on the camlp4o or cygwin, which
can't load dynlink.  But I can't find problem in the camlp4's META  (in the
attachment)

Thanks,

Conglun

--0015175cdc5e2e2c0c0475215b12
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<br><div class=3D"gmail_quote"><blockquote class=3D"gmail_quote" style=3D"b=
order-left: 1px solid rgb(204, 204, 204); margin: 0pt 0pt 0pt 0.8ex; paddin=
g-left: 1ex;"><div class=3D"im"><br>
<br>
</div>In that case, try listing dynlink explicitly, like:<br>
<br>
 =A0ocamlfind ocamlc dynlink.cma -package json-static [etc]<br></blockquote=
><div><br>$ ocamlfind ocamlc dynlink.cma -package json-static -syntax camlp=
4o -c <a href=3D"http://test.ml">test.ml</a><br>
<br>
$ ocamlfind ocamlc -I /home/conglun/godi/lib/ocaml/pkg-lib/camlp4 dynlink.c=
ma -package json-static -syntax camlp4o -c <a href=3D"http://t.ml">t.ml</a>=
<br><br><br>Error: Error while linking /home/conglun/godi/lib/ocaml/std-lib=
/camlp4/camlp4lib.cma(Camlp4):<br>
Reference to undefined global `Dynlink&#39;<br>=A0<br></div><blockquote cla=
ss=3D"gmail_quote" style=3D"border-left: 1px solid rgb(204, 204, 204); marg=
in: 0pt 0pt 0pt 0.8ex; padding-left: 1ex;">
<br>
Anyhow, it sounds like a bug in the META files that are supplied with<br>
your cygwin OCaml distribution.<br>
<div><div></div><div class=3D"h5"><br>
</div></div></blockquote></div><br>I think you are right, the problem happe=
ns on the camlp4o or cygwin, which can&#39;t load dynlink.=A0 But I can&#39=
;t find problem in the camlp4&#39;s META=A0 (in the attachment)<br><br>Than=
ks,<br>
<br>Conglun<br><br><br><br><br><br><br>

--0015175cdc5e2e2c0c0475215b12--
--0015175cdc5e2e2c240475215b14
Content-Type: application/octet-stream; name=META
Content-Disposition: attachment; filename=META
Content-Transfer-Encoding: base64
X-Attachment-Id: f_g0e7ia080

IyBTcGVjaWZpY2F0aW9ucyBmb3IgdGhlICJjYW1scDQiIHByZXByb2Nlc3NvcjoKcmVxdWlyZXMg
PSAiIgp2ZXJzaW9uID0gIltkaXN0cmlidXRlZCB3aXRoIE9jYW1sXSIKZGVzY3JpcHRpb24gPSAi
QmFzZSBmb3IgQ2FtbHA0IHN5bnRheCBleHRlbnNpb25zIgpkaXJlY3RvcnkgPSAiL2hvbWUvY29u
Z2x1bi9nb2RpL2xpYi9vY2FtbC9zdGQtbGliL2NhbWxwNCIKCiMgRm9yIHRoZSB0b3Bsb29wOgpy
ZXF1aXJlcyhieXRlLHRvcGxvb3ApID0gImR5bmxpbmsiCmFyY2hpdmUoYnl0ZSx0b3Bsb29wLGNh
bWxwNG8pID0gImNhbWxwNG8uY21hIgphcmNoaXZlKGJ5dGUsdG9wbG9vcCxjYW1scDRyKSA9ICJj
YW1scDRyLmNtYSIKCiMgRm9yIHRoZSBwcmVwcm9jZXNzb3IgaXRzZWxmOgphcmNoaXZlKHN5bnRh
eCxwcmVwcm9jZXNzb3IsY2FtbHA0bykgPSAiLXBhcnNlciBvIC1wYXJzZXIgb3AgLXByaW50ZXIg
cCIKYXJjaGl2ZShzeW50YXgscHJlcHJvY2Vzc29yLGNhbWxwNHIpID0gIi1wYXJzZXIgciAtcGFy
c2VyIHJwIC1wcmludGVyIHAiCnByZXByb2Nlc3NvciA9ICJzYWZlX2NhbWxwNCIKCnBhY2thZ2Ug
ImxpYiIgKAogIHJlcXVpcmVzID0gImNhbWxwNCBkeW5saW5rIgogIHZlcnNpb24gPSAiW2Rpc3Ry
aWJ1dGVkIHdpdGggT2NhbWxdIgogIGRlc2NyaXB0aW9uID0gIkNhbWxwNCBsaWJyYXJ5IgogIGFy
Y2hpdmUoYnl0ZSkgPSAiY2FtbHA0bGliLmNtYSIKICBhcmNoaXZlKGJ5dGUsdG9wbG9vcCkgPSAi
IiAgIyBhbHJlYWR5IGNvbnRhaW5lZCBpbiBjYW1scDQqLmNtYQogIGFyY2hpdmUobmF0aXZlKSA9
ICJjYW1scDRsaWIuY214YSIKKQoKcGFja2FnZSAiZ3JhbWxpYiIgKAogIHJlcXVpcmVzID0gImNh
bWxwNC5saWIiCiAgdmVyc2lvbiA9ICJbZGlzdHJpYnV0ZWQgd2l0aCBPY2FtbF0iCiAgZGVzY3Jp
cHRpb24gPSAiQ29tcGF0aWJpbHR5IG5hbWUgZm9yIGNhbWxwNC5saWIiCikKCnBhY2thZ2UgInF1
b3RhdGlvbnMiICgKICB2ZXJzaW9uID0gIltkaXN0cmlidXRlZCB3aXRoIE9jYW1sXSIKICBkZXNj
cmlwdGlvbiA9ICJTeW50YXggZXh0ZW5zaW9uOiBRdW90YXRpb25zIHRvIGNyZWF0ZSBBU1Qgbm9k
ZXMiCiAgcmVxdWlyZXMgPSAiY2FtbHA0LnF1b3RhdGlvbnMuciIgICMgYmFja3dhcmQgY29tcGF0
CiAgYXJjaGl2ZShzeW50YXgscHJlcHJvY2Vzc29yKSA9ICItaWdub3JlIGZvbyIKICBwYWNrYWdl
ICJvIiAoCiAgICByZXF1aXJlcyA9ICJjYW1scDQiCiAgICB2ZXJzaW9uID0gIltkaXN0cmlidXRl
ZCB3aXRoIE9jYW1sXSIKICAgIGRlc2NyaXB0aW9uID0gIlN5bnRheCBleHRlbnNpb246IFF1b3Rh
dGlvbnMgdG8gY3JlYXRlIEFTVCBub2RlcyAob3JpZ2luYWwgc3ludGF4KSIKICAgIGFyY2hpdmUo
c3ludGF4LHByZXByb2Nlc3NvcikgPSAiLXBhcnNlciBDYW1scDRRdW90YXRpb25Db21tb24gLXBh
cnNlciBDYW1scDRPQ2FtbE9yaWdpbmFsUXVvdGF0aW9uRXhwYW5kZXIiCiAgICBhcmNoaXZlKHN5
bnRheCx0b3Bsb29wKSA9ICJDYW1scDRQYXJzZXJzL0NhbWxwNFF1b3RhdGlvbkNvbW1vbi5jbW8g
Q2FtbHA0UGFyc2Vycy9DYW1scDRPQ2FtbE9yaWdpbmFsUXVvdGF0aW9uRXhwYW5kZXIuY21vIgog
ICkKICBwYWNrYWdlICJyIiAoCiAgICByZXF1aXJlcyA9ICJjYW1scDQiCiAgICB2ZXJzaW9uID0g
IltkaXN0cmlidXRlZCB3aXRoIE9jYW1sXSIKICAgIGRlc2NyaXB0aW9uID0gIlN5bnRheCBleHRl
bnNpb246IFF1b3RhdGlvbnMgdG8gY3JlYXRlIEFTVCBub2RlcyAocmV2aXNlZCBzeW50YXgpIgog
ICAgYXJjaGl2ZShzeW50YXgscHJlcHJvY2Vzc29yKSA9ICItcGFyc2VyIENhbWxwNFF1b3RhdGlv
bkNvbW1vbiAtcGFyc2VyIENhbWxwNE9DYW1sUmV2aXNlZFF1b3RhdGlvbkV4cGFuZGVyIgogICAg
YXJjaGl2ZShzeW50YXgsdG9wbG9vcCkgPSAiQ2FtbHA0UGFyc2Vycy9DYW1scDRRdW90YXRpb25D
b21tb24uY21vIENhbWxwNFBhcnNlcnMvQ2FtbHA0T0NhbWxSZXZpc2VkUXVvdGF0aW9uRXhwYW5k
ZXIuY21vIgogICkKKQoKcGFja2FnZSAiZXh0ZW5kIiAoCiAgcmVxdWlyZXMgPSAiY2FtbHA0Igog
IHZlcnNpb24gPSAiW2Rpc3RyaWJ1dGVkIHdpdGggT2NhbWxdIgogIGRlc2NyaXB0aW9uID0gIlN5
bnRheCBleHRlbnNpb246IEVYVEVORCB0aGUgY2FtbHA0IGdyYW1tYXIiCiAgYXJjaGl2ZShzeW50
YXgscHJlcHJvY2Vzc29yKSA9ICItcGFyc2VyIENhbWxwNEdyYW1tYXJQYXJzZXIiCiAgYXJjaGl2
ZShzeW50YXgsdG9wbG9vcCkgPSAiQ2FtbHA0UGFyc2Vycy9DYW1scDRHcmFtbWFyUGFyc2VyLmNt
byIKKQoKcGFja2FnZSAibGlzdGNvbXByZWhlbnNpb24iICgKICByZXF1aXJlcyA9ICJjYW1scDQi
CiAgdmVyc2lvbiA9ICJbZGlzdHJpYnV0ZWQgd2l0aCBPY2FtbF0iCiAgZGVzY3JpcHRpb24gPSAi
U3ludGF4IGV4dGVuc2lvbiBmb3IgbGlzdCBjb21wcmVoZW5zaW9ucyIKICBhcmNoaXZlKHN5bnRh
eCxwcmVwcm9jZXNzb3IpID0gIi1wYXJzZXIgQ2FtbHA0TGlzdENvbXByZWhlbnNpb24iCiAgYXJj
aGl2ZShzeW50YXgsdG9wbG9vcCkgPSAiQ2FtbHA0UGFyc2Vycy9DYW1scDRMaXN0Q29tcHJlaGVu
c2lvbi5jbW8iCikKCnBhY2thZ2UgIm1hY3JvIiAoCiAgcmVxdWlyZXMgPSAiY2FtbHA0IgogIHZl
cnNpb24gPSAiW2Rpc3RyaWJ1dGVkIHdpdGggT2NhbWxdIgogIGRlc2NyaXB0aW9uID0gIlN5bnRh
eCBleHRlbnNpb246IENvbmRpdGlvbmFsIGNvbXBpbGF0aW9uIgogIGFyY2hpdmUoc3ludGF4LHBy
ZXByb2Nlc3NvcikgPSAiLXBhcnNlciBDYW1scDRNYWNyb1BhcnNlciIKICBhcmNoaXZlKHN5bnRh
eCx0b3Bsb29wKSA9ICJDYW1scDRQYXJzZXJzL0NhbWxwNE1hY3JvUGFyc2VyLmNtbyIKKQoKcGFj
a2FnZSAibWFwZ2VuZXJhdG9yIiAoCiAgcmVxdWlyZXMgPSAiY2FtbHA0IgogIHZlcnNpb24gPSAi
W2Rpc3RyaWJ1dGVkIHdpdGggT2NhbWxdIgogIGRlc2NyaXB0aW9uID0gIlN5bnRheCBmaWx0ZXI6
IFRyYXZlcnNlIGRhdGEgc3RydWN0dXJlIChtYXAgc3R5bGUpIgogIGFyY2hpdmUoc3ludGF4LHBy
ZXByb2Nlc3NvcikgPSAiLWZpbHRlciBDYW1scDRNYXBHZW5lcmF0b3IiCiAgYXJjaGl2ZShzeW50
YXgsdG9wbG9vcCkgPSAiQ2FtbHA0RmlsdGVycy9DYW1scDRNYXBHZW5lcmF0b3IuY21vIgopCgpw
YWNrYWdlICJmb2xkZ2VuZXJhdG9yIiAoCiAgcmVxdWlyZXMgPSAiY2FtbHA0IgogIHZlcnNpb24g
PSAiW2Rpc3RyaWJ1dGVkIHdpdGggT2NhbWxdIgogIGRlc2NyaXB0aW9uID0gIlN5bnRheCBmaWx0
ZXI6IFRyYXZlcnNlIGRhdGEgc3RydWN0dXJlIChmb2xkIHN0eWxlKSIKICBhcmNoaXZlKHN5bnRh
eCxwcmVwcm9jZXNzb3IpID0gIi1maWx0ZXIgQ2FtbHA0Rm9sZEdlbmVyYXRvciIKICBhcmNoaXZl
KHN5bnRheCx0b3Bsb29wKSA9ICJDYW1scDRGaWx0ZXJzL0NhbWxwNEZvbGRHZW5lcmF0b3IuY21v
IgopCgpwYWNrYWdlICJtZXRhZ2VuZXJhdG9yIiAoCiAgcmVxdWlyZXMgPSAiY2FtbHA0IgogIHZl
cnNpb24gPSAiW2Rpc3RyaWJ1dGVkIHdpdGggT2NhbWxdIgogIGRlc2NyaXB0aW9uID0gIlN5bnRh
eCBmaWx0ZXI6IEdlbmVyYXRlIEFTVCBnZW5lcmF0b3IgZm9yIGRhdGEgc3RydWN0dXJlIgogIGFy
Y2hpdmUoc3ludGF4LHByZXByb2Nlc3NvcikgPSAiLWZpbHRlciBDYW1scDRNZXRhR2VuZXJhdG9y
IgogIGFyY2hpdmUoc3ludGF4LHRvcGxvb3ApID0gIkNhbWxwNEZpbHRlcnMvQ2FtbHA0TWV0YUdl
bmVyYXRvci5jbW8iCikKCnBhY2thZ2UgImxvY2F0aW9uc3RyaXBwZXIiICgKICByZXF1aXJlcyA9
ICJjYW1scDQiCiAgdmVyc2lvbiA9ICJbZGlzdHJpYnV0ZWQgd2l0aCBPY2FtbF0iCiAgZGVzY3Jp
cHRpb24gPSAiU3ludGF4IGZpbHRlcjogUmVtb3ZlIGxvY2F0aW9uIGluZm8gZnJvbSBBU1QiCiAg
YXJjaGl2ZShzeW50YXgscHJlcHJvY2Vzc29yKSA9ICItZmlsdGVyIENhbWxwNExvY2F0aW9uU3Ry
aXBwZXIiCiAgYXJjaGl2ZShzeW50YXgsdG9wbG9vcCkgPSAiQ2FtbHA0RmlsdGVycy9DYW1scDRM
b2NhdGlvblN0cmlwcGVyLmNtbyIKKQoKcGFja2FnZSAidHJhY2VyIiAoCiAgcmVxdWlyZXMgPSAi
Y2FtbHA0IgogIHZlcnNpb24gPSAiW2Rpc3RyaWJ1dGVkIHdpdGggT2NhbWxdIgogIGRlc2NyaXB0
aW9uID0gIlN5bnRheCBmaWx0ZXI6IFRyYWNlIGV4ZWN1dGlvbiIKICBhcmNoaXZlKHN5bnRheCxw
cmVwcm9jZXNzb3IpID0gIi1maWx0ZXIgQ2FtbHA0VHJhY2VyIgogIGFyY2hpdmUoc3ludGF4LHRv
cGxvb3ApID0gIkNhbWxwNEZpbHRlcnMvQ2FtbHA0VHJhY2VyLmNtbyIKKQoKcGFja2FnZSAiZXhj
ZXB0aW9udHJhY2VyIiAoCiAgcmVxdWlyZXMgPSAiY2FtbHA0IgogIHZlcnNpb24gPSAiW2Rpc3Ry
aWJ1dGVkIHdpdGggT2NhbWxdIgogIGRlc2NyaXB0aW9uID0gIlN5bnRheCBmaWx0ZXI6IFRyYWNl
IGV4Y2VwdGlvbiBleGVjdXRpb24iCiAgYXJjaGl2ZShzeW50YXgscHJlcHJvY2Vzc29yKSA9ICIt
ZmlsdGVyIENhbWxwNEV4Y2VwdGlvblRyYWNlciIKICBhcmNoaXZlKHN5bnRheCx0b3Bsb29wKSA9
ICJDYW1scDRGaWx0ZXJzL0NhbWxwNEV4Y2VwdGlvblRyYWNlci5jbW8iCikKCnBhY2thZ2UgInBy
b2ZpbGVyIiAoCiAgcmVxdWlyZXMgPSAiY2FtbHA0IgogIHZlcnNpb24gPSAiW2Rpc3RyaWJ1dGVk
IHdpdGggT2NhbWxdIgogIGRlc2NyaXB0aW9uID0gIlN5bnRheCBmaWx0ZXI6IENvdW50IGV2ZW50
cyBkdXJpbmcgZXhlY3V0aW9uIgogIGFyY2hpdmUoc3ludGF4LHByZXByb2Nlc3NvcikgPSAiLWZp
bHRlciBDYW1scDRQcm9maWxlciIKICBhcmNoaXZlKHN5bnRheCx0b3Bsb29wKSA9ICJDYW1scDRG
aWx0ZXJzL0NhbWxwNFByb2ZpbGVyLmNtbyIKICBhcmNoaXZlKGJ5dGUpID0gImNhbWxwNHByb2Yu
Y21vIgogIGFyY2hpdmUobmF0aXZlKSA9ICJjYW1scDRwcm9mLmNteCIKKQo=
--0015175cdc5e2e2c240475215b14--

