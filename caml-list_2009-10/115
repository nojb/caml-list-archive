Return-Path: <toots@rastageeks.org>
X-Spam-Checker-Version: SpamAssassin 3.1.3 (2006-06-01) on yquem.inria.fr
X-Spam-Level: 
X-Spam-Status: No, score=0.0 required=5.0 tests=none autolearn=disabled 
	version=3.1.3
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by yquem.inria.fr (Postfix) with ESMTP id 3AA31BC37
	for <caml-list@yquem.inria.fr>; Thu, 15 Oct 2009 07:35:27 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Au4DAGNR1kpYvxGEgWdsb2JhbACBUZlAAQEWJL1lhC4E
X-IronPort-AV: E=Sophos;i="4.44,563,1249250400"; 
   d="scan'208";a="48628190"
Received: from www.rastageeks.org (HELO mail.rastageeks.org) ([88.191.17.132])
  by mail4-smtp-sop.national.inria.fr with ESMTP; 15 Oct 2009 07:35:27 +0200
Received: from leonard.localnet (ip98-163-228-140.no.no.cox.net [98.163.228.140])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by mail.rastageeks.org (Postfix) with ESMTPSA id 3ACB1B8D32
	for <caml-list@yquem.inria.fr>; Thu, 15 Oct 2009 07:35:26 +0200 (CEST)
From: Romain Beauxis <toots@rastageeks.org>
To: caml-list@yquem.inria.fr
Subject: Ocaml-cry: an ocaml native implementation source protocols for icecast/shoutcast
Date: Thu, 15 Oct 2009 00:38:31 -0500
User-Agent: KMail/1.12.2 (Linux/2.6.30-2-amd64; KDE/4.3.2; x86_64; ; )
MIME-Version: 1.0
Content-Type: text/plain;
  charset="us-ascii"
Content-Transfer-Encoding: 7bit
Message-Id: <200910150038.32238.toots@rastageeks.org>
X-Spam: no; 0.00; ocaml:01 ocaml:01 data:02 data:02 namely:02 native:03 native:03 module:03 module:03 programmer:07 protocols:07 protocols:07 cry:91 release:09 source:12 
Status: RO
Content-Length: 765
Lines: 21

	Hi all !

Coming along with the next release of liquidsoap, we have just released a new 
module for ocaml, namely ocaml-cry.

Ocaml-cry is a native implementation of the protocols used for sending source 
data to icecast and shoutcast servers.

The main difference with the famous libshout implementation is about 
flexibility. This module allows to set any source header, which is particular 
allows to use any custom format which is compatible with the servers.

However, contrary to libshout, ocaml-cry does not handle the synchronisation 
of the audio data sent to the servers. Hence, the task of controling the rate 
of the data sent is up to the programmer.

You can find more informations on this module there:
  http://www.rastageeks.org/cry.html


Romain

