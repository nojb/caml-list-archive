Return-Path: <guillaume.yziquel@citycable.ch>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id B86D8BBAF
	for <caml-list@yquem.inria.fr>; Wed, 23 Dec 2009 14:54:41 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApIDAMavMUtV2gB4h2dsb2JhbACDbZUVgk0BAQEIDQgHFawkkAWBL4IuVgSJJw
X-IronPort-AV: E=Sophos;i="4.47,442,1257116400"; 
   d="scan'208";a="39234883"
Received: from emailfrontal1.citycable.ch ([85.218.0.120])
  by mail2-smtp-roc.national.inria.fr with SMTP; 23 Dec 2009 14:54:41 +0100
Received: from [192.168.1.100] (unknown [92.102.140.132])
	(Authenticated sender: guillaume.yziquel@citycable.ch)
	by emailfrontal1.citycable.ch (Postfix) with ESMTPA id CEBC212C1DA;
	Wed, 23 Dec 2009 14:54:39 +0100 (CET)
Message-ID: <4B32211D.9070705@citycable.ch>
Date: Wed, 23 Dec 2009 14:54:37 +0100
From: Guillaume Yziquel <guillaume.yziquel@citycable.ch>
Reply-To: guillaume.yziquel@citycable.ch
User-Agent: Mozilla-Thunderbird 2.0.0.22 (X11/20090707)
MIME-Version: 1.0
To: =?UTF-8?B?RGFuaWVsIELDvG56bGk=?= <daniel.buenzli@erratique.ch>
Cc: OCaml List <caml-list@inria.fr>
Subject: Re: React switch with newly created events.
References: <4B320EFA.9050609@citycable.ch> <91a3da520912230523w74ff5fe8i9b0f8eb9f2c015c7@mail.gmail.com>
In-Reply-To: <91a3da520912230523w74ff5fe8i9b0f8eb9f2c015c7@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: quoted-printable
X-Spam: no; 0.00; guillaume:01 guillaume:01 graph:01 dependency:01 primitives:01 primitive:02 confused:04 daniel:04 question:13 however:13 replace:13 case:13 does:14 does:14 precise:15 

Daniel B=C3=BCnzli a =C3=A9crit :
>> However, it may happen (and it does happen) that as soon as this new
>> React.event is created, an event is fired before the React.E.switch ha=
s been
>> executed to replace the old event by the new event.
>=20
> You are creating a new update cycle inside another update cycle and
> this is disallowed. No primitives are allowed to update in an update
> cycle (to be precise unless the primitive does not belong to the
> dependency graph of the update cycle).

No, this is not the case. There's only one update cycle. I was confused=20
and sked the question too quickly. It works perfectly...

--=20
      Guillaume Yziquel
http://yziquel.homelinux.org/

