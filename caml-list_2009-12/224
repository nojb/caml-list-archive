Return-Path: <ogasawara@itpl.co.jp>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 4342DBC37
	for <caml-list@yquem.inria.fr>; Tue, 29 Dec 2009 07:08:28 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: Am4CAAcsOUvY5v4vmWdsb2JhbACZB4JIAQEBAQEGDQoHE7k3hDMEgWWBGA
X-IronPort-AV: E=Sophos;i="4.47,466,1257116400"; 
   d="scan'208";a="42871810"
Received: from amout07.alpha-mail.net ([216.230.254.47])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 29 Dec 2009 07:08:27 +0100
Received: from webarc05.alpha-mail.jp (webarc05.alpha-mail.jp [216.230.254.85])
	by amout07.alpha-mail.net  with ESMTP id nBT68M4s003617;
	Tue, 29 Dec 2009 15:08:24 +0900
X-Virus-Scanned: amavisd-new at Alpha-Mail Out
Received: from ltsub.alpha-mail.net (ltsub.alpha-mail.net [216.230.254.26])
	by webarc05.alpha-mail.jp (Postfix) with ESMTP id AFB59A48033;
	Tue, 29 Dec 2009 15:08:20 +0900 (JST)
Received: from [192.168.1.99] (FL1-219-107-83-49.aic.mesh.ad.jp [219.107.83.49])
	by ltsub.alpha-mail.net (Alpha-mail) with ESMTP id 7A45B3B807C;
	Tue, 29 Dec 2009 15:08:23 +0900 (JST)
Message-ID: <4B399CC5.7090108@itpl.co.jp>
Date: Tue, 29 Dec 2009 15:08:05 +0900
From: Satoshi Ogasawara <ogasawara@itpl.co.jp>
User-Agent: Thunderbird 2.0.0.9 (X11/20071031)
MIME-Version: 1.0
To: caml-list@inria.fr
Subject: [ANN] concurrent cell supports FRP(beta)
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit
X-Spam: no; 0.00; sig:01 val:01 val:01 accum:01 bool:01 sig:01 bool:01 accum:01 prev:01 conal:01 conal:01 3.0:98 frs:98 rec:01 functions:01 

Hi list,

New beta release of concurrent cell supports thread safe FRP(Functional 
Reactive Programming).

 concurrent cell versoin 3.0 beta
https://forge.ocamlcore.org/frs/?group_id=42&release_id=227

There are two new modules Frp.TimeVaryReact and Frp.TimeVaryEvent 
consists of a type and functions as follows:

  module rec TimeVaryReact : sig
    type 'a t
    val make : ?src:'a Mbox.t -> 'a -> 'a t * ('a -> unit)
    val return : 'a -> 'a t
    val read : 'a t -> 'a
    val map : ('a -> 'b) -> 'a t -> 'b t
    val map2 : ('a -> 'b -> 'c) -> 'a t -> 'b t -> 'c t
    val app : ('a -> 'b) t -> 'a t -> 'b t
    val join : 'a t t -> 'a t
    val switch : 'a t -> 'a t TimeVaryEvent.t -> 'a t
    val bind : 'a t -> ('a -> 'b t) -> 'b t
    val accum : 'a -> ('a -> 'a) TimeVaryEvent.t -> 'a t
    val fold : ('a -> 'b -> 'a) -> 'a -> 'b TimeVaryEvent.t -> 'a t
    val changes : ?eq:('a -> 'a -> bool) -> 'a t -> 'a TimeVaryEvent.t
    val history : int -> 'a t -> 'a list t
  end
  and TimeVaryEvent : sig
    type 'a t
    val make : ?src:'a Mbox.t -> unit -> 'a t * ('a -> unit)
    val map : ('a -> 'b) -> 'a t -> 'b t
    val listen : ('a -> unit) -> 'a t -> unit
    val map2 : ('a -> 'b -> 'c) -> 'a t -> 'b t -> 'c t
    val merge : 'a t -> 'a t -> 'a t
    val filter : ('a -> bool) -> 'a t -> 'a t
    val fmap : ('a -> 'b option) -> 'a t -> 'b t
    val join : 'a t t -> 'a t
    val accum : 'a -> ('a -> 'a) t -> 'a t
    val fold : ('a -> 'b -> 'a) -> 'a  -> 'b t -> 'a t
    val select : 'a t list -> 'a t
    val switch : 'a t -> 'a t t -> 'a t
    val history : int -> 'a t -> 'a list t
    val with_prev : 'a t -> ('a * 'a) t
    val changes : ?eq:('a -> 'a -> bool) -> 'a t -> 'a t
  end

This implementation based on this paper. (thanks to Conal Elliott) 
http://conal.net/papers/simply-reactive/

I intend to release version 3.0.0 after checking memory leaks, speed and 
bugs.

Regards
  ogasawara

