Return-Path: <jonathandeanharrop@googlemail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 533BCBC57
	for <caml-list@yquem.inria.fr>; Fri,  3 Dec 2010 22:16:49 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AoIAAJLt+ExKfVK0kGdsb2JhbACDUJJ4jGoIFQEBAgkJDAcRBB6pDoksglQBBY16AQSBIXOCQXM
X-IronPort-AV: E=Sophos;i="4.59,295,1288566000"; 
   d="scan'208";a="69181210"
Received: from mail-wy0-f180.google.com ([74.125.82.180])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 03 Dec 2010 22:16:43 +0100
Received: by wyb29 with SMTP id 29so5126864wyb.39
        for <caml-list@yquem.inria.fr>; Fri, 03 Dec 2010 13:16:43 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlemail.com; s=gamma;
        h=domainkey-signature:received:received:from:to:cc:references
         :in-reply-to:subject:date:organization:message-id:mime-version
         :content-type:content-transfer-encoding:x-mailer:thread-index
         :content-language;
        bh=KIWqT8KMSvyMGUjgGV5k0XJ0ayBxufhor4ZOJ61KUf0=;
        b=v0dGD3S/2Gm1pFTmci+KzUcBF0m37Z0TRPxO32DNLRkfZVJqHO/QkpoN0uE3Ci6ugX
         bowHDjB3bGigxc4aubtlP0PDTYvga7Ep91z6ychfkGq3FvCcFCZRzk9e8GcZEq6gB7sL
         trSc3ykntj2x5ygfR1JAnr/2a9X+xEjNYQ8QA=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=googlemail.com; s=gamma;
        h=from:to:cc:references:in-reply-to:subject:date:organization
         :message-id:mime-version:content-type:content-transfer-encoding
         :x-mailer:thread-index:content-language;
        b=Atp+pBXZ69Mpm80lCI3MU32gWJ0Hr99mokIsMEmC9K2sinsS27m87n6fz6tMi6o6d0
         wVd4zRH/aY8KB4obJE/SxFzQWsA3rN41WMwqIhb5I5MJ7wJV1CEJX+8q11e8WUDxsaLG
         /6iCgg3/JV48755E9XAoZ3zD2HcTYT12/nqaw=
Received: by 10.227.141.139 with SMTP id m11mr2537674wbu.35.1291411002931;
        Fri, 03 Dec 2010 13:16:42 -0800 (PST)
Received: from WinEight ([87.113.160.118])
        by mx.google.com with ESMTPS id x12sm1115264weq.18.2010.12.03.13.16.40
        (version=SSLv3 cipher=RC4-MD5);
        Fri, 03 Dec 2010 13:16:41 -0800 (PST)
From: Jon Harrop <jonathandeanharrop@googlemail.com>
To: "'Till Varoquaux'" <till@pps.jussieu.fr>
Cc: <caml-list@yquem.inria.fr>
References: <3DCEA910-1382-47E5-876B-059178F8F82E@googlemail.com>	<20101130124803.7952fca1@deb0>	<D6C274D9-8A00-4D6F-936A-58206CA5D358@googlemail.com>	<AANLkTi=Wu1SXVgQ+X0NECNx3oUsD=xEy-9Zq6T3ncJ+W@mail.gmail.com>	<B8C055A1-2A67-4C7E-BF67-4A639619C4EB@wanadoo.fr>	<0a8b01cb90da$da5e6240$8f1b26c0$@com>	<5E2DA3F1-7998-4F62-B617-7B6451D1001D@googlemail.com>	<0b3b01cb9161$a81c8e10$f855aa30$@com>	<B965CE04-4059-421F-A8CD-EB178BF32D40@googlemail.com>	<0b9301cb91a3$8f42fd60$adc8f820$@com>	<AB3E2F68-0E5B-4B4F-A4F8-3C67BD6F598E@googlemail.com> <AANLkTi=CXeMEguLuSOVc7Hsk=7ORaEMF4EE3eb_MEPoo@mail.gmail.com>
In-Reply-To: <AANLkTi=CXeMEguLuSOVc7Hsk=7ORaEMF4EE3eb_MEPoo@mail.gmail.com>
Subject: RE: ocamlopt LLVM support (Was: [Caml-list] OCamlJIT2 vs. OCamlJIT)
Date: Fri, 3 Dec 2010 21:16:06 -0000
Organization: Flying Frog Consultancy
Message-ID: <0caf01cb932f$4d612830$e8237890$@com>
MIME-Version: 1.0
Content-Type: text/plain;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
X-Mailer: Microsoft Office Outlook 12.0
Thread-Index: AcuS7vT4nSx/YOQIRUuWsLMNX2gnSgAQDdaQ
Content-Language: en-gb
X-Spam: no; 0.00; ocamlopt:01 ocaml:01 compiler:01 combinator:01 functors:01 inlining:01 compiler:01 pointers:01 cheers:01 wrote:01 caml-list:01 functions:01 match:02 constraints:03 optimization:03 

Till wrote:
> You seem to think LLVM wouldn't actually buy us much in term of
> optimisations. In my experience the current ocaml compiler is really
> good when writing code fairly low level but discourages use of
> combinator library, higher order functions, functors in performance
> sensitive code (i.e. you have to do inlining, specialization, constant
> propaagation etc... by hand).
>=20
> I was under the impression that some of LLVM passes could be a good
> match for those problems. That is: micro benchmark code that is
> written carefully with those constraints in mind wouldn't gain much
> but some form of "origami" programming could be unfolded by the
> compiler. Am I missing something obvious? (e.g. need for better side
> effect analysis).

I doubt many of LLVM's optimization passes would kick in if the type =
information has been removed by boxing and casting all the pointers to =
i8*.

Cheers,
Jon.


