Return-Path: <philou@philou.ch>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 9766BBC57
	for <caml-list@yquem.inria.fr>; Fri,  3 Dec 2010 22:45:39 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AvsEACL0+Ew+3JIE/2dsb2JhbACjO3HDE4IUgzQEimuDEg
X-IronPort-AV: E=Sophos;i="4.59,295,1288566000"; 
   d="scan'208";a="90801508"
Received: from vs.philou.ch ([62.220.146.4])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 03 Dec 2010 22:45:39 +0100
Received: from [192.168.1.120] (85-218-12-23.dclient.lsne.ch [85.218.12.23])
	by vs.philou.ch (Postfix) with ESMTPSA id 8E0F920A4017;
	Fri,  3 Dec 2010 22:52:50 +0100 (CET)
Subject: Re: ocamlopt LLVM support (Was: [Caml-list] OCamlJIT2 vs. OCamlJIT)
Mime-Version: 1.0 (Apple Message framework v1082)
Content-Type: text/plain; charset=iso-8859-1
From: Philippe Strauss <philou@philou.ch>
In-Reply-To: <0cb001cb9330$328102a0$978307e0$@com>
Date: Fri, 3 Dec 2010 22:45:38 +0100
Cc: <caml-list@yquem.inria.fr>
Content-Transfer-Encoding: quoted-printable
Message-Id: <4DBB68C2-19CA-4222-913D-B6B26B780ED7@philou.ch>
References: <3DCEA910-1382-47E5-876B-059178F8F82E@googlemail.com>	<20101130124803.7952fca1@deb0>	<D6C274D9-8A00-4D6F-936A-58206CA5D358@googlemail.com>	<AANLkTi=Wu1SXVgQ+X0NECNx3oUsD=xEy-9Zq6T3ncJ+W@mail.gmail.com>	<B8C055A1-2A67-4C7E-BF67-4A639619C4EB@wanadoo.fr>	<0a8b01cb90da$da5e6240$8f1b26c0$@com>	<5E2DA3F1-7998-4F62-B617-7B6451D1001D@googlemail.com>	<0b3b01cb9161$a81c8e10$f855aa30$@com>	<B965CE04-4059-421F-A8CD-EB178BF32D40@googlemail.com>	<0b9301cb91a3$8f42fd60$adc8f820$@com>	<AB3E2F68-0E5B-4B4F-A4F8-3C67BD6F598E@googlemail.com> <F03F3EDC-2215-46E3-86AF-058B2208C595@philou.ch> <0cb001cb9330$328102a0$978307e0$@com>
To: Jon Harrop <jonathandeanharrop@googlemail.com>
X-Mailer: Apple Mail (2.1082)
X-Spam: no; 0.00; ocamlopt:01 christophe:01 arrays:01 ocamlopt:01 ocaml's:01 cheers:01 wrote:01 compilers:01 caml-list:01 minor:01 caml:02 fftw:02 binary:02 binding:02 binding:02 

mostly fftw using christophe troessler binding and a kind of plain =
convolution, actully very comparable to plain convolution 100% in caml =
(not using any c binding).

plus minor things like binary search, vector multiplications etc. (audio =
DSP).

Le 3 d=E9c. 2010 =E0 22:22, Jon Harrop a =E9crit :

> Philippe wrote:
>> I'm totally noob on compilers internals, but if the processing of =
float
>> arrays can be improved a lot by a LLVM ocamlopt, I would use it
>> exclusively.
>=20
> LLVM's x86 code gen will generate more efficient floating point code =
than
> ocamlopt if and only if the type information is available to it. With
> OCaml's current design, that is unlikely and you'll still have things =
like
> the 16Mb limit.
>=20
> What algorithms are you running?
>=20
> Cheers,
> Jon.

