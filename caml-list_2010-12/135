Return-Path: <vv@di.fc.ul.pt>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 420F6BC57
	for <caml-list@yquem.inria.fr>; Mon, 13 Dec 2010 14:28:50 +0100 (CET)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ApkEADquBU3CdRZdgWdsb2JhbACkABUBARYiKcF3hUoEkHw
X-IronPort-AV: E=Sophos;i="4.59,335,1288566000"; 
   d="scan'208,217";a="92117474"
Received: from smtps.di.fc.ul.pt ([194.117.22.93])
  by mail1-smtp-roc.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 13 Dec 2010 14:28:49 +0100
Received: from padme.di.fc.ul.pt (padme.di.fc.ul.pt [10.101.86.174])
	(using TLSv1 with cipher AES128-SHA (128/128 bits))
	(No client certificate requested)
	by smtps.di.fc.ul.pt (Postfix) with ESMTP id D30871B83F1
	for <caml-list@inria.fr>; Mon, 13 Dec 2010 13:28:38 +0000 (WET)
From: "Vasco T. Vasconcelos" <vv@di.fc.ul.pt>
Content-Type: multipart/alternative; boundary=Apple-Mail-289-407105979
Subject: Places 2011 - Call for Papers
Date: Mon, 13 Dec 2010 13:28:38 +0000
Message-Id: <A8D87B3F-F56F-4F3F-80EE-58CCBD87F03D@di.fc.ul.pt>
To: caml-list@inria.fr
Mime-Version: 1.0 (Apple Message framework v1082)
X-Mailer: Apple Mail (2.1082)
X-Spam: no; 0.00; etaps:01 nodes:01 granularity:01 inherently:01 stream-based:01 higher-order:01 runtime:01 high-level:01 runtime:01 allocations:01 entcs:01 mycroft:01 palsberg:01 sarkar:01 etaps:01 


--Apple-Mail-289-407105979
Content-Transfer-Encoding: quoted-printable
Content-Type: text/plain;
	charset=iso-8859-1

                        CALL FOR PAPERS
                           PLACES'11
        Programming Language Approaches to Concurrency
              and communication-cEntric Software
                2nd April 2011, Saarbr=FCcken, Germany
                     Affiliated with ETAPS 2011
                    http://places11.di.fc.ul.pt/


Theme and Goals

Applications on the web today are built using numerous interacting
services; soon off-the-shelf CPUs will host hundreds of cores; and
sensor networks will be composed from a large number of processing
units.  Much normal software, including applications and system-level
services, will soon need to make effective use of thousands of
computing nodes. At some level of granularity, computation in such
systems will be inherently concurrent and communication-centred.

To exploit and harness the richness of this computing environment,
designers and programmers will utilise a rich variety of programming
paradigms, depending on the shape of the data and control
flow. Plausible candidates for such paradigms include structured
imperative concurrent programming, stream-based programming,
concurrent functions with asynchronous message passing, higher-order
types for events, and the use of types for communications and data
structures (such as session types and linear types), to name but a
few. Combinations of these abstractions will be used even in a single
application, and the runtime environment needs to ensure seamless
execution without relying on differences in available resources such
as the number of cores.

The development of effective programming methodologies for the coming
computing paradigm demands exploration and understanding of a wide
variety of ideas and techniques.  This workshop aims to offer a forum
where researchers from different fields exchange new ideas on one of
the central challenges for programming in the near future, the
development of programming methodologies and infrastructures where
concurrency and distribution are the norm rather than a marginal
concern.

Topics of Interest

Submissions are invited in the general area of foundations of
programming languages for concurrency, communication and
distribution. Specific topics include: language design and
implementations for communications and/or concurrency, program
analysis, session types, multicore programming, use of message passing
in systems software, interface languages for communication and
distribution, concurrent data types, concurrent objects and actors,
web services, novel programming methodologies for sensor networks,
integration of sequential and concurrent programming, high-level
programming abstractions for security concerns in concurrent,
distributed programming, and runtime architectures for concurrency,
scalability and/or resource allocations. Papers are welcome which
present novel and valuable ideas as well as experiences.

Submission Guidelines

Authors are invited to submit a five-page abstract in PDF format by
10th January using the EasyChair proceedings template available at
http://www.easychair.org/easychair.zip.

Abstracts and full papers should be submitted using EasyChair,
http://www.easychair.org/conferences/?conf=3Dplaces11.

Preliminary proceedings will be available at the
workshop. Post-proceedings will be published in a journal (the past
post-proceedings were published in ENTCS and EPTCS).

Important Dates

Deadline of 5-page abstracts: Wednesday 10th Jan 2011
Notification: Wednesday 2nd Feb 2011
Camera Ready for pre-proceedings: Wednesday 9th Feb 2011

Program Committee

Marco Carbone, IT University of Copenhagen
Swarat Chaudhuri, Pennsylvania State University
Alastair Donaldson, Oxford University
Tim Harris, Microsoft Research Cambridge
Alan Mycroft, University of Cambridge
Jens Palsberg, University of California, Los Angeles
Vijay A. Saraswat, IBM Research
Vivek Sarkar, Rice University (co-chair)
Vasco T. Vasconcelos, University of Lisbon (co chair)
Jan Vitek, Purdue University
Nobuko Yoshida, Imperial College London

--Apple-Mail-289-407105979
Content-Transfer-Encoding: quoted-printable
Content-Type: text/html;
	charset=iso-8859-1

<html><head></head><body style=3D"word-wrap: break-word; =
-webkit-nbsp-mode: space; -webkit-line-break: after-white-space; =
">&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; =
&nbsp; &nbsp; &nbsp;CALL FOR =
PAPERS<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbs=
p;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;PLACES'11<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&=
nbsp;&nbsp;Programming Language Approaches to =
Concurrency<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp=
;&nbsp;&nbsp;&nbsp;&nbsp;and communication-cEntric =
Software<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&n=
bsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2nd April 2011, Saarbr=FCcken, =
Germany<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=
sp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Affiliated =
with ETAPS =
2011<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;=
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a =
href=3D"http://places11.di.fc.ul.pt/">http://places11.di.fc.ul.pt/</a><br>=
<br><br>Theme and Goals<br><br>Applications on the web today are built =
using numerous interacting<br>services; soon off-the-shelf CPUs will =
host hundreds of cores; and<br>sensor networks will be composed from a =
large number of processing<br>units. &nbsp;Much normal software, =
including applications and system-level<br>services, will soon need to =
make effective use of thousands of<br>computing nodes. At some level of =
granularity, computation in such<br>systems will be inherently =
concurrent and communication-centred.<br><br>To exploit and harness the =
richness of this computing environment,<br>designers and programmers =
will utilise a rich variety of programming<br>paradigms, depending on =
the shape of the data and control<br>flow. Plausible candidates for such =
paradigms include structured<br>imperative concurrent programming, =
stream-based programming,<br>concurrent functions with asynchronous =
message passing, higher-order<br>types for events, and the use of types =
for communications and data<br>structures (such as session types and =
linear types), to name but a<br>few. Combinations of these abstractions =
will be used even in a single<br>application, and the runtime =
environment needs to ensure seamless<br>execution without relying on =
differences in available resources such<br>as the number of =
cores.<br><br>The development of effective programming methodologies for =
the coming<br>computing paradigm demands exploration and understanding =
of a wide<br>variety of ideas and techniques. &nbsp;This workshop aims =
to offer a forum<br>where researchers from different fields exchange new =
ideas on one of<br>the central challenges for programming in the near =
future, the<br>development of programming methodologies and =
infrastructures where<br>concurrency and distribution are the norm =
rather than a marginal<br>concern.<br><br>Topics of =
Interest<br><br>Submissions are invited in the general area of =
foundations of<br>programming languages for concurrency, communication =
and<br>distribution. Specific topics include: language design =
and<br>implementations for communications and/or concurrency, =
program<br>analysis, session types, multicore programming, use of =
message passing<br>in systems software, interface languages for =
communication and<br>distribution, concurrent data types, concurrent =
objects and actors,<br>web services, novel programming methodologies for =
sensor networks,<br>integration of sequential and concurrent =
programming, high-level<br>programming abstractions for security =
concerns in concurrent,<br>distributed programming, and runtime =
architectures for concurrency,<br>scalability and/or resource =
allocations. Papers are welcome which<br>present novel and valuable =
ideas as well as experiences.<br><br>Submission =
Guidelines<br><br>Authors are invited to submit a five-page abstract in =
PDF format by<br>10th January using the EasyChair proceedings template =
available at<br><a =
href=3D"http://www.easychair.org/easychair.zip">http://www.easychair.org/e=
asychair.zip</a>.<br><br>Abstracts and full papers should be submitted =
using EasyChair,<br><a =
href=3D"http://www.easychair.org/conferences/?conf=3Dplaces11">http://www.=
easychair.org/conferences/?conf=3Dplaces11</a>.<br><br>Preliminary =
proceedings will be available at the<br>workshop. Post-proceedings will =
be published in a journal (the past<br>post-proceedings were published =
in ENTCS and EPTCS).<br><br>Important Dates<br><br>Deadline of 5-page =
abstracts: Wednesday 10th Jan 2011<br>Notification: Wednesday 2nd Feb =
2011<br>Camera Ready for pre-proceedings: Wednesday 9th Feb =
2011<br><br>Program Committee<br><br>Marco Carbone, IT University of =
Copenhagen<br>Swarat Chaudhuri, Pennsylvania State =
University<br>Alastair Donaldson, Oxford University<br>Tim Harris, =
Microsoft Research Cambridge<br>Alan Mycroft, University of =
Cambridge<br>Jens Palsberg, University of California, Los =
Angeles<br>Vijay A. Saraswat, IBM Research<br>Vivek Sarkar, Rice =
University (co-chair)<br>Vasco T. Vasconcelos, University of Lisbon (co =
chair)<br>Jan Vitek, Purdue University<br>Nobuko Yoshida, Imperial =
College London<br></body></html>=

--Apple-Mail-289-407105979--

