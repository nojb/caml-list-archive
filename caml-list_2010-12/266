Received: from mail4-relais-sop.national.inria.fr (mail4-relais-sop.national.inria.fr [192.134.164.105])
	by walapai.inria.fr (8.13.6/8.13.6) with ESMTP id oBPNcFCq007059
	for <caml-list@sympa-roc.inria.fr>; Sun, 26 Dec 2010 00:38:15 +0100
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AlQCAGIPFk3AbSoIe2dsb2JhbACDZJI0jhkVAQEWIgQgrlGPSw2BE4FSgWR0BA
X-IronPort-AV: E=Sophos;i="4.60,229,1291590000"; 
   d="scan'208";a="83470120"
Received: from einhorn.in-berlin.de ([192.109.42.8])
  by mail4-smtp-sop.national.inria.fr with ESMTP/TLS/DHE-RSA-AES256-SHA; 26 Dec 2010 00:38:10 +0100
X-Envelope-From: oliver@first.in-berlin.de
X-Envelope-To: <caml-list@inria.fr>
Received: from first (e178032212.adsl.alicedsl.de [85.178.32.212])
	(authenticated bits=0)
	by einhorn.in-berlin.de (8.13.6/8.13.6/Debian-1) with ESMTP id oBPNc9jX029230
	for <caml-list@inria.fr>; Sun, 26 Dec 2010 00:38:09 +0100
Received: by first (Postfix, from userid 1000)
	id B074B44179B; Sun, 26 Dec 2010 00:38:08 +0100 (CET)
Date: Sun, 26 Dec 2010 00:38:08 +0100
From: oliver@first.in-berlin.de
To: caml-list@inria.fr
Message-ID: <20101225233808.GA17650@siouxsie>
References: <20101225004412.GA10078@siouxsie>
 <4D15A634.9000309@gmail.com>
 <20101225183021.GA9316@siouxsie>
 <20101225202101.GA12780@siouxsie>
 <4D165360.3010806@gmail.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <4D165360.3010806@gmail.com>
User-Agent: Mutt/1.5.20 (2009-06-14)
X-Scanned-By: MIMEDefang_at_IN-Berlin_e.V. on 192.109.42.8
Subject: Re: [Caml-list] https... which lib?

On Sat, Dec 25, 2010 at 10:26:08PM +0200, Török Edwin wrote:
[...]
> Also since you're using HTTPS you might want this:
>             sslconn#set_sslverifypeer true;
>             (* verify that certificate is valid for target host *)
>             sslconn#set_sslverifyhost Curl.SSLVERIFYHOST_HOSTNAME;
>             (* only accept our servers, optional *)
>             sslconn#set_cainfo "ourserver_ca.pem";

OK.... can I also disable all these checks?
I got a
  Fatal error: exception Curl.CurlException(60, 60, "CURLE_SSL_CACERT")
on a http-page, and the tool I'm working on is simple downloading stuff,
and it doesn't matter if the docs are coming from the 55.th planet of the solar system or
from somewhere else... ;)
As far as I remember, my ocamlnet stuff could just download this stuff...

So, somehow just being able to read and download would be fine.

Btw, when I use the "simple" example for the webpage that fails,
I get an error, which tells me, that I'm not allowed to access that page,
but wget and Browsers display me the page without problems.

This is strange... it looks like I have to identify?!
This problem only occurs with curllib (with the code I sused from
your example, as welklk as the simple.ml from the curl-ocaml-binding-page).


Also a problem I have: the curl-lib seems to retrieve the data
in background as default, without me setting options for background working.
Can I disable this feature? I need to know whe the stuff access is ready.

Even my normal http-requests now fail, and in this respect it's a step backward
from ocamlnet (which also is better documented)...

A retry-option also would be fine...


Ciao,
   Oliver
