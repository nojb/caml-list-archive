Return-Path: <gclci-caml-list@m.gmane.org>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 6F0B8BBAF
	for <caml-list@yquem.inria.fr>; Wed, 19 May 2010 13:29:57 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AnEGANJo80tQW+UMgWdsb2JhbACSAowFBgIVAQEWIiK8b4UQBA
X-IronPort-AV: E=Sophos;i="4.53,263,1272837600"; 
   d="scan'208";a="50871981"
Received: from lo.gmane.org ([80.91.229.12])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 19 May 2010 13:29:57 +0200
Received: from list by lo.gmane.org with local (Exim 4.69)
	(envelope-from <gclci-caml-list@m.gmane.org>)
	id 1OEhTH-0001xZ-Tl
	for caml-list@inria.fr; Wed, 19 May 2010 13:29:56 +0200
Received: from 24.114.224.34 ([24.114.224.34])
        by main.gmane.org with esmtp (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Wed, 19 May 2010 13:29:55 +0200
Received: from michael by 24.114.224.34 with local (Gmexim 0.1 (Debian))
        id 1AlnuQ-0007hv-00
        for <caml-list@inria.fr>; Wed, 19 May 2010 13:29:55 +0200
X-Injected-Via-Gmane: http://gmane.org/
To: caml-list@inria.fr
connect(): No such file or directory
From: Michael Ekstrand <michael@elehack.net>
Subject: Re: about OcamIL
Date: Wed, 19 May 2010 07:29:42 -0400
Lines: 24
Message-ID: <ht0i3c$adr$1@dough.gmane.org>
References: <w2t320e992a1005051158pcdb30e5w48409aa8b6e464e4@mail.gmail.com>	<951508.20587.qm@web58708.mail.re1.yahoo.com>	<g2j90823c941005060343t88c91d06k731ccd01ec225c07@mail.gmail.com>	<201005061233.07551.peng.zang@gmail.com>	<07b101caf08b$3e5022c0$baf06840$@com>	<AANLkTik7gzvUrLntCLbL7gQow4RCzkXDPwCNiCHIE6Or@mail.gmail.com>	<088201caf1ce$b5060cb0$1f122610$@com>	<20100512151137.26894ywcpv71ixvk@imp.ovh.net>	<012601caf351$e9a362e0$bcea28a0$@com>	<44A730DD-54EB-4A1C-BD1A-6E9EFB31B5A2@x9c.fr>	<01f001caf536$c923b4c0$5b6b1e40$@com>	<20100517095327.14271x0lnao43sao@imp.ovh.net>	<002001caf6e8$b408ed90$1c1ac8b0$@com> <20100519094634.63006zi1h04x95z4@imp.ovh.net>
Mime-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 8bit
X-Complaints-To: usenet@dough.gmane.org
X-Gmane-NNTP-Posting-Host: 24.114.224.34
User-Agent: Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9.1.9) Gecko/20100423 Lightning/1.0b1 Thunderbird/3.0.4
In-Reply-To: <20100519094634.63006zi1h04x95z4@imp.ovh.net>
X-Enigmail-Version: 1.0.1
X-Spam: no; 0.00; ocaml:01 hashtables:01 haskell:01 python's:01 hash:01 hash:01 2009:98 wrote:01 pervasive:01 caml:02 slower:02 rarely:02 shootout:02 python:03 python:03 

On 05/19/2010 03:46 AM, forum@x9c.fr wrote:
> Jon Harrop <jonathandeanharrop@googlemail.com> a écrit :
> 
> (...)
> 
>> I don't think this is heated at all. We were talking about "high 
>> performance" languages and you cited a bunch of languages that get 
>> whipped by Python on this benchmark:
>>  
>> http://flyingfrogblog.blogspot.com/2009/04/f-vs-ocaml-vs-haskell-hash-table.html
>>
> 
> Acknowledged. "Whipped" is here 2 times slower on that particular
> benchmark, while Python is rarely within an order of magnitude of
> OCaml code (cf. the language shootout). Moreover, hashtables are
> ubiquitous in Python (and hence probably particularly optimized),
> while they are not so common in Haskell or Caml.

Yes, Python's hash tables are particularly optimized due to their wide
pervasive usage.  When you're testing Python hash tables, you're really
testing a carefully-written, thoroughly-tuned C implementation of hash
tables.

- Michael

