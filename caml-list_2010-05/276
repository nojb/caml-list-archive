Return-Path: <David.Teller@univ-orleans.fr>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id 045CFBC57
	for <caml-list@yquem.inria.fr>; Thu, 27 May 2010 11:15:22 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: ArgFAMbU/UvCpx5XeGdsb2JhbACIRYkWjD0VARUiJMAshRME
X-IronPort-AV: E=Sophos;i="4.53,310,1272837600"; 
   d="scan'208";a="60119160"
Received: from gretchen.univ-orleans.fr ([194.167.30.87])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 27 May 2010 11:15:21 +0200
Received: from localhost (localhost [127.0.0.1])
	by gretchen.univ-orleans.fr (Postfix) with ESMTP id 304053EF66;
	Thu, 27 May 2010 11:15:35 +0200 (CEST)
Received: from gretchen.univ-orleans.fr ([127.0.0.1])
	by localhost (gretchen.univ-orleans.fr [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id BMFMwDVW0n-T; Thu, 27 May 2010 11:15:33 +0200 (CEST)
Received: from smtps.univ-orleans.fr (repartiteur.univ-orleans.fr [194.167.30.199])
	by gretchen.univ-orleans.fr (Postfix) with ESMTP id F35313EB61;
	Thu, 27 May 2010 11:15:32 +0200 (CEST)
Received: from [192.168.1.141] (unknown [213.144.210.93])
	by smtps.univ-orleans.fr (Postfix) with ESMTP id 6983936E60;
	Thu, 27 May 2010 11:15:33 +0200 (CEST)
Subject: Re: [Caml-list] Static exception analysis or alternative to using exceptions
Mime-Version: 1.0 (Apple Message framework v1078)
Content-Type: text/plain; charset=iso-8859-1
From: David Rajchenbach-Teller <David.Teller@univ-orleans.fr>
In-Reply-To: <4BFE2881.1070705@imag.fr>
Date: Thu, 27 May 2010 11:15:18 +0200
Cc: caml-list@yquem.inria.fr
Content-Transfer-Encoding: quoted-printable
Message-Id: <B1041864-558F-4D64-8F4B-B61407752EB0@univ-orleans.fr>
References: <956439.81564.qm@web111506.mail.gq1.yahoo.com>	<AANLkTimoO4s4ufCPatanWi02vQgNwpUmEAggcdjdcrTf@mail.gmail.com> <AANLkTinyHHP3G3or75nMi2vH5K-8BoBX5cruJ110qqT2@mail.gmail.com> <4BFE2881.1070705@imag.fr>
To: Florent Ouchet <florent.ouchet@imag.fr>
X-Mailer: Apple Mail (2.1078)
X-Spam: no; 0.00; univ-orleans:01 type-safe:01 ocaml:01 rafaelsen:01 monads:01 ocaml:01 runtime:01 stdlib:01 syntax:01 beginner's:01 bug:01 beginner's:01 bug:01 tima:01 26,:98 

   Hi,
 If you're interested, three of us on this mailing-list wrote a paper on =
the topic two few years ago [1].

Best regards,
 David

[1] _Catch me if you can Looking for type-safe, hierarchical, =
lightweight, polymorphic and efficient error management in OCaml_, =
http://en.scientificcommons.org/52393896

On May 27, 2010, at 10:08 AM, Florent Ouchet wrote:

> Hello,
>=20
> Same here, specially to avoid the Not_found exception.
> The optional return values gives the oportunity to have a clear view =
of what is being done if the result is not available.
>=20
> - Florent
>=20
> Jacques Le Normand a =E9crit :
>> Jane Street's Core seems to prefer options to exceptions
>>=20
>> On Wed, May 26, 2010 at 5:10 PM, Hans Ole Rafaelsen =
<hrafaelsen@gmail.com <mailto:hrafaelsen@gmail.com>> wrote:
>>=20
>>=20
>>=20
>>    On Wed, May 26, 2010 at 7:30 PM, Dario Teixeira
>>    <darioteixeira@yahoo.com <mailto:darioteixeira@yahoo.com>> wrote:
>>=20
>>        Hi,
>>=20
>>        > What experience does people have to using alternatives to
>>        exceptions,
>>        > such as option types or exception monads? Does use of third =
part
>>        > libraries that still throws exceptions make such approaches
>>        hard to use?
>>        > Performance wise it seems to be comparable to catching
>>        exceptions or
>>        > matching for options, so I guess the difference be might a
>>        question of
>>        > programming style?
>>=20
>>        Partly yes, though I would say that in Ocaml it is tempting to =
use
>>        exceptions beyond what is reasonable, because they are so
>>        cheap and
>>        convenient.  As you noted, this can lead to trouble at
>>        runtime, which
>>        is why some libraries discourage the "exceptional style",
>>        preferring
>>        option types and forcing users to invoke functions suffixed by
>>        "_exc"
>>        if they really want to use the exception-based version.
>>=20
>>        Personally, I think the litmus test hinges on whether the
>>        supposedly
>>        exceptional situation is truly worthy of the name.  If it's a
>>        common
>>        occurrence, perhaps one should reconsider the use of an
>>        "exception".
>>        Without meaning to start an holy war, let me just add that =
even on
>>        the Stdlib there are functions (such as Map.S.find) that raise =
an
>>        exception but which should perhaps return an option type.
>>=20
>>        Btw, you didn't mention it explicitly in your message, but I
>>        trust you
>>        are familiar with "Catch me if you can"? [1]
>>=20
>>    I have just read about it, not tested it yet. Do you have any
>>    experience using this library, especially together with other
>>    libraries that also provides syntax extension?
>>    =20
>>=20
>>        Best regards,
>>        Dario Teixeira
>>=20
>>        [1]
>>        =
http://dutherenverseauborddelatable.wordpress.com/downloads/exception-mona=
ds-for-ocaml/
>>=20
>>=20
>>=20
>>=20
>>    Thanks,
>>=20
>>    Hans Ole
>>=20
>>    _______________________________________________
>>    Caml-list mailing list. Subscription management:
>>    http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
>>    Archives: http://caml.inria.fr
>>    Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>>    Bug reports: http://caml.inria.fr/bin/caml-bugs
>>=20
>>=20
>> =
------------------------------------------------------------------------
>>=20
>> _______________________________________________
>> Caml-list mailing list. Subscription management:
>> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
>> Archives: http://caml.inria.fr
>> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
>> Bug reports: http://caml.inria.fr/bin/caml-bugs
>> =20
>=20
>=20
> --=20
> Florent Ouchet
> PhD Student
> CIS/VDS Team - TIMA Laboratory
>=20
>=20
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>=20

