Return-Path: <benkuin@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by yquem.inria.fr (Postfix) with ESMTP id 45944BC57
	for <caml-list@yquem.inria.fr>; Tue, 11 May 2010 13:22:57 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AucCAP7a6EtKfVI0mGdsb2JhbACRM4xtCBUBAQEBAQgJDAcRIqo2ggCFNi6ITgEBAwWFCwQ
X-IronPort-AV: E=Sophos;i="4.53,206,1272837600"; 
   d="scan'208";a="51009829"
Received: from mail-ww0-f52.google.com ([74.125.82.52])
  by mail2-smtp-roc.national.inria.fr with ESMTP; 11 May 2010 13:22:56 +0200
Received: by wwb39 with SMTP id 39so702005wwb.39
        for <caml-list@yquem.inria.fr>; Tue, 11 May 2010 04:22:56 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:received:in-reply-to
         :references:date:message-id:subject:from:to:content-type
         :content-transfer-encoding;
        bh=mNOLxFC4RbHma4co2Qg44SDBe2p+62/5DjcACs2X27Q=;
        b=oMAFWATSvWU61Ml2O7IzTnnWVef6wdBNpAvD5tXLUL1FCvz1+oIsZjAfEw3TOJpqki
         l15FtQ1vkqAM4Ih65buUNlXCUI6Dmy5ntB8LH3o+pFZPyl70TFXZ/MkbRKvXDLYiTCmm
         KphUiyHsXz1Kv3GuHiBoDCd8YEmzP7ytSPWEQ=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :content-type:content-transfer-encoding;
        b=qolEarO6Mr1kSW8GLMEuUC24EWiPEXKf/31yK5DSLYEcadVFAFEH0bSxcKz3GeDE8a
         x8Jo24bLqM0KrWPKYS0rISi5f0SA7x7gWWX9DnVFC+pUBh1gMf8o7YciGQrJCIArUCin
         JJcfHmgzExsuvvE2ndgQbXIcjv+hl24gQ9suY=
MIME-Version: 1.0
Received: by 10.227.141.145 with SMTP id m17mr5151966wbu.51.1273576976605; 
	Tue, 11 May 2010 04:22:56 -0700 (PDT)
Received: by 10.216.28.72 with HTTP; Tue, 11 May 2010 04:22:56 -0700 (PDT)
In-Reply-To: <07b101caf08b$3e5022c0$baf06840$@com>
References: <w2t320e992a1005051158pcdb30e5w48409aa8b6e464e4@mail.gmail.com>
	 <951508.20587.qm@web58708.mail.re1.yahoo.com>
	 <g2j90823c941005060343t88c91d06k731ccd01ec225c07@mail.gmail.com>
	 <201005061233.07551.peng.zang@gmail.com>
	 <07b101caf08b$3e5022c0$baf06840$@com>
Date: Tue, 11 May 2010 13:22:56 +0200
Message-ID: <AANLkTik7gzvUrLntCLbL7gQow4RCzkXDPwCNiCHIE6Or@mail.gmail.com>
Subject: Re: [Caml-list] about OcamIL
From: ben kuin <benkuin@gmail.com>
To: caml-list@yquem.inria.fr
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
X-Spam: no; 0.00; leaking:01 runtime:01 ocaml:01 afaik:01 runtime:01 ocaml:01 model:01 runtimes:01 cheers:01 beginner's:01 bug:01 examinations:98 2009:98 2009:98 dog:98 

> A little off topic, but how is Mono/Unix these days?
>> Still leaks memory,
you refer to your examinations?
(http://flyingfrogblog.blogspot.com/2009/01/mono-22-still-leaks-memory.html=
?showComment=3D1233522107493#c7872630239059031867)
where you say yes and the mono devs are say no to memory leaking?

>> has broken TCO
Again, I think other people do not have the same opion on this (
http://flyingfrogblog.blogspot.com/2009/01/mono-does-not-support-tail-calls=
.html)

>> and runs like a dog
I think this on the other hand is indeed a problem and has been
documented seriously (also by you:
http://flyingfrogblog.blogspot.com/2009/01/mono-22.html)

I've introduced the post with some license related concerns, maybe I
should take a step back and think about what I want:

1. - programming in a ML like language ( especially the caml family
since I really like those lightweigt type definitions and the pattern
matching that can be applied on those)

2. - high performance runtime, preferably a jit based vm, no problems with =
TCO

3. - a true open source license (approved by Open Source Initiative or
by Free Software Foundation)

I think this 3 point are REASONABLE but the combination of those 3
items is INEXISTENT.

Ocaml: the vm is not very fast (no jit AFAIK)

F#: No open source license so far. Bad runtime performance on mono.

Ocaml on HLVM: I would appreciate if Jon could make a clear statement
if this is something serious or just a little toy.

Scala: Not really a ML language: I think it's kind of fun to try to
emulate ocaml features or try to port ocaml apps to scala. The problem
is the actual work is never going to be finished. I have some concerns
the the runtime performance is unpredictable (no TCO, a lot of hacks
into the JVM)

Yeti: I like the language, but it is in a experimental stage

Nekoml: Supercool project, but the vm is not the fastest and jit runs
only on x86 platforms


So I guess the best thing would be to use good ol Ocaml in native mode...?

A last idea: What do you think about libjit? They claim that a jvm/clr
like runtime could be built in weeks. Wouldn't it be nice to have a
fast vm for Ocaml (ocamljit) ? Does someone has experience with this,
I think writing a fast vm is hard, but a fast vm for a functional
language is nearly impossible? Maybe OcamIL could then be used as a
model for a jit backend, since its MSIL output already runs on libjit
(DotGnu, alias pnet)




On Mon, May 10, 2010 at 11:53 PM, Jon Harrop
<jonathandeanharrop@googlemail.com> wrote:
>> A little off topic, but how is Mono/Unix these days? =A0Last I checked
>> (>2 years ago) it implemented the basic libraries and runtimes but had
> terrible
>> performance. =A0Is it now on par with Windows?
>
> Still leaks memory, has broken TCO and runs like a dog. Mono has also fal=
len
> even farther behind now that .NET 4 is out. However, they have at least
> stated that they intend to start trying to support F# on Mono. Then again=
,
> they stated about 6 years ago they were going to replace their crappy
> conservative GC with one that might actually work but they never managed =
to
> do that either...
>
> Cheers,
> Jon.
>
>
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>

