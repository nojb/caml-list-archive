Return-Path: <agarwal1975@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail1-relais-roc.national.inria.fr (mail1-relais-roc.national.inria.fr [192.134.164.82])
	by yquem.inria.fr (Postfix) with ESMTP id A9AD0BBAF
	for <caml-list@yquem.inria.fr>; Fri, 21 May 2010 15:55:16 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmMBABst9kvRVda2mGdsb2JhbACRWYxACBUBAQEBAQgJDAcRIq1OggKFLC6ITwEBAwWFDQQ
X-IronPort-AV: E=Sophos;i="4.53,278,1272837600"; 
   d="scan'208";a="59808305"
Received: from mail-iw0-f182.google.com ([209.85.214.182])
  by mail1-smtp-roc.national.inria.fr with ESMTP; 21 May 2010 15:55:15 +0200
Received: by iwn5 with SMTP id 5so1184346iwn.27
        for <caml-list@inria.fr>; Fri, 21 May 2010 06:55:15 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:received:mime-version:received:in-reply-to
         :references:from:date:message-id:subject:to:cc:content-type;
        bh=XjN9ZEWi6+K2rwgGitHPrqkHmLTZrPteInA1RdOORZg=;
        b=ZJgC2kMZXFRREa0yJLbiSsacZprfz9Ar8w0mGGrRCQrOLyGTP14cRbsYLToR3IliPs
         3W8Q0mk6Ave7HMjb4z2SBtUOr0cgQhi/TSwoXzVAjPJp5nX5y4i4+n/LffBpVHHSt77q
         bDAcH7/1CF9YVwXSNonz1aaXVE2sLUfcEkM0c=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:from:date:message-id:subject:to
         :cc:content-type;
        b=nq9pS4cYaICVdq3WRrBDkrmuEP8mFwoOM3aDHzRCwhGweJVxur85Q5MyguBkg1++r+
         ZJwR0pUFQXyl/1Pqzg6ldtVh9C+Y7Jwyitne+Y13S0OJsrxYDQF+soIzvrfUFDZYLwxK
         SDm76KUfuMb9F5qNszuyKCwjxCCXu3XS9zkAs=
Received: by 10.231.120.69 with SMTP id c5mr1040102ibr.79.1274450114244; Fri, 
	21 May 2010 06:55:14 -0700 (PDT)
MIME-Version: 1.0
Received: by 10.231.191.136 with HTTP; Fri, 21 May 2010 06:54:54 -0700 (PDT)
In-Reply-To: <AANLkTimFewf3sgsCZDJtXI-AzwR3Qh0feeVvugM3lrle@mail.gmail.com>
References: <AANLkTimIc_wUB68jg-1nb_0dkebrWsVBytRITWmiFczM@mail.gmail.com> 
	<AANLkTilcpwCpEVxYrIM7FWTjAR2SFq66ZALscca-rcN6@mail.gmail.com> 
	<AANLkTimFewf3sgsCZDJtXI-AzwR3Qh0feeVvugM3lrle@mail.gmail.com>
From: Ashish Agarwal <agarwal1975@gmail.com>
Date: Fri, 21 May 2010 09:54:54 -0400
Message-ID: <AANLkTilwL0e77aXR7xYL6rYZNp01IOlt9EzbtIA_3bbK@mail.gmail.com>
Subject: Re: [Caml-list] Private modules in packages
To: Hans Ole Rafaelsen <hrafaelsen@gmail.com>
Cc: Julien Signoles <julien.signoles@gmail.com>,
	Michael.Grunewald@laposte.net, caml-list@inria.fr
Content-Type: multipart/alternative; boundary=0016e647122657faa104871b0aae
X-Spam: no; 0.00; mli:01 mli:01 foo:01 rafaelsen:01 foo:01 signoles:01 signoles:01 rafaelsen:01 -pack:01 compilation:01 cmi:01 plug-ins:01 makefiles:01 compilation:01 beginner's:01 

--0016e647122657faa104871b0aae
Content-Type: text/plain; charset=ISO-8859-1

> write a script to generate the P.mli file

Why do you need Bar.mli and Foo.mli at all? Just write the P.mli only.


On Fri, May 21, 2010 at 5:51 AM, Hans Ole Rafaelsen <hrafaelsen@gmail.com>wrote:

> Thanks Michael and Julien,
>
> That did the trick. I manually inserted the content of the Bar.mli and
> Foo.mli into the P.mli file. Guess unless it is some way to include this
> automatically the best will be to write a script to generate the P.mli file
> automatically based on current version of Bar.mli and Foo.mli as part of the
> build process.
>
> --
> Hans Ole
>
>
> On Fri, May 21, 2010 at 10:53 AM, Julien Signoles <
> julien.signoles@gmail.com> wrote:
>
>> Hello,
>>
>> 2010/5/21 Hans Ole Rafaelsen <hrafaelsen@gmail.com>
>>
>> When packing a set of modules into a top module using -pack, is there a
>>> way to have some of the modules private to the package?
>>>
>>> If I have the modules Helper, Foo and Bar. Helper provides helper
>>> functions used by Foo and Bar. When I'm packing them into a top mudule P, I
>>> do not want to expose the functions of Helper to users of P.
>>>
>>> Is there some way to achieve this?  If not, do anyone know of other ways
>>> for packing libraries and keeping some of the modules private to the
>>> library?
>>>
>>
>> Just write yourself a file p.mli without your private modules:
>> === p.mli ===
>> module Foo : ...
>> module Bar : ...
>> ==========
>> Of course, you can not refer to signatures of modules Foo and Bar in
>> p.mli. Thus you have to duplicate them or, better, to write them somewhere
>> outside the package.
>>
>> From a compilation point of view, be sure to generate p.cmi by using p.mli
>> before generating the pack files p.cm[ox].
>>
>> We use such a trick in the Frama-C tool (http://frama-c.com) for
>> providing (usually empty) interfaces of its plug-ins. But I do not recommend
>> you to read the Frama-C Makefiles for looking at the corresponding
>> compilation lines (except if you are **very** motivated).
>>
>> Hope this helps,
>> Julien
>>
>
>
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>

--0016e647122657faa104871b0aae
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

&gt; write a script to generate the P.mli file<div><br></div><div>Why do yo=
u need Bar.mli and Foo.mli at all? Just write the P.mli only.</div><div><br=
><br><div class=3D"gmail_quote">On Fri, May 21, 2010 at 5:51 AM, Hans Ole R=
afaelsen <span dir=3D"ltr">&lt;<a href=3D"mailto:hrafaelsen@gmail.com">hraf=
aelsen@gmail.com</a>&gt;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex;">Thanks Michael and Julien,<br><br>That did =
the trick. I manually inserted the content of the Bar.mli and Foo.mli into =
the P.mli file. Guess unless it is some way to include this automatically t=
he best will be to write a script to generate the P.mli file automatically =
based on current version of Bar.mli and Foo.mli as part of the build proces=
s.<br>


<br>-- <br><font color=3D"#888888">Hans Ole</font><div><div></div><div clas=
s=3D"h5"><br><br><div class=3D"gmail_quote">On Fri, May 21, 2010 at 10:53 A=
M, Julien Signoles <span dir=3D"ltr">&lt;<a href=3D"mailto:julien.signoles@=
gmail.com" target=3D"_blank">julien.signoles@gmail.com</a>&gt;</span> wrote=
:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0pt 0pt 0pt 0.8ex;border-=
left:1px solid rgb(204, 204, 204);padding-left:1ex">
Hello,<br><br><div class=3D"gmail_quote">2010/5/21 Hans Ole Rafaelsen <span=
 dir=3D"ltr">&lt;<a href=3D"mailto:hrafaelsen@gmail.com" target=3D"_blank">=
hrafaelsen@gmail.com</a>&gt;</span><div><br><blockquote class=3D"gmail_quot=
e" style=3D"border-left:1px solid rgb(204, 204, 204);margin:0pt 0pt 0pt 0.8=
ex;padding-left:1ex">



When packing a set of modules into a top module using -pack, is there a way=
 to have some of the modules private to the package?<br><br>If I have the m=
odules Helper, Foo and Bar. Helper provides helper functions used by Foo an=
d Bar. When I&#39;m packing them into a top mudule P, I do not want to expo=
se the functions of Helper to users of P.<br>




<br>Is there some way to achieve this?=A0 If not, do anyone know of other w=
ays for packing libraries and keeping some of the modules private to the li=
brary?<br></blockquote></div><div><br>Just write yourself a file p.mli with=
out your private modules:<br>



=3D=3D=3D p.mli =3D=3D=3D<br>module Foo : ...<br>module Bar : ...<br>=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D<br>Of course, you can not refer to signatures of m=
odules Foo and Bar in p.mli. Thus you have to duplicate them or, better, to=
 write them somewhere outside the package.<br>



<br>From a compilation point of view, be sure to generate p.cmi by using p.=
mli before generating the pack files <a href=3D"http://p.cm" target=3D"_bla=
nk">p.cm</a>[ox].<br><br>We use such a trick in the Frama-C tool (<a href=
=3D"http://frama-c.com" target=3D"_blank">http://frama-c.com</a>) for provi=
ding (usually empty) interfaces of its plug-ins. But I do not recommend you=
 to read the Frama-C Makefiles for looking at the corresponding compilation=
 lines (except if you are **very** motivated).<br>



<br>Hope this helps,<br>Julien<br></div></div>
</blockquote></div><br>
</div></div><br>_______________________________________________<br>
Caml-list mailing list. Subscription management:<br>
<a href=3D"http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list" target=
=3D"_blank">http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list</a><br=
>
Archives: <a href=3D"http://caml.inria.fr" target=3D"_blank">http://caml.in=
ria.fr</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
<br></blockquote></div><br></div>

--0016e647122657faa104871b0aae--

