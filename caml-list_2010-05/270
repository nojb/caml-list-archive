Return-Path: <rathereasy@gmail.com>
X-Original-To: caml-list@yquem.inria.fr
Delivered-To: caml-list@yquem.inria.fr
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by yquem.inria.fr (Postfix) with ESMTP id 79007BC57
	for <caml-list@yquem.inria.fr>; Thu, 27 May 2010 05:37:53 +0200 (CEST)
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-Anti-Spam-Result: AmQDAH+F/UtKfVI0mGdsb2JhbACIRYkkMIwFCBUBAQEBAREMBxEisA6CAYVCLohPAQEDBYUOBA
X-IronPort-AV: E=Sophos;i="4.53,308,1272837600"; 
   d="scan'208";a="51274963"
Received: from mail-ww0-f52.google.com ([74.125.82.52])
  by mail3-smtp-sop.national.inria.fr with ESMTP; 27 May 2010 05:37:53 +0200
Received: by wwg30 with SMTP id 30so507146wwg.39
        for <caml-list@yquem.inria.fr>; Wed, 26 May 2010 20:37:52 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=gamma;
        h=domainkey-signature:mime-version:received:received:in-reply-to
         :references:date:message-id:subject:from:to:cc:content-type;
        bh=YIjCJ28gPFcZGYzu+TneMyC7XnyOy5mJEUXEdRelh9o=;
        b=S9NHAdcJ9DTr38JhEslSf1zFjn5QlSkcer2OBjgai0wyCRGvTC0jEBYA5NoVS4PzAO
         8L4Rz1YXRP9nQYdY/U5J2vnIabO4cb4tEQjVZV3XV/wmMphB9Qq+qJuB7alwMNhIfSNA
         sRNZ8vITs1WO1IDvcyDi+NrfkcwgqGGx5VMY8=
DomainKey-Signature: a=rsa-sha1; c=nofws;
        d=gmail.com; s=gamma;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :cc:content-type;
        b=c8vrjmMTqIYVkbgIZBzYBKIY82E8B9I8F6eyBBaVz06XLx2ishg+RlLwOHyo8XU2lK
         vDIwzqvubnQ9Z4fofpIakMiePvdEhumxL468ACuWpX/XhKoeeSaDYpnZwVHQq3Sb06A8
         V4iFUEDU/cGNBizCNdFCyn3U4qh0SS83frmfI=
MIME-Version: 1.0
Received: by 10.216.85.68 with SMTP id t46mr263520wee.75.1274931472318; Wed, 
	26 May 2010 20:37:52 -0700 (PDT)
Received: by 10.216.27.72 with HTTP; Wed, 26 May 2010 20:37:52 -0700 (PDT)
In-Reply-To: <AANLkTimoO4s4ufCPatanWi02vQgNwpUmEAggcdjdcrTf@mail.gmail.com>
References: <956439.81564.qm@web111506.mail.gq1.yahoo.com>
	<AANLkTimoO4s4ufCPatanWi02vQgNwpUmEAggcdjdcrTf@mail.gmail.com>
Date: Wed, 26 May 2010 23:37:52 -0400
Message-ID: <AANLkTinyHHP3G3or75nMi2vH5K-8BoBX5cruJ110qqT2@mail.gmail.com>
Subject: Re: [Caml-list] Static exception analysis or alternative to using 
	exceptions
From: Jacques Le Normand <rathereasy@gmail.com>
To: Hans Ole Rafaelsen <hrafaelsen@gmail.com>
Cc: Dario Teixeira <darioteixeira@yahoo.com>,
	caml-list@yquem.inria.fr
Content-Type: multipart/alternative; boundary=0016e6d645a885417e04878b1d81
X-Spam: no; 0.00; rafaelsen:01 monads:01 ocaml:01 runtime:01 stdlib:01 syntax:01 beginner's:01 ocaml:01 bug:01 rafaelsen:01 monads:01 runtime:01 stdlib:01 syntax:01 beginner's:01 

--0016e6d645a885417e04878b1d81
Content-Type: text/plain; charset=ISO-8859-1

Jane Street's Core seems to prefer options to exceptions

On Wed, May 26, 2010 at 5:10 PM, Hans Ole Rafaelsen <hrafaelsen@gmail.com>wrote:

>
>
> On Wed, May 26, 2010 at 7:30 PM, Dario Teixeira <darioteixeira@yahoo.com>wrote:
>
>> Hi,
>>
>> > What experience does people have to using alternatives to exceptions,
>> > such as option types or exception monads? Does use of third part
>> > libraries that still throws exceptions make such approaches hard to use?
>> > Performance wise it seems to be comparable to catching exceptions or
>> > matching for options, so I guess the difference be might a question of
>> > programming style?
>>
>> Partly yes, though I would say that in Ocaml it is tempting to use
>> exceptions beyond what is reasonable, because they are so cheap and
>> convenient.  As you noted, this can lead to trouble at runtime, which
>> is why some libraries discourage the "exceptional style", preferring
>> option types and forcing users to invoke functions suffixed by "_exc"
>> if they really want to use the exception-based version.
>>
>> Personally, I think the litmus test hinges on whether the supposedly
>> exceptional situation is truly worthy of the name.  If it's a common
>> occurrence, perhaps one should reconsider the use of an "exception".
>> Without meaning to start an holy war, let me just add that even on
>> the Stdlib there are functions (such as Map.S.find) that raise an
>> exception but which should perhaps return an option type.
>>
>> Btw, you didn't mention it explicitly in your message, but I trust you
>> are familiar with "Catch me if you can"? [1]
>>
> I have just read about it, not tested it yet. Do you have any experience
> using this library, especially together with other libraries that also
> provides syntax extension?
>
>
>>
>> Best regards,
>> Dario Teixeira
>>
>> [1]
>> http://dutherenverseauborddelatable.wordpress.com/downloads/exception-monads-for-ocaml/
>>
>>
>>
>>
>> Thanks,
>
> Hans Ole
>
> _______________________________________________
> Caml-list mailing list. Subscription management:
> http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list
> Archives: http://caml.inria.fr
> Beginner's list: http://groups.yahoo.com/group/ocaml_beginners
> Bug reports: http://caml.inria.fr/bin/caml-bugs
>
>

--0016e6d645a885417e04878b1d81
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Jane Street&#39;s Core seems to prefer options to exceptions<br><br><div cl=
ass=3D"gmail_quote">On Wed, May 26, 2010 at 5:10 PM, Hans Ole Rafaelsen <sp=
an dir=3D"ltr">&lt;<a href=3D"mailto:hrafaelsen@gmail.com">hrafaelsen@gmail=
.com</a>&gt;</span> wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex;"><br><br><div class=3D"gmail_quote"><div cla=
ss=3D"im">On Wed, May 26, 2010 at 7:30 PM, Dario Teixeira <span dir=3D"ltr"=
>&lt;<a href=3D"mailto:darioteixeira@yahoo.com" target=3D"_blank">darioteix=
eira@yahoo.com</a>&gt;</span> wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0pt 0pt 0pt 0.8ex;border-=
left:1px solid rgb(204, 204, 204);padding-left:1ex">
Hi,<br>
<br>
&gt; What experience does people have to using alternatives to exceptions,<=
br>
&gt; such as option types or exception monads? Does use of third part<br>
&gt; libraries that still throws exceptions make such approaches hard to us=
e?<br>
&gt; Performance wise it seems to be comparable to catching exceptions or<b=
r>
&gt; matching for options, so I guess the difference be might a question of=
<br>
&gt; programming style?<br>
<br>
Partly yes, though I would say that in Ocaml it is tempting to use<br>
exceptions beyond what is reasonable, because they are so cheap and<br>
convenient. =A0As you noted, this can lead to trouble at runtime, which<br>
is why some libraries discourage the &quot;exceptional style&quot;, preferr=
ing<br>
option types and forcing users to invoke functions suffixed by &quot;_exc&q=
uot;<br>
if they really want to use the exception-based version.<br>
<br>
Personally, I think the litmus test hinges on whether the supposedly<br>
exceptional situation is truly worthy of the name. =A0If it&#39;s a common<=
br>
occurrence, perhaps one should reconsider the use of an &quot;exception&quo=
t;.<br>
Without meaning to start an holy war, let me just add that even on<br>
the Stdlib there are functions (such as Map.S.find) that raise an<br>
exception but which should perhaps return an option type.<br>
<br>
Btw, you didn&#39;t mention it explicitly in your message, but I trust you<=
br>
are familiar with &quot;Catch me if you can&quot;? [1]<br></blockquote></di=
v><div>I have just read about it, not tested it yet. Do you have any experi=
ence using this library, especially together with other libraries that also=
 provides syntax extension?<br>

=A0</div><div class=3D"im"><blockquote class=3D"gmail_quote" style=3D"margi=
n:0pt 0pt 0pt 0.8ex;border-left:1px solid rgb(204, 204, 204);padding-left:1=
ex">
<br>
Best regards,<br>
Dario Teixeira<br>
<br>
[1] <a href=3D"http://dutherenverseauborddelatable.wordpress.com/downloads/=
exception-monads-for-ocaml/" target=3D"_blank">http://dutherenverseaubordde=
latable.wordpress.com/downloads/exception-monads-for-ocaml/</a><br>
<br>
<br>
<br>
<br>
</blockquote></div></div>Thanks,<br><font color=3D"#888888"><br>Hans Ole<br=
>
</font><br>_______________________________________________<br>
Caml-list mailing list. Subscription management:<br>
<a href=3D"http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list" target=
=3D"_blank">http://yquem.inria.fr/cgi-bin/mailman/listinfo/caml-list</a><br=
>
Archives: <a href=3D"http://caml.inria.fr" target=3D"_blank">http://caml.in=
ria.fr</a><br>
Beginner&#39;s list: <a href=3D"http://groups.yahoo.com/group/ocaml_beginne=
rs" target=3D"_blank">http://groups.yahoo.com/group/ocaml_beginners</a><br>
Bug reports: <a href=3D"http://caml.inria.fr/bin/caml-bugs" target=3D"_blan=
k">http://caml.inria.fr/bin/caml-bugs</a><br>
<br></blockquote></div><br>

--0016e6d645a885417e04878b1d81--

